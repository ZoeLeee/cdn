{"version":3,"file":"js/4740.cee2d805.js","mappings":"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","sources":["webpack:///./components/QueryPane/index.tsx","webpack:///./components/CardList/Recycle.tsx","webpack:///./views/list/Recycle.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { Paper, InputBase } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nconst SelfPaper = styled(Paper)(({ theme }) => ({\r\n  border: \"1px solid #E2E2E2\",\r\n  p: \"0 0 0 4px\",\r\n  display: \"inline-flex\",\r\n  alignItems: \"center\",\r\n  width: 400,\r\n  height: 36,\r\n  boxShadow: \"none\",\r\n  borderRadius: \"5px\",\r\n}));\r\n\r\nconst SearchPane = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  padding: \"0 3px\",\r\n  background: \"#075FB8\",\r\n  height: \"100%\",\r\n  width: 36,\r\n  color: \"#fff\",\r\n  borderRadius: \"0 5px 5px 0\",\r\n  cursor: \"pointer\",\r\n}));\r\n\r\nexport default function QueryPane(props) {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleClick = () => {\r\n    const { search } = props;\r\n    search && search(value);\r\n  };\r\n\r\n  const changeVal = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const keyEvent = (e) => {\r\n    if (e.keyCode !== 13) {\r\n      return;\r\n    }\r\n    handleClick();\r\n  };\r\n\r\n  return (\r\n    <SelfPaper>\r\n      <InputBase\r\n        sx={{ ml: 1, flex: 1 }}\r\n        placeholder=\"搜索\"\r\n        value={value}\r\n        onChange={changeVal}\r\n        onKeyUp={keyEvent}\r\n      />\r\n      <SearchPane onClick={handleClick}>\r\n        <SearchIcon />\r\n      </SearchPane>\r\n    </SelfPaper>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Card, CardContent, TablePagination } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\nimport { formatDate } from \"~/utils/utils\";\r\nimport { commonStore } from \"~/stores/commonStore\";\r\n\r\nconst CardPane = styled(\"div\")(({ theme }) => ({\r\n  padding: \"20px\",\r\n  display: \"grid\",\r\n  flexWrap: \"wrap\",\r\n  gridTemplateColumns: \"repeat(auto-fill, calc((100% - 25px * 3) / 4))\",\r\n  gridGap: \"25px 25px\",\r\n  \"& .projectCardItem\": {\r\n    width: \"100%\",\r\n    maxHeight: 300,\r\n    boxShadow: \"0px 0px 8px 0px rgba(0, 0, 0, 0.08)\",\r\n    borderRadius: \"5px\",\r\n    position: \"relative\",\r\n  },\r\n  \"& .activePane\": {\r\n    boxShadow: \"0px 0px 8px 0px rgba(7, 95, 184, 0.46)\",\r\n  },\r\n  \"& .activeIcon\": {\r\n    color: \"#1890ff\",\r\n  },\r\n  \"& .projectCardItem:hover\": {\r\n    boxShadow: \"0px 0px 8px 0px rgba(7, 95, 184, 0.46)\",\r\n    \"& .hover-icon\": {\r\n      color: \"#1890ff\",\r\n    },\r\n  },\r\n  \"& .MuiCardContent-root:last-child\": {\r\n    paddingBottom: \"16px\",\r\n  },\r\n}));\r\n\r\nconst CardIcon = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  width: \"100%\",\r\n  height: \"70%\",\r\n  \"& i\": {\r\n    fontSize: \"10em\",\r\n    color: \"rgb(255, 208, 129)\",\r\n  },\r\n}));\r\n\r\nconst FooterMenu = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"end\",\r\n  width: \"100%\",\r\n  height: \"30%\",\r\n  fontSize: \"16px\",\r\n  \"& div\": {\r\n    cursor: \"pointer\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    fontSize: \"14px\",\r\n  },\r\n  \"& i\": {\r\n    fontSize: \"16px\",\r\n    marginRight: \"5px\",\r\n  },\r\n}));\r\n\r\nconst NamePane = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  width: \"calc(100% - 32px)\",\r\n  height: \"15%\",\r\n  fontSize: \"14px\",\r\n  color: \"#fff\",\r\n  position: \"absolute\",\r\n  zIndex: 100,\r\n  background: \"rgba(0, 0, 0, .2)\",\r\n}));\r\n\r\nconst NoData = styled(\"div\")(({ theme }) => ({\r\n  textAlign: \"center\",\r\n  fontSize: \"14px\",\r\n  padding: \"20px 0\",\r\n  \"& img\": {\r\n    width: 300,\r\n    height: 300,\r\n  },\r\n  \"& p\": {\r\n    margin: 0,\r\n  },\r\n}));\r\n\r\ntype StateType = {\r\n  anchorEl: null | HTMLElement;\r\n  currentItem?: object;\r\n};\r\ntype propType = {\r\n  dataSource: Array<any>;\r\n  columns?: Array<any>;\r\n  handleClick?: Function;\r\n  ipagenation?: {\r\n    pageNum: number;\r\n    pageSize: number;\r\n    pageSizeOptions?: Array<number>;\r\n  };\r\n  handleChangePage?: Function;\r\n  handleChangeRowsPerPage?: Function;\r\n  add?: Function;\r\n  menuList?: Array<any>;\r\n  sx?: object;\r\n  total?: number;\r\n  keyFormat?: object;\r\n  menuClick?: (type: string, dataSourceItem: object) => void;\r\n  doubleClick?: (item: object, index: number) => void;\r\n};\r\ninterface CardList {\r\n  state: StateType;\r\n  props: propType;\r\n}\r\n\r\nconst defaultFormat = {\r\n  id: \"id\",\r\n  name: \"name\",\r\n  count: \"count\",\r\n  createdTime: \"createdTime\",\r\n  updatedTime: \"updatedTime\",\r\n  img: \"img\",\r\n  key: \"key\",\r\n};\r\n\r\nlet count = 0;\r\nclass CardList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      anchorEl: null,\r\n      currentItem: {},\r\n    };\r\n  }\r\n\r\n  handleClick = (type, record, index) => {\r\n    let { handleClick } = this.props;\r\n    handleClick && handleClick(type, record, index);\r\n  };\r\n\r\n  get open() {\r\n    return Boolean(this.state.anchorEl);\r\n  }\r\n\r\n  showMenu = (event: React.MouseEvent<HTMLDivElement>, item) => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n      currentItem: item,\r\n    });\r\n  };\r\n\r\n  closeMenu = () => {\r\n    this.setState({\r\n      anchorEl: null,\r\n    });\r\n  };\r\n\r\n  menuClick = (type, dataSourceItem) => {\r\n    const { menuClick } = this.props;\r\n    this.closeMenu();\r\n    menuClick && menuClick(type, dataSourceItem);\r\n  };\r\n\r\n  handleChangePage = (event: unknown, newPage: number) => {\r\n    let { handleChangePage } = this.props;\r\n    handleChangePage(newPage + 1);\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    let { handleChangeRowsPerPage } = this.props;\r\n    handleChangeRowsPerPage(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  renderItem = (dataItem, dataIndex) => {\r\n    const { keyFormat, menuClick } = this.props;\r\n    let format = Object.assign(defaultFormat, keyFormat || {});\r\n    return (\r\n      <CardContent sx={{ width: \"100%\", height: \"300px\", userSelect: \"none\" }}>\r\n        <CardIcon>\r\n          {dataItem[format.img] &&\r\n          this.validateImage(\r\n            commonStore.prefix +\r\n              dataItem[format.key] +\r\n              \"/\" +\r\n              dataItem[format.img]\r\n          ) ? (\r\n            <img\r\n              src={`${commonStore.prefix}${dataItem[format.key]}/${\r\n                dataItem[format.img]\r\n              }?t=${new Date().getTime()}`}\r\n              style={{ height: \"100%\" }}\r\n            />\r\n          ) : (\r\n            <img src=\"/static/images/bg.png\" />\r\n          )}\r\n        </CardIcon>\r\n        <NamePane>\r\n          <p>{dataItem.name}</p>\r\n        </NamePane>\r\n        <FooterMenu>\r\n          <div onClick={(event) => menuClick && menuClick(\"recycle\", dataItem)}>\r\n            <i className=\"iconfont icon-3Dshuaxin\"></i>点击恢复\r\n          </div>\r\n        </FooterMenu>\r\n      </CardContent>\r\n    );\r\n  };\r\n\r\n  clickCard = (item, index) => {\r\n    const { handleClick, doubleClick } = this.props;\r\n    count += 1;\r\n    setTimeout(() => {\r\n      if (count === 1) {\r\n        handleClick && handleClick(item, index);\r\n      } else if (count === 2) {\r\n        doubleClick && doubleClick(item, index);\r\n      }\r\n      count = 0;\r\n    }, 300);\r\n  };\r\n\r\n  validateImage = (url) => {\r\n    let xmlHttp = new XMLHttpRequest();\r\n    xmlHttp.open(\"Get\", url, false);\r\n    xmlHttp.send();\r\n    if (xmlHttp.status == 404) return false;\r\n    else return true;\r\n  };\r\n\r\n  render() {\r\n    let { dataSource, ipagenation, add, sx, total } = this.props;\r\n    return (\r\n      <>\r\n        <CardPane sx={sx}>\r\n          {dataSource &&\r\n            dataSource.map((dataItem, dataIndex) => {\r\n              return (\r\n                <Card\r\n                  className=\"projectCardItem\"\r\n                  key={dataIndex}\r\n                  onClick={() => this.clickCard(dataItem, dataIndex)}\r\n                >\r\n                  {this.renderItem(dataItem, dataIndex)}\r\n                </Card>\r\n              );\r\n            })}\r\n        </CardPane>\r\n        {ipagenation && total > 0 ? (\r\n          <TablePagination\r\n            rowsPerPageOptions={ipagenation.pageSizeOptions}\r\n            component=\"div\"\r\n            count={total}\r\n            rowsPerPage={ipagenation.pageSize}\r\n            page={ipagenation.pageNum > 0 ? ipagenation.pageNum - 1 : 0}\r\n            onPageChange={this.handleChangePage}\r\n            onRowsPerPageChange={this.handleChangeRowsPerPage}\r\n            labelRowsPerPage=\"每页条数：\"\r\n            labelDisplayedRows={({ from, to, count }) => {\r\n              return `${from}–${to} 共 ${count !== -1 ? count : `更多${to}`}条`;\r\n            }}\r\n          />\r\n        ) : null}\r\n        {!dataSource || dataSource.length === 0 ? (\r\n          <NoData>\r\n            <img src=\"/static/images/nodata.svg\" />\r\n            <p>暂无数据</p>\r\n          </NoData>\r\n        ) : null}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardList;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Box, Tabs, Tab } from \"@mui/material\";\r\n\r\nimport CardList from \"~/components/CardList/Recycle\";\r\nimport QueryPane from \"~/components/QueryPane\";\r\n\r\nimport { httpAction, getAction, deleteAction } from \"~/apis/manage\";\r\nimport { message } from \"~/utils/message\";\r\n\r\nconst SlefBox = styled(Box)(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  padding: \"0 20px\",\r\n}));\r\n\r\nconst url = {\r\n  list: \"editor/hcProjectApp/getHcProjectAppList\",\r\n  add: \"editor/hcProjectApp/createHcProjectApp\",\r\n  edit: \"editor/hcProjectApp/updateHcProjectApp\",\r\n  delete: \"editor/hcProjectApp/deleteHcProjectApp\",\r\n  project: \"editor/hcProject/findHcProject\",\r\n};\r\n\r\nconst categoryList = [\r\n  {\r\n    label: \"项目\",\r\n    value: \"M0001\",\r\n  },\r\n  {\r\n    label: \"场景\",\r\n    value: \"M0002\",\r\n  },\r\n  {\r\n    label: \"组件\",\r\n    value: \"M0003,M0004\",\r\n  },\r\n];\r\n\r\nexport default function Recycle(props) {\r\n  const [dataSource, setDataSource] = useState([\r\n    {\r\n      name: \"yyyyy\",\r\n    },\r\n  ]);\r\n  const [ipagenation, setIpagenation] = useState({\r\n    pageNum: 0,\r\n    pageSize: 5,\r\n    pageSizeOptions: [5, 10],\r\n  });\r\n  const [tabValue, setTabValue] = useState(\"M0001\");\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const cardMenuClick = (type, item) => {};\r\n\r\n  const handleChangePage = (page) => {\r\n    setIpagenation({\r\n      pageNum: page,\r\n      pageSize: ipagenation.pageSize,\r\n      pageSizeOptions: ipagenation.pageSizeOptions,\r\n    });\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    setIpagenation({\r\n      pageNum: 0,\r\n      pageSize: rowsPerPage,\r\n      pageSizeOptions: ipagenation.pageSizeOptions,\r\n    });\r\n  };\r\n\r\n  const search = (val) => {\r\n    setInputValue(val);\r\n    getList({ name: val });\r\n  };\r\n\r\n  const changeTab = (obj, value) => {\r\n    setTabValue(value);\r\n    getList({ category: value });\r\n  };\r\n\r\n  const getList = (formData?: {}) => {\r\n    let params = {\r\n      page: ipagenation.pageNum,\r\n      limit: ipagenation.pageSize,\r\n      category: tabValue,\r\n      name: inputValue,\r\n      ...formData,\r\n    };\r\n    getAction(url.list, params)\r\n      .then((res) => {\r\n        if (res[\"code\"] === 0) {\r\n          let { list, total } = res.data;\r\n          if (list && list.length > 0) {\r\n            setDataSource(list);\r\n            setTotal(total);\r\n          } else {\r\n            setDataSource([]);\r\n            setTotal(0);\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // useEffect(() => {}, []);\r\n\r\n  return (\r\n    <>\r\n      <SlefBox>\r\n        <Tabs value={tabValue} onChange={changeTab}>\r\n          {categoryList &&\r\n            categoryList.map((item, index) => (\r\n              <Tab key={index} label={item.label} value={item.value} />\r\n            ))}\r\n        </Tabs>\r\n        <QueryPane search={search}></QueryPane>\r\n      </SlefBox>\r\n      <CardList\r\n        dataSource={dataSource}\r\n        handleClick={cardMenuClick}\r\n        ipagenation={ipagenation}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n      ></CardList>\r\n    </>\r\n  );\r\n}\r\n"],"names":["SelfPaper","styled","Paper","theme","border","p","display","alignItems","width","height","boxShadow","borderRadius","SearchPane","justifyContent","padding","background","color","cursor","QueryPane","props","value","setValue","useState","handleClick","search","sx","ml","flex","placeholder","onChange","e","target","onKeyUp","keyCode","onClick","CardPane","flexWrap","gridTemplateColumns","gridGap","maxHeight","position","paddingBottom","CardIcon","fontSize","FooterMenu","marginRight","NamePane","zIndex","NoData","textAlign","margin","defaultFormat","id","name","count","createdTime","updatedTime","img","key","CardList","React","constructor","super","type","record","index","this","showMenu","event","item","setState","anchorEl","currentTarget","currentItem","closeMenu","menuClick","dataSourceItem","handleChangePage","newPage","handleChangeRowsPerPage","renderItem","dataItem","dataIndex","keyFormat","format","CardContent","userSelect","validateImage","commonStore","src","Date","getTime","style","className","clickCard","doubleClick","url","xmlHttp","XMLHttpRequest","open","send","status","state","Boolean","render","dataSource","ipagenation","add","total","Card","TablePagination","rowsPerPageOptions","pageSizeOptions","component","rowsPerPage","pageSize","page","pageNum","onPageChange","onRowsPerPageChange","labelRowsPerPage","labelDisplayedRows","from","to","length","SlefBox","Box","categoryList","label","Recycle","setDataSource","setIpagenation","tabValue","setTabValue","inputValue","setInputValue","setTotal","getList","formData","params","limit","category","getAction","then","res","list","data","catch","err","Tabs","obj","Tab","val"],"sourceRoot":""}