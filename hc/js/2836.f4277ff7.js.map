{"version":3,"file":"js/2836.f4277ff7.js","mappings":"gSAcMA,GAAkBC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAe,EAAGE,YAAH,CACrC,2BAA4B,CAC1BC,QAASD,EAAME,QAAQ,IAEzB,2BAA4B,CAC1BD,QAASD,EAAME,QAAQ,QAUrBC,EAAwBC,IAC5B,MAAM,SAAEC,EAAF,QAAYC,GAAsBF,EAAVG,GAA9B,OAAwCH,EAAxC,GAEA,OACE,gBAAC,KAAD,QAAaI,GAAI,CAAEC,EAAG,EAAGC,EAAG,EAAGC,OAAQ,SAAcJ,GAClDF,EACAC,EACC,gBAAC,IAAD,CACE,aAAW,QACXM,QAASN,EACTE,GAAI,CACFK,SAAU,WACVC,MAAO,EACPC,IAAK,EACLC,MAAQhB,GAAUA,EAAMiB,QAAQC,KAAK,OAGvC,gBAAC,IAAD,OAEA,OAKJC,EAAkBf,GAEpB,gBAAC,IAAD,CACEgB,OAAO,0BACPC,OAAQ,oCAER,gBAAC,IAAUjB,IAmFjB,EA9DsC,EACpCkB,QACAC,UACAC,OACAnB,WACAoB,SACAC,SACAC,YACAnB,KACAoB,SACAC,aACAC,WACAC,kBAEA,MAAMC,EAAc,KAClBD,GAAeA,KAMjB,OACE,gBAAClC,EAAD,CAEEoC,KAAMV,EACNW,SAAUV,EACVG,UAAWA,EACXR,eAAgBA,EAChB,kBAAgB,0BAEfM,GAGC,gBAACtB,EAAD,CAAsBgC,GAAG,yBAAyB7B,QAAS0B,GACxDV,GAGL,gBAAC,IAAD,CACEd,GAAI,CAEFoB,OAAS,IAAEA,EAASA,EAAS,KAAO,SAEtCQ,UAAQ,GAEP/B,GAEFwB,EAAa,KACZ,gBAAC,IAAD,KACGH,GAGC,gCACE,gBAAC,IAAD,CAAQd,QAASoB,GAAjB,gBACA,gBAAC,IAAD,CAAQpB,QAnCH,KACfkB,GAAYA,MAkCF,qB,+ECtHd,MAkCA,EAlCqC,EACnCO,QACAC,aACAC,eACAC,0BAEA,MAAM,QAAEC,EAAF,SAAWC,EAAX,gBAAqBC,GAAoBL,EAW/C,OACE,gBAAC,IAAD,CACEM,mBAAoBD,GAAmB,GACvCE,UAAU,MACVC,MAAOT,EACPU,YAAaL,EACbM,KAAMP,EAAU,EAAIA,EAAU,EAAI,EAClCF,aAhBe,CAACU,EAAgBC,KAClCX,GAAgBA,EAAaW,EAAU,IAgBrCV,oBAbuBS,IACzBT,GACEA,EAAoB,IAASS,EAAME,OAAOC,MAAO,MAYjDC,iBAAiB,iCACjBC,mBAAoB,EAAGC,OAAMC,QACnB,GAAED,UAAQC,YAAQC,KAAKC,KAAKrB,EAAQK,aAAeL,c,i5BCAnE,MAAMsB,GAAS7D,EAAAA,EAAAA,IAAO,MAAPA,EAAc,EAAGE,YAAH,CAC3B4D,UAAW,SACXC,SAAU,OACV5D,QAAS,SACT,QAAS,CACP6D,MAAO,IACPlC,OAAQ,KAEV,MAAO,CACLmC,OAAQ,OAINC,GAAgBlE,EAAAA,EAAAA,IAAOmE,EAAAA,EAAPnE,EAAkB,EAAGE,YAAH,CACtCC,QAAS,WA4OX,EAzOqC,EACnCiE,UACAC,aACAC,SACAC,cACAC,mBACAC,0BACAC,kBACAC,gBACAC,iBACAC,aACAC,aACAvC,YAEA,MAAOwC,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,IAuDnCC,EAAmB,CAACC,EAAMC,KAC9B,IAAIC,GAAWF,EAAKC,GAChBE,EAAcC,KAAKC,MAAM,IAAeT,IAC5CO,EAAYF,GAAUC,EAEtBL,EAAYM,GACZT,GAAcA,EAAWQ,EAASD,IAG9BK,EAAmB,CAACtC,EAAOuC,EAAKC,KACpC,IAAIC,EAAUzC,EAAME,OAAOuC,QACvBC,EAAqB,GACvBC,EAAmB,GACrB,GAAKJ,GAAQC,EAIX,GAAIC,EACFC,EAAqB,IAAInB,EAAiBgB,GAC1CI,EAAmB,IAAInB,EAAegB,OACjC,CACLE,EAAqB,IAAInB,GACzBoB,EAAmB,IAAInB,GACvB,IAAIoB,EAAQ,IAAAF,GAAkB,KAAlBA,EAA2BH,GACvC,IAAAG,GAAkB,KAAlBA,EAA0BE,EAAO,GACjC,IAAAD,GAAgB,KAAhBA,EAAwBC,EAAO,QAXjCF,EAAqBD,EAAUI,IAAiBC,QAAU,GAC1DH,EAAmBF,EAAUI,IAAiBE,KAAO,GAavDtB,GAAkBA,EAAeF,EAAiBC,IAG9CqB,EAAiB,KAAM,MAC3B,IAAIG,EAAW5B,EAAY5B,QAAU4B,EAAY3B,SAC/CwD,EACE7B,EAAY5B,QAAU4B,EAAY3B,SAAW2B,EAAY3B,SAK7D,MAAO,CACLsD,KALS,IAAA7B,GAAU,KAAVA,EAAiB8B,EAAUC,GAMpCH,QALY,UAAA5B,GAAU,KAAVA,EAAiB8B,EAAUC,IAA3B,QAAwCT,GAC7CA,EAAKrB,OA4HhB,MAvDoB,MAClB,MAAM+B,EAAc/B,GAAU,KAC9B,OACE,gBAAC,IAAD,CAAO5D,GAAI,CAAEsD,MAAO,OAAQsC,GAAI,EAAGxE,OAAQ,OAAQyE,SAAU,SAC3D,gBAAC,IAAD,CACE7F,GAAE,GACAsD,MAAO,OACPuC,SAAU,OACVzE,OAAQ,OACR0E,UAAW,KACP1B,GAAc,KAGpB,gBAAC,IAAD,CAAO,aAAW,eAAepE,GAAI,CAAE+F,UAAW,SAChD,gBAAC,IAAD,KAAYrC,EA7KCsC,KACrB,IAAIP,EAAW5B,EAAY5B,QAAU4B,EAAY3B,SAC/CwD,EACE7B,EAAY5B,QAAU4B,EAAY3B,SAAW2B,EAAY3B,SACzD+D,EAAS,IAAAtC,GAAU,KAAVA,EAAiB8B,EAAUC,GAAQO,OAChD,OACE,gBAAC,IAAD,KACGjC,EACC,gBAACR,EAAD,CAAewB,KAAKkB,EAAAA,EAAAA,KAAWzG,QAAQ,YACrC,gBAAC,IAAD,CACEe,MAAM,UACN0E,QACElB,EAAgBiC,OAAS,GAAKjC,EAAgBiC,SAAWA,EAE3DE,SAAW1D,GAAUsC,EAAiBtC,EAAO,KAAM,MACnD2D,cACEpC,EAAgBiC,OAAS,GAAKjC,EAAgBiC,OAASA,KAO3D,KACH,IAAAD,GAAI,KAAJA,GAAUf,GACT,IAAAA,GACE,gBAACzB,EAAD,CACEwB,IAAKC,EAAKD,IACVqB,MAAOpB,EAAKoB,MAAQpB,EAAKoB,MAAQ,OACjCC,cAAejC,EAAW,OAAS,MACnCjE,QAAS,IAAMoE,EAAiBH,EAAUY,EAAKD,MAE/C,gBAAC,IAAD,CAAgBuB,UAAWlC,EAASY,EAAKD,KAAO,OAAS,OACtDC,EAAKnE,OAER,gBAAC,IAAD,CAAKuB,UAAU,OAAOrC,GAAIwG,EAAAA,GAEvB,sBAIL,gBAAChD,EAAD,CACEwB,IAAKC,EAAKD,IACVqB,MAAOpB,EAAKoB,MAAQpB,EAAKoB,MAAQ,QAEhCpB,EAAKnE,WAgIc2F,CAAc/C,GAAW,MAC/C,gBAAC,IAAD,KACGC,GACC,IAAAA,GAAU,KAAVA,GAAe,CAAC+C,EAAKrB,KACnB,uBAAC,IAAD,CACEL,IAAK0B,EAAIf,KAAgBO,EAAAA,EAAAA,KACzBlG,GAAI,CAAE,mCAAoC,CAAE2G,OAAQ,KAEnD3C,EACC,gBAACR,EAAD,CAAewB,KAAKkB,EAAAA,EAAAA,KAAWzG,QAAQ,YACrC,gBAAC,IAAD,CACEe,MAAM,UACN0E,SAnCLvD,EAmCwB+E,EAAI/E,GAnCxBiF,EAmC4B5C,IAlCvC,IAAA4C,GAAG,KAAHA,GAAU3B,GAASA,IAAStD,KAmChBwE,SAAWU,GAAM9B,EAAiB8B,EAAGH,EAAI/E,GAAI+E,MAG/C,KA3FG,EAACI,EAAMzB,KAC9B,IAAI0B,EAAU,GAEVC,EAAW,IAAYF,GAC3B,IAAK,IAAIG,KAAWvD,EAClB,GAAIuD,EAAQC,OAAQ,CAClB,IAAIC,EAAO,GACD,IAAAH,GAAQ,KAARA,GAAehC,GAAQA,IAAQiC,EAAQjC,QAE/CmC,EAAOL,EAAKG,EAAQjC,MAEtB+B,EAAQK,KACN,gBAAC5D,EAAD,CACEwB,KAAKkB,EAAAA,EAAAA,KACLG,MAAOY,EAAQZ,MAAQY,EAAQZ,MAAQ,QAEtCY,EAAQC,OAAOC,EAAML,EAAMzB,UAItB,IAAA2B,GAAQ,KAARA,GAAehC,GAAQA,IAAQiC,EAAQjC,MAE/C+B,EAAQK,KACN,gBAAC5D,EAAD,CACEwB,IAAKiC,EAAQjC,IACbqB,MAAOY,EAAQZ,MAAQY,EAAQZ,MAAQ,QAEtCS,EAAKG,EAAQjC,OAIlB+B,EAAQK,KACN,gBAAC5D,EAAD,CACEwB,KAAKkB,EAAAA,EAAAA,KACLG,MAAOY,EAAQZ,MAAQY,EAAQZ,MAAQ,UAMjD,OAAOU,GAoDUM,CAAiBX,EAAKrB,IAxCvB,IAAC1D,EAAIiF,OA6Cd/C,GAAehC,EAAQ,EACtB,gBAAC,IAAD,CACEC,WAAY+B,EACZhC,MAAOA,EACPE,aAAc+B,EACd9B,oBAAqB+B,IAErB,KACFJ,GAAoC,IAAtBA,EAAWsC,OAKvB,KAJF,gBAAC9C,EAAD,KACE,uBAAKmE,IAAI,8BACT,yDAQLC,K,+HC9RIC,EAAsD,IAG7D,IAH8D,SAClE3H,GAEI,EADD4H,GACC,YACJ,OACE,gBAACC,EAAA,GAAD,QAAWhG,UAAU,EAAOiG,gBAAc,GAAKF,GAC5C5H,I,2TCSP,MA2CA,EA3C4C,EAC1CC,UACA8H,YACAC,WACAC,aAAa,OAEb,MAAOC,EAAUC,IAAezD,EAAAA,EAAAA,UAASuD,GAKnCG,EAAgBC,gBACCN,EAAUG,IACnBjI,KAQd,OACE,gBAACP,EAAA,EAAD,CAAQkC,MAAI,EAAC3B,QAASA,GACpB,gBAACqI,EAAA,EAAD,KAAcN,EAAW,2BAAS,4BAClC,gBAACO,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAaC,QAAQ,YACnB,gBAACC,EAAA,EAAD,CAAYC,QAAQ,oBAApB,4BACA,gBAACC,EAAA,EAAD,CACE9G,GAAG,mBACHiB,MAAOmF,EACP5B,SAvBYU,IACpBmB,EAAYnB,EAAElE,OAAOC,QAuBb8F,WAhBc7B,IACQ,KAA1BA,EAAE8B,YAAYC,SAEhBX,SAiBA,gBAACY,EAAA,EAAD,KACE,gBAAC,IAAD,CAAQrI,MAAM,UAAUJ,QAAS6H,GAAjC,mB,eC7BR,MAAMa,EAAaC,EAAAA,EA6JnB,GAAeC,EAAAA,EAAAA,KA3Ja,KAC1B,MAAM,UAAEC,EAAF,UAAaC,IAAcC,EAAAA,EAAAA,MAC3B,aAAEC,EAAF,cAAgBC,IAAkBC,EAAAA,EAAAA,MACjCC,EAAOC,IAAYjF,EAAAA,EAAAA,UAAS,CAAE9C,MAAM,EAAOgI,KAAM,OA4ExD,OA9BAC,EAAAA,EAAAA,YAAU,KACRL,EAAcM,EAAAA,EAAAA,OACd,MAAMC,EAAM,IAAI,IAAJ,CAAQC,SAASC,MACvBC,EAAYH,EAAII,aAAaC,IAAI,aACjCtI,EAAKiI,EAAII,aAAaC,IAAI,MAE1BC,EAAON,EAAII,aAAaC,IAAI,QAE9BC,KACFC,EAAAA,EAAAA,IAAiBC,EAAAA,GAAAA,SAAoB,CACnCC,OAAQ,CAAEC,aAAcJ,KACvBK,MAAMC,IACP,GAAIA,EAAUN,OAASO,EAAAA,GAAAA,GAAmB,CACxC,MAAMC,EAASF,EAAU1D,KACzB0C,EAAS,CAAE/H,MAAM,EAAMgI,KAAMiB,SAGjCC,EAAAA,EAAAA,IAAed,SAASC,KAAM,QAAQ,IAGxC,iBACQc,EAAAA,EAAAA,MACFb,UACIb,EAAU2B,YAAYd,EAAYe,OAAOf,QAAagB,SACtD,QAAY,CAACC,EAAAA,EAAAA,SACfrJ,GAAIsH,EAAUgC,KAAKH,OAAOnJ,MALlC,KAQC,IAGD,gBAAC,aAAD,CACEiB,MAAO,CACLoI,YAAaA,EAAAA,IAGf,gBAAClC,EAAD,CACExF,MAAO,IACP4H,SAAU,IACVxJ,SAAU,IACVyJ,OAAQ,CACN5K,KAAK,EACLD,OAAO,EACP8K,QAAQ,EACRC,MAAM,EACNC,UAAU,EACVC,aAAa,EACbC,YAAY,EACZC,SAAS,GAEXC,aAAc,CAAC7E,EAAGN,EAAWoF,EAAKC,KAChCC,EAAAA,EAAAA,OAAAA,YAGF,gBAACC,EAAA,EAAD,CACEnK,GAAG,YACH3B,GAAI,CACF+L,SAAU,OACVb,SAAU,IACVc,QAAS,OACTtK,SAAU,IACVuK,KAAM,EACN7K,OAAQ,OACR8K,WAAY,sBAGb,IAAAC,EAAAA,GAAI,KAAJA,EAAAA,GACEC,IACEA,EAAEC,QACD,gBAAC,IAAD,CACEzJ,MAAOwG,EACPkD,aAAcF,EAAEzK,GAChBqD,IAAKoH,EAAEzK,GACP4K,MAAO,CACLN,KAAM,EACNf,SAAU,EACV9J,OAAQ,OACRyE,SAAU,SAGXuG,EAAE/J,eAMf,gBAAC,IAAD,CACEZ,KAAM8H,EAAM9H,KACZ+K,KAAMjD,EAAME,KACZ3J,QArIiB,KACrB0J,EAAS,CAAE/H,MAAM,EAAOgI,KAAM,OAC9BgD,QAAQC,IAAI,IAoIR1B,YAAaA,EAAAA,EACb/B,UAAWA,EACX0D,aAAW,EACXC,UApIe1E,UACnBsB,EAAS,CAAE/H,MAAM,EAAOgI,KAAM,QAC9BoD,EAAAA,EAAAA,IAAkB,YAAa9C,SACzBb,EAAU2B,YAAYC,OAAOf,UAC7B,QAAY,CAACiB,EAAAA,EAAAA,YAkIhB/B,EAAU6D,aACT,gBAAC,EAAD,CACEhN,QAjIY,KAClBmJ,EAAU8D,cAiIJlF,WAAYoB,EAAU+D,WAAWrL,GACjCmG,WAAYmB,EAAU+D,WAAWC,KACjCrF,UAjIeqF,GAChBA,EAKDhE,EAAU+D,WAAWrL,GAChBsH,EAAUiE,eAAeD,EAAMhE,EAAU+D,WAAWrL,IAEpDsH,EAAUkE,QAAQF,GAAM1C,MAAM5I,IACnC,IAAKA,EAAI,OAAO,EAChByL,EAAAA,EAAAA,QAAgB,wCAChB,MAAMC,GAASC,EAAAA,EAAAA,IACbzD,SAASC,KACT,KACAnI,EAAG4L,YASL,OAPAd,QAAQe,aACN,CACEC,KAAMJ,GAER,GACAA,IAEK,MAtBTD,EAAAA,EAAAA,MAAc,0CACP,S,6gBCAb,MAAMtE,GAAaC,EAAAA,EAGb2E,GAAwB,CAAC,eAAM,SAAU,iCAAS,iBAEjCpO,EAAAA,GAAAA,GAAOqO,GAAAA,EAAPrO,EAAiB,EAAGE,YAAH,CACtC,CAAE,MAAKoO,GAAAA,EAAAA,WAA4B,CACjC,4DAA6D,CAC3DC,gBAAkB,YAGtB,CAAE,MAAKD,GAAAA,EAAAA,SAA0B,CAC/BE,UAAW,IACX/H,UAAW,YAyCf,IAGIgI,GAHAC,IAAc,EACdC,IAAS,EAGTC,GAAmB,GAEvB,MAmbA,GAnbyDtO,IACvD,MAAO6B,EAAM0M,IAAW5J,EAAAA,EAAAA,WAAS,IAC1B6J,EAAMC,IAAW9J,EAAAA,EAAAA,UAAS,KAC1B+J,EAAWC,IAAgBhK,EAAAA,EAAAA,UAAmB,IAC/CiK,GAAQC,EAAAA,EAAAA,QAAoB,OAC3BC,EAAWC,IAAgBpK,EAAAA,EAAAA,UAAsB,IAAI,QACrDqK,EAAaC,IAAkBtK,EAAAA,EAAAA,UAAsB,IAAI,QACzDuK,EAAeC,IAAoBxK,EAAAA,EAAAA,UAAsB,IAAI,QAC9D,SAAEyK,IAAaC,EAAAA,EAAAA,MA+FfC,EAAO,CAACC,EAAUC,EAAAA,GAAAA,QAAAA,SAAAA,cACtB,MAAMC,EAAU,GACVX,EAAY,IAAI,MAChBE,EAAc,IAAI,MAClBU,EAAU,IAAI,MACpB,IAAK,MAAMC,KAAUJ,EAAS,CAC5B,GAAII,EAAOC,QAAS,SACpB,GAAID,aAAkBE,GAAAA,YAAAA,YAAyB,SAC/C,GAAIF,aAAkBG,GAAAA,MAAO,SAC7B,GAAIH,aAAkBI,GAAAA,QAAUJ,EAAOK,QAAS,SAEhD,IAGIC,EACAhQ,EAJAiQ,GAAc,EACdC,GAAU,EACVC,GAAU,EA6BqB,MAAnC,IAxBET,aAAkBU,GAAAA,gBAClBV,aAAkBW,GAAAA,uBAElBJ,GAAc,EACdC,GAAU,EACVC,GAAU,EACVH,EAAOM,GAAAA,EACPb,EAAQc,IAAIb,EAAOc,KAGjBd,aAAkBI,GAAAA,SACpBE,EAAOS,GAAAA,EACHf,EAAOgB,UACTV,EAAOW,GAAAA,IAIPjB,aAAkBkB,GAAAA,UACpBZ,EAAOa,GAAAA,GAELnB,aAAkBoB,GAAAA,UACpBd,EAAOe,GAAAA,GAGLrB,aAAkBsB,GAAAA,YACpBhB,EAAOiB,GAAAA,EACPjR,EAAWqP,EAAK,MAAAK,EAAOwB,SAAP,QAAoBC,GAAMA,EAAEC,UAG1C,aAAc1B,EACXA,EAAM,UACTb,EAAU0B,IAAIb,EAAOc,IAGvBP,GAAc,EAGZ,eAAgBP,EACbA,EAAM,YACTX,EAAYwB,IAAIb,EAAOc,IAGzBN,GAAU,EAGZV,EAAQjI,KAAK,CACX8J,MAAO3B,EAAO4B,KACdxP,GAAI4N,EAAOc,GACXd,SACAO,cACAC,UACAC,UACAH,OACAhQ,aAGJ8O,EAAaD,GACbG,EAAeD,GACfP,EAAQgB,GACRN,EAAiBO,GACjBpB,GAAYmB,GAoBR+B,EAAkBvK,IACtBuI,EAAAA,GAAAA,QAAAA,OAAAA,cAAAA,aAA6C,GACzC,KAAA1B,IAAqB,KAArBA,IAA4B2D,IAAD,aAAS,OAAAxK,EAAEyK,aAAF,OAAuBD,OAC7DnC,KAgHJ,OA5GAxF,EAAAA,EAAAA,YAAU,KACR,IAAI6H,EAA0B,GAsG9B,OApGAC,EAAAA,GAAAA,KACE,MAAQpC,EAAAA,GAAAA,UACR,KACEF,IAEAqC,EAAQnK,MACNqK,EAAAA,GAAAA,KACErC,EAAAA,GAAAA,QAAAA,SAAAA,WACAA,EAAAA,GAAAA,QAAAA,SAAAA,WAAAA,aACCvI,IACKoH,IAAQiB,QAGhBuC,EAAAA,GAAAA,KACErC,EAAAA,GAAAA,QAAAA,SAAAA,WACAA,EAAAA,GAAAA,QAAAA,SAAAA,WAAAA,aACCvI,IACKoH,IAAQiB,QAGhBuC,EAAAA,GAAAA,KACErC,EAAAA,GAAAA,QAAAA,SAAAA,SACAA,EAAAA,GAAAA,QAAAA,SAAAA,SAAAA,aACCvI,IACKoH,IAAQiB,QAGhBuC,EAAAA,GAAAA,KACErC,EAAAA,GAAAA,QAAAA,SAAAA,SACAA,EAAAA,GAAAA,QAAAA,SAAAA,SAAAA,aACCvI,IACKoH,IAAQiB,QAGhBuC,EAAAA,GAAAA,KACErC,EAAAA,GAAAA,QAAAA,SAAAA,oBACAA,EAAAA,GAAAA,QAAAA,SAAAA,oBAAAA,aACCvI,IACKoH,IAAQiB,QAGhBuC,EAAAA,GAAAA,KACErC,EAAAA,GAAAA,QAAAA,SAAAA,WACAA,EAAAA,GAAAA,QAAAA,SAAAA,WAAAA,aACCvI,IACKoH,IAAQiB,OAGhBE,EAAAA,GAAAA,QAAAA,GAAe,cAAc,KACvBnB,IAAQiB,OAEdE,EAAAA,GAAAA,QAAAA,GAAe,kBAAkB,KAC3BnB,IAAQiB,OAEdE,EAAAA,GAAAA,QAAAA,GAAe,UAAU,KAEnBnB,IAAQiB,OAEdE,EAAAA,GAAAA,QAAAA,GAAe,aAAa,KAC1BnB,IAAS,KAEXmB,EAAAA,GAAAA,QAAAA,GAAe,YAAY,KACzBF,IACAjB,IAAS,KAEXmB,EAAAA,GAAAA,QAAAA,OAAAA,cAAAA,IAAqC3M,IACnC,GAAmB,WAAfA,EAAMgC,KAAmB,CAC3B,GAAIuJ,GAEF,YADAA,IAAc,GAGLvL,EAAMsO,UAAU,GAE3B,GADAhD,QAAWhD,EACPtI,EAAMsO,QAAS,OACjB,MAAMW,EAAM,MAAAjP,EAAMsO,SAAN,QAAmBlK,GAAMA,EAAEwJ,KACvC9B,EAAamD,GACb3D,GAAW2D,EAAI,QAEfnD,EAAa,IAnGN,MACnB,GAAIC,EAAMmD,SAAW5D,GAAU,CAC7B,MAAM1I,EAAQ,KAAA6I,IAAS,KAATA,IAAqB9B,GAAMA,EAAEzK,KAAOoM,KAElD,GAAI1I,GAAS,EAAG,CACd,MAAMuM,EAAY,GAAKvM,EACvBmJ,EAAMmD,QAAQC,UAAYA,KA+FpBC,QAGJJ,EAAAA,GAAAA,KACErC,EAAAA,GAAAA,QAAAA,SAAAA,eACAA,EAAAA,GAAAA,QAAAA,SAAAA,eAAAA,WACCvI,IACCuK,EAAevK,OAGnB4K,EAAAA,GAAAA,KACErC,EAAAA,GAAAA,QAAAA,SAAAA,eACAA,EAAAA,GAAAA,QAAAA,SAAAA,eAAAA,WACCvI,IACCuK,EAAevK,UAMlB,KACL,KAAA0K,GAAO,KAAPA,GAAiBO,GAAMA,SAExB,IAGD,gBAAChG,EAAA,EAAD,CACE9L,GAAI,CACF8N,UAAW,OACXhI,UAAW,GACXiM,aAAc,EACdC,YAAa,YAGf,gBAAC,GAAD,CACE5Q,OAAQ,IACR0E,UAAW,IACXgI,UAAW,IACX3C,OAAQ,CACN5K,KAAK,EACLD,OAAO,EACP8K,QAAQ,EACRC,MAAM,EACNC,UAAU,EACVC,aAAa,EACbC,YAAY,EACZC,SAAS,IAGX,gBAACwG,GAAA,EAAD,CAAgB7R,QA1UF,KAClB+N,GAAS1M,IAyUiCzB,GAAI,CAAEkS,QAAS,SACnD,gBAACC,GAAA,EAAD,CAAcC,QAAQ,8BAIxB,gBAACtG,EAAA,EAAD,CACE9L,GAAI,CACFoB,OAAQ,oBACR2E,UAAW,QAEb4F,IAAK6C,GAEL,gBAAC6D,GAAA,EAAD,KACG,IAAAjE,GAAI,KAAJA,GAAUhC,GACT,gBAACkG,GAAA,GAAD,CACEtN,IAAKoH,EAAEzK,GACPvB,QAAS,IAtVP0G,KACdkH,IAAc,EAEdO,EAAa,CAACzH,EAAKnF,KAEnB,MAAM4Q,EAAMzL,EAAKyI,OAEbgD,IACEA,aAAe5C,GAAAA,OACb4C,EAAIC,WACNpD,EAAAA,GAAAA,QAAAA,OAAAA,cAAAA,cAAiD,CAACmD,IAElDvE,IAAc,EACdgB,EAAS,CACPvK,KAAMgO,GAAAA,GACNC,OAAQH,KAGHA,aAAe5B,GAAAA,QACxBvB,EAAAA,GAAAA,QAAAA,OAAAA,cAAAA,UAA6CmD,EACpCA,aAAe9B,GAAAA,QACpB8B,EAAIC,WAAYpD,EAAAA,GAAAA,QAAAA,OAAAA,cAAAA,UAA6CmD,EAE/DvD,EAAS,CACPvK,KAAMkO,GAAAA,GACNC,IAAKL,IAGAA,aAAeM,GAAAA,WACxBzD,EAAAA,GAAAA,QAAAA,OAAAA,cAAAA,eAAkDmD,KAyT3BO,CAAO1G,GACtB2G,cAAe,KArTZR,SAqT0BnG,EAAEmD,SAnTrCgD,aAAe5C,GAAAA,QACjBP,EAAAA,GAAAA,QAAAA,OAAAA,cAAAA,aAA8CmD,IAmTtCvS,GAAI,CACFG,OAAQ,UACR,UAAW,CAAE0N,gBAAiB,QAC9BA,gBAAiB,KAAAS,GAAS,KAATA,EAAmBlC,EAAEzK,IAClC,eACAoJ,GAENiI,gBACE,gCACG5G,EAAE0D,aACD,gBAAC,IAAD,CACEmD,KAAK,MACL,aAAW,SACX7S,QAAU8S,GA3TH,EAAC3D,EAAoB2D,KAChDA,EAAIC,kBACA5D,IACEb,EAAU0E,IAAI7D,EAAOc,IACvB3B,EAAU2E,OAAO9D,EAAOc,IAExB3B,EAAU0B,IAAIb,EAAOc,IAEvB1B,EAAa,IAAI,KAAJ,CAAQD,IACrB4E,GAAAA,IAAAA,aAAgB,KACd/D,EAAM,UAAgBA,EAAM,WAC3B,oCAgTiCgE,CAAqBnH,EAAEmD,OAAQ2D,GACjDpS,MAAM,6BAEL4N,EAAU0E,IAAIhH,EAAEzK,IACf,gBAAC6R,GAAA,EAAD,MAEA,gBAACC,GAAA,EAAD,OAILrH,EAAE2D,SACD,gBAAC,IAAD,CACEkD,KAAK,MACL,aAAW,SACX7S,QAAU8S,GA1TL,EAAC3D,EAAoB2D,KAC9CA,EAAIC,kBACAvE,EAAYwE,IAAI7D,EAAOc,IACzBzB,EAAYyE,OAAO9D,EAAOc,IAE1BzB,EAAYwB,IAAIb,EAAOc,IAGzBxB,EAAe,IAAI,KAAJ,CAAQD,IAEvB0E,GAAAA,IAAAA,aAAgB,KACd/D,EAAM,YAAkBA,EAAM,aAC7B,6BA8SmCmE,CAAmBtH,EAAEmD,OAAQ2D,GAC/CpS,MAAM,kCAEL8N,EAAYwE,IAAIhH,EAAEzK,IACjB,gBAACgS,GAAA,EAAD,MAEA,gBAACC,GAAA,EAAD,OAILxH,EAAE4D,SACD,gBAAC,IAAD,CACEiD,KAAK,MACL,aAAW,OACX7S,QAAS,KAAMyT,OA1TXtE,EA0T4BnD,EAAEmD,OAzTlDT,EAAcsE,IAAI7D,EAAOc,KAC3BvB,EAAcuE,OAAO9D,EAAOc,IAC5Bd,EAAOuE,UAEPhF,EAAcsB,IAAIb,EAAOc,IACzBd,EAAOwE,aAGThF,EAAiBD,GATOS,OA2TJzO,MAAM,4BAELgO,EAAcsE,IAAIhH,EAAEzK,IACnB,gBAACqS,GAAA,EAAD,MAEA,gBAACC,GAAA,EAAD,SAeT7H,EAAEyD,MACD,gBAACqE,GAAA,EAAD,CAAclU,GAAI,CAAEkL,SAAU,KAC5B,gBAACkB,EAAEyD,KAAH,OAIJ,gBAACsC,GAAA,EAAD,CAAcC,QAAShG,EAAE8E,gB,iJCngBzC,MA0BA,GA1B8D,KAC5D,MAAOiD,EAASC,IAAc7P,EAAAA,EAAAA,UAAS,IAkBvC,OAZAmF,EAAAA,EAAAA,YAAU,MACR8H,EAAAA,GAAAA,KACE,MAAQpC,EAAAA,GAAAA,UACR,KACE,MAAMvD,EAAMuD,EAAAA,GAAAA,QACZvD,EAAIwI,GAAG,YAAY,KACjBD,EAAWvI,EAAIyI,OAAOC,aAAaC,oBAIxC,IAGD,gBAACC,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CAAO5T,MAAM,iBACb,gBAAC,KAAD,CAAgBN,MAAO2T,EAAShO,SApBTwO,IACzBP,EAAWO,EAAEC,KACbxF,EAAAA,GAAAA,QAAAA,OAAAA,aAAAA,WAA6CuF,EAAEC,S,qlBChBnD,MAoIA,GApIsD,KACpD,MAAOC,EAAWC,IAAgBvQ,EAAAA,EAAAA,UAAS,CACzCwQ,UAAW,EACXC,SAAU,EACVC,UAAW,EACXC,YAAa,EACbC,QAAS,KAGJC,EAAKC,IAAU9Q,EAAAA,EAAAA,UAAS,CAAE+Q,EAAG,IAAKC,EAAG,IAAKC,EAAG,MAE9CC,EAAgBvC,IACpB4B,EAAa,GAAD,MAAMD,GAAN,IAAiB,CAAC3B,EAAIvQ,OAAOsK,MAAOiG,EAAIvQ,OAAOC,SAC3DwM,EAAAA,GAAAA,QAAAA,OAAAA,aAAgC8D,EAAIvQ,OAAOsK,MAAQiG,EAAIvQ,OAAOC,OAW1D8S,EAAS,KACb,MAAM7J,EAAMuD,EAAAA,GAAAA,QACZ0F,EAAa,CACXC,UAAWlJ,EAAIyI,OAAOC,aAAaQ,UACnCC,SAAUnJ,EAAIyI,OAAOC,aAAaS,SAClCC,UAAWpJ,EAAIyI,OAAOC,aAAaU,UACnCC,YAAarJ,EAAIyI,OAAOC,aAAaW,YACrCC,QAAStJ,EAAIyI,OAAOC,aAAaY,UAEnCE,GAAOM,EAAAA,GAAAA,IAAe9J,EAAIyI,OAAOC,aAAaqB,eAgBhD,OAbAlM,EAAAA,EAAAA,YAAU,MACR8H,EAAAA,GAAAA,KACE,MAAQpC,EAAAA,GAAAA,UACR,KACE,MAAMvD,EAAMuD,EAAAA,GAAAA,QACZsG,IACA7J,EAAIwI,GAAG,YAAY,KACjBqB,YAIL,IAGD,gBAAC5J,EAAA,EAAD,KACE,gBAAC2I,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAEC,EAAG,EAAGC,EAAG,IACpC,gBAAC,KAAD,CAAOY,MAAM,eAAK4T,GAAI,MACtB,gBAACmB,GAAA,GAAD,CACE7U,KAAK,QACL4B,MAAOiS,EAAUE,UACjB,aAAW,QACXe,kBAAkB,OAClBC,IAAK,EACLC,IAAK,IACLC,KAAM,EACNhJ,KAAK,YACL9G,SAAUsP,KAGd,gBAAChB,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAEC,EAAG,EAAGC,EAAG,IACpC,gBAAC,KAAD,CAAOY,MAAM,eAAK4T,GAAI,MACtB,gBAACmB,GAAA,GAAD,CACE7U,KAAK,QACL4B,MAAOiS,EAAUG,SACjB,aAAW,QACXc,kBAAkB,OAClBC,IAAK,EACLC,IAAK,GACLC,KAAM,GACNhJ,KAAK,WACL9G,SAAUsP,KAGd,gBAAChB,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAEC,EAAG,EAAGC,EAAG,IACpC,gBAAC,KAAD,CAAOY,MAAM,eAAK4T,GAAI,MACtB,gBAACmB,GAAA,GAAD,CACE7U,KAAK,QACL4B,MAAOiS,EAAUI,UACjB,aAAW,QACXa,kBAAkB,OAClBC,IAAK,EACLC,IAAK,EACLC,KAAM,GACNhJ,KAAK,YACL9G,SAAUsP,KAWd,gBAAChB,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAEC,EAAG,EAAGC,EAAG,IACpC,gBAAC,KAAD,CAAOY,MAAM,eAAK4T,GAAI,MACtB,gBAACmB,GAAA,GAAD,CACE7U,KAAK,QACL4B,MAAOiS,EAAUK,YACjB,aAAW,QACXY,kBAAkB,OAClBC,KAAM,GACNC,IAAK,GACLC,KAAM,IACNhJ,KAAK,cACL9G,SAAUsP,KAGd,gBAAChB,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAEC,EAAG,EAAGC,EAAG,IACpC,gBAAC,KAAD,CAAOY,MAAM,qBAAM4T,GAAI,MACvB,gBAACmB,GAAA,GAAD,CACE7U,KAAK,QACL4B,MAAOiS,EAAUM,QACjB,aAAW,QACXW,kBAAkB,OAClBC,IAAK,EACLC,IAAK,EACLC,KAAM,GACNhJ,KAAK,UACL9G,SAAUsP,OC1HdS,GAAU,CACd,CAAEhF,MAAO,eAAMtO,MAAOuT,GAAAA,WAAAA,MACtB,CAAEjF,MAAO,qBAAOtO,MAAOuT,GAAAA,WAAAA,OACvB,CAAEjF,MAAO,2BAAQtO,MAAOuT,GAAAA,WAAAA,MA4F1B,GAzFsC,KACpC,MAAO1R,EAAM2R,IAAW7R,EAAAA,EAAAA,UAAS4R,GAAAA,WAAAA,OAC3B,UAAElN,EAAF,UAAaC,IAAcC,EAAAA,EAAAA,KAC3BkN,EAAsBxP,IAC1BqC,EAAUoN,OAASzP,EAAElE,OAAOC,MAC5BwM,EAAAA,GAAAA,QAAAA,OAAAA,aAAAA,KAAuCvI,EAAElE,OAAOC,OAE5C2T,GAAcC,EAAAA,EAAAA,UAAQ,KAC1B,IAAIC,EAASvN,EAAUoN,OACvB,OAAIG,IAAWN,GAAAA,WAAAA,KACN,gBAAC,GAAD,MACEM,IAAWN,GAAAA,WAAAA,MAEXM,IAAWN,GAAAA,WAAAA,IACb,gBAAC,GAAD,MAEF,sCALA,IAMN,CAAC1R,IAmBJ,OAjBAiF,EAAAA,EAAAA,YAAU,MACRgN,EAAAA,GAAAA,KACE,IAAMxN,EAAUoN,SAChB,KACEF,EAAQlN,EAAUoN,aAGrB,KACH5M,EAAAA,EAAAA,YAAU,MACR8H,EAAAA,GAAAA,KACE,MAAQpC,EAAAA,GAAAA,UACR,KACE,MAAMvD,EAAMuD,EAAAA,GAAAA,QACZlG,EAAUoN,OAASzK,EAAIyI,OAAOC,aAAaoC,UAG9C,CAAC1N,EAAU2N,kBAEZ,gBAAC,KAAD,MACG,IACC,gCACE,gBAAC9K,EAAA,EAAD,KACE,gBAAC2I,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CAAO5T,MAAM,6BACb,gBAACgL,EAAA,EAAD,CAAK9L,GAAI,CAAEK,SAAU,WAAYiD,MAAO,MACtC,gBAAC,KAAD,CACE3B,GAAG,2BACHmR,QAAM,EACNlQ,MAAOsG,EAAUoN,OACjBnQ,SAAUkQ,EACVrV,KAAK,QACL6V,YAAY,6CAEZ7W,GAAI,CAAEsD,MAAO,KACbwT,WAAY,CACV9W,GAAI,CACFoB,OAAQ,GACR2V,aAAc,EACdC,WAAY,UACZrQ,OAAQ,EACRtD,SAAU,KAGd4T,WAAY,CACVjX,GAAI,CACFkX,GAAI,EACJ9V,OAAQ,GACRiC,SAAU,MAIb,IAAA6S,IAAO,KAAPA,IAAaiB,GACZ,gBAACC,GAAA,EAAD,CACEpS,IAAKmS,EAAOvU,MACZA,MAAOuU,EAAOvU,MACd5C,GAAI,CAAEqD,SAAU,KAEf8T,EAAOjG,aAOnBqF,MCtEX,GA3B8C,KAC5C,MAAOc,EAAWC,IAAgB/S,EAAAA,EAAAA,UAAS,IAO3C,OACE,gCACE,gBAACkQ,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CAAO5T,MAAM,2BAAO4T,GAAI,KACxB,gBAACmB,GAAA,GAAD,CACE7U,KAAK,QACL4B,MAAOyU,EACP,aAAW,QACXvB,kBAAkB,OAClBC,IAAK,EACLC,IAAK,EACLC,KAAM,GACNjW,GAAI,CAAEsD,MAAO,KACb6C,SAlBsB,CAACU,EAAG0Q,KAChCD,EAAaC,GACbnI,EAAAA,GAAAA,QAAAA,OAAAA,aAAAA,kBAAoDmI,QCgMxD,IAAevO,EAAAA,EAAAA,KAjLgCpJ,IAC7C,MAAO4X,EAAcC,IAAmBlT,EAAAA,EAAAA,WAAS,IAE3C,UAAE0E,EAAF,UAAaC,IAAcC,EAAAA,EAAAA,MAE1BuO,EAAQC,IAAapT,EAAAA,EAAAA,UAAS,KAC9BqT,EAAQC,IAAatT,EAAAA,EAAAA,UAAS,KAC9BuT,EAAUC,IAAexT,EAAAA,EAAAA,UAAS,IAElCyT,EAASC,IAAc1T,EAAAA,EAAAA,WAAS,IAEhC2T,EAAQC,IAAa5T,EAAAA,EAAAA,WAAS,GAOrC,IAAI6T,EAEJ,MA8BM1C,EAAS,KACb,MAAM7J,EAAMuD,EAAAA,GAAAA,QACZ2I,EAAYlM,EAAIyI,OAAO+D,iBAAiBC,WACxCX,EAAU9L,EAAIyI,OAAO+D,iBAAiBE,OACtCV,EAAUhM,EAAIyI,OAAOC,aAAaiE,cAClCf,EAAgB5L,EAAI4M,UACpBR,EAAWpM,EAAIyI,OAAOC,aAAamE,aAkBrChP,EAAAA,EAAAA,YAAU,KACR,IAAIiP,EAWJ,OAVAnH,EAAAA,GAAAA,KACE,MAAQpC,EAAAA,GAAAA,UACR,KACE,MAAMvD,EAAMuD,EAAAA,GAAAA,QACZsG,IACAiD,EAAU9M,EAAIwI,GAAG,YAAY,KAC3BqB,UAIC,KACLiD,SAED,IAkBH,OACE,gBAACtG,GAAA,EAAD,CACErS,GAAI,CACFsD,MAAO,OACP5B,SAAU,IACVwQ,QAAS,mBACT0G,WAAY,OAEdvW,UAAU,MACV,kBAAgB,yBAEhB,gBAACyJ,EAAA,EAAD,KACE,gBAAC+M,GAAA,EAAD,CACE3T,QAASgE,EAAU4P,aAAe7P,EAAU8P,cAC5C5S,SA9De,CAAC+M,EAAKhO,MAC3B8T,EAAAA,GAAAA,IAAiB,KACX9T,EAAS+D,EAAUgQ,YAAYhQ,EAAU8P,eAIxC3L,EAAAA,EAAAA,KAAa,iFAyDd8L,QAAS,gBAACC,GAAA,EAAD,MACTjI,MAAM,6BAQR,gBAACuD,EAAA,EAAD,CAAOlO,UAAU,OACf,gBAAC,KAAD,CACEzF,MAAM,eACN8B,MAAOqG,EAAU2N,gBACjBzQ,SA1H2BU,IAEnCoC,EAAUiE,eAAerG,EAAElE,OAAOC,WA2H9B,gBAAC,GAAD,MACA,gBAAC6R,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CAAO5T,MAAM,2BAAO4T,GAAI,MACxB,gBAAC,KAAD,CACExP,QAASsS,EACTrR,SA1GW,CAACU,EAAG3B,KACvBuS,EAAgBvS,GAChBkK,EAAAA,GAAAA,QAAAA,SAAuBlK,GAyGf+R,WAAY,CAAE,aAAc,iBAGhC,gBAACxC,EAAA,EAAD,CAAOlO,UAAU,OACf,gBAAC,KAAD,CAAOzF,MAAM,2BAAO4T,GAAI,KACxB,gBAAC,KAAD,CAAQxP,QAAS8S,EAAS7R,SAhFd+M,IAClB+E,EAAW/E,EAAIvQ,OAAOuC,SACtBkK,EAAAA,GAAAA,QAAAA,OAAAA,aAAAA,UAA4C8D,EAAIvQ,OAAOuC,YAgFnD,gBAAC,GAAD,MACA,gBAACuP,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAEC,EAAG,EAAGC,EAAG,GAAKkZ,WAAW,UACpD,gBAAC,KAAD,CAAOtY,MAAM,iCAAQ4T,GAAI,MACzB,gBAAC,KAAD,CAAgBlU,MAAOoX,EAAQzR,SA1HVwO,IAC3BkD,EAAUlD,EAAEC,KACZxF,EAAAA,GAAAA,QAAAA,OAAAA,aAAAA,aAA+CuF,EAAEC,QA0H7C,gBAACH,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAEC,EAAG,EAAGC,EAAG,IACpC,gBAAC,KAAD,CAAOY,MAAM,iCAAQ4T,GAAI,MACzB,gBAACmB,GAAA,GAAD,CACE7U,KAAK,QACL4B,MAAOkV,EACP,aAAW,QACXhC,kBAAkB,OAClBC,IAAK,EACLC,IAAK,EACLC,KAAM,GACN9P,SAlJuB,CAACU,EAAG0Q,KACnCQ,EAAYR,GACZa,GAASiB,aAAajB,GACtBA,EAAQ,MAAW,KACjBhJ,EAAAA,GAAAA,QAAAA,OAAAA,iBAAAA,UAAgDmI,IAC/C,SAgJC,gBAAC9C,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAEC,EAAG,EAAGC,EAAG,GAAKkZ,WAAW,UACpD,gBAAC,KAAD,CAAOtY,MAAM,iCAAQ4T,GAAI,MACzB,gBAAC,KAAD,CAAgBlU,MAAOkX,EAAQvR,SA/IVwO,IAC3BgD,EAAUhD,EAAEC,KACZxF,EAAAA,GAAAA,QAAAA,OAAAA,iBAAAA,MAA4CuF,EAAEC,aCrBlD,IAAe5L,EAAAA,EAAAA,KA5BsBpJ,IACnC,MAAM,UAAEqJ,IAAcE,EAAAA,EAAAA,KAMtB,OACE,gBAACkJ,GAAA,EAAD,CACErS,GAAI,CACFsD,MAAO,OACP5B,SAAU,IACVwQ,QAAS,mBACT0G,WAAY,OAEdvW,UAAU,MACV,kBAAgB,yBAEhB,gBAACyJ,EAAA,EAAD,KACE,gBAAC,KAAD,CACEhL,MAAM,2BACN8B,MAAOqG,EAAUqQ,OAAS,GAC1BnT,SAnBUU,IAEhBoC,EAAUqQ,MAAQzS,EAAElE,OAAOC,c,oeCO/B,MAqJA,GArJkD,KAChD,MAAM,YAAE2W,EAAF,SAAevK,IAAaC,EAAAA,EAAAA,MAE5BuK,EAAMD,EAAYC,IAElBC,EAAkBC,IACtB1K,EAAS,IAAEvK,KAAMkV,GAAAA,IAAWD,KAGxBE,EAAkB,CAAC5U,EAAapC,KAChCA,GACF0Q,GAAAA,IAAAA,aAAgB,KACdkG,EAAIxU,GAAOpC,IACV,oBAEDiX,EAAqB,CAAC7U,EAAapC,KACvC0Q,GAAAA,IAAAA,aAAgB,KACdkG,EAAIxU,GAAOpC,IACV,oBAGC6S,EAAe,CAACvC,EAAKtQ,KACzBoM,EAAS,CACPvK,KAAMqV,GAAAA,GACN/Z,MAAO,SAAKwZ,EAAYxZ,OAAnB,IAA0B,CAACmT,EAAIvQ,OAAOsK,MAAOnC,OAAOlI,OAE3D4W,EAAItG,EAAIvQ,OAAOsK,MAAQnC,OAAOlI,IAGhC,OACE,gBAACkJ,EAAA,EAAD,CACE9L,GAAI,CACFsD,MAAO,OACP5B,SAAU,IACVwQ,QAAS,mBACT7O,SAAU,QAEZhB,UAAU,MACV,kBAAgB,yBAEhB,gBAACoS,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CACE5T,MAAM,eACN8B,MAAO2W,EAAYtM,KACnB9G,SAAWU,GACTmI,EAAS,CAAEvK,KAAMsV,GAAAA,GAAa9M,KAAMpG,EAAElE,OAAOC,QAE/CoX,OAASnT,IACP2S,EAAIrI,KAAOtK,EAAElE,OAAOC,UAI1B,gBAAC6R,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CACE5T,MAAM,SACN8B,MAAO2W,GAAaxZ,OAAOuD,MAC3B6C,SAAWU,GACTmI,EAAS,CACPvK,KAAMqV,GAAAA,GACN/Z,MAAO,SAAKwZ,EAAYxZ,OAAnB,IAA0BuD,MAAOuD,EAAElE,OAAOC,UAGnDoX,OAASnT,IACP+S,EAAgB,QAAS/S,EAAElE,OAAOC,WAIxC,gBAAC6R,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CACE5T,MAAM,SACN8B,MAAO2W,GAAaxZ,OAAOqB,OAC3B+E,SAAWU,GACTmI,EAAS,CACPvK,KAAMqV,GAAAA,GACN/Z,MAAO,SAAKwZ,EAAYxZ,OAAnB,IAA0BqB,OAAQyF,EAAElE,OAAOC,UAGpDoX,OAASnT,IACP+S,EAAgB,SAAU/S,EAAElE,OAAOC,WAIzC,gBAAC6R,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CAAO5T,MAAO,eAAM4T,GAAI,KACxB,gBAAC,KAAD,CACEuF,OAAQV,EAAYlZ,SACpB8F,SAAU,CAAC+T,EAAWC,IACpBV,EAAe,CAAEpZ,SAAU,SAAKkZ,EAAYlZ,UAAnB,IAA6B,CAAC6Z,GAAIC,MAE7DH,OAAQ,KACNH,EAAmB,WAAYN,EAAYlZ,cAIjD,gBAACoU,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CAAO5T,MAAM,2BAAO4T,GAAI,KACxB,gBAAC0F,GAAA,EAAD,CACE,kBAAgB,2BAChBnN,KAAK,WACLrK,MAAO2W,GAAaxZ,OAAOsa,SAC3BlU,SAAUsP,EACV/O,KAAG,GAEH,gBAACmS,GAAA,EAAD,CAAkBjW,MAAO,EAAGsW,QAAS,gBAACoB,GAAA,EAAD,MAAWpJ,MAAM,WACtD,gBAAC2H,GAAA,EAAD,CAAkBjW,MAAO,EAAGsW,QAAS,gBAACoB,GAAA,EAAD,MAAWpJ,MAAM,iBACtD,gBAAC2H,GAAA,EAAD,CAAkBjW,MAAO,EAAGsW,QAAS,gBAACoB,GAAA,EAAD,MAAWpJ,MAAM,aAG1D,gBAACuD,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CAAO5T,MAAM,2BAAO4T,GAAI,KACxB,gBAAC0F,GAAA,EAAD,CACE,kBAAgB,2BAChBnN,KAAK,WACLrK,MAAO2W,GAAaxZ,OAAOwa,SAC3BpU,SAAUsP,EACV/O,KAAG,GAEH,gBAACmS,GAAA,EAAD,CAAkBjW,MAAO,EAAGsW,QAAS,gBAACoB,GAAA,EAAD,MAAWpJ,MAAM,WACtD,gBAAC2H,GAAA,EAAD,CAAkBjW,MAAO,EAAGsW,QAAS,gBAACoB,GAAA,EAAD,MAAWpJ,MAAM,iBACtD,gBAAC2H,GAAA,EAAD,CAAkBjW,MAAO,EAAGsW,QAAS,gBAACoB,GAAA,EAAD,MAAWpJ,MAAM,aAG1D,gBAACuD,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CAAO5T,MAAO,eAAM4T,GAAI,KACxB,gBAAC,KAAD,CACEuF,OAAQV,EAAYiB,SACpBR,OAAQ,KACNH,EAAmB,WAAY,KAAWN,EAAYiB,SAASlF,KAEjEnP,SAAU,CAAC+T,EAAWC,IACpBV,EAAe,CAAEe,SAAU,SAAKjB,EAAYiB,UAAnB,IAA6B,CAACN,GAAIC,SAIjE,gBAAC1F,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CAAO5T,MAAM,eAAK4T,GAAI,KACtB,gBAAC,KAAD,CACEuF,OAAQV,EAAYkB,MACpBT,OAAQ,KACNH,EAAmB,SAASa,EAAAA,GAAAA,GAAgBnB,EAAYkB,SAE1DtU,SAAU,CAAC+T,EAAWC,IACpBV,EAAe,CAAEgB,MAAO,SAAKlB,EAAYkB,OAAnB,IAA0B,CAACP,GAAIC,W,4ECjIjE,MA4OA,GA5OsD,EACpDQ,SACAC,WACAlI,aAEA,MAAOjR,EAAM0M,IAAW5J,EAAAA,EAAAA,WAAS,IAC1BsW,EAAYC,IAAiBvW,EAAAA,EAAAA,UAA4B,KACzDwW,EAAgBC,IAAqBzW,EAAAA,EAAAA,UAASmO,EAAOuI,gBAKtD1Z,EAAc,KAClB4M,GAAQ,GACR2M,EAAc,KAgBVI,EAAoB,CAACC,EAAaC,EAAiBlB,KACvDkB,EAAMlB,GAAKiB,EACXL,EAAc,IAAID,KAkCdQ,EAAuBC,IAAwB,MACnD,OAAQA,EAAG7W,MACT,KAAK,EACH,OACE,gCACG,MAAA6W,EAAGxU,MAAH,QAAY,CAAC5G,EAAGmF,IACf,gBAACiN,GAAA,GAAD,CAAUtN,IAAKK,GACb,gBAAC,KAAD,CACE6L,MAAM,IACNlQ,KAAK,QACL4B,MAAO1C,EAAEoV,EACTnP,SAAWU,GAAMqU,EAAkBrU,EAAElE,OAAOC,MAAO1C,EAAG,OAExD,gBAAC,KAAD,CACEgR,MAAM,IACNlQ,KAAK,QACL4B,MAAO1C,EAAEqV,EACTpP,SAAWU,GAAMqU,EAAkBrU,EAAElE,OAAOC,MAAO1C,EAAG,OAExD,gBAAC,KAAD,CACEgR,MAAM,IACNlQ,KAAK,QACL4B,MAAO1C,EAAEsV,EACTrP,SAAWU,GAAMqU,EAAkBrU,EAAElE,OAAOC,MAAO1C,EAAG,UAI5D,gBAAC+R,GAAA,EAAD,CAAgB7R,QAAS,IA1DXkb,KACtBA,EAAGxU,KAAKM,KAAK,CAAEkO,EAAG,IAAKC,EAAG,IAAKC,EAAG,MAClCsF,EAAc,IAAID,KAwDqBU,CAAeD,IAC5C,gBAAC,IAAD,CAAQhT,QAAQ,WAAWkT,QAAS,gBAACC,GAAA,EAAD,OAApC,oCAMR,KAAK,EACH,OACE,gBAACnJ,GAAA,GAAD,KACE,gBAAC,KAAD,CACEpB,MAAM,SACNlQ,KAAK,QACL4B,MAAO0Y,EAAGxU,KAAK,GACfX,SAAWU,IACTyU,EAAGxU,KAAK,GAAKD,EAAElE,OAAOC,MACtBkY,EAAc,IAAID,OAGtB,gBAAC,KAAD,CACE3J,MAAM,SACNlQ,KAAK,QACL4B,MAAO0Y,EAAGxU,KAAK,GACfX,SAAWU,IACTyU,EAAGxU,KAAK,GAAKD,EAAElE,OAAOC,MACtBkY,EAAc,IAAID,QAM5B,QACE,OAAO,OAUb,OANAnR,EAAAA,EAAAA,YAAU,KACRgJ,EAAO2B,GAAG,gBAAgB,KACxB2G,EAAkBtI,EAAOuI,qBAE1B,IAGD,gCACE,gBAAChJ,GAAA,EAAD,CAAgB7R,QAASua,GACvB,gBAACxI,GAAA,EAAD,CAAcC,QAAQ,iBACrBwI,EAAW,gBAACc,GAAA,EAAD,MAAiB,gBAACC,GAAA,EAAD,OAE/B,gBAACC,GAAA,EAAD,CAAUC,GAAIjB,EAAUkB,QAAQ,OAAOC,eAAa,GAClD,gBAAC1J,GAAA,EAAD,CACEhQ,UAAU,MACV2Z,gBAAc,EACdhc,GAAI,CACF6F,SAAU,OACViI,UAAW,MAGb,gBAACmO,GAAA,EAAD,CACE9a,WAAS,EACT+a,YAAY,WACZ,aAAW,iCACXlc,GAAI,CACF,WAAY,CACVmc,aAAc,KAIjB,IAAApB,GAAc,KAAdA,GAAoBqB,GACnB,gBAAC,IAAD,CACE9T,QAAQ,YACR9H,MAAM,UACNwE,IAAKoX,EACLhc,QAAS,IAAMsS,EAAO2J,cAAcD,IAEnCA,KAGL,gBAAC,IAAD,CAAQ5b,MAAM,UAAUJ,QAlKR,KACxB+N,GAAQ,KAiKA,gBAGA,gBAAC,IAAD,CAAQ3N,MAAM,UAAUJ,QAAS,IAAMsS,EAAO4J,gBAA9C,8BAKJ,gBAAC/c,EAAA,EAAD,CACEO,QAASyB,EACTE,KAAMA,EACNN,WAAS,EACTO,SAAS,KACT6a,WAAY,CAAEvc,GAAI,CAAEoB,OAAQ,UAE5B,gBAAC+G,EAAA,EAAD,iCACA,gBAACC,EAAA,EAAD,CAAepI,GAAI,CAAEgM,QAAS,OAAQnG,SAAU,WAC7C,IAAAgV,GAAU,KAAVA,GAAe,CAACS,EAAIjW,IACnB,gBAACgN,GAAA,EAAD,CACErN,IAAKK,EACLrF,GAAI,CAAEkX,GAAI,EAAG5T,MAAO,OACpBkZ,UACE,gBAACC,GAAA,EAAD,CAAepa,UAAU,MAAMV,GAAG,yBAChC,gBAAC8S,EAAA,EAAD,CAAOlO,UAAU,OACf,gBAACkC,EAAA,EAAD,CACE7F,MAAO0Y,EAAGxa,MACVqF,SAAWU,IACTyU,EAAGxa,MAAQ+F,EAAElE,OAAOC,MACpBkY,EAAc,IAAID,OAGtB,gBAAChC,GAAA,EAAD,CACEK,QAAS,gBAACC,GAAA,EAAD,MACTjI,MAAM,SACN/K,SAAU,CAACU,EAAG3B,KACZoW,EAAGoB,MAAQxX,EACX4V,EAAc,IAAID,UAO3BQ,EAAoBC,OAI3B,gBAACzS,EAAA,EAAD,KACE,gBAAC,IAAD,CAAQP,QAAQ,YAAYlI,QAzMf,KACrB0a,GAAe6B,GAAQ,IAClBA,EACH,CAAE7b,MAAO,eAAM2D,KAAM,EAAGqC,KAAM,GAAI4V,OAAO,QAsMnC,wCAGA,gBAAC,IAAD,CAAQpU,QAAQ,YAAYlI,QAtMb,KACvB0a,GAAe6B,GAAQ,IAClBA,EACH,CAAE7b,MAAO,eAAM2D,KAAM,EAAGqC,KAAM,CAAC,IAAK,KAAM4V,OAAO,QAmM3C,wCAGA,gBAAC,IAAD,CAAQpU,QAAQ,YAAYlI,QAxLhB,KACpB,IAAK,MAAMkb,KAAMT,EAAY,CACe,MAA1C,GAAgB,IAAZS,EAAG7W,MAAc6W,EAAGxU,MAAMb,OAAS,EACrCyM,EAAOkK,YAAY,CACjB3P,KAAMqO,EAAGxa,MACT2M,KAAM,MAAA6N,EAAGxU,MAAH,QAAa5G,IAAD,CAChBoV,EAAGxK,OAAO5K,EAAEoV,IAAM,EAClBC,EAAGzK,OAAO5K,EAAEqV,IAAM,EAClBC,EAAG1K,OAAO5K,EAAEsV,IAAM,aAGjB,GAAgB,IAAZ8F,EAAG7W,KAAY,OACpB,OAAA6W,EAAGxU,MAAH,QAAc8E,GAAMd,OAAOc,MAC7B8G,EAAOmK,cAAc,CACnB5P,KAAMqO,EAAGxa,MACTiC,KAAM+Z,GAAAA,MAAAA,QAAchS,OAAOwQ,EAAGxU,KAAK,KACnCiW,MAAOD,GAAAA,MAAAA,QAAchS,OAAOwQ,EAAGxU,KAAK,KACpCkW,KAAM,EACNC,MAAM,KAKd9O,GAAQ,KAiKA,gBAGA,gBAAC,IAAD,CAAQ7F,QAAQ,YAAYlI,QAASmB,GAArC,qB,yZClPZ,MAmJA,GAnJkC,KAChC,MAAM,YAAEgY,EAAF,SAAevK,IAAaC,EAAAA,EAAAA,MAE5ByD,EAAS6G,EAAY7G,QAEpBwK,EAAUC,IAAe5Y,EAAAA,EAAAA,UAAS,IAAI,OAUvCkV,EAAkBC,IACtB1K,EAAS,IAAEvK,KAAMkV,GAAAA,IAAWD,KAoB9B,OACE,gBAAC5N,EAAA,EAAD,CACE9L,GAAI,CACFkS,QAAS,mBACT7O,SAAU,QAEZhB,UAAU,MACV,kBAAgB,yBAYhB,gBAACoS,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CACE5T,MAAM,eACN8B,MAAO2W,EAAYtM,KACnB9G,SAAWU,GACTmI,EAAS,CAAEvK,KAAMsV,GAAAA,GAAa9M,KAAMpG,EAAElE,OAAOC,QAE/CoX,OAASnT,IACPyM,GAAAA,IAAAA,aAAgB,KACdiG,EAAY7G,OAAOvB,KAAOtK,EAAElE,OAAOC,QAClC,gCAIT,gBAAC6R,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CAAO5T,MAAO,eAAM4T,GAAI,KACxB,gBAAC,KAAD,CACEuF,OAAQV,EAAYlZ,SACpB8F,SAAU,CAAC+T,EAAWC,IACpBV,EAAe,CAAEpZ,SAAU,SAAKkZ,EAAYlZ,UAAnB,IAA6B,CAAC6Z,GAAIC,MAE7DH,OAAQ,KACN1G,GAAAA,IAAAA,aAAgB,KACdZ,EAAO0K,UAAW1C,EAAAA,GAAAA,GAAgBnB,EAAYlZ,YAC7C,gCAIT,gBAACoU,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CAAO5T,MAAO,eAAM4T,GAAI,KACxB,gBAAC,KAAD,CACEuF,OAAQV,EAAYiB,SACpBR,OAAQ,KACN1G,GAAAA,IAAAA,aAAgB,KACdZ,EAAO2K,UAAW3C,EAAAA,GAAAA,GAAgBnB,EAAYiB,UAAW8C,GACvDR,GAAAA,MAAAA,QAAcQ,OAEf,6BAELnX,SAAU,CAAC+T,EAAWC,IACpBV,EAAe,CAAEe,SAAU,SAAKjB,EAAYiB,UAAnB,IAA6B,CAACN,GAAIC,SAIjE,gBAAC1F,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CAAO5T,MAAO,eAAM4T,GAAI,KACxB,gBAAC,KAAD,CACEuF,OAAQV,EAAYkB,MACpBT,OAAQ,KACN1G,GAAAA,IAAAA,aAAgB,KACdZ,EAAO6K,OAAQ7C,EAAAA,GAAAA,GAAgBnB,EAAYkB,SAC1C,6BAELtU,SAAU,CAAC+T,EAAWC,IACpBV,EAAe,CAAEgB,MAAO,SAAKlB,EAAYkB,OAAnB,IAA0B,CAACP,GAAIC,SAoB3D,gBAAC1F,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CAAO5T,MAAO,eAAM4T,GAAI,KACxB,gBAAC,KAAD,CACElU,MAAM,UACN0E,QAASqU,EAAYiE,aACrBrX,SAtGoB1D,IAC1BiQ,EAAO+K,aAAehb,EAAME,OAAOuC,QACnC8J,EAAS,CAAEvK,KAAMiZ,GAAAA,SAuGf,uBAAKnR,MAAO,CAAEP,QAAS,SACrB,gBAAC,GAAD,CACE2O,OAAQ,KAAMgD,OAxHEzD,EAwHa,UAvH/BgD,EAAS9J,IAAI8G,GACfgD,EAAS7J,OAAO6G,GAEhBgD,EAAS9M,IAAI8J,QAEfiD,EAAY,IAAI,KAAJ,CAAQD,IANEhD,OAyHhBU,SAAUsC,EAAS9J,IAAI,WACvBV,OAAQA,O,yZC5IlB,MAuHA,GAvHkD,KAChD,MAAM,YAAE6G,EAAF,SAAevK,IAAaC,EAAAA,EAAAA,MAE5B2D,EAAM2G,EAAY3G,IAElB6G,EAAkBC,IACtB1K,EAAS,IAAEvK,KAAMkV,GAAAA,IAAWD,KAGxBjE,EAAgBvC,IACpBlE,EAAS,CACPvK,KAAMkV,GAAAA,GACN5Z,MAAO,SAAKwZ,EAAYxZ,OAAnB,IAA0B,CAACmT,EAAIvQ,OAAOsK,MAAOiG,EAAIvQ,OAAOC,UAG3DsQ,EAAIvQ,OAAOC,QACboW,EAAAA,GAAAA,IAAiB,KACf1F,GAAAA,IAAAA,aAAgB,KACdV,EAAIM,EAAIvQ,OAAOsK,MAAQiG,EAAIvQ,OAAOC,QACjC,gCAIT,OACE,gBAACkJ,EAAA,EAAD,CACE9L,GAAI,CACFsD,MAAO,OACP5B,SAAU,IACVwQ,QAAS,mBACT7O,SAAU,QAEZhB,UAAU,MACV,kBAAgB,yBAYhB,gBAACoS,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CACE5T,MAAM,eACN8B,MAAO2W,EAAYtM,KACnB9G,SAAWU,GACTmI,EAAS,CAAEvK,KAAMsV,GAAAA,GAAa9M,KAAMpG,EAAElE,OAAOC,QAE/CoX,OAASnT,IACPyM,GAAAA,IAAAA,aAAgB,KACdV,EAAIzB,KAAOtK,EAAElE,OAAOC,QACnB,gCAIT,gBAAC6R,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CACEzH,KAAK,QACLnM,MAAM,SACN8B,MAAO2W,EAAYxZ,MAAM6d,MACzBzX,SAAUsP,KAGd,gBAAChB,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CACEzH,KAAK,SACLnM,MAAM,SACN8B,MAAO2W,EAAYxZ,MAAM8d,OACzB1X,SAAUsP,KAGd,gBAAChB,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CAAO5T,MAAO,eAAM4T,GAAI,KACxB,gBAAC,KAAD,CACEuF,OAAQV,EAAYlZ,SACpB8F,SAAU,CAAC+T,EAAWC,IACpBV,EAAe,CAAEpZ,SAAU,SAAKkZ,EAAYlZ,UAAnB,IAA6B,CAAC6Z,GAAIC,MAE7DH,OAAQ,KACN1G,GAAAA,IAAAA,aAAgB,KACdV,EAAIwK,SAAW7D,EAAYlZ,WAC1B,gCAIT,gBAACoU,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CAAO5T,MAAO,eAAM4T,GAAI,KACxB,gBAAC,KAAD,CACEuF,OAAQV,EAAYiB,SACpBR,OAAQ,KACN1G,GAAAA,IAAAA,aAAgB,KACdV,EAAIyK,SAAWP,GAAAA,MAAAA,QAAc,KAAWvD,EAAYiB,SAASlF,MAC5D,6BAELnP,SAAU,CAAC+T,EAAWC,IACpBV,EAAe,CAAEe,SAAU,SAAKjB,EAAYiB,UAAnB,IAA6B,CAACN,GAAIC,SAIjE,gBAAC1F,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CAAO5T,MAAM,eAAK4T,GAAI,KACtB,gBAAC,KAAD,CACEuF,OAAQV,EAAYkB,MACpBT,OAAQ,KACN1G,GAAAA,IAAAA,aAAgB,KACdV,EAAI2K,OAAQ7C,EAAAA,GAAAA,GAAgBnB,EAAYkB,SACvC,6BAELtU,SAAU,CAAC+T,EAAWC,IACpBV,EAAe,CAAEgB,MAAO,SAAKlB,EAAYkB,OAAnB,IAA0B,CAACP,GAAIC,WC3GjE,GAhB4B,KAC1B,MAAM,YAAEZ,IAAgBtK,EAAAA,EAAAA,MAExB,OAAIsK,EAAY7G,OACP,gBAAC,GAAD,MAGL6G,EAAY3G,IACP,gBAAC,GAAD,MAEL2G,EAAYC,IACP,gBAAC,GAAD,MAGF,wD,iJChBT,MAAMsE,GAAe3D,IACnB,IAAI4D,EAAM,GAOV,OALEA,EADa,WAAX5D,EAAE1V,KACE0V,EAAEvX,OAAOqO,OAASkJ,EAAEvX,OAAOqO,QAAT,KAA4B,eAAO,WAErDkJ,EAAEvX,OAAS,WAGZmb,GAoBHC,GAAUC,IACd,IAAIF,EAAM,GAQV,OANAA,GAAOD,GAAYG,EAAGC,QACtBH,GAAO,IACPA,GAvBkBtZ,KAClB,OAAQA,GACN,KAAK0Z,GAAAA,YAAAA,MACH,MAAO,KACT,KAAKA,GAAAA,YAAAA,QACH,MAAO,KACT,KAAKA,GAAAA,YAAAA,MACH,MAAO,IACT,KAAKA,GAAAA,YAAAA,QACH,MAAO,KACT,KAAKA,GAAAA,YAAAA,KACH,MAAO,IACT,KAAKA,GAAAA,YAAAA,UACH,MAAO,KACT,QACE,MAAO,MAQJC,CAAWH,EAAGxZ,MACrBsZ,GAAO,IACPA,GAAOD,GAAYG,EAAGI,QAEfN,GAGF,SAASO,GACdC,EACAC,EACAnZ,GAEA,OACE,gBAACyG,EAAA,EAAD,KACE,wBAAMS,MAAO,CAAE/L,MAAO,UAAWie,YAAa,KACjC,IAAVpZ,EAAc,KAAO,WAED,IAAtBkZ,EAAWtY,OACR,UACA,IAAAsY,GAAU,KAAVA,GAAgBpE,GAAM6D,GAAO7D,KAAIuE,KAAKF,EAAQ,OAAS,SAK1D,MAAMG,GAAiB,CAC5B,CAAEzN,MAAO,eAAMtO,MAAOub,GAAAA,YAAAA,OACtB,CAAEjN,MAAO,qBAAOtO,MAAOub,GAAAA,YAAAA,SACvB,CAAEjN,MAAO,eAAMtO,MAAOub,GAAAA,YAAAA,OACtB,CAAEjN,MAAO,eAAMtO,MAAOub,GAAAA,YAAAA,MACtB,CAAEjN,MAAO,2BAAQtO,MAAOub,GAAAA,YAAAA,SACxB,CAAEjN,MAAO,2BAAQtO,MAAOub,GAAAA,YAAAA,Y,mJCvCpBS,IAAqBtf,EAAAA,GAAAA,IAAOqO,GAAAA,EAAPrO,EAAiB,EAAGE,YAAH,CAC1CgB,MAAOhB,EAAMiB,QAAQ0G,KAAK0X,UAC1B,CAAE,MAAKjR,GAAAA,EAAAA,WAA4B,CACjCpN,MAAOhB,EAAMiB,QAAQ0G,KAAK0X,UAC1BC,qBAAsBtf,EAAME,QAAQ,GACpCqf,wBAAyBvf,EAAME,QAAQ,GACvCsf,aAAcxf,EAAME,QAAQ,GAC5Buf,WAAYzf,EAAM0f,WAAWC,iBAC7B,iBAAkB,CAChBF,WAAYzf,EAAM0f,WAAWE,mBAE/B,UAAW,CACTvR,gBAAiBrO,EAAMiB,QAAQ4e,OAAOC,OAExC,4DAA6D,CAC3DzR,gBAAkB,6BAA4BrO,EAAMiB,QAAQ4e,OAAOE,YACnE/e,MAAO,0BAET,CAAE,MAAKoN,GAAAA,EAAAA,SAA0B,CAC/BqR,WAAY,UACZze,MAAO,gBAWPgf,GAAgBC,EAAAA,YAAiB,SACrC7f,EACA+L,GAEA,MAAM,QACJ+T,EADI,UAEJC,EAFI,MAGJzO,EAHI,OAIJ0O,EAJI,UAKJC,EACAhQ,KAAMiQ,EANF,cAOJC,EAPI,YAQJC,EARI,QASJ5f,EATI,YAUJ6f,GACErgB,GAEE,SACJsgB,EADI,SAEJC,EAFI,SAGJZ,EAHI,QAIJa,EAJI,gBAKJC,EALI,gBAMJC,EANI,iBAOJC,IACEC,EAAAA,GAAAA,GAAYZ,GAEV/P,EAAOiQ,GAAYC,GAAiBC,EAsBpCS,EAAahB,EAAAA,SAAc,KAC/B,MAAMiB,EAAgB,IAAI,KAAJ,CAAQf,EAAUgB,MAAM,MAc9C,OAbAD,EAActQ,IAAIsP,EAAQkB,MACtBT,GACFO,EAActQ,IAAIsP,EAAQS,UAExBZ,GACFmB,EAActQ,IAAIsP,EAAQH,UAExBa,GACFM,EAActQ,IAAIsP,EAAQU,SAExBF,GACFQ,EAActQ,IAAIsP,EAAQQ,UAErB,KAAWQ,GAAehC,KAAK,OACrC,CAACwB,EAAUE,EAASb,EAAUY,IAEjC,OACE,uBAAKR,UAAWc,EAAYR,YAtC5Bxd,IAEA8d,EAAiB9d,GACjBwd,IAAcxd,IAmC4CkJ,IAAKA,GAC7D,uBAAKvL,QAhCPqC,IAEA4d,EAAgB5d,IA8BsBkd,UAAWD,EAAQmB,eACpDhR,GAEH,gBAAC,KAAD,CACEzP,QA9BJqC,IAEA6d,EAAgB7d,GAChBrC,IAAUqC,IA4BNJ,UAAU,MACVsd,UAAWD,EAAQxO,OAElBA,OAMI4P,GAAiBrB,EAAAA,YAC5B,CAAC7f,EAA4B+L,KAC3B,MAAM,QACJwI,EADI,MAEJ3T,EACAugB,UAAWC,EAHP,WAIJC,EAJI,UAKJC,EALI,KAMJC,GAEEvhB,EADCG,GAPL,OAQIH,EARJ,IAUA,OACE,gBAAC,KAAD,MACG,IACC,gBAACgf,IAAD,QACEwC,iBAAkB5B,GAClB7T,IAAKA,EACLuF,MACE,gCACE,gBAACpF,EAAA,EAAD,CACE9L,GAAI,CACFgM,QAAS,OACToN,WAAY,SACZrN,SAAU,SAGXiV,GACC,gBAAClV,EAAA,EAAD,CAAKzJ,UAAW2e,EAAWxgB,MAAM,UAAUR,GAAI,CAAEqhB,GAAI,KAEvD,gBAAC,KAAD,CACE/Y,QAAQ,QACRtI,GAAI,CAAEif,WAAY,UAAWqC,SAAU,IAEtCJ,GAEH,gBAAC,KAAD,CAAY5Y,QAAQ,UAAU9H,MAAM,WACjCygB,IAGJE,GACC,gBAAC,KAAD,CACE7Y,QAAQ,YACR9H,MAAM,UACNR,GAAI,CAAEuhB,GAAI,IAETJ,IAKT5U,MAAO,CACL,oBAAqB/L,EACrB,uBAAwB2T,IAEtBpU,S,mDC1KhB,MAAMyhB,GAAa,EACjBC,UACAC,kBACAzB,cACA0B,MACAC,QACAC,cAEA,IAAIxc,EAAQ,KAAAoc,GAAO,KAAPA,GAAmBxc,GAASA,IAAS0c,IACjD,MAMMG,EAASrC,EAAAA,OAAgC,MAQ/C,OANA/V,EAAAA,EAAAA,YAAU,KACJoY,EAAOnQ,SAAWiQ,GACpBE,EAAOnQ,QAAQoQ,UAEhB,IAGD,gCACgB,SAAbJ,EAAIld,MACH,gBAAC,IAAD,CACEkH,IAAKmW,EACL7B,YAAaA,EACb7f,QAASshB,EACT,YAAwB,aAAbC,EAAIld,KAAsB,IAAM,IAC3C,YAAWkd,EAAIK,MAAQ,aAAUjX,EACjCkX,aAAcJ,GAEbF,EAAIhf,OAAS,2BAAS,4BAG3B,gBAAC,IAAD,CAAYvC,QA5BC,KACf8hB,GAAAA,GAAAA,SAA0BT,EAASpc,KA4B/B,gBAAC8c,GAAA,EAAD,OAEF,gBAAC,IAAD,CAAY/hB,QA5BG,KACjB8hB,GAAAA,GAAAA,WAA4BT,EAASpc,KA4BjC,gBAAC+c,GAAA,EAAD,SA4GR,IAAepZ,EAAAA,EAAAA,KAnFyC,EACtDyY,UACAC,kBACAthB,UACAiiB,WACAC,QACAC,QACAV,cAEA,MAAMW,EAAe,CACnBb,EACA/V,IAEI6W,GAAAA,GAAkBd,EAAIld,OAAOie,QACxBD,GAAAA,GAAkBd,EAAIld,OAAOie,QAAQ9W,GAG1C+V,EAAIhf,OACE,GAAEgf,EAAIzQ,SACZtF,EAAE+W,SAAY/W,EAAE+W,SAAS1R,QAAmBE,KAAO,KAGnDwQ,EAAIK,MACE,GAAEpW,EAAE5G,wCAEP2c,EAAIzQ,MAGP0R,EAAY,KAChBxiB,OAAQ2K,OAAWA,GACnBwX,EAAMtM,KAAO,GAGf,OACqB,IAAnBwL,EAAQxb,QACO,IAAfsc,EAAMtM,MACNsM,EAAMM,OAASC,GAAAA,GAAAA,KAGb,gBAAC,KAAD,CAAc1iB,QAASwiB,EAAW9hB,MAAM,oFAK1C,gCACG,IAAA2gB,GAAO,KAAPA,GAAY,CAACE,EAAKoB,KAAN,aACX,gBAACjC,GAAD,CACE9b,IAAK2c,EAAIhgB,GACTie,OAAQ+B,EAAIhgB,GAAG4L,WACf2T,UAAWS,EAAIzQ,MACfvF,IAAMqX,GAAoBV,IAAQU,EAAIrB,EAAIhgB,IAC1CvB,QAAS,KACPA,OAAQ2K,EAAWgY,IAErB9B,WACE,gBAACO,GAAD,CACEC,QAASA,EACTE,IAAKA,EACLC,MAAOD,EAAIhgB,KAAO0gB,EAClBpC,YAAa,IAAM7f,OAAQ2K,EAAWgY,GACtCrB,gBAAiBA,EACjBG,QAASA,KAIZ,MAAAF,EAAI7a,MAAJ,QAAa,CAAC8E,EAAGvG,IAChB,gBAACyb,GAAD,CACE1gB,QAAS,KACPA,EAAQiF,EAAO0d,IAEjB/d,IAAK4G,EAAE+W,UAAUM,OAAS5d,EAC1Bua,OAAS,GAAE+B,EAAIhgB,OAAOiK,EAAE+W,UAAUM,OAAS5d,GAAOkI,aAClD2T,UAAWsB,EAAab,EAAK/V,WAKpC2W,EAAMM,OAASC,GAAAA,GAAAA,MAAqC,IAAfP,EAAMtM,MAC1C,gBAAC,IAAD,CAAQ7V,QAASwiB,GAAjB,gC,sFCxIR,MAiMA,IAAe5Z,EAAAA,EAAAA,KAjMuC,EACpDlJ,UACA2B,OACAyhB,WACAtb,gBACI,MACJ,MAAM2a,GAAQY,EAAAA,GAAAA,MACR,eAAEC,IAAmBC,EAAAA,EAAAA,KACrBC,EAAYf,EAAMgB,cAElBC,EAAoBtQ,IACxB,MAEMuQ,EAFKvQ,EAAIwQ,cAEMC,aAAa,cAElCpB,EAAMqB,cAAcH,EAAY3Y,OAAO2Y,QAAa1Y,IAEhD8Y,EAAuB3Q,IAC3B,MAEMuQ,EAFKvQ,EAAIwQ,cAEMC,aAAa,cAElCpB,EAAMuB,cAAchZ,OAAO2Y,KAevBM,EAAoB,CAACC,EAA0B9Q,KACnDqP,EAAM0B,aAAY,KACS,WAArBD,EAAYvf,KACduf,EAAYphB,MAAQwM,EAAAA,GAAAA,QAAAA,SAAAA,YAAiC8D,EAAIvQ,OAAOC,OAEhEohB,EAAYphB,MACmB,kBAAtBohB,EAAYphB,MACfshB,QAAQhR,EAAIvQ,OAAOC,OACnBsQ,EAAIvQ,OAAOC,UAKjBuhB,EAAcvhB,GAElB,IAAAwhB,GAAAA,IAAY,KAAZA,GAAAA,IAAmBjK,GAAMA,EAAEvX,SAAUyhB,EAAAA,GAAAA,IAAazhB,MAAS0hB,KAEvDC,EAA0B,CAC9BrR,EACAtQ,EACAyb,KAEA,MAAMmG,EAAStR,EAAIvQ,OAAOC,MAAM+d,MAAM,KACtC4B,EAAM0B,aAAY,KAChBrhB,EAAM6B,KAAO+f,EAAO,GACpB5hB,EAAM6hB,UAAYD,EAAO,GACrBnG,GAAU8F,EAAWvhB,KACvByb,EAAO5Z,KAAO,QACd4Z,EAAOzb,OAAQ,OAKrB,OACE,gBAACrD,EAAA,EAAD,CACE4B,WAAS,EACTO,SAAS,KACTD,KAAMA,EACN3B,QAASA,EACTyc,WAAY,CAAEvc,GAAI,CAAEoB,OAAQ,SAE5B,gBAAC,KAAD,CACEtB,QAASA,EACTgB,MAAO,4BAAUoiB,EACjBljB,GAAI,CAAEgX,WAAY,aAEpB,gBAAC5O,EAAA,EAAD,KACE,gBAAC,KAAD,CAAQsc,eAAe,iBACrB,gBAAC,KAAD,CACExT,MAAM,2BACNlR,GAAI,CAAEiM,KAAM,GACZrJ,MAAO0gB,EAAUrW,KACjB9G,SAhEgB+M,IACxBqP,EAAM0B,aAAY,KAChBX,EAAUrW,KAAOiG,EAAIvQ,OAAOC,YAgExB,gBAAC,KAAD,CACEyM,QAAS,CACP,CAAE6B,MAAO,2BAAQtO,MAAO,GACxB,CAAEsO,MAAO,2BAAQtO,MAAO,IAE1BA,MAAO0gB,EAAU9E,MAAQ,EAAI,EAC7BrY,SAAW+M,GACTqP,EAAM0B,aAAY,KAEhBX,EAAU9E,MAA6B,IAArBtL,EAAIvQ,OAAOC,YAKrC,gBAAC+hB,EAAA,EAAD,CAAS3kB,GAAI,CAAE4kB,GAAI,KACnB,gBAACvS,GAAA,EAAD,KACG,MAAAiR,EAAU/E,YAAV,QAAyB,CAACsG,EAAMxf,IAC/B,gBAACiN,GAAA,GAAD,CACEtN,IAAK6f,EAAKljB,GACV3B,GAAI,CACF,yBAA0B,CACxBiM,KAAM,KAIV,gBAAC,KAAD,CACE+X,YAAaa,EAAK3G,OAClB/X,SAAW+M,IACTqR,EAAwBrR,EAAK2R,EAAK3G,OAAQ2G,EAAKxG,SAEjDyG,cAAgB5R,GAAQ6Q,EAAkBc,EAAK3G,OAAQhL,GACvD6R,UAAW3B,EAAe2B,UAC1BC,YAAa,CACX7jB,WAAW,EACXnB,GAAI,CAAE4kB,GAAI,MAGd,gBAAC,KAAD,CACEhiB,MAAOiiB,EAAKpgB,KACZ4K,QAASsP,GACTxY,SAAW+M,IACTqP,EAAM0B,aAAY,KAChBY,EAAKpgB,KAAOyO,EAAIvQ,OAAOC,YAI7B,gBAAC,KAAD,CACEohB,YAAaa,EAAKxG,OAClBlY,SAAW+M,IACTqR,EAAwBrR,EAAK2R,EAAKxG,SAEpCyG,cAAgB5R,GAAQ6Q,EAAkBc,EAAKxG,OAAQnL,GACvD6R,UAAW3B,EAAe2B,UAC1BC,YAAa,CACX7jB,WAAW,EACXnB,GAAI,CAAE4kB,GAAI,IAEZN,KAAMH,EAAWU,EAAK3G,UAExB,gBAACpS,EAAA,EAAD,CACE9L,GAAI,CACFsD,MAAO,GACP0I,QAAS,OACT0Y,eAAgB,aAGlB,gBAAC,IAAD,CACElkB,MAAM,UACN,aAAY6E,EACZjF,QAASojB,GAET,gBAACyB,GAAA,EAAD,OAEF,gBAAC,IAAD,CACEzkB,MAAM,QACN,aAAY6E,EACZjF,QAASyjB,GAET,gBAACqB,GAAA,EAAD,YAMV,gBAAC,IAAD,CAAQ5c,QAAQ,YAAYlI,QAASojB,GAArC,4BAGA,gBAAC1X,EAAA,EAAD,KACGwS,GAAwBgF,EAAU/E,WAAY+E,EAAU9E,MAAO,KAGpE,gBAAC3V,EAAA,EAAD,KACE,gBAAC,IAAD,CAAQsc,WAAS,EAAC/kB,QAASN,GAA3B,gBAGA,gBAAC,IAAD,CAAQM,QA3JQ,KACpB,MAAMuB,EAAK4gB,EAAM6C,iBACjBxd,EAAUjG,GACV7B,KAwJoCqlB,WAAS,GAAzC,qBC0GR,IAAenc,EAAAA,EAAAA,KArSuC,EACpDqc,cACAC,iBAEA,MAAM/C,GAAQY,EAAAA,GAAAA,MACR,eAAEC,IAAmBC,EAAAA,EAAAA,MACpBkC,EAAUC,GAAe/F,EAAAA,SAC9B,OAEKva,EAASugB,GAAchG,EAAAA,SAAsB,KAC7Che,EAAM0M,GAAWsR,EAAAA,UAAe,GACjCiG,EAAUjG,EAAAA,OAAa,CAAEkG,SAAS,EAAOC,SAAS,KACjDC,EAAUC,EAAWC,IAAiBC,EAAAA,GAAAA,IAAe,UACrD7F,EAAU8F,GAAexG,EAAAA,SAC9B8C,EAAM2D,gBAAgBb,KAGjBc,EAAQC,GAAa3G,EAAAA,SAAe,IAWrC4G,EAAe5jB,IAOM,OANzBijB,EAAQ/T,QAAQgU,QACoD,UAAjEljB,EAAME,OAA6BghB,aAAa,aACnD+B,EAAQ/T,QAAQiU,QACoD,MAAjEnjB,EAAME,OAA6BghB,aAAa,aACnD6B,EAAY/iB,EAAMihB,eAEdnB,EAAM+D,gBACRb,EAAW,MAAAlD,EAAM+D,cAAcxf,MAApB,QAA8B8E,GAAMA,EAAE+W,aAI/C4D,EAAoB9jB,MASpBlB,EAAc,KAClBghB,EAAMiE,eAAiB,GACvBhB,EAAY,MACZC,EAAW,IACXW,EAAU,KAmCNK,EAAwB,KAC5BlE,EAAMmE,kBACNvY,GAAQ,IA+DJwY,EAAiB,CAAC3D,EAAiBrhB,KACnC4gB,EAAM+D,eAAe3kB,KAAOA,IAC9B4gB,EAAMqE,iBAAmB5D,IA2E7B,OACE,gCACE,gBAAC6D,GAAA,EAAD,CACE,aAAW,QACXC,oBAAqB,gBAACC,GAAA,EAAD,CAAmB1jB,SAAS,UACjD2jB,kBAAmB,gBAACC,GAAA,EAAD,CAAgB5jB,SAAS,UAC5CrD,GAAI,CACFshB,SAAU,EACVvb,UAA0B,IAAfwc,EAAMtM,KAAa,YAASlL,EACvCzH,MAAO,QAET4jB,cAAerB,EACf1F,SAAUA,EACVgH,aAhOqB,CAAC1kB,EAAO2kB,KACjCnB,EAAYmB,KAiOR,gBAACtG,GAAD,CACElB,OAAQyF,EAAY1jB,GAAG4L,WACvB,cAAa8X,EAAY5gB,KAAO4gB,EAAY1jB,GAC5Cuf,UAAWmE,EAAYnU,MACvBvF,IAzBWqX,IACbT,EAAM8E,oBAAoB1lB,KAAO0jB,EAAY1jB,KAC/C4gB,EAAM+E,gBAAkBtE,IAwBpBhjB,GAAI,CAAEsD,MAAO,OAAQjD,SAAU,YAC/BD,QAAS,IACPmiB,EAAMgF,iBAAYxc,OAAWA,OAAWA,EAAWua,GAErDrE,WAAY,gBAAC,IAAD,CAAQ7gB,QAvOA8S,IAC1BqP,EAAMiF,kBACNrZ,GAAQ,KAqOU,6BA9FdkX,EAAY9G,WAAWtY,OAAS,EAC3B,MAAAof,EAAY9G,YAAZ,QAA2B,CAACkJ,EAAKC,IACtC,gBAAC5G,GAAD,CACE9b,IAAKyiB,EAAI9lB,GACTie,OAAQ6H,EAAI9lB,GAAG4L,WACf2T,UAAWuG,EAAIxa,KACf7M,QAAS,KACPmiB,EAAMgF,iBAAYxc,OAAWA,EAAW2c,EAAUpC,IAEpDvS,cAAe0T,EACftF,KAAM7C,GAAwBmJ,EAAIlJ,WAAYkJ,EAAIjJ,MAAOkJ,IAEzD,gBAAC,GAAD,CACErF,SAAUE,EAAMiE,eAChB/E,QAASgG,EAAIhG,QACbC,gBAAiB2E,EACjBxE,QAAS0E,EACThE,MAAOA,EACPD,MAAOqE,EACPvmB,QAAS,CAACiF,EAAO0d,KACfR,EAAMgF,YAAYliB,EAAO0d,EAAU2E,EAAUpC,SAOnD,gBAAC,GAAD,CACE7D,QAAS4D,EAAY5D,QACrBI,QAAS0E,EACTnmB,QAAS,CAACiF,EAAO0d,KACfR,EAAMgF,YAAYliB,EAAO0d,OAAUhY,EAAWua,IAEhD/C,MAAOA,EACPb,gBAAiB2E,EACjBhE,SAAUE,EAAMiE,eAChBlE,MAAOqE,MA+DX,gBAAC,KAAD,CACEllB,KAAMyiB,QAAQqB,GACdA,SAAUA,EACVzlB,QAASyB,EACTomB,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,gBAAiB,CACfF,SAAU,MACVC,WAAY,SAGd,gBAACpf,EAAA,EAAD,CACEoO,YAAY,eACZjU,MAAOujB,EACPhgB,SAAW+M,GAAQkT,EAAUlT,EAAIvQ,OAAOC,SAE1C,gBAACyP,GAAA,EAAD,CAAMrS,GAAI,CAAEoB,OAAQ,IAAK2E,UAAW,SAnLb,MAC3B,GAAI2f,EAAQ/T,QAAQgU,QAAS,CAC3B,IAAIoC,EAAO3E,EAAe2B,UAI1B,OAHIoB,IACF4B,EAAO,KAAAA,GAAI,KAAJA,GAAa5N,IAAD,aAAO,OAAAA,EAAEnV,KAAF,OAAemhB,OAEpC,IAAA4B,GAAI,KAAJA,GAAUC,IACf,uBAAC1V,GAAA,GAAD,CAAUtN,IAAKgjB,EAAGhjB,IAAKgX,gBAAc,GACnC,gBAAC/J,GAAA,EAAD,CACEgW,UAAMld,EACN3K,SAlCiBwC,EAkCUolB,EAlCiB,KACpD,MAAME,EAAe,KAAAhjB,GAAO,KAAPA,EAAgBtC,GAC/BulB,EAAa,IAAIjjB,IACD,IAAlBgjB,GACFC,EAAW/gB,KAAKxE,GAChB2f,EAAM6F,aAAaxlB,EAAMoC,OAEzB,KAAAmjB,GAAU,KAAVA,EAAkBD,EAAc,GAChC3F,EAAM8F,gBAAgBzlB,EAAMoC,MAG9BygB,EAAW0C,KAwBHG,OAAK,GAEL,gBAACpU,GAAA,EAAD,KACE,gBAACiF,GAAA,EAAD,CACElG,KAAK,QACL/N,QAAS,KAAAA,GAAO,KAAPA,EAAiB8iB,GAC1BO,UAAW,EACXC,eAAa,KAGjB,gBAACrW,GAAA,EAAD,CAAcxQ,GAAIqmB,EAAGhjB,IAAKoN,QAAS4V,EAAGhjB,QA7CrBpC,SAiDlB,CACL,IAAI6lB,GAAgBC,EAAAA,GAAAA,IAAiBhD,EAAQ/T,QAAQiU,SAMrD,OALIO,IACFsC,EAAgB,KAAAA,GAAa,KAAbA,GAAsBE,IAAD,aACnC,OAAAA,EAAIzX,OAAJ,OAAmBiV,OAGhB,IAAAsC,GAAa,KAAbA,GAAmBT,IACxB,uBAAC1V,GAAA,GAAD,CAAUtN,IAAKgjB,EAAGplB,MAAOoZ,gBAAc,GACrC,gBAAC/J,GAAA,EAAD,CACEgW,UAAMld,EACN3K,SA9EYwC,EA8EUolB,EAAGrF,SA9EY,KAC7C,MAAMuF,EAAe,KAAAhjB,GAAO,KAAPA,EAAgBtC,GAC/BulB,EAAa,IAAIjjB,IACD,IAAlBgjB,GACFC,EAAW/gB,KAAKxE,GAChB2f,EAAMqG,kBAAkBhmB,KAExB,KAAAulB,GAAU,KAAVA,EAAkBD,EAAc,GAChC3F,EAAMsG,qBAAqBjmB,IAG7B6iB,EAAW0C,GAEP5F,EAAMM,OAASC,GAAAA,GAAAA,OAAwC,IAAlBoF,IACvC3F,EAAMtM,KAAO,EACb1U,OAgEM+mB,OAAK,GAEL,gBAACpU,GAAA,EAAD,KACE,gBAACiF,GAAA,EAAD,CACElG,KAAK,QACL/N,QAAS,KAAAA,GAAO,KAAPA,EAAiB8iB,EAAGrF,UAC7B4F,UAAW,EACXC,eAAa,EACbvR,WAAY,CAAE,kBAAmB+Q,EAAGplB,UAGxC,gBAACuP,GAAA,EAAD,CAAcxQ,GAAIqmB,EAAGplB,MAAOwP,QAAS4V,EAAG9W,UA1F5BtO,WA8NbkmB,KAGL,gBAAC,GAAD,CACE5F,SAAUmC,EAAYnU,MACtBzP,KAAMA,EACN3B,QAAS,IAAMqO,GAAQ,GACvBvG,UAjE0BjG,IAC9BskB,GAAavU,GAAQ,IAAIA,EAAK/P,EAAG4L,iBAkE/B,gBAACwY,EAAD,KACE,gBAAC3O,GAAA,EAAD,CAAUhX,QAnMK,KACnBmiB,EAAMwG,SACNjD,MAiMI,kBAjIa,IACsB,K,icC5LpC,SAASkD,GAAappB,GAC3B,MAAO8Z,EAAOuP,GAAYxJ,EAAAA,SAAe,CACvCnc,OAAQ,GAAM4lB,OAAOC,YAAY5b,WACjCnM,QAAS,GAAM8nB,OAAOE,aAAa7b,WACnC+H,EAAG,IAAO4T,OAAOC,WACjB5T,EAAG,IAAO2T,OAAOE,cAGnB,OACE,gBAAC,KAAD,CACEC,oBAAoB,yBACpBxoB,OAAQ,mCACRqK,SAfY,IAgBZpF,UAfa,IAgBbgI,UAAW,GAAMob,OAAOE,YACxB1nB,SAAU,GAAMwnB,OAAOC,WACvBnoB,KAAM,CAAEsC,MAAOoW,EAAMpW,MAAOlC,OAAQsY,EAAMtY,QAC1Cf,SAAU,CAAEiV,EAAGoE,EAAMpE,EAAGC,EAAGmE,EAAMnE,GACjC+T,WAAY,CAACziB,EAAG+E,KACVA,EAAE2J,EAAI,IAAG3J,EAAE2J,EAAI,GACnB0T,EAAS,SAAKvP,GAAN,IAAapE,EAAG1J,EAAE0J,EAAGC,EAAG3J,EAAE2J,MAEpC7J,aAAc,CAAC7E,EAAGN,EAAWoF,EAAK4d,EAAOlpB,KACvC4oB,EAAS,IACP3lB,MAAOqI,EAAIY,MAAMjJ,MACjBlC,OAAQuK,EAAIY,MAAMnL,QACff,MAIP,gBAACmpB,GAAA,GAAD,UACM5pB,EADN,CAEEI,GAAI,CACF,IAAK,CACHuD,OAAQ,EACRD,MAAO,OACP4H,SAvCM,IAwCNpF,UAvCO,IAwCP1E,OAAQ,OACR0M,UAAW,a,2BCzCvB,MASA,GAT2DlO,GAEvD,gBAACkM,EAAA,EAAD,KACE,gBAAC2d,GAAA,EAAD,MACA,gBAACA,GAAA,EAAD,MACA,gBAACA,GAAA,EAAD,OCiEN,IAAezgB,EAAAA,EAAAA,KA7DuB,KACpC,MAAMuZ,GAAQY,EAAAA,GAAAA,MACR,eAAEC,IAAmBC,EAAAA,EAAAA,KAErB5N,EAAe,CAACvC,EAAKyV,EAAKe,KAC9B,GAAe,iBAAXA,EACF,GAAkB,IAAdf,EAAI/lB,MACN2f,EAAMqG,uBAAkB7d,OACnB,CACL,MAAM4e,EAAMva,EAAAA,GAAAA,QAAAA,SAAAA,YAAiCuZ,EAAI/lB,OAC7C+mB,GAAKpH,EAAMqG,kBAAkBe,KAKjCC,EAAqB1W,IACrBA,EAAIvQ,OAAOC,OACb2f,EAAM6F,aAAalV,EAAIvQ,OAAOC,QAIlC,IAAK2f,EAAMsH,oBAAqB,CAC9B,GAAmB,IAAftH,EAAMtM,KAAY,CACpB,GAAIsM,EAAM+D,eAAe3jB,OACvB,MAAkC,aAA9B4f,EAAM+D,eAAe7hB,KAErB,gBAAC,KAAD,CACEqlB,YAAU,EACVlnB,MAAO,KACPuD,SAAUsP,EACVmQ,SAAO,IAKT,gBAAC,KAAD,CACEkE,YAAU,EACVlnB,MAAO,KACPuD,SAAUsP,IAIlB,GAAI8M,EAAM+D,eAAetE,MACvB,OACE,gBAAC,KAAD,CACE+C,UAAW3B,EAAe2B,UAC1B5e,SAAUyjB,IAKlB,OAAO,gBAAC,GAAD,MAGT,MAAMvK,EAASkD,EAAM+D,cAErB,OAAI7D,GAAAA,GAAkBpD,EAAO5a,OAAOiG,OAC3B+X,GAAAA,GAAkBpD,EAAO5a,MAAMiG,OAEjC,sECzDT,IAAe1B,EAAAA,EAAAA,KARoCpJ,GAE/C,gBAACkM,EAAA,EAAD,CAAK5L,EAAE,OACL,gBAAC,KAAD,mCACA,gBAAC,GAAD,SCQN,IAAe8I,EAAAA,EAAAA,KAZyC,KAAM,MAC5D,MAAMuZ,GAAQY,EAAAA,GAAAA,KAEd,OACE,gBAACrX,EAAA,EAAD,CAAK5L,EAAE,OACL,gBAAC,KAAD,mCACC,MAAAqiB,EAAMwH,cAAN,QAAuB,CAAC1K,EAAQha,IAC/B,gBAAC,GAAD,CAAgBggB,YAAahG,EAAQra,IAAKK,EAAOigB,WAAYjgB,U,mDCYrE,MAsDA,IAAe2D,EAAAA,EAAAA,KAtDyC,EACtDlI,QACAW,OACAuoB,SACAhkB,OACAikB,cAEA,MAAM1H,GAAQY,EAAAA,GAAAA,KAcd,OACE,gCACE,gBAAClR,GAAA,EAAD,CAAgB7R,QAAS4pB,EAAQ,WAAUlpB,GACzC,gBAACoT,GAAA,EAAD,KACE,gBAACgW,GAAA,EAAD,OAEF,gBAAC/X,GAAA,EAAD,CAAcC,QAAStR,IACtBW,EAAO,gBAACia,GAAA,EAAD,MAAiB,gBAACC,GAAA,EAAD,OAE3B,gBAACC,GAAA,EAAD,CAAUC,GAAIpa,EAAMqa,QAAQ,OAAOC,eAAa,GAC9C,gBAACoO,GAAA,GAAD,CAAMC,WAAS,EAAC1qB,QAAS,EAAGU,QAtBbqC,IACnB,MAAMgC,EAAQhC,EAAME,OAAuBghB,aAAa,aAClD/X,EAAI,IAAA5F,GAAI,KAAJA,GAAWqkB,GAAMA,EAAE5lB,OAASA,IACjCmH,IACDqe,GACF1H,EAAM+H,eAAe,GACrB/H,EAAMgI,eAAe3e,IAErB2W,EAAMiI,cAAc5e,MAef,IAAA5F,GAAI,KAAJA,GAAS,CAACqkB,EAAGhlB,IACZ,gBAAC8kB,GAAA,GAAD,CAAMllB,MAAI,EAACwlB,GAAI,EAAGzlB,IAAKK,EAAOrF,GAAI,CAAEoD,UAAW,WAC7C,gBAAC,IAAD,CACEjC,WAAS,EACTnB,GAAI,CACF6N,gBAAiB,UACjBoR,WAAY,IACZze,MAAO,WAET0f,SAAU+J,GAAW1H,EAAMmI,YAAYL,EAAE5lB,MACzC,YAAW4lB,EAAE5lB,KACb6D,QAAQ,QAEP+hB,EAAEnZ,gBCVnB,IArCyDlI,EAAAA,EAAAA,KACvD,EAAGlC,OAAMmjB,cAAc,MACrB,MAAM1H,GAAQY,EAAAA,GAAAA,KAERkD,EAAe5jB,IAAgC,MACnD,MAAMgC,EAAQhC,EAAMihB,cAA8BC,aAChD,aAEI/X,EAAI,MAAA9E,EAAKd,MAAL,QAAgBqkB,GAAMA,EAAE5lB,OAASA,IACtCmH,IACDqe,GACF1H,EAAM+H,eAAe,GACrB/H,EAAMgI,eAAe3e,GACrB2W,EAAMtM,KAAO,IAEbsM,EAAMiI,cAAc5e,GACpB2W,EAAMtM,KAAO,KAIjB,OACE,gCACE,gBAAC0O,EAAA,EAAD,KAAU7d,EAAKoK,OACd,MAAApK,EAAKd,MAAL,QAAe4F,GACd,gBAACqG,GAAA,EAAD,CACEiO,SAAU+J,GAAW1H,EAAMmI,YAAY9e,EAAEnH,MACzC,YAAWmH,EAAEnH,KACbrE,QAASimB,EACTrhB,IAAK4G,EAAEnH,MAEP,gBAAC0N,GAAA,EAAD,CAAcC,QAASxG,EAAEsF,eClCrC,IACIkH,GADAuS,IAAU,EAGd,MAqHA,GArHmD,EACjDC,WACA9pB,QACA+pB,SACA/qB,cAEA,MAAOgrB,EAAOC,IAAYxmB,EAAAA,EAAAA,UAAS,IAC7BymB,GAAevc,EAAAA,EAAAA,QAAoB,OAClCyO,EAAUC,IAAe5Y,EAAAA,EAAAA,UAC9B,IAAI,KAAJ,CAAQ,IAAAqmB,GAAQ,KAARA,GAAcP,GAAMA,EAAEnZ,UAG1BmV,EAAe5jB,IACnB,MAAMyX,EAAIzX,EAAMihB,cAAcC,aAAa,YACvCzG,EAAS9J,IAAI8G,GAAIgD,EAAS7J,OAAO6G,GAChCgD,EAAS9M,IAAI8J,GAClBiD,EAAY,IAAI,KAAJ,CAAQD,KAGhB+N,EAAc/X,IAClB,IAAIgY,EAAchY,EAAIiY,cACtB,IAAKD,EAAa,OAClB,MAAME,EAASJ,EAAarZ,QAE5ByG,GAAQ,MAAW,KACjB,IAAIuS,IACCS,GAAQC,WAAb,CACA,KAAOH,GAAa,CAClB,GAAIA,EAAYI,gBAAkBF,EAChC,OAEFF,EAAcA,EAAYI,cAE5BxrB,SACC,MAUL,OAPA4J,EAAAA,EAAAA,YAAU,IACD,KACL0O,IAASiB,aAAajB,IACtBuS,IAAU,KAIVE,EAEA,gBAAC/e,EAAA,EAAD,CACE9L,GAAI,CACFsD,MAAOunB,EAAS,IAAM,OACtB3Y,QAAS,mBACThS,EAAG,GAELyL,IAAKqf,EACL3oB,UAAWmnB,GAAAA,GAEX,gBAAC/U,EAAA,EAAD,CAAO8W,cAAc,MAAMvrB,GAAI,CAAEoB,OAAQ,OACvC,gBAACooB,GAAA,EAAD,CACExpB,GAAI,CACFgM,QAAS,OACToN,WAAY,SACZ9V,MAAO,SAGT,gBAACkoB,GAAA,GAAD,CACE5oB,MAAOkoB,EACP9qB,GAAI,CAAEiM,KAAM,GACZ4K,YAAY,uCACZsO,WAAS,EACTnL,OAAQiR,IAEV,gBAAC,IAAD,KACE,gBAACQ,GAAA,EAAD,CAAYpoB,SAAS,aAI3B,gBAACgP,GAAA,EAAD,CACErS,GAAI,CAAE+F,UAAW,OAAQ+H,UAAW,KACpCzL,UAAU,MACV,kBAAgB,yBAEf,IAAAuoB,GAAQ,KAARA,GAAc9jB,GACb,gBAAC,GAAD,CACE9B,IAAK8B,EAAKoK,MACVpK,KAAMA,EACNmjB,QAAS,KAAAnpB,GAAK,KAALA,EAAe,sBASlC,gBAACgL,EAAA,EAAD,CACE9L,GAAI,CACFsD,MAAO,OACP5B,SAAU,IACVwQ,QAAS,mBACTnM,UAAW,SAGb,gBAAC,KAAD,SAAcjF,GACd,gBAACuR,GAAA,EAAD,CAAMhQ,UAAU,MAAM,kBAAgB,yBACnC,IAAAuoB,GAAQ,KAARA,GAAc9jB,GACb,gBAAC,GAAD,CACE9B,IAAK8B,EAAKoK,MACVpQ,MAAOgG,EAAKoK,MACZzP,KAAMyb,EAAS9J,IAAItM,EAAKoK,OACxB8Y,OAAQ3D,EACRrgB,KAAMc,EAAKd,KACXikB,QAAS,KAAAnpB,GAAK,KAALA,EAAe,uB,gBClI7B,MAAM4qB,GAAc,CACzB,CACExa,MAAO,2BACPvP,GAAI,QACJU,UAAW,gBAAC,GAAD,CAAcvB,MAAM,iBAAO8pB,SAAUe,GAAAA,MAElD,CACEza,MAAO,2BACPvP,GAAI,SACJU,UAAW,gBAAC,GAAD,CAAcvB,MAAM,iBAAO8pB,SAAUgB,GAAAA,OAIvCC,GAAgB,CAC3B,CACE3a,MAAO,2BACPvP,GAAI,QACJU,UAAW,gBAAC,GAAD,CAAcvB,MAAM,iBAAO8pB,SAAUkB,GAAAA,MAElD,CACE5a,MAAO,2BACPvP,GAAI,SACJU,UAAW,gBAAC,GAAD,CAAcvB,MAAM,iBAAO8pB,SAAUgB,GAAAA,OCA9CG,GAAatM,EAAAA,YAAiB,SAClC7f,EAGA+L,GAEA,OAAO,gBAACqgB,GAAA,GAAD,QAAOzlB,UAAU,KAAKoF,IAAKA,GAAS/L,OAiG7C,IAAeoJ,EAAAA,EAAAA,KA1FyC,EAAGlJ,cACzD,MAAMyiB,GAAQY,EAAAA,GAAAA,KAUR5hB,EAAc,CAAC2R,EAAKwW,KACxBnH,EAAM0J,cACN1J,EAAM2J,SAAU,EAChBpsB,EAAQoT,EAAKwW,IAGTvd,EAAOoW,EAAM4J,aAAeN,GAAgBH,GAElD,OACE,gBAACnsB,EAAA,EAAD,CACE4B,WAAS,EACTO,SAAS,KACTD,MAAM,EACN3B,QAASyB,EACT6qB,oBAAqBL,GACrBprB,eAAgBqoB,IAEhB,gBAAC,KAAD,CACElpB,QAASyB,EACTT,MAAM,2BACN6e,UAAU,yBACV3f,GAAI,CAAEG,OAAQ,UAEhB,gBAACiI,EAAA,EAAD,KACE,gBAAC0D,EAAA,EAAD,CAAK1K,OAAO,QACV,gBAAC0K,EAAA,EAAD,CAAK1K,OAAQ,IACX,gBAACirB,EAAA,EAAD,CACEzpB,MAAO2f,EAAMgG,SACbpiB,SApCS,CAAC1D,EAA6B8U,KACjDgL,EAAM+H,eAAe/S,IAoCX,aAAW,4BAEV,IAAApL,GAAI,KAAJA,GAAS,CAACC,EAAG/G,IACZ,gBAACinB,EAAA,GAAD,QACEtnB,IAAKoH,EAAEzK,GACPuP,MAAO9E,EAAE8E,QACLqb,EAAAA,EAAAA,GAAUlnB,GAHhB,CAIE6a,UAAuC,IAA7BqC,EAAMiK,mBAAsC,IAAVnnB,SAKpD,gBAACoP,EAAA,EAAD,CACE8W,cAAc,MACdlpB,UAAWoqB,GAAAA,EACXC,QAAM,EACNC,UAAW,EACX3sB,GAAI,CAAEoB,OAAQ,sBAEd,gBAAC0K,EAAA,EAAD,CAAKxI,MAAM,MAAMjB,UAAWoqB,GAAAA,EAAM5mB,SAAS,QACxC,IAAAsG,GAAI,KAAJA,GAAS,CAACC,EAAG/G,IACZ,gBAAC,IAAD,CACEzC,MAAO2f,EAAMgG,SACbvjB,IAAKK,EACLiH,aAAcjH,GAEb+G,EAAE/J,cAIT,gBAACyJ,EAAA,EAAD,CAAKG,KAAM,EAAG5J,UAAWoqB,GAAAA,EAAM5mB,SAAS,QACtC,gBAAC,GAAD,OAEF,gBAACiG,EAAA,EAAD,CAAKG,KAAM,EAAG5J,UAAWoqB,GAAAA,GACvB,gBAAC,GAAD,UAKR,gBAAC5jB,EAAA,EAAD,KACE,gBAAC,IAAD,CAAQsc,WAAS,EAAC/kB,QAASmB,GAA3B,gBAGA,gBAAC,IAAD,CAAQnB,QA5EQ,KACpBmiB,EAAMqK,OACNrrB,EAAY,OA0EwB4jB,WAAS,GAAzC,qB,2BCpGR,MAAM1V,IAA0CzG,EAAAA,EAAAA,KAAS,KAAM,MAC7D,MAAM,UAAEC,IAAcE,EAAAA,EAAAA,MACf1H,EAAM0M,IAAW5J,EAAAA,EAAAA,WAAS,IAC1BghB,EAAUC,GAAe/F,EAAAA,SAC9B,MAeIoN,EAAY,KAChBrH,EAAY,MACZtD,GAAAA,GAAAA,KAAwB,GA6BpB0K,EAAO,KACX3jB,EAAU2jB,QAGZ,OAAK3jB,EAAU8P,cAgBb,gBAAC,cAAD,CAAkCnW,MAAOsf,GAAAA,IACvC,gBAACpW,EAAA,EAAD,CAAK1I,UAAU,QAAQE,MAAM,QAC3B,gBAAC,IAAD,CAAYlD,QAjEM,KACtB8hB,GAAAA,GAAAA,SAA2B,EAC3BA,GAAAA,GAAAA,KAAwBY,GAAAA,GAAAA,MACxBZ,GAAAA,GAAAA,cACAA,GAAAA,GAAAA,sBACA/T,GAAQ,KA6DF,gBAAC2e,GAAA,EAAD,OAEDrrB,GAAQ,gBAAC,GAAD,CAAiB3B,QAnDZ,CAAC+G,EAAG6iB,KAClBA,GAAqB,kBAAXA,IACdxH,GAAAA,GAAAA,KAAwBY,GAAAA,GAAAA,KACxB3U,GAAQ,QAkDN,gBAACrC,EAAA,EAAD,CAAKxI,MAAM,QACR,MAAA4e,GAAAA,GAAAA,qBAAA,QAAyC,CAAC7C,EAAQha,IACjD,gBAAC,GAAD,CACEggB,YAAahG,EACbra,IAAKqa,EAAO1d,GACZ2jB,WAAYjgB,OAIlB,gBAACyG,EAAA,EAAD,CAAKxI,MAAM,OAAOjD,SAAS,YACzB,gBAAC,IAAD,CACEG,MAAM,UACN8H,QAAQ,YACRnH,WAAS,EACT4rB,UAAW,gBAACtR,GAAA,EAAD,MACXrb,QA7EaqC,IACnB+iB,EAAY/iB,EAAMihB,eAClBxB,GAAAA,GAAAA,KAAwB,IAsEpB,4BASA,gBAAC8K,GAAA,GAAD,CACEvrB,OAAmC,IAA1BygB,GAAAA,GAAAA,MACTqD,SAAUA,EACVzlB,QAAS+sB,EACTlF,aAAc,CACZC,SAAU,SACVC,WAAY,SAGd,gBAAC,GAAD,CACEgD,QAAM,EACN/pB,MAAM,eACN8pB,SAAUe,GAAAA,GACV7rB,QAAS+sB,KAGb,gBAACG,GAAA,GAAD,CACEvrB,QAEIygB,GAAAA,GAAAA,iBAAkC+K,aACR,IAA1B/K,GAAAA,GAAAA,MAGJqD,SAAUrD,GAAAA,GAAAA,gBACVpiB,QAAS+sB,EACTlF,aAAc,CACZC,SAAU,SACVC,WAAY,SAGd,gBAAC,GAAD,CACEgD,QAAM,EACN/pB,MAAM,eACN8pB,SAAUgB,GAAAA,GACV9rB,QAAS+sB,KAGb,gBAACG,GAAA,GAAD,CACEvrB,QAEIygB,GAAAA,GAAAA,kBAAmC+K,aACT,IAA1B/K,GAAAA,GAAAA,MAGJqD,SAAUrD,GAAAA,GAAAA,iBACVpiB,QArGkB,KACxBoiB,GAAAA,GAAAA,KAAwB,EACpBA,GAAAA,GAAAA,SACFA,GAAAA,GAAAA,UAA4B,GAE5BA,GAAAA,GAAAA,SACAA,GAAAA,GAAAA,mBAgGIyF,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdtL,WAAY,CAAEvc,GAAI,CAAE6F,SAAU,aAE9B,gBAAC2jB,GAAA,EAAD,CAAOxpB,GAAI,CAAEsD,MAAO,IAAKpD,EAAG,IAC1B,gBAAC,GAAD,MACA,gBAAC,KAAD,CAAQwkB,eAAe,gBAAgB1kB,GAAI,CAAE0U,GAAI,IAC/C,gBAAC,IAAD,CAAQlU,MAAM,UAAUJ,QAzHd,KACpB8hB,GAAAA,GAAAA,KAAwB,EACxBA,GAAAA,GAAAA,mBAuHU,gBAGA,gBAAC,IAAD,CAAQ1hB,MAAM,QAAQJ,QAxHb,KACnB8hB,GAAAA,GAAAA,KAAwB,EACxBA,GAAAA,GAAAA,UAA4B,EAC5BA,GAAAA,GAAAA,SACAA,GAAAA,GAAAA,mBAqHaA,GAAAA,GAAAA,SAA4B,eAAO,qBAnG9C,gBAAC,KAAD,CACEphB,MACE,gBAACgL,EAAA,EAAD,KACE,gBAACA,EAAA,EAAD,iFACA,gBAACA,EAAA,EAAD,gCACM,gBAAC,IAAD,CAAQ1L,QAASwsB,GAAjB,gBAAmC,WAuGrD,MC/KA,IACE9gB,IAAK,CACH,CACE9G,IAAK,QACLpC,MAAO,EACP6B,KAAM,SACN3D,MAAO,UAET,CACEkE,IAAK,QACLpC,MAAO,EACP6B,KAAM,SACN3D,MAAO,UAET,CACEkE,IAAK,SACLpC,MAAO,EACP6B,KAAM,SACN3D,MAAO,WAGXosB,OAAQ,CACN,CACEloB,IAAK,WACLpC,MAAO,EACP6B,KAAM,SACN3D,MAAO,iBASXqsB,MAAO,CACL,CACEnoB,IAAK,QACLpC,MAAO,EACP6B,KAAM,SACN3D,MAAO,UAET,CACEkE,IAAK,SACLpC,MAAO,EACP6B,KAAM,SACN3D,MAAO,WAGXssB,SAAU,CACR,CACEpoB,IAAK,cACLpC,MAAO,EACP6B,KAAM,SACN3D,MAAO,4BAET,CACEkE,IAAK,iBACLpC,MAAO,EACP6B,KAAM,SACN3D,MAAO,4BAET,CACEkE,IAAK,SACLpC,MAAO,EACP6B,KAAM,SACN3D,MAAO,WAeXusB,QAAS,CACP,CACEroB,IAAK,SACLpC,MAAO,EACP6B,KAAM,SACN3D,MAAO,gBAcT,CACEkE,IAAK,SACLpC,MAAO,EACP6B,KAAM,SACN3D,MAAO,UAET,CACEkE,IAAK,eACLpC,MAAO,EACP6B,KAAM,SACN3D,MAAO,sBAET,CACEkE,IAAK,eACLpC,MAAO,EACP6B,KAAM,SACN3D,MAAO,sBAET,CACEkE,IAAK,kBACLpC,MAAO,EACP6B,KAAM,SACN3D,MAAO,uBAeXwsB,OAAQ,CACN,CACEtoB,IAAK,QACLpC,MAAO,EACP6B,KAAM,SACN3D,MAAO,UAET,CACEkE,IAAK,SACLpC,MAAO,EACP6B,KAAM,SACN3D,MAAO,Y,qICtJb,MAsCA,GAtCsD,EACpDA,QACAuO,UACAke,cAAc,OAEd,MAAOhI,EAAUC,IAAejhB,EAAAA,EAAAA,UAA6B,MACvD9C,EAAOyiB,QAAQqB,GAKfhkB,EAAc,KAClBikB,EAAY,OAGd,OACE,gCACE,gBAAC,KAAD,QAAQplB,QATSqC,IACnB+iB,EAAY/iB,EAAMihB,iBAQkB6J,GAC/BzsB,GAEH,gBAAC0sB,GAAA,EAAD,CACE7rB,GAAG,aACH4jB,SAAUA,EACV9jB,KAAMA,EACN3B,QAASyB,EACTksB,cAAe,CACb,kBAAmB,iBAGpB,IAAApe,GAAO,KAAPA,GAAY,CAACsZ,EAAKtjB,IACjB,gBAAC+R,GAAA,EAAD,CAAUpS,IAAKK,EAAOjF,QAAS,IAAMuoB,EAAIvoB,QAAQmB,IAC9ConB,EAAIzX,Y,gBCFjB,MA0HA,GA1HkD,EAChDpK,OACAX,WACAunB,WACAC,cACAC,kBACI,MACJ,OACE,gCACE,gBAACtb,GAAA,GAAD,KACE,gBAAC,KAAD,CACE1P,MAAOkE,EAAKrC,KACZtD,WAAS,EACTkO,QAAS,CAAC,MAAO,QACjB6B,MAAM,8BAGV,gBAACoB,GAAA,GAAD,KACE,gBAAC,KAAD,CACEnR,WAAS,EACT+P,MAAM,2BACNlQ,KAAK,QACL4B,MAAOkE,EAAK8C,IACZqD,KAAK,MACL9G,SAAUA,KAGb,MAAAW,EAAKuD,QAAL,QAAgB,CAACwjB,EAAKxoB,IACrB,gBAACiN,GAAA,GAAD,CAAUtN,IAAK6oB,EAAIlsB,IACjB,gBAACmK,EAAA,EAAD,KACE,gBAAC,KAAD,CAAQ4Y,eAAe,iBACrB,gBAAC,KAAD,oBAAerf,EAAQ,GACvB,gBAAC,IAAD,CAAYjF,QAAS,IAAMwtB,EAAYvoB,IACrC,gBAACyoB,GAAA,EAAD,QAGJ,gBAAC,KAAD,CACE5c,MAAM,SACNlQ,KAAK,QACLhB,GAAI,CAAE4F,GAAI,GACVhD,MAAOirB,EAAI7oB,IACXmB,SAAW+M,GAAQya,EAAYtoB,EAAO,CAAEL,IAAKkO,EAAIvQ,OAAOC,UAE1D,gBAAC,KAAD,KACE,gBAAC,KAAD,CACE5C,GAAI,CAAEsD,MAAO,OACb4N,MAAM,SACNlQ,KAAK,QACL4B,MAAOirB,EAAIjrB,MACXuD,SAAW+M,GACTya,EAAYtoB,EAAO,CAAEzC,MAAOsQ,EAAIvQ,OAAOC,UAG3C,gBAAC,GAAD,CACE2qB,YAAa,CAAEjlB,QAAS,YAAatH,KAAM,SAC3CF,MAAM,2BACNuO,QAAS,CAAC,CAAE6B,MAAO,qBAAO9Q,QAAU2tB,GAAUA,aAMxD,gBAACzb,GAAA,GAAD,KACE,gBAAC,IAAD,CAAQhK,QAAQ,YAAYlI,QAASstB,GAArC,6BAIF,gBAACpb,GAAA,GAAD,KACE,gBAACH,GAAA,EAAD,4BAEF,gBAACG,GAAA,GAAD,KACE,gBAAC0b,GAAA,EAAD,CACE,aAAW,iCACXC,QAAS,EACTpX,YAAY,uCACZjU,MAAOkE,EAAKonB,SACZ3hB,MAAO,CAAEjJ,MAAO,QAGpB,gBAACgP,GAAA,GAAD,KACE,gBAACH,GAAA,EAAD,4BAEF,gBAACG,GAAA,GAAD,KACE,gBAAC0b,GAAA,EAAD,CACE,aAAW,SACXC,QAAS,EACTpX,YAAY,2BACZjU,MAAK,KAAEkE,GACPmG,KAAK,SACL9G,SAAUA,EACVoG,MAAO,CAAEjJ,MAAO,QAGpB,gBAACgP,GAAA,GAAD,KACE,gBAACuG,GAAA,EAAD,CACEK,QAAS,gBAACC,GAAA,EAAD,MACTjU,QAAS4B,EAAKqnB,QACdhoB,SAAUA,EACV8G,KAAK,UACLiE,MAAM,2BACN1Q,MAAM,UACNR,GAAI,CAAEsD,MAAO,OAEdwD,EAAKqnB,SACJ,gBAAC,KAAD,CACEvrB,MAAOkE,EAAKkW,KACZ/P,KAAK,OACL9G,SAAUA,EACV2Q,WAAY,CACVsX,eACE,gBAACC,GAAA,EAAD,CAAgBhuB,SAAS,SAAzB,gBAEFiuB,aACE,gBAACD,GAAA,EAAD,CAAgBhuB,SAAS,SAAzB,gB,yaC/IhB,MAAMkuB,IAAiBjvB,EAAAA,GAAAA,IAAOksB,GAAAA,GAAPlsB,EAAkB,EAAGE,YAAH,CACvC,YAAa,CACXgvB,UAAWhvB,EAAME,QAAQ,IAE3B,wBAAyB,CACvBqX,aAAc,EACd1W,SAAU,WACVsG,OAAQ,oBACRtD,SAAU,GACVC,MAAO,OACP7D,QAAS,YACTgvB,WAAYjvB,EAAMkvB,YAAYC,OAAO,CACnC,eACA,mBACA,eAGFC,WAAY,CACV,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAlQ,KAAK,KACP,UAAW,CACTmQ,UAAY,IAAEC,EAAAA,GAAAA,IAAMtvB,EAAMiB,QAAQ2R,QAAQ2c,KAAM,oBAChD/c,YAAaxS,EAAMiB,QAAQ2R,QAAQ2c,WAsEzC,GAlE0C,EAAGjoB,OAAMX,cAE/C,gCACE,gBAACmM,GAAA,GAAD,KACE,gBAACjK,EAAA,EAAD,CAAaC,QAAQ,YACnB,gBAACC,EAAA,EAAD,CAAYymB,QAAM,EAACxmB,QAAQ,WAA3B,mBAGA,gBAAC+lB,GAAD,CACE5sB,GAAG,UACHiB,MAAOkE,EAAKmoB,YACZ9oB,SAAWU,IACT,IAAIqoB,EAAO,SAAKpoB,GAAR,IAAcmoB,YAAapoB,EAAElE,OAAOC,QAC5CuD,EAAS+oB,QAKjB,gBAAC5c,GAAA,GAAD,KACE,gBAACjK,EAAA,EAAD,CAAaC,QAAQ,YACnB,gBAACC,EAAA,EAAD,CAAYymB,QAAM,EAACxmB,QAAQ,QAA3B,gBAGA,gBAAC+lB,GAAD,CACE5sB,GAAG,OACHiB,MAAOkE,EAAKqoB,SACZhpB,SAAWU,IACT,IAAIqoB,EAAO,SAAKpoB,GAAR,IAAcqoB,SAAUtoB,EAAElE,OAAOC,QACzCuD,EAAS+oB,QAKjB,gBAAC5c,GAAA,GAAD,KACE,gBAACjK,EAAA,EAAD,CAAaC,QAAQ,YACnB,gBAACC,EAAA,EAAD,CAAYymB,QAAM,EAACxmB,QAAQ,UAA3B,gBAGA,gBAAC+lB,GAAD,CACE5sB,GAAG,SACHiB,MAAOkE,EAAKsoB,WACZjpB,SAAWU,IACT,IAAIqoB,EAAO,SAAKpoB,GAAR,IAAcsoB,WAAYvoB,EAAElE,OAAOC,QAC3CuD,EAAS+oB,QAKjB,gBAAC5c,GAAA,GAAD,KACE,gBAACjK,EAAA,EAAD,CAAaC,QAAQ,YACnB,gBAACC,EAAA,EAAD,CAAYymB,QAAM,EAACxmB,QAAQ,OAA3B,gBAGA,gBAAC+lB,GAAD,CACE5sB,GAAG,MACHiB,MAAOkE,EAAKuoB,QACZlpB,SAAWU,IACT,IAAIqoB,EAAO,SAAKpoB,GAAR,IAAcuoB,QAASxoB,EAAElE,OAAOC,QACxCuD,EAAS+oB,S,uCC5FvB,IAAII,GAAWC,KAAAA,OAAa,IA6BrBrnB,eAAesnB,GAAiBnlB,GACrC,MAAMolB,QAAetlB,EAAAA,EAAAA,IAAOulB,EAAAA,GAAAA,KAAoB,IAAMrlB,EAAO1I,IAC7D,GAAI8tB,EAAOvlB,OAASO,EAAAA,GAAAA,GAAmB,CACrC,IAAI3D,EAAO,CAAE6oB,OAAQ,GAAIC,UAAW,GAAIC,KAAM,IAC5CC,EAAUL,EAAO3oB,KAInB,OAHAA,EAAK6oB,OAASG,EAAQC,QACtBjpB,EAAK8oB,UAAYE,EAAQF,UACzB9oB,EAAK+oB,KAAOC,EAAQD,KACb/oB,EAET,OAAO,KAtCTwoB,GAASU,SAASC,QAAUC,iCCY5B,MA4DA,GA5D8C,EAC5CpwB,UACA8C,MAAOutB,EACPrvB,QACAuO,cAEA,MAAOzM,EAAOwtB,IAAY7rB,EAAAA,EAAAA,UAAS4rB,IACnCzmB,EAAAA,EAAAA,YAAU,KACR0mB,EAASD,KACR,CAACA,IAkBJ,OACE,gBAAC5wB,EAAA,EAAD,CACEkC,MAAM,EACNzB,GAAI,CAAE,qBAAsB,CAAEsD,MAAO,MAAOwK,UAAW,MACvDpM,SAAS,MAET,gBAACyG,EAAA,EAAD,KAAcrH,GACd,gBAACsH,EAAA,EAAD,CAAexG,UAAQ,GACrB,gBAACwY,GAAA,EAAD,CACE,aAAW,WACXnN,KAAK,WACLrK,MAAOA,EACPuD,SApBc1D,IACpB,IAAI4tB,EAAa5tB,EAAME,OAA4BC,MAEjDwtB,EADmB,iBAAVxtB,EACAkI,OAAOulB,GAEPA,KAiBJ,IAAAhhB,GAAO,KAAPA,GAAa8H,GACZ,gBAAC0B,GAAA,EAAD,CACEjW,MAAOuU,EAAOxV,GACdqD,IAAKmS,EAAOxV,GACZuX,QAAS,gBAACoB,GAAA,EAAD,MACTpJ,MAAOiG,EAAOlK,WAKtB,gBAACpE,EAAA,EAAD,KACE,gBAAC,IAAD,CAAQsc,WAAS,EAAC/kB,QAzCH,KACnBN,MAwCI,gBAGA,gBAAC,IAAD,CAAQM,QAxCG,KACfN,EAAQ8C,KAuCJ,mBC5DF2rB,IAAiBjvB,EAAAA,GAAAA,IAAOksB,GAAAA,GAAPlsB,EAAkB,EAAGE,YAAH,CACvC,YAAa,CACXgvB,UAAWhvB,EAAME,QAAQ,IAE3B,wBAAyB,CACvBqX,aAAc,EACd1W,SAAU,WACVsG,OAAQ,oBACRtD,SAAU,GACVC,MAAO,OACP7D,QAAS,YACTgvB,WAAYjvB,EAAMkvB,YAAYC,OAAO,CACnC,eACA,mBACA,eAGFC,WAAY,CACV,gBACA,qBACA,aACA,SACA,mBACA,QACA,aACA,sBACA,mBACA,qBACAlQ,KAAK,KACP,UAAW,CACTmQ,UAAY,IAAEC,EAAAA,GAAAA,IAAMtvB,EAAMiB,QAAQ2R,QAAQ2c,KAAM,oBAChD/c,YAAaxS,EAAMiB,QAAQ2R,QAAQ2c,WAoOzC,GAvMkD,EAAGjoB,OAAMX,eAEzD,MAAOmqB,EAAaC,IAAkBhsB,EAAAA,EAAAA,WAAS,IACxCisB,EAAUC,IAAelsB,EAAAA,EAAAA,UAAS,IAiBnCmsB,EAAqB/uB,IACzB,MAAMgvB,EAAiB,IAAAH,GAAQ,KAARA,GAAevrB,GAASA,EAAKtD,KAAOA,IAC3DmF,EAAK8pB,UAAYD,EAAehvB,GAChCmF,EAAKmoB,YAAc0B,EAAe1jB,OAG7B4jB,EAAUC,IAAevsB,EAAAA,EAAAA,WAAS,IAClCwsB,EAAOC,IAAYzsB,EAAAA,EAAAA,UAAS,IAsB7B0sB,EAAkBtvB,IACtB,MAAMuvB,EAAc,IAAAH,GAAK,KAALA,GAAY9rB,GAASA,EAAKtD,KAAOA,IACrDmF,EAAKqqB,OAASD,EAAYvvB,GAC1BmF,EAAKqoB,SAAW+B,EAAYjkB,OAGvBmkB,EAAYC,IAAiB9sB,EAAAA,EAAAA,WAAS,IACtC+sB,EAASC,IAAchtB,EAAAA,EAAAA,UAAS,IAuBjCitB,EAAoB7vB,IACxB,MAAM8vB,EAAgB,IAAAH,GAAO,KAAPA,GAAcrsB,GAASA,EAAKtD,KAAOA,IACzDmF,EAAK4qB,SAAWD,EAAc9vB,GAC9BmF,EAAKsoB,WAAaqC,EAAcxkB,KAChCnG,EAAK6qB,UAAYF,EAAcE,UAC/B7qB,EAAK8qB,aAAeH,EAAcG,eAG7BC,EAASC,IAAcvtB,EAAAA,EAAAA,WAAS,IAChCwtB,EAAMC,IAAWztB,EAAAA,EAAAA,UAAS,IAuB3B0tB,EAAiBtwB,IACrB,MAAMuwB,EAAa,IAAAH,GAAI,KAAJA,GAAW9sB,GAASA,EAAKtD,KAAOA,IACnDmF,EAAKqrB,MAAQD,EAAWvwB,GACxBmF,EAAKuoB,QAAU6C,EAAWjlB,KAC1BnG,EAAK9B,IAAMktB,EAAWE,OACtBtrB,EAAKurB,YAAcH,EAAWG,aAEhC,OACE,gCACE,gBAAC/f,GAAA,GAAD,KACE,gBAACjK,EAAA,EAAD,CAAaC,QAAQ,WAAWtI,GAAI,CAAEsD,MAAO,SAC3C,gBAACiF,EAAA,EAAD,CAAYymB,QAAM,EAACxmB,QAAQ,WAA3B,gBAGA,gBAAC,GAAD,CACE7G,GAAG,UACHiB,MAAOkE,EAAKmoB,YACZ7uB,QA5HS,MFtEd8H,eAAgCmC,GACrC,MAAMioB,EAAQ,GACR7C,QAAetlB,EAAAA,EAAAA,IAAOulB,EAAAA,GAAAA,KAAmB,CAC7CrlB,OAAQ,CACNkoB,WAAYloB,EAAON,UACnBtF,KAAM4F,EAAOmoB,UAGjB,GAAI/C,EAAOvlB,OAASO,EAAAA,GAAAA,GAAmB,CACrC,IAAIqlB,EAAUL,EAAO3oB,KACR,MAab,OAbIgpB,GACF,KAAcA,EAAQ9pB,OACpB,OAAA8pB,EAAQ9pB,MAAR,QAAsBysB,IACpB,IAAI3rB,EAAO,CACTmG,KAAM,GACNtL,GAAI,GAENmF,EAAKnF,GAAK8wB,EAAQ9wB,GAClBmF,EAAKmG,KAAOwlB,EAAQxlB,KACpBqlB,EAAMlrB,KAAKN,MAIVwrB,EAET,OAAO,MEkDLI,CAJa,CACX3oB,UAAWb,GAAAA,EAAAA,UACXspB,OAAQ1rB,EAAK0rB,SAEUjoB,MAAMooB,IAC7BlC,EAAYkC,MAEdpC,GAAe,QAwHb,gBAACje,GAAA,GAAD,KACE,gBAACjK,EAAA,EAAD,CAAaC,QAAQ,WAAWtI,GAAI,CAAEsD,MAAO,SAC3C,gBAACiF,EAAA,EAAD,CAAYymB,QAAM,EAACxmB,QAAQ,QAA3B,gBAGA,gBAAC,GAAD,CAAgB7G,GAAG,OAAOiB,MAAOkE,EAAKqoB,SAAU/uB,QA7GxC8H,UACd,IAAI2nB,QAAaL,GAAiB,CAAE7tB,GAAImF,EAAK8pB,YACxCf,IFzDF3nB,eAA2BmC,GAChC,MAAMioB,EAAQ,GACR7C,QAAeH,GAASrlB,IAAI2oB,EAAAA,GAAAA,SAAqB,CACrDvoB,OAAQ,CACNwoB,OAAQxoB,EAAOslB,OACfC,UAAWvlB,EAAOulB,UAClBC,KAAMxlB,EAAOwlB,QAGjB,GAAyB,MAArBJ,EAAO3oB,KAAKoD,KAAc,CAC5B,IAAI4lB,EAAUL,EAAO3oB,KAAKA,KAa1B,OAZIgpB,GACF,KAAcA,IACZ,KAAAA,GAAO,KAAPA,GAAiB2C,IACf,IAAI3rB,EAAO,CACTmG,KAAM,GACNtL,GAAI,IAENmF,EAAKnF,GAAK8wB,EAAQtB,OAClBrqB,EAAKmG,KAAOwlB,EAAQtD,SACpBmD,EAAMlrB,KAAKN,MAGVwrB,GAAS,GAElB,OAAO,KEwCLQ,CALa,CACXnD,OAAQE,EAAKF,OACbC,UAAWC,EAAKD,UAChBC,KAAMA,EAAKA,OAEOtlB,MAAMooB,IACxB3B,EAAS2B,MAEX7B,GAAY,SAmGThqB,EAAKqqB,QACJ,gCACE,gBAAC7e,GAAA,GAAD,KACE,gBAACjK,EAAA,EAAD,CAAaC,QAAQ,WAAWtI,GAAI,CAAEsD,MAAO,SAC3C,gBAACiF,EAAA,EAAD,CAAYymB,QAAM,EAACxmB,QAAQ,UAA3B,gBAGA,gBAAC,GAAD,CACE7G,GAAG,SACHiB,MAAOkE,EAAKsoB,WACZhvB,QA7FI8H,UAChB,IAAI2nB,QAAaL,GAAiB,CAAE7tB,GAAImF,EAAK8pB,YACxCf,IF3DF3nB,eAA0BmC,GAC/B,MAAMioB,EAAQ,GACR7C,QAAeH,GAASrlB,IAAI2oB,EAAAA,GAAAA,QAAoB,CACpDvoB,OAAQ,CACNwoB,OAAQxoB,EAAOslB,OACfC,UAAWvlB,EAAOulB,UAClBC,KAAMxlB,EAAOwlB,KACbsB,OAAQ9mB,EAAO8mB,UAGnB,GAAyB,MAArB1B,EAAO3oB,KAAKoD,KAAc,CAC5B,IAAI4lB,EAAUL,EAAO3oB,KAAKA,KAiB1B,OAhBIgpB,GACF,KAAcA,IACZ,KAAAA,GAAO,KAAPA,GAAiB2C,IACf,IAAI3rB,EAAO,CACTmG,KAAM,GACNtL,GAAI,EACJgwB,UAAW,GACXC,aAAc,IAEhB9qB,EAAKnF,GAAK8wB,EAAQf,SAClB5qB,EAAKmG,KAAOwlB,EAAQrD,WACpBtoB,EAAK6qB,UAAYc,EAAQd,UACzB7qB,EAAK8qB,aAAea,EAAQb,aAC5BU,EAAMlrB,KAAKN,MAGVwrB,GAAS,GAElB,OAAO,KEsCLS,CANa,CACXpD,OAAQE,EAAKF,OACbC,UAAWC,EAAKD,UAChBC,KAAMA,EAAKA,KACXsB,OAAQrqB,EAAKqqB,SAEI5mB,MAAMooB,IACvBpB,EAAWoB,MAEbtB,GAAc,SAmFR,gBAAC/e,GAAA,GAAD,KACE,gBAACjK,EAAA,EAAD,CAAaC,QAAQ,WAAWtI,GAAI,CAAEsD,MAAO,SAC3C,gBAACiF,EAAA,EAAD,CAAYymB,QAAM,EAACxmB,QAAQ,OAA3B,gBAGA,gBAAC,GAAD,CAAgB7G,GAAG,MAAMiB,MAAOkE,EAAKuoB,QAASjvB,QAtE3C8H,UACb,IAAI2nB,QAAaL,GAAiB,CAAE7tB,GAAImF,EAAK8pB,YACxCf,IF3DF3nB,eAA0BmC,GAC/B,MAAMioB,EAAQ,GACR7C,QAAeH,GAASrlB,IAAI2oB,EAAAA,GAAAA,QAAoB,CACpDvoB,OAAQ,CACNwoB,OAAQxoB,EAAOslB,OACfC,UAAWvlB,EAAOulB,UAClBC,KAAMxlB,EAAOwlB,KACbmD,SAAU3oB,EAAO8mB,UAGrB,GAAyB,MAArB1B,EAAO3oB,KAAKoD,KAAc,CAC5B,IAAI4lB,EAAUL,EAAO3oB,KAAKA,KAiB1B,OAhBIgpB,GACF,KAAcA,IACZ,KAAAA,GAAO,KAAPA,GAAiB2C,IACf,IAAI3rB,EAAO,CACTmG,KAAM,GACNtL,GAAI,EACJywB,OAAQ,GACRC,YAAa,IAEfvrB,EAAKnF,GAAK8wB,EAAQN,MAClBrrB,EAAKmG,KAAOwlB,EAAQpD,QACpBvoB,EAAKsrB,OAASK,EAAQL,OACtBtrB,EAAKurB,YAAcI,EAAQJ,YAC3BC,EAAMlrB,KAAKN,MAGVwrB,GAAS,GAElB,OAAO,KEsCLW,CANa,CACXtD,OAAQE,EAAKF,OACbC,UAAWC,EAAKD,UAChBC,KAAMA,EAAKA,KACXsB,OAAQrqB,EAAKqqB,SAEI5mB,MAAMooB,IACvBX,EAAQW,MAEVb,GAAW,UA6DRxB,GACC,gBAAC,GAAD,CACExvB,MAAM,2BACNhB,QAzJc8C,IAChBA,GAASA,IAAUkE,EAAK8pB,WAC1BF,EAAkB9tB,GAEpB2tB,GAAe,IAsJT3tB,MAAOkE,EAAK8pB,UACZvhB,QAASmhB,IAGZK,GACC,gBAAC,GAAD,CACE/vB,MAAM,2BACNhB,QApIW8C,IACbA,GAASA,IAAUkE,EAAKqqB,QAC1BF,EAAeruB,GAEjBkuB,GAAY,IAiINluB,MAAOkE,EAAKqqB,OACZ9hB,QAAS0hB,IAGZK,GACC,gBAAC,GAAD,CACEtwB,MAAM,2BACNhB,QA9Ga8C,IACfA,GAASA,IAAUkE,EAAK4qB,UAC1BF,EAAiB5uB,GAEnByuB,GAAc,IA2GRzuB,MAAOkE,EAAK4qB,SACZriB,QAASiiB,IAGZO,GACC,gBAAC,GAAD,CACE/wB,MAAM,2BACNhB,QAtFU8C,IACZA,GAASA,IAAUkE,EAAKqrB,OAC1BF,EAAcrvB,GAEhBkvB,GAAW,IAmFLlvB,MAAOkE,EAAKqrB,MACZ9iB,QAAS0iB,M,mJCpPnB,MAAMmB,GAAkB,CACtBtC,UAAW,EACX3B,YAAa,GACbkC,OAAQ,GACRhC,SAAU,GACVuC,SAAU,EACVtC,WAAY,GACZuC,UAAW,GACXC,aAAc,GACdO,MAAO,EACP9C,QAAS,GACTgD,YAAa,GACbD,OAAQ,GACRe,MAAO,IA+BT,GA7BwD,EACtDrsB,OACAX,cAGE,gCACE,gBAACmM,GAAA,GAAD,KACE,gBAAC,KAAD,CACEpB,MAAM,eACN/P,WAAS,EACTyB,MAAOkE,EAAK0rB,OACZrsB,SAAWU,IACT,IAAIqoB,E,mQAAO,EAAEsD,OAAQ1nB,OAAOjE,EAAElE,OAAOC,QAAWswB,IAChD/sB,EAAS+oB,IAEX7f,QAAS,CACP,CAAE6B,MAAO,qBAAOtO,MAAO,OAKZ,IAAhBkE,EAAK0rB,OACJ,gBAAC,GAAD,CAAc1rB,KAAMA,EAAMX,SAAUA,IAEpC,gBAAC,GAAD,CAAUW,KAAMA,EAAMX,SAAUA,KC9DjC,SAASitB,GACd1gB,EACA2gB,GAEA,MAAMrtB,EAAOoJ,EAAAA,GAAAA,QAAAA,SAAAA,cAAAA,KACb,OAAO,IAAApJ,GAAI,KAAJA,GACJ4F,GAAMA,EAAEjJ,OAAOsgB,QAAUvQ,EAAOrC,IAAMzE,EAAEynB,YAAcA,I,8DCP3D,MAAMC,GAA8B,WAAtBzpB,SAAS0pB,SAAwB,MAAQ,KAYhD,MAAMC,GAAc,CACzBC,QAAS,SAAUC,GACjB,IAAIjE,EACFG,EACA+D,EACAC,EACA/D,GACA,UAAE8B,EAAF,aAAaC,EAAb,OAA2BT,EAA3B,MAAmC0C,GAAUH,EAE3C9pB,EApBR,SAAgBiqB,GACd,GAAqB,iBAAVA,EAOT,OAAOC,EAAAA,GAPsB,CAC7B,IAAIzuB,EAAQ,KAAAwuB,GAAK,KAALA,EAAc,OAC1B,GAAIxuB,GAAS,EAEX,OAAO,KAAAwuB,GAAK,KAALA,EAAYxuB,EAAQ,IAenB0uB,CAAOF,GACbG,EAAW,GAAEV,QAAW1pB,wBAO5B,OANA+pB,EAAY,OAAMxC,KAAUQ,IAC5B/B,GAAY,IAAIqE,MAAOC,UACvBN,EAAY,OAAMhE,IAElBC,EAAOsE,KAAK,GAAEhD,IAASQ,IAAYC,IAAehC,KAClDH,EAAU,GAAEuE,IAAUL,KAAYC,KAAY/D,IACvCJ,GAET2E,IAAK,SAAUV,GACb,IAAIjE,EAAQuE,EAASK,EAAYtmB,EAAUqhB,EAM3C,OALA4E,EAAW,GAAEV,QAAWgB,GAAQC,IAAIC,+BACpCpF,EAAasE,EAAI/B,UACjB0C,EAAaX,EAAIvC,OACjBpjB,EAAW2lB,EAAI3lB,SACf0hB,EAAU,GAAEuE,KAAWjmB,KAAYsmB,KAAcjF,IAC1CK,I,yZCrBX,IAAIgF,GAAU,EAEd,MAyMA,GAzMgD,EAC9C30B,UACA4S,SACA2gB,YACAzrB,gBAEA,MAAM8sB,EAAMtB,GAAkB1gB,EAAQ2gB,IAC/Bb,EAAQmC,IAAapwB,EAAAA,EAAAA,WAAS,IAAMmwB,GAAKjwB,MAAQ,OAEjDmwB,EAASC,IAActwB,EAAAA,EAAAA,WAAqB,KACjD,GAAImwB,GAAkB,MAAXlC,EAAgB,CACzB,MAAM1rB,EAAO4tB,EAAI5tB,KACjB,OAAO,SAAKA,GAAZ,IAAkBqnB,UAAWrnB,EAAKkW,OAElC,MAAO,CACLvY,KAAM,MACN4F,OAAQ,GACRT,IAAK,kCACLoT,KAAM,GACNmR,SAAS,EACT2G,OAAS,kEAORC,EAAQC,IAAazwB,EAAAA,EAAAA,WAA4B,KACtD,GAAImwB,GAAkB,MAAXlC,EAAgB,CAEzB,OAAO,MADMkC,EAAI5tB,MAGjB,MAAO,CACL0rB,OAAQ,EACR5B,UAAW,EACX3B,YAAa,GACbkC,OAAQ,GACRhC,SAAU,GACVuC,SAAU,EACVtC,WAAY,GACZuC,UAAW,GACXC,aAAc,GACdO,MAAO,EACP9C,QAAS,GACTgD,YAAa,GACbrtB,IAAK,GACLiwB,GAAI,OAqBJC,EAAW,KACf,IAAIzwB,EAAyB,IAAlBswB,EAAOvC,OAAe,UAAY,MAE7C,OADYgB,GAAY/uB,GAAMswB,IAsEhC,OACE,gBAACtgB,EAAA,EAAD,CAAOzU,GAAI,CAAEsD,MAAO,IAAKlC,OAAQ,SAC/B,gBAACiR,GAAA,EAAD,CAAMrS,GAAI,CAAEiM,KAAM,IAChB,gBAACqG,GAAA,GAAD,KACE,gBAAC,KAAD,CACEpB,MAAM,iCACNtO,MAAO4vB,EACPnjB,QAAS,CACP,CAAE6B,MAAO,eAAMtO,MAAO,KACtB,CAAEsO,MAAO,eAAMtO,MAAO,MAExBzB,WAAS,EACTgF,SAAW+M,IACTyhB,EAAUzhB,EAAIvQ,OAAOC,OACH,MAAd8xB,GAAKjwB,KACPowB,EAAW,MAAKD,IAEhBI,EAAU,MACLD,QAMD,MAAXvC,EACC,gBAAC,GAAD,CACE1rB,KAAMiuB,EACN5uB,SAAWkE,IACT2qB,EAAU,MAAK3qB,OAInB,gBAAC,GAAD,CACEvD,KAAM8tB,EACNzuB,SApFkB,CAC1B+M,EACAiiB,KAEA,MAAMloB,EAAOiG,EAAIvQ,OAAOsK,KAEpBA,GACF4nB,EAAW,SACND,GADK,IAER,CAAC3nB,QAAiBlC,IAAVoqB,EAAsBjiB,EAAIvQ,OAAOC,MAAQuyB,MA4E7CzH,SAvEgB,KACxBmH,EAAW,SACND,GADK,IAERvqB,OAAQ,IACHuqB,EAAQvqB,OACX,CACErF,IAAK,GACLpC,MAAO,GACP6B,KAAM,QACN9C,GAAI8yB,WA+DF7G,YA1DoBvoB,IAC5BwvB,GAAY/tB,IACV,MAAMuD,EAASvD,EAAKuD,OAEpB,OADA,KAAAA,GAAM,KAANA,EAAchF,EAAO,GACd,SACFyB,GADL,IAEEuD,OAAQ,IAAIA,SAqDRsjB,YAhDmB,CAACtoB,EAAO+vB,KACnCP,GAAY/tB,IACV,MAAMuD,EAASvD,EAAKuD,OAEpB,OADA,KAAcA,EAAOhF,GAAQ+vB,GACtB,SACFtuB,GADL,IAEEuD,OAAQ,IAAIA,YA8Cd,gBAAC,KAAD,CAAQjJ,OAAQ,GAAIsjB,eAAe,YACjC,gBAAC,IAAD,CAAQpc,QAAQ,YAAY9H,MAAM,UAAUJ,QAnI5B,KACpB,IAAIuC,EAASywB,GAAkB1gB,EAAQ2gB,GAElC1wB,IACHA,EAAS,IAAI0yB,GAAAA,SAAS3iB,EAAO4iB,SAAUjC,GACvCjkB,EAAAA,GAAAA,QAAAA,SAAAA,cAAAA,OAA0CzM,GAC1CA,EAAO8B,KAAO+tB,GAED,MAAXA,EAEF7vB,EAAOmE,KAAP,SAAmB8tB,GAAnB,IAA4B5X,KAAM,KAAW4X,EAAQ5X,SAErD+X,EAAOE,GAAKC,IACZvyB,EAAOmE,KAAP,MAAmBiuB,IAErBntB,EAAUjF,KAoHN,gBAGA,gBAAC,IAAD,CACEvC,QAASN,EACTwI,QAAQ,YACR9H,MAAM,QACNR,GAAI,CAAEu1B,GAAI,IAJZ,gBAQY,MAAX/C,GACC,gBAAC,IAAD,CAAQpyB,QAzHO,KACrBmvB,KAAM,CACJiG,OAAQZ,EAAQnwB,KAAKgxB,cACrB7rB,IAAKgrB,EAAQhrB,IACb9C,KACmB,SAAjB8tB,EAAQnwB,KAAR,MACSmwB,EAAQvqB,QACb,CACEA,OAAQuqB,EAAQvqB,UAEvBE,MAAMooB,IACY,MAAfA,EAAI+C,QACNb,EAAW,SAAKD,GAAN,IAAe1G,SAAU,KAAeyE,EAAI7rB,aA6GnBwB,QAAQ,YAAYtI,GAAI,CAAEu1B,GAAI,IAA/D,+B,4BCpMH,MAiHMI,GAOR,EAAGzkB,QAAO9Q,UAASizB,YAAWuC,WAAUC,WAAUh2B,cAMnD,gBAAC,KAAD,CAAQ0G,UAAU,MAAMvG,GAAI,CAAEiM,KAAM,GAAKvM,QAAS,EAAG0Z,WAAW,UAC9D,gBAAC,KAAD,CAAYpZ,GAAI,CAAEye,YAAa,GAAKvT,SAAU,OAAQ7H,SAAU,KAC7D6N,GAEF0kB,EACC,gCACE,gBAAC,IAAD,6CACA,gBAAC,IAAD,CAAYx1B,QAZC,KACnBy1B,MAYQ,gBAAC/H,GAAA,EAAD,QAIJjuB,EAEF,gBAAC,IAAD,CACE0M,MAAO,CAAEupB,WAAY,GACrB11B,QAASA,EACT,WAAUizB,GAEV,gBAAC0C,GAAA,EAAD,QAMKC,GAIR,EAAGl1B,QAAO8B,QAAOgF,gBACpB,MAAMquB,GAAYxnB,EAAAA,EAAAA,QAAO,OAClBhN,EAAM0M,IAAW5J,EAAAA,EAAAA,WAAS,GAK3BhD,EAAc,KAClB4M,GAAQ,IAeJ+nB,EAAe,KACnBD,EAAUtkB,QAAQwkB,UAAU,gCAAgCC,OAG9D,OACE,gCACE,gBAAC,IAAD,CAAQh2B,QAzBO,KACjB+N,GAAQ,IAwBuBhN,WAAS,EAACnB,GAAI,CAAEiM,KAAM,IAChDnL,GAEH,gBAACvB,EAAA,EAAD,CACEkC,KAAMA,EACNC,SAAS,KACTP,WAAS,EACTob,WAAY,CAAEvc,GAAI,CAAEoB,OAAQ,SAC5BtB,QAASyB,GAET,gBAAC6G,EAAA,EAAD,KACE,gBAAC,MAAD,CACEiuB,QAzBmB,CAACC,EAAiBC,KAC7CN,EAAUtkB,QAAU2kB,EACpB,MAAW,KACTJ,MACC,MAsBK90B,OAAO,OACPo1B,gBAAgB,OAChBC,aAAc7zB,EAAQ,KAAeA,GAAS,GAC9CyM,QAAS,CAAEqnB,QAAS,CAAEC,SAAS,OAGnC,gBAAC9tB,EAAA,EAAD,KACE,gBAAC,IAAD,CAAQzI,QAAS81B,GAAjB,sBACA,gBAAC,IAAD,CAAQ91B,QAvCM,KACpBmB,IACAqG,EAAUquB,EAAUtkB,QAAQilB,cAqCtB,gBACA,gBAAC,IAAD,CAAQx2B,QAASmB,GAAjB,oBChNJs1B,GAAc,IAAI,KAAJ,CAAQ,CAC1B,iBACA,SACA,SACA,QACA,SACA,UAEIC,GAAoB,IAAI,KAAJ,CAAQ,CAAC,SAAU,aAAc,gBA6F3D,GA3FkD,EAChDC,OACArkB,SACAskB,eAEA,MAAMvhB,EAAgB5O,IACpBkwB,EAAKn0B,MAAQiE,EAAElE,OAAOC,MACtBo0B,KAGIC,EAAsBr0B,IAC1B0Q,GAAAA,IAAAA,aAAgB,KACVZ,aAAkBjC,GAAAA,SAAWiC,aAAkBwkB,GAAAA,EACjDxkB,EAAOykB,QAAQJ,EAAK/xB,IAAKpC,GACpB8P,EAAOqkB,EAAK/xB,KAAOpC,IACzB,6BAGCw0B,EAAqBziB,IACzBoiB,EAAKn0B,MAAQ+R,EAAEC,IACfoiB,KACAhe,EAAAA,GAAAA,IAAiB,KACfie,EAAmBtiB,EAAEC,OACpB,MAGCyiB,EAAuBntB,IAC3B,IACE,MAAMpD,EAAOjC,KAAKC,MAAMoF,GACxB+sB,EAAmBnwB,GACnB,MAAOwwB,GACPlqB,EAAAA,EAAAA,MAAc,8BAUZnF,EAAiBpB,IACrByM,GAAAA,IAAAA,aAAgB,KACVZ,aAAkBjC,GAAAA,SAAWiC,aAAkBwkB,GAAAA,EACjDxkB,EAAOykB,QAAQJ,EAAK/xB,IAAK6B,EAAElE,OAAOC,OAElC8P,EAAOqkB,EAAK/xB,KAAO,KAAW6B,EAAElE,OAAOC,SAExC,6BAGC6B,EAAOsyB,EAAKtyB,KAAK8yB,cAEvB,MAAa,YAAT9yB,EAEA,gBAACqH,EAAA,EAAD,CAAKG,KAAM,EAAG7I,UAAU,SACtB,gBAAC,KAAD,CAAQ8B,QAASgf,QAAQ6S,EAAKn0B,OAAQuD,SArBhBU,IAC1BkwB,EAAKn0B,MAAQiE,EAAElE,OAAOuC,QACtB8xB,IACAC,EAAmBF,EAAKn0B,WAqBH,UAAdm0B,EAAKtyB,KAEV,gBAAC,KAAD,CACEzE,GAAI,CAAEiM,KAAM,EAAG3I,MAAO,QACtB9C,MAAOu2B,EAAKn0B,MACZuD,SAAUixB,IAGLP,GAAYzjB,IAAI3O,GAEvB,gBAAC,KAAD,CACE7B,MAAOm0B,EAAKn0B,MACZuD,SAAUsP,EACVuE,OAAQ/R,EACRjI,GAAI,CAAEP,QAAS,OACf6I,QAAQ,WACRtH,KAAK,QACLw2B,aAAa,UAGRV,GAAkB1jB,IAAI3O,GAE7B,gBAACuxB,GAAD,CACEl1B,MAAOi2B,EAAK/xB,IACZpC,MAAOm0B,EAAKn0B,MACZgF,UAAWyvB,IAIR,gBAACvrB,EAAA,EAAD,sCAAWrH,I,yZCtGtB,MAAMgzB,GAMD,EAAG73B,QAAO8S,SAAQtS,UAASs3B,aAAYV,cAkBxC,gCACG,IAAAp3B,GAAK,KAALA,GAAWm3B,GACV,gBAACpB,GAAD,CACE3wB,IAAK+xB,EAAK/xB,IACVkM,MAAO6lB,EAAKj2B,MACZV,QAASA,EACTizB,UAAW0D,EAAK/xB,IAChB6wB,SAAU,IAAM6B,EAAWX,GAC3BnB,WAAYmB,EAAKxnB,QAEjB,gBAAC,GAAD,CAAcwnB,KAAMA,EAAMC,SAAUA,EAAUtkB,OAAQA,QA4EhE,GAlEK,EAAGA,SAAQilB,iBACd,MAAOC,EAAUC,IAAetzB,EAAAA,EAAAA,WAAS,IAClC8uB,EAAWyE,IAAgBvzB,EAAAA,EAAAA,UAAS,KAEpCyB,EAAM+xB,IAAWxzB,EAAAA,EAAAA,UAAS,IAM3ByzB,EAAU,KACdH,GAAY,IAmCd,OAbAnuB,EAAAA,EAAAA,YAAU,KACR,GAAIiuB,EAAY,CACd,MAAM3xB,EAAO,GACb,IAAK,MAAM+wB,KAAQY,EAAY,CAE7B,MAAMjD,EAAMtB,GAAkB1gB,EAAQqkB,EAAK/xB,KAC3CgB,EAAKoB,KAAL,SAAe2vB,GAAf,IAAqBxnB,OAAQmlB,EAAKrB,UAAW0D,EAAK/xB,OAGpD+yB,EAAQ/xB,MAET,CAAC2xB,IAGF,gBAAC7rB,EAAA,EAAD,KACE,gBAAC2rB,GAAD,CACE73B,MAAOoG,EACP0M,OAAQA,EACRtS,QA9Ca8S,IACjB,MAAMmgB,EAAYngB,EAAIwQ,cAAcC,aAAa,YACjDmU,EAAazE,GACbwE,GAAY,IA4CRH,WA5BkBX,IAClBA,EAAKxnB,QAAQH,EAAAA,GAAAA,QAAAA,SAAAA,cAAAA,OAA0C2nB,EAAKxnB,QAChEwnB,EAAKxnB,OAAS,KACdwoB,EAAQ,IAAI/xB,KA0BRgxB,SAvBc,KAClBe,EAAQ,IAAI/xB,OAwBV,gBAACiyB,GAAA,GAAD,CAAQC,OAAO,QAAQz2B,KAAMm2B,EAAU93B,QAASk4B,GAC9C,gBAAC,GAAD,CACEl4B,QAASk4B,EACTtlB,OAAQA,EACR2gB,UAAWA,EACXzrB,UA/CeuwB,IACrBJ,GAAS/xB,IACP,IAAK,MAAMqkB,KAAKrkB,EACVqkB,EAAEgJ,YAAcA,IAClBhJ,EAAE9a,OAAS4oB,GAGf,MAAO,IAAInyB,MAEbgyB,U,yZCrEJ,MAAMP,GAAY,EAAG73B,QAAO8S,SAAQtS,UAASs3B,gBAgCzC,gCACG,IAAA93B,GAAK,KAALA,GAAWm3B,GAER,gBAACpB,GAAD,CACE3wB,IAAK+xB,EAAKA,KACV7lB,MAAO6lB,EAAK9pB,KACZ7M,QAASA,EACTizB,UAAY,QAAO0D,EAAKA,OACxBlB,SAAU,IAAM6B,EAAWX,GAC3BnB,WAAYmB,EAAKxnB,QAxCNwnB,IACD,YAAdA,EAAKtyB,KAEL,gBAAC,KAAD,CACES,QAASwN,EAAO5L,KAAKiwB,EAAKA,MAC1B5wB,SAAWU,IACTyM,GAAAA,IAAAA,aAAgB,KACdZ,EAAO5L,KAAKiwB,EAAKA,MAAQlwB,EAAElE,OAAOuC,UACjC,iDAMP,gBAAC,KAAD,CACEuxB,aAAc/jB,EAAO5L,KAAKiwB,EAAKA,MAC/B/c,OAASnT,IACPyM,GAAAA,IAAAA,aAAgB,KACdZ,EAAO5L,KAAKiwB,EAAKA,MAAQlwB,EAAElE,OAAOC,QACjC,+CAEL5C,GAAI,CAAEP,QAAS,OACf6I,QAAQ,WACRtH,KAAK,QACLw2B,aAAa,UAkBVY,CAAYrB,OAuEzB,GA/DyD,EAAGrkB,aAC1D,MAAOklB,EAAUC,IAAetzB,EAAAA,EAAAA,WAAS,IAClC8uB,EAAWyE,IAAgBvzB,EAAAA,EAAAA,UAAS,IACrC8zB,EAAM3lB,EAAO4lB,aACZtyB,EAAM+xB,IAAWxzB,EAAAA,EAAAA,UAAS,IAO3ByzB,EAAU,KACdH,GAAY,IAgCd,OAXAnuB,EAAAA,EAAAA,YAAU,KACR,GAAI2uB,EAAIE,QAAQC,UAAW,CACzB,MAAMxyB,EAAO,GACb,IAAK,MAAM+wB,KAAQsB,EAAIE,OAAOC,UAAW,CACvC,MAAM9D,EAAMtB,GAAkB1gB,EAAS,QAAOqkB,EAAKA,QACnD/wB,EAAKoB,KAAL,SAAe2vB,GAAf,IAAqBxnB,OAAQmlB,EAAKrB,UAAY,QAAO0D,EAAKA,UAE5DgB,EAAQ/xB,MAET,IAGD,gBAAC8F,EAAA,EAAD,KACE,gBAAC,GAAD,CACElM,MAAOoG,EACP0M,OAAQA,EACRtS,QA3Ca8S,IACjB,MAAMmgB,EAAYngB,EAAIwQ,cAAcC,aAAa,YACjDmU,EAAazE,GACbwE,GAAY,IAyCRH,WAvBkBX,IAClBA,EAAKxnB,QAAQH,EAAAA,GAAAA,QAAAA,SAAAA,cAAAA,OAA0C2nB,EAAKxnB,QAChEwnB,EAAKxnB,OAAS,KACdwoB,EAAQ,IAAI/xB,OAsBV,gBAACiyB,GAAA,GAAD,CAAQC,OAAO,OAAOz2B,KAAMm2B,EAAU93B,QAASk4B,GAC7C,gBAAC,GAAD,CACEl4B,QAASk4B,EACTtlB,OAAQA,EACR2gB,UAAWA,EACXzrB,UA1CeuwB,IACrBJ,GAAS/xB,IACP,IAAK,MAAMqkB,KAAKrkB,EACVqkB,EAAEgJ,YAAcA,IAClBhJ,EAAE9a,OAAS4oB,GAGf,MAAO,IAAInyB,MAEbgyB,U,gBCvEJ,MAAMS,GAAY,CAAC,6CAAW,kBAAS,kBAAS,4BAsHhD,GApH2B,KACzB,MAAM,YAAElf,EAAF,SAAevK,IAAaC,EAAAA,EAAAA,OAC3BrP,EAAO84B,IAAYn0B,EAAAA,EAAAA,UAAsB,IAE1Co0B,EAAcC,IACd,KAAAH,IAAS,KAATA,IAAgBpnB,IAAD,aAAS,OAAAunB,EAAGtnB,aAAH,OAAwBD,OAClDrC,EAAS,CAAEvK,KAAMkV,GAAAA,MAgFrB,OA5EAjQ,EAAAA,EAAAA,YAAU,KACR,MAAMmvB,EAAS,EACbpnB,EAAAA,GAAAA,KACErC,EAAAA,GAAAA,QAAAA,SAAAA,eACAA,EAAAA,GAAAA,QAAAA,SAAAA,eAAAA,WACCvI,IACC8xB,EAAW9xB,OAGf4K,EAAAA,GAAAA,KACErC,EAAAA,GAAAA,QAAAA,SAAAA,eACAA,EAAAA,GAAAA,QAAAA,SAAAA,eAAAA,WACCvI,IACC8xB,EAAW9xB,OAIjB,MAAO,KACL,KAAAgyB,GAAM,KAANA,GAAgBlkB,GAAMA,SAEvB,KAEHjL,EAAAA,EAAAA,YAAU,KACR,IAAI9J,EAAQ,GACS,MAArB,GAAI2Z,EAAY3G,MACdhT,EAAQ,MAAA2Z,EAAY3G,IAAIkmB,UAAhB,QAA8BltB,IAAD,CACnC5G,IAAK4G,EAAE5G,IACPpC,MAAOgJ,EAAEhJ,MACT6B,KAAM,SACN3D,MAAO8K,EAAEsF,MACT6nB,KAAMntB,EAAEmtB,SAGNxf,EAAY3G,eAAeomB,GAAAA,GAAS,CACtC,MAAMC,EAAY1f,EAAY3G,IAAIsmB,aAClC,IAAK,MAAMttB,KAAKqtB,EACQ,eAAlBrtB,EAAEutB,aACNv5B,EAAMwH,KAAK,CACTpC,IAAK4G,EAAEwtB,KACPx2B,MAAO2W,EAAY3G,IAAIymB,KAAKztB,EAAEwtB,OAASxtB,EAAE6qB,aACzChyB,KAAMmH,EAAE0tB,UACRx4B,MAAO8K,EAAEqB,KACT8rB,KAAM,KAMd,GAAIxf,EAAYC,KACVD,EAAYC,eAAe0d,GAAAA,EAAS,CACtC,MAAM+B,EAAY1f,EAAYC,IAAI0f,aAClC,IAAK,MAAMttB,KAAKqtB,EACQ,eAAlBrtB,EAAEutB,aACNv5B,EAAMwH,KAAK,CACTpC,IAAK4G,EAAEwtB,KACPx2B,MAAO2W,EAAYC,IAAI6f,KAAKztB,EAAEwtB,OAASxtB,EAAE6qB,aACzChyB,KAAMmH,EAAE0tB,UACRx4B,MAAO8K,EAAEqB,KACT8rB,KAAM,KAMd,GAAIxf,EAAY7G,QACV6mB,GAAOhgB,EAAY9U,MAAO,CAC5B7E,EAAQ,IAAI25B,GAAOhgB,EAAY9U,OAC/B,IAAK,MAAMsyB,KAAQn3B,EACjBm3B,EAAKn0B,MAAQ2W,EAAY7G,OAAOqkB,EAAK/xB,KAK3C0zB,EAAS94B,KACR,CAAC2Z,IAEAA,EAAY7G,QAAQ8mB,YAEpB,gBAAC1tB,EAAA,EAAD,KACE,gBAAC,GAAD,CAAiB4G,OAAQ6G,EAAY7G,UAKvC6G,EAAY3G,IAEZ,gBAAC9G,EAAA,EAAD,KACE,gBAAC,GAAD,CAAc4G,OAAQ6G,EAAY3G,IAAK+kB,WAAY/3B,KAKrD2Z,EAAYC,IAEZ,gBAAC1N,EAAA,EAAD,KACE,gBAAC,GAAD,CAAc4G,OAAQ6G,EAAYC,IAAKme,WAAY/3B,KAMvD,gBAACkM,EAAA,EAAD,KACE,gBAAC,GAAD,CAAc4G,OAAQ6G,EAAY7G,OAAQilB,WAAY/3B,MCxHrD,IAAK65B,I,SAAAA,GAAAA,EAAAA,EAAAA,MAAAA,GAAAA,QAAAA,EAAAA,EAAAA,YAAAA,GAAAA,cAAAA,EAAAA,EAAAA,OAAAA,GAAAA,SAAAA,EAAAA,EAAAA,KAAAA,GAAAA,OAAAA,EAAAA,EAAAA,SAAAA,GAAAA,WAAAA,EAAAA,EAAAA,OAAAA,GAAAA,SAAAA,EAAAA,EAAAA,MAAAA,GAAAA,Q,CAAAA,KAAAA,GAAAA,K,yaCQZ,IAAIrhB,GAEJ,MAobA,GApb+C,KAC7C,MAAOshB,EAAQC,GAAala,EAAAA,SAAe,CAAEnK,EAAG,IAAKC,EAAG,IAAKC,EAAG,OACzD7S,EAAQi3B,GAAana,EAAAA,SAAe,CAAEnK,EAAG,IAAKC,EAAG,IAAKC,EAAG,OACzDqN,EAAMgX,IAAWt1B,EAAAA,EAAAA,UAAS,IAC1Bu1B,EAAYC,IAAiBx1B,EAAAA,EAAAA,UAASy1B,GAAAA,WAAAA,YACtCC,EAAYC,IAAiB31B,EAAAA,EAAAA,UAAS,CAC3C41B,MAAO,GACPC,KAAM,GACNC,OAAQ,MAEHC,EAAOC,IAAYh2B,EAAAA,EAAAA,UAAS,CACjCi2B,iBAAkB,GAClBC,iBAAkB,GAClBC,gBAAiB,GACjBC,gBAAiB,GACjBC,eAAgB,GAChBC,eAAgB,GAChBC,KAAM,GACNC,KAAM,MAEDC,EAAUC,IAAe12B,EAAAA,EAAAA,UAAS,CACvC22B,YAAa,CAAE5lB,EAAG,GAAIC,EAAG,GAAIC,EAAG,IAChC2lB,gBAAiB,CAAE7lB,EAAG,GAAIC,EAAG,GAAIC,EAAG,IACpC4lB,YAAa,MAGRC,EAAUC,IAAe/2B,EAAAA,EAAAA,UAAS,CACvCg3B,cAAc,EACdC,YAAY,EACZC,WAAW,IAGPC,EAA2B,CAACxhB,EAAWC,KAC3C,MAAM5C,EAAW,SAAKmiB,GAAR,IAAgB,CAACxf,GAAIC,IACnCwf,EAAUpiB,GACNokB,MAAM,KAAWxhB,MACrB/K,EAAAA,GAAAA,QAAAA,OAAAA,cAAAA,SAA4C,CAC1CkG,EAAG,KAAWiC,EAASjC,IAAM,EAC7BC,EAAG,KAAWgC,EAAShC,IAAM,EAC7BC,EAAG,KAAW+B,EAAS/B,IAAM,KAmB3BomB,EAA0B1oB,IAC9B,MAAMlO,EAAMkO,EAAIvQ,OAAOsK,KACjBrK,EAAQsQ,EAAIvQ,OAAOC,MACpBoC,GAAQpC,IACbs3B,EAAc,SAAKD,GAAN,IAAkB,CAACj1B,GAAMpC,MAEtCoW,EAAAA,GAAAA,IAAiB,KACH,WAARhU,EACFoK,EAAAA,GAAAA,QAAAA,OAAAA,cAAAA,OAA0C,KAAWxM,GAErDwM,EAAAA,GAAAA,QAAAA,OAAAA,cAAiCpK,GAAO8X,GAAAA,MAAAA,QACtC,KAAWla,MAGd,OAECi5B,EACJ3oB,IAEA,MAAMlO,EAAMkO,EAAIvQ,OAAOsK,KACjBrK,EAAQsQ,EAAIvQ,OAAOC,MACpBoC,IACLu1B,EAAS,SAAKD,GAAN,IAAa,CAACt1B,GAAMpC,MAE5BoW,EAAAA,GAAAA,IAAiB,KACH,qBAARhU,GAAsC,qBAARA,EAChCoK,EAAAA,GAAAA,QAAAA,OAAAA,cAAAA,iBAAkDpK,GAAOpC,EACrD,KAAWA,GACX,KACW,SAARoC,GAA0B,SAARA,EACrBpC,IACFwM,EAAAA,GAAAA,QAAAA,OAAAA,cAAAA,iBAAkDpK,GAChD,KAAWpC,IAEfwM,EAAAA,GAAAA,QAAAA,OAAAA,cAAAA,iBAAkDpK,IAAO82B,EAAAA,GAAAA,IAAQl5B,KAElE,OAECm5B,EAAuB,CAC3B7oB,EACAhO,KAEA,MAAMF,EAAMkO,EAAIvQ,OAAOsK,KAClBjI,IACLs2B,EAAY,SAAKD,GAAN,IAAgB,CAACr2B,GAAME,MAElC8T,EAAAA,GAAAA,IAAiB,KACf5J,EAAAA,GAAAA,QAAAA,OAAAA,cAAAA,iBAAkDpK,GAAOE,IACxD,OAGCwQ,EAAS,KACb,MAAM7J,EAAMuD,EAAAA,GAAAA,QACZuqB,GACEhkB,EAAAA,GAAAA,IAAe9J,EAAIyI,OAAO0nB,cAAc5e,UAAuBE,IAC7D2e,EAAAA,GAAAA,IAAa3e,EAAG,MAGpBsc,GACEjkB,EAAAA,GAAAA,IAAe9J,EAAIyI,OAAO0nB,cAAcE,QAAqB5e,IAC3D2e,EAAAA,GAAAA,IAAa3e,EAAG,MAIpB,MAAM6c,GAAQ8B,EAAAA,GAAAA,IACZnf,GAAAA,MAAAA,QAAcjR,EAAIyI,OAAO0nB,cAAc7B,OACvC,GAEIC,GAAO6B,EAAAA,GAAAA,IAAanf,GAAAA,MAAAA,QAAcjR,EAAIyI,OAAO0nB,cAAc5B,MAAO,GAClEC,GAAS4B,EAAAA,GAAAA,IAAapwB,EAAIyI,OAAO0nB,cAAc3B,OAAQ,GAE7DH,EAAc,CACZC,QACAC,OACAC,WAGFR,EAAQhuB,EAAIyI,OAAO0nB,cAAcrlB,MAEjC4jB,EAAS,CACPC,iBACE3uB,EAAIyI,OAAO0nB,cAAcG,iBAAiB3B,kBAAkBjtB,cAC5D,GACFktB,iBACE5uB,EAAIyI,OAAO0nB,cAAcG,iBAAiB1B,kBAAkBltB,cAC5D,GACFmtB,iBAAiB0B,EAAAA,GAAAA,IACfvwB,EAAIyI,OAAO0nB,cAAcG,iBAAiBzB,iBAE5CC,iBAAiByB,EAAAA,GAAAA,IACfvwB,EAAIyI,OAAO0nB,cAAcG,iBAAiBxB,iBAE5CC,gBAAgBwB,EAAAA,GAAAA,IACdvwB,EAAIyI,OAAO0nB,cAAcG,iBAAiBvB,gBAE5CC,gBAAgBuB,EAAAA,GAAAA,IACdvwB,EAAIyI,OAAO0nB,cAAcG,iBAAiBtB,gBAE5CC,KAAMjvB,EAAIyI,OAAO0nB,cAAcG,iBAAiBrB,KAChDC,KAAMlvB,EAAIyI,OAAO0nB,cAAcG,iBAAiBpB,OAElDO,EAAY,CACVG,UAAW5vB,EAAIyI,OAAO0nB,cAAcG,iBAAiBV,UACrDF,aAAc1vB,EAAIyI,OAAO0nB,cAAcG,iBAAiBZ,aACxDC,WAAY3vB,EAAIyI,OAAO0nB,cAAcG,iBAAiBX,aAExDP,EAAY,CACVC,aAAavlB,EAAAA,GAAAA,IACX9J,EAAIyI,OAAO0nB,cAAcG,iBAAiBjB,aACzC5d,IAAM2e,EAAAA,GAAAA,IAAa3e,EAAG,KAEzB6d,iBAAiBxlB,EAAAA,GAAAA,IACf9J,EAAIyI,OAAO0nB,cAAcG,iBAAiBhB,iBACzC7d,IAAM2e,EAAAA,GAAAA,IAAa3e,EAAG,KAEzB8d,YACEvvB,EAAIyI,OAAO0nB,cAAcG,iBAAiBf,aAAa7tB,cACvD,MAIA8uB,EAAwB,CAC5BniB,EACAC,EACAkZ,KAEA,GAAiB,iBAANnZ,EACT+gB,EAAY,SAAKD,GAAN,IAAgBI,YAAalhB,EAAEvX,OAAOC,UACjDoW,EAAAA,GAAAA,IAAiB,KACf5J,EAAAA,GAAAA,QAAAA,OAAAA,cAAAA,iBAAAA,YAAgE8K,EAAEvX,OAC/DC,MACC,KAAWsX,EAAEvX,OAAOC,OACpB,OACH,SACE,CACL,MAAM2U,EAAW,SAAKyjB,EAAS3H,IAAjB,IAA6B,CAACnZ,GAAIC,IAEhD,GADA8gB,EAAY,SAAKD,GAAN,IAAgB,CAAC3H,GAAY9b,KACpCokB,MAAM,KAAWxhB,IAAK,OAC1B/K,EAAAA,GAAAA,QAAAA,OAAAA,cAAAA,iBAAkDikB,GAAa,CAC7D/d,EAAG,KAAWiC,EAASjC,IAAM,EAC7BC,EAAG,KAAWgC,EAAShC,IAAM,EAC7BC,EAAG,KAAW+B,EAAS/B,IAAM,KAmFnC,OA/BA9L,EAAAA,EAAAA,YAAU,KACR,IAAI4yB,EAA2B,GAuB/B,OAtBA9qB,EAAAA,GAAAA,KACE,MAAQpC,EAAAA,GAAAA,UACR,KACEsG,IACA,MAAM7J,EAAMuD,EAAAA,GAAAA,QACZktB,EAASl1B,KACPyE,EAAIwI,GAAG,gBAAiB5R,IACtB2V,IAASiB,aAAajB,IACtBA,GAAQ,MAAW,KACjB1C,MACC,SAELjE,EAAAA,GAAAA,KACE5F,EAAIyI,OAAO0nB,cACXnwB,EAAIyI,OAAO0nB,cAAcO,aACxB5nB,IACColB,EAAcplB,EAAE6nB,aAMnB,KACLpkB,IAASiB,aAAajB,IACtB,KAAAkkB,GAAQ,KAARA,GAAkB1wB,GAAMA,MACxB0wB,EAASr2B,OAAS,KAEnB,IAGD,gCACE,gBAACwO,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CAAO5T,MAAM,eAAK4T,GAAI,KACtB,gBAAC,KAAD,CACE9R,MAAOigB,EACP1c,SA3OwB+M,IAC9B2mB,EAAQ3mB,EAAIvQ,OAAOC,OACnBwM,EAAAA,GAAAA,QAAAA,OAAAA,cAAAA,KAAwCtE,OAAOoI,EAAIvQ,OAAOC,QA0OpDsd,SAAU4Z,IAAeE,GAAAA,WAAAA,UACzB3qB,QAAS,CACP,CACE6B,MAAO,eACPtO,MAAO,GAET,CACEsO,MAAO,eACPtO,MAAO,OA5Fbk3B,IAAeE,GAAAA,WAAAA,UAEf,gCACE,gBAACvlB,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,GAAK5T,MAAM,wCAC1C,gBAAC,KAAD,CACEA,MAAM,2BACN8B,MAAOq3B,EAAWE,MAClBh0B,SAAUy1B,EACV3uB,KAAK,WAGT,gBAACwH,EAAA,EAAD,CAAOlO,UAAU,MAAMzF,MAAM,uCAASd,GAAI,CAAE0U,GAAI,IAC9C,gBAAC,KAAD,CACE5T,MAAM,2BACN8B,MAAOq3B,EAAWG,KAClBj0B,SAAUy1B,EACV3uB,KAAK,UAGT,gBAACwH,EAAA,EAAD,CAAOlO,UAAU,MAAMzF,MAAM,2BAAOd,GAAI,CAAE0U,GAAI,IAC5C,gBAAC,KAAD,CACEwL,SAAmB,IAAT2C,EACV/hB,MAAM,2BACN8B,MAAOq3B,EAAWI,OAClBl0B,SAAUy1B,EACV3uB,KAAK,aAOX,gCACE,gBAACwH,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CAAO5T,MAAM,eAAK4T,GAAI,KACtB,gBAAC,KAAD,CACE1U,GAAI,CAAEsD,MAAO,IACb2W,OAAQyf,EACRvzB,SAAUu1B,MA4DlB,gBAACjnB,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CAAO5T,MAAM,eAAK4T,GAAI,KACtB,gBAAC,KAAD,CACE1U,GAAI,CAAEsD,MAAO,IACb2W,OAAQtX,EACRwD,SA1QyB,CAAC+T,EAAWC,KAC3C,MAAM5C,EAAW,SAAK5U,GAAR,IAAgB,CAACuX,GAAIC,IACnCyf,EAAUriB,GACNokB,MAAM,KAAWxhB,MACrB/K,EAAAA,GAAAA,QAAAA,OAAAA,cAAAA,OAA0C,CACxCkG,EAAG,KAAWiC,EAASjC,IAAM,EAC7BC,EAAG,KAAWgC,EAAShC,IAAM,EAC7BC,EAAG,KAAW+B,EAAS/B,IAAM,QAsQ5BskB,IAAeE,GAAAA,WAAAA,WACd,gCACE,gBAACvlB,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CAAO5T,MAAM,2BAAO4T,GAAI,MACxB,gBAAC,KAAD,CACExP,QAASm2B,EAASI,UAClBt1B,SAAU41B,EACV9uB,KAAK,YACLgK,WAAY,CAAE,aAAc,iBAGhC,gBAACxC,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CAAO5T,MAAM,2BAAO4T,GAAI,MACxB,gBAAC,KAAD,CACExP,QAASm2B,EAASE,aAClBp1B,SAAU41B,EACV9uB,KAAK,eACLgK,WAAY,CAAE,aAAc,iBAGhC,gBAACxC,EAAA,EAAD,CAAOlO,UAAU,MAAMvG,GAAI,CAAE0U,GAAI,IAC/B,gBAAC,KAAD,CAAO5T,MAAM,2BAAO4T,GAAI,MACxB,gBAAC,KAAD,CACExP,QAASm2B,EAASG,WAClBr1B,SAAU41B,EACV9uB,KAAK,aACLgK,WAAY,CAAE,aAAc,iBAGhC,gBAAC,KAAD,CAAQjX,GAAI,CAAE0U,GAAI,IAChB,gBAAC,KAAD,CACEzH,KAAK,OACLnM,MAAM,qBACN8B,MAAO03B,EAAMQ,KACb30B,SAAU01B,KAGd,gBAAC,KAAD,CAAQ77B,GAAI,CAAE0U,GAAI,IAChB,gBAAC,KAAD,CACEzH,KAAK,OACLnM,MAAM,qBACN8B,MAAO03B,EAAMS,KACb50B,SAAU01B,KAGd,gBAAC,KAAD,CAAQ77B,GAAI,CAAE0U,GAAI,IAChB,gBAAC,KAAD,CACEzH,KAAK,mBACLnM,MAAM,uCACN8B,MAAO03B,EAAME,iBACbr0B,SAAU01B,KAGd,gBAAC,KAAD,CAAQ77B,GAAI,CAAE0U,GAAI,IAChB,gBAAC,KAAD,CACEzH,KAAK,mBACLnM,MAAM,uCACN8B,MAAO03B,EAAMG,iBACbt0B,SAAU01B,KAGd,gBAAC,KAAD,CAAQ77B,GAAI,CAAE0U,GAAI,IAChB,gBAAC,KAAD,CACEzH,KAAK,kBACLnM,MAAM,uCACN8B,MAAO03B,EAAMI,gBACbv0B,SAAU01B,KAGd,gBAAC,KAAD,CAAQ77B,GAAI,CAAE0U,GAAI,IAChB,gBAAC,KAAD,CACEzH,KAAK,kBACLnM,MAAM,uCACN8B,MAAO03B,EAAMK,gBACbx0B,SAAU01B,KAGd,gBAAC,KAAD,CAAQ77B,GAAI,CAAE0U,GAAI,IAChB,gBAAC,KAAD,CACEzH,KAAK,iBACLnM,MAAM,uCACN8B,MAAO03B,EAAMM,eACbz0B,SAAU01B,KAGd,gBAAC,KAAD,CAAQ77B,GAAI,CAAE0U,GAAI,IAChB,gBAAC,KAAD,CACEzH,KAAK,iBACLnM,MAAM,uCACN8B,MAAO03B,EAAMO,eACb10B,SAAU01B,KAId,gBAAC,KAAD,CAAQ77B,GAAI,CAAE0U,GAAI,IAChB,gBAAC,KAAD,CAAO5T,MAAM,iCAAQ4T,GAAI,KACzB,gBAAC,KAAD,CACE1U,GAAI,CAAEsD,MAAO,IACb2W,OAAQ+gB,EAASG,gBACjBh1B,SAAUk2B,EACVpvB,KAAK,qBAGT,gBAAC,KAAD,CAAQjN,GAAI,CAAE0U,GAAI,IAChB,gBAAC,KAAD,CAAO5T,MAAM,uCAAS4T,GAAI,KAC1B,gBAAC,KAAD,CACE1U,GAAI,CAAEsD,MAAO,IACb2W,OAAQ+gB,EAASE,YACjB/0B,SAAUk2B,EACVpvB,KAAK,iBAGT,gBAAC,KAAD,CAAQjN,GAAI,CAAE0U,GAAI,IAChB,gBAAC,KAAD,CACEzH,KAAK,cACLnM,MAAM,uCACN8B,MAAOo4B,EAASI,YAChBj1B,SAAUk2B,Q,mEC/ZxB,MA2IA,GA3IgD,KAC9C,MAAM,UAAEpzB,IAAcE,EAAAA,EAAAA,MACf1H,EAAM0M,IAAW5J,EAAAA,EAAAA,WAAS,IAC1B0I,EAAMwvB,IAAWl4B,EAAAA,EAAAA,UAAS,4BAC3B0xB,GAAYxnB,EAAAA,EAAAA,QAAgB,MAE5BiuB,EAAa,KACjBvuB,GAAQ,IAGJ5M,EAAc,KAClB0H,EAAU0zB,eAAiB,EAC3BxuB,GAAQ,IAGJyuB,EAAa,KACjB,IAAK,MAAMjoB,KAAK1L,EAAU4zB,SAAU,EACxBC,EAAAA,GAAAA,IAAYnoB,EAAEzK,KAAd4yB,EACVhrB,CAAE1C,EAAAA,GAAAA,QAAa2tB,IAEjB,MAAW,KACTC,GAAAA,SAAAA,QAAiB,CAAEv4B,KAAM,eAAgB9B,OAAQ,SAChD,MAGCs6B,EAAWt7B,IAAO,MACtB,MAAMu7B,EAAK,MAAAj0B,EAAU4zB,UAAV,QAAyBM,GAAMA,EAAEx7B,KAAOA,IACnD,GAAIu7B,EACF,OAAOA,EAAGhzB,MAYRjC,EAAgB,KAChBgB,EAAU0zB,gBACZ1zB,EAAUm0B,iBAAiB,CACzBnwB,OACA/C,KAAM+rB,EAAUtkB,QAAQilB,WACxBj1B,GAAIsH,EAAU0zB,iBAEhB1zB,EAAU0zB,eAAiB,GAE3B1zB,EAAUo0B,iBAAiB,CACzBpwB,OACA/C,KAAM+rB,EAAUtkB,QAAQilB,WACxBj1B,GAAI,SAIRJ,KAGF,OACE,gBAAC,KAAD,MACG,kBACC,gBAACuK,EAAA,EAAD,CAAK9L,GAAI,CAAEsD,MAAO,SAChB,gBAAC+O,GAAA,EAAD,KACG,MAAApJ,EAAU4zB,UAAV,QAAwBK,GACvB,gBAAC5qB,GAAA,GAAD,CACEtS,GAAI,CAAEs9B,QAAS,kBACft4B,IAAKk4B,EAAGv7B,GACRqR,gBACE,gCACE,gBAAC,IAAD,CAAY,aAAW,SAAS5S,QAAS,IArC7C88B,KACZR,IACAzzB,EAAU0zB,eAAiBO,EAAGv7B,GAE9B86B,EAAQS,EAAGjwB,OAiCoDswB,CAAKL,IAClD,gBAACM,GAAA,EAAD,OAEF,gBAAC,IAAD,CACE,aAAW,SACXp9B,QAAS,IAAM6I,EAAUw0B,aAAaP,EAAGv7B,KAEzC,gBAACmsB,GAAA,EAAD,SAKLoP,EAAGjwB,SAIV,gBAAC,IAAD,CACE3E,QAAQ,YACRlI,QAASs8B,EACTv7B,WAAS,EACTnB,GAAI,CAAEsD,MAAO,SAJf,4BAQCo6B,aAAaC,QAAQ,gBACpB,gBAAC,IAAD,CACEr1B,QAAQ,YACRlI,QAASw8B,EACTz7B,WAAS,EACTnB,GAAI,CAAEsD,MAAO,OAAQoR,GAAI,IAJ3B,4BAUF,gBAACnV,EAAA,EAAD,CACEkC,KAAMA,EACNC,SAAS,KACTP,WAAS,EACTob,WAAY,CAAEvc,GAAI,CAAEoB,OAAQ,UAE5B,gBAAC,KAAD,CAAcN,MAAM,2BAAOhB,QAASyB,IACpC,gBAAC6G,EAAA,EAAD,KACE,gBAAC,KAAD,CAAQgR,WAAW,UACjB,gBAAC,KAAD,kCACA,gBAAC,KAAD,CACExW,MAAOqK,EACP9G,SAAW+M,GAAQupB,EAAQvpB,EAAIvQ,OAAOC,OACtC5B,KAAK,WAGT,gBAAC,KAAD,CACE48B,gBAAiB,OACjBC,UAAYh3B,GAAOovB,EAAUtkB,QAAU9K,EACvCV,SAAU,OACVkwB,QAAS,OACTnsB,KAAM+yB,EAAQh0B,EAAU0zB,iBC5JxB,mDD+JJ,gBAAC9zB,EAAA,EAAD,KACE,gBAAC,IAAD,CAAQzI,QAAS6H,GAAjB,gBACA,gBAAC,IAAD,CAAQ7H,QAASmB,GAAjB,uBEvJDu8B,GAAY,CACvB,CAAEh9B,MAAO,eAAMa,GAAI83B,GAAUsE,MAAO17B,UAAW,gBAAC,GAAD,OAC/C,CAAEvB,MAAO,eAAMa,GAAI83B,GAAUuE,OAAQ37B,UAAW,gBAAC,GAAD,OAChD,CAAEvB,MAAO,eAAMa,GAAI83B,GAAUhqB,YAAapN,UAAW,gBAAC,GAAD,OACrD,CAAEvB,MAAO,eAAMa,GAAI83B,GAAUwE,MAAO57B,UAAW,gBAAC,GAAD,OAC/C,CAAEvB,MAAO,eAAMa,GAAI83B,GAAUyE,OAAQ77B,UAAW,gBAAC,GAAD,QAIrC87B,GAAa,CACxB,CAAEr9B,MAAO,eAAMa,GAAI83B,GAAUsE,MAAO17B,UAAW,gBAAC,GAAD,OAE/C,CAAEvB,MAAO,eAAMa,GAAI83B,GAAU2E,KAAM/7B,UAAW,gBAAC,GAAD,OAC9C,CAAEvB,MAAO,eAAMa,GAAI83B,GAAUhqB,YAAapN,UAAW,gBAAC,GAAD,Q,oGCCvD,MA0HA,IAAe2G,EAAAA,EAAAA,KAlHyC,KAAM,MAC5D,MAAM,eAAEoa,IAAmBC,EAAAA,EAAAA,KAErB9hB,EAAc,KAClB6hB,EAAeviB,UAOjB,OACE,gBAACtB,EAAA,EAAD,CACEkC,KAAM2hB,EAAeib,KACrB38B,SAAS,KACT6a,WAAY,CAAEvc,GAAI,CAAEoB,OAAQ,WAE5B,gBAAC,KAAD,CAActB,QAASyB,EAAaT,MAAM,6BAC1C,gBAACsH,EAAA,EAAD,KACE,gBAAC,KAAD,KACE,gBAAC,IAAD,CAAQhI,QAAS,IAAMgjB,EAAehT,OAAtC,gBACA,gBAAC,IAAD,CAAQhQ,QAAS,IAAMgjB,EAAekb,MAAtC,gBACA,gBAAC,IAAD,CAAQl+B,QAAS,IAAMgjB,EAAemb,QAAtC,gBACA,gBAAC,IAAD,CAAQn+B,QAAS,IAAMgjB,EAAe/P,UAAtC,iBAEF,gBAACmrB,GAAA,EAAD,CAAgBn8B,UAAWmnB,GAAAA,EAAOxpB,GAAI,CAAEoB,OAAQ,sBAC9C,gBAACq9B,GAAA,EAAD,CAAOz+B,GAAI,CAAEkL,SAAU,KAAO,aAAW,eAAewzB,cAAY,GAClE,gBAACC,GAAA,EAAD,KACE,gBAACC,GAAA,EAAD,KACE,gBAACn7B,GAAA,EAAD,CAAW4C,MAAM,UAAjB,4BACA,gBAAC5C,GAAA,EAAD,CAAW4C,MAAM,UAAjB,sBACA,gBAAC5C,GAAA,EAAD,CAAW4C,MAAM,UAAjB,kBAGJ,gBAACw4B,GAAA,EAAD,KACG,MAAAzb,EAAe2B,WAAf,QAA6B,CAAC+Z,EAAIz5B,IACjC,gBAACu5B,GAAA,EAAD,CACEx+B,QAAS,IAAOgjB,EAAe2b,aAAe15B,EAC9CL,IAAK85B,EAAG95B,IACRhF,GAAI,CAAE,mCAAoC,CAAE2G,OAAQ,IACpD4Y,SAAU6D,EAAe2b,eAAiB15B,GAE1C,gBAAC,KAAD,CACEgB,MAAM,SACNowB,aAAcqI,EAAG95B,IACjBgV,OAAS9G,IACHA,EAAIvQ,OAAOC,OACbwgB,EAAe1N,OAAOopB,EAAG95B,IAAK,CAC5BA,IAAKkO,EAAIvQ,OAAOC,WAKxB,gBAAC,KAAD,CACEyD,MAAM,SACNowB,aACsB,kBAAbqI,EAAGl8B,MACNo8B,OAAOF,EAAGl8B,OACVk8B,EAAGl8B,MAEToX,OAAS9G,IACHA,EAAIvQ,OAAOC,OACbwgB,EAAe1N,OAAOopB,EAAG95B,IAAK,CAC5BpC,MAAOsQ,EAAIvQ,OAAOC,WAK1B,gBAAC,KAAD,CACEyD,MAAM,SACNowB,aAAcqI,EAAG3d,KACjBnH,OAAS9G,IACHA,EAAIvQ,OAAOC,OACbwgB,EAAe1N,OAAOopB,EAAG95B,IAAK,CAC5Bmc,KAAMjO,EAAIvQ,OAAOC,kBAWrC,gBAACiG,EAAA,EAAD,CAAe7I,GAAI,CAAE0kB,eAAgB,kBACnC,gBAAC5Y,EAAA,EAAD,KACE,gBAAC,KAAD,CAAYxD,QAAQ,aAApB,sEACA,gBAAC,KAAD,CAAYA,QAAQ,aAApB,iHAIF,gBAAC,KAAD,KACE,gBAAC,IAAD,CACElI,QAvFY,KACpBgjB,EAAe6b,WAuFP9Z,WAAS,EACT7c,QAAQ,YACRtI,GAAI,CAAEqhB,GAAI,IAJZ,gBAQA,gBAAC,IAAD,CACE8D,WAAS,EACT/kB,QAASmB,EACT+G,QAAQ,YACR9H,MAAM,SAJR,sBC5HJ0+B,GAAkDzf,EAAAA,YACtD,CAAC7f,EAAO+L,KACN,MAAM,eAAEyX,IAAmBC,EAAAA,EAAAA,KAE3B,OACE,gBAAC,KAAD,MACG,IACC,gCACE,gBAAC,KAAD,QACEjjB,QAAS,IAAOgjB,EAAeib,MAAO,EACtC1yB,IAAKA,GACD/L,EAHN,CAIEI,GAAI,CAAEoB,OAAQ,UAEd,gBAAC,KAAD,CAAS6L,KAAK,mBAEfmW,EAAeib,MAAQ,gBAAC,GAAD,YAOpC,IAAer1B,EAAAA,EAAAA,IAASk2B,I,qeCPxB,MAAMz2B,IAAQnJ,EAAAA,GAAAA,IAAO6/B,GAAAA,EAAP7/B,EAAkB,EAAGE,YAAH,CAC9B,UAAW,CACT4B,OAAQ,MACRkC,MAAO,aAIL87B,IAAa9/B,EAAAA,GAAAA,IAAO+/B,EAAAA,EAAP//B,EAAe,EAAGE,YAAH,CAChCif,YAAa,UAGT6gB,IAAQhgC,EAAAA,GAAAA,IAAO,MAAPA,EAAc,EAAGE,YAAH,CAC1BwM,QAAS,eACT1I,MAAO,QACPD,SAAU,OACVD,UAAW,YAGPm8B,GAAgB,CACpBvzB,QAAS,cACToN,WAAY,SACZsL,eAAgB,SAChBtjB,OAAQ,QAiBV,IAAIo+B,GAAyB,CAC3BvyB,KAAM,GACN0iB,OAAQ,GACR8P,UAAW,GACXC,OAAQ,GACRj7B,KAAM,EACNsF,UAAW,GACX41B,SAAU,GACVC,MAAO,GACPC,cAAe,GACfC,QAAS,IAEX,MAsXA,IAAe92B,EAAAA,EAAAA,KAtXoC,KACjD,MAAOjI,EAASg/B,IAAcx7B,EAAAA,EAAAA,WAAS,IAChCy7B,EAAWC,IAAgB17B,EAAAA,EAAAA,UAAS,6BACpC27B,EAAUC,IAAe57B,EAAAA,EAAAA,UAASi7B,KAClC97B,EAAS08B,IAAc77B,EAAAA,EAAAA,UAAS,CACrC,CACES,IAAK,OACLlE,MAAO,eACPuF,MAAO,QAET,CACErB,IAAK,OACLlE,MAAO,2BACPuF,MAAO,SACPa,OAAQ,CAACC,EAAMk5B,EAAQh7B,IACrB,4BAAgB,IAAT8B,EAAa,qBAAQ,uBAGhC,CACEnC,IAAK,SACLlE,MAAO,eACPuF,MAAO,UAET,CACErB,IAAK,SACLlE,MAAO,eACPuF,MAAO,SACPa,OAAQ,CAACC,EAAMk5B,EAAQh7B,IACrB,gCACE,gBAAC+5B,GAAD,CAAY92B,QAAQ,WAAWlI,QAAS,IAAMm9B,EAAK8C,IAAnD,gBAGA,gBAACjB,GAAD,CACE92B,QAAQ,WACRlI,QAAS,IAAMkgC,EAAWD,EAAO1+B,IACjCnB,MAAM,QACNR,GAAI,CAAEye,YAAa,IAJrB,qBAYD9a,EAAY48B,IAAiBh8B,EAAAA,EAAAA,UAAS,KACtCV,EAAa28B,IAAkBj8B,EAAAA,EAAAA,UAAS,CAC7CtC,QAAS,EACTC,SAAU,EACVC,gBAAiB,CAAC,EAAG,EAAG,EAAG,GAAI,OAE1Bs+B,EAAYC,IAAiBn8B,EAAAA,EAAAA,WAAS,IACtCP,EAAiB28B,IAAsBp8B,EAAAA,EAAAA,UAAS,KAChDN,EAAe28B,IAAoBr8B,EAAAA,EAAAA,UAAS,IAU7Cg5B,EAAQ8C,IACZF,EAAYE,GACZJ,EAAa,4BACbF,GAAW,GACXW,GAAc,IAaVG,EAAc,CAACp+B,EAAOgC,KAC1B,IAAI8N,EAAM,MAAK2tB,GACf3tB,EAAI9N,GAAQhC,EAAME,OAAOC,MACzBu9B,EAAY5tB,KAgBd7I,EAAAA,EAAAA,YAAU,MACRgN,EAAAA,GAAAA,KACE,IAAMxN,GAAAA,EAAAA,YACN,KACE43B,SAGH,IACH,MAAMA,EAAc,KACU,IAAxB53B,GAAAA,EAAAA,YAGJitB,EAAAA,GAAAA,IAAUzG,EAAAA,GAAAA,KAAmB,CAAE6C,WAAYrpB,GAAAA,EAAAA,YACxCqB,MAAMooB,IACL,GAAoB,IAAhBA,EAAG,KAAgB,CACrB,IAAI,KAAE3sB,GAAS2sB,EAAI7rB,KACnB,GAAId,GAAQA,EAAKC,OAAS,EAAG,CAC3B,IAAIW,EAAM,GACV,IAAK,IAAI3B,KAAQe,EAAM,CACrB,IAAIuM,EAAM,CACR5Q,GAAIsD,EAAKtD,GACTsL,KAAMhI,EAAKgI,KACX0iB,OAAQ1qB,EAAK8qB,QACb0P,UAAWx6B,EAAK87B,WAChBrB,OAAQz6B,EAAKy6B,OACbj7B,KAAMQ,EAAKR,KACXsF,UAAW9E,EAAKstB,WAChBoN,SAAU16B,EAAK+7B,UACfpB,MAAO36B,EAAKg8B,OACZpB,cAAe56B,EAAKi8B,gBACpBpB,QAAS76B,EAAKk8B,SACdtN,MAAO5uB,EAAK4uB,OAGdjtB,EAAIQ,KAAKmL,GAEXguB,EAAc35B,QAEd25B,EAAc,QAInBa,OAAO9J,SAKN+J,EAAiBv6B,KACrBw6B,EAAAA,GAAAA,IAAW5R,EAAAA,GAAAA,KAAmB5oB,EAAM,QAAQyD,MAAMooB,IAC5B,IAAhBA,EAAG,OACLmO,IACA1zB,EAAAA,EAAAA,QAAgB,4BAChB2yB,GAAW,QAKXO,EAAc3+B,IAClB,IAAIu+B,EAAW,CACbv+B,GAAI,CAACA,KAEP4/B,EAAAA,GAAAA,IAAa7R,EAAAA,GAAAA,OAAqBwQ,GAAU31B,MAAMooB,IAC5B,IAAhBA,EAAG,OACLmO,IACA1zB,EAAAA,EAAAA,QAAgB,kCAqCtB1D,EAAAA,EAAAA,YAAU,KACRo3B,MACC,KACHp3B,EAAAA,EAAAA,YAAU,MACRgN,EAAAA,GAAAA,KACE,IAAMxN,GAAAA,EAAAA,SACN,KACE43B,SAGH,IACH,MAKM,mBAAEU,IAAuBne,EAAAA,EAAAA,KAE/B,OACE,gBAAC9jB,EAAA,EAAD,CACEkC,KAAM+/B,EAAmBnD,KACzB38B,SAAS,KACT6a,WAAY,CAAEvc,GAAI,CAAEoB,OAAQ,QAAS8J,SAAU,WAE/C,gBAAC,KAAD,CAAcpL,QAhIe,KAC/B0hC,EAAmBnD,MAAO,GA+HyBv9B,MAAM,6BACvD,gBAACsH,EAAA,EAAD,KACE,gBAACg3B,GAAD,CACE92B,QAAQ,WACRlI,QA5KI,KACV+/B,EAAYX,IACZS,EAAa,4BACbF,GAAW,GACXW,GAAc,IAyKR1gC,GAAI,CAAEmc,aAAc,QAHtB,4BAOA,gBAACijB,GAAD,CACE92B,QAAQ,WACRlI,QAnEgB,KACtB,GAAI4D,EAAgBiC,OAAS,EAAG,CAC9B,IAAIi6B,EAAW,CACbv+B,GAAIqC,IAENu9B,EAAAA,GAAAA,IAAa7R,EAAAA,GAAAA,OAAqBwQ,GAAU31B,MAAMooB,IAC5B,IAAhBA,EAAG,OACLmO,IACA1zB,EAAAA,EAAAA,QAAgB,qCAIpBA,EAAAA,EAAAA,MAAc,2DAwDV5M,MAAM,QACNR,GAAI,CAAEye,YAAa,EAAGtC,aAAc,QAJtC,4BAQA,gBAACslB,GAAA,EAAD,CACE/9B,QAASA,EACTC,WAAYA,EACZC,OAAO,KACPC,YAAaA,EACbC,iBA9DkBtB,IACxBg+B,EAAe,CACbv+B,QAASO,EACTN,SAAU2B,EAAY3B,SACtBC,gBAAiB0B,EAAY1B,mBA2DzB4B,wBAvDyBxB,IAC/Bi+B,EAAe,CACbv+B,QAAS,EACTC,SAAUK,EACVJ,gBAAiB0B,EAAY1B,mBAoDzB6B,gBAAiBA,EACjBC,cAAeA,EACfC,eAvCe,CAACqB,EAASC,KAC/Bm7B,EAAmBp7B,GACnBq7B,EAAiBp7B,MAuCb,gBAACk8B,GAAA,EAAD,CACE1gC,KAAK,KACLF,MAAOk/B,EACPj/B,QAASA,EACTO,SAzLS,KACf,IAAIwF,EAAO,SACNo5B,GADG,IAENn2B,UAAWb,GAAAA,EAAAA,YAEbm4B,EAAcv6B,IAqLRvF,YApKY,KAClBw+B,GAAW,IAoKL5+B,WAAW,GAEX,gBAACgpB,GAAA,GAAD,CAAMC,WAAS,EAAC1qB,QAAS,GACvB,gBAACyqB,GAAA,GAAD,CAAMllB,MAAI,EAACwlB,GAAI,GAAIzqB,GAAIu/B,IACrB,gBAACD,GAAD,2BACA,gBAAC,GAAD,CACEt+B,KAAK,QACL4B,MAAOs9B,EAASjzB,KAChB9G,SAAW1D,IACTo+B,EAAYp+B,EAAO,YAIzB,gBAAC0nB,GAAA,GAAD,CAAMllB,MAAI,EAACwlB,GAAI,GAAIzqB,GAAIu/B,IACrB,gBAACD,GAAD,uCACA,gBAACqC,GAAA,EAAD,CACEzhB,SAAUugB,EACVjgC,MAAM,UACNoC,MAAOs9B,EAASz7B,KAChBm9B,WAAS,EACTz7B,SAAU,CAAC1D,EAAOG,KAhMT,EAACA,EAAO6B,KAC7B,IAAI8N,EAAM,MAAK2tB,GACf3tB,EAAI9N,GAAQ7B,EACZu9B,EAAY5tB,IA8LEsvB,CAAej/B,EAAO,SAExB5C,GAAI,CAAEsD,MAAO,QAASlC,OAAQ,SAE9B,gBAAC0gC,GAAA,EAAD,CAAcl/B,MAAO,GAArB,sBACA,gBAACk/B,GAAA,EAAD,CAAcl/B,MAAO,GAArB,wBAGJ,gBAACunB,GAAA,GAAD,CAAMllB,MAAI,EAACwlB,GAAI,GAAIzqB,GAAIu/B,IACrB,gBAACD,GAAD,qBACA,gBAAC,GAAD,CACEpf,SAAUugB,EACVz/B,KAAK,QACL4B,MAAOs9B,EAASvQ,OAChBxpB,SAAW1D,IACTo+B,EAAYp+B,EAAO,cAIzB,gBAAC0nB,GAAA,GAAD,CAAMllB,MAAI,EAACwlB,GAAI,GAAIzqB,GAAIu/B,IACrB,gBAACD,GAAD,8BACA,gBAAC,GAAD,CACEpf,SAAUugB,EACVz/B,KAAK,QACL4B,MAAOs9B,EAAST,UAChBt5B,SAAW1D,IACTo+B,EAAYp+B,EAAO,iBAIN,IAAlBy9B,EAASz7B,KACR,gCACE,gBAAC0lB,GAAA,GAAD,CAAMllB,MAAI,EAACwlB,GAAI,GAAIzqB,GAAIu/B,IACrB,gBAACD,GAAD,2BACA,gBAAC,GAAD,CACEpf,SAAUugB,EACVz/B,KAAK,QACL4B,MAAOs9B,EAASP,SAChBx5B,SAAW1D,IACTo+B,EAAYp+B,EAAO,gBAIzB,gBAAC0nB,GAAA,GAAD,CAAMllB,MAAI,EAACwlB,GAAI,GAAIzqB,GAAIu/B,IACrB,gBAACD,GAAD,mCACA,gBAAC,GAAD,CACEpf,SAAUugB,EACVz/B,KAAK,QACL4B,MAAOs9B,EAASN,MAChBz5B,SAAW1D,IACTo+B,EAAYp+B,EAAO,aAIzB,gBAAC0nB,GAAA,GAAD,CAAMllB,MAAI,EAACwlB,GAAI,GAAIzqB,GAAIu/B,IACrB,gBAACD,GAAD,+CACA,gBAAC,GAAD,CACEpf,SAAUugB,EACVz/B,KAAK,QACL4B,MAAOs9B,EAASL,cAChB15B,SAAW1D,IACTo+B,EAAYp+B,EAAO,qBAIzB,gBAAC0nB,GAAA,GAAD,CAAMllB,MAAI,EAACwlB,GAAI,GAAIzqB,GAAIu/B,IACrB,gBAACD,GAAD,mCACA,gBAAC,GAAD,CACEpf,SAAUugB,EACVz/B,KAAK,QACL4B,MAAOs9B,EAASJ,QAChB35B,SAAW1D,IACTo+B,EAAYp+B,EAAO,gBAKzB,KACJ,gBAAC0nB,GAAA,GAAD,CAAMllB,MAAI,EAACwlB,GAAI,GAAIzqB,GAAE,SAAOu/B,IAAP,IAAsBn+B,OAAQ,MACjD,gBAACk+B,GAAD,2BACA,gBAACtR,GAAA,EAAD,CACEC,QAAS,EACT8T,QAAS,EACTx1B,MAAO,CAAEjJ,MAAO,KAChBV,MAAOs9B,EAASR,OAChBv5B,SAAW1D,IACTo+B,EAAYp+B,EAAO,qBCzZrC,GArBEgd,EAAAA,YAAiB,CAAC7f,EAAO+L,KACvB,MAAM,mBAAE61B,IAAuBne,EAAAA,EAAAA,KAE/B,OACE,gBAAC,KAAD,MACG,IACC,gCACE,gBAAC,KAAD,QACEjjB,QAAS,IAAOohC,EAAmBnD,MAAO,EAC1C1yB,IAAKA,GACD/L,EAHN,CAIEI,GAAI,CAAEoB,OAAQ,UAEd,gBAAC,KAAD,CAAS6L,KAAK,wBAEhB,gBAAC,GAAD,YCyDZ,GAtE4CwS,EAAAA,YAC1C,EAAGuiB,SAAQC,YAA0Bt2B,KACnC,MAAOuU,EAAUgiB,IAAe39B,EAAAA,EAAAA,WAAS,GAKnCmR,EAAS,KAEXwsB,EADEF,GACW5yB,EAAAA,GAAAA,QAAAA,SAAAA,eAAAA,SAEAA,EAAAA,GAAAA,QAAAA,SAAAA,eAAAA,UAwCjB,OApCA1F,EAAAA,EAAAA,YAAU,KACR,MAAMmvB,EAAS,GA8Bf,OA7BArnB,EAAAA,GAAAA,KACE,MAAQpC,EAAAA,GAAAA,UACR,KACEypB,EAAOzxB,MACLqK,EAAAA,GAAAA,KACErC,EAAAA,GAAAA,QAAAA,SAAAA,eACAA,EAAAA,GAAAA,QAAAA,SAAAA,eAAAA,aACA,KACM4yB,GAAQE,GAAY,OAG5BzwB,EAAAA,GAAAA,KACErC,EAAAA,GAAAA,QAAAA,SAAAA,eACAA,EAAAA,GAAAA,QAAAA,SAAAA,eAAAA,WACCvI,IACC6O,QAGJjE,EAAAA,GAAAA,KACErC,EAAAA,GAAAA,QAAAA,SAAAA,eACAA,EAAAA,GAAAA,QAAAA,SAAAA,eAAAA,WACCvI,IACC6O,WAOH,KACL,KAAAmjB,GAAM,KAANA,GAAgBlkB,GAAMA,SAEvB,IAGD,gBAACwtB,EAAA,EAAD,CAASrhC,MAAOkhC,EAAS,eAAO,eAAMI,UAAU,QAC9C,gBAAC,IAAD,CACEhiC,QAAS8f,EAAW,OAnDN,KAClB5M,GAAAA,IAAAA,eAAAA,YAA+B0uB,EAAS,OAAS,SAmD7ChiC,GAAI,CACFoB,OAAQ,GACRjB,OAAQ+f,EAAW,cAAgB,UACnC1f,MAAO0f,EAAW,sBAAwB,qBAG5C,gBAAC,KAAD,CACEjT,KAAMg1B,EACNzhC,MAAO0f,EAAW,sBAAwB,0BCnE/C,SAASmiB,GACdC,EACAt9B,EACAF,EAAqBqV,IAAMA,IAE3B,MAAOT,EAAOuP,IAAY1kB,EAAAA,EAAAA,UACxBO,EAZmBE,IACb04B,aAAaC,QAAQ34B,GAWrBu9B,CAAcv9B,KAAgBs9B,GAYtC,MAAO,CAAC5oB,EATaS,IACnB8O,EAAS9O,GACTujB,aAAa8E,QAAQx9B,EAAKmV,EAAE5M,aAGb,MACNmwB,aAAaC,QAAQ34B,ICVlC,MAmCA,GAnCwDya,EAAAA,YACtD,EAAGwiB,WAAU5O,YAAWoP,OAAO92B,KAC7B,MAAO/I,EAAOwtB,EAAUsS,GAAYL,IAClC,EACAhP,GACC/V,GAAY,SAANA,IAqBT,OAbA5T,EAAAA,EAAAA,YAAU,KACJg5B,EACFtzB,EAAAA,GAAAA,QAAAA,OAAmBikB,GAAazwB,GAEhC4O,EAAAA,GAAAA,KACE,MAAQpC,EAAAA,GAAAA,UACR,KACEghB,EAAShhB,EAAAA,GAAAA,QAAAA,OAAmBikB,SAIjC,IAGD,gBAAC8O,EAAA,EAAD,CAASrhC,MAAO2hC,EAAKL,UAAU,QAC7B,gBAAC,IAAD,CAAYhiC,QApBI,KAClBgwB,GAAUhhB,EAAAA,GAAAA,QAAAA,OAAmBikB,IAC7BjkB,EAAAA,GAAAA,QAAAA,OAAmBikB,IAAcjkB,EAAAA,GAAAA,QAAAA,OAAmBikB,IAkBhBrzB,GAAI,CAAEoB,OAAQ,SAC9C,gBAAC,KAAD,CAAS6L,KAAMg1B,SC3BzB,IAAI58B,GAAQ,EAEZ,UACE,CACE1D,GAAI0D,KACJo9B,IAAK,eACL5yB,KAAM8yB,GAAAA,EACNV,SAAU,iBACV7hC,QAAS,KACF6I,GAAAA,EAAAA,kBACLA,GAAAA,EAAAA,gBAAyB,GACzBA,GAAAA,EAAAA,KAAeA,GAAAA,EAAAA,iBAEjB25B,SAAS,GAEX,CACEjhC,GAAI0D,KACJo9B,IAAK,eACLpgC,UAAW,gBAAC,GAAD,CAAa4/B,SAAS,iBAAiBD,QAAM,IACxDY,SAAS,GAEX,CACEjhC,GAAI0D,KACJo9B,IAAK,eACLpgC,UAAW,gBAAC,GAAD,CAAa4/B,SAAS,kBAAkBD,QAAQ,IAC3DY,SAAS,GAQX,CACEjhC,GAAI0D,KACJo9B,IAAK,iCACL5yB,KAAM8yB,GAAAA,EACNV,SAAU,mBACV5/B,UACE,gBAAC,GAAD,CACE4/B,SAAS,mBACT5O,UAAU,aACVoP,IAAI,mCAGRG,SAAS,GAEX,CACEjhC,GAAI0D,KACJo9B,IAAK,qBACL5yB,KAAM8yB,GAAAA,EACNV,SAAU,mBACV7hC,QAAS,KACPgP,EAAAA,GAAAA,QAAAA,OAAAA,gBAAqCA,EAAAA,GAAAA,QAAAA,OAAAA,gBAEvC/M,UACE,gBAAC,GAAD,CACE4/B,SAAS,mBACT5O,UAAU,iBACVoP,IAAI,uBAGRG,SAAS,GAEX,CACEjhC,GAAI0D,KACJo9B,IAAK,eACL5yB,KAAM8yB,GAAAA,EACNV,SAAU,eACV7hC,QAAS,KACP,GAAIgP,EAAAA,GAAAA,QAAAA,OAAAA,cAAAA,OAA0C4qB,GAAAA,WAAAA,UAAsB,CAClE,GAAI6I,EAAAA,EAAAA,IAAgB,cAClB,OAEFz1B,EAAAA,EAAAA,KAAa,iIAAyB,CACpCpI,IAAK,aACLqa,OACE,gBAAC,IAAD,CAAQjf,QAAS,IAAMgN,EAAAA,EAAAA,MAAc,eAArC,gBAEF01B,iBAAkB,YAEf1zB,EAAAA,GAAAA,QAAAA,OAAAA,cAAAA,KAAwC4qB,GAAAA,WAAAA,WAEjD4I,SAAS,GAEX,CACEjhC,GAAI0D,KACJo9B,IAAK,eACL5yB,KAAM8yB,GAAAA,EACNV,SAAU,iBACV7hC,QAAS,KACP,IAAI2iC,EAAkB75B,GAAAA,EAAAA,gBAClB85B,EAAW5zB,EAAAA,GAAAA,QAAAA,SAAAA,oBAAAA,QACf,KAAc4zB,IACZ,KAAAA,GAAQ,KAARA,GAAkBvQ,KACQ,IAApBsQ,EACFtQ,EAAQ1e,OAER0e,EAAQ3e,WAGd5K,GAAAA,EAAAA,iBAA6B65B,GAE/BH,SAAS,GAEX,CACEjhC,GAAI0D,KACJo9B,IAAM,yCACN5yB,KAAM8yB,GAAAA,EACNV,SAAU,sCACV7hC,QAAS,KACPgP,EAAAA,GAAAA,QAAAA,WAEFwzB,SAAS,GAEX,CACEjhC,GAAI0D,KACJo9B,IAAK,2BACLR,SAAU,iBACVpyB,KAAM8yB,GAAAA,EACNtgC,UAAW,gBAAC,GAAD,MACXugC,SAAS,GAEX,CACEjhC,GAAI0D,KACJo9B,IAAK,2BACLR,SAAU,qBACVpyB,KAAM8yB,GAAAA,EACNtgC,UAAW,gBAAC,GAAD,MACXugC,SAAS,GAYX,CACEjhC,GAAI0D,KACJo9B,IAAK,eACL5yB,KAAM8yB,GAAAA,EACNV,SAAU,kBACV7hC,QAAS,KAGP,KADiB6iC,SAASC,kBAKxBD,SAASE,qBAJE,CACFF,SAASG,gBACfC,sBAKPT,SAAS,IC1JPU,IAAgBhkC,EAAAA,GAAAA,IAAOgtB,EAAAA,EAAK;;EAG5BiX,IAAiBjkC,EAAAA,GAAAA,IAAO+sB,EAAAA,EAAM;;;;;;;;;EAsGpC,GA5F+CzsB,IAC7C,MAAOgD,EAAOwtB,IAAY7rB,EAAAA,EAAAA,UAASk1B,GAAUsE,QACvC,YAAExkB,IAAgBtK,EAAAA,EAAAA,MAClBwG,EAAe,CAAChT,EAA6B8U,KACjD6Y,EAAS7Y,IAGLisB,EACJjqB,EAAY7G,QAAU6G,EAAY3G,KAAO2G,EAAYC,IACjD2kB,GACAL,GAEN,OACE,gBAAC,aAAD,CAA4Bl7B,MAAO6gC,EAAAA,GACjC,gBAAC,KAAD,MACG,IACC,gBAAChvB,EAAA,EAAD,CAAOzU,GAAI,CAAEsD,MAAO,KAAOioB,cAAc,OACvC,gBAAC9W,EAAA,EAAD,CAAOnR,MAAO,GAAItD,GAAI,CAAE6uB,UAAW,mBAChC,IAAA6U,IAAO,KAAPA,IAAY,CAACt3B,EAAG/G,IACf,gBAAC,WAAD,CAAgBL,IAAKK,GACnB,gBAAC88B,EAAA,EAAD,CAASrhC,MAAOsL,EAAEq2B,IAAKL,UAAU,QAC9Bh2B,EAAE/J,WACD,gBAAC,IAAD,CAAYjC,QAASgM,EAAEhM,QAASJ,GAAI,CAAEoB,OAAQ,SAC5C,gBAACgL,EAAEyD,KAAH,CAAQ5C,KAAMb,EAAE61B,aAIrB71B,EAAEw2B,SACD,gBAACje,EAAA,EAAD,CACE3kB,GAAI,CAAEsD,MAAO,OAAQie,GAAI,MAAO7M,GAAI,OAAQ9O,GAAI,cAM1D,gBAAC6O,EAAA,EAAD,CACEzU,GAAI,CAAEiM,KAAM,EAAGf,SAAU,EAAG9J,OAAQ,QACpCmqB,cAAc,UAEd,gBAACzf,EAAA,EAAD,CACE9L,GAAI,CACFiM,KAAM,EACNnG,UAAW,EACXC,UAAW,OACX49B,UAAW,SACXviC,OAAQ,SAGV,gBAACmiC,GAAD,CACE3gC,MACG,IAAA4gC,GAAU,KAAVA,GAAiBp3B,GAAMA,EAAEzK,KAAOiB,IAE7BA,EADA62B,GAAUsE,MAKhB53B,SAAUsP,EACV,aAAW,mBACXzV,GAAI,CAAEgS,YAAa,YAElB,IAAAwxB,GAAU,KAAVA,GAAgBI,GACf,gBAACN,IAAD,QACEt+B,IAAK4+B,EAAMjiC,GACXiB,MAAOghC,EAAMjiC,GACbuP,MAAO0yB,EAAM9iC,QACTyrB,EAAAA,EAAAA,GAAUqX,EAAMjiC,IAJtB,CAKE3B,GAAI,CAAEkL,SAAU,OAAQ24B,GAAI,MAAOC,GAAI,aAI5C,IAAAN,GAAU,KAAVA,GAAgB/b,GACf,gBAAC,IAAD,CACE7kB,MAAO6kB,EAAI9lB,GACX2K,aACG,IAAAk3B,GAAU,KAAVA,GAAiBp3B,GAAMA,EAAEzK,KAAOiB,IAE7BA,EADA62B,GAAUsE,MAGhB/4B,IAAKyiB,EAAI9lB,IAER8lB,EAAIplB,cAIX,gBAAC,GAAD,YCjFd,GArBqC,KACnC,MAAOkX,EAAavK,IAAY+0B,EAAAA,EAAAA,YAAWC,GAAAA,GAAgBC,EAAAA,IAE3D,OACE,gBAAC,cAAD,CACErhC,MAAO,CACL2W,cACAvK,aAGF,gBAACxH,EAAD,CACExH,GAAI,CAAEgM,QAAS,OAAQ5K,OAAQ,OAAQyE,SAAU,UACjDlE,GAAG,UAEH,gBAAC,EAAD,MACA,gBAAC,IAAD,MACA,gBAAC,GAAD","sources":["webpack:///./components/SModal/index.tsx","webpack:///./components/SPagination/index.tsx","webpack:///./components/STable/index.tsx","webpack:///./components/fullContainer/index.tsx","webpack:///./components/sceneTab/fileModal.tsx","webpack:///./components/leftPanel/index.tsx","webpack:///./components/rightPanel/SceneCollection.tsx","webpack:///./components/rightPanel/scenePanel/defaultConfig.tsx","webpack:///./components/rightPanel/scenePanel/SunConfig.tsx","webpack:///./components/rightPanel/scenePanel/bgType.tsx","webpack:///./components/rightPanel/scenePanel/sceneLight.tsx","webpack:///./components/rightPanel/scenePanel.tsx","webpack:///./components/rightPanel/board.tsx","webpack:///./components/rightPanel/domBasePanel.tsx","webpack:///./components/rightPanel/animationPanel.tsx","webpack:///./components/rightPanel/entityBasePanel.tsx","webpack:///./components/rightPanel/guiBasePanel.tsx","webpack:///./components/rightPanel/basePanel.tsx","webpack:///./utils/interaction.tsx","webpack:///./components/common/customTree.tsx","webpack:///./components/interaction/actionsTreeItem.tsx","webpack:///./components/interaction/conditionPanel.tsx","webpack:///./components/interaction/actionListItem.tsx","webpack:///./components/common/rnd.tsx","webpack:///./components/interaction/actionDetails/noneAction.tsx","webpack:///./components/interaction/actionDetails/detail.tsx","webpack:///./components/interaction/actionDetail.tsx","webpack:///./components/interaction/actionList.tsx","webpack:///./components/interaction/InteractionItem.tsx","webpack:///./components/interaction/InteractionItem2.tsx","webpack:///./components/interaction/addPanel.tsx","webpack:///./components/interaction/tabs.tsx","webpack:///./components/interaction/InteractionPage.tsx","webpack:///./components/interaction/index.tsx","webpack:///./components/property/config.tsx","webpack:///./components/common/buttonMenuList.tsx","webpack:///./components/DataBinding/apiData.tsx","webpack:///./components/DataBinding/deviceData/aliPanel.tsx","webpack:///./apis/dataSourceReq.ts","webpack:///./components/DataBinding/deviceData/dataSelect.tsx","webpack:///./components/DataBinding/deviceData/histronPanel.tsx","webpack:///./components/DataBinding/deviceData/index.tsx","webpack:///./components/DataBinding/utils.ts","webpack:///./components/DataBinding/strategy.ts","webpack:///./components/DataBinding/index.tsx","webpack:///./components/property/common.tsx","webpack:///./components/property/valueContent.tsx","webpack:///./components/property/readProperty.tsx","webpack:///./components/property/componentDetail.tsx","webpack:///./components/property/index.tsx","webpack:///./components/rightPanel/types.ts","webpack:///./components/rightPanel/cameraPanel.tsx","webpack:///./components/scriptPanel/index.tsx","webpack:///./components/scriptPanel/defaultCode.ts","webpack:///./components/rightPanel/tabs.tsx","webpack:///./components/rightPanel/globalVariables.tsx","webpack:///./components/rightPanel/globalVarButton.tsx","webpack:///./components/rightPanel/cloudServices/cloudServices.tsx","webpack:///./components/rightPanel/cloudServices/cloudServicesButton.tsx","webpack:///./components/rightPanel/undo.tsx","webpack:///./hooks/useLocalStrorage.ts","webpack:///./components/rightPanel/localStorageBtn.tsx","webpack:///./components/rightPanel/toolBar.tsx","webpack:///./components/rightPanel/index.tsx","webpack:///./views/editor/index.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Paper, { PaperProps } from \"@mui/material/Paper\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Draggable from \"react-draggable\";\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  \"& .MuiDialogContent-root\": {\r\n    padding: theme.spacing(2),\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n  id: string;\r\n  children?: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst BootstrapDialogTitle = (props: DialogTitleProps) => {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 2, cursor: \"move\" }} {...other}>\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n};\r\n\r\nconst PaperComponent = (props: PaperProps) => {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n};\r\n\r\ninterface SModalProps {\r\n  visible?: boolean;\r\n  title?: string;\r\n  size?: any;\r\n  width?: number;\r\n  children?: any;\r\n  header?: any;\r\n  footer?: any;\r\n  fullWidth?: boolean;\r\n  sx?: object;\r\n  height?: string | number;\r\n  hideFooter?: boolean;\r\n  handleClose?: Function;\r\n  handleOk?: Function;\r\n}\r\n\r\nconst SModal: React.FC<SModalProps> = ({\r\n  title,\r\n  visible,\r\n  size,\r\n  children,\r\n  header,\r\n  footer,\r\n  fullWidth,\r\n  sx,\r\n  height,\r\n  hideFooter,\r\n  handleOk,\r\n  handleClose,\r\n}) => {\r\n  const closeMethod = () => {\r\n    handleClose && handleClose();\r\n  };\r\n\r\n  const okMethod = () => {\r\n    handleOk && handleOk();\r\n  };\r\n  return (\r\n    <BootstrapDialog\r\n      // onClose={closeMethod}\r\n      open={visible}\r\n      maxWidth={size}\r\n      fullWidth={fullWidth}\r\n      PaperComponent={PaperComponent}\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n    >\r\n      {header ? (\r\n        header\r\n      ) : (\r\n        <BootstrapDialogTitle id=\"draggable-dialog-title\" onClose={closeMethod}>\r\n          {title}\r\n        </BootstrapDialogTitle>\r\n      )}\r\n      <DialogContent\r\n        sx={{\r\n          // minHeight: `${minHeight}px`,\r\n          height: `${height ? height + \"px\" : \"auto\"}`,\r\n        }}\r\n        dividers\r\n      >\r\n        {children}\r\n      </DialogContent>\r\n      {hideFooter ? null : (\r\n        <DialogActions>\r\n          {footer ? (\r\n            footer\r\n          ) : (\r\n            <>\r\n              <Button onClick={closeMethod}>取消</Button>\r\n              <Button onClick={okMethod}>确定</Button>\r\n            </>\r\n          )}\r\n        </DialogActions>\r\n      )}\r\n    </BootstrapDialog>\r\n  );\r\n};\r\n\r\nexport default SModal;\r\n","import React from \"react\";\r\n\r\nimport { TablePagination } from \"@mui/material\";\r\n\r\ninterface STableProp {\r\n  total?: number;\r\n  pagenation?: {\r\n    pageNum?: number;\r\n    pageSize?: number;\r\n    pageSizeOptions?: Array<number>;\r\n  };\r\n  onPageChange?: (pageNum: number) => void;\r\n  onRowsPerPageChange?: (pageSize: number) => void;\r\n}\r\n\r\nconst STable: React.FC<STableProp> = ({\r\n  total,\r\n  pagenation,\r\n  onPageChange,\r\n  onRowsPerPageChange,\r\n}) => {\r\n  const { pageNum, pageSize, pageSizeOptions } = pagenation;\r\n\r\n  const changePage = (event: unknown, newPage: number) => {\r\n    onPageChange && onPageChange(newPage + 1);\r\n  };\r\n\r\n  const changeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    onRowsPerPageChange &&\r\n      onRowsPerPageChange(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  return (\r\n    <TablePagination\r\n      rowsPerPageOptions={pageSizeOptions || []}\r\n      component=\"div\"\r\n      count={total}\r\n      rowsPerPage={pageSize}\r\n      page={pageNum > 0 ? pageNum - 1 : 0}\r\n      onPageChange={changePage}\r\n      onRowsPerPageChange={changeRowsPerPage}\r\n      labelRowsPerPage=\"每页条数：\"\r\n      labelDisplayedRows={({ from, to }) => {\r\n        return `${from}–${to} 共 ${Math.ceil(total / pageSize)}页, ${total}条`;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default STable;\r\n","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Checkbox,\r\n  TableSortLabel,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport { visuallyHidden } from \"@mui/utils\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport { getUUID } from \"~/utils/common\";\r\nimport SPagination from \"~/components/SPagination\";\r\ninterface STableProp {\r\n  // props: {\r\n  columns?: Array<any>;\r\n  dataSource?: Array<any>;\r\n  rowKey?: string;\r\n  ipagenation?: {\r\n    pageNum: number;\r\n    pageSize: number;\r\n    pageSizeOptions: Array<number>;\r\n  };\r\n  handleChangePage?: (pageNum: number) => void;\r\n  handleChangeRowsPerPage?: (pageSize: number) => void;\r\n  selectedRowKeys?: Array<number | string>;\r\n  selectionRows?: Array<object>;\r\n  selectedChange?: Function;\r\n  changeSort?: Function;\r\n  tableStyle?: object;\r\n  total?: number;\r\n  // };\r\n  // state: {\r\n  //   sortType?: object;\r\n  // };\r\n}\r\n\r\nconst NoData = styled(\"div\")(({ theme }) => ({\r\n  textAlign: \"center\",\r\n  fontSize: \"14px\",\r\n  padding: \"20px 0\",\r\n  \"& img\": {\r\n    width: 300,\r\n    height: 300,\r\n  },\r\n  \"& p\": {\r\n    margin: 0,\r\n  },\r\n}));\r\n\r\nconst SelfTableCell = styled(TableCell)(({ theme }) => ({\r\n  padding: \"15px\",\r\n}));\r\n\r\nconst STable: React.FC<STableProp> = ({\r\n  columns,\r\n  dataSource,\r\n  rowKey,\r\n  ipagenation,\r\n  handleChangePage,\r\n  handleChangeRowsPerPage,\r\n  selectedRowKeys,\r\n  selectionRows,\r\n  selectedChange,\r\n  changeSort,\r\n  tableStyle,\r\n  total,\r\n}) => {\r\n  const [sortType, setSortType] = useState({});\r\n\r\n  const createColumns = (list) => {\r\n    let startNum = ipagenation.pageNum * ipagenation.pageSize,\r\n      endNum =\r\n        ipagenation.pageNum * ipagenation.pageSize + ipagenation.pageSize;\r\n    let length = dataSource.slice(startNum, endNum).length;\r\n    return (\r\n      <TableRow>\r\n        {selectedRowKeys ? (\r\n          <SelfTableCell key={getUUID()} padding=\"checkbox\">\r\n            <Checkbox\r\n              color=\"primary\"\r\n              checked={\r\n                selectedRowKeys.length > 0 && selectedRowKeys.length === length\r\n              }\r\n              onChange={(event) => onSelectAllClick(event, null, null)}\r\n              indeterminate={\r\n                selectedRowKeys.length > 0 && selectedRowKeys.length < length\r\n              }\r\n              // inputProps={{\r\n              //   \"aria-label\": \"select all desserts\",\r\n              // }}\r\n            />\r\n          </SelfTableCell>\r\n        ) : null}\r\n        {list.map((item) =>\r\n          item.sort ? (\r\n            <SelfTableCell\r\n              key={item.key}\r\n              align={item.align ? item.align : \"left\"}\r\n              sortDirection={sortType ? \"desc\" : \"asc\"}\r\n              onClick={() => changeSortMethod(sortType, item.key)}\r\n            >\r\n              <TableSortLabel direction={sortType[item.key] ? \"desc\" : \"asc\"}>\r\n                {item.title}\r\n              </TableSortLabel>\r\n              <Box component=\"span\" sx={visuallyHidden}>\r\n                {/* {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"} */}\r\n                {\"sorted descending\"}\r\n              </Box>\r\n            </SelfTableCell>\r\n          ) : (\r\n            <SelfTableCell\r\n              key={item.key}\r\n              align={item.align ? item.align : \"left\"}\r\n            >\r\n              {item.title}\r\n            </SelfTableCell>\r\n          )\r\n        )}\r\n      </TableRow>\r\n    );\r\n  };\r\n\r\n  const changeSortMethod = (type, column) => {\r\n    let newType = !type[column];\r\n    let newSortType = JSON.parse(JSON.stringify(sortType));\r\n    newSortType[column] = newType;\r\n    // debugger;\r\n    setSortType(newSortType);\r\n    changeSort && changeSort(newType, column);\r\n  };\r\n\r\n  const onSelectAllClick = (event, key, item) => {\r\n    let checked = event.target.checked;\r\n    let newSelectedRowKeys = [],\r\n      newSelectionRows = [];\r\n    if (!key && !item) {\r\n      newSelectedRowKeys = checked ? getAllSelected().rowKeys : [];\r\n      newSelectionRows = checked ? getAllSelected().rows : [];\r\n    } else {\r\n      if (checked) {\r\n        newSelectedRowKeys = [...selectedRowKeys, key];\r\n        newSelectionRows = [...selectionRows, item];\r\n      } else {\r\n        newSelectedRowKeys = [...selectedRowKeys];\r\n        newSelectionRows = [...selectionRows];\r\n        let index = newSelectedRowKeys.indexOf(key);\r\n        newSelectedRowKeys.splice(index, 1);\r\n        newSelectionRows.splice(index, 1);\r\n      }\r\n    }\r\n    selectedChange && selectedChange(selectedRowKeys, selectionRows);\r\n  };\r\n\r\n  const getAllSelected = () => {\r\n    let startNum = ipagenation.pageNum * ipagenation.pageSize,\r\n      endNum =\r\n        ipagenation.pageNum * ipagenation.pageSize + ipagenation.pageSize;\r\n    let rows = dataSource.slice(startNum, endNum);\r\n    let rowKeys = dataSource.slice(startNum, endNum).map((item) => {\r\n      return item[rowKey];\r\n    });\r\n    return {\r\n      rows,\r\n      rowKeys,\r\n    };\r\n  };\r\n\r\n  const createDataSource = (data, index) => {\r\n    let itemArr = [];\r\n    // for (let key in data) {\r\n    let dataKeys = Object.keys(data);\r\n    for (let colItem of columns) {\r\n      if (colItem.render) {\r\n        let text = \"\";\r\n        let res = dataKeys.find((key) => key === colItem.key);\r\n        if (res) {\r\n          text = data[colItem.key];\r\n        }\r\n        itemArr.push(\r\n          <SelfTableCell\r\n            key={getUUID()}\r\n            align={colItem.align ? colItem.align : \"left\"}\r\n          >\r\n            {colItem.render(text, data, index)}\r\n          </SelfTableCell>\r\n        );\r\n      } else {\r\n        let res = dataKeys.find((key) => key === colItem.key);\r\n        if (res) {\r\n          itemArr.push(\r\n            <SelfTableCell\r\n              key={colItem.key}\r\n              align={colItem.align ? colItem.align : \"left\"}\r\n            >\r\n              {data[colItem.key]}\r\n            </SelfTableCell>\r\n          );\r\n        } else {\r\n          itemArr.push(\r\n            <SelfTableCell\r\n              key={getUUID()}\r\n              align={colItem.align ? colItem.align : \"left\"}\r\n            ></SelfTableCell>\r\n          );\r\n        }\r\n      }\r\n    }\r\n    return itemArr;\r\n  };\r\n\r\n  const changePage = (event: unknown, newPage: number) => {\r\n    handleChangePage && handleChangePage(newPage + 1);\r\n  };\r\n\r\n  const changeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    handleChangeRowsPerPage &&\r\n      handleChangeRowsPerPage(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  const getStatus = (id, arr) => {\r\n    let res = arr.find((item) => item === id);\r\n    if (res) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const renderTable = () => {\r\n    const tableRowKey = rowKey || \"id\";\r\n    return (\r\n      <Paper sx={{ width: \"100%\", mb: 2, height: \"100%\", overflow: \"auto\" }}>\r\n        <TableContainer\r\n          sx={{\r\n            width: \"100%\",\r\n            overflow: \"auto\",\r\n            height: \"100%\",\r\n            minHeight: 650,\r\n            ...(tableStyle || {}),\r\n          }}\r\n        >\r\n          <Table aria-label=\"simple table\" sx={{ overflowY: \"auto\" }}>\r\n            <TableHead>{columns ? createColumns(columns) : null}</TableHead>\r\n            <TableBody>\r\n              {dataSource &&\r\n                dataSource.map((row, index) => (\r\n                  <TableRow\r\n                    key={row[tableRowKey] || getUUID()}\r\n                    sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                  >\r\n                    {selectedRowKeys ? (\r\n                      <SelfTableCell key={getUUID()} padding=\"checkbox\">\r\n                        <Checkbox\r\n                          color=\"primary\"\r\n                          checked={getStatus(row.id, selectedRowKeys)}\r\n                          onChange={(e) => onSelectAllClick(e, row.id, row)}\r\n                        />\r\n                      </SelfTableCell>\r\n                    ) : null}\r\n                    {createDataSource(row, index)}\r\n                  </TableRow>\r\n                ))}\r\n            </TableBody>\r\n          </Table>\r\n          {ipagenation && total > 0 ? (\r\n            <SPagination\r\n              pagenation={ipagenation}\r\n              total={total}\r\n              onPageChange={handleChangePage}\r\n              onRowsPerPageChange={handleChangeRowsPerPage}\r\n            />\r\n          ) : null}\r\n          {!dataSource || dataSource.length === 0 ? (\r\n            <NoData>\r\n              <img src=\"/static/images/nodata.svg\" />\r\n              <p>暂无数据</p>\r\n            </NoData>\r\n          ) : null}\r\n        </TableContainer>\r\n      </Paper>\r\n    );\r\n  };\r\n\r\n  return renderTable();\r\n};\r\n\r\nexport default STable;\r\n","import { Container } from \"@mui/material\";\r\nimport { DefaultComponentProps } from \"@mui/material/OverridableComponent\";\r\nimport React from \"react\";\r\n\r\nexport const FullContainer: React.FC<DefaultComponentProps<any>> = ({\r\n  children,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Container maxWidth={false} disableGutters {...rest}>\r\n      {children}\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport {\r\n  Button,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  FormControl,\r\n  Input,\r\n  InputLabel,\r\n} from \"@mui/material\";\r\n\r\ninterface FileModalProps {\r\n  onClose: () => void;\r\n  onConfirm: (n: string) => any;\r\n  isUpdate: boolean;\r\n  selectName: string;\r\n}\r\n\r\nconst FileModal: React.FC<FileModalProps> = ({\r\n  onClose,\r\n  onConfirm,\r\n  isUpdate,\r\n  selectName = \"\",\r\n}) => {\r\n  const [fileName, setfileName] = useState(selectName);\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setfileName(e.target.value);\r\n  };\r\n\r\n  const handleConfirm = async () => {\r\n    const status = await onConfirm(fileName);\r\n    if (status) onClose();\r\n  };\r\n  const handleEnterKey = (e) => {\r\n    if (e.nativeEvent.keyCode === 13) {\r\n      //e.nativeEvent获取原生的事件对像\r\n      handleConfirm();\r\n    }\r\n  };\r\n  return (\r\n    <Dialog open onClose={onClose}>\r\n      <DialogTitle>{isUpdate ? \"更新场景\" : \"新建场景\"}</DialogTitle>\r\n      <DialogContent>\r\n        <FormControl variant=\"standard\">\r\n          <InputLabel htmlFor=\"component-simple\">场景名称</InputLabel>\r\n          <Input\r\n            id=\"component-simple\"\r\n            value={fileName}\r\n            onChange={handleChange}\r\n            onKeyPress={handleEnterKey}\r\n          />\r\n        </FormControl>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button color=\"primary\" onClick={handleConfirm}>\r\n          确定\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\nexport default FileModal;\r\n","import { Box } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useEditorRootContext } from \"~/contexts/editorRootContext\";\r\nimport { LeftStoreContext } from \"~/contexts/leftStoreContext\";\r\nimport { useStores } from \"~/contexts/store-context\";\r\nimport { commonStore } from \"~/stores/commonStore\";\r\n\r\nimport { TabPanel } from \"../common/tabPanel\";\r\nimport tabs from \"./tabs\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport Resizable from \"react-resizable-box\";\r\nimport { app } from \"../editor\";\r\nimport { setPrefix } from \"~/intance\";\r\nimport { ELeftTab } from \"./types\";\r\nimport ApplyShopPanel from \"../resourceManager/applyShop\";\r\nimport { MarketApi } from \"~/apis\";\r\nimport { getReq, ResponseStatus } from \"~/utils/axios\";\r\nimport { MarkList } from \"~/apis/types\";\r\nimport {\r\n  deleteQueryKey,\r\n  updateLocationUrl,\r\n  updateQueryStringParameter,\r\n} from \"~/utils/url\";\r\nimport FileModal from \"../sceneTab/fileModal\";\r\nimport { message } from \"~/utils/message\";\r\n\r\nconst Resizable2 = Resizable as any;\r\n\r\nconst LeftPanel: React.FC = () => {\r\n  const { fileStore, rootStore } = useStores();\r\n  const { leftTabIndex, changeLeftTab } = useEditorRootContext();\r\n  const [apply, setApply] = useState({ open: false, info: null });\r\n\r\n  const handleEndApply = () => {\r\n    setApply({ open: false, info: null });\r\n    history.go(-2);\r\n  };\r\n\r\n  const handeSuccess = async (projectId) => {\r\n    setApply({ open: false, info: null });\r\n    updateLocationUrl(\"projectId\", projectId);\r\n    await rootStore.loadProject(Number(projectId));\r\n    await Promise.all([commonStore.load()]);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    fileStore.closeModal();\r\n  };\r\n  const handleConfirm = (name: string) => {\r\n    if (!name) {\r\n      message.error(\"名称不能为空!\");\r\n      return false;\r\n    }\r\n\r\n    if (fileStore.selectFile.id) {\r\n      return fileStore.updateFileName(name, fileStore.selectFile.id);\r\n    } else {\r\n      return fileStore.addFile(name).then((id) => {\r\n        if (!id) return false;\r\n        message.success(\"新建场景成功\");\r\n        const newUrl = updateQueryStringParameter(\r\n          location.href,\r\n          \"id\",\r\n          id.toString()\r\n        );\r\n        history.replaceState(\r\n          {\r\n            path: newUrl,\r\n          },\r\n          \"\",\r\n          newUrl\r\n        );\r\n        return true;\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    changeLeftTab(ELeftTab.Scene);\r\n    const url = new URL(location.href);\r\n    const projectId = url.searchParams.get(\"projectId\");\r\n    const id = url.searchParams.get(\"id\");\r\n\r\n    const code = url.searchParams.get(\"code\");\r\n\r\n    if (code) {\r\n      getReq<MarkList>(MarketApi.detailEx, {\r\n        params: { product_code: code },\r\n      }).then((detailRes) => {\r\n        if (detailRes.code === ResponseStatus.Ok) {\r\n          const detail = detailRes.data;\r\n          setApply({ open: true, info: detail });\r\n        }\r\n      });\r\n      deleteQueryKey(location.href, \"code\", true);\r\n    }\r\n\r\n    (async () => {\r\n      await setPrefix();\r\n      if (projectId) {\r\n        await rootStore.loadProject(projectId ? Number(projectId) : undefined);\r\n        await Promise.all([commonStore.load()]);\r\n        if (id) fileStore.load(Number(id));\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <LeftStoreContext.Provider\r\n      value={{\r\n        commonStore: commonStore,\r\n      }}\r\n    >\r\n      <Resizable2\r\n        width={220}\r\n        minWidth={220}\r\n        maxWidth={440}\r\n        enable={{\r\n          top: false,\r\n          right: true,\r\n          bottom: false,\r\n          left: false,\r\n          topRight: false,\r\n          bottomRight: false,\r\n          bottomLeft: false,\r\n          topLeft: false,\r\n        }}\r\n        onResizeStop={(e, direction, ref, d) => {\r\n          app.Viewer.setSize();\r\n        }}\r\n      >\r\n        <Box\r\n          id=\"leftPanel\"\r\n          sx={{\r\n            flexWrap: \"wrap\",\r\n            minWidth: 220,\r\n            display: \"flex\",\r\n            maxWidth: 440,\r\n            flex: 1,\r\n            height: \"100%\",\r\n            borderLeft: \"1px solid #F2F2F2\",\r\n          }}\r\n        >\r\n          {tabs.map(\r\n            (t) =>\r\n              !t.isHide && (\r\n                <TabPanel\r\n                  value={leftTabIndex}\r\n                  currentValue={t.id}\r\n                  key={t.id}\r\n                  style={{\r\n                    flex: 1,\r\n                    minWidth: 0,\r\n                    height: \"100%\",\r\n                    overflow: \"auto\",\r\n                  }}\r\n                >\r\n                  {t.component}\r\n                </TabPanel>\r\n              )\r\n          )}\r\n        </Box>\r\n      </Resizable2>\r\n      <ApplyShopPanel\r\n        open={apply.open}\r\n        shop={apply.info}\r\n        onClose={handleEndApply}\r\n        commonStore={commonStore}\r\n        fileStore={fileStore}\r\n        needProject\r\n        onSuccess={handeSuccess}\r\n      />\r\n      {fileStore.isOpenModal && (\r\n        <FileModal\r\n          onClose={handleClose}\r\n          isUpdate={!!fileStore.selectFile.id}\r\n          selectName={fileStore.selectFile.name}\r\n          onConfirm={handleConfirm}\r\n        />\r\n      )}\r\n    </LeftStoreContext.Provider>\r\n  );\r\n};\r\nexport default observer(LeftPanel);\r\n","import {\r\n  BaseDom,\r\n  BaseGui,\r\n  BaseObject,\r\n  CMD,\r\n  end,\r\n  Entity,\r\n  History,\r\n  Interaction,\r\n  Light,\r\n  ParticleSystem,\r\n  Particle,\r\n  Utils,\r\n  ParticleSystemGroup,\r\n  GroupRecord,\r\n} from \"@hc/engine\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\nimport { TreeItem } from \"@mui/lab\";\r\nimport { treeItemClasses } from \"@mui/lab/TreeItem\";\r\nimport {\r\n  Box,\r\n  Collapse,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\nimport { when } from \"mobx\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { App } from \"~/intance\";\r\nimport SelectAllIcon from \"@mui/icons-material/SelectAll\";\r\nimport DeselectIcon from \"@mui/icons-material/Deselect\";\r\nimport Resizable from \"react-resizable-box\";\r\nimport { HStack } from \"../common/stack\";\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport StopIcon from \"@mui/icons-material/Stop\";\r\nimport { useEditorContext } from \"~/contexts/editor-context\";\r\nimport { SELECT_ENTITY, SELECT_GUI } from \"~/reducers/editorReducers\";\r\nimport AcUnitIcon from \"@mui/icons-material/AcUnit\";\r\nimport AirportShuttleIcon from \"@mui/icons-material/AirportShuttle\";\r\nimport LightIcon from \"@mui/icons-material/Light\";\r\nimport AssessmentIcon from \"@mui/icons-material/Assessment\";\r\nimport AssignmentIcon from \"@mui/icons-material/Assignment\";\r\nimport GroupWorkIcon from \"@mui/icons-material/GroupWork\";\r\n\r\nconst Resizable2 = Resizable as any;\r\ninterface SceneCollectionProps {}\r\n\r\nconst NEED_UPDATE_CMD_NAMES = [\"创建\", \"DELETE\", \"切换可见性\", \"删除\"];\r\n\r\nconst CustomTreeItem = styled(TreeItem)(({ theme }) => ({\r\n  [`& .${treeItemClasses.content}`]: {\r\n    \"&.Mui-focused, &.Mui-selected, &.Mui-selected.Mui-focused\": {\r\n      backgroundColor: `#a3d1d5`,\r\n    },\r\n  },\r\n  [`& .${treeItemClasses.group}`]: {\r\n    maxHeight: 200,\r\n    overflowY: \"auto\",\r\n  },\r\n}));\r\n\r\nconst TreeLabel = ({ object }) => {\r\n  const [visiable, setVisiable] = useState(false);\r\n  const handleDelete = () => {\r\n    CMD.CommandWrap(() => {\r\n      object.object.erase();\r\n    }, \"删除\" + object.object.Name);\r\n  };\r\n\r\n  const toggleVisiable = () => {\r\n    setVisiable(!visiable);\r\n    if (object.object) {\r\n      CMD.CommandWrap(() => {\r\n        object.object.Visiable = !object.object.Visiable;\r\n      }, \"切换可见性\");\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    setVisiable(object.object?.Visiable);\r\n  }, [object]);\r\n\r\n  return (\r\n    <HStack alignItems=\"center\">\r\n      <Typography sx={{ flex: 1 }}>{object.label}</Typography>\r\n      <HStack sx={{ width: \"30%\" }}>\r\n        {object.canVisiable && (\r\n          <IconButton size=\"small\" onClick={toggleVisiable}>\r\n            {visiable ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n          </IconButton>\r\n        )}\r\n        <IconButton size=\"small\" onClick={handleDelete} color=\"error\">\r\n          <DeleteIcon />\r\n        </IconButton>\r\n      </HStack>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nlet isClickTree = false;\r\nlet isInit = true;\r\n\r\nlet selectId: number;\r\nlet sceneList: any[] = [];\r\n\r\nconst SceneCollection: React.FC<SceneCollectionProps> = (props) => {\r\n  const [open, setOpen] = useState(true);\r\n  const [tree, setTree] = useState([]);\r\n  const [selectIds, setSelectIds] = useState<number[]>([]);\r\n  const ulRef = useRef<HTMLElement>(null);\r\n  const [hiddenIds, setHiddenIds] = useState<Set<number>>(new Set());\r\n  const [unSelectIds, setUnselectIds] = useState<Set<number>>(new Set());\r\n  const [stopParticles, setStopParticles] = useState<Set<number>>(new Set());\r\n  const { dispatch } = useEditorContext();\r\n\r\n  const handleClick = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  const select = (data: { object: BaseObject; id: number }) => {\r\n    isClickTree = true;\r\n\r\n    setSelectIds([data.id]);\r\n\r\n    const obj = data.object;\r\n\r\n    if (obj) {\r\n      if (obj instanceof Entity) {\r\n        if (obj.IsPickable)\r\n          App.intance.Editor.selectControl.SelectEntitys = [obj];\r\n        else {\r\n          isClickTree = false;\r\n          dispatch({\r\n            type: SELECT_ENTITY,\r\n            entity: obj,\r\n          });\r\n        }\r\n      } else if (obj instanceof BaseDom) {\r\n        App.intance.Editor.selectControl.SelectDOM = obj;\r\n      } else if (obj instanceof BaseGui) {\r\n        if (obj.IsPickable) App.intance.Editor.selectControl.SelectGui = obj;\r\n        else {\r\n          dispatch({\r\n            type: SELECT_GUI,\r\n            gui: obj,\r\n          });\r\n        }\r\n      } else if (obj instanceof Particle) {\r\n        App.intance.Editor.selectControl.SelectParticle = obj;\r\n      }\r\n    }\r\n  };\r\n\r\n  const dbClick = (obj) => {\r\n    if (obj) {\r\n      if (obj instanceof Entity) {\r\n        App.intance.Viewer.cameraManager.zoomToEntity(obj);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleToggleVisiable = (object: BaseObject, evt: React.MouseEvent) => {\r\n    evt.stopPropagation();\r\n    if (object) {\r\n      if (hiddenIds.has(object.Id)) {\r\n        hiddenIds.delete(object.Id);\r\n      } else {\r\n        hiddenIds.add(object.Id);\r\n      }\r\n      setHiddenIds(new Set(hiddenIds));\r\n      CMD.CommandWrap(() => {\r\n        object[\"Visiable\"] = !object[\"Visiable\"];\r\n      }, \"切换可见性\");\r\n    }\r\n  };\r\n\r\n  const handleToggleSelect = (object: BaseObject, evt: React.MouseEvent) => {\r\n    evt.stopPropagation();\r\n    if (unSelectIds.has(object.Id)) {\r\n      unSelectIds.delete(object.Id);\r\n    } else {\r\n      unSelectIds.add(object.Id);\r\n    }\r\n\r\n    setUnselectIds(new Set(unSelectIds));\r\n\r\n    CMD.CommandWrap(() => {\r\n      object[\"IsPickable\"] = !object[\"IsPickable\"];\r\n    }, \"切换可选\");\r\n  };\r\n  const handleToggleStop = (object: ParticleSystem) => {\r\n    if (stopParticles.has(object.Id)) {\r\n      stopParticles.delete(object.Id);\r\n      object.start();\r\n    } else {\r\n      stopParticles.add(object.Id);\r\n      object.stop();\r\n    }\r\n\r\n    setStopParticles(stopParticles);\r\n  };\r\n\r\n  const handleDeleteObject = (object: BaseObject) => {\r\n    CMD.CommandWrap(() => {\r\n      object.erase();\r\n    }, \"删除\" + object.Name);\r\n  };\r\n\r\n  const init = (objects = App.intance.Database.AllObjects) => {\r\n    const options = [];\r\n    const hiddenIds = new Set<number>();\r\n    const unSelectIds = new Set<number>();\r\n    const stopIds = new Set<number>();\r\n    for (const object of objects) {\r\n      if (object.IsErase) continue;\r\n      if (object instanceof Interaction.Interaction) continue;\r\n      if (object instanceof Light) continue;\r\n      if (object instanceof Entity && object.GroupId) continue;\r\n\r\n      let canVisiable = true;\r\n      let canPick = true;\r\n      let canStop = false;\r\n      let icon;\r\n      let children;\r\n\r\n      if (\r\n        object instanceof ParticleSystem ||\r\n        object instanceof ParticleSystemGroup\r\n      ) {\r\n        canVisiable = false;\r\n        canPick = false;\r\n        canStop = true;\r\n        icon = AcUnitIcon;\r\n        stopIds.add(object.Id);\r\n      }\r\n\r\n      if (object instanceof Entity) {\r\n        icon = AirportShuttleIcon;\r\n        if (object.isLight) {\r\n          icon = LightIcon;\r\n        }\r\n      }\r\n\r\n      if (object instanceof BaseGui) {\r\n        icon = AssessmentIcon;\r\n      }\r\n      if (object instanceof BaseDom) {\r\n        icon = AssignmentIcon;\r\n      }\r\n\r\n      if (object instanceof GroupRecord) {\r\n        icon = GroupWorkIcon;\r\n        children = init(object.entitys.map((i) => i.Object));\r\n      }\r\n\r\n      if (\"Visiable\" in object) {\r\n        if (!object[\"Visiable\"]) {\r\n          hiddenIds.add(object.Id);\r\n        }\r\n      } else {\r\n        canVisiable = false;\r\n      }\r\n\r\n      if (\"IsPickable\" in object) {\r\n        if (!object[\"IsPickable\"]) {\r\n          unSelectIds.add(object.Id);\r\n        }\r\n      } else {\r\n        canPick = false;\r\n      }\r\n\r\n      options.push({\r\n        label: object.Name,\r\n        id: object.Id,\r\n        object,\r\n        canVisiable,\r\n        canPick,\r\n        canStop,\r\n        icon,\r\n        children,\r\n      });\r\n    }\r\n    setHiddenIds(hiddenIds);\r\n    setUnselectIds(unSelectIds);\r\n    setTree(options);\r\n    setStopParticles(stopIds);\r\n    sceneList = options;\r\n  };\r\n\r\n  const handleDelete = (evt: React.KeyboardEvent) => {\r\n    evt.stopPropagation();\r\n    if (evt.code === Utils.KeyCode.Delete)\r\n      CMD.commandManager.ExecCommand(\"DELETE\");\r\n  };\r\n\r\n  const updateScroll = () => {\r\n    if (ulRef.current && selectId) {\r\n      const index = sceneList.findIndex((t) => t.id === selectId);\r\n\r\n      if (index >= 0) {\r\n        const scrollTop = 48 * index;\r\n        ulRef.current.scrollTop = scrollTop;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRedoUndo = (e: History.CommandHistoryRecord) => {\r\n    App.intance.Editor.selectControl.clearSelect(true);\r\n    if (NEED_UPDATE_CMD_NAMES.some((cmd) => e.commandName.includes(cmd))) {\r\n      init();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let injects: (() => void)[] = [];\r\n\r\n    when(\r\n      () => !!App.intance,\r\n      () => {\r\n        init();\r\n        //TODO:优化列表逻辑\r\n        injects.push(\r\n          end(\r\n            App.intance.Database.ModelSpace,\r\n            App.intance.Database.ModelSpace.appendEvent,\r\n            (e) => {\r\n              if (isInit) init();\r\n            }\r\n          ),\r\n          end(\r\n            App.intance.Database.LightSpace,\r\n            App.intance.Database.LightSpace.appendEvent,\r\n            (e) => {\r\n              if (isInit) init();\r\n            }\r\n          ),\r\n          end(\r\n            App.intance.Database.GuiSpace,\r\n            App.intance.Database.GuiSpace.appendEvent,\r\n            (e) => {\r\n              if (isInit) init();\r\n            }\r\n          ),\r\n          end(\r\n            App.intance.Database.DomSpace,\r\n            App.intance.Database.DomSpace.appendEvent,\r\n            (e) => {\r\n              if (isInit) init();\r\n            }\r\n          ),\r\n          end(\r\n            App.intance.Database.ParticleSystemSpace,\r\n            App.intance.Database.ParticleSystemSpace.appendEvent,\r\n            (e) => {\r\n              if (isInit) init();\r\n            }\r\n          ),\r\n          end(\r\n            App.intance.Database.GroupTable,\r\n            App.intance.Database.GroupTable.appendEvent,\r\n            (e) => {\r\n              if (isInit) init();\r\n            }\r\n          ),\r\n          App.intance.on(\"updateName\", () => {\r\n            if (isInit) init();\r\n          }),\r\n          App.intance.on(\"updateVisiable\", () => {\r\n            if (isInit) init();\r\n          }),\r\n          App.intance.on(\"remove\", () => {\r\n            console.log(\"remove\");\r\n            if (isInit) init();\r\n          }),\r\n          App.intance.on(\"startLoad\", () => {\r\n            isInit = false;\r\n          }),\r\n          App.intance.on(\"loadFile\", () => {\r\n            init();\r\n            isInit = true;\r\n          }),\r\n          App.intance.Editor.selectControl.on((event) => {\r\n            if (event.type === \"select\") {\r\n              if (isClickTree) {\r\n                isClickTree = false;\r\n                return;\r\n              }\r\n              const en = event.entitys?.[0];\r\n              selectId = undefined;\r\n              if (event.entitys) {\r\n                const ids = event.entitys.map((e) => e.Id);\r\n                setSelectIds(ids);\r\n                selectId = ids[0];\r\n              } else {\r\n                setSelectIds([]);\r\n              }\r\n              updateScroll();\r\n            }\r\n          }),\r\n          end(\r\n            App.intance.Database.HistoryManager,\r\n            App.intance.Database.HistoryManager.redoEvent,\r\n            (e) => {\r\n              handleRedoUndo(e);\r\n            }\r\n          ),\r\n          end(\r\n            App.intance.Database.HistoryManager,\r\n            App.intance.Database.HistoryManager.undoEvent,\r\n            (e) => {\r\n              handleRedoUndo(e);\r\n            }\r\n          )\r\n        );\r\n      }\r\n    );\r\n    return () => {\r\n      injects.forEach((f) => f());\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        maxHeight: \"100%\",\r\n        minHeight: 55,\r\n        borderBottom: 2,\r\n        borderColor: \"divider\",\r\n      }}\r\n    >\r\n      <Resizable2\r\n        height={225}\r\n        minHeight={150}\r\n        maxHeight={840}\r\n        enable={{\r\n          top: true,\r\n          right: false,\r\n          bottom: false,\r\n          left: false,\r\n          topRight: false,\r\n          bottomRight: false,\r\n          bottomLeft: false,\r\n          topLeft: false,\r\n        }}\r\n      >\r\n        <ListItemButton onClick={handleClick} sx={{ bgcolor: \"#ccc\" }}>\r\n          <ListItemText primary=\"场景集合\" />\r\n          {/* {open ? <ExpandLess /> : <ExpandMore />} */}\r\n        </ListItemButton>\r\n        {/* <Collapse in={true} timeout=\"auto\" unmountOnExit> */}\r\n        <Box\r\n          sx={{\r\n            height: \"calc(100% - 50px)\",\r\n            overflowY: \"auto\",\r\n          }}\r\n          ref={ulRef}\r\n        >\r\n          <List>\r\n            {tree.map((t) => (\r\n              <ListItem\r\n                key={t.id}\r\n                onClick={() => select(t)}\r\n                onDoubleClick={() => dbClick(t.object)}\r\n                sx={{\r\n                  cursor: \"pointer\",\r\n                  \"&:hover\": { backgroundColor: \"#ccc\" },\r\n                  backgroundColor: selectIds.includes(t.id)\r\n                    ? \"#a3d1d5\"\r\n                    : undefined,\r\n                }}\r\n                secondaryAction={\r\n                  <>\r\n                    {t.canVisiable && (\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        aria-label=\"delete\"\r\n                        onClick={(evt) => handleToggleVisiable(t.object, evt)}\r\n                        title=\"显示/隐藏\"\r\n                      >\r\n                        {hiddenIds.has(t.id) ? (\r\n                          <VisibilityOffIcon />\r\n                        ) : (\r\n                          <VisibilityIcon />\r\n                        )}\r\n                      </IconButton>\r\n                    )}\r\n                    {t.canPick && (\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        aria-label=\"delete\"\r\n                        onClick={(evt) => handleToggleSelect(t.object, evt)}\r\n                        title=\"切换可选中\"\r\n                      >\r\n                        {unSelectIds.has(t.id) ? (\r\n                          <DeselectIcon />\r\n                        ) : (\r\n                          <SelectAllIcon />\r\n                        )}\r\n                      </IconButton>\r\n                    )}\r\n                    {t.canStop && (\r\n                      <IconButton\r\n                        edge=\"end\"\r\n                        aria-label=\"stop\"\r\n                        onClick={() => handleToggleStop(t.object)}\r\n                        title=\"启停特效\"\r\n                      >\r\n                        {stopParticles.has(t.id) ? (\r\n                          <PlayArrowIcon />\r\n                        ) : (\r\n                          <StopIcon />\r\n                        )}\r\n                      </IconButton>\r\n                    )}\r\n\r\n                    {/* <IconButton\r\n                    edge=\"end\"\r\n                    aria-label=\"delete\"\r\n                    onClick={() => handleDeleteObject(t.object)}\r\n                  >\r\n                    <DeleteIcon />\r\n                  </IconButton> */}\r\n                  </>\r\n                }\r\n              >\r\n                {t.icon && (\r\n                  <ListItemIcon sx={{ minWidth: 30 }}>\r\n                    <t.icon />\r\n                  </ListItemIcon>\r\n                )}\r\n\r\n                <ListItemText primary={t.label} />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        </Box>\r\n      </Resizable2>\r\n    </Box>\r\n  );\r\n};\r\nexport default SceneCollection;\r\n","import {\r\n  Box,\r\n  List,\r\n  ListItemText,\r\n  Slider,\r\n  Stack,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { when } from \"mobx\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useStores } from \"~/contexts/store-context\";\r\nimport { App } from \"~/intance\";\r\n\r\nimport type { ColorResult } from \"react-color\";\r\nimport ColorPickInput from \"~/components/common/colorPickInput\";\r\nimport Title from \"~/components/common/title\";\r\n\r\ninterface DefaultSceneConfigProps {}\r\n\r\nconst DefaultSceneConfig: React.FC<DefaultSceneConfigProps> = () => {\r\n  const [bgColor, setBgColor] = useState(\"\");\r\n  const handleChangeColor = (c: ColorResult) => {\r\n    setBgColor(c.hex);\r\n    App.intance.Viewer.sceneControl.Background = c.hex;\r\n  };\r\n\r\n  useEffect(() => {\r\n    when(\r\n      () => !!App.intance,\r\n      () => {\r\n        const app = App.intance;\r\n        app.on(\"loadFile\", () => {\r\n          setBgColor(app.Viewer.sceneControl.Background);\r\n        });\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n      <Title title=\"背景\" />\r\n      <ColorPickInput color={bgColor} onChange={handleChangeColor} />\r\n    </Stack>\r\n  );\r\n};\r\nexport default DefaultSceneConfig;\r\n","import { Box, Button, Checkbox, Slider, Stack } from \"@mui/material\";\r\nimport { when } from \"mobx\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Title from \"~/components/common/title\";\r\nimport Vector3Panel from \"~/components/common/vector3Panel\";\r\nimport { App } from \"~/intance\";\r\nimport { convert2UiData, uiVector2Vector } from \"~/utils/adapter\";\r\n\r\ninterface SunSceneConfigProps {}\r\n\r\nconst SunSceneConfig: React.FC<SunSceneConfigProps> = () => {\r\n  const [sunConfig, setSunConfig] = useState({\r\n    Turbidity: 0,\r\n    Rayleigh: 0,\r\n    Luminance: 0,\r\n    Inclination: 0,\r\n    Azimuth: 0,\r\n  });\r\n\r\n  const [sun, setSun] = useState({ x: \"0\", y: \"0\", z: \"0\" });\r\n\r\n  const handleChange = (evt) => {\r\n    setSunConfig({ ...sunConfig, [evt.target.name]: evt.target.value });\r\n    App.intance.Viewer.sceneControl[evt.target.name] = evt.target.value;\r\n  };\r\n\r\n  const handleChangeSun = (k: string, v: string) => {\r\n    setSun({ ...sun, [k]: v });\r\n    App.intance.Viewer.sceneControl.SunPosition = uiVector2Vector({\r\n      ...sun,\r\n      [k]: v,\r\n    });\r\n  };\r\n\r\n  const update = () => {\r\n    const app = App.intance;\r\n    setSunConfig({\r\n      Turbidity: app.Viewer.sceneControl.Turbidity,\r\n      Rayleigh: app.Viewer.sceneControl.Rayleigh,\r\n      Luminance: app.Viewer.sceneControl.Luminance,\r\n      Inclination: app.Viewer.sceneControl.Inclination,\r\n      Azimuth: app.Viewer.sceneControl.Azimuth,\r\n    });\r\n    setSun(convert2UiData(app.Viewer.sceneControl.SunPosition));\r\n  };\r\n\r\n  useEffect(() => {\r\n    when(\r\n      () => !!App.intance,\r\n      () => {\r\n        const app = App.intance;\r\n        update();\r\n        app.on(\"loadFile\", () => {\r\n          update();\r\n        });\r\n      }\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <Stack direction=\"row\" sx={{ m: 0, p: 0 }}>\r\n        <Title title=\"浊度\" mt={1.1} />\r\n        <Slider\r\n          size=\"small\"\r\n          value={sunConfig.Turbidity}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          min={0}\r\n          max={200}\r\n          step={1}\r\n          name=\"Turbidity\"\r\n          onChange={handleChange}\r\n        />\r\n      </Stack>\r\n      <Stack direction=\"row\" sx={{ m: 0, p: 0 }}>\r\n        <Title title=\"强度\" mt={1.1} />\r\n        <Slider\r\n          size=\"small\"\r\n          value={sunConfig.Rayleigh}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          min={0}\r\n          max={10}\r\n          step={0.1}\r\n          name=\"Rayleigh\"\r\n          onChange={handleChange}\r\n        />\r\n      </Stack>\r\n      <Stack direction=\"row\" sx={{ m: 0, p: 0 }}>\r\n        <Title title=\"亮度\" mt={1.1} />\r\n        <Slider\r\n          size=\"small\"\r\n          value={sunConfig.Luminance}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          min={0}\r\n          max={1}\r\n          step={0.1}\r\n          name=\"Luminance\"\r\n          onChange={handleChange}\r\n        />\r\n      </Stack>\r\n      {/* <Stack direction=\"row\">\r\n        <Title title=\"太阳位置\" mt={0.7} />\r\n        <Vector3Panel\r\n          sx={{ width: 50 }}\r\n          vector={sun}\r\n          onChange={handleChangeSun}\r\n        />\r\n      </Stack> */}\r\n      <Stack direction=\"row\" sx={{ m: 0, p: 0 }}>\r\n        <Title title=\"倾角\" mt={1.1} />\r\n        <Slider\r\n          size=\"small\"\r\n          value={sunConfig.Inclination}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          min={-0.5}\r\n          max={0.5}\r\n          step={0.01}\r\n          name=\"Inclination\"\r\n          onChange={handleChange}\r\n        />\r\n      </Stack>\r\n      <Stack direction=\"row\" sx={{ m: 0, p: 0 }}>\r\n        <Title title=\"方位角\" mt={1.1} />\r\n        <Slider\r\n          size=\"small\"\r\n          value={sunConfig.Azimuth}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          min={0}\r\n          max={1}\r\n          step={0.1}\r\n          name=\"Azimuth\"\r\n          onChange={handleChange}\r\n        />\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\nexport default SunSceneConfig;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { TextField, ListItemText, MenuItem, Stack, Box } from \"@mui/material\";\r\nimport { useStores } from \"~/contexts/store-context\";\r\nimport { when, runInAction, reaction } from \"mobx\";\r\nimport { App } from \"~/intance\";\r\nimport Title from \"~/components/common/title\";\r\nimport { SkyboxMode } from \"@hc/engine\";\r\nimport DefaultSceneConfig from \"./defaultConfig\";\r\nimport SunSceneConfig from \"./SunConfig\";\r\nimport { Observer } from \"mobx-react-lite\";\r\nimport SkyboxConfig from \"./SkyboxConfig\";\r\n\r\ninterface BgTypeProps {}\r\n\r\nconst bgTypes = [\r\n  { label: \"默认\", value: SkyboxMode.None },\r\n  { label: \"天空盒\", value: SkyboxMode.Image },\r\n  { label: \"日光模型\", value: SkyboxMode.Sun },\r\n  // { label: \"全景图\", value: SkyboxMode.Env },\r\n];\r\nconst BgType: React.FC<BgTypeProps> = () => {\r\n  const [type, setType] = useState(SkyboxMode.None);\r\n  const { fileStore, rootStore } = useStores();\r\n  const handleChangeBgType = (e) => {\r\n    rootStore.BgType = e.target.value;\r\n    App.intance.Viewer.sceneControl.Mode = e.target.value;\r\n  };\r\n  const SceneConfig = useMemo(() => {\r\n    let bgType = rootStore.BgType;\r\n    if (bgType === SkyboxMode.None) {\r\n      return <DefaultSceneConfig />;\r\n    } else if (bgType === SkyboxMode.Image) {\r\n      return;\r\n    } else if (bgType === SkyboxMode.Sun) {\r\n      return <SunSceneConfig />;\r\n    }\r\n    return <></>;\r\n  }, [type]);\r\n\r\n  useEffect(() => {\r\n    reaction(\r\n      () => rootStore.BgType,\r\n      () => {\r\n        setType(rootStore.BgType);\r\n      }\r\n    );\r\n  }, []);\r\n  useEffect(() => {\r\n    when(\r\n      () => !!App.intance,\r\n      () => {\r\n        const app = App.intance;\r\n        rootStore.BgType = app.Viewer.sceneControl.Mode;\r\n      }\r\n    );\r\n  }, [fileStore.currentFileName]);\r\n  return (\r\n    <Observer>\r\n      {() => (\r\n        <>\r\n          <Box>\r\n            <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n              <Title title=\"背景类型\" />\r\n              <Box sx={{ position: \"relative\", width: 165 }}>\r\n                <TextField\r\n                  id=\"outlined-select-currency\"\r\n                  select\r\n                  value={rootStore.BgType}\r\n                  onChange={handleChangeBgType}\r\n                  size=\"small\"\r\n                  placeholder=\"选择天空盒类型\"\r\n                  // eslint-disable-next-line prettier/prettier\r\n                  sx={{ width: 165 }}\r\n                  InputProps={{\r\n                    sx: {\r\n                      height: 24,\r\n                      borderRadius: 1,\r\n                      background: \"#F4F4F4\",\r\n                      border: 0,\r\n                      fontSize: 14,\r\n                    },\r\n                  }}\r\n                  inputProps={{\r\n                    sx: {\r\n                      pt: 1,\r\n                      height: 24,\r\n                      fontSize: 14,\r\n                    },\r\n                  }}\r\n                >\r\n                  {bgTypes.map((option) => (\r\n                    <MenuItem\r\n                      key={option.value}\r\n                      value={option.value}\r\n                      sx={{ fontSize: 14 }}\r\n                    >\r\n                      {option.label}\r\n                    </MenuItem>\r\n                  ))}\r\n                </TextField>\r\n              </Box>\r\n            </Stack>\r\n          </Box>\r\n          {SceneConfig}\r\n        </>\r\n      )}\r\n    </Observer>\r\n  );\r\n};\r\nexport default BgType;\r\n","import React, { useState } from \"react\";\r\nimport { ListItemText, Stack, Switch, Typography, Slider } from \"@mui/material\";\r\nimport { App } from \"~/intance\";\r\nimport Title from \"~/components/common/title\";\r\ninterface SceneLightProps {}\r\n\r\nconst SceneLight: React.FC<SceneLightProps> = () => {\r\n  const [intensity, setIntensity] = useState(0.5);\r\n\r\n  const handleChangeIntensity = (e, newValue: number) => {\r\n    setIntensity(newValue);\r\n    App.intance.Viewer.sceneControl.EmissiveIntensity = newValue;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Stack direction=\"row\" sx={{ mt: 1 }}>\r\n        <Title title=\"发光强度\" mt={0.5} />\r\n        <Slider\r\n          size=\"small\"\r\n          value={intensity}\r\n          aria-label=\"Small\"\r\n          valueLabelDisplay=\"auto\"\r\n          min={0}\r\n          max={1}\r\n          step={0.1}\r\n          sx={{ width: 150 }}\r\n          onChange={handleChangeIntensity}\r\n        />\r\n      </Stack>\r\n    </>\r\n  );\r\n};\r\nexport default SceneLight;\r\n","import {\r\n  Box,\r\n  Checkbox,\r\n  FormControlLabel,\r\n  List,\r\n  Slider,\r\n  Stack,\r\n  Switch,\r\n} from \"@mui/material\";\r\nimport { when } from \"mobx\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useStores } from \"~/contexts/store-context\";\r\nimport { App } from \"~/intance\";\r\nimport { message } from \"~/utils/message\";\r\nimport { debounceCallback } from \"~/utils/time\";\r\n\r\nimport ColorPickInput from \"../common/colorPickInput\";\r\nimport HcInput from \"../common/hcInput\";\r\nimport Title from \"../common/title\";\r\nimport BgType from \"./scenePanel/bgType\";\r\nimport SceneLight from \"./scenePanel/sceneLight\";\r\n\r\nimport type { ColorResult } from \"react-color\";\r\ninterface ScenePanelProps {}\r\n\r\nconst ScenePanel: React.FC<ScenePanelProps> = (props) => {\r\n  const [shadowSwitch, setShadowSwitch] = useState(true);\r\n\r\n  const { fileStore, rootStore } = useStores();\r\n\r\n  const [hColor, setHColor] = useState(\"\");\r\n  const [aColor, setAColor] = useState(\"\");\r\n  const [hemInten, setHemInten] = useState(1);\r\n\r\n  const [Reflect, setReflect] = useState(false);\r\n\r\n  const [useGis, setUseGis] = useState(false);\r\n\r\n  const handleChangeCurrentFileName = (e) => {\r\n    // if (!e.target.value) return;\r\n    fileStore.updateFileName(e.target.value);\r\n  };\r\n\r\n  let timer: NodeJS.Timeout;\r\n\r\n  const handleChangeHemIntensity = (e, newValue: number) => {\r\n    setHemInten(newValue);\r\n    timer && clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      App.intance.Viewer.hemisphericLight.Intensity = newValue;\r\n    }, 100);\r\n  };\r\n\r\n  const handleChangeHeColor = (c: ColorResult) => {\r\n    setHColor(c.hex);\r\n    App.intance.Viewer.hemisphericLight.Color = c.hex;\r\n  };\r\n  const handleChangeAmColor = (c: ColorResult) => {\r\n    setAColor(c.hex);\r\n    App.intance.Viewer.sceneControl.AmbientColor = c.hex;\r\n  };\r\n\r\n  const toggleShadow = (e, checked: boolean) => {\r\n    setShadowSwitch(checked);\r\n    App.intance.IsShadow = checked;\r\n  };\r\n  const toggleGis = (evt, checked: boolean) => {\r\n    setUseGis(checked);\r\n    if (checked) {\r\n      App.intance.openGis();\r\n    } else {\r\n      App.intance.closeGis();\r\n    }\r\n  };\r\n\r\n  const update = () => {\r\n    const app = App.intance;\r\n    setHemInten(app.Viewer.hemisphericLight.Intensity);\r\n    setHColor(app.Viewer.hemisphericLight.Color);\r\n    setAColor(app.Viewer.sceneControl.AmbientColor);\r\n    setShadowSwitch(app.IsShadow);\r\n    setReflect(app.Viewer.sceneControl.IsReflect);\r\n  };\r\n\r\n  const handleSetIndex = (evt, checked: boolean) => {\r\n    debounceCallback(() => {\r\n      if (checked) fileStore.setAppIndex(fileStore.currentFileId);\r\n      // postReq(AppApi.cancelPreview).then((res) => {\r\n      //   rootStore.appIndexId = null;\r\n      // });\r\n      else message.warn(\"无法取消,必须存在一个首页\");\r\n    });\r\n  };\r\n\r\n  const handleRefl = (evt) => {\r\n    setReflect(evt.target.checked);\r\n    App.intance.Viewer.sceneControl.IsReflect = evt.target.checked;\r\n  };\r\n\r\n  useEffect(() => {\r\n    let dispose: () => void;\r\n    when(\r\n      () => !!App.intance,\r\n      () => {\r\n        const app = App.intance;\r\n        update();\r\n        dispose = app.on(\"loadFile\", () => {\r\n          update();\r\n        });\r\n      }\r\n    );\r\n    return () => {\r\n      dispose?.();\r\n    };\r\n  }, []);\r\n\r\n  const styles = {\r\n    inputRoot: {\r\n      fontSize: 30,\r\n    },\r\n    labelRoot: {\r\n      fontSize: 30,\r\n      color: \"red\",\r\n      \"&$labelFocused\": {\r\n        color: \"purple\",\r\n      },\r\n    },\r\n    labelFocused: {},\r\n  };\r\n  const onChangeName = (e) => {\r\n    console.log(e);\r\n  };\r\n  return (\r\n    <List\r\n      sx={{\r\n        width: \"100%\",\r\n        maxWidth: 360,\r\n        bgcolor: \"background.paper\",\r\n        paddingTop: \"0px\",\r\n      }}\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n    >\r\n      <Box>\r\n        <FormControlLabel\r\n          checked={rootStore.appIndexId === fileStore.currentFileId}\r\n          onChange={handleSetIndex}\r\n          control={<Checkbox />}\r\n          label=\"设为首页\"\r\n        />\r\n        {/* <FormControlLabel\r\n          checked={useGis}\r\n          onChange={toggleGis}\r\n          control={<Checkbox />}\r\n          label=\"使用地图\"\r\n        /> */}\r\n        <Stack direction=\"row\">\r\n          <HcInput\r\n            title=\"名称\"\r\n            value={fileStore.currentFileName}\r\n            onChange={handleChangeCurrentFileName}\r\n          />\r\n        </Stack>\r\n        <BgType></BgType>\r\n        <Stack direction=\"row\" sx={{ mt: 1 }}>\r\n          <Title title=\"开启阴影\" mt={1.1} />\r\n          <Switch\r\n            checked={shadowSwitch}\r\n            onChange={toggleShadow}\r\n            inputProps={{ \"aria-label\": \"controlled\" }}\r\n          />\r\n        </Stack>\r\n        <Stack direction=\"row\">\r\n          <Title title=\"反射环境\" mt={0.7} />\r\n          <Switch checked={Reflect} onChange={handleRefl} />\r\n        </Stack>\r\n        <SceneLight></SceneLight>\r\n        <Stack direction=\"row\" sx={{ m: 0, p: 0 }} alignItems=\"center\">\r\n          <Title title=\"环境光颜色\" mt={1.1} />\r\n          <ColorPickInput color={aColor} onChange={handleChangeAmColor} />\r\n        </Stack>\r\n        <Stack direction=\"row\" sx={{ m: 0, p: 0 }}>\r\n          <Title title=\"全局光强度\" mt={1.1} />\r\n          <Slider\r\n            size=\"small\"\r\n            value={hemInten}\r\n            aria-label=\"Small\"\r\n            valueLabelDisplay=\"auto\"\r\n            min={0}\r\n            max={1}\r\n            step={0.1}\r\n            onChange={handleChangeHemIntensity}\r\n          />\r\n        </Stack>\r\n        <Stack direction=\"row\" sx={{ m: 0, p: 0 }} alignItems=\"center\">\r\n          <Title title=\"全局光颜色\" mt={1.1} />\r\n          <ColorPickInput color={hColor} onChange={handleChangeHeColor} />\r\n        </Stack>\r\n      </Box>\r\n    </List>\r\n  );\r\n};\r\nexport default observer(ScenePanel);\r\n","import { Box, List } from \"@mui/material\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useStores } from \"~/contexts/store-context\";\r\nimport HcInput from \"../common/hcInput\";\r\ninterface BoardProps {}\r\n\r\nconst Board: React.FC<BoardProps> = (props) => {\r\n  const { fileStore } = useStores();\r\n\r\n  const onChange = (e) => {\r\n    // if (!e.target.value) return;\r\n    fileStore.Url2d = e.target.value;\r\n  };\r\n  return (\r\n    <List\r\n      sx={{\r\n        width: \"100%\",\r\n        maxWidth: 360,\r\n        bgcolor: \"background.paper\",\r\n        paddingTop: \"0px\",\r\n      }}\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n    >\r\n      <Box>\r\n        <HcInput\r\n          title=\"看板地址\"\r\n          value={fileStore.Url2d || \"\"}\r\n          onChange={onChange}\r\n        />\r\n      </Box>\r\n    </List>\r\n  );\r\n};\r\nexport default observer(Board);\r\n","import {\r\n  Box,\r\n  FormControlLabel,\r\n  Input,\r\n  Radio,\r\n  RadioGroup,\r\n  Stack,\r\n} from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { IEditorState, useEditorContext } from \"~/contexts/editor-context\";\r\nimport { UPDATE, UPDATE_NAME, UPDATE_OTHER } from \"~/reducers/editorReducers\";\r\nimport { uiVector2Vector } from \"~/utils/adapter\";\r\nimport Vector3Panel from \"../common/vector3Panel\";\r\nimport TitleInput from \"~/components/common/titleInput\";\r\nimport Title from \"~/components/common/title\";\r\nimport { CMD } from \"@hc/engine\";\r\n\r\ninterface GuiBasePanelProps {}\r\n\r\nconst DomBasePanel: React.FC<GuiBasePanelProps> = () => {\r\n  const { editorState, dispatch } = useEditorContext();\r\n\r\n  const dom = editorState.dom;\r\n\r\n  const handleChangeTF = (state: Partial<IEditorState>) => {\r\n    dispatch({ type: UPDATE, ...state });\r\n  };\r\n\r\n  const handleChangeDom = (key: string, value: string) => {\r\n    if (value)\r\n      CMD.CommandWrap(() => {\r\n        dom[key] = value;\r\n      }, \"更新DOM\");\r\n  };\r\n  const handleTransfromDom = (key: string, value: any) => {\r\n    CMD.CommandWrap(() => {\r\n      dom[key] = value;\r\n    }, \"变换DOM\");\r\n  };\r\n\r\n  const handleChange = (evt, value) => {\r\n    dispatch({\r\n      type: UPDATE_OTHER,\r\n      other: { ...editorState.other, [evt.target.name]: Number(value) },\r\n    });\r\n    dom[evt.target.name] = Number(value);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: \"100%\",\r\n        maxWidth: 360,\r\n        bgcolor: \"background.paper\",\r\n        fontSize: \"14px\",\r\n      }}\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n    >\r\n      <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <TitleInput\r\n          title=\"名称\"\r\n          value={editorState.name}\r\n          onChange={(e) =>\r\n            dispatch({ type: UPDATE_NAME, name: e.target.value })\r\n          }\r\n          onBlur={(e) => {\r\n            dom.Name = e.target.value;\r\n          }}\r\n        />\r\n      </Stack>\r\n      <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <TitleInput\r\n          title=\"宽\"\r\n          value={editorState?.other?.width}\r\n          onChange={(e) =>\r\n            dispatch({\r\n              type: UPDATE_OTHER,\r\n              other: { ...editorState.other, width: e.target.value },\r\n            })\r\n          }\r\n          onBlur={(e) => {\r\n            handleChangeDom(\"Width\", e.target.value);\r\n          }}\r\n        />\r\n      </Stack>\r\n      <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <TitleInput\r\n          title=\"高\"\r\n          value={editorState?.other?.height}\r\n          onChange={(e) =>\r\n            dispatch({\r\n              type: UPDATE_OTHER,\r\n              other: { ...editorState.other, height: e.target.value },\r\n            })\r\n          }\r\n          onBlur={(e) => {\r\n            handleChangeDom(\"Height\", e.target.value);\r\n          }}\r\n        />\r\n      </Stack>\r\n      <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <Title title={\"位置\"} mt={0.7} />\r\n        <Vector3Panel\r\n          vector={editorState.position}\r\n          onChange={(k: string, v: string) =>\r\n            handleChangeTF({ position: { ...editorState.position, [k]: v } })\r\n          }\r\n          onBlur={() => {\r\n            handleTransfromDom(\"Position\", editorState.position);\r\n          }}\r\n        />\r\n      </Stack>\r\n      <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <Title title=\"水平对齐\" mt={0.7} />\r\n        <RadioGroup\r\n          aria-labelledby=\"水平对齐\"\r\n          name=\"HorAlign\"\r\n          value={editorState?.other?.HorAlign}\r\n          onChange={handleChange}\r\n          row\r\n        >\r\n          <FormControlLabel value={0} control={<Radio />} label=\"左\" />\r\n          <FormControlLabel value={1} control={<Radio />} label=\"居中\" />\r\n          <FormControlLabel value={2} control={<Radio />} label=\"右\" />\r\n        </RadioGroup>\r\n      </Stack>\r\n      <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <Title title=\"垂直对齐\" mt={0.7} />\r\n        <RadioGroup\r\n          aria-labelledby=\"垂直对齐\"\r\n          name=\"VerAlign\"\r\n          value={editorState?.other?.VerAlign}\r\n          onChange={handleChange}\r\n          row\r\n        >\r\n          <FormControlLabel value={0} control={<Radio />} label=\"上\" />\r\n          <FormControlLabel value={1} control={<Radio />} label=\"居中\" />\r\n          <FormControlLabel value={2} control={<Radio />} label=\"下\" />\r\n        </RadioGroup>\r\n      </Stack>\r\n      <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <Title title={\"旋转\"} mt={0.7} />\r\n        <Vector3Panel\r\n          vector={editorState.rotation}\r\n          onBlur={() => {\r\n            handleTransfromDom(\"Rotation\", parseFloat(editorState.rotation.x));\r\n          }}\r\n          onChange={(k: string, v: string) =>\r\n            handleChangeTF({ rotation: { ...editorState.rotation, [k]: v } })\r\n          }\r\n        />\r\n      </Stack>\r\n      <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <Title title=\"缩放\" mt={0.7} />\r\n        <Vector3Panel\r\n          vector={editorState.scale}\r\n          onBlur={() => {\r\n            handleTransfromDom(\"Scale\", uiVector2Vector(editorState.scale));\r\n          }}\r\n          onChange={(k: string, v: string) =>\r\n            handleChangeTF({ scale: { ...editorState.scale, [k]: v } })\r\n          }\r\n        />\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\nexport default DomBasePanel;\r\n","import {\r\n  ButtonGroup,\r\n  Collapse,\r\n  List,\r\n  ListItemButton,\r\n  ListItemText,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  ListItem,\r\n  DialogActions,\r\n  DialogContent,\r\n  ListSubheader,\r\n  TextField,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Input,\r\n  Stack,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ExpandLess from \"@mui/icons-material/ExpandLess\";\r\nimport ExpandMore from \"@mui/icons-material/ExpandMore\";\r\nimport { Entity, IVector3, Utils } from \"@hc/engine\";\r\nimport { IAnimationProps } from \"./types\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\n\r\ninterface AnimationPanelProps {\r\n  expand: () => void;\r\n  isExpand: boolean;\r\n  entity: Entity;\r\n}\r\n\r\nconst AnimationPanel: React.FC<AnimationPanelProps> = ({\r\n  expand,\r\n  isExpand,\r\n  entity,\r\n}) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [animations, setAnimations] = useState<IAnimationProps[]>([]);\r\n  const [animationNames, setAnimationNames] = useState(entity.AnimationNames);\r\n  const startAddAnimation = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setAnimations([]);\r\n  };\r\n\r\n  const addMoveAnimate = () => {\r\n    setAnimations((ans) => [\r\n      ...ans,\r\n      { title: \"移动\", type: 0, data: [], group: false },\r\n    ]);\r\n  };\r\n  const addRotateAnimate = () => {\r\n    setAnimations((ans) => [\r\n      ...ans,\r\n      { title: \"旋转\", type: 1, data: [\"0\", \"0\"], group: false },\r\n    ]);\r\n  };\r\n\r\n  const handleChangePoint = (val: string, point: IVector3, k: string) => {\r\n    point[k] = val;\r\n    setAnimations([...animations]);\r\n  };\r\n\r\n  const handleAddPoint = (an: IAnimationProps) => {\r\n    an.data.push({ x: \"0\", y: \"0\", z: \"0\" });\r\n    setAnimations([...animations]);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    for (const an of animations) {\r\n      if (an.type === 0 && an.data?.length > 0) {\r\n        entity.moveAnimate({\r\n          name: an.title,\r\n          path: an.data.map((p) => ({\r\n            x: Number(p.x) || 0,\r\n            y: Number(p.y) || 0,\r\n            z: Number(p.z) || 0,\r\n          })),\r\n        });\r\n      } else if (an.type === 1) {\r\n        if (an.data.some((d) => Number(d))) {\r\n          entity.rotateAnimate({\r\n            name: an.title,\r\n            from: Utils.deg2rad(Number(an.data[0])),\r\n            angle: Utils.deg2rad(Number(an.data[1])),\r\n            time: 3,\r\n            loop: true,\r\n          });\r\n        }\r\n      }\r\n    }\r\n    setOpen(false);\r\n  };\r\n\r\n  const renderAnimationList = (an: IAnimationProps) => {\r\n    switch (an.type) {\r\n      case 0:\r\n        return (\r\n          <>\r\n            {an.data.map((p, index) => (\r\n              <ListItem key={index}>\r\n                <TextField\r\n                  label=\"x\"\r\n                  size=\"small\"\r\n                  value={p.x}\r\n                  onChange={(e) => handleChangePoint(e.target.value, p, \"x\")}\r\n                />\r\n                <TextField\r\n                  label=\"y\"\r\n                  size=\"small\"\r\n                  value={p.y}\r\n                  onChange={(e) => handleChangePoint(e.target.value, p, \"y\")}\r\n                />\r\n                <TextField\r\n                  label=\"z\"\r\n                  size=\"small\"\r\n                  value={p.z}\r\n                  onChange={(e) => handleChangePoint(e.target.value, p, \"z\")}\r\n                />\r\n              </ListItem>\r\n            ))}\r\n            <ListItemButton onClick={() => handleAddPoint(an)}>\r\n              <Button variant=\"outlined\" endIcon={<AddIcon />}>\r\n                添加移动点\r\n              </Button>\r\n            </ListItemButton>\r\n          </>\r\n        );\r\n      case 1:\r\n        return (\r\n          <ListItem>\r\n            <TextField\r\n              label=\"从\"\r\n              size=\"small\"\r\n              value={an.data[0]}\r\n              onChange={(e) => {\r\n                an.data[0] = e.target.value;\r\n                setAnimations([...animations]);\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"到\"\r\n              size=\"small\"\r\n              value={an.data[1]}\r\n              onChange={(e) => {\r\n                an.data[1] = e.target.value;\r\n                setAnimations([...animations]);\r\n              }}\r\n            />\r\n          </ListItem>\r\n        );\r\n      case 2:\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    entity.on(\"addAnimation\", () => {\r\n      setAnimationNames(entity.AnimationNames);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <ListItemButton onClick={expand}>\r\n        <ListItemText primary=\"动画\" />\r\n        {isExpand ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItemButton>\r\n      <Collapse in={isExpand} timeout=\"auto\" unmountOnExit>\r\n        <List\r\n          component=\"div\"\r\n          disablePadding\r\n          sx={{\r\n            overflow: \"auto\",\r\n            maxHeight: 300,\r\n          }}\r\n        >\r\n          <ButtonGroup\r\n            fullWidth\r\n            orientation=\"vertical\"\r\n            aria-label=\"vertical outlined button group\"\r\n            sx={{\r\n              \"& button\": {\r\n                marginBottom: 1,\r\n              },\r\n            }}\r\n          >\r\n            {animationNames.map((nm) => (\r\n              <Button\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                key={nm}\r\n                onClick={() => entity.startAnimates(nm)}\r\n              >\r\n                {nm}\r\n              </Button>\r\n            ))}\r\n            <Button color=\"primary\" onClick={startAddAnimation}>\r\n              添加\r\n            </Button>\r\n            <Button color=\"primary\" onClick={() => entity.stopAnimates()}>\r\n              暂停所有\r\n            </Button>\r\n          </ButtonGroup>\r\n        </List>\r\n        <Dialog\r\n          onClose={handleClose}\r\n          open={open}\r\n          fullWidth\r\n          maxWidth=\"lg\"\r\n          PaperProps={{ sx: { height: \"90vh\" } }}\r\n        >\r\n          <DialogTitle>添加动画</DialogTitle>\r\n          <DialogContent sx={{ display: \"flex\", overflow: \"hidden\" }}>\r\n            {animations.map((an, index) => (\r\n              <List\r\n                key={index}\r\n                sx={{ pt: 0, width: \"20%\" }}\r\n                subheader={\r\n                  <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n                    <Stack direction=\"row\">\r\n                      <Input\r\n                        value={an.title}\r\n                        onChange={(e) => {\r\n                          an.title = e.target.value;\r\n                          setAnimations([...animations]);\r\n                        }}\r\n                      />\r\n                      <FormControlLabel\r\n                        control={<Checkbox />}\r\n                        label=\"组\"\r\n                        onChange={(e, checked) => {\r\n                          an.group = checked;\r\n                          setAnimations([...animations]);\r\n                        }}\r\n                      />\r\n                    </Stack>\r\n                  </ListSubheader>\r\n                }\r\n              >\r\n                {renderAnimationList(an)}\r\n              </List>\r\n            ))}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button variant=\"contained\" onClick={addMoveAnimate}>\r\n              添加移动动画\r\n            </Button>\r\n            <Button variant=\"contained\" onClick={addRotateAnimate}>\r\n              添加旋转动画\r\n            </Button>\r\n            <Button variant=\"contained\" onClick={handleConfirm}>\r\n              确定\r\n            </Button>\r\n            <Button variant=\"contained\" onClick={handleClose}>\r\n              取消\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Collapse>\r\n    </>\r\n  );\r\n};\r\nexport default AnimationPanel;\r\n","import { Utils, CMD } from \"@hc/engine\";\r\nimport { Box, Stack, Switch } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { IEditorState, useEditorContext } from \"~/contexts/editor-context\";\r\nimport {\r\n  TOGGLE_PICKABLE,\r\n  TOGGLE_SHADOW,\r\n  TOGGLE_VISIABLE,\r\n  UPDATE,\r\n  UPDATE_NAME,\r\n} from \"~/reducers/editorReducers\";\r\nimport { uiVector2Vector } from \"~/utils/adapter\";\r\nimport VectorPanel from \"../common/vector3Panel\";\r\nimport AnimationPanel from \"./animationPanel\";\r\nimport TitleInput from \"~/components/common/titleInput\";\r\nimport Title from \"~/components/common/title\";\r\nimport HcInput from \"~/components/common/hcInput\";\r\nconst EntityBasePanel: React.FC = () => {\r\n  const { editorState, dispatch } = useEditorContext();\r\n\r\n  const entity = editorState.entity;\r\n\r\n  const [openKeys, setOpenKeys] = useState(new Set());\r\n\r\n  const handleSwitchVisiable = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    CMD.CommandWrap(() => {\r\n      entity.Visiable = event.target.checked;\r\n    }, \"切换可见性\");\r\n    dispatch({ type: TOGGLE_VISIABLE });\r\n  };\r\n  // const [pickable, setPickable] = React.useState(IsPickable);\r\n\r\n  const handleChangeTF = (state: Partial<IEditorState>) => {\r\n    dispatch({ type: UPDATE, ...state });\r\n  };\r\n\r\n  const handleOpenKeys = (k: string) => {\r\n    if (openKeys.has(k)) {\r\n      openKeys.delete(k);\r\n    } else {\r\n      openKeys.add(k);\r\n    }\r\n    setOpenKeys(new Set(openKeys));\r\n  };\r\n\r\n  const handleChangePick = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    entity.IsPickable = event.target.checked;\r\n    dispatch({ type: TOGGLE_PICKABLE });\r\n  };\r\n  const handleChangeShadow = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    entity.EnableShadow = event.target.checked;\r\n    dispatch({ type: TOGGLE_SHADOW });\r\n  };\r\n  return (\r\n    <Box\r\n      sx={{\r\n        bgcolor: \"background.paper\",\r\n        fontSize: \"14px\",\r\n      }}\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n    >\r\n      {/* <LabelRow label=\"标签\" sx={{ mt: 2 }}>\r\n          <TextField\r\n            id=\"filled-hidden-label-small\"\r\n            defaultValue=\"0\"\r\n            size=\"small\"\r\n            sx={{\r\n              paddingTop: \"4px\",\r\n            }}\r\n          />\r\n        </LabelRow> */}\r\n      <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <HcInput\r\n          title=\"名称\"\r\n          value={editorState.name}\r\n          onChange={(e) =>\r\n            dispatch({ type: UPDATE_NAME, name: e.target.value })\r\n          }\r\n          onBlur={(e) => {\r\n            CMD.CommandWrap(() => {\r\n              editorState.entity.Name = e.target.value;\r\n            }, \"改变名称\");\r\n          }}\r\n        />\r\n      </Stack>\r\n      <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <Title title={\"位置\"} mt={0.5} />\r\n        <VectorPanel\r\n          vector={editorState.position}\r\n          onChange={(k: string, v: string) =>\r\n            handleChangeTF({ position: { ...editorState.position, [k]: v } })\r\n          }\r\n          onBlur={() => {\r\n            CMD.CommandWrap(() => {\r\n              entity.Position = uiVector2Vector(editorState.position);\r\n            }, \"修改位置\");\r\n          }}\r\n        />\r\n      </Stack>\r\n      <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <Title title={\"旋转\"} mt={0.7} />\r\n        <VectorPanel\r\n          vector={editorState.rotation}\r\n          onBlur={() => {\r\n            CMD.CommandWrap(() => {\r\n              entity.Rotation = uiVector2Vector(editorState.rotation, (n) =>\r\n                Utils.deg2rad(n)\r\n              );\r\n            }, \"修改旋转\");\r\n          }}\r\n          onChange={(k: string, v: string) =>\r\n            handleChangeTF({ rotation: { ...editorState.rotation, [k]: v } })\r\n          }\r\n        />\r\n      </Stack>\r\n      <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <Title title={\"缩放\"} mt={0.7} />\r\n        <VectorPanel\r\n          vector={editorState.scale}\r\n          onBlur={() => {\r\n            CMD.CommandWrap(() => {\r\n              entity.Scale = uiVector2Vector(editorState.scale);\r\n            }, \"修改缩放\");\r\n          }}\r\n          onChange={(k: string, v: string) =>\r\n            handleChangeTF({ scale: { ...editorState.scale, [k]: v } })\r\n          }\r\n        />\r\n      </Stack>\r\n      {/* <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <Title title={\"可见\"} mt={0.7} />\r\n        <Switch\r\n          color=\"primary\"\r\n          checked={editorState.visiable}\r\n          onChange={handleSwitchVisiable}\r\n        />\r\n      </Stack>\r\n      <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <Title title={\"可选\"} mt={0.7} />\r\n        <Switch\r\n          color=\"primary\"\r\n          checked={editorState.pickable}\r\n          onChange={handleChangePick}\r\n        />\r\n      </Stack> */}\r\n      <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <Title title={\"投影\"} mt={0.7} />\r\n        <Switch\r\n          color=\"primary\"\r\n          checked={editorState.enableShadow}\r\n          onChange={handleChangeShadow}\r\n        />\r\n      </Stack>\r\n      <div style={{ display: \"none\" }}>\r\n        <AnimationPanel\r\n          expand={() => handleOpenKeys(\"animate\")}\r\n          isExpand={openKeys.has(\"animate\")}\r\n          entity={entity}\r\n        />\r\n      </div>\r\n    </Box>\r\n  );\r\n};\r\nexport default EntityBasePanel;\r\n","import { CMD, Utils } from \"@hc/engine\";\r\nimport { Box, Stack } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { IEditorState, useEditorContext } from \"~/contexts/editor-context\";\r\nimport {\r\n  TOGGLE_VISIABLE,\r\n  UPDATE,\r\n  UPDATE_NAME,\r\n} from \"~/reducers/editorReducers\";\r\nimport { uiVector2Vector } from \"~/utils/adapter\";\r\nimport LabelRow from \"../common/labelRow\";\r\nimport Vector3Panel from \"../common/vector3Panel\";\r\nimport TitleInput from \"~/components/common/titleInput\";\r\nimport Title from \"~/components/common/title\";\r\nimport { debounceCallback } from \"~/utils/time\";\r\n\r\ninterface GuiBasePanelProps {}\r\n\r\nconst GuiBasePanel: React.FC<GuiBasePanelProps> = () => {\r\n  const { editorState, dispatch } = useEditorContext();\r\n\r\n  const gui = editorState.gui;\r\n\r\n  const handleChangeTF = (state: Partial<IEditorState>) => {\r\n    dispatch({ type: UPDATE, ...state });\r\n  };\r\n\r\n  const handleChange = (evt) => {\r\n    dispatch({\r\n      type: UPDATE,\r\n      other: { ...editorState.other, [evt.target.name]: evt.target.value },\r\n    });\r\n\r\n    if (evt.target.value)\r\n      debounceCallback(() => {\r\n        CMD.CommandWrap(() => {\r\n          gui[evt.target.name] = evt.target.value;\r\n        }, \"改变尺寸\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: \"100%\",\r\n        maxWidth: 360,\r\n        bgcolor: \"background.paper\",\r\n        fontSize: \"14px\",\r\n      }}\r\n      component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n    >\r\n      {/* <LabelRow label=\"标签\" sx={{ mt: 2 }}>\r\n          <TextField\r\n            id=\"filled-hidden-label-small\"\r\n            defaultValue=\"0\"\r\n            size=\"small\"\r\n            sx={{\r\n              paddingTop: \"4px\",\r\n            }}\r\n          />\r\n        </LabelRow> */}\r\n      <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <TitleInput\r\n          title=\"名称\"\r\n          value={editorState.name}\r\n          onChange={(e) =>\r\n            dispatch({ type: UPDATE_NAME, name: e.target.value })\r\n          }\r\n          onBlur={(e) => {\r\n            CMD.CommandWrap(() => {\r\n              gui.Name = e.target.value;\r\n            }, \"改变名称\");\r\n          }}\r\n        />\r\n      </Stack>\r\n      <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <TitleInput\r\n          name=\"Width\"\r\n          title=\"宽\"\r\n          value={editorState.other.Width}\r\n          onChange={handleChange}\r\n        />\r\n      </Stack>\r\n      <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <TitleInput\r\n          name=\"Height\"\r\n          title=\"高\"\r\n          value={editorState.other.Height}\r\n          onChange={handleChange}\r\n        />\r\n      </Stack>\r\n      <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <Title title={\"位置\"} mt={0.7} />\r\n        <Vector3Panel\r\n          vector={editorState.position}\r\n          onChange={(k: string, v: string) =>\r\n            handleChangeTF({ position: { ...editorState.position, [k]: v } })\r\n          }\r\n          onBlur={() => {\r\n            CMD.CommandWrap(() => {\r\n              gui.Position = editorState.position;\r\n            }, \"改变位置\");\r\n          }}\r\n        />\r\n      </Stack>\r\n      <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <Title title={\"旋转\"} mt={0.7} />\r\n        <Vector3Panel\r\n          vector={editorState.rotation}\r\n          onBlur={() => {\r\n            CMD.CommandWrap(() => {\r\n              gui.Rotation = Utils.deg2rad(parseFloat(editorState.rotation.x));\r\n            }, \"改变旋转\");\r\n          }}\r\n          onChange={(k: string, v: string) =>\r\n            handleChangeTF({ rotation: { ...editorState.rotation, [k]: v } })\r\n          }\r\n        />\r\n      </Stack>\r\n      <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <Title title=\"缩放\" mt={0.7} />\r\n        <Vector3Panel\r\n          vector={editorState.scale}\r\n          onBlur={() => {\r\n            CMD.CommandWrap(() => {\r\n              gui.Scale = uiVector2Vector(editorState.scale);\r\n            }, \"改变缩放\");\r\n          }}\r\n          onChange={(k: string, v: string) =>\r\n            handleChangeTF({ scale: { ...editorState.scale, [k]: v } })\r\n          }\r\n        />\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\nexport default GuiBasePanel;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useEditorContext } from \"~/contexts/editor-context\";\r\nimport DomBasePanel from \"./domBasePanel\";\r\n\r\nimport EntityBasePanel from \"./entityBasePanel\";\r\nimport GuiBasePanel from \"./guiBasePanel\";\r\n\r\nconst BasePanel: React.FC = () => {\r\n  const { editorState } = useEditorContext();\r\n\r\n  if (editorState.entity) {\r\n    return <EntityBasePanel />;\r\n  }\r\n\r\n  if (editorState.gui) {\r\n    return <GuiBasePanel />;\r\n  }\r\n  if (editorState.dom) {\r\n    return <DomBasePanel />;\r\n  }\r\n\r\n  return <div>未知面板</div>;\r\n};\r\nexport default BasePanel;\r\n","import { CompareType, WidgetValue } from \"@hc/engine\";\r\nimport { Box } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { IInteractionCondItem } from \"~/stores/InteractionStore\";\r\n\r\nconst getValueStr = (v: WidgetValue) => {\r\n  let str = \"\";\r\n  if (v.type === \"entity\") {\r\n    str = v.value?.Object ? v.value?.Object?.[\"Name\"] + \"的值\" : \"[空]\";\r\n  } else {\r\n    str = v.value || \"[空]\";\r\n  }\r\n\r\n  return str;\r\n};\r\nconst getCompare = (type: CompareType) => {\r\n  switch (type) {\r\n    case CompareType.Equal:\r\n      return \"==\";\r\n    case CompareType.UnEqual:\r\n      return \"!=\";\r\n    case CompareType.Great:\r\n      return \">\";\r\n    case CompareType.GtEqual:\r\n      return \">=\";\r\n    case CompareType.Less:\r\n      return \"<\";\r\n    case CompareType.LessEqual:\r\n      return \"<=\";\r\n    default:\r\n      return \" \";\r\n  }\r\n};\r\nconst getStr = (cf: IInteractionCondItem) => {\r\n  let str = \"\";\r\n\r\n  str += getValueStr(cf.value1);\r\n  str += \" \";\r\n  str += getCompare(cf.type);\r\n  str += \" \";\r\n  str += getValueStr(cf.value2);\r\n\r\n  return str;\r\n};\r\n\r\nexport function getConditionDescription(\r\n  conditions: IInteractionCondItem[],\r\n  isAll: boolean,\r\n  index: number\r\n) {\r\n  return (\r\n    <Box>\r\n      <span style={{ color: \"#075FB8\", marginRight: 10 }}>\r\n        {index === 0 ? \"If\" : \"Else If\"}\r\n      </span>\r\n      {conditions.length === 0\r\n        ? \" 真\"\r\n        : conditions.map((v) => getStr(v)).join(isAll ? \" && \" : \" || \")}\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport const CompareOptions = [\r\n  { label: \"等于\", value: CompareType.Equal },\r\n  { label: \"不等于\", value: CompareType.UnEqual },\r\n  { label: \"大于\", value: CompareType.Great },\r\n  { label: \"小于\", value: CompareType.Less },\r\n  { label: \"大于等于\", value: CompareType.GtEqual },\r\n  { label: \"小于等于\", value: CompareType.LessEqual },\r\n];\r\n","import TreeItem, {\r\n  treeItemClasses,\r\n  TreeItemContentProps,\r\n  TreeItemProps,\r\n  useTreeItem,\r\n} from \"@mui/lab/TreeItem\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { SvgIconProps } from \"@mui/material/SvgIcon\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Observer } from \"mobx-react-lite\";\r\nimport * as React from \"react\";\r\n\r\ndeclare module \"react\" {\r\n  interface CSSProperties {\r\n    \"--tree-view-color\"?: string;\r\n    \"--tree-view-bg-color\"?: string;\r\n  }\r\n}\r\n\r\ntype StyledTreeItemProps = TreeItemProps & {\r\n  bgColor?: string;\r\n  color?: string;\r\n  labelIcon?: React.ElementType<SvgIconProps>;\r\n  endElement?: string | JSX.Element;\r\n  labelText: string;\r\n  desc?: React.ReactNode;\r\n};\r\n\r\nconst StyledTreeItemRoot = styled(TreeItem)(({ theme }) => ({\r\n  color: theme.palette.text.secondary,\r\n  [`& .${treeItemClasses.content}`]: {\r\n    color: theme.palette.text.secondary,\r\n    borderTopRightRadius: theme.spacing(2),\r\n    borderBottomRightRadius: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    \"&.Mui-expanded\": {\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n    \"&:hover\": {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n    \"&.Mui-focused, &.Mui-selected, &.Mui-selected.Mui-focused\": {\r\n      backgroundColor: `var(--tree-view-bg-color, ${theme.palette.action.selected})`,\r\n      color: \"var(--tree-view-color)\",\r\n    },\r\n    [`& .${treeItemClasses.label}`]: {\r\n      fontWeight: \"inherit\",\r\n      color: \"inherit\",\r\n    },\r\n  },\r\n  //   [`& .${treeItemClasses.group}`]: {\r\n  //     marginLeft: 0,\r\n  //     [`& .${treeItemClasses.content}`]: {\r\n  //       paddingLeft: theme.spacing(4),\r\n  //     },\r\n  //   },\r\n}));\r\n\r\nconst CustomContent = React.forwardRef(function CustomContent(\r\n  props: TreeItemContentProps & { descption?: React.ReactNode },\r\n  ref: React.Ref<HTMLDivElement>\r\n) {\r\n  const {\r\n    classes,\r\n    className,\r\n    label,\r\n    nodeId,\r\n    descption,\r\n    icon: iconProp,\r\n    expansionIcon,\r\n    displayIcon,\r\n    onClick,\r\n    onMouseDown,\r\n  } = props;\r\n\r\n  const {\r\n    disabled,\r\n    expanded,\r\n    selected,\r\n    focused,\r\n    handleExpansion,\r\n    handleSelection,\r\n    preventSelection,\r\n  } = useTreeItem(nodeId);\r\n\r\n  const icon = iconProp || expansionIcon || displayIcon;\r\n\r\n  const handleMouseDown = (\r\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\r\n  ) => {\r\n    preventSelection(event);\r\n    onMouseDown?.(event);\r\n  };\r\n\r\n  const handleExpansionClick = (\r\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\r\n  ) => {\r\n    handleExpansion(event);\r\n  };\r\n\r\n  const handleSelectionClick = (\r\n    event: React.MouseEvent<HTMLDivElement, MouseEvent>\r\n  ) => {\r\n    handleSelection(event);\r\n    onClick?.(event);\r\n  };\r\n\r\n  const classNames = React.useMemo(() => {\r\n    const classNamesSet = new Set(className.split(\" \"));\r\n    classNamesSet.add(classes.root);\r\n    if (expanded) {\r\n      classNamesSet.add(classes.expanded);\r\n    }\r\n    if (selected) {\r\n      classNamesSet.add(classes.selected);\r\n    }\r\n    if (focused) {\r\n      classNamesSet.add(classes.focused);\r\n    }\r\n    if (disabled) {\r\n      classNamesSet.add(classes.disabled);\r\n    }\r\n    return Array.from(classNamesSet).join(\" \");\r\n  }, [disabled, focused, selected, expanded]);\r\n\r\n  return (\r\n    <div className={classNames} onMouseDown={handleMouseDown} ref={ref}>\r\n      <div onClick={handleExpansionClick} className={classes.iconContainer}>\r\n        {icon}\r\n      </div>\r\n      <Typography\r\n        onClick={handleSelectionClick}\r\n        component=\"div\"\r\n        className={classes.label}\r\n      >\r\n        {label}\r\n      </Typography>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport const StyledTreeItem = React.forwardRef(\r\n  (props: StyledTreeItemProps, ref) => {\r\n    const {\r\n      bgColor,\r\n      color,\r\n      labelIcon: LabelIcon,\r\n      endElement,\r\n      labelText,\r\n      desc,\r\n      ...other\r\n    } = props;\r\n\r\n    return (\r\n      <Observer>\r\n        {() => (\r\n          <StyledTreeItemRoot\r\n            ContentComponent={CustomContent}\r\n            ref={ref}\r\n            label={\r\n              <>\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    flexWrap: \"wrap\",\r\n                  }}\r\n                >\r\n                  {LabelIcon && (\r\n                    <Box component={LabelIcon} color=\"inherit\" sx={{ mr: 1 }} />\r\n                  )}\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    sx={{ fontWeight: \"inherit\", flexGrow: 1 }}\r\n                  >\r\n                    {labelText}\r\n                  </Typography>\r\n                  <Typography variant=\"caption\" color=\"inherit\">\r\n                    {endElement}\r\n                  </Typography>\r\n                </Box>\r\n                {desc && (\r\n                  <Typography\r\n                    variant=\"subtitle2\"\r\n                    color=\"inherit\"\r\n                    sx={{ ml: 3 }}\r\n                  >\r\n                    {desc}\r\n                  </Typography>\r\n                )}\r\n              </>\r\n            }\r\n            style={{\r\n              \"--tree-view-color\": color,\r\n              \"--tree-view-bg-color\": bgColor,\r\n            }}\r\n            {...other}\r\n          />\r\n        )}\r\n      </Observer>\r\n    );\r\n  }\r\n);\r\n","import { Entity } from \"@hc/engine\";\r\nimport { IconButton, Button } from \"@mui/material\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  EditorIntMode,\r\n  IInterActDataOption,\r\n  IInteractionActionOption,\r\n  InteractionStore,\r\n  interactionStore,\r\n} from \"~/stores/InteractionStore\";\r\n\r\nimport { StyledTreeItem } from \"../common/customTree\";\r\nimport SpaceAddHint from \"../common/spaceAddHint\";\r\nimport { InteractionConfig } from \"./config\";\r\nimport ArrowDownwardIcon from \"@mui/icons-material/ArrowDownward\";\r\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\";\r\n\r\ninterface ActionsTreeItemProps {\r\n  actions: IInteractionActionOption[];\r\n  onTogglePopover: (evt) => void;\r\n  onClick: (index: number, actIndex: number) => void;\r\n  newAddId?: string;\r\n  onRef?: (el: HTMLElement, id: string) => void;\r\n  store: InteractionStore;\r\n  onEnter?: (evt) => void;\r\n}\r\n\r\nconst EndElement = ({\r\n  actions,\r\n  onTogglePopover,\r\n  onMouseDown,\r\n  act,\r\n  isNew,\r\n  onEnter,\r\n}) => {\r\n  let index = actions.findIndex((item) => item === act);\r\n  const handleUp = () => {\r\n    interactionStore.handleUp(actions, index);\r\n  };\r\n  const handleDown = () => {\r\n    interactionStore.handleDown(actions, index);\r\n  };\r\n  const btnRef = React.useRef<HTMLButtonElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (btnRef.current && isNew) {\r\n      btnRef.current.click();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {act.type !== \"Wait\" && (\r\n        <Button\r\n          ref={btnRef}\r\n          onMouseDown={onMouseDown}\r\n          onClick={onTogglePopover}\r\n          data-page={act.type === \"Dispatch\" ? \"1\" : \"0\"}\r\n          data-type={act.param ? \"param\" : undefined}\r\n          onMouseEnter={onEnter}\r\n        >\r\n          {act.target ? \"添加目标\" : \"添加变量\"}\r\n        </Button>\r\n      )}\r\n      <IconButton onClick={handleUp}>\r\n        <ArrowUpwardIcon />\r\n      </IconButton>\r\n      <IconButton onClick={handleDown}>\r\n        <ArrowDownwardIcon />\r\n      </IconButton>\r\n    </>\r\n  );\r\n};\r\nconst WaitEndElement = ({ actions, act }) => {\r\n  let index = actions.findIndex((item) => item === act);\r\n  const handleUp = () => {\r\n    interactionStore.handleUp(actions, index);\r\n  };\r\n  const handleDown = () => {\r\n    interactionStore.handleDown(actions, index);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton onClick={handleUp}>\r\n        <ArrowUpwardIcon />\r\n      </IconButton>\r\n      <IconButton onClick={handleDown}>\r\n        <ArrowDownwardIcon />\r\n      </IconButton>\r\n    </>\r\n  );\r\n};\r\nconst ActionsTreeItem: React.FC<ActionsTreeItemProps> = ({\r\n  actions,\r\n  onTogglePopover,\r\n  onClick,\r\n  newAddId,\r\n  onRef,\r\n  store,\r\n  onEnter,\r\n}) => {\r\n  const getItemLabel = (\r\n    act: IInteractionActionOption,\r\n    d: IInterActDataOption\r\n  ) => {\r\n    if (InteractionConfig[act.type]?.getDesc) {\r\n      return InteractionConfig[act.type]?.getDesc(d);\r\n    }\r\n\r\n    if (act.target) {\r\n      return `${act.label} ${\r\n        d.objectId ? (d.objectId.Object as Entity)?.Name : \"\"\r\n      }`;\r\n    }\r\n    if (act.param) {\r\n      return `${d.key} 的值设置为\" \"`;\r\n    }\r\n    return act.label;\r\n  };\r\n\r\n  const handleAdd = () => {\r\n    onClick(undefined, undefined);\r\n    store.step = 2;\r\n  };\r\n\r\n  if (\r\n    actions.length === 0 &&\r\n    store.step !== 2 &&\r\n    store.mode === EditorIntMode.List\r\n  ) {\r\n    return (\r\n      <SpaceAddHint onClick={handleAdd} title=\"点击此处给当前事件添加动作?\" />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {actions.map((act, actIndex) => (\r\n        <StyledTreeItem\r\n          key={act.id}\r\n          nodeId={act.id.toString()}\r\n          labelText={act.label}\r\n          ref={(el: HTMLElement) => onRef?.(el, act.id)}\r\n          onClick={() => {\r\n            onClick(undefined, actIndex);\r\n          }}\r\n          endElement={\r\n            <EndElement\r\n              actions={actions}\r\n              act={act}\r\n              isNew={act.id === newAddId}\r\n              onMouseDown={() => onClick(undefined, actIndex)}\r\n              onTogglePopover={onTogglePopover}\r\n              onEnter={onEnter}\r\n            />\r\n          }\r\n        >\r\n          {act.data.map((d, index) => (\r\n            <StyledTreeItem\r\n              onClick={() => {\r\n                onClick(index, actIndex);\r\n              }}\r\n              key={d.objectId?.Index ?? index}\r\n              nodeId={`${act.id}-${(d.objectId?.Index ?? index).toString()}`}\r\n              labelText={getItemLabel(act, d)}\r\n            ></StyledTreeItem>\r\n          ))}\r\n        </StyledTreeItem>\r\n      ))}\r\n      {store.mode === EditorIntMode.List && store.step !== 2 && (\r\n        <Button onClick={handleAdd}>添加动作</Button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default observer(ActionsTreeItem);\r\n","import { WidgetValue } from \"@hc/engine\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n} from \"@mui/material\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { useInteractionStoresContext } from \"~/contexts/interactionStoreContext\";\r\nimport { App } from \"~/intance\";\r\nimport { CompareOptions, getConditionDescription } from \"~/utils/interaction\";\r\n\r\nimport DialogHeader from \"../common/dialogHeader\";\r\nimport LabelInput from \"../common/labelInput\";\r\nimport CommonSelect from \"../common/select\";\r\nimport { HStack } from \"../common/stack\";\r\nimport ValueTypeSelect from \"./actionDetails/valueTypeSelect\";\r\n\r\nimport AddCircleIcon from \"@mui/icons-material/AddCircle\";\r\nimport CancelIcon from \"@mui/icons-material/Cancel\";\r\nimport { getSelectKey, ValueOptions } from \"./utils\";\r\nimport { useRightStores } from \"~/contexts/rightStoreContext\";\r\n\r\ninterface ConditionPanelProps {\r\n  onClose: () => void;\r\n  open: boolean;\r\n  subTitle: string;\r\n  onConfirm: (id: string) => void;\r\n}\r\n\r\nconst ConditionPanel: React.FC<ConditionPanelProps> = ({\r\n  onClose,\r\n  open,\r\n  subTitle,\r\n  onConfirm,\r\n}) => {\r\n  const store = useInteractionStoresContext();\r\n  const { globalVarStore } = useRightStores();\r\n  const condition = store.tempCondition;\r\n\r\n  const handleAddCompare = (evt: React.MouseEvent<HTMLButtonElement>) => {\r\n    const el = evt.currentTarget as HTMLButtonElement;\r\n\r\n    const dataIndex = el.getAttribute(\"data-index\");\r\n\r\n    store.addNewCompare(dataIndex ? Number(dataIndex) : undefined);\r\n  };\r\n  const handleRemoveCompare = (evt: React.MouseEvent<HTMLButtonElement>) => {\r\n    const el = evt.currentTarget as HTMLButtonElement;\r\n\r\n    const dataIndex = el.getAttribute(\"data-index\");\r\n\r\n    store.removeCompare(Number(dataIndex));\r\n  };\r\n\r\n  const handleChangeName = (evt) => {\r\n    store.updateState(() => {\r\n      condition.name = evt.target.value;\r\n    });\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    const id = store.saveConditions();\r\n    onConfirm(id);\r\n    onClose();\r\n  };\r\n\r\n  const handleChangeValue = (widgetValue: WidgetValue, evt) => {\r\n    store.updateState(() => {\r\n      if (widgetValue.type === \"entity\") {\r\n        widgetValue.value = App.intance.Database.getObjectId(evt.target.value);\r\n      } else {\r\n        widgetValue.value =\r\n          typeof widgetValue.value === \"boolean\"\r\n            ? Boolean(evt.target.value)\r\n            : evt.target.value;\r\n      }\r\n    });\r\n  };\r\n\r\n  const isNeedBool = (value: WidgetValue) =>\r\n    //@ts-ignore\r\n    ValueOptions.find((v) => v.value === getSelectKey(value))?.bool;\r\n\r\n  const handleChangeWidgetValue = (\r\n    evt,\r\n    value: WidgetValue,\r\n    value2?: WidgetValue\r\n  ) => {\r\n    const values = evt.target.value.split(\"-\");\r\n    store.updateState(() => {\r\n      value.type = values[0];\r\n      value.entityKey = values[1];\r\n      if (value2 && isNeedBool(value)) {\r\n        value2.type = \"value\";\r\n        value2.value = true;\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"md\"\r\n      open={open}\r\n      onClose={onClose}\r\n      PaperProps={{ sx: { height: \"70%\" } }}\r\n    >\r\n      <DialogHeader\r\n        onClose={onClose}\r\n        title={\"情形编辑-\" + subTitle}\r\n        sx={{ background: \"#F6F7FB\" }}\r\n      />\r\n      <DialogContent>\r\n        <HStack justifyContent=\"space-between\">\r\n          <LabelInput\r\n            label=\"情形名称\"\r\n            sx={{ flex: 1 }}\r\n            value={condition.name}\r\n            onChange={handleChangeName}\r\n          />\r\n          <CommonSelect\r\n            options={[\r\n              { label: \"匹配全部\", value: 0 },\r\n              { label: \"匹配任何\", value: 1 },\r\n            ]}\r\n            value={condition.isAll ? 0 : 1}\r\n            onChange={(evt) =>\r\n              store.updateState(() => {\r\n                //@ts-ignore\r\n                condition.isAll = evt.target.value === 0;\r\n              })\r\n            }\r\n          />\r\n        </HStack>\r\n        <Divider sx={{ my: 1 }} />\r\n        <List>\r\n          {condition.conditions.map((comp, index) => (\r\n            <ListItem\r\n              key={comp.id}\r\n              sx={{\r\n                \"&>.MuiFormControl-root\": {\r\n                  flex: 1,\r\n                },\r\n              }}\r\n            >\r\n              <ValueTypeSelect\r\n                widgetValue={comp.value1}\r\n                onChange={(evt) => {\r\n                  handleChangeWidgetValue(evt, comp.value1, comp.value2);\r\n                }}\r\n                onChangeValue={(evt) => handleChangeValue(comp.value1, evt)}\r\n                variables={globalVarStore.variables}\r\n                selectProps={{\r\n                  fullWidth: true,\r\n                  sx: { my: 1 },\r\n                }}\r\n              />\r\n              <CommonSelect\r\n                value={comp.type}\r\n                options={CompareOptions}\r\n                onChange={(evt) => {\r\n                  store.updateState(() => {\r\n                    comp.type = evt.target.value as any;\r\n                  });\r\n                }}\r\n              />\r\n              <ValueTypeSelect\r\n                widgetValue={comp.value2}\r\n                onChange={(evt) => {\r\n                  handleChangeWidgetValue(evt, comp.value2);\r\n                }}\r\n                onChangeValue={(evt) => handleChangeValue(comp.value2, evt)}\r\n                variables={globalVarStore.variables}\r\n                selectProps={{\r\n                  fullWidth: true,\r\n                  sx: { my: 1 },\r\n                }}\r\n                bool={isNeedBool(comp.value1)}\r\n              />\r\n              <Box\r\n                sx={{\r\n                  width: 80,\r\n                  display: \"flex\",\r\n                  justifyContent: \"flex-end\",\r\n                }}\r\n              >\r\n                <IconButton\r\n                  color=\"primary\"\r\n                  data-index={index}\r\n                  onClick={handleAddCompare}\r\n                >\r\n                  <AddCircleIcon />\r\n                </IconButton>\r\n                <IconButton\r\n                  color=\"error\"\r\n                  data-index={index}\r\n                  onClick={handleRemoveCompare}\r\n                >\r\n                  <CancelIcon />\r\n                </IconButton>\r\n              </Box>\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Button variant=\"contained\" onClick={handleAddCompare}>\r\n          添加条件\r\n        </Button>\r\n        <Box>\r\n          {getConditionDescription(condition.conditions, condition.isAll, 0)}\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button autoFocus onClick={onClose}>\r\n          取消\r\n        </Button>\r\n        <Button onClick={handleConfirm} autoFocus>\r\n          保存\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\nexport default observer(ConditionPanel);\r\n","import { IVariableOption, ObjectId } from \"@hc/engine\";\r\nimport ArrowDropDownIcon from \"@mui/icons-material/ArrowDropDown\";\r\nimport ArrowRightIcon from \"@mui/icons-material/ArrowRight\";\r\nimport TreeView from \"@mui/lab/TreeView\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Input,\r\n  List,\r\n  MenuItem,\r\n  Popover,\r\n} from \"@mui/material\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport * as React from \"react\";\r\nimport { useInteractionStoresContext } from \"~/contexts/interactionStoreContext\";\r\nimport { useRightStores } from \"~/contexts/rightStoreContext\";\r\nimport useContextMenu from \"~/hooks/useContextMenu\";\r\nimport { EditorIntMode, IInteractionOption } from \"~/stores/InteractionStore\";\r\nimport { getConditionDescription } from \"~/utils/interaction\";\r\nimport BlurPopover from \"../common/blurPopover\";\r\n\r\nimport { StyledTreeItem } from \"../common/customTree\";\r\nimport ActionsTreeItem from \"./actionsTreeItem\";\r\nimport ConditionPanel from \"./conditionPanel\";\r\nimport { getEntityOptions } from \"./utils\";\r\n\r\ninterface ActionListItemProps {\r\n  interaction: IInteractionOption;\r\n  eventIndex: number;\r\n}\r\n\r\nconst ActionListItem: React.FC<ActionListItemProps> = ({\r\n  interaction,\r\n  eventIndex,\r\n}) => {\r\n  const store = useInteractionStoresContext();\r\n  const { globalVarStore } = useRightStores();\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\r\n    null\r\n  );\r\n  const [checked, setChecked] = React.useState<any[]>([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const dataRef = React.useRef({ isParam: false, hasPage: false });\r\n  const [openMenu, closeMenu, MenuContainer] = useContextMenu(() => {});\r\n  const [expanded, setExpanded] = React.useState(\r\n    store.getActionAllIds(interaction)\r\n  );\r\n\r\n  const [search, setSearch] = React.useState(\"\");\r\n\r\n  const handleToggleExpand = (event, nodeIds) => {\r\n    setExpanded(nodeIds);\r\n  };\r\n\r\n  const handleAddCondition = (evt) => {\r\n    store.addNewCondition();\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    dataRef.current.isParam =\r\n      (event.target as HTMLButtonElement).getAttribute(\"data-type\") === \"param\";\r\n    dataRef.current.hasPage =\r\n      (event.target as HTMLButtonElement).getAttribute(\"data-page\") === \"1\";\r\n    setAnchorEl(event.currentTarget);\r\n\r\n    if (store.CurrentAction) {\r\n      setChecked(store.CurrentAction.data.map((d) => d.objectId));\r\n    }\r\n  };\r\n\r\n  const handleMouseEnter = (event) => {\r\n    // dataRef.current.isParam =\r\n    //   (event.target as HTMLButtonElement).getAttribute(\"data-type\") === \"param\";\r\n    // dataRef.current.hasPage =\r\n    //   (event.target as HTMLButtonElement).getAttribute(\"data-page\") === \"1\";\r\n    // if (store.CurrentAction)\r\n    //   setChecked(store.CurrentAction.data.map((d) => d.objectId));\r\n  };\r\n\r\n  const handleClose = () => {\r\n    store.NewAddActionId = \"\";\r\n    setAnchorEl(null);\r\n    setChecked([]);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const handleToggle = (value: ObjectId<any>) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n      store.addActionDataItem(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n      store.removeActionDataItem(value);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n\r\n    if (store.mode === EditorIntMode.List && currentIndex === -1) {\r\n      store.step = 3;\r\n      handleClose();\r\n    }\r\n  };\r\n  const handleToggleParam = (value: IVariableOption) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n      store.addParamItem(value.key);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n      store.removeParamItem(value.key);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleEditorCondition = () => {\r\n    store.editorCondition();\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    store.remove();\r\n    closeMenu();\r\n  };\r\n\r\n  const renderPopoverContent = () => {\r\n    if (dataRef.current.isParam) {\r\n      let vars = globalVarStore.variables;\r\n      if (search) {\r\n        vars = vars.filter((v) => v.key.includes(search));\r\n      }\r\n      return vars.map((en) => (\r\n        <ListItem key={en.key} disablePadding>\r\n          <ListItemButton\r\n            role={undefined}\r\n            onClick={handleToggleParam(en)}\r\n            dense\r\n          >\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={checked.includes(en)}\r\n                tabIndex={-1}\r\n                disableRipple\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={en.key} primary={en.key} />\r\n          </ListItemButton>\r\n        </ListItem>\r\n      ));\r\n    } else {\r\n      let EntityOptions = getEntityOptions(dataRef.current.hasPage);\r\n      if (search) {\r\n        EntityOptions = EntityOptions.filter((opt) =>\r\n          opt.label.includes(search)\r\n        );\r\n      }\r\n      return EntityOptions.map((en) => (\r\n        <ListItem key={en.value} disablePadding>\r\n          <ListItemButton\r\n            role={undefined}\r\n            onClick={handleToggle(en.objectId)}\r\n            dense\r\n          >\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={checked.includes(en.objectId)}\r\n                tabIndex={-1}\r\n                disableRipple\r\n                inputProps={{ \"aria-labelledby\": en.value }}\r\n              />\r\n            </ListItemIcon>\r\n            <ListItemText id={en.value} primary={en.label} />\r\n          </ListItemButton>\r\n        </ListItem>\r\n      ));\r\n    }\r\n  };\r\n\r\n  const handleStep3Ref = (el: HTMLElement, id: string) => {\r\n    if (store.CurrentAction?.id === id) {\r\n      store.portalContainer3 = el;\r\n    }\r\n  };\r\n\r\n  const renderList = () => {\r\n    if (interaction.conditions.length > 0) {\r\n      return interaction.conditions.map((cof, cofIndex) => (\r\n        <StyledTreeItem\r\n          key={cof.id}\r\n          nodeId={cof.id.toString()}\r\n          labelText={cof.name}\r\n          onClick={() => {\r\n            store.setAllIndex(undefined, undefined, cofIndex, eventIndex);\r\n          }}\r\n          onDoubleClick={handleEditorCondition}\r\n          desc={getConditionDescription(cof.conditions, cof.isAll, cofIndex)}\r\n        >\r\n          <ActionsTreeItem\r\n            newAddId={store.NewAddActionId}\r\n            actions={cof.actions}\r\n            onTogglePopover={handleClick}\r\n            onEnter={handleMouseEnter}\r\n            store={store}\r\n            onRef={handleStep3Ref}\r\n            onClick={(index, actIndex) => {\r\n              store.setAllIndex(index, actIndex, cofIndex, eventIndex);\r\n            }}\r\n          />\r\n        </StyledTreeItem>\r\n      ));\r\n    } else {\r\n      return (\r\n        <ActionsTreeItem\r\n          actions={interaction.actions}\r\n          onEnter={handleMouseEnter}\r\n          onClick={(index, actIndex) => {\r\n            store.setAllIndex(index, actIndex, undefined, eventIndex);\r\n          }}\r\n          store={store}\r\n          onTogglePopover={handleClick}\r\n          newAddId={store.NewAddActionId}\r\n          onRef={handleStep3Ref}\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleBlur = (evt: React.FocusEvent) => {\r\n    //@ts-ignore\r\n    let el = evt.relatedTarget as HTMLElement;\r\n    const rootEl = evt.currentTarget as HTMLElement;\r\n    let isBlur = false;\r\n    do {\r\n      if (el === rootEl) {\r\n        isBlur = true;\r\n        break;\r\n      }\r\n      el = el?.parentElement;\r\n    } while (el);\r\n\r\n    if (!isBlur) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const handleConfirmCondition = (id: string) => {\r\n    setExpanded((ids) => [...ids, id.toString()]);\r\n  };\r\n\r\n  const handleRef = (el: HTMLElement) => {\r\n    if (store.CurrentInteraction?.id === interaction.id) {\r\n      store.portalContainer = el;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TreeView\r\n        aria-label=\"gmail\"\r\n        defaultCollapseIcon={<ArrowDropDownIcon fontSize=\"large\" />}\r\n        defaultExpandIcon={<ArrowRightIcon fontSize=\"large\" />}\r\n        sx={{\r\n          flexGrow: 1,\r\n          overflowY: store.step === 0 ? \"auto\" : undefined,\r\n          width: \"100%\",\r\n        }}\r\n        onContextMenu={openMenu}\r\n        expanded={expanded}\r\n        onNodeToggle={handleToggleExpand}\r\n      >\r\n        <StyledTreeItem\r\n          nodeId={interaction.id.toString()}\r\n          data-nodeid={interaction.type + interaction.id}\r\n          labelText={interaction.label}\r\n          ref={handleRef}\r\n          sx={{ width: \"100%\", position: \"relative\" }}\r\n          onClick={() =>\r\n            store.setAllIndex(undefined, undefined, undefined, eventIndex)\r\n          }\r\n          endElement={<Button onClick={handleAddCondition}>添加条件</Button>}\r\n        >\r\n          {renderList()}\r\n        </StyledTreeItem>\r\n      </TreeView>\r\n      <BlurPopover\r\n        open={Boolean(anchorEl)}\r\n        anchorEl={anchorEl}\r\n        onClose={handleClose}\r\n        anchorOrigin={{\r\n          vertical: \"bottom\",\r\n          horizontal: \"left\",\r\n        }}\r\n        transformOrigin={{\r\n          vertical: \"top\",\r\n          horizontal: \"left\",\r\n        }}\r\n      >\r\n        <Input\r\n          placeholder=\"搜索\"\r\n          value={search}\r\n          onChange={(evt) => setSearch(evt.target.value)}\r\n        />\r\n        <List sx={{ height: 300, overflowY: \"auto\" }}>\r\n          {renderPopoverContent()}\r\n        </List>\r\n      </BlurPopover>\r\n      <ConditionPanel\r\n        subTitle={interaction.label}\r\n        open={open}\r\n        onClose={() => setOpen(false)}\r\n        onConfirm={handleConfirmCondition}\r\n      />\r\n      <MenuContainer>\r\n        <MenuItem onClick={handleDelete}>删除</MenuItem>\r\n      </MenuContainer>\r\n    </>\r\n  );\r\n};\r\nexport default observer(ActionListItem);\r\n","import { Paper, PaperProps } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Rnd } from \"react-rnd\";\r\n\r\nconst MIN_WIDTH = 800;\r\nconst MIN_HEIGHT = 600;\r\n\r\nexport function RNDComponent(props: PaperProps) {\r\n  const [state, setState] = React.useState({\r\n    width: (0.9 * window.innerWidth).toString(),\r\n    height: (0.9 * window.innerHeight).toString(),\r\n    x: 0.05 * window.innerWidth,\r\n    y: 0.05 * window.innerHeight,\r\n  });\r\n\r\n  return (\r\n    <Rnd\r\n      dragHandleClassName=\"draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n      minWidth={MIN_WIDTH}\r\n      minHeight={MIN_HEIGHT}\r\n      maxHeight={0.9 * window.innerHeight}\r\n      maxWidth={0.9 * window.innerWidth}\r\n      size={{ width: state.width, height: state.height }}\r\n      position={{ x: state.x, y: state.y }}\r\n      onDragStop={(e, d) => {\r\n        if (d.y < 0) d.y = 0;\r\n        setState({ ...state, x: d.x, y: d.y });\r\n      }}\r\n      onResizeStop={(e, direction, ref, delta, position) => {\r\n        setState({\r\n          width: ref.style.width,\r\n          height: ref.style.height,\r\n          ...position,\r\n        });\r\n      }}\r\n    >\r\n      <Paper\r\n        {...props}\r\n        sx={{\r\n          \"&\": {\r\n            margin: 0,\r\n            width: \"100%\",\r\n            minWidth: MIN_WIDTH,\r\n            minHeight: MIN_HEIGHT,\r\n            height: \"100%\",\r\n            maxHeight: \"100%\",\r\n          },\r\n        }}\r\n      />\r\n    </Rnd>\r\n  );\r\n}\r\n","import { Box, Skeleton } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\ninterface NoneActionDetailProps {}\r\n\r\nconst NoneActionDetail: React.FC<NoneActionDetailProps> = (props) => {\r\n  return (\r\n    <Box>\r\n      <Skeleton />\r\n      <Skeleton />\r\n      <Skeleton />\r\n    </Box>\r\n  );\r\n};\r\nexport default NoneActionDetail;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport {\r\n  CommonSelectEntity,\r\n  CommonSelectParam,\r\n} from \"~/components/common/commonInteraction\";\r\nimport { useInteractionStoresContext } from \"~/contexts/interactionStoreContext\";\r\nimport { useRightStores } from \"~/contexts/rightStoreContext\";\r\nimport { App } from \"~/intance\";\r\nimport { InteractionConfig } from \"../config\";\r\nimport NoneActionDetail from \"./noneAction\";\r\n\r\ninterface DetailProps {}\r\n\r\nconst Detail: React.FC<DetailProps> = () => {\r\n  const store = useInteractionStoresContext();\r\n  const { globalVarStore } = useRightStores();\r\n\r\n  const handleChange = (evt, opt, reason) => {\r\n    if (reason === \"selectOption\") {\r\n      if (opt.value === 0) {\r\n        store.addActionDataItem(undefined);\r\n      } else {\r\n        const oid = App.intance.Database.getObjectId(opt.value) as any;\r\n        if (oid) store.addActionDataItem(oid);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleChangeParam = (evt) => {\r\n    if (evt.target.value) {\r\n      store.addParamItem(evt.target.value);\r\n    }\r\n  };\r\n\r\n  if (!store.CurrentActionDetail) {\r\n    if (store.step === 3) {\r\n      if (store.CurrentAction?.target) {\r\n        if (store.CurrentAction?.type === \"Dispatch\") {\r\n          return (\r\n            <CommonSelectEntity\r\n              openSelect\r\n              value={null}\r\n              onChange={handleChange}\r\n              hasPage\r\n            />\r\n          );\r\n        } else\r\n          return (\r\n            <CommonSelectEntity\r\n              openSelect\r\n              value={null}\r\n              onChange={handleChange}\r\n            />\r\n          );\r\n      }\r\n      if (store.CurrentAction?.param) {\r\n        return (\r\n          <CommonSelectParam\r\n            variables={globalVarStore.variables}\r\n            onChange={handleChangeParam}\r\n          />\r\n        );\r\n      }\r\n    }\r\n    return <NoneActionDetail />;\r\n  }\r\n\r\n  const action = store.CurrentAction;\r\n\r\n  if (InteractionConfig[action.type]?.detail)\r\n    return InteractionConfig[action.type].detail;\r\n\r\n  return <div>未知动作类型</div>;\r\n};\r\nexport default observer(Detail);\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\n\r\nimport Detail from \"./actionDetails/detail\";\r\n\r\ninterface ActionDetailProps {}\r\n\r\nconst ActionDetail: React.FC<ActionDetailProps> = (props) => {\r\n  return (\r\n    <Box p=\"8px\">\r\n      <Typography>3.设置动作</Typography>\r\n      <Detail />\r\n    </Box>\r\n  );\r\n};\r\nexport default observer(ActionDetail);\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { useInteractionStoresContext } from \"~/contexts/interactionStoreContext\";\r\nimport ActionListItem from \"./actionListItem\";\r\n\r\ninterface ActionListPanelProps {}\r\n\r\nconst ActionListPanel: React.FC<ActionListPanelProps> = () => {\r\n  const store = useInteractionStoresContext();\r\n\r\n  return (\r\n    <Box p=\"8px\">\r\n      <Typography>2.组织动作</Typography>\r\n      {store.interactions.map((action, index) => (\r\n        <ActionListItem interaction={action} key={index} eventIndex={index} />\r\n      ))}\r\n    </Box>\r\n  );\r\n};\r\nexport default observer(ActionListPanel);\r\n","import React from \"react\";\r\nimport {\r\n  Collapse,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  Button,\r\n  ListItemText,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport { ExpandLess, ExpandMore } from \"@mui/icons-material\";\r\nimport GridViewIcon from \"@mui/icons-material/GridView\";\r\nimport { useInteractionStoresContext } from \"~/contexts/interactionStoreContext\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ntype listItemProps = {\r\n  label: string;\r\n  type?: string;\r\n};\r\n\r\ninterface InteractionItemProps {\r\n  title: string;\r\n  open: boolean;\r\n  toggle: (event: React.MouseEvent<HTMLDivElement>) => void;\r\n  list: listItemProps[];\r\n  isEvent: boolean;\r\n}\r\n\r\nconst InteractionItem: React.FC<InteractionItemProps> = ({\r\n  title,\r\n  open,\r\n  toggle,\r\n  list,\r\n  isEvent,\r\n}) => {\r\n  const store = useInteractionStoresContext();\r\n\r\n  const handleClick = (event: React.SyntheticEvent) => {\r\n    const type = (event.target as HTMLElement).getAttribute(\"data-type\");\r\n    const d = list.find((l) => l.type === type);\r\n    if (!d) return;\r\n    if (isEvent) {\r\n      store.changeTabIndex(1);\r\n      store.addInteraction(d as any);\r\n    } else {\r\n      store.addActionItem(d);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ListItemButton onClick={toggle} data-key={title}>\r\n        <ListItemIcon>\r\n          <GridViewIcon />\r\n        </ListItemIcon>\r\n        <ListItemText primary={title} />\r\n        {open ? <ExpandLess /> : <ExpandMore />}\r\n      </ListItemButton>\r\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n        <Grid container spacing={1} onClick={handleClick}>\r\n          {list.map((l, index) => (\r\n            <Grid item xs={6} key={index} sx={{ textAlign: \"center\" }}>\r\n              <Button\r\n                fullWidth\r\n                sx={{\r\n                  backgroundColor: \"#F4F4F4\",\r\n                  fontWeight: 400,\r\n                  color: \"#424B54\",\r\n                }}\r\n                disabled={isEvent && store.isUsedEvent(l.type)}\r\n                data-type={l.type}\r\n                variant=\"text\"\r\n              >\r\n                {l.label}\r\n              </Button>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Collapse>\r\n    </>\r\n  );\r\n};\r\nexport default observer(InteractionItem);\r\n","import React from \"react\";\r\nimport {\r\n  Collapse,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  Button,\r\n  ListItemText,\r\n  Grid,\r\n  Divider,\r\n} from \"@mui/material\";\r\nimport { ExpandLess, ExpandMore } from \"@mui/icons-material\";\r\nimport GridViewIcon from \"@mui/icons-material/GridView\";\r\nimport { useInteractionStoresContext } from \"~/contexts/interactionStoreContext\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ntype listItemProps = {\r\n  label: string;\r\n  type?: string;\r\n};\r\n\r\ninterface InteractionItemProps {\r\n  data: any;\r\n  isEvent: boolean;\r\n}\r\n\r\nconst InteractionItem2: React.FC<InteractionItemProps> = observer(\r\n  ({ data, isEvent }) => {\r\n    const store = useInteractionStoresContext();\r\n\r\n    const handleClick = (event: React.SyntheticEvent) => {\r\n      const type = (event.currentTarget as HTMLElement).getAttribute(\r\n        \"data-type\"\r\n      );\r\n      const d = data.list.find((l) => l.type === type);\r\n      if (!d) return;\r\n      if (isEvent) {\r\n        store.changeTabIndex(1);\r\n        store.addInteraction(d as any);\r\n        store.step = 2;\r\n      } else {\r\n        store.addActionItem(d);\r\n        store.step = 3;\r\n      }\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Divider>{data.label}</Divider>\r\n        {data.list.map((d) => (\r\n          <ListItemButton\r\n            disabled={isEvent && store.isUsedEvent(d.type)}\r\n            data-type={d.type}\r\n            onClick={handleClick}\r\n            key={d.type}\r\n          >\r\n            <ListItemText primary={d.label} />\r\n          </ListItemButton>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n);\r\nexport default InteractionItem2;\r\n","import {\r\n  Box,\r\n  List,\r\n  Stack,\r\n  Typography,\r\n  Paper,\r\n  InputBase,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nimport InteractionItem from \"./InteractionItem\";\r\nimport InteractionItem2 from \"./InteractionItem2\";\r\n\r\ninterface AddEventPanelProps {\r\n  dataList: any[];\r\n  title: string;\r\n  isList?: boolean;\r\n  onClose?: () => void;\r\n}\r\nlet unMount = false;\r\nlet timer;\r\n\r\nconst AddDataPanel: React.FC<AddEventPanelProps> = ({\r\n  dataList,\r\n  title,\r\n  isList,\r\n  onClose,\r\n}) => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const containerRef = useRef<HTMLElement>(null);\r\n  const [openKeys, setOpenKeys] = useState(\r\n    new Set(dataList.map((l) => l.label))\r\n  );\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    const k = event.currentTarget.getAttribute(\"data-key\");\r\n    if (openKeys.has(k)) openKeys.delete(k);\r\n    else openKeys.add(k);\r\n    setOpenKeys(new Set(openKeys));\r\n  };\r\n\r\n  const handleBlur = (evt: React.FocusEvent) => {\r\n    let relaElement = evt.relatedTarget as HTMLElement;\r\n    if (!relaElement) return;\r\n    const parent = containerRef.current;\r\n\r\n    timer = setTimeout(() => {\r\n      if (unMount) return;\r\n      if (!parent?.parentNode) return;\r\n      while (relaElement) {\r\n        if (relaElement.parentElement === parent) {\r\n          return;\r\n        }\r\n        relaElement = relaElement.parentElement;\r\n      }\r\n      onClose?.();\r\n    }, 200);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      timer && clearTimeout(timer);\r\n      unMount = true;\r\n    };\r\n  });\r\n\r\n  if (isList) {\r\n    return (\r\n      <Box\r\n        sx={{\r\n          width: isList ? 250 : \"100%\",\r\n          bgcolor: \"background.paper\",\r\n          p: 1,\r\n        }}\r\n        ref={containerRef}\r\n        component={Paper}\r\n      >\r\n        <Stack flexDirection=\"row\" sx={{ height: \"5%\" }}>\r\n          <Paper\r\n            sx={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <InputBase\r\n              value={query}\r\n              sx={{ flex: 1 }}\r\n              placeholder=\"选择触发事件\"\r\n              autoFocus\r\n              onBlur={handleBlur}\r\n            />\r\n            <IconButton>\r\n              <SearchIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Paper>\r\n        </Stack>\r\n        <List\r\n          sx={{ overflowY: \"auto\", maxHeight: 400 }}\r\n          component=\"nav\"\r\n          aria-labelledby=\"nested-list-subheader\"\r\n        >\r\n          {dataList.map((data) => (\r\n            <InteractionItem2\r\n              key={data.label}\r\n              data={data}\r\n              isEvent={title.includes(\"事件\")}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        width: \"100%\",\r\n        maxWidth: 360,\r\n        bgcolor: \"background.paper\",\r\n        overflowY: \"auto\",\r\n      }}\r\n    >\r\n      <Typography> {title}</Typography>\r\n      <List component=\"nav\" aria-labelledby=\"nested-list-subheader\">\r\n        {dataList.map((data) => (\r\n          <InteractionItem\r\n            key={data.label}\r\n            title={data.label}\r\n            open={openKeys.has(data.label)}\r\n            toggle={handleClick}\r\n            list={data.list}\r\n            isEvent={title.includes(\"事件\")}\r\n          />\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n};\r\nexport default AddDataPanel;\r\n","import React from \"react\";\r\nimport AddDataPanel from \"./addPanel\";\r\nimport { ActionList, EntityEventList, EventList } from \"./dataList\";\r\n\r\nexport const PageIntTabs = [\r\n  {\r\n    label: \"添加事件\",\r\n    id: \"event\",\r\n    component: <AddDataPanel title=\"1.事件\" dataList={EventList} />,\r\n  },\r\n  {\r\n    label: \"添加动作\",\r\n    id: \"action\",\r\n    component: <AddDataPanel title=\"1.动作\" dataList={ActionList} />,\r\n  },\r\n];\r\n\r\nexport const EntityIntTabs = [\r\n  {\r\n    label: \"添加事件\",\r\n    id: \"event\",\r\n    component: <AddDataPanel title=\"1.事件\" dataList={EntityEventList} />,\r\n  },\r\n  {\r\n    label: \"添加动作\",\r\n    id: \"action\",\r\n    component: <AddDataPanel title=\"1.动作\" dataList={ActionList} />,\r\n  },\r\n];\r\n","import CloseIcon from \"@mui/icons-material/Close\";\r\nimport {\r\n  Box,\r\n  Card,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Stack,\r\n  Tab,\r\n  Tabs,\r\n} from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport Slide from \"@mui/material/Slide\";\r\nimport { TransitionProps } from \"@mui/material/transitions\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport * as React from \"react\";\r\nimport { useInteractionStoresContext } from \"~/contexts/interactionStoreContext\";\r\nimport DialogHeader from \"../common/dialogHeader\";\r\nimport { RNDComponent } from \"../common/rnd\";\r\n\r\nimport { a11yProps, TabPanel } from \"../common/tabPanel\";\r\nimport ActionDetail from \"./actionDetail\";\r\nimport ActionListPanel from \"./actionList\";\r\nimport { EntityIntTabs, PageIntTabs } from \"./tabs\";\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & {\r\n    children: React.ReactElement;\r\n  },\r\n  ref: React.Ref<unknown>\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\ninterface InteractionPageProps {\r\n  onClose: (e, reasion?: string) => void;\r\n}\r\n\r\nconst InteractionPage: React.FC<InteractionPageProps> = ({ onClose }) => {\r\n  const store = useInteractionStoresContext();\r\n\r\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    store.changeTabIndex(newValue);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    store.save();\r\n    handleClose(null);\r\n  };\r\n  const handleClose = (evt, reason?) => {\r\n    store.resetIndexs();\r\n    store.UseReal = true;\r\n    onClose(evt, reason);\r\n  };\r\n\r\n  const tabs = store.SelectEntity ? EntityIntTabs : PageIntTabs;\r\n\r\n  return (\r\n    <Dialog\r\n      fullWidth\r\n      maxWidth=\"xl\"\r\n      open={true}\r\n      onClose={handleClose}\r\n      TransitionComponent={Transition}\r\n      PaperComponent={RNDComponent}\r\n    >\r\n      <DialogHeader\r\n        onClose={handleClose}\r\n        title=\"交互设计\"\r\n        className=\"draggable-dialog-title\"\r\n        sx={{ cursor: \"move\" }}\r\n      />\r\n      <DialogContent>\r\n        <Box height=\"100%\">\r\n          <Box height={50}>\r\n            <Tabs\r\n              value={store.tabIndex}\r\n              onChange={handleChange}\r\n              aria-label=\"交互设计\"\r\n            >\r\n              {tabs.map((t, index) => (\r\n                <Tab\r\n                  key={t.id}\r\n                  label={t.label}\r\n                  {...a11yProps(index)}\r\n                  disabled={store.currentEventIndex === -1 && index === 1}\r\n                />\r\n              ))}\r\n            </Tabs>\r\n          </Box>\r\n          <Stack\r\n            flexDirection=\"row\"\r\n            component={Card}\r\n            raised\r\n            elevation={3}\r\n            sx={{ height: \"calc(100% - 50px)\" }}\r\n          >\r\n            <Box width=\"30%\" component={Card} overflow=\"auto\">\r\n              {tabs.map((t, index) => (\r\n                <TabPanel\r\n                  value={store.tabIndex}\r\n                  key={index}\r\n                  currentValue={index}\r\n                >\r\n                  {t.component}\r\n                </TabPanel>\r\n              ))}\r\n            </Box>\r\n            <Box flex={1} component={Card} overflow=\"auto\">\r\n              <ActionListPanel />\r\n            </Box>\r\n            <Box flex={1} component={Card}>\r\n              <ActionDetail />\r\n            </Box>\r\n          </Stack>\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button autoFocus onClick={handleClose}>\r\n          取消\r\n        </Button>\r\n        <Button onClick={handleConfirm} autoFocus>\r\n          保存\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\nexport default observer(InteractionPage);\r\n","import Add from \"@mui/icons-material/Add\";\r\nimport { Box, IconButton, Paper, Popover } from \"@mui/material\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Observer, observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport { InteractionStoreContext } from \"~/contexts/interactionStoreContext\";\r\nimport { EditorIntMode, interactionStore } from \"~/stores/InteractionStore\";\r\n\r\nimport ActionListItem from \"./actionListItem\";\r\nimport InteractionPage from \"./InteractionPage\";\r\n\r\nimport AspectRatioIcon from \"@mui/icons-material/AspectRatio\";\r\nimport AddDataPanel from \"./addPanel\";\r\nimport { ActionList, EventList } from \"./dataList\";\r\nimport Detail from \"./actionDetails/detail\";\r\nimport { HStack } from \"../common/stack\";\r\nimport { useStores } from \"~/contexts/store-context\";\r\nimport EmptyPanel from \"../common/empty\";\r\n\r\ninterface InteractionProps {}\r\n\r\n/**交互设计 */\r\nconst Interaction: React.FC<InteractionProps> = observer(() => {\r\n  const { fileStore } = useStores();\r\n  const [open, setOpen] = useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\r\n    null\r\n  );\r\n\r\n  const handleClickOpen = () => {\r\n    interactionStore.UseReal = false;\r\n    interactionStore.mode = EditorIntMode.Modal;\r\n    interactionStore.resetIndexs();\r\n    interactionStore.save2VsInteractions();\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleStart = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n    interactionStore.step = 1;\r\n  };\r\n  const handleEnd = () => {\r\n    setAnchorEl(null);\r\n    interactionStore.step = 0;\r\n  };\r\n\r\n  const handleClose = (e, reason?: string) => {\r\n    if (reason && reason === \"backdropClick\") return;\r\n    interactionStore.mode = EditorIntMode.List;\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    interactionStore.step = 0;\r\n    interactionStore.updateDatabase();\r\n  };\r\n  const handleCancel = () => {\r\n    interactionStore.step = 0;\r\n    interactionStore.isEditor = false;\r\n    interactionStore.remove();\r\n    interactionStore.updateDatabase();\r\n  };\r\n  const handleCloseEditor = () => {\r\n    interactionStore.step = 0;\r\n    if (interactionStore.isEditor) {\r\n      interactionStore.isEditor = false;\r\n    } else {\r\n      interactionStore.remove();\r\n      interactionStore.updateDatabase();\r\n    }\r\n  };\r\n\r\n  const save = () => {\r\n    fileStore.save();\r\n  };\r\n\r\n  if (!fileStore.currentFileId) {\r\n    return (\r\n      <EmptyPanel\r\n        title={\r\n          <Box>\r\n            <Box>请先打开或创建一个新场景</Box>\r\n            <Box>\r\n              或者点击<Button onClick={save}>保存</Button>{\" \"}\r\n            </Box>\r\n          </Box>\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <InteractionStoreContext.Provider value={interactionStore}>\r\n      <Box textAlign=\"right\" width=\"100%\">\r\n        <IconButton onClick={handleClickOpen}>\r\n          <AspectRatioIcon />\r\n        </IconButton>\r\n        {open && <InteractionPage onClose={handleClose} />}\r\n      </Box>\r\n      <Box width=\"100%\">\r\n        {interactionStore.RealInteractionList.map((action, index) => (\r\n          <ActionListItem\r\n            interaction={action}\r\n            key={action.id}\r\n            eventIndex={index}\r\n          />\r\n        ))}\r\n      </Box>\r\n      <Box width=\"100%\" position=\"relative\">\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          fullWidth\r\n          startIcon={<Add />}\r\n          onClick={handleStart}\r\n        >\r\n          添加交互\r\n        </Button>\r\n        <Popover\r\n          open={!!(interactionStore.step === 1)}\r\n          anchorEl={anchorEl}\r\n          onClose={handleEnd}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n        >\r\n          <AddDataPanel\r\n            isList\r\n            title=\"事件\"\r\n            dataList={EventList}\r\n            onClose={handleEnd}\r\n          />\r\n        </Popover>\r\n        <Popover\r\n          open={\r\n            !!(\r\n              interactionStore.portalContainer?.isConnected &&\r\n              interactionStore.step === 2\r\n            )\r\n          }\r\n          anchorEl={interactionStore.portalContainer}\r\n          onClose={handleEnd}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n        >\r\n          <AddDataPanel\r\n            isList\r\n            title=\"动作\"\r\n            dataList={ActionList}\r\n            onClose={handleEnd}\r\n          />\r\n        </Popover>\r\n        <Popover\r\n          open={\r\n            !!(\r\n              interactionStore.portalContainer3?.isConnected &&\r\n              interactionStore.step === 3\r\n            )\r\n          }\r\n          anchorEl={interactionStore.portalContainer3}\r\n          onClose={handleCloseEditor}\r\n          anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"left\",\r\n          }}\r\n          PaperProps={{ sx: { overflow: \"visible\" } }}\r\n        >\r\n          <Paper sx={{ width: 300, p: 1 }}>\r\n            <Detail />\r\n            <HStack justifyContent=\"space-between\" sx={{ mt: 1 }}>\r\n              <Button color=\"primary\" onClick={handleConfirm}>\r\n                确定\r\n              </Button>\r\n              <Button color=\"error\" onClick={handleCancel}>\r\n                {interactionStore.isEditor ? \"删除\" : \"取消\"}\r\n              </Button>\r\n            </HStack>\r\n          </Paper>\r\n        </Popover>\r\n      </Box>\r\n    </InteractionStoreContext.Provider>\r\n  );\r\n});\r\nexport default Interaction;\r\n","import type { DataBind } from \"@hc/engine\";\r\n\r\nexport type IProperty = {\r\n  key: string;\r\n  value: any;\r\n  type: string;\r\n  title: string;\r\n  unit?: string;\r\n  object?: DataBind;\r\n};\r\n\r\nexport default {\r\n  Box: [\r\n    {\r\n      key: \"Depth\",\r\n      value: 1,\r\n      type: \"number\",\r\n      title: \"长\",\r\n    },\r\n    {\r\n      key: \"Width\",\r\n      value: 1,\r\n      type: \"number\",\r\n      title: \"宽\",\r\n    },\r\n    {\r\n      key: \"Height\",\r\n      value: 1,\r\n      type: \"number\",\r\n      title: \"高\",\r\n    },\r\n  ],\r\n  Sphere: [\r\n    {\r\n      key: \"Diameter\",\r\n      value: 1,\r\n      type: \"number\",\r\n      title: \"直径\",\r\n    },\r\n    // {\r\n    //   key: \"Arc\",\r\n    //   value: 1,\r\n    //   type: \"number\",\r\n    //   title: \"弧度\",\r\n    // },\r\n  ],\r\n  Plane: [\r\n    {\r\n      key: \"Width\",\r\n      value: 1,\r\n      type: \"number\",\r\n      title: \"宽\",\r\n    },\r\n    {\r\n      key: \"Height\",\r\n      value: 1,\r\n      type: \"number\",\r\n      title: \"高\",\r\n    },\r\n  ],\r\n  Cylinder: [\r\n    {\r\n      key: \"DiameterTop\",\r\n      value: 1,\r\n      type: \"number\",\r\n      title: \"上圆直径\",\r\n    },\r\n    {\r\n      key: \"DiameterBottom\",\r\n      value: 1,\r\n      type: \"number\",\r\n      title: \"下圆直径\",\r\n    },\r\n    {\r\n      key: \"Height\",\r\n      value: 1,\r\n      type: \"number\",\r\n      title: \"高\",\r\n    },\r\n    // {\r\n    //   key: \"Tessellation\",\r\n    //   value: 1,\r\n    //   type: \"number\",\r\n    //   title: \"圆段数\",\r\n    // },\r\n    // {\r\n    //   key: \"Arc\",\r\n    //   value: 1,\r\n    //   type: \"number\",\r\n    //   title: \"弧度\",\r\n    // },\r\n  ],\r\n  Capsule: [\r\n    {\r\n      key: \"Radius\",\r\n      value: 1,\r\n      type: \"number\",\r\n      title: \"半径\",\r\n    },\r\n    // {\r\n    //   key: \"RadiusTop\",\r\n    //   value: 1,\r\n    //   type: \"number\",\r\n    //   title: \"顶部半径\",\r\n    // },\r\n    // {\r\n    //   key: \"RadiusBottom\",\r\n    //   value: 1,\r\n    //   type: \"number\",\r\n    //   title: \"底部半径\",\r\n    // },\r\n    {\r\n      key: \"Height\",\r\n      value: 1,\r\n      type: \"number\",\r\n      title: \"高\",\r\n    },\r\n    {\r\n      key: \"Subdivisions\",\r\n      value: 1,\r\n      type: \"number\",\r\n      title: \"管段数\",\r\n    },\r\n    {\r\n      key: \"Tessellation\",\r\n      value: 1,\r\n      type: \"number\",\r\n      title: \"圆段数\",\r\n    },\r\n    {\r\n      key: \"CapSubdivisions\",\r\n      value: 1,\r\n      type: \"number\",\r\n      title: \"帽段数\",\r\n    },\r\n    // {\r\n    //   key: \"TopCapSubdivisions\",\r\n    //   value: 1,\r\n    //   type: \"number\",\r\n    //   title: \"顶部帽段数\",\r\n    // },\r\n    // {\r\n    //   key: \"BottomCapSubdivisions\",\r\n    //   value: 1,\r\n    //   type: \"number\",\r\n    //   title: \"底部帽段数\",\r\n    // },\r\n  ],\r\n  Ground: [\r\n    {\r\n      key: \"Width\",\r\n      value: 1,\r\n      type: \"number\",\r\n      title: \"宽\",\r\n    },\r\n    {\r\n      key: \"Height\",\r\n      value: 1,\r\n      type: \"number\",\r\n      title: \"高\",\r\n    },\r\n  ],\r\n} as Record<string, IProperty[]>;\r\n","import { Button, ButtonProps, Menu, MenuItem } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\n\r\ninterface ButtonMenuListProps {\r\n  title: string;\r\n  options: { label: string; onClick: (close: () => void) => void }[];\r\n  buttonProps?: ButtonProps;\r\n}\r\n\r\nconst ButtonMenuList: React.FC<ButtonMenuListProps> = ({\r\n  title,\r\n  options,\r\n  buttonProps = {},\r\n}) => {\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={handleClick} {...buttonProps}>\r\n        {title}\r\n      </Button>\r\n      <Menu\r\n        id=\"basic-menu\"\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={handleClose}\r\n        MenuListProps={{\r\n          \"aria-labelledby\": \"basic-button\",\r\n        }}\r\n      >\r\n        {options.map((opt, index) => (\r\n          <MenuItem key={index} onClick={() => opt.onClick(handleClose)}>\r\n            {opt.label}\r\n          </MenuItem>\r\n        ))}\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\nexport default ButtonMenuList;\r\n","import {\r\n  Box,\r\n  Button,\r\n  FormControlLabel,\r\n  IconButton,\r\n  InputAdornment,\r\n  ListItem,\r\n  ListItemButton,\r\n  ListItemText,\r\n  TextareaAutosize,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport CommonSelect from \"../common/select\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport { HStack } from \"../common/stack\";\r\nimport ButtonMenuList from \"../common/buttonMenuList\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nexport interface IApiOption {\r\n  type: string;\r\n  params: { type: string; value: string; key: string; id: number }[];\r\n  url: string;\r\n  time: string;\r\n  filter: string;\r\n  response?: string;\r\n  useTime: boolean;\r\n}\r\n\r\ninterface ApiDataPanelProps {\r\n  data: IApiOption;\r\n  onChange: (evt) => void;\r\n  addParam: () => void;\r\n  updateParam: (index: number, par) => void;\r\n  deleteParam: (index: number) => void;\r\n}\r\n\r\nconst ApiDataPanel: React.FC<ApiDataPanelProps> = ({\r\n  data,\r\n  onChange,\r\n  addParam,\r\n  updateParam,\r\n  deleteParam,\r\n}) => {\r\n  return (\r\n    <>\r\n      <ListItem>\r\n        <CommonSelect\r\n          value={data.type}\r\n          fullWidth\r\n          options={[\"GET\", \"POST\"]}\r\n          label=\"请求方式\"\r\n        />\r\n      </ListItem>\r\n      <ListItem>\r\n        <TextField\r\n          fullWidth\r\n          label=\"请求地址\"\r\n          size=\"small\"\r\n          value={data.url}\r\n          name=\"url\"\r\n          onChange={onChange}\r\n        />\r\n      </ListItem>\r\n      {data.params.map((par, index) => (\r\n        <ListItem key={par.id}>\r\n          <Box>\r\n            <HStack justifyContent=\"space-between\">\r\n              <Typography>参数{index + 1}</Typography>\r\n              <IconButton onClick={() => deleteParam(index)}>\r\n                <DeleteIcon />\r\n              </IconButton>\r\n            </HStack>\r\n            <TextField\r\n              label=\"键\"\r\n              size=\"small\"\r\n              sx={{ mb: 1 }}\r\n              value={par.key}\r\n              onChange={(evt) => updateParam(index, { key: evt.target.value })}\r\n            />\r\n            <HStack>\r\n              <TextField\r\n                sx={{ width: \"70%\" }}\r\n                label=\"值\"\r\n                size=\"small\"\r\n                value={par.value}\r\n                onChange={(evt) =>\r\n                  updateParam(index, { value: evt.target.value })\r\n                }\r\n              />\r\n              <ButtonMenuList\r\n                buttonProps={{ variant: \"contained\", size: \"small\" }}\r\n                title=\"参数来源\"\r\n                options={[{ label: \"组件值\", onClick: (close) => close() }]}\r\n              />\r\n            </HStack>\r\n          </Box>\r\n        </ListItem>\r\n      ))}\r\n      <ListItem>\r\n        <Button variant=\"contained\" onClick={addParam}>\r\n          添加参数\r\n        </Button>\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemText>返回值</ListItemText>\r\n      </ListItem>\r\n      <ListItem>\r\n        <TextareaAutosize\r\n          aria-label=\"展示返回值\"\r\n          minRows={3}\r\n          placeholder=\"仅展示返回值\"\r\n          value={data.response}\r\n          style={{ width: 300 }}\r\n        />\r\n      </ListItem>\r\n      <ListItem>\r\n        <ListItemText>过滤器</ListItemText>\r\n      </ListItem>\r\n      <ListItem>\r\n        <TextareaAutosize\r\n          aria-label=\"filter\"\r\n          minRows={3}\r\n          placeholder=\"过滤函数\"\r\n          value={data.filter}\r\n          name=\"filter\"\r\n          onChange={onChange}\r\n          style={{ width: 300 }}\r\n        />\r\n      </ListItem>\r\n      <ListItem>\r\n        <FormControlLabel\r\n          control={<Checkbox />}\r\n          checked={data.useTime}\r\n          onChange={onChange}\r\n          name=\"useTime\"\r\n          label=\"定时刷新\"\r\n          color=\"primary\"\r\n          sx={{ width: 200 }}\r\n        />\r\n        {data.useTime && (\r\n          <TextField\r\n            value={data.time}\r\n            name=\"time\"\r\n            onChange={onChange}\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">频率</InputAdornment>\r\n              ),\r\n              endAdornment: (\r\n                <InputAdornment position=\"start\">秒</InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        )}\r\n      </ListItem>\r\n    </>\r\n  );\r\n};\r\nexport default ApiDataPanel;\r\n","import { ListItem, InputBase, InputLabel, FormControl } from \"@mui/material\";\r\nimport { alpha, styled } from \"@mui/material/styles\";\r\nimport React, { useState } from \"react\";\r\nimport { IDeviceDataOption } from \"./index\";\r\ninterface AliPanelProps {\r\n  data: IDeviceDataOption;\r\n  onChange: (d: IDeviceDataOption) => void;\r\n}\r\nconst BootstrapInput = styled(InputBase)(({ theme }) => ({\r\n  \"label + &\": {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  \"& .MuiInputBase-input\": {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"auto\",\r\n    padding: \"10px 12px\",\r\n    transition: theme.transitions.create([\r\n      \"border-color\",\r\n      \"background-color\",\r\n      \"box-shadow\",\r\n    ]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}));\r\nconst AliPanel: React.FC<AliPanelProps> = ({ data, onChange }) => {\r\n  return (\r\n    <>\r\n      <ListItem>\r\n        <FormControl variant=\"standard\">\r\n          <InputLabel shrink htmlFor=\"accound\">\r\n            ali账号\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            id=\"accound\"\r\n            value={data.accountName}\r\n            onChange={(e) => {\r\n              let temp = { ...data, accountName: e.target.value };\r\n              onChange(temp);\r\n            }}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <ListItem>\r\n        <FormControl variant=\"standard\">\r\n          <InputLabel shrink htmlFor=\"prod\">\r\n            产品\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            id=\"prod\"\r\n            value={data.prodName}\r\n            onChange={(e) => {\r\n              let temp = { ...data, prodName: e.target.value };\r\n              onChange(temp);\r\n            }}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <ListItem>\r\n        <FormControl variant=\"standard\">\r\n          <InputLabel shrink htmlFor=\"device\">\r\n            设备\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            id=\"device\"\r\n            value={data.deviceName}\r\n            onChange={(e) => {\r\n              let temp = { ...data, deviceName: e.target.value };\r\n              onChange(temp);\r\n            }}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <ListItem>\r\n        <FormControl variant=\"standard\">\r\n          <InputLabel shrink htmlFor=\"fun\">\r\n            属性\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            id=\"fun\"\r\n            value={data.funName}\r\n            onChange={(e) => {\r\n              let temp = { ...data, funName: e.target.value };\r\n              onChange(temp);\r\n            }}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n    </>\r\n  );\r\n};\r\nexport default AliPanel;\r\n","import { HistronApi, CloudauthApi } from \"~/apis\";\r\nimport {\r\n  getReq,\r\n  myAxios,\r\n  postReq,\r\n  putReq,\r\n  ResponseStatus,\r\n} from \"~/utils/axios\";\r\nimport axios from \"axios\";\r\nlet instance = axios.create({});\r\ninstance.defaults.baseURL = HISTRON_URL;\r\nexport async function getCloudauthList(params) {\r\n  const datas = [];\r\n  const result = await getReq(CloudauthApi.list, {\r\n    params: {\r\n      project_id: params.projectId,\r\n      type: params.source,\r\n    },\r\n  });\r\n  if (result.code === ResponseStatus.Ok) {\r\n    let resData = result.data;\r\n    if (resData) {\r\n      Array.isArray(resData.list) &&\r\n        resData.list.forEach((element) => {\r\n          let data = {\r\n            name: \"\",\r\n            id: 0,\r\n          };\r\n          data.id = element.id;\r\n          data.name = element.name;\r\n          datas.push(data);\r\n        });\r\n    }\r\n\r\n    return datas;\r\n  }\r\n  return null;\r\n}\r\nexport async function getCloudauthSign(params) {\r\n  const result = await getReq(CloudauthApi.sign + \"/\" + params.id);\r\n  if (result.code === ResponseStatus.Ok) {\r\n    let data = { appKey: \"\", timestamp: \"\", sign: \"\" },\r\n      resData = result.data;\r\n    data.appKey = resData.app_key;\r\n    data.timestamp = resData.timestamp;\r\n    data.sign = resData.sign;\r\n    return data;\r\n  }\r\n  return null;\r\n}\r\nexport async function getProdList(params) {\r\n  const datas = [];\r\n  const result = await instance.get(HistronApi.prodList, {\r\n    params: {\r\n      appkey: params.appKey,\r\n      timestamp: params.timestamp,\r\n      sign: params.sign,\r\n    },\r\n  });\r\n  if (result.data.code === 200) {\r\n    let resData = result.data.data;\r\n    if (resData) {\r\n      Array.isArray(resData) &&\r\n        resData.forEach((element) => {\r\n          let data = {\r\n            name: \"\",\r\n            id: \"\",\r\n          };\r\n          data.id = element.prodId;\r\n          data.name = element.prodName;\r\n          datas.push(data);\r\n        });\r\n    }\r\n    return datas || [];\r\n  }\r\n  return null;\r\n}\r\nexport async function getDevList(params) {\r\n  const datas = [];\r\n  const result = await instance.get(HistronApi.devList, {\r\n    params: {\r\n      appkey: params.appKey,\r\n      timestamp: params.timestamp,\r\n      sign: params.sign,\r\n      prodId: params.prodId,\r\n    },\r\n  });\r\n  if (result.data.code === 200) {\r\n    let resData = result.data.data;\r\n    if (resData) {\r\n      Array.isArray(resData) &&\r\n        resData.forEach((element) => {\r\n          let data = {\r\n            name: \"\",\r\n            id: 0,\r\n            deviceKey: \"\",\r\n            deviceSecret: \"\",\r\n          };\r\n          data.id = element.deviceId;\r\n          data.name = element.deviceName;\r\n          data.deviceKey = element.deviceKey;\r\n          data.deviceSecret = element.deviceSecret;\r\n          datas.push(data);\r\n        });\r\n    }\r\n    return datas || [];\r\n  }\r\n  return null;\r\n}\r\nexport async function getFunList(params) {\r\n  const datas = [];\r\n  const result = await instance.get(HistronApi.funList, {\r\n    params: {\r\n      appkey: params.appKey,\r\n      timestamp: params.timestamp,\r\n      sign: params.sign,\r\n      sourceId: params.prodId,\r\n    },\r\n  });\r\n  if (result.data.code === 200) {\r\n    let resData = result.data.data;\r\n    if (resData) {\r\n      Array.isArray(resData) &&\r\n        resData.forEach((element) => {\r\n          let data = {\r\n            name: \"\",\r\n            id: 0,\r\n            funKey: \"\",\r\n            funDataType: \"\",\r\n          };\r\n          data.id = element.funId;\r\n          data.name = element.funName;\r\n          data.funKey = element.funKey;\r\n          data.funDataType = element.funDataType;\r\n          datas.push(data);\r\n        });\r\n    }\r\n    return datas || [];\r\n  }\r\n  return null;\r\n}\r\nexport async function getCmdList(params) {\r\n  const result = await getReq(HistronApi.cmdList, {\r\n    params: { ...params },\r\n  });\r\n  if (result.code === ResponseStatus.Ok) {\r\n    return result.data || [];\r\n  }\r\n  return null;\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  RadioGroup,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\ninterface option {\r\n  id: number;\r\n  name: string;\r\n}\r\ninterface DataSelectProps {\r\n  title: string;\r\n  value: number | string;\r\n  onClose: (value?: number | string) => void;\r\n  options: option[];\r\n}\r\n\r\nconst DataSelect: React.FC<DataSelectProps> = ({\r\n  onClose,\r\n  value: valueProp,\r\n  title,\r\n  options,\r\n}) => {\r\n  const [value, setValue] = useState(valueProp);\r\n  useEffect(() => {\r\n    setValue(valueProp);\r\n  }, [valueProp]);\r\n\r\n  const handleCancel = () => {\r\n    onClose();\r\n  };\r\n\r\n  const handleOk = () => {\r\n    onClose(value);\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    let targetVal = (event.target as HTMLInputElement).value;\r\n    if (typeof value === \"number\") {\r\n      setValue(Number(targetVal));\r\n    } else {\r\n      setValue(targetVal);\r\n    }\r\n  };\r\n  return (\r\n    <Dialog\r\n      open={true}\r\n      sx={{ \"& .MuiDialog-paper\": { width: \"80%\", maxHeight: 435 } }}\r\n      maxWidth=\"xs\"\r\n    >\r\n      <DialogTitle>{title}</DialogTitle>\r\n      <DialogContent dividers>\r\n        <RadioGroup\r\n          aria-label=\"ringtone\"\r\n          name=\"ringtone\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n          {options.map((option) => (\r\n            <FormControlLabel\r\n              value={option.id}\r\n              key={option.id}\r\n              control={<Radio />}\r\n              label={option.name}\r\n            />\r\n          ))}\r\n        </RadioGroup>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button autoFocus onClick={handleCancel}>\r\n          取消\r\n        </Button>\r\n        <Button onClick={handleOk}>确定</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\nexport default DataSelect;\r\n","import { ListItem, InputBase, InputLabel, FormControl } from \"@mui/material\";\r\nimport { alpha, styled } from \"@mui/material/styles\";\r\nimport React, { useState } from \"react\";\r\nimport { IDeviceDataOption } from \"./index\";\r\nimport { rootStore } from \"~/stores/RootStore\";\r\nimport {\r\n  getCloudauthList,\r\n  getCloudauthSign,\r\n  getDevList,\r\n  getFunList,\r\n  getProdList,\r\n} from \"~/apis/dataSourceReq\";\r\nimport DataSelect from \"~/components/DataBinding/deviceData/dataSelect\";\r\ninterface HistronPanelProps {\r\n  data: IDeviceDataOption;\r\n  onChange: (d: IDeviceDataOption) => void;\r\n}\r\nconst BootstrapInput = styled(InputBase)(({ theme }) => ({\r\n  \"label + &\": {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  \"& .MuiInputBase-input\": {\r\n    borderRadius: 4,\r\n    position: \"relative\",\r\n    border: \"1px solid #ced4da\",\r\n    fontSize: 16,\r\n    width: \"100%\",\r\n    padding: \"10px 12px\",\r\n    transition: theme.transitions.create([\r\n      \"border-color\",\r\n      \"background-color\",\r\n      \"box-shadow\",\r\n    ]),\r\n    // Use the system font instead of the default Roboto font.\r\n    fontFamily: [\r\n      \"-apple-system\",\r\n      \"BlinkMacSystemFont\",\r\n      '\"Segoe UI\"',\r\n      \"Roboto\",\r\n      '\"Helvetica Neue\"',\r\n      \"Arial\",\r\n      \"sans-serif\",\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(\",\"),\r\n    \"&:focus\": {\r\n      boxShadow: `${alpha(theme.palette.primary.main, 0.25)} 0 0 0 0.2rem`,\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n}));\r\nconst changeAccountObj = {\r\n  prodId: \"\",\r\n  prodName: \"\",\r\n  deviceId: 0,\r\n  deviceName: \"\",\r\n  deviceKey: \"\",\r\n  deviceSecret: \"\",\r\n  funId: 0,\r\n  funName: \"\",\r\n  funDataType: \"\",\r\n  funKey: \"\",\r\n  wsUrl: \"\",\r\n};\r\nconst changeProdObj = {\r\n  deviceId: 0,\r\n  deviceName: \"\",\r\n  deviceKey: \"\",\r\n  deviceSecret: \"\",\r\n  funId: 0,\r\n  funName: \"\",\r\n  funDataType: \"\",\r\n  funKey: \"\",\r\n  wsUrl: \"\",\r\n};\r\n\r\nconst HistronPanel: React.FC<HistronPanelProps> = ({ data, onChange }) => {\r\n  /* 账号 */\r\n  const [openAccount, setOpenAccount] = useState(false);\r\n  const [accounts, setAccounts] = useState([]);\r\n  const getAccount = () => {\r\n    let params = {\r\n      projectId: rootStore.projectId,\r\n      source: data.source,\r\n    };\r\n    getCloudauthList(params).then((res) => {\r\n      setAccounts(res);\r\n    });\r\n    setOpenAccount(true);\r\n  };\r\n  const closeAccount = (value: number) => {\r\n    if (value && value !== data.accountId) {\r\n      setCurrentAccount(value);\r\n    }\r\n    setOpenAccount(false);\r\n  };\r\n  const setCurrentAccount = (id) => {\r\n    const currentAccount = accounts.find((item) => item.id === id);\r\n    data.accountId = currentAccount.id;\r\n    data.accountName = currentAccount.name;\r\n  };\r\n  /* 产品 */\r\n  const [openProd, setOpenProd] = useState(false);\r\n  const [prods, setProds] = useState([]);\r\n  const getProd = async () => {\r\n    let sign = await getCloudauthSign({ id: data.accountId });\r\n    if (!sign) {\r\n      return;\r\n    }\r\n    let params = {\r\n      appKey: sign.appKey,\r\n      timestamp: sign.timestamp,\r\n      sign: sign.sign,\r\n    };\r\n    getProdList(params).then((res) => {\r\n      setProds(res);\r\n    });\r\n    setOpenProd(true);\r\n  };\r\n  const closeProd = (value) => {\r\n    if (value && value !== data.prodId) {\r\n      setCurrentProd(value);\r\n    }\r\n    setOpenProd(false);\r\n  };\r\n  const setCurrentProd = (id) => {\r\n    const currentProd = prods.find((item) => item.id === id);\r\n    data.prodId = currentProd.id;\r\n    data.prodName = currentProd.name;\r\n  };\r\n  /* 设备 */\r\n  const [openDevice, setOpenDevice] = useState(false);\r\n  const [devices, setDevices] = useState([]);\r\n  const getDevice = async () => {\r\n    let sign = await getCloudauthSign({ id: data.accountId });\r\n    if (!sign) {\r\n      return;\r\n    }\r\n    let params = {\r\n      appKey: sign.appKey,\r\n      timestamp: sign.timestamp,\r\n      sign: sign.sign,\r\n      prodId: data.prodId,\r\n    };\r\n    getDevList(params).then((res) => {\r\n      setDevices(res);\r\n    });\r\n    setOpenDevice(true);\r\n  };\r\n  const closeDevice = (value) => {\r\n    if (value && value !== data.deviceId) {\r\n      setCurrentDevice(value);\r\n    }\r\n    setOpenDevice(false);\r\n  };\r\n  const setCurrentDevice = (id) => {\r\n    const currentDevice = devices.find((item) => item.id === id);\r\n    data.deviceId = currentDevice.id;\r\n    data.deviceName = currentDevice.name;\r\n    data.deviceKey = currentDevice.deviceKey;\r\n    data.deviceSecret = currentDevice.deviceSecret;\r\n  };\r\n  /* 属性 */\r\n  const [openFun, setOpenFun] = useState(false);\r\n  const [funs, setFuns] = useState([]);\r\n  const getFun = async () => {\r\n    let sign = await getCloudauthSign({ id: data.accountId });\r\n    if (!sign) {\r\n      return;\r\n    }\r\n    let params = {\r\n      appKey: sign.appKey,\r\n      timestamp: sign.timestamp,\r\n      sign: sign.sign,\r\n      prodId: data.prodId,\r\n    };\r\n    getFunList(params).then((res) => {\r\n      setFuns(res);\r\n    });\r\n    setOpenFun(true);\r\n  };\r\n  const closeFun = (value) => {\r\n    if (value && value !== data.funId) {\r\n      setCurrentFun(value);\r\n    }\r\n    setOpenFun(false);\r\n  };\r\n  const setCurrentFun = (id) => {\r\n    const currentFun = funs.find((item) => item.id === id);\r\n    data.funId = currentFun.id;\r\n    data.funName = currentFun.name;\r\n    data.key = currentFun.funKey;\r\n    data.funDataType = currentFun.funDataType;\r\n  };\r\n  return (\r\n    <>\r\n      <ListItem>\r\n        <FormControl variant=\"standard\" sx={{ width: \"100%\" }}>\r\n          <InputLabel shrink htmlFor=\"account\">\r\n            账号\r\n          </InputLabel>\r\n          <BootstrapInput\r\n            id=\"account\"\r\n            value={data.accountName}\r\n            onClick={getAccount}\r\n          />\r\n        </FormControl>\r\n      </ListItem>\r\n      <ListItem>\r\n        <FormControl variant=\"standard\" sx={{ width: \"100%\" }}>\r\n          <InputLabel shrink htmlFor=\"prod\">\r\n            产品\r\n          </InputLabel>\r\n          <BootstrapInput id=\"prod\" value={data.prodName} onClick={getProd} />\r\n        </FormControl>\r\n      </ListItem>\r\n      {data.prodId && (\r\n        <>\r\n          <ListItem>\r\n            <FormControl variant=\"standard\" sx={{ width: \"100%\" }}>\r\n              <InputLabel shrink htmlFor=\"device\">\r\n                设备\r\n              </InputLabel>\r\n              <BootstrapInput\r\n                id=\"device\"\r\n                value={data.deviceName}\r\n                onClick={getDevice}\r\n              />\r\n            </FormControl>\r\n          </ListItem>\r\n          <ListItem>\r\n            <FormControl variant=\"standard\" sx={{ width: \"100%\" }}>\r\n              <InputLabel shrink htmlFor=\"fun\">\r\n                属性\r\n              </InputLabel>\r\n              <BootstrapInput id=\"fun\" value={data.funName} onClick={getFun} />\r\n            </FormControl>\r\n          </ListItem>\r\n        </>\r\n      )}\r\n      {openAccount && (\r\n        <DataSelect\r\n          title=\"选择账号\"\r\n          onClose={closeAccount}\r\n          value={data.accountId}\r\n          options={accounts}\r\n        ></DataSelect>\r\n      )}\r\n      {openProd && (\r\n        <DataSelect\r\n          title=\"选择产品\"\r\n          onClose={closeProd}\r\n          value={data.prodId}\r\n          options={prods}\r\n        ></DataSelect>\r\n      )}\r\n      {openDevice && (\r\n        <DataSelect\r\n          title=\"选择设备\"\r\n          onClose={closeDevice}\r\n          value={data.deviceId}\r\n          options={devices}\r\n        ></DataSelect>\r\n      )}\r\n      {openFun && (\r\n        <DataSelect\r\n          title=\"选择属性\"\r\n          onClose={closeFun}\r\n          value={data.funId}\r\n          options={funs}\r\n        ></DataSelect>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default HistronPanel;\r\n","import { ListItem } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport CommonSelect from \"../../common/select\";\r\nimport AliPanel from \"./aliPanel\";\r\nimport HistronPanel from \"./histronPanel\";\r\n\r\nexport interface IDeviceDataOption {\r\n  source: number;\r\n  accountId: number;\r\n  accountName: string;\r\n  prodId: string;\r\n  prodName: string;\r\n  deviceId: number;\r\n  deviceName: string;\r\n  deviceKey: string;\r\n  deviceSecret: string;\r\n  funId: number;\r\n  funName: string;\r\n  funDataType: string;\r\n  key: string;\r\n  ws: string;\r\n}\r\ninterface DeviceDataPanelProps {\r\n  data: IDeviceDataOption;\r\n  onChange: (d: IDeviceDataOption) => void;\r\n}\r\nconst changeSourceObj = {\r\n  accountId: 0,\r\n  accountName: \"\",\r\n  prodId: \"\",\r\n  prodName: \"\",\r\n  deviceId: 0,\r\n  deviceName: \"\",\r\n  deviceKey: \"\",\r\n  deviceSecret: \"\",\r\n  funId: 0,\r\n  funName: \"\",\r\n  funDataType: \"\",\r\n  funKey: \"\",\r\n  wsUrl: \"\",\r\n};\r\nconst DeviceDataPanel: React.FC<DeviceDataPanelProps> = ({\r\n  data,\r\n  onChange,\r\n}) => {\r\n  return (\r\n    <>\r\n      <ListItem>\r\n        <CommonSelect\r\n          label=\"来源\"\r\n          fullWidth\r\n          value={data.source}\r\n          onChange={(e) => {\r\n            let temp = { source: Number(e.target.value), ...changeSourceObj };\r\n            onChange(temp);\r\n          }}\r\n          options={[\r\n            { label: \"海创云\", value: 0 },\r\n            // { label: \"阿里云\", value: 1 },\r\n          ]}\r\n        />\r\n      </ListItem>\r\n      {data.source === 0 ? (\r\n        <HistronPanel data={data} onChange={onChange}></HistronPanel>\r\n      ) : (\r\n        <AliPanel data={data} onChange={onChange}></AliPanel>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default DeviceDataPanel;\r\n","import { Entity, BaseGui, BaseDom } from \"@hc/engine\";\r\nimport { App } from \"~/intance\";\r\n\r\nexport function getTargetDataBind(\r\n  entity: Entity | BaseGui | BaseDom,\r\n  targetKey: string\r\n) {\r\n  const list = App.intance.Database.DataBindTable.list;\r\n  return list.find(\r\n    (d) => d.target.Index === entity.Id && d.targetKey === targetKey\r\n  );\r\n}\r\n","import md5 from \"md5-node\";\r\nimport { HistronHost } from \"~/apis/index\";\r\nconst wsfix = location.protocol === \"https:\" ? \"wss\" : \"ws\";\r\nfunction getURL(realm) {\r\n  if (typeof realm === \"string\") {\r\n    let index = realm.indexOf(\"://\");\r\n    if (index > -1) {\r\n      // let endIndex = realm.length - 1;\r\n      return realm.slice(index + 3);\r\n    }\r\n  } else {\r\n    return HistronHost;\r\n  }\r\n}\r\nexport const encryptStgy = {\r\n  histron: function (msg) {\r\n    let result,\r\n      timestamp,\r\n      clientid,\r\n      username,\r\n      sign,\r\n      { deviceKey, deviceSecret, prodId, realm } = msg;\r\n\r\n    let url = getURL(realm);\r\n    let baseUrl = `${wsfix}://${url}/device/ws/dev/send/`;\r\n    clientid = `dev:${prodId}:${deviceKey}`;\r\n    timestamp = new Date().getTime();\r\n    username = `md5:${timestamp}`;\r\n\r\n    sign = md5(`${prodId}${deviceKey}${deviceSecret}${timestamp}`);\r\n    result = `${baseUrl}${clientid}/${username}/${sign}`;\r\n    return result;\r\n  },\r\n  ali: function (msg) {\r\n    let result, baseUrl, productKey, selectId, deviceName;\r\n    baseUrl = `${wsfix}://${process.env.VUE_APP_HOST}/api/b/ws/aliyun`;\r\n    deviceName = msg.deviceKey;\r\n    productKey = msg.prodId;\r\n    selectId = msg.selectId;\r\n    result = `${baseUrl}/${selectId}/${productKey}/${deviceName}`;\r\n    return result;\r\n  },\r\n};\r\n","import { BaseDom, BaseGui, DataBind, Entity, IApiDataOption } from \"@hc/engine\";\r\nimport { Button, List, ListItem, Stack } from \"@mui/material\";\r\nimport axios, { Method } from \"axios\";\r\nimport React, { useState } from \"react\";\r\nimport { App } from \"~/intance\";\r\n\r\nimport CommonSelect from \"../common/select\";\r\nimport { HStack } from \"../common/stack\";\r\nimport ApiDataPanel, { IApiOption } from \"./apiData\";\r\nimport DeviceDataPanel, { IDeviceDataOption } from \"./deviceData\";\r\nimport { getTargetDataBind } from \"./utils\";\r\nimport { encryptStgy } from \"./strategy\";\r\ninterface DataBindingProps {\r\n  onClose: () => void;\r\n  entity: Entity | BaseGui | BaseDom;\r\n  targetKey: string;\r\n  onConfirm: (d: DataBind) => void;\r\n}\r\n\r\nlet idIndex = 0;\r\n\r\nconst DataBinding: React.FC<DataBindingProps> = ({\r\n  onClose,\r\n  entity,\r\n  targetKey,\r\n  onConfirm,\r\n}) => {\r\n  const dbi = getTargetDataBind(entity, targetKey);\r\n  const [source, setSource] = useState(() => dbi?.type ?? \"1\");\r\n  //@ts-ignore\r\n  const [apiData, setApiData] = useState<IApiOption>(() => {\r\n    if (dbi && source === \"2\") {\r\n      const data = dbi.data as IApiDataOption;\r\n      return { ...data, useTime: !!data.time };\r\n    } else {\r\n      return {\r\n        type: \"GET\",\r\n        params: [],\r\n        url: \"http://cicd3d.gkiiot.com/test3D\",\r\n        time: \"\",\r\n        useTime: false,\r\n        filter: `function _filter(data){\r\n          return data;\r\n        }`,\r\n      };\r\n    }\r\n  });\r\n  // const [wsData, setWSData] = useState<Record<string, any>>({});\r\n  const [wsData, setWSData] = useState<IDeviceDataOption>(() => {\r\n    if (dbi && source === \"1\") {\r\n      const data = dbi.data as IDeviceDataOption;\r\n      return { ...data };\r\n    } else {\r\n      return {\r\n        source: 0,\r\n        accountId: 0,\r\n        accountName: \"\",\r\n        prodId: \"\",\r\n        prodName: \"\",\r\n        deviceId: 0,\r\n        deviceName: \"\",\r\n        deviceKey: \"\",\r\n        deviceSecret: \"\",\r\n        funId: 0,\r\n        funName: \"\",\r\n        funDataType: \"\",\r\n        key: \"\",\r\n        ws: \"\",\r\n      };\r\n    }\r\n  });\r\n  const handleConfirm = () => {\r\n    let target = getTargetDataBind(entity, targetKey);\r\n\r\n    if (!target) {\r\n      target = new DataBind(entity.ObjectId, targetKey);\r\n      App.intance.Database.DataBindTable.append(target);\r\n      target.type = source;\r\n    }\r\n    if (source === \"2\") {\r\n      //@ts-ignore\r\n      target.data = { ...apiData, time: parseFloat(apiData.time) };\r\n    } else {\r\n      wsData.ws = getWsUrl();\r\n      target.data = { ...wsData };\r\n    }\r\n    onConfirm(target);\r\n  };\r\n  const getWsUrl = () => {\r\n    let type = wsData.source === 0 ? \"histron\" : \"ali\";\r\n    let wsUrl = encryptStgy[type](wsData);\r\n    return wsUrl;\r\n  };\r\n  const handleTestLink = () => {\r\n    axios({\r\n      method: apiData.type.toLowerCase() as Method,\r\n      url: apiData.url,\r\n      data:\r\n        apiData.type === \"POST\"\r\n          ? { ...apiData.params }\r\n          : {\r\n              params: apiData.params,\r\n            },\r\n    }).then((res) => {\r\n      if (res.status === 200) {\r\n        setApiData({ ...apiData, response: JSON.stringify(res.data) });\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleChangeApiData = (\r\n    evt: React.ChangeEvent<HTMLInputElement>,\r\n    check?: boolean\r\n  ) => {\r\n    const name = evt.target.name;\r\n\r\n    if (name) {\r\n      setApiData({\r\n        ...apiData,\r\n        [name]: check === undefined ? evt.target.value : check,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleAddApiParam = () => {\r\n    setApiData({\r\n      ...apiData,\r\n      params: [\r\n        ...apiData.params,\r\n        {\r\n          key: \"\",\r\n          value: \"\",\r\n          type: \"value\",\r\n          id: idIndex++,\r\n        },\r\n      ],\r\n    });\r\n  };\r\n  const handleDeleteApiParam = (index: number) => {\r\n    setApiData((data) => {\r\n      const params = data.params;\r\n      params.splice(index, 1);\r\n      return {\r\n        ...data,\r\n        params: [...params],\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleUpdateApiParam = (index, newParam) => {\r\n    setApiData((data) => {\r\n      const params = data.params;\r\n      Object.assign(params[index], newParam);\r\n      return {\r\n        ...data,\r\n        params: [...params],\r\n      };\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Stack sx={{ width: 300, height: \"100%\" }}>\r\n      <List sx={{ flex: 1 }}>\r\n        <ListItem>\r\n          <CommonSelect\r\n            label=\"选择数据源\"\r\n            value={source}\r\n            options={[\r\n              { label: \"设备\", value: \"1\" },\r\n              { label: \"接口\", value: \"2\" },\r\n            ]}\r\n            fullWidth\r\n            onChange={(evt) => {\r\n              setSource(evt.target.value as any);\r\n              if (dbi?.type === \"1\") {\r\n                setApiData({ ...apiData });\r\n              } else {\r\n                setWSData({\r\n                  ...wsData,\r\n                });\r\n              }\r\n            }}\r\n          />\r\n        </ListItem>\r\n        {source === \"1\" ? (\r\n          <DeviceDataPanel\r\n            data={wsData}\r\n            onChange={(params) => {\r\n              setWSData({ ...params });\r\n            }}\r\n          />\r\n        ) : (\r\n          <ApiDataPanel\r\n            data={apiData}\r\n            onChange={handleChangeApiData}\r\n            addParam={handleAddApiParam}\r\n            deleteParam={handleDeleteApiParam}\r\n            updateParam={handleUpdateApiParam}\r\n          />\r\n        )}\r\n      </List>\r\n      <HStack height={30} justifyContent=\"flex-end\">\r\n        <Button variant=\"contained\" color=\"primary\" onClick={handleConfirm}>\r\n          确定\r\n        </Button>\r\n        <Button\r\n          onClick={onClose}\r\n          variant=\"contained\"\r\n          color=\"error\"\r\n          sx={{ mx: 1 }}\r\n        >\r\n          取消\r\n        </Button>\r\n        {source === \"2\" && (\r\n          <Button onClick={handleTestLink} variant=\"contained\" sx={{ mx: 1 }}>\r\n            测试连接\r\n          </Button>\r\n        )}\r\n      </HStack>\r\n    </Stack>\r\n  );\r\n};\r\nexport default DataBinding;\r\n","import Editor, { Monaco } from \"@monaco-editor/react\";\r\nimport AddLinkIcon from \"@mui/icons-material/AddLink\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  IconButton,\r\n  Switch,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport { HStack } from \"../common/stack\";\r\nimport { TEditor } from \"../editorModal/types\";\r\n\r\nexport const ValueItem: React.FC<{\r\n  label: string;\r\n  value?: string | number;\r\n  defaultValue?: string | number;\r\n  targetKey: string;\r\n  onClick: (evt) => void;\r\n  onBlur: (evt) => void;\r\n  onChange: (evt) => void;\r\n  onDelete: () => void;\r\n  isAttach: boolean;\r\n}> = ({\r\n  label,\r\n  value,\r\n  onClick,\r\n  targetKey,\r\n  onBlur,\r\n  defaultValue,\r\n  isAttach,\r\n  onDelete,\r\n  onChange,\r\n}) => {\r\n  const handleDelete = () => {\r\n    onDelete();\r\n  };\r\n\r\n  return (\r\n    <HStack direction=\"row\" sx={{ flex: 1 }} spacing={2} alignItems=\"center\">\r\n      <Typography sx={{ marginRight: 0.1, minWidth: \"45px\", fontSize: 14 }}>\r\n        {label}\r\n      </Typography>\r\n      {isAttach ? (\r\n        <>\r\n          <Button>已编辑数据源</Button>\r\n          <IconButton onClick={handleDelete}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </>\r\n      ) : (\r\n        <TextField\r\n          defaultValue={defaultValue}\r\n          value={value}\r\n          onBlur={onBlur}\r\n          sx={{ padding: \"2px\" }}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          autoComplete=\"false\"\r\n          onChange={onChange}\r\n        />\r\n      )}\r\n      <IconButton\r\n        style={{ marginLeft: 0 }}\r\n        onClick={onClick}\r\n        data-key={targetKey}\r\n      >\r\n        <AddLinkIcon />\r\n      </IconButton>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport const BoolItem: React.FC<{\r\n  label: string;\r\n  value?: boolean;\r\n  defaultValue?: boolean;\r\n  targetKey: string;\r\n  onClick: (evt) => void;\r\n  onChange: (evt) => void;\r\n  onDelete: () => void;\r\n  isAttach: boolean;\r\n}> = ({\r\n  label,\r\n  value,\r\n  onClick,\r\n  targetKey,\r\n  onChange,\r\n  defaultValue,\r\n  isAttach,\r\n  onDelete,\r\n}) => {\r\n  const handleDelete = () => {\r\n    onDelete();\r\n  };\r\n\r\n  return (\r\n    <HStack direction=\"row\" sx={{ flex: 1 }} spacing={2} alignItems=\"center\">\r\n      <Typography sx={{ marginRight: 0.1, minWidth: \"45px\", fontSize: 14 }}>\r\n        {label}\r\n      </Typography>\r\n      {isAttach ? (\r\n        <>\r\n          <Button>已编辑数据源</Button>\r\n          <IconButton onClick={handleDelete}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </>\r\n      ) : (\r\n        <Switch\r\n          checked={value}\r\n          defaultChecked={defaultValue}\r\n          onChange={onChange}\r\n        />\r\n      )}\r\n      <IconButton\r\n        style={{ marginLeft: 0 }}\r\n        onClick={onClick}\r\n        data-key={targetKey}\r\n      >\r\n        <AddLinkIcon />\r\n      </IconButton>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport const ValueItemContainer: React.FC<{\r\n  label: string;\r\n  targetKey: string;\r\n  onClick: (evt) => void;\r\n  onDelete: () => void;\r\n  isAttach: boolean;\r\n  children?: React.ReactNode;\r\n}> = ({ label, onClick, targetKey, isAttach, onDelete, children }) => {\r\n  const handleDelete = () => {\r\n    onDelete();\r\n  };\r\n\r\n  return (\r\n    <HStack direction=\"row\" sx={{ flex: 1 }} spacing={2} alignItems=\"center\">\r\n      <Typography sx={{ marginRight: 0.1, minWidth: \"45px\", fontSize: 14 }}>\r\n        {label}\r\n      </Typography>\r\n      {isAttach ? (\r\n        <>\r\n          <Button>已编辑数据源</Button>\r\n          <IconButton onClick={handleDelete}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </>\r\n      ) : (\r\n        children\r\n      )}\r\n      <IconButton\r\n        style={{ marginLeft: 0 }}\r\n        onClick={onClick}\r\n        data-key={targetKey}\r\n      >\r\n        <AddLinkIcon />\r\n      </IconButton>\r\n    </HStack>\r\n  );\r\n};\r\n\r\nexport const ObjectItem: React.FC<{\r\n  title: string;\r\n  value: any;\r\n  onConfirm: (code: string) => void;\r\n}> = ({ title, value, onConfirm }) => {\r\n  const editorRef = useRef(null);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    handleClose();\r\n    onConfirm(editorRef.current.getValue());\r\n  };\r\n\r\n  const handleEditorDidMount = (editor: TEditor, monaco: Monaco) => {\r\n    editorRef.current = editor;\r\n    setTimeout(() => {\r\n      handleFormat();\r\n    }, 300);\r\n  };\r\n\r\n  const handleFormat = () => {\r\n    editorRef.current.getAction(\"editor.action.formatDocument\").run();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button onClick={handleOpen} fullWidth sx={{ flex: 1 }}>\r\n        {title}\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n        PaperProps={{ sx: { height: \"50vh\" } }}\r\n        onClose={handleClose}\r\n      >\r\n        <DialogContent>\r\n          <Editor\r\n            onMount={handleEditorDidMount}\r\n            height=\"100%\"\r\n            defaultLanguage=\"json\"\r\n            defaultValue={value ? JSON.stringify(value) : \"\"}\r\n            options={{ minimap: { enabled: false } }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleFormat}>格式化</Button>\r\n          <Button onClick={handleConfirm}>确定</Button>\r\n          <Button onClick={handleClose}>取消</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n","import { Box, Button, Switch, TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { BaseGui, Entity, BaseDom, CMD } from \"@hc/engine\";\r\nimport { HC2DDom } from \"~/extension/HC2DDom\";\r\nimport ColorPickInput from \"../common/colorPickInput\";\r\nimport { ColorResult } from \"react-color\";\r\nimport { debounceCallback } from \"~/utils/time\";\r\nimport { ObjectItem } from \"./common\";\r\nimport { message } from \"~/utils/message\";\r\n\r\ninterface ValueContentProps {\r\n  prop: any;\r\n  onUpdate: () => void;\r\n  entity: Entity | BaseGui | BaseDom;\r\n}\r\n\r\nconst CommonTypes = new Set([\r\n  \"POSITIVENUMBER\",\r\n  \"NUMBER\",\r\n  \"STRING\",\r\n  \"ALIGN\",\r\n  \"VALIGN\",\r\n  \"IMAGE\",\r\n]);\r\nconst CommonObjectTypes = new Set([\"OBJECT\", \"COLORARRAY\", \"OBJECTARRAY\"]);\r\n\r\nconst ValueContent: React.FC<ValueContentProps> = ({\r\n  prop,\r\n  entity,\r\n  onUpdate,\r\n}) => {\r\n  const handleChange = (e) => {\r\n    prop.value = e.target.value;\r\n    onUpdate();\r\n  };\r\n\r\n  const handleChangeEntity = (value) => {\r\n    CMD.CommandWrap(() => {\r\n      if (entity instanceof BaseGui || entity instanceof HC2DDom) {\r\n        entity.setProp(prop.key, value);\r\n      } else entity[prop.key] = value;\r\n    }, \"修改属性\");\r\n  };\r\n\r\n  const handleChangeColor = (c: ColorResult) => {\r\n    prop.value = c.hex;\r\n    onUpdate();\r\n    debounceCallback(() => {\r\n      handleChangeEntity(c.hex);\r\n    }, 300);\r\n  };\r\n\r\n  const handleConfirmObject = (code: string) => {\r\n    try {\r\n      const data = JSON.parse(code);\r\n      handleChangeEntity(data);\r\n    } catch (err) {\r\n      message.error(\"数据有误\");\r\n    }\r\n  };\r\n\r\n  const handleChangeSwitch = (e) => {\r\n    prop.value = e.target.checked;\r\n    onUpdate();\r\n    handleChangeEntity(prop.value);\r\n  };\r\n\r\n  const handleConfirm = (e) => {\r\n    CMD.CommandWrap(() => {\r\n      if (entity instanceof BaseGui || entity instanceof HC2DDom) {\r\n        entity.setProp(prop.key, e.target.value);\r\n      } else {\r\n        entity[prop.key] = parseFloat(e.target.value);\r\n      }\r\n    }, \"修改属性\");\r\n  };\r\n\r\n  const type = prop.type.toUpperCase();\r\n\r\n  if (type === \"BOOLEAN\")\r\n    return (\r\n      <Box flex={1} textAlign=\"right\">\r\n        <Switch checked={Boolean(prop.value)} onChange={handleChangeSwitch} />\r\n      </Box>\r\n    );\r\n  else if (prop.type === \"Color\") {\r\n    return (\r\n      <ColorPickInput\r\n        sx={{ flex: 1, width: \"auto\" }}\r\n        color={prop.value}\r\n        onChange={handleChangeColor}\r\n      />\r\n    );\r\n  } else if (CommonTypes.has(type)) {\r\n    return (\r\n      <TextField\r\n        value={prop.value}\r\n        onChange={handleChange}\r\n        onBlur={handleConfirm}\r\n        sx={{ padding: \"2px\" }}\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        autoComplete=\"false\"\r\n      />\r\n    );\r\n  } else if (CommonObjectTypes.has(type)) {\r\n    return (\r\n      <ObjectItem\r\n        title={prop.key}\r\n        value={prop.value}\r\n        onConfirm={handleConfirmObject}\r\n      />\r\n    );\r\n  } else {\r\n    return <Box>不支持类型{type}</Box>;\r\n  }\r\n};\r\nexport default ValueContent;\r\n","import { BaseDom, BaseGui, CMD, Entity } from \"@hc/engine\";\r\nimport { Box, Drawer } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { HC2DDom } from \"~/extension/HC2DDom\";\r\nimport { App } from \"~/intance\";\r\n\r\nimport DataBinding from \"../DataBinding\";\r\nimport { getTargetDataBind } from \"../DataBinding/utils\";\r\nimport { ValueItemContainer } from \"./common\";\r\nimport { IProperty } from \"./config\";\r\nimport ValueContent from \"./valueContent\";\r\n\r\nconst ValueList: React.FC<{\r\n  props: IProperty[];\r\n  entity: Entity | BaseGui | BaseDom;\r\n  onClick: (evt) => void;\r\n  onUnAttach: (evt) => void;\r\n  onUpdate: () => void;\r\n}> = ({ props, entity, onClick, onUnAttach, onUpdate }) => {\r\n  const handleConfirm = (prop) => {\r\n    return (e) => {\r\n      CMD.CommandWrap(() => {\r\n        if (entity instanceof BaseGui || entity instanceof HC2DDom) {\r\n          entity.setProp(prop.key, e.target.value);\r\n        } else entity[prop.key] = parseFloat(e.target.value);\r\n      }, \"修改属性\");\r\n    };\r\n  };\r\n\r\n  const handleChange = (prop) => {\r\n    return (e) => {\r\n      prop.value = e.target.value;\r\n      onUpdate();\r\n    };\r\n  };\r\n  return (\r\n    <>\r\n      {props.map((prop) => (\r\n        <ValueItemContainer\r\n          key={prop.key}\r\n          label={prop.title}\r\n          onClick={onClick}\r\n          targetKey={prop.key}\r\n          onDelete={() => onUnAttach(prop)}\r\n          isAttach={!!prop.object}\r\n        >\r\n          <ValueContent prop={prop} onUpdate={onUpdate} entity={entity} />\r\n        </ValueItemContainer>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nconst ReadProperty: React.FC<{\r\n  entity: Entity | BaseGui | BaseDom;\r\n  properties: IProperty[];\r\n}> = ({ entity, properties }) => {\r\n  const [openLink, setOpenLink] = useState(false);\r\n  const [targetKey, setTargetKey] = useState(\"\");\r\n\r\n  const [list, setList] = useState([]);\r\n  const startLink = (evt: React.SyntheticEvent) => {\r\n    const targetKey = evt.currentTarget.getAttribute(\"data-key\");\r\n    setTargetKey(targetKey);\r\n    setOpenLink(true);\r\n  };\r\n  const endLink = () => {\r\n    setOpenLink(false);\r\n  };\r\n  const handleConfirm = (db) => {\r\n    setList((list) => {\r\n      for (const l of list) {\r\n        if (l.targetKey === targetKey) {\r\n          l.object = db;\r\n        }\r\n      }\r\n      return [...list];\r\n    });\r\n    endLink();\r\n  };\r\n  const handleUnAttach = (prop) => {\r\n    if (prop.object) App.intance.Database.DataBindTable.remove(prop.object);\r\n    prop.object = null;\r\n    setList([...list]);\r\n  };\r\n\r\n  const updateProps = () => {\r\n    setList([...list]);\r\n  };\r\n  useEffect(() => {\r\n    if (properties) {\r\n      const list = [];\r\n      for (const prop of properties) {\r\n        // if (prop.type === \"number\") {\r\n        const dbi = getTargetDataBind(entity, prop.key);\r\n        list.push({ ...prop, object: dbi, targetKey: prop.key });\r\n        // }\r\n      }\r\n      setList(list);\r\n    }\r\n  }, [properties]);\r\n\r\n  return (\r\n    <Box>\r\n      <ValueList\r\n        props={list}\r\n        entity={entity}\r\n        onClick={startLink}\r\n        onUnAttach={handleUnAttach}\r\n        onUpdate={updateProps}\r\n      />\r\n      <Drawer anchor=\"right\" open={openLink} onClose={endLink}>\r\n        <DataBinding\r\n          onClose={endLink}\r\n          entity={entity}\r\n          targetKey={targetKey}\r\n          onConfirm={handleConfirm}\r\n        />\r\n      </Drawer>\r\n    </Box>\r\n  );\r\n};\r\nexport default ReadProperty;\r\n","import { CMD, Component } from \"@hc/engine\";\r\nimport { Box, Drawer, Switch, TextField } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { App } from \"~/intance\";\r\n\r\nimport DataBinding from \"../DataBinding\";\r\nimport { getTargetDataBind } from \"../DataBinding/utils\";\r\nimport { ValueItemContainer } from \"./common\";\r\n\r\nconst ValueList = ({ props, entity, onClick, onUnAttach }) => {\r\n  const renderChild = (prop) => {\r\n    if (prop.type === \"boolean\")\r\n      return (\r\n        <Switch\r\n          checked={entity.data[prop.prop]}\r\n          onChange={(e) => {\r\n            CMD.CommandWrap(() => {\r\n              entity.data[prop.prop] = e.target.checked;\r\n            }, \"修改自定义属性\");\r\n          }}\r\n        />\r\n      );\r\n    else {\r\n      return (\r\n        <TextField\r\n          defaultValue={entity.data[prop.prop]}\r\n          onBlur={(e) => {\r\n            CMD.CommandWrap(() => {\r\n              entity.data[prop.prop] = e.target.value;\r\n            }, \"修改自定义属性\");\r\n          }}\r\n          sx={{ padding: \"2px\" }}\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          autoComplete=\"false\"\r\n        />\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {props.map((prop) => {\r\n        return (\r\n          <ValueItemContainer\r\n            key={prop.prop}\r\n            label={prop.name}\r\n            onClick={onClick}\r\n            targetKey={`data/${prop.prop}`}\r\n            onDelete={() => onUnAttach(prop)}\r\n            isAttach={!!prop.object}\r\n          >\r\n            {renderChild(prop)}\r\n          </ValueItemContainer>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nconst ComponentDetail: React.FC<{ entity: Component }> = ({ entity }) => {\r\n  const [openLink, setOpenLink] = useState(false);\r\n  const [targetKey, setTargetKey] = useState(\"\");\r\n  const Com = entity.constructor;\r\n  const [list, setList] = useState([]);\r\n\r\n  const startLink = (evt: React.SyntheticEvent) => {\r\n    const targetKey = evt.currentTarget.getAttribute(\"data-key\");\r\n    setTargetKey(targetKey);\r\n    setOpenLink(true);\r\n  };\r\n  const endLink = () => {\r\n    setOpenLink(false);\r\n  };\r\n\r\n  const handleConfirm = (db) => {\r\n    setList((list) => {\r\n      for (const l of list) {\r\n        if (l.targetKey === targetKey) {\r\n          l.object = db;\r\n        }\r\n      }\r\n      return [...list];\r\n    });\r\n    endLink();\r\n  };\r\n\r\n  const handleUnAttach = (prop) => {\r\n    if (prop.object) App.intance.Database.DataBindTable.remove(prop.object);\r\n    prop.object = null;\r\n    setList([...list]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (Com.Schema?.propertys) {\r\n      const list = [];\r\n      for (const prop of Com.Schema.propertys) {\r\n        const dbi = getTargetDataBind(entity, `data/${prop.prop}`);\r\n        list.push({ ...prop, object: dbi, targetKey: `data/${prop.prop}` });\r\n      }\r\n      setList(list);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Box>\r\n      <ValueList\r\n        props={list}\r\n        entity={entity}\r\n        onClick={startLink}\r\n        onUnAttach={handleUnAttach}\r\n      />\r\n      <Drawer anchor=\"left\" open={openLink} onClose={endLink}>\r\n        <DataBinding\r\n          onClose={endLink}\r\n          entity={entity}\r\n          targetKey={targetKey}\r\n          onConfirm={handleConfirm}\r\n        />\r\n      </Drawer>\r\n    </Box>\r\n  );\r\n};\r\nexport default ComponentDetail;\r\n","import { History } from \"@hc/engine\";\r\nimport { Box } from \"@mui/material\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useEditorContext } from \"~/contexts/editor-context\";\r\nimport config, { IProperty } from \"./config\";\r\nimport ReadProperty from \"./readProperty\";\r\nimport ComponentDetail from \"./componentDetail\";\r\nimport { Component, end } from \"@hc/engine\";\r\nimport { HC2DGui } from \"~/extension/Hc2DGui\";\r\nimport { HC2DDom } from \"~/extension/HC2DDom\";\r\nimport { App } from \"~/intance\";\r\nimport { UPDATE } from \"~/reducers/editorReducers\";\r\n\r\nconst CMD_NAMES = [\"修改自定义属性\", \"更新DOM\", \"变换DOM\", \"修改属性\"];\r\n\r\nconst Property: React.FC = () => {\r\n  const { editorState, dispatch } = useEditorContext();\r\n  const [props, setProps] = useState<IProperty[]>([]);\r\n\r\n  const handleReUn = (hm: History.CommandHistoryRecord) => {\r\n    if (CMD_NAMES.some((cmd) => hm.commandName.includes(cmd))) {\r\n      dispatch({ type: UPDATE });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const clears = [\r\n      end(\r\n        App.intance.Database.HistoryManager,\r\n        App.intance.Database.HistoryManager.redoEvent,\r\n        (e) => {\r\n          handleReUn(e);\r\n        }\r\n      ),\r\n      end(\r\n        App.intance.Database.HistoryManager,\r\n        App.intance.Database.HistoryManager.undoEvent,\r\n        (e) => {\r\n          handleReUn(e);\r\n        }\r\n      ),\r\n    ];\r\n    return () => {\r\n      clears.forEach((c) => c());\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let props = [];\r\n    if (editorState.gui) {\r\n      props = editorState.gui.DataList.map((d) => ({\r\n        key: d.key,\r\n        value: d.value,\r\n        type: \"number\",\r\n        title: d.label,\r\n        unit: d.unit,\r\n      }));\r\n\r\n      if (editorState.gui instanceof HC2DGui) {\r\n        const databinds = editorState.gui.DataBindings;\r\n        for (const d of databinds) {\r\n          if (d.description === \"basic_hide\") continue;\r\n          props.push({\r\n            key: d.attr,\r\n            value: editorState.gui.Attr[d.attr] ?? d.defaultValue,\r\n            type: d.valueType,\r\n            title: d.name,\r\n            unit: \"\",\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    if (editorState.dom) {\r\n      if (editorState.dom instanceof HC2DDom) {\r\n        const databinds = editorState.dom.DataBindings;\r\n        for (const d of databinds) {\r\n          if (d.description === \"basic_hide\") continue;\r\n          props.push({\r\n            key: d.attr,\r\n            value: editorState.dom.Attr[d.attr] ?? d.defaultValue,\r\n            type: d.valueType,\r\n            title: d.name,\r\n            unit: \"\",\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    if (editorState.entity) {\r\n      if (config[editorState.type]) {\r\n        props = [...config[editorState.type]];\r\n        for (const prop of props) {\r\n          prop.value = editorState.entity[prop.key];\r\n        }\r\n      }\r\n    }\r\n\r\n    setProps(props);\r\n  }, [editorState]);\r\n\r\n  if (editorState.entity?.IsComponent) {\r\n    return (\r\n      <Box>\r\n        <ComponentDetail entity={editorState.entity as Component} />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (editorState.gui) {\r\n    return (\r\n      <Box>\r\n        <ReadProperty entity={editorState.gui} properties={props} />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (editorState.dom) {\r\n    return (\r\n      <Box>\r\n        <ReadProperty entity={editorState.dom} properties={props} />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <ReadProperty entity={editorState.entity} properties={props} />\r\n    </Box>\r\n  );\r\n};\r\nexport default Property;\r\n","export type IAnimationProps = {\r\n  title: string;\r\n  type: 0 | 1 | 2;\r\n  group: boolean;\r\n  data: any;\r\n};\r\n\r\nexport enum ERightTab {\r\n  Basic = 1,\r\n  Interaction = 2,\r\n  Script = 3,\r\n  Prop = 4,\r\n  Material = 5,\r\n  Camera = 6,\r\n  Board = 7,\r\n}\r\n","import { IVector3, CameraType, Utils, end } from \"@hc/engine\";\r\nimport { Stack, Switch } from \"@mui/material\";\r\nimport { when } from \"mobx\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { App } from \"~/intance\";\r\nimport { convert2UiData } from \"~/utils/adapter\";\r\nimport VectorPanel from \"../common/vector3Panel\";\r\nimport Title from \"~/components/common/title\";\r\nimport CommonSelect from \"../common/select\";\r\nimport { deg2rad, fixedNotZero, rad2Deg } from \"~/utils/utils\";\r\nimport TitleInput from \"../common/titleInput\";\r\nimport { debounceCallback } from \"~/utils/time\";\r\nimport { HStack } from \"../common/stack\";\r\ninterface CameraInfoProps {}\r\n\r\nlet timer: NodeJS.Timeout;\r\n\r\nconst CameraPanel: React.FC<CameraInfoProps> = () => {\r\n  const [camera, setCamera] = React.useState({ x: \"0\", y: \"0\", z: \"0\" });\r\n  const [target, setTarget] = React.useState({ x: \"0\", y: \"0\", z: \"0\" });\r\n  const [mode, setMode] = useState(0);\r\n  const [cameraType, setCameraType] = useState(CameraType.ArcRotate);\r\n  const [cameraInfo, setCameraInfo] = useState({\r\n    Alpha: \"\",\r\n    Beta: \"\",\r\n    Radius: \"\",\r\n  });\r\n  const [limit, setLimit] = useState({\r\n    LowerRadiusLimit: \"\",\r\n    UpperRadiusLimit: \"\",\r\n    LowerAlphaLimit: \"\",\r\n    UpperAlphaLimit: \"\",\r\n    LowerBetaLimit: \"\",\r\n    UpperBetaLimit: \"\",\r\n    MinZ: \"\",\r\n    MaxZ: \"\",\r\n  });\r\n  const [limitPan, setLimitPan] = useState({\r\n    PanningAxis: { x: \"\", y: \"\", z: \"\" },\r\n    OriginPanTarget: { x: \"\", y: \"\", z: \"\" },\r\n    PanDistance: \"\",\r\n  });\r\n\r\n  const [enableTF, setEnableTF] = useState({\r\n    EnableRotate: true,\r\n    EnableZoom: true,\r\n    EnablePan: true,\r\n  });\r\n\r\n  const handleChangeCameraVector = (k: string, v: string) => {\r\n    const newValue = { ...camera, [k]: v };\r\n    setCamera(newValue);\r\n    if (isNaN(parseFloat(v))) return;\r\n    App.intance.Viewer.cameraManager.Position = {\r\n      x: parseFloat(newValue.x) || 0,\r\n      y: parseFloat(newValue.y) || 0,\r\n      z: parseFloat(newValue.z) || 0,\r\n    };\r\n  };\r\n  const handleChangeTargetVector = (k: string, v: string) => {\r\n    const newValue = { ...target, [k]: v };\r\n    setTarget(newValue);\r\n    if (isNaN(parseFloat(v))) return;\r\n    App.intance.Viewer.cameraManager.Target = {\r\n      x: parseFloat(newValue.x) || 0,\r\n      y: parseFloat(newValue.y) || 0,\r\n      z: parseFloat(newValue.z) || 0,\r\n    };\r\n  };\r\n\r\n  const handleToggleCameraType = (evt) => {\r\n    setMode(evt.target.value);\r\n    App.intance.Viewer.cameraManager.Mode = Number(evt.target.value);\r\n  };\r\n\r\n  const handleChangeCameraInfo = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    const key = evt.target.name;\r\n    const value = evt.target.value;\r\n    if (!key || !value) return;\r\n    setCameraInfo({ ...cameraInfo, [key]: value });\r\n\r\n    debounceCallback(() => {\r\n      if (key === \"Radius\")\r\n        App.intance.Viewer.cameraManager.Radius = parseFloat(value);\r\n      else {\r\n        App.intance.Viewer.cameraManager[key] = Utils.deg2rad(\r\n          parseFloat(value)\r\n        );\r\n      }\r\n    }, 200);\r\n  };\r\n  const handleChangeARCameraLimit = (\r\n    evt: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const key = evt.target.name;\r\n    const value = evt.target.value;\r\n    if (!key) return;\r\n    setLimit({ ...limit, [key]: value });\r\n\r\n    debounceCallback(() => {\r\n      if (key === \"LowerRadiusLimit\" || key === \"UpperRadiusLimit\")\r\n        App.intance.Viewer.cameraManager.ArcRotateControl[key] = value\r\n          ? parseFloat(value)\r\n          : null;\r\n      else if (key === \"MinZ\" || key === \"MaxZ\") {\r\n        if (value)\r\n          App.intance.Viewer.cameraManager.ArcRotateControl[key] =\r\n            parseFloat(value);\r\n      } else {\r\n        App.intance.Viewer.cameraManager.ArcRotateControl[key] = deg2rad(value);\r\n      }\r\n    }, 500);\r\n  };\r\n  const handleToggleCameraTF = (\r\n    evt: React.ChangeEvent<HTMLInputElement>,\r\n    checked: boolean\r\n  ) => {\r\n    const key = evt.target.name;\r\n    if (!key) return;\r\n    setEnableTF({ ...enableTF, [key]: checked });\r\n\r\n    debounceCallback(() => {\r\n      App.intance.Viewer.cameraManager.ArcRotateControl[key] = checked;\r\n    }, 500);\r\n  };\r\n\r\n  const update = () => {\r\n    const app = App.intance;\r\n    setCamera(\r\n      convert2UiData(app.Viewer.cameraManager.Position as IVector3, (n) =>\r\n        fixedNotZero(n, 2)\r\n      )\r\n    );\r\n    setTarget(\r\n      convert2UiData(app.Viewer.cameraManager.Target as IVector3, (n) =>\r\n        fixedNotZero(n, 2)\r\n      )\r\n    );\r\n\r\n    const Alpha = fixedNotZero(\r\n      Utils.rad2Deg(app.Viewer.cameraManager.Alpha),\r\n      2\r\n    );\r\n    const Beta = fixedNotZero(Utils.rad2Deg(app.Viewer.cameraManager.Beta), 2);\r\n    const Radius = fixedNotZero(app.Viewer.cameraManager.Radius, 2);\r\n\r\n    setCameraInfo({\r\n      Alpha,\r\n      Beta,\r\n      Radius,\r\n    });\r\n\r\n    setMode(app.Viewer.cameraManager.Mode);\r\n\r\n    setLimit({\r\n      LowerRadiusLimit:\r\n        app.Viewer.cameraManager.ArcRotateControl.LowerRadiusLimit?.toString?.() ??\r\n        \"\",\r\n      UpperRadiusLimit:\r\n        app.Viewer.cameraManager.ArcRotateControl.UpperRadiusLimit?.toString?.() ??\r\n        \"\",\r\n      LowerAlphaLimit: rad2Deg(\r\n        app.Viewer.cameraManager.ArcRotateControl.LowerAlphaLimit\r\n      ),\r\n      UpperAlphaLimit: rad2Deg(\r\n        app.Viewer.cameraManager.ArcRotateControl.UpperAlphaLimit\r\n      ),\r\n      LowerBetaLimit: rad2Deg(\r\n        app.Viewer.cameraManager.ArcRotateControl.LowerBetaLimit\r\n      ),\r\n      UpperBetaLimit: rad2Deg(\r\n        app.Viewer.cameraManager.ArcRotateControl.UpperBetaLimit\r\n      ),\r\n      MinZ: app.Viewer.cameraManager.ArcRotateControl.MinZ,\r\n      MaxZ: app.Viewer.cameraManager.ArcRotateControl.MaxZ,\r\n    });\r\n    setEnableTF({\r\n      EnablePan: app.Viewer.cameraManager.ArcRotateControl.EnablePan,\r\n      EnableRotate: app.Viewer.cameraManager.ArcRotateControl.EnableRotate,\r\n      EnableZoom: app.Viewer.cameraManager.ArcRotateControl.EnableZoom,\r\n    });\r\n    setLimitPan({\r\n      PanningAxis: convert2UiData(\r\n        app.Viewer.cameraManager.ArcRotateControl.PanningAxis as IVector3,\r\n        (n) => fixedNotZero(n, 2)\r\n      ),\r\n      OriginPanTarget: convert2UiData(\r\n        app.Viewer.cameraManager.ArcRotateControl.OriginPanTarget as IVector3,\r\n        (n) => fixedNotZero(n, 2)\r\n      ),\r\n      PanDistance:\r\n        app.Viewer.cameraManager.ArcRotateControl.PanDistance?.toString?.() ??\r\n        \"\",\r\n    });\r\n  };\r\n\r\n  const handleChangePanVector = (\r\n    k: string | React.ChangeEvent<HTMLInputElement>,\r\n    v?: string,\r\n    targetKey?: string\r\n  ) => {\r\n    if (typeof k !== \"string\") {\r\n      setLimitPan({ ...limitPan, PanDistance: k.target.value });\r\n      debounceCallback(() => {\r\n        App.intance.Viewer.cameraManager.ArcRotateControl.PanDistance = k.target\r\n          .value\r\n          ? parseFloat(k.target.value)\r\n          : null;\r\n      }, 500);\r\n    } else {\r\n      const newValue = { ...limitPan[targetKey], [k]: v };\r\n      setLimitPan({ ...limitPan, [targetKey]: newValue });\r\n      if (isNaN(parseFloat(v))) return;\r\n      App.intance.Viewer.cameraManager.ArcRotateControl[targetKey] = {\r\n        x: parseFloat(newValue.x) || 0,\r\n        y: parseFloat(newValue.y) || 0,\r\n        z: parseFloat(newValue.z) || 0,\r\n      };\r\n    }\r\n  };\r\n\r\n  const renderContent = () => {\r\n    if (cameraType === CameraType.ArcRotate) {\r\n      return (\r\n        <>\r\n          <Stack direction=\"row\" sx={{ mt: 2 }} title=\"横向旋转角度\">\r\n            <TitleInput\r\n              title=\"横向旋转\"\r\n              value={cameraInfo.Alpha}\r\n              onChange={handleChangeCameraInfo}\r\n              name=\"Alpha\"\r\n            />\r\n          </Stack>\r\n          <Stack direction=\"row\" title=\"纵向旋转角度\" sx={{ mt: 2 }}>\r\n            <TitleInput\r\n              title=\"纵向旋转\"\r\n              value={cameraInfo.Beta}\r\n              onChange={handleChangeCameraInfo}\r\n              name=\"Beta\"\r\n            />\r\n          </Stack>\r\n          <Stack direction=\"row\" title=\"观察半径\" sx={{ mt: 2 }}>\r\n            <TitleInput\r\n              disabled={mode === 1}\r\n              title=\"观察半径\"\r\n              value={cameraInfo.Radius}\r\n              onChange={handleChangeCameraInfo}\r\n              name=\"Radius\"\r\n            />\r\n          </Stack>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n            <Title title=\"位置\" mt={0.7} />\r\n            <VectorPanel\r\n              sx={{ width: 50 }}\r\n              vector={camera}\r\n              onChange={handleChangeCameraVector}\r\n            />\r\n          </Stack>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let disposes: (() => void)[] = [];\r\n    when(\r\n      () => !!App.intance,\r\n      () => {\r\n        update();\r\n        const app = App.intance;\r\n        disposes.push(\r\n          app.on(\"CameraUpdate\", (event) => {\r\n            timer && clearTimeout(timer);\r\n            timer = setTimeout(() => {\r\n              update();\r\n            }, 100);\r\n          }),\r\n          end(\r\n            app.Viewer.cameraManager,\r\n            app.Viewer.cameraManager.switchEvent,\r\n            (c) => {\r\n              setCameraType(c.Type);\r\n            }\r\n          )\r\n        );\r\n      }\r\n    );\r\n    return () => {\r\n      timer && clearTimeout(timer);\r\n      disposes.forEach((d) => d());\r\n      disposes.length = 0;\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <Title title=\"类型\" mt={0.7} />\r\n        <CommonSelect\r\n          value={mode}\r\n          onChange={handleToggleCameraType}\r\n          disabled={cameraType !== CameraType.ArcRotate}\r\n          options={[\r\n            {\r\n              label: \"透视\",\r\n              value: 0,\r\n            },\r\n            {\r\n              label: \"正交\",\r\n              value: 1,\r\n            },\r\n          ]}\r\n        />\r\n      </Stack>\r\n      {renderContent()}\r\n      <Stack direction=\"row\" sx={{ mt: 2 }}>\r\n        <Title title=\"目标\" mt={0.7} />\r\n        <VectorPanel\r\n          sx={{ width: 50 }}\r\n          vector={target}\r\n          onChange={handleChangeTargetVector}\r\n        />\r\n      </Stack>\r\n      {cameraType === CameraType.ArcRotate && (\r\n        <>\r\n          <Stack direction=\"row\" sx={{ mt: 1 }}>\r\n            <Title title=\"允许平移\" mt={1.1} />\r\n            <Switch\r\n              checked={enableTF.EnablePan}\r\n              onChange={handleToggleCameraTF}\r\n              name=\"EnablePan\"\r\n              inputProps={{ \"aria-label\": \"controlled\" }}\r\n            />\r\n          </Stack>\r\n          <Stack direction=\"row\" sx={{ mt: 1 }}>\r\n            <Title title=\"允许旋转\" mt={1.1} />\r\n            <Switch\r\n              checked={enableTF.EnableRotate}\r\n              onChange={handleToggleCameraTF}\r\n              name=\"EnableRotate\"\r\n              inputProps={{ \"aria-label\": \"controlled\" }}\r\n            />\r\n          </Stack>\r\n          <Stack direction=\"row\" sx={{ mt: 1 }}>\r\n            <Title title=\"允许缩放\" mt={1.1} />\r\n            <Switch\r\n              checked={enableTF.EnableZoom}\r\n              onChange={handleToggleCameraTF}\r\n              name=\"EnableZoom\"\r\n              inputProps={{ \"aria-label\": \"controlled\" }}\r\n            />\r\n          </Stack>\r\n          <HStack sx={{ mt: 2 }}>\r\n            <TitleInput\r\n              name=\"MinZ\"\r\n              title=\"近平面\"\r\n              value={limit.MinZ}\r\n              onChange={handleChangeARCameraLimit}\r\n            />\r\n          </HStack>\r\n          <HStack sx={{ mt: 2 }}>\r\n            <TitleInput\r\n              name=\"MaxZ\"\r\n              title=\"远平面\"\r\n              value={limit.MaxZ}\r\n              onChange={handleChangeARCameraLimit}\r\n            />\r\n          </HStack>\r\n          <HStack sx={{ mt: 2 }}>\r\n            <TitleInput\r\n              name=\"LowerRadiusLimit\"\r\n              title=\"最小观察距离\"\r\n              value={limit.LowerRadiusLimit}\r\n              onChange={handleChangeARCameraLimit}\r\n            />\r\n          </HStack>\r\n          <HStack sx={{ mt: 2 }}>\r\n            <TitleInput\r\n              name=\"UpperRadiusLimit\"\r\n              title=\"最大观察距离\"\r\n              value={limit.UpperRadiusLimit}\r\n              onChange={handleChangeARCameraLimit}\r\n            />\r\n          </HStack>\r\n          <HStack sx={{ mt: 2 }}>\r\n            <TitleInput\r\n              name=\"LowerAlphaLimit\"\r\n              title=\"最小横向旋转\"\r\n              value={limit.LowerAlphaLimit}\r\n              onChange={handleChangeARCameraLimit}\r\n            />\r\n          </HStack>\r\n          <HStack sx={{ mt: 2 }}>\r\n            <TitleInput\r\n              name=\"UpperAlphaLimit\"\r\n              title=\"最大横向旋转\"\r\n              value={limit.UpperAlphaLimit}\r\n              onChange={handleChangeARCameraLimit}\r\n            />\r\n          </HStack>\r\n          <HStack sx={{ mt: 2 }}>\r\n            <TitleInput\r\n              name=\"LowerBetaLimit\"\r\n              title=\"最小纵向旋转\"\r\n              value={limit.LowerBetaLimit}\r\n              onChange={handleChangeARCameraLimit}\r\n            />\r\n          </HStack>\r\n          <HStack sx={{ mt: 2 }}>\r\n            <TitleInput\r\n              name=\"UpperBetaLimit\"\r\n              title=\"最大纵向旋转\"\r\n              value={limit.UpperBetaLimit}\r\n              onChange={handleChangeARCameraLimit}\r\n            />\r\n          </HStack>\r\n\r\n          <HStack sx={{ mt: 2 }}>\r\n            <Title title=\"初始平移点\" mt={0.7} />\r\n            <VectorPanel\r\n              sx={{ width: 50 }}\r\n              vector={limitPan.OriginPanTarget}\r\n              onChange={handleChangePanVector}\r\n              name=\"OriginPanTarget\"\r\n            />\r\n          </HStack>\r\n          <HStack sx={{ mt: 2 }}>\r\n            <Title title=\"允许平移方向\" mt={0.7} />\r\n            <VectorPanel\r\n              sx={{ width: 50 }}\r\n              vector={limitPan.PanningAxis}\r\n              onChange={handleChangePanVector}\r\n              name=\"PanningAxis\"\r\n            />\r\n          </HStack>\r\n          <HStack sx={{ mt: 2 }}>\r\n            <TitleInput\r\n              name=\"PanDistance\"\r\n              title=\"最大平移范围\"\r\n              value={limitPan.PanDistance}\r\n              onChange={handleChangePanVector}\r\n            />\r\n          </HStack>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default CameraPanel;\r\n","import {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { Observer } from \"mobx-react-lite\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport { useStores } from \"~/contexts/store-context\";\r\n\r\nimport DialogHeader from \"../common/dialogHeader\";\r\nimport { HStack } from \"../common/stack\";\r\nimport CodeEditor from \"../editorModal/codeEditor\";\r\nimport { TEditor } from \"../editorModal/types\";\r\nimport defaultCode from \"./defaultCode\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { App } from \"~/intance\";\r\nimport * as HC from \"@hc/engine\";\r\nimport { getFunction } from \"~/utils/component\";\r\nimport { AppEvent } from \"@hc/engine\";\r\n\r\ninterface ScriptPanelProps {}\r\n\r\nconst ScriptPanel: React.FC<ScriptPanelProps> = () => {\r\n  const { fileStore } = useStores();\r\n  const [open, setOpen] = useState(false);\r\n  const [name, setName] = useState(\"默认脚本\");\r\n  const editorRef = useRef<TEditor>(null);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    fileStore.editorScriptId = 0;\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleTest = () => {\r\n    for (const c of fileStore.codeList) {\r\n      const f = getFunction(c.code)();\r\n      f(App.intance, HC);\r\n    }\r\n    setTimeout(() => {\r\n      AppEvent.trigger({ type: \"loadComplete\", target: null });\r\n    }, 1000);\r\n  };\r\n\r\n  const getCode = (id) => {\r\n    const sp = fileStore.codeList.find((s) => s.id === id);\r\n    if (sp) {\r\n      return sp.code;\r\n    }\r\n    return;\r\n  };\r\n\r\n  const edit = (sp) => {\r\n    handleOpen();\r\n    fileStore.editorScriptId = sp.id;\r\n    // editorRef.current.setValue(sp.code);\r\n    setName(sp.name);\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    if (fileStore.editorScriptId) {\r\n      fileStore.updateCodeScript({\r\n        name,\r\n        code: editorRef.current.getValue(),\r\n        id: fileStore.editorScriptId,\r\n      });\r\n      fileStore.editorScriptId = 0;\r\n    } else {\r\n      fileStore.appendCodeScript({\r\n        name,\r\n        code: editorRef.current.getValue(),\r\n        id: Date.now(),\r\n      });\r\n    }\r\n\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <Observer>\r\n      {() => (\r\n        <Box sx={{ width: \"100%\" }}>\r\n          <List>\r\n            {fileStore.codeList.map((sp) => (\r\n              <ListItem\r\n                sx={{ outline: \"1px solid #ccc\" }}\r\n                key={sp.id}\r\n                secondaryAction={\r\n                  <>\r\n                    <IconButton aria-label=\"delete\" onClick={() => edit(sp)}>\r\n                      <EditIcon />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      aria-label=\"delete\"\r\n                      onClick={() => fileStore.deleteScript(sp.id)}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </>\r\n                }\r\n              >\r\n                {sp.name}\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={handleOpen}\r\n            fullWidth\r\n            sx={{ width: \"100%\" }}\r\n          >\r\n            添加脚本\r\n          </Button>\r\n          {localStorage.getItem(\"DEBUGSCRIPT\") && (\r\n            <Button\r\n              variant=\"contained\"\r\n              onClick={handleTest}\r\n              fullWidth\r\n              sx={{ width: \"100%\", mt: 2 }}\r\n            >\r\n              测试脚本\r\n            </Button>\r\n          )}\r\n\r\n          <Dialog\r\n            open={open}\r\n            maxWidth=\"lg\"\r\n            fullWidth\r\n            PaperProps={{ sx: { height: \"80vh\" } }}\r\n          >\r\n            <DialogHeader title=\"脚本编辑\" onClose={handleClose} />\r\n            <DialogContent>\r\n              <HStack alignItems=\"center\">\r\n                <Typography>脚本名称:</Typography>\r\n                <TextField\r\n                  value={name}\r\n                  onChange={(evt) => setName(evt.target.value)}\r\n                  size=\"small\"\r\n                />\r\n              </HStack>\r\n              <CodeEditor\r\n                updateProperyty={() => {}}\r\n                getEditor={(e) => (editorRef.current = e)}\r\n                onChange={() => {}}\r\n                onMount={() => {}}\r\n                code={getCode(fileStore.editorScriptId) ?? defaultCode}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleConfirm}>确定</Button>\r\n              <Button onClick={handleClose}>取消</Button>\r\n            </DialogActions>\r\n          </Dialog>\r\n        </Box>\r\n      )}\r\n    </Observer>\r\n  );\r\n};\r\nexport default ScriptPanel;\r\n","export default `function(app,HC){\r\n    console.log(app,HC)\r\n}`;\r\n","import ScenePanel from \"./scenePanel\";\r\nimport Board from \"./board\";\r\nimport React from \"react\";\r\nimport BasePanel from \"./basePanel\";\r\nimport Interaction from \"../interaction\";\r\nimport Property from \"../property\";\r\nimport { ERightTab } from \"./types\";\r\nimport CameraPanel from \"./cameraPanel\";\r\nimport ScriptPanel from \"../scriptPanel\";\r\n\r\nexport const SceneTabs = [\r\n  { title: \"场景\", id: ERightTab.Basic, component: <ScenePanel /> },\r\n  { title: \"相机\", id: ERightTab.Camera, component: <CameraPanel /> },\r\n  { title: \"交互\", id: ERightTab.Interaction, component: <Interaction /> },\r\n  { title: \"看板\", id: ERightTab.Board, component: <Board /> },\r\n  { title: \"脚本\", id: ERightTab.Script, component: <ScriptPanel /> },\r\n  // { title: \"脚本\", id: ERightTab.Script, component: <div>脚本</div> },\r\n];\r\n\r\nexport const EntityTabs = [\r\n  { title: \"基础\", id: ERightTab.Basic, component: <BasePanel /> },\r\n  // { title: \"材质\", id: ERightTab.Material, component: <></> },\r\n  { title: \"特性\", id: ERightTab.Prop, component: <Property /> },\r\n  { title: \"交互\", id: ERightTab.Interaction, component: <Interaction /> },\r\n];\r\n","import {\r\n  Box,\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  Paper,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport DialogHeader from \"../common/dialogHeader\";\r\nimport { HStack } from \"../common/stack\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { useRightStores } from \"~/contexts/rightStoreContext\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport EditorCell from \"../editorModal/editorCell\";\r\n\r\ninterface GlobalVariablesProps {}\r\n\r\nconst rows = [\r\n  {\r\n    key: \"haha\",\r\n    value: \"123\",\r\n    desc: \"test\",\r\n  },\r\n];\r\n\r\nconst GlobalVariables: React.FC<GlobalVariablesProps> = () => {\r\n  const { globalVarStore } = useRightStores();\r\n\r\n  const handleClose = () => {\r\n    globalVarStore.cancel();\r\n  };\r\n\r\n  const handleConfirm = () => {\r\n    globalVarStore.confirm();\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={globalVarStore.Open}\r\n      maxWidth=\"md\"\r\n      PaperProps={{ sx: { height: \"522px\" } }}\r\n    >\r\n      <DialogHeader onClose={handleClose} title=\"全局变量\" />\r\n      <DialogContent>\r\n        <HStack>\r\n          <Button onClick={() => globalVarStore.add()}>添加</Button>\r\n          <Button onClick={() => globalVarStore.up()}>上移</Button>\r\n          <Button onClick={() => globalVarStore.down()}>下移</Button>\r\n          <Button onClick={() => globalVarStore.delete()}>删除</Button>\r\n        </HStack>\r\n        <TableContainer component={Paper} sx={{ height: \"calc(100% - 40px)\" }}>\r\n          <Table sx={{ minWidth: 650 }} aria-label=\"simple table\" stickyHeader>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell align=\"center\">变量名称</TableCell>\r\n                <TableCell align=\"center\">默认值</TableCell>\r\n                <TableCell align=\"center\">备注</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {globalVarStore.variables.map((vb, index) => (\r\n                <TableRow\r\n                  onClick={() => (globalVarStore.CurrentIndex = index)}\r\n                  key={vb.key}\r\n                  sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\r\n                  selected={globalVarStore.CurrentIndex === index}\r\n                >\r\n                  <EditorCell\r\n                    align=\"center\"\r\n                    defaultValue={vb.key}\r\n                    onBlur={(evt) => {\r\n                      if (evt.target.value) {\r\n                        globalVarStore.update(vb.key, {\r\n                          key: evt.target.value,\r\n                        });\r\n                      }\r\n                    }}\r\n                  />\r\n                  <EditorCell\r\n                    align=\"center\"\r\n                    defaultValue={\r\n                      typeof vb.value === \"boolean\"\r\n                        ? String(vb.value)\r\n                        : vb.value\r\n                    }\r\n                    onBlur={(evt) => {\r\n                      if (evt.target.value) {\r\n                        globalVarStore.update(vb.key, {\r\n                          value: evt.target.value,\r\n                        });\r\n                      }\r\n                    }}\r\n                  />\r\n                  <EditorCell\r\n                    align=\"center\"\r\n                    defaultValue={vb.desc}\r\n                    onBlur={(evt) => {\r\n                      if (evt.target.value) {\r\n                        globalVarStore.update(vb.key, {\r\n                          desc: evt.target.value,\r\n                        });\r\n                      }\r\n                    }}\r\n                  />\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </DialogContent>\r\n      <DialogActions sx={{ justifyContent: \"space-between\" }}>\r\n        <Box>\r\n          <Typography variant=\"subtitle2\">全局变量由字母数字组成</Typography>\r\n          <Typography variant=\"subtitle2\">\r\n            全局变量可在整个项目的应用中贯穿使用\r\n          </Typography>\r\n        </Box>\r\n        <HStack>\r\n          <Button\r\n            onClick={handleConfirm}\r\n            autoFocus\r\n            variant=\"contained\"\r\n            sx={{ mr: 2 }}\r\n          >\r\n            确定\r\n          </Button>\r\n          <Button\r\n            autoFocus\r\n            onClick={handleClose}\r\n            variant=\"contained\"\r\n            color=\"error\"\r\n          >\r\n            取消\r\n          </Button>\r\n        </HStack>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\nexport default observer(GlobalVariables);\r\n","import { IconButton, Box } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport IconAli from \"../common/iconAli\";\r\nimport GlobalVariables from \"./globalVariables\";\r\nimport { useRightStores } from \"~/contexts/rightStoreContext\";\r\nimport { observer, Observer } from \"mobx-react-lite\";\r\n\r\ninterface GlobalVarButtonProps {}\r\n\r\nconst GlobalVarButton: React.FC<GlobalVarButtonProps> = React.forwardRef(\r\n  (props, ref: React.Ref<HTMLButtonElement>) => {\r\n    const { globalVarStore } = useRightStores();\r\n\r\n    return (\r\n      <Observer>\r\n        {() => (\r\n          <>\r\n            <IconButton\r\n              onClick={() => (globalVarStore.Open = true)}\r\n              ref={ref}\r\n              {...props}\r\n              sx={{ height: \"40px\" }}\r\n            >\r\n              <IconAli name=\"icon-3Dhanshu\" />\r\n            </IconButton>\r\n            {globalVarStore.Open && <GlobalVariables />}\r\n          </>\r\n        )}\r\n      </Observer>\r\n    );\r\n  }\r\n);\r\nexport default observer(GlobalVarButton);\r\n","import {\r\n  Dialog,\r\n  DialogContent,\r\n  Grid,\r\n  ToggleButtonGroup,\r\n  ToggleButton,\r\n  TextareaAutosize,\r\n  Button,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport DialogHeader from \"../../common/dialogHeader\";\r\nimport { useRightStores } from \"~/contexts/rightStoreContext\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport STable from \"~/components/STable\";\r\nimport SModal from \"~/components/SModal\";\r\nimport { httpAction, getAction, deleteAction } from \"~/apis/manage\";\r\nimport { message } from \"~/utils/message\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { rootStore } from \"~/stores/RootStore\";\r\nimport { CloudauthApi } from \"~/apis\";\r\nimport { reaction } from \"mobx\";\r\n\r\ninterface CloudServicesProps {}\r\n\r\nconst Input = styled(TextField)(({ theme }) => ({\r\n  \"& input\": {\r\n    height: \"1em\",\r\n    width: \"300px\",\r\n  },\r\n}));\r\n\r\nconst SlefButton = styled(Button)(({ theme }) => ({\r\n  marginRight: \"8px\",\r\n}));\r\n\r\nconst Label = styled(\"div\")(({ theme }) => ({\r\n  display: \"inline-block\",\r\n  width: \"100px\",\r\n  fontSize: \"14px\",\r\n  textAlign: \"right\",\r\n}));\r\n\r\nconst formItemStyle = {\r\n  display: \"inline-flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n  height: \"50px\",\r\n};\r\n\r\ntype FormData = {\r\n  id?: string | number;\r\n  name?: string;\r\n  appKey?: string;\r\n  appSecret?: string;\r\n  remark?: string;\r\n  type?: number; // 0 海创云 1阿里云\r\n  projectId?: string | number;\r\n  regionId?: string;\r\n  aliId?: string;\r\n  iotInstanceId?: string;\r\n  groupId?: string;\r\n};\r\n\r\nlet initFormData: FormData = {\r\n  name: \"\",\r\n  appKey: \"\",\r\n  appSecret: \"\",\r\n  remark: \"\",\r\n  type: 0,\r\n  projectId: \"\",\r\n  regionId: \"\",\r\n  aliId: \"\",\r\n  iotInstanceId: \"\",\r\n  groupId: \"\",\r\n};\r\nconst CloudService: React.FC<CloudServicesProps> = () => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [editTitle, setEditTitle] = useState(\"新增链接\");\r\n  const [formData, setFormData] = useState(initFormData);\r\n  const [columns, setColumns] = useState([\r\n    {\r\n      key: \"name\",\r\n      title: \"名称\",\r\n      align: \"left\",\r\n    },\r\n    {\r\n      key: \"type\",\r\n      title: \"接入类型\",\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <span>{text === 0 ? \"海创云\" : \"阿里云\"}</span>\r\n      ),\r\n    },\r\n    {\r\n      key: \"remark\",\r\n      title: \"描述\",\r\n      align: \"center\",\r\n    },\r\n    {\r\n      key: \"action\",\r\n      title: \"操作\",\r\n      align: \"center\",\r\n      render: (text, record, index) => (\r\n        <>\r\n          <SlefButton variant=\"outlined\" onClick={() => edit(record)}>\r\n            编辑\r\n          </SlefButton>\r\n          <SlefButton\r\n            variant=\"outlined\"\r\n            onClick={() => deleteData(record.id)}\r\n            color=\"error\"\r\n            sx={{ marginRight: 0 }}\r\n          >\r\n            删除\r\n          </SlefButton>\r\n        </>\r\n      ),\r\n    },\r\n  ]);\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [ipagenation, setIpagenation] = useState({\r\n    pageNum: 0,\r\n    pageSize: 5,\r\n    pageSizeOptions: [1, 3, 5, 10, 25],\r\n  });\r\n  const [actionType, setActionType] = useState(false); // true 编辑；false 新增\r\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\r\n  const [selectionRows, setSelectionRows] = useState([]);\r\n\r\n  // 添加应用\r\n  const add = () => {\r\n    setFormData(initFormData);\r\n    setEditTitle(\"新增连接\");\r\n    setVisible(true);\r\n    setActionType(false);\r\n  };\r\n\r\n  const edit = (record) => {\r\n    setFormData(record);\r\n    setEditTitle(\"修改连接\");\r\n    setVisible(true);\r\n    setActionType(true);\r\n  };\r\n\r\n  // 点击确认回调\r\n  const handleOk = () => {\r\n    let data = {\r\n      ...formData,\r\n      projectId: rootStore.projectId,\r\n    };\r\n    addOrEditData(data);\r\n  };\r\n\r\n  // 改变输入框值\r\n  const changeValue = (event, type) => {\r\n    let obj = { ...formData };\r\n    obj[type] = event.target.value;\r\n    setFormData(obj);\r\n  };\r\n\r\n  const changeBtnValue = (value, type) => {\r\n    let obj = { ...formData };\r\n    obj[type] = value;\r\n    setFormData(obj);\r\n  };\r\n\r\n  // 点击取消回调\r\n  const handleClose = () => {\r\n    setVisible(false);\r\n  };\r\n  const handleCloudServicesClose = () => {\r\n    cloudServicesStore.Open = false;\r\n  };\r\n  useEffect(() => {\r\n    reaction(\r\n      () => rootStore.projectId,\r\n      () => {\r\n        getDataList();\r\n      }\r\n    );\r\n  }, []);\r\n  const getDataList = () => {\r\n    if (rootStore.projectId === 0) {\r\n      return;\r\n    }\r\n    getAction(CloudauthApi.list, { project_id: rootStore.projectId })\r\n      .then((res) => {\r\n        if (res[\"code\"] === 0) {\r\n          let { list } = res.data;\r\n          if (list && list.length > 0) {\r\n            let arr = [];\r\n            for (let item of list) {\r\n              let obj = {\r\n                id: item.id,\r\n                name: item.name,\r\n                appKey: item.app_key,\r\n                appSecret: item.app_secret,\r\n                remark: item.remark,\r\n                type: item.type,\r\n                projectId: item.project_id,\r\n                regionId: item.region_id,\r\n                aliId: item.ali_id,\r\n                iotInstanceId: item.iot_instance_id,\r\n                groupId: item.group_id,\r\n                realm: item.realm,\r\n              };\r\n\r\n              arr.push(obj);\r\n            }\r\n            setDataSource(arr);\r\n          } else {\r\n            setDataSource([]);\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // }\r\n  };\r\n  const addOrEditData = (data) => {\r\n    httpAction(CloudauthApi.edit, data, \"post\").then((res) => {\r\n      if (res[\"code\"] === 0) {\r\n        getDataList();\r\n        message.success(\"操作成功\");\r\n        setVisible(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  const deleteData = (id) => {\r\n    let formData = {\r\n      id: [id],\r\n    };\r\n    deleteAction(CloudauthApi.delete, formData).then((res) => {\r\n      if (res[\"code\"] === 0) {\r\n        getDataList();\r\n        message.success(\"删除成功\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const deleteBatchData = () => {\r\n    if (selectedRowKeys.length > 0) {\r\n      let formData = {\r\n        id: selectedRowKeys,\r\n      };\r\n      deleteAction(CloudauthApi.delete, formData).then((res) => {\r\n        if (res[\"code\"] === 0) {\r\n          getDataList();\r\n          message.success(\"删除成功\");\r\n        }\r\n      });\r\n    } else {\r\n      message.error(\"请选择要删除的项！\");\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (page) => {\r\n    setIpagenation({\r\n      pageNum: page,\r\n      pageSize: ipagenation.pageSize,\r\n      pageSizeOptions: ipagenation.pageSizeOptions,\r\n    });\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    setIpagenation({\r\n      pageNum: 0,\r\n      pageSize: rowsPerPage,\r\n      pageSizeOptions: ipagenation.pageSizeOptions,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDataList();\r\n  }, []);\r\n  useEffect(() => {\r\n    reaction(\r\n      () => rootStore.BgType,\r\n      () => {\r\n        getDataList();\r\n      }\r\n    );\r\n  }, []);\r\n  const selectedChange = (rowKeys, rows) => {\r\n    setSelectedRowKeys(rowKeys);\r\n    setSelectionRows(rows);\r\n  };\r\n\r\n  const { cloudServicesStore } = useRightStores();\r\n\r\n  return (\r\n    <Dialog\r\n      open={cloudServicesStore.Open}\r\n      maxWidth=\"md\"\r\n      PaperProps={{ sx: { height: \"620px\", minWidth: \"620px\" } }}\r\n    >\r\n      <DialogHeader onClose={handleCloudServicesClose} title=\"数据连接\" />\r\n      <DialogContent>\r\n        <SlefButton\r\n          variant=\"outlined\"\r\n          onClick={add}\r\n          sx={{ marginBottom: \"8px\" }}\r\n        >\r\n          添加数据\r\n        </SlefButton>\r\n        <SlefButton\r\n          variant=\"outlined\"\r\n          onClick={deleteBatchData}\r\n          color=\"error\"\r\n          sx={{ marginRight: 0, marginBottom: \"8px\" }}\r\n        >\r\n          批量删除\r\n        </SlefButton>\r\n        <STable\r\n          columns={columns}\r\n          dataSource={dataSource}\r\n          rowKey=\"id\"\r\n          ipagenation={ipagenation}\r\n          handleChangePage={handleChangePage}\r\n          handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n          selectedRowKeys={selectedRowKeys}\r\n          selectionRows={selectionRows}\r\n          selectedChange={selectedChange}\r\n        ></STable>\r\n        <SModal\r\n          size=\"sm\"\r\n          title={editTitle}\r\n          visible={visible}\r\n          handleOk={handleOk}\r\n          handleClose={handleClose}\r\n          fullWidth={true}\r\n        >\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sx={formItemStyle}>\r\n              <Label>名称：</Label>\r\n              <Input\r\n                size=\"small\"\r\n                value={formData.name}\r\n                onChange={(event) => {\r\n                  changeValue(event, \"name\");\r\n                }}\r\n              ></Input>\r\n            </Grid>\r\n            <Grid item xs={12} sx={formItemStyle}>\r\n              <Label>接入类型：</Label>\r\n              <ToggleButtonGroup\r\n                disabled={actionType}\r\n                color=\"primary\"\r\n                value={formData.type}\r\n                exclusive\r\n                onChange={(event, value) => {\r\n                  changeBtnValue(value, \"type\");\r\n                }}\r\n                sx={{ width: \"326px\", height: \"30px\" }}\r\n              >\r\n                <ToggleButton value={0}>海创云</ToggleButton>\r\n                <ToggleButton value={1}>阿里云</ToggleButton>\r\n              </ToggleButtonGroup>\r\n            </Grid>\r\n            <Grid item xs={12} sx={formItemStyle}>\r\n              <Label>appKey：</Label>\r\n              <Input\r\n                disabled={actionType}\r\n                size=\"small\"\r\n                value={formData.appKey}\r\n                onChange={(event) => {\r\n                  changeValue(event, \"appKey\");\r\n                }}\r\n              ></Input>\r\n            </Grid>\r\n            <Grid item xs={12} sx={formItemStyle}>\r\n              <Label>app秘钥：</Label>\r\n              <Input\r\n                disabled={actionType}\r\n                size=\"small\"\r\n                value={formData.appSecret}\r\n                onChange={(event) => {\r\n                  changeValue(event, \"appSecret\");\r\n                }}\r\n              ></Input>\r\n            </Grid>\r\n            {formData.type === 1 ? (\r\n              <>\r\n                <Grid item xs={12} sx={formItemStyle}>\r\n                  <Label>地域：</Label>\r\n                  <Input\r\n                    disabled={actionType}\r\n                    size=\"small\"\r\n                    value={formData.regionId}\r\n                    onChange={(event) => {\r\n                      changeValue(event, \"regionId\");\r\n                    }}\r\n                  ></Input>\r\n                </Grid>\r\n                <Grid item xs={12} sx={formItemStyle}>\r\n                  <Label>阿里云ID：</Label>\r\n                  <Input\r\n                    disabled={actionType}\r\n                    size=\"small\"\r\n                    value={formData.aliId}\r\n                    onChange={(event) => {\r\n                      changeValue(event, \"aliId\");\r\n                    }}\r\n                  ></Input>\r\n                </Grid>\r\n                <Grid item xs={12} sx={formItemStyle}>\r\n                  <Label>企业版实例ID：</Label>\r\n                  <Input\r\n                    disabled={actionType}\r\n                    size=\"small\"\r\n                    value={formData.iotInstanceId}\r\n                    onChange={(event) => {\r\n                      changeValue(event, \"iotInstanceId\");\r\n                    }}\r\n                  ></Input>\r\n                </Grid>\r\n                <Grid item xs={12} sx={formItemStyle}>\r\n                  <Label>消息组ID：</Label>\r\n                  <Input\r\n                    disabled={actionType}\r\n                    size=\"small\"\r\n                    value={formData.groupId}\r\n                    onChange={(event) => {\r\n                      changeValue(event, \"groupId\");\r\n                    }}\r\n                  ></Input>\r\n                </Grid>\r\n              </>\r\n            ) : null}\r\n            <Grid item xs={12} sx={{ ...formItemStyle, height: 70 }}>\r\n              <Label>备注：</Label>\r\n              <TextareaAutosize\r\n                minRows={3}\r\n                maxRows={3}\r\n                style={{ width: 328 }}\r\n                value={formData.remark}\r\n                onChange={(event) => {\r\n                  changeValue(event, \"remark\");\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </SModal>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\nexport default observer(CloudService);\r\n","import { IconButton, Box } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport IconAli from \"~/components/common/iconAli\";\r\nimport CloudServices from \"./cloudServices\";\r\nimport { useRightStores } from \"~/contexts/rightStoreContext\";\r\nimport { Observer } from \"mobx-react-lite\";\r\n\r\ninterface CloudServicesButtonProps {}\r\n\r\nconst CloudServicesButton: React.FC<CloudServicesButtonProps> =\r\n  React.forwardRef((props, ref: React.Ref<HTMLButtonElement>) => {\r\n    const { cloudServicesStore } = useRightStores();\r\n\r\n    return (\r\n      <Observer>\r\n        {() => (\r\n          <>\r\n            <IconButton\r\n              onClick={() => (cloudServicesStore.Open = true)}\r\n              ref={ref}\r\n              {...props}\r\n              sx={{ height: \"40px\" }}\r\n            >\r\n              <IconAli name=\"icon-3Dmoxingshuju\" />\r\n            </IconButton>\r\n            <CloudServices />\r\n          </>\r\n        )}\r\n      </Observer>\r\n    );\r\n  });\r\nexport default CloudServicesButton;\r\n","import { CMD, end } from \"@hc/engine\";\r\nimport { IconButton, Tooltip } from \"@mui/material\";\r\nimport { when } from \"mobx\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { App } from \"~/intance\";\r\nimport IconAli from \"../common/iconAli\";\r\n\r\ninterface UndoBtnProps {\r\n  isUndo: boolean;\r\n  iconName: string;\r\n}\r\n\r\nconst UndoRedoBtn: React.FC<UndoBtnProps> = React.forwardRef(\r\n  ({ isUndo, iconName }: UndoBtnProps, ref: React.Ref<HTMLButtonElement>) => {\r\n    const [disabled, setDisabled] = useState(true);\r\n    const handleClick = () => {\r\n      CMD.commandManager.ExecCommand(isUndo ? \"UNDO\" : \"REDO\");\r\n    };\r\n\r\n    const update = () => {\r\n      if (isUndo) {\r\n        setDisabled(!App.intance.Database.HistoryManager.HasUndo);\r\n      } else {\r\n        setDisabled(!App.intance.Database.HistoryManager.HasRedo);\r\n      }\r\n    };\r\n\r\n    useEffect(() => {\r\n      const clears = [];\r\n      when(\r\n        () => !!App.intance,\r\n        () => {\r\n          clears.push(\r\n            end(\r\n              App.intance.Database.HistoryManager,\r\n              App.intance.Database.HistoryManager.endCmdEvent,\r\n              () => {\r\n                if (isUndo) setDisabled(false);\r\n              }\r\n            ),\r\n            end(\r\n              App.intance.Database.HistoryManager,\r\n              App.intance.Database.HistoryManager.redoEvent,\r\n              (e) => {\r\n                update();\r\n              }\r\n            ),\r\n            end(\r\n              App.intance.Database.HistoryManager,\r\n              App.intance.Database.HistoryManager.undoEvent,\r\n              (e) => {\r\n                update();\r\n              }\r\n            )\r\n          );\r\n        }\r\n      );\r\n\r\n      return () => {\r\n        clears.forEach((c) => c());\r\n      };\r\n    }, []);\r\n\r\n    return (\r\n      <Tooltip title={isUndo ? \"撤销\" : \"恢复\"} placement=\"left\">\r\n        <IconButton\r\n          onClick={disabled ? () => {} : handleClick}\r\n          sx={{\r\n            height: 40,\r\n            cursor: disabled ? \"not-allowed\" : \"pointer\",\r\n            color: disabled ? \"rgba(0, 0, 0, 0.26)\" : \"rgba(0, 0, 0, 1)\",\r\n          }}\r\n        >\r\n          <IconAli\r\n            name={iconName}\r\n            color={disabled ? \"rgba(0, 0, 0, 0.26)\" : \"rgba(0, 0, 0, 1)\"}\r\n          />\r\n        </IconButton>\r\n      </Tooltip>\r\n    );\r\n  }\r\n);\r\nexport default UndoRedoBtn;\r\n","import { useState } from \"react\";\r\n\r\nconst getLocalValue = (key: string): string | null => {\r\n  let v = localStorage.getItem(key);\r\n\r\n  return v;\r\n};\r\n\r\nexport function useLocalStorage<T = unknown>(\r\n  initValue: T,\r\n  key: string,\r\n  parse: (v) => any = (v) => v\r\n): [T, (v: T) => void, () => boolean] {\r\n  const [state, setState] = useState<T>(\r\n    parse(getLocalValue(key) as any) ?? initValue\r\n  );\r\n\r\n  const changeState = (v: T) => {\r\n    setState(v);\r\n    localStorage.setItem(key, v.toString());\r\n  };\r\n\r\n  const hasState = () => {\r\n    return !!localStorage.getItem(key);\r\n  };\r\n\r\n  return [state, changeState, hasState];\r\n}\r\n","import { IconButton, Tooltip } from \"@mui/material\";\r\nimport { when } from \"mobx\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useLocalStorage } from \"~/hooks/useLocalStrorage\";\r\nimport { App } from \"~/intance\";\r\nimport IconAli from \"../common/iconAli\";\r\n\r\ninterface LocalstorageBtnProps {\r\n  iconName: string;\r\n  targetKey: string;\r\n  tip: string;\r\n}\r\n\r\nconst LocalstorageBtn: React.FC<LocalstorageBtnProps> = React.forwardRef(\r\n  ({ iconName, targetKey, tip }, ref) => {\r\n    const [value, setValue, hasValue] = useLocalStorage(\r\n      true,\r\n      targetKey,\r\n      (n) => n === \"true\"\r\n    );\r\n\r\n    const handleClick = () => {\r\n      setValue(!App.intance.Viewer[targetKey]);\r\n      App.intance.Viewer[targetKey] = !App.intance.Viewer[targetKey];\r\n    };\r\n\r\n    useEffect(() => {\r\n      if (hasValue) {\r\n        App.intance.Viewer[targetKey] = value;\r\n      } else {\r\n        when(\r\n          () => !!App.intance,\r\n          () => {\r\n            setValue(App.intance.Viewer[targetKey]);\r\n          }\r\n        );\r\n      }\r\n    }, []);\r\n\r\n    return (\r\n      <Tooltip title={tip} placement=\"left\">\r\n        <IconButton onClick={handleClick} sx={{ height: \"40px\" }}>\r\n          <IconAli name={iconName} />\r\n        </IconButton>\r\n      </Tooltip>\r\n    );\r\n  }\r\n);\r\nexport default LocalstorageBtn;\r\n","import React from \"react\";\r\nimport GlobalVarButton from \"./globalVarButton\";\r\nimport { App } from \"~/intance\";\r\nimport IconAli from \"../common/iconAli\";\r\nimport { CameraType } from \"@hc/engine\";\r\nimport { message, ToasterKeys } from \"~/utils/message\";\r\nimport { Button } from \"@mui/material\";\r\nimport { rootStore } from \"~/stores/RootStore\";\r\nimport { fileStore } from \"~/stores/fileStore\";\r\nimport CloudServicesButton from \"~/components/rightPanel/cloudServices/cloudServicesButton\";\r\nimport UndoRedoBtn from \"./undo\";\r\nimport LocalstorageBtn from \"./localStorageBtn\";\r\nimport RefreshIcon from \"@mui/icons-material/Refresh\";\r\nimport DirectionsRunIcon from \"@mui/icons-material/DirectionsRun\";\r\nimport GroupBtn from \"./groupBtn\";\r\nlet index = 0;\r\n\r\nexport default [\r\n  {\r\n    id: index++,\r\n    tip: \"刷新\",\r\n    icon: IconAli,\r\n    iconName: \"icon-3Dshuaxin\",\r\n    onClick: () => {\r\n      if (!fileStore.currentFileName) return;\r\n      fileStore.setLoadProcess(false);\r\n      fileStore.load(fileStore.currentFileId);\r\n    },\r\n    divider: false,\r\n  },\r\n  {\r\n    id: index++,\r\n    tip: \"撤销\",\r\n    component: <UndoRedoBtn iconName=\"icon-3Dchexiao\" isUndo />,\r\n    divider: false,\r\n  },\r\n  {\r\n    id: index++,\r\n    tip: \"重做\",\r\n    component: <UndoRedoBtn iconName=\"icon-3Dhuanyuan\" isUndo={false} />,\r\n    divider: false,\r\n  },\r\n  // {\r\n  //   id: index++,\r\n  //   tip: \"编组\",\r\n  //   component: <GroupBtn iconName=\"icon-3Dwanggekai\" />,\r\n  //   divider: true,\r\n  // },\r\n  {\r\n    id: index++,\r\n    tip: \"地面网格线\",\r\n    icon: IconAli,\r\n    iconName: \"icon-3Dwanggekai\",\r\n    component: (\r\n      <LocalstorageBtn\r\n        iconName=\"icon-3Dwanggekai\"\r\n        targetKey=\"ShowGround\"\r\n        tip=\"地面网格线\"\r\n      />\r\n    ),\r\n    divider: false,\r\n  },\r\n  {\r\n    id: index++,\r\n    tip: \"辅助轴\",\r\n    icon: IconAli,\r\n    iconName: \"icon-3Dzuobiaoxi\",\r\n    onClick: () => {\r\n      App.intance.Viewer.ShowAxesViewer = !App.intance.Viewer.ShowAxesViewer;\r\n    },\r\n    component: (\r\n      <LocalstorageBtn\r\n        iconName=\"icon-3Dzuobiaoxi\"\r\n        targetKey=\"ShowAxesViewer\"\r\n        tip=\"辅助轴\"\r\n      />\r\n    ),\r\n    divider: false,\r\n  },\r\n  {\r\n    id: index++,\r\n    tip: \"漫游\",\r\n    icon: IconAli,\r\n    iconName: \"icon-3Dzoulu\",\r\n    onClick: () => {\r\n      if (App.intance.Viewer.cameraManager.Type === CameraType.ArcRotate) {\r\n        if (ToasterKeys.has(\"freeCamera\")) {\r\n          return;\r\n        }\r\n        message.info(\"请在场景中通过鼠标单击选择漫游相机初始位置\", {\r\n          key: \"freeCamera\",\r\n          action: (\r\n            <Button onClick={() => message.close(\"freeCamera\")}>取消</Button>\r\n          ),\r\n          autoHideDuration: null,\r\n        });\r\n      } else App.intance.Viewer.cameraManager.Type = CameraType.ArcRotate;\r\n    },\r\n    divider: false,\r\n  },\r\n  {\r\n    id: index++,\r\n    tip: \"特效\",\r\n    icon: IconAli,\r\n    iconName: \"icon-3Dtexiao2\",\r\n    onClick: () => {\r\n      let particleDisplay = rootStore.particleDisplay;\r\n      let _entitys = App.intance.Database.ParticleSystemSpace.Entitys;\r\n      Array.isArray(_entitys) &&\r\n        _entitys.forEach((element) => {\r\n          if (particleDisplay === true) {\r\n            element.stop();\r\n          } else {\r\n            element.start();\r\n          }\r\n        });\r\n      rootStore.particleDisplay = !particleDisplay;\r\n    },\r\n    divider: false,\r\n  },\r\n  {\r\n    id: index++,\r\n    tip: `居中(双击鼠标)`,\r\n    icon: IconAli,\r\n    iconName: \"icon-3Dline-focusguanzhujiaodian-02\",\r\n    onClick: () => {\r\n      App.intance.zoomAll();\r\n    },\r\n    divider: true,\r\n  },\r\n  {\r\n    id: index++,\r\n    tip: \"全局变量\",\r\n    iconName: \"icon-3Dchexiao\",\r\n    icon: IconAli,\r\n    component: <GlobalVarButton />,\r\n    divider: false,\r\n  },\r\n  {\r\n    id: index++,\r\n    tip: \"数据连接\",\r\n    iconName: \"icon-3Dmoxingshuju\",\r\n    icon: IconAli,\r\n    component: <CloudServicesButton />,\r\n    divider: true,\r\n  },\r\n\r\n  // {\r\n  //   id: index++,\r\n  //   tip: `模型归零`,\r\n  //   icon: IconAli,\r\n  //   iconName: \"icon-3Dquanping\",\r\n  //   onClick: () => {\r\n  //     CMD.commandManager.ExecCommand(\"MODEL2ZERO\");\r\n  //   },\r\n  // },\r\n  {\r\n    id: index++,\r\n    tip: \"全屏\",\r\n    icon: IconAli,\r\n    iconName: \"icon-3Dquanping\",\r\n    onClick: () => {\r\n      // document.body.requestFullscreen();\r\n      const isFull = !!document.fullscreenElement;\r\n      if (!isFull) {\r\n        let el = document.documentElement;\r\n        el.requestFullscreen();\r\n      } else {\r\n        document.exitFullscreen();\r\n      }\r\n    },\r\n    divider: false,\r\n  },\r\n  // {\r\n  //   id: index++,\r\n  //   tip: \"退出全屏(F11)\",\r\n  //   icon: IconAli,\r\n  //   iconName: \"icon-3DoneAone\",\r\n  //   onClick: () => {\r\n  //     const isFull = !!document.fullscreenElement;\r\n  //     if (isFull) {\r\n  //       document.exitFullscreen();\r\n  //     }\r\n  //   },\r\n  // },\r\n];\r\n","import { Box, Stack, Tab, Tabs, IconButton, Tooltip } from \"@mui/material\";\r\nimport { Observer } from \"mobx-react-lite\";\r\nimport React, { useState } from \"react\";\r\nimport { useEditorContext } from \"~/contexts/editor-context\";\r\nimport { RightStoreContext } from \"~/contexts/rightStoreContext\";\r\nimport { rightStore } from \"~/stores/rightStore\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport { a11yProps, TabPanel } from \"../common/tabPanel\";\r\nimport SceneCollection from \"./SceneCollection\";\r\nimport { EntityTabs, SceneTabs } from \"./tabs\";\r\nimport toolBar from \"./toolBar\";\r\nimport { ERightTab } from \"./types\";\r\nimport { styled } from \"@mui/material/styles\";\r\ninterface RightPanelProps {\r\n  children?: React.ReactNode;\r\n  dir?: string;\r\n}\r\nconst CustomizedTab = styled(Tab)`\r\n  min-height: 34px;\r\n`;\r\nconst CustomizedTabs = styled(Tabs)`\r\n  height: 34px;\r\n  min-height: 34px;\r\n  & .MuiTabs-indicator {\r\n    background: #0084ff;\r\n  }\r\n  & .MuiTabs-flexContainer {\r\n    height: 34px;\r\n  }\r\n`;\r\nconst RightPanel: React.FC<RightPanelProps> = (props) => {\r\n  const [value, setValue] = useState(ERightTab.Basic);\r\n  const { editorState } = useEditorContext();\r\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  const TabsConfig =\r\n    editorState.entity || editorState.gui || editorState.dom\r\n      ? EntityTabs\r\n      : SceneTabs;\r\n\r\n  return (\r\n    <RightStoreContext.Provider value={rightStore}>\r\n      <Observer>\r\n        {() => (\r\n          <Stack sx={{ width: 300 }} flexDirection=\"row\">\r\n            <Stack width={40} sx={{ boxShadow: \"1px 0 0 0 #ccc\" }}>\r\n              {toolBar.map((t, index) => (\r\n                <React.Fragment key={index}>\r\n                  <Tooltip title={t.tip} placement=\"left\">\r\n                    {t.component || (\r\n                      <IconButton onClick={t.onClick} sx={{ height: \"40px\" }}>\r\n                        <t.icon name={t.iconName} />\r\n                      </IconButton>\r\n                    )}\r\n                  </Tooltip>\r\n                  {t.divider && (\r\n                    <Divider\r\n                      sx={{ width: \"24px\", ml: \"8px\", mt: \"16px\", mb: \"16px\" }}\r\n                    />\r\n                  )}\r\n                </React.Fragment>\r\n              ))}\r\n            </Stack>\r\n            <Stack\r\n              sx={{ flex: 1, minWidth: 0, height: \"100%\" }}\r\n              flexDirection=\"column\"\r\n            >\r\n              <Box\r\n                sx={{\r\n                  flex: 1,\r\n                  minHeight: 0,\r\n                  overflowY: \"auto\",\r\n                  overflowX: \"hidden\",\r\n                  height: \"100%\",\r\n                }}\r\n              >\r\n                <CustomizedTabs\r\n                  value={\r\n                    !TabsConfig.find((t) => t.id === value)\r\n                      ? ERightTab.Basic\r\n                      : value\r\n                  }\r\n                  // variant=\"scrollable\"\r\n                  // scrollButtons=\"auto\"\r\n                  onChange={handleChange}\r\n                  aria-label=\"right-panel-tabs\"\r\n                  sx={{ borderColor: \"divider\" }}\r\n                >\r\n                  {TabsConfig.map((model) => (\r\n                    <CustomizedTab\r\n                      key={model.id}\r\n                      value={model.id}\r\n                      label={model.title}\r\n                      {...a11yProps(model.id)}\r\n                      sx={{ minWidth: \"30px\", pl: \"8px\", pr: \"8px\" }}\r\n                    />\r\n                  ))}\r\n                </CustomizedTabs>\r\n                {TabsConfig.map((cof) => (\r\n                  <TabPanel\r\n                    value={cof.id}\r\n                    currentValue={\r\n                      !TabsConfig.find((t) => t.id === value)\r\n                        ? ERightTab.Basic\r\n                        : value\r\n                    }\r\n                    key={cof.id}\r\n                  >\r\n                    {cof.component}\r\n                  </TabPanel>\r\n                ))}\r\n              </Box>\r\n              <SceneCollection />\r\n            </Stack>\r\n          </Stack>\r\n        )}\r\n      </Observer>\r\n    </RightStoreContext.Provider>\r\n  );\r\n};\r\nexport default RightPanel;\r\n","import React, { useReducer } from \"react\";\r\nimport Editor from \"~/components/editor\";\r\nimport { FullContainer } from \"~/components/fullContainer\";\r\nimport LeftPanel from \"~/components/leftPanel\";\r\nimport RightPanel from \"~/components/rightPanel\";\r\nimport { EditorContext, InitEditorValue } from \"~/contexts/editor-context\";\r\nimport { editorReducers } from \"./../../reducers/editorReducers\";\r\n\r\ninterface EditorProps {\r\n  target: Record<string, unknown>;\r\n}\r\n\r\nconst Index: React.FC<EditorProps> = () => {\r\n  const [editorState, dispatch] = useReducer(editorReducers, InitEditorValue);\r\n\r\n  return (\r\n    <EditorContext.Provider\r\n      value={{\r\n        editorState,\r\n        dispatch,\r\n      }}\r\n    >\r\n      <FullContainer\r\n        sx={{ display: \"flex\", height: \"100%\", overflow: \"hidden\" }}\r\n        id=\"editor\"\r\n      >\r\n        <LeftPanel />\r\n        <Editor />\r\n        <RightPanel />\r\n      </FullContainer>\r\n    </EditorContext.Provider>\r\n  );\r\n};\r\nexport default Index;\r\n"],"names":["BootstrapDialog","styled","Dialog","theme","padding","spacing","BootstrapDialogTitle","props","children","onClose","other","sx","m","p","cursor","onClick","position","right","top","color","palette","grey","PaperComponent","handle","cancel","title","visible","size","header","footer","fullWidth","height","hideFooter","handleOk","handleClose","closeMethod","open","maxWidth","id","dividers","total","pagenation","onPageChange","onRowsPerPageChange","pageNum","pageSize","pageSizeOptions","rowsPerPageOptions","component","count","rowsPerPage","page","event","newPage","target","value","labelRowsPerPage","labelDisplayedRows","from","to","Math","ceil","NoData","textAlign","fontSize","width","margin","SelfTableCell","TableCell","columns","dataSource","rowKey","ipagenation","handleChangePage","handleChangeRowsPerPage","selectedRowKeys","selectionRows","selectedChange","changeSort","tableStyle","sortType","setSortType","useState","changeSortMethod","type","column","newType","newSortType","JSON","parse","onSelectAllClick","key","item","checked","newSelectedRowKeys","newSelectionRows","index","getAllSelected","rowKeys","rows","startNum","endNum","tableRowKey","mb","overflow","minHeight","overflowY","list","length","getUUID","onChange","indeterminate","align","sortDirection","direction","visuallyHidden","createColumns","row","border","arr","e","data","itemArr","dataKeys","colItem","render","text","push","createDataSource","src","renderTable","FullContainer","rest","Container","disableGutters","onConfirm","isUpdate","selectName","fileName","setfileName","handleConfirm","async","DialogTitle","DialogContent","FormControl","variant","InputLabel","htmlFor","Input","onKeyPress","nativeEvent","keyCode","DialogActions","Resizable2","Resizable","observer","fileStore","rootStore","useStores","leftTabIndex","changeLeftTab","useEditorRootContext","apply","setApply","info","useEffect","ELeftTab","url","location","href","projectId","searchParams","get","code","getReq","MarketApi","params","product_code","then","detailRes","ResponseStatus","detail","deleteQueryKey","setPrefix","loadProject","Number","undefined","commonStore","load","minWidth","enable","bottom","left","topRight","bottomRight","bottomLeft","topLeft","onResizeStop","ref","d","app","Box","flexWrap","display","flex","borderLeft","tabs","t","isHide","currentValue","style","shop","history","go","needProject","onSuccess","updateLocationUrl","isOpenModal","closeModal","selectFile","name","updateFileName","addFile","message","newUrl","updateQueryStringParameter","toString","replaceState","path","NEED_UPDATE_CMD_NAMES","TreeItem","treeItemClasses","backgroundColor","maxHeight","selectId","isClickTree","isInit","sceneList","setOpen","tree","setTree","selectIds","setSelectIds","ulRef","useRef","hiddenIds","setHiddenIds","unSelectIds","setUnselectIds","stopParticles","setStopParticles","dispatch","useEditorContext","init","objects","App","options","stopIds","object","IsErase","Interaction","Light","Entity","GroupId","icon","canVisiable","canPick","canStop","ParticleSystem","ParticleSystemGroup","AcUnitIcon","add","Id","AirportShuttleIcon","isLight","LightIcon","BaseGui","AssessmentIcon","BaseDom","AssignmentIcon","GroupRecord","GroupWorkIcon","entitys","i","Object","label","Name","handleRedoUndo","cmd","commandName","injects","when","end","ids","current","scrollTop","updateScroll","f","borderBottom","borderColor","ListItemButton","bgcolor","ListItemText","primary","List","ListItem","obj","IsPickable","SELECT_ENTITY","entity","SELECT_GUI","gui","Particle","select","onDoubleClick","secondaryAction","edge","evt","stopPropagation","has","delete","CMD","handleToggleVisiable","VisibilityOff","Visibility","handleToggleSelect","Deselect","SelectAll","handleToggleStop","start","stop","PlayArrow","Stop","ListItemIcon","bgColor","setBgColor","on","Viewer","sceneControl","Background","Stack","mt","c","hex","sunConfig","setSunConfig","Turbidity","Rayleigh","Luminance","Inclination","Azimuth","sun","setSun","x","y","z","handleChange","update","convert2UiData","SunPosition","Slider","valueLabelDisplay","min","max","step","bgTypes","SkyboxMode","setType","handleChangeBgType","BgType","SceneConfig","useMemo","bgType","reaction","Mode","currentFileName","placeholder","InputProps","borderRadius","background","inputProps","pt","option","MenuItem","intensity","setIntensity","newValue","shadowSwitch","setShadowSwitch","hColor","setHColor","aColor","setAColor","hemInten","setHemInten","Reflect","setReflect","useGis","setUseGis","timer","hemisphericLight","Intensity","Color","AmbientColor","IsShadow","IsReflect","dispose","paddingTop","FormControlLabel","appIndexId","currentFileId","debounceCallback","setAppIndex","control","Checkbox","alignItems","clearTimeout","Url2d","editorState","dom","handleChangeTF","state","UPDATE","handleChangeDom","handleTransfromDom","UPDATE_OTHER","UPDATE_NAME","onBlur","vector","k","v","RadioGroup","HorAlign","Radio","VerAlign","rotation","scale","uiVector2Vector","expand","isExpand","animations","setAnimations","animationNames","setAnimationNames","AnimationNames","handleChangePoint","val","point","renderAnimationList","an","handleAddPoint","endIcon","Add","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","disablePadding","ButtonGroup","orientation","marginBottom","nm","startAnimates","stopAnimates","PaperProps","subheader","ListSubheader","group","ans","moveAnimate","rotateAnimate","Utils","angle","time","loop","openKeys","setOpenKeys","Position","Rotation","n","Scale","enableShadow","EnableShadow","TOGGLE_SHADOW","handleOpenKeys","Width","Height","getValueStr","str","getStr","cf","value1","CompareType","getCompare","value2","getConditionDescription","conditions","isAll","marginRight","join","CompareOptions","StyledTreeItemRoot","secondary","borderTopRightRadius","borderBottomRightRadius","paddingRight","fontWeight","typography","fontWeightMedium","fontWeightRegular","action","hover","selected","CustomContent","React","classes","className","nodeId","descption","iconProp","expansionIcon","displayIcon","onMouseDown","disabled","expanded","focused","handleExpansion","handleSelection","preventSelection","useTreeItem","classNames","classNamesSet","split","root","iconContainer","StyledTreeItem","labelIcon","LabelIcon","endElement","labelText","desc","ContentComponent","mr","flexGrow","ml","EndElement","actions","onTogglePopover","act","isNew","onEnter","btnRef","click","param","onMouseEnter","interactionStore","ArrowUpward","ArrowDownward","newAddId","onRef","store","getItemLabel","InteractionConfig","getDesc","objectId","handleAdd","mode","EditorIntMode","actIndex","el","Index","subTitle","useInteractionStoresContext","globalVarStore","useRightStores","condition","tempCondition","handleAddCompare","dataIndex","currentTarget","getAttribute","addNewCompare","handleRemoveCompare","removeCompare","handleChangeValue","widgetValue","updateState","Boolean","isNeedBool","ValueOptions","getSelectKey","bool","handleChangeWidgetValue","values","entityKey","justifyContent","Divider","my","comp","onChangeValue","variables","selectProps","AddCircle","Cancel","autoFocus","saveConditions","interaction","eventIndex","anchorEl","setAnchorEl","setChecked","dataRef","isParam","hasPage","openMenu","closeMenu","MenuContainer","useContextMenu","setExpanded","getActionAllIds","search","setSearch","handleClick","CurrentAction","handleMouseEnter","NewAddActionId","handleEditorCondition","editorCondition","handleStep3Ref","portalContainer3","TreeView","defaultCollapseIcon","ArrowDropDown","defaultExpandIcon","ArrowRight","onContextMenu","onNodeToggle","nodeIds","CurrentInteraction","portalContainer","setAllIndex","addNewCondition","cof","cofIndex","anchorOrigin","vertical","horizontal","transformOrigin","vars","en","role","currentIndex","newChecked","addParamItem","removeParamItem","dense","tabIndex","disableRipple","EntityOptions","getEntityOptions","opt","addActionDataItem","removeActionDataItem","renderPopoverContent","remove","RNDComponent","setState","window","innerWidth","innerHeight","dragHandleClassName","onDragStop","delta","Paper","Skeleton","reason","oid","handleChangeParam","CurrentActionDetail","openSelect","interactions","toggle","isEvent","GridView","Grid","container","l","changeTabIndex","addInteraction","addActionItem","xs","isUsedEvent","unMount","dataList","isList","query","setQuery","containerRef","handleBlur","relaElement","relatedTarget","parent","parentNode","parentElement","flexDirection","InputBase","Search","PageIntTabs","EventList","ActionList","EntityIntTabs","EntityEventList","Transition","Slide","resetIndexs","UseReal","SelectEntity","TransitionComponent","Tabs","Tab","a11yProps","currentEventIndex","Card","raised","elevation","save","handleEnd","AspectRatio","startIcon","Popover","isConnected","Sphere","Plane","Cylinder","Capsule","Ground","buttonProps","Menu","MenuListProps","addParam","updateParam","deleteParam","par","Delete","close","TextareaAutosize","minRows","response","useTime","startAdornment","InputAdornment","endAdornment","BootstrapInput","marginTop","transition","transitions","create","fontFamily","boxShadow","alpha","main","shrink","accountName","temp","prodName","deviceName","funName","instance","axios","getCloudauthSign","result","CloudauthApi","appKey","timestamp","sign","resData","app_key","defaults","baseURL","HISTRON_URL","valueProp","setValue","targetVal","openAccount","setOpenAccount","accounts","setAccounts","setCurrentAccount","currentAccount","accountId","openProd","setOpenProd","prods","setProds","setCurrentProd","currentProd","prodId","openDevice","setOpenDevice","devices","setDevices","setCurrentDevice","currentDevice","deviceId","deviceKey","deviceSecret","openFun","setOpenFun","funs","setFuns","setCurrentFun","currentFun","funId","funKey","funDataType","datas","project_id","source","element","getCloudauthList","res","HistronApi","appkey","getProdList","getDevList","sourceId","getFunList","changeSourceObj","wsUrl","getTargetDataBind","targetKey","wsfix","protocol","encryptStgy","histron","msg","clientid","username","realm","HistronHost","getURL","baseUrl","Date","getTime","md5","ali","productKey","process","env","VUE_APP_HOST","idIndex","dbi","setSource","apiData","setApiData","filter","wsData","setWSData","ws","getWsUrl","check","newParam","DataBind","ObjectId","mx","method","toLowerCase","status","ValueItemContainer","isAttach","onDelete","marginLeft","AddLink","ObjectItem","editorRef","handleFormat","getAction","run","onMount","editor","monaco","defaultLanguage","defaultValue","minimap","enabled","getValue","CommonTypes","CommonObjectTypes","prop","onUpdate","handleChangeEntity","HC2DDom","setProp","handleChangeColor","handleConfirmObject","err","toUpperCase","autoComplete","ValueList","onUnAttach","properties","openLink","setOpenLink","setTargetKey","setList","endLink","Drawer","anchor","db","renderChild","Com","constructor","Schema","propertys","CMD_NAMES","setProps","handleReUn","hm","clears","DataList","unit","HC2DGui","databinds","DataBindings","description","attr","Attr","valueType","config","IsComponent","ERightTab","camera","setCamera","setTarget","setMode","cameraType","setCameraType","CameraType","cameraInfo","setCameraInfo","Alpha","Beta","Radius","limit","setLimit","LowerRadiusLimit","UpperRadiusLimit","LowerAlphaLimit","UpperAlphaLimit","LowerBetaLimit","UpperBetaLimit","MinZ","MaxZ","limitPan","setLimitPan","PanningAxis","OriginPanTarget","PanDistance","enableTF","setEnableTF","EnableRotate","EnableZoom","EnablePan","handleChangeCameraVector","isNaN","handleChangeCameraInfo","handleChangeARCameraLimit","deg2rad","handleToggleCameraTF","cameraManager","fixedNotZero","Target","ArcRotateControl","rad2Deg","handleChangePanVector","disposes","switchEvent","Type","setName","handleOpen","editorScriptId","handleTest","codeList","getFunction","HC","AppEvent","getCode","sp","s","updateCodeScript","appendCodeScript","outline","edit","Edit","deleteScript","localStorage","getItem","updateProperyty","getEditor","SceneTabs","Basic","Camera","Board","Script","EntityTabs","Prop","Open","up","down","TableContainer","Table","stickyHeader","TableHead","TableRow","TableBody","vb","CurrentIndex","String","confirm","GlobalVarButton","TextField","SlefButton","Button","Label","formItemStyle","initFormData","appSecret","remark","regionId","aliId","iotInstanceId","groupId","setVisible","editTitle","setEditTitle","formData","setFormData","setColumns","record","deleteData","setDataSource","setIpagenation","actionType","setActionType","setSelectedRowKeys","setSelectionRows","changeValue","getDataList","app_secret","region_id","ali_id","iot_instance_id","group_id","catch","addOrEditData","httpAction","deleteAction","cloudServicesStore","STable","SModal","ToggleButtonGroup","exclusive","changeBtnValue","ToggleButton","maxRows","isUndo","iconName","setDisabled","Tooltip","placement","useLocalStorage","initValue","getLocalValue","setItem","tip","hasValue","IconAli","divider","ToasterKeys","autoHideDuration","particleDisplay","_entitys","document","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","CustomizedTab","CustomizedTabs","TabsConfig","rightStore","toolBar","overflowX","model","pl","pr","useReducer","editorReducers","InitEditorValue"],"sourceRoot":""}