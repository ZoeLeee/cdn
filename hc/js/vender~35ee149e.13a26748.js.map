{"version":3,"file":"js/vender~35ee149e.13a26748.js","mappings":"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","sources":["webpack:///../../../node_modules/@babylonjs/core/Debug/debugLayer.js","webpack:///../../../node_modules/@babylonjs/core/Debug/axesViewer.js","webpack:///../../../node_modules/@babylonjs/core/Debug/boneAxesViewer.js","webpack:///../../../node_modules/@babylonjs/core/Debug/physicsViewer.js","webpack:///../../../node_modules/@babylonjs/core/Debug/rayHelper.js","webpack:///../../../node_modules/@babylonjs/core/Debug/skeletonViewer.js","webpack:///../../../node_modules/@babylonjs/core/Debug/directionalLightFrustumViewer.js","webpack:///../../../node_modules/@babylonjs/core/DeviceInput/InputDevices/deviceEnums.js","webpack:///../../../node_modules/@babylonjs/core/DeviceInput/InputDevices/deviceSource.js","webpack:///../../../node_modules/@babylonjs/core/DeviceInput/Helpers/eventFactory.js","webpack:///../../../node_modules/@babylonjs/core/DeviceInput/InputDevices/nativeDeviceInputSystem.js","webpack:///../../../node_modules/@babylonjs/core/DeviceInput/InputDevices/webDeviceInputSystem.js","webpack:///../../../node_modules/@babylonjs/core/DeviceInput/InputDevices/internalDeviceSourceManager.js","webpack:///../../../node_modules/@babylonjs/core/DeviceInput/InputDevices/deviceSourceManager.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Extensions/engine.alpha.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Extensions/engine.computeShader.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Extensions/engine.cubeTexture.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Extensions/engine.dynamicBuffer.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Extensions/engine.dynamicTexture.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Extensions/engine.multiRender.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Extensions/engine.multiview.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Extensions/engine.rawTexture.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Extensions/engine.readTexture.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGL/webGLRenderTargetWrapper.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Extensions/engine.renderTarget.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Extensions/engine.renderTargetCube.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Extensions/engine.uniformBuffer.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Extensions/engine.videoTexture.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Extensions/engine.webVR.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Native/nativeDataStream.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Processors/shaderCodeInliner.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Processors/shaderCodeNode.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Processors/shaderCodeCursor.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Processors/shaderCodeConditionNode.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Processors/shaderCodeTestNode.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Processors/Expressions/shaderDefineExpression.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Processors/Expressions/Operators/shaderDefineIsDefinedOperator.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Processors/Expressions/Operators/shaderDefineOrOperator.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Processors/Expressions/Operators/shaderDefineAndOperator.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Processors/Expressions/Operators/shaderDefineArithmeticOperator.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Processors/shaderProcessor.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGL/webGL2ShaderProcessors.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGL/webGLHardwareTexture.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGL/webGLPipelineContext.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGL/webGLShaderProcessors.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuBufferManager.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuBundleList.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuCacheBindGroups.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuCacheRenderPipeline.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuCacheRenderPipelineTree.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuCacheSampler.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuClearQuad.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuConstants.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuDepthCullingState.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuDrawContext.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuHardwareTexture.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuMaterialContext.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuOcclusionQuery.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuPipelineContext.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuQuerySet.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuRenderPassWrapper.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuShaderProcessingContext.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuShaderProcessor.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuShaderProcessorsGLSL.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuShaderProcessorsWGSL.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuSnapshotRendering.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuStencilStateComposer.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuTextureHelper.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuTimestampQuery.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuTintWASM.js","webpack:///../../../node_modules/@babylonjs/core/Engines/constants.js","webpack:///../../../node_modules/@babylonjs/core/Engines/engine.js","webpack:///../../../node_modules/@babylonjs/core/Engines/engineStore.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Extensions/engine.debugging.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Extensions/engine.query.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Extensions/engine.transformFeedback.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Extensions/engine.externalTexture.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Extensions/engine.textureSampler.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Extensions/engine.views.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Extensions/engine.textureSelector.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Extensions/engine.storageBuffer.js","webpack:///../../../node_modules/@babylonjs/core/Engines/Native/validatedNativeDataStream.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/Extensions/engine.alpha.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuComputeContext.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuComputePipelineContext.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/Extensions/engine.computeShader.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/Extensions/engine.cubeTexture.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/Extensions/engine.debugging.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/Extensions/engine.dynamicBuffer.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/Extensions/engine.dynamicTexture.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuExternalTexture.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/Extensions/engine.externalTexture.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/Extensions/engine.multiRender.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/Extensions/engine.rawTexture.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/Extensions/engine.query.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/Extensions/engine.readTexture.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/webgpuRenderTargetWrapper.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/Extensions/engine.renderTarget.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/Extensions/engine.renderTargetCube.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/Extensions/engine.textureSampler.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/Extensions/engine.storageBuffer.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/Extensions/engine.uniformBuffer.js","webpack:///../../../node_modules/@babylonjs/core/Engines/WebGPU/Extensions/engine.videoTexture.js","webpack:///../../../node_modules/@babylonjs/core/Engines/engineFactory.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { Tools } from \"../Misc/tools.js\";\nimport { Observable } from \"../Misc/observable.js\";\nimport { Scene } from \"../scene.js\";\nimport { Engine } from \"../Engines/engine.js\";\nimport { EngineStore } from \"../Engines/engineStore.js\";\nObject.defineProperty(Scene.prototype, \"debugLayer\", {\n    get: function () {\n        if (!this._debugLayer) {\n            this._debugLayer = new DebugLayer(this);\n        }\n        return this._debugLayer;\n    },\n    enumerable: true,\n    configurable: true,\n});\n/**\n * Enum of inspector action tab\n */\nexport var DebugLayerTab;\n(function (DebugLayerTab) {\n    /**\n     * Properties tag (default)\n     */\n    DebugLayerTab[DebugLayerTab[\"Properties\"] = 0] = \"Properties\";\n    /**\n     * Debug tab\n     */\n    DebugLayerTab[DebugLayerTab[\"Debug\"] = 1] = \"Debug\";\n    /**\n     * Statistics tab\n     */\n    DebugLayerTab[DebugLayerTab[\"Statistics\"] = 2] = \"Statistics\";\n    /**\n     * Tools tab\n     */\n    DebugLayerTab[DebugLayerTab[\"Tools\"] = 3] = \"Tools\";\n    /**\n     * Settings tab\n     */\n    DebugLayerTab[DebugLayerTab[\"Settings\"] = 4] = \"Settings\";\n})(DebugLayerTab || (DebugLayerTab = {}));\n/**\n * The debug layer (aka Inspector) is the go to tool in order to better understand\n * what is happening in your scene\n * @see https://doc.babylonjs.com/features/playground_debuglayer\n */\nvar DebugLayer = /** @class */ (function () {\n    /**\n     * Instantiates a new debug layer.\n     * The debug layer (aka Inspector) is the go to tool in order to better understand\n     * what is happening in your scene\n     * @see https://doc.babylonjs.com/features/playground_debuglayer\n     * @param scene Defines the scene to inspect\n     */\n    function DebugLayer(scene) {\n        var _this = this;\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        this.BJSINSPECTOR = this._getGlobalInspector();\n        this._scene = scene || EngineStore.LastCreatedScene;\n        if (!this._scene) {\n            return;\n        }\n        this._scene.onDisposeObservable.add(function () {\n            // Debug layer\n            if (_this._scene._debugLayer) {\n                _this._scene._debugLayer.hide();\n            }\n        });\n    }\n    Object.defineProperty(DebugLayer.prototype, \"onPropertyChangedObservable\", {\n        /**\n         * Observable triggered when a property is changed through the inspector.\n         */\n        get: function () {\n            if (this.BJSINSPECTOR && this.BJSINSPECTOR.Inspector) {\n                return this.BJSINSPECTOR.Inspector.OnPropertyChangedObservable;\n            }\n            if (!this._onPropertyChangedObservable) {\n                this._onPropertyChangedObservable = new Observable();\n            }\n            return this._onPropertyChangedObservable;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DebugLayer.prototype, \"onSelectionChangedObservable\", {\n        /**\n         * Observable triggered when the selection is changed through the inspector.\n         */\n        get: function () {\n            if (this.BJSINSPECTOR && this.BJSINSPECTOR.Inspector) {\n                return this.BJSINSPECTOR.Inspector.OnSelectionChangeObservable;\n            }\n            if (!this._onSelectionChangedObservable) {\n                this._onSelectionChangedObservable = new Observable();\n            }\n            return this._onSelectionChangedObservable;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Creates the inspector window.\n     * @param config\n     */\n    DebugLayer.prototype._createInspector = function (config) {\n        if (this.isVisible()) {\n            return;\n        }\n        if (this._onPropertyChangedObservable) {\n            for (var _i = 0, _a = this._onPropertyChangedObservable.observers; _i < _a.length; _i++) {\n                var observer = _a[_i];\n                this.BJSINSPECTOR.Inspector.OnPropertyChangedObservable.add(observer);\n            }\n            this._onPropertyChangedObservable.clear();\n            this._onPropertyChangedObservable = undefined;\n        }\n        if (this._onSelectionChangedObservable) {\n            for (var _b = 0, _c = this._onSelectionChangedObservable.observers; _b < _c.length; _b++) {\n                var observer = _c[_b];\n                this.BJSINSPECTOR.Inspector.OnSelectionChangedObservable.add(observer);\n            }\n            this._onSelectionChangedObservable.clear();\n            this._onSelectionChangedObservable = undefined;\n        }\n        var userOptions = __assign({ overlay: false, showExplorer: true, showInspector: true, embedMode: false, handleResize: true, enablePopup: true }, config);\n        this.BJSINSPECTOR = this.BJSINSPECTOR || this._getGlobalInspector();\n        this.BJSINSPECTOR.Inspector.Show(this._scene, userOptions);\n    };\n    /**\n     * Select a specific entity in the scene explorer and highlight a specific block in that entity property grid\n     * @param entity defines the entity to select\n     * @param lineContainerTitles defines the specific blocks to highlight (could be a string or an array of strings)\n     */\n    DebugLayer.prototype.select = function (entity, lineContainerTitles) {\n        if (this.BJSINSPECTOR) {\n            if (lineContainerTitles) {\n                if (Object.prototype.toString.call(lineContainerTitles) == \"[object String]\") {\n                    this.BJSINSPECTOR.Inspector.MarkLineContainerTitleForHighlighting(lineContainerTitles);\n                }\n                else {\n                    this.BJSINSPECTOR.Inspector.MarkMultipleLineContainerTitlesForHighlighting(lineContainerTitles);\n                }\n            }\n            this.BJSINSPECTOR.Inspector.OnSelectionChangeObservable.notifyObservers(entity);\n        }\n    };\n    /** Get the inspector from bundle or global */\n    DebugLayer.prototype._getGlobalInspector = function () {\n        // UMD Global name detection from Webpack Bundle UMD Name.\n        if (typeof INSPECTOR !== \"undefined\") {\n            return INSPECTOR;\n        }\n        // In case of module let s check the global emitted from the Inspector entry point.\n        if (typeof BABYLON !== \"undefined\" && typeof BABYLON.Inspector !== \"undefined\") {\n            return BABYLON;\n        }\n        return undefined;\n    };\n    /**\n     * Get if the inspector is visible or not.\n     * @returns true if visible otherwise, false\n     */\n    DebugLayer.prototype.isVisible = function () {\n        return this.BJSINSPECTOR && this.BJSINSPECTOR.Inspector.IsVisible;\n    };\n    /**\n     * Hide the inspector and close its window.\n     */\n    DebugLayer.prototype.hide = function () {\n        if (this.BJSINSPECTOR) {\n            this.BJSINSPECTOR.Inspector.Hide();\n        }\n    };\n    /**\n     * Update the scene in the inspector\n     */\n    DebugLayer.prototype.setAsActiveScene = function () {\n        if (this.BJSINSPECTOR) {\n            this.BJSINSPECTOR.Inspector._SetNewScene(this._scene);\n        }\n    };\n    /**\n     * Launch the debugLayer.\n     * @param config Define the configuration of the inspector\n     * @return a promise fulfilled when the debug layer is visible\n     */\n    DebugLayer.prototype.show = function (config) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            if (typeof _this.BJSINSPECTOR == \"undefined\") {\n                var inspectorUrl = config && config.inspectorURL ? config.inspectorURL : DebugLayer.InspectorURL;\n                // Load inspector and add it to the DOM\n                Tools.LoadScript(inspectorUrl, function () {\n                    _this._createInspector(config);\n                    resolve(_this);\n                });\n            }\n            else {\n                // Otherwise creates the inspector\n                _this._createInspector(config);\n                resolve(_this);\n            }\n        });\n    };\n    /**\n     * Define the url to get the inspector script from.\n     * By default it uses the babylonjs CDN.\n     * @ignoreNaming\n     */\n    DebugLayer.InspectorURL = \"https://unpkg.com/babylonjs-inspector@\".concat(Engine.Version, \"/babylon.inspector.bundle.js\");\n    return DebugLayer;\n}());\nexport { DebugLayer };\n//# sourceMappingURL=debugLayer.js.map","import { Vector3 } from \"../Maths/math.vector.js\";\nimport { StandardMaterial } from \"../Materials/standardMaterial.js\";\nimport { AxisDragGizmo } from \"../Gizmos/axisDragGizmo.js\";\nimport { Color3 } from \"../Maths/math.color.js\";\nimport { EngineStore } from \"../Engines/engineStore.js\";\n/**\n * The Axes viewer will show 3 axes in a specific point in space\n * @see https://doc.babylonjs.com/toolsAndResources/utilities/World_Axes\n */\nvar AxesViewer = /** @class */ (function () {\n    /**\n     * Creates a new AxesViewer\n     * @param scene defines the hosting scene\n     * @param scaleLines defines a number used to scale line length (1 by default)\n     * @param renderingGroupId defines a number used to set the renderingGroupId of the meshes (2 by default)\n     * @param xAxis defines the node hierarchy used to render the x-axis\n     * @param yAxis defines the node hierarchy used to render the y-axis\n     * @param zAxis defines the node hierarchy used to render the z-axis\n     * @param lineThickness The line thickness to use when creating the arrow. defaults to 1.\n     */\n    function AxesViewer(scene, scaleLines, renderingGroupId, xAxis, yAxis, zAxis, lineThickness) {\n        if (scaleLines === void 0) { scaleLines = 1; }\n        if (renderingGroupId === void 0) { renderingGroupId = 2; }\n        if (lineThickness === void 0) { lineThickness = 1; }\n        this._scaleLinesFactor = 4;\n        this._instanced = false;\n        /**\n         * Gets the hosting scene\n         */\n        this.scene = null;\n        /**\n         * Gets or sets a number used to scale line length\n         */\n        this.scaleLines = 1;\n        scene = scene || EngineStore.LastCreatedScene;\n        if (!scene) {\n            return;\n        }\n        this.scaleLines = scaleLines;\n        if (!xAxis) {\n            var redColoredMaterial = new StandardMaterial(\"\", scene);\n            redColoredMaterial.disableLighting = true;\n            redColoredMaterial.emissiveColor = Color3.Red().scale(0.5);\n            xAxis = AxisDragGizmo._CreateArrow(scene, redColoredMaterial, lineThickness);\n        }\n        if (!yAxis) {\n            var greenColoredMaterial = new StandardMaterial(\"\", scene);\n            greenColoredMaterial.disableLighting = true;\n            greenColoredMaterial.emissiveColor = Color3.Green().scale(0.5);\n            yAxis = AxisDragGizmo._CreateArrow(scene, greenColoredMaterial, lineThickness);\n        }\n        if (!zAxis) {\n            var blueColoredMaterial = new StandardMaterial(\"\", scene);\n            blueColoredMaterial.disableLighting = true;\n            blueColoredMaterial.emissiveColor = Color3.Blue().scale(0.5);\n            zAxis = AxisDragGizmo._CreateArrow(scene, blueColoredMaterial, lineThickness);\n        }\n        this._xAxis = xAxis;\n        this._xAxis.scaling.setAll(this.scaleLines * this._scaleLinesFactor);\n        this._yAxis = yAxis;\n        this._yAxis.scaling.setAll(this.scaleLines * this._scaleLinesFactor);\n        this._zAxis = zAxis;\n        this._zAxis.scaling.setAll(this.scaleLines * this._scaleLinesFactor);\n        if (renderingGroupId != null) {\n            AxesViewer._SetRenderingGroupId(this._xAxis, renderingGroupId);\n            AxesViewer._SetRenderingGroupId(this._yAxis, renderingGroupId);\n            AxesViewer._SetRenderingGroupId(this._zAxis, renderingGroupId);\n        }\n        this.scene = scene;\n        this.update(new Vector3(), Vector3.Right(), Vector3.Up(), Vector3.Forward());\n    }\n    Object.defineProperty(AxesViewer.prototype, \"xAxis\", {\n        /** Gets the node hierarchy used to render x-axis */\n        get: function () {\n            return this._xAxis;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AxesViewer.prototype, \"yAxis\", {\n        /** Gets the node hierarchy used to render y-axis */\n        get: function () {\n            return this._yAxis;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AxesViewer.prototype, \"zAxis\", {\n        /** Gets the node hierarchy used to render z-axis */\n        get: function () {\n            return this._zAxis;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Force the viewer to update\n     * @param position defines the position of the viewer\n     * @param xaxis defines the x axis of the viewer\n     * @param yaxis defines the y axis of the viewer\n     * @param zaxis defines the z axis of the viewer\n     */\n    AxesViewer.prototype.update = function (position, xaxis, yaxis, zaxis) {\n        this._xAxis.position.copyFrom(position);\n        this._xAxis.setDirection(xaxis);\n        this._xAxis.scaling.setAll(this.scaleLines * this._scaleLinesFactor);\n        this._yAxis.position.copyFrom(position);\n        this._yAxis.setDirection(yaxis);\n        this._yAxis.scaling.setAll(this.scaleLines * this._scaleLinesFactor);\n        this._zAxis.position.copyFrom(position);\n        this._zAxis.setDirection(zaxis);\n        this._zAxis.scaling.setAll(this.scaleLines * this._scaleLinesFactor);\n    };\n    /**\n     * Creates an instance of this axes viewer.\n     * @returns a new axes viewer with instanced meshes\n     */\n    AxesViewer.prototype.createInstance = function () {\n        var xAxis = AxisDragGizmo._CreateArrowInstance(this.scene, this._xAxis);\n        var yAxis = AxisDragGizmo._CreateArrowInstance(this.scene, this._yAxis);\n        var zAxis = AxisDragGizmo._CreateArrowInstance(this.scene, this._zAxis);\n        var axesViewer = new AxesViewer(this.scene, this.scaleLines, null, xAxis, yAxis, zAxis);\n        axesViewer._instanced = true;\n        return axesViewer;\n    };\n    /** Releases resources */\n    AxesViewer.prototype.dispose = function () {\n        if (this._xAxis) {\n            this._xAxis.dispose(false, !this._instanced);\n        }\n        if (this._yAxis) {\n            this._yAxis.dispose(false, !this._instanced);\n        }\n        if (this._zAxis) {\n            this._zAxis.dispose(false, !this._instanced);\n        }\n        this.scene = null;\n    };\n    AxesViewer._SetRenderingGroupId = function (node, id) {\n        node.getChildMeshes().forEach(function (mesh) {\n            mesh.renderingGroupId = id;\n        });\n    };\n    return AxesViewer;\n}());\nexport { AxesViewer };\n//# sourceMappingURL=axesViewer.js.map","import { __extends } from \"tslib\";\nimport { AxesViewer } from \"../Debug/axesViewer.js\";\nimport { Vector3 } from \"../Maths/math.vector.js\";\nimport { Axis } from \"../Maths/math.axis.js\";\n/**\n * The BoneAxesViewer will attach 3 axes to a specific bone of a specific mesh\n * @see demo here: https://www.babylonjs-playground.com/#0DE8F4#8\n */\nvar BoneAxesViewer = /** @class */ (function (_super) {\n    __extends(BoneAxesViewer, _super);\n    /**\n     * Creates a new BoneAxesViewer\n     * @param scene defines the hosting scene\n     * @param bone defines the target bone\n     * @param mesh defines the target mesh\n     * @param scaleLines defines a scaling factor for line length (1 by default)\n     */\n    function BoneAxesViewer(scene, bone, mesh, scaleLines) {\n        if (scaleLines === void 0) { scaleLines = 1; }\n        var _this = _super.call(this, scene, scaleLines) || this;\n        /** Gets current position */\n        _this.pos = Vector3.Zero();\n        /** Gets direction of X axis */\n        _this.xaxis = Vector3.Zero();\n        /** Gets direction of Y axis */\n        _this.yaxis = Vector3.Zero();\n        /** Gets direction of Z axis */\n        _this.zaxis = Vector3.Zero();\n        _this.mesh = mesh;\n        _this.bone = bone;\n        return _this;\n    }\n    /**\n     * Force the viewer to update\n     */\n    BoneAxesViewer.prototype.update = function () {\n        if (!this.mesh || !this.bone) {\n            return;\n        }\n        var bone = this.bone;\n        bone._markAsDirtyAndCompose();\n        bone.getAbsolutePositionToRef(this.mesh, this.pos);\n        bone.getDirectionToRef(Axis.X, this.mesh, this.xaxis);\n        bone.getDirectionToRef(Axis.Y, this.mesh, this.yaxis);\n        bone.getDirectionToRef(Axis.Z, this.mesh, this.zaxis);\n        _super.prototype.update.call(this, this.pos, this.xaxis, this.yaxis, this.zaxis);\n    };\n    /** Releases resources */\n    BoneAxesViewer.prototype.dispose = function () {\n        if (this.mesh) {\n            this.mesh = null;\n            this.bone = null;\n            _super.prototype.dispose.call(this);\n        }\n    };\n    return BoneAxesViewer;\n}(AxesViewer));\nexport { BoneAxesViewer };\n//# sourceMappingURL=boneAxesViewer.js.map","import { Mesh } from \"../Meshes/mesh.js\";\nimport { CreateBox } from \"../Meshes/Builders/boxBuilder.js\";\nimport { CreateSphere } from \"../Meshes/Builders/sphereBuilder.js\";\nimport { Quaternion, Vector3 } from \"../Maths/math.vector.js\";\nimport { Color3 } from \"../Maths/math.color.js\";\nimport { EngineStore } from \"../Engines/engineStore.js\";\nimport { StandardMaterial } from \"../Materials/standardMaterial.js\";\nimport { PhysicsImpostor } from \"../Physics/physicsImpostor.js\";\nimport { UtilityLayerRenderer } from \"../Rendering/utilityLayerRenderer.js\";\nimport { CreateCylinder } from \"../Meshes/Builders/cylinderBuilder.js\";\nimport { CreateCapsule } from \"../Meshes/Builders/capsuleBuilder.js\";\nimport { Logger } from \"../Misc/logger.js\";\n/**\n * Used to show the physics impostor around the specific mesh\n */\nvar PhysicsViewer = /** @class */ (function () {\n    /**\n     * Creates a new PhysicsViewer\n     * @param scene defines the hosting scene\n     */\n    function PhysicsViewer(scene) {\n        /** @hidden */\n        this._impostors = [];\n        /** @hidden */\n        this._meshes = [];\n        /** @hidden */\n        this._numMeshes = 0;\n        this._debugMeshMeshes = new Array();\n        this._scene = scene || EngineStore.LastCreatedScene;\n        if (!this._scene) {\n            return;\n        }\n        var physicEngine = this._scene.getPhysicsEngine();\n        if (physicEngine) {\n            this._physicsEnginePlugin = physicEngine.getPhysicsPlugin();\n        }\n        this._utilityLayer = new UtilityLayerRenderer(this._scene, false);\n        this._utilityLayer.pickUtilitySceneFirst = false;\n        this._utilityLayer.utilityLayerScene.autoClearDepthAndStencil = true;\n    }\n    /** @hidden */\n    PhysicsViewer.prototype._updateDebugMeshes = function () {\n        var plugin = this._physicsEnginePlugin;\n        for (var i = 0; i < this._numMeshes; i++) {\n            var impostor = this._impostors[i];\n            if (!impostor) {\n                continue;\n            }\n            if (impostor.isDisposed) {\n                this.hideImpostor(this._impostors[i--]);\n            }\n            else {\n                if (impostor.type === PhysicsImpostor.MeshImpostor) {\n                    continue;\n                }\n                var mesh = this._meshes[i];\n                if (mesh && plugin) {\n                    plugin.syncMeshWithImpostor(mesh, impostor);\n                }\n            }\n        }\n    };\n    /**\n     * Renders a specified physic impostor\n     * @param impostor defines the impostor to render\n     * @param targetMesh defines the mesh represented by the impostor\n     * @returns the new debug mesh used to render the impostor\n     */\n    PhysicsViewer.prototype.showImpostor = function (impostor, targetMesh) {\n        if (!this._scene) {\n            return null;\n        }\n        for (var i = 0; i < this._numMeshes; i++) {\n            if (this._impostors[i] == impostor) {\n                return null;\n            }\n        }\n        var debugMesh = this._getDebugMesh(impostor, targetMesh);\n        if (debugMesh) {\n            this._impostors[this._numMeshes] = impostor;\n            this._meshes[this._numMeshes] = debugMesh;\n            if (this._numMeshes === 0) {\n                this._renderFunction = this._updateDebugMeshes.bind(this);\n                this._scene.registerBeforeRender(this._renderFunction);\n            }\n            this._numMeshes++;\n        }\n        return debugMesh;\n    };\n    /**\n     * Hides a specified physic impostor\n     * @param impostor defines the impostor to hide\n     */\n    PhysicsViewer.prototype.hideImpostor = function (impostor) {\n        if (!impostor || !this._scene || !this._utilityLayer) {\n            return;\n        }\n        var removed = false;\n        var utilityLayerScene = this._utilityLayer.utilityLayerScene;\n        for (var i = 0; i < this._numMeshes; i++) {\n            if (this._impostors[i] == impostor) {\n                var mesh = this._meshes[i];\n                if (!mesh) {\n                    continue;\n                }\n                utilityLayerScene.removeMesh(mesh);\n                mesh.dispose();\n                var index = this._debugMeshMeshes.indexOf(mesh);\n                if (index > -1) {\n                    this._debugMeshMeshes.splice(index, 1);\n                }\n                this._numMeshes--;\n                if (this._numMeshes > 0) {\n                    this._meshes[i] = this._meshes[this._numMeshes];\n                    this._impostors[i] = this._impostors[this._numMeshes];\n                    this._meshes[this._numMeshes] = null;\n                    this._impostors[this._numMeshes] = null;\n                }\n                else {\n                    this._meshes[0] = null;\n                    this._impostors[0] = null;\n                }\n                removed = true;\n                break;\n            }\n        }\n        if (removed && this._numMeshes === 0) {\n            this._scene.unregisterBeforeRender(this._renderFunction);\n        }\n    };\n    PhysicsViewer.prototype._getDebugMaterial = function (scene) {\n        if (!this._debugMaterial) {\n            this._debugMaterial = new StandardMaterial(\"\", scene);\n            this._debugMaterial.wireframe = true;\n            this._debugMaterial.emissiveColor = Color3.White();\n            this._debugMaterial.disableLighting = true;\n        }\n        return this._debugMaterial;\n    };\n    PhysicsViewer.prototype._getDebugBoxMesh = function (scene) {\n        if (!this._debugBoxMesh) {\n            this._debugBoxMesh = CreateBox(\"physicsBodyBoxViewMesh\", { size: 1 }, scene);\n            this._debugBoxMesh.rotationQuaternion = Quaternion.Identity();\n            this._debugBoxMesh.material = this._getDebugMaterial(scene);\n            this._debugBoxMesh.setEnabled(false);\n        }\n        return this._debugBoxMesh.createInstance(\"physicsBodyBoxViewInstance\");\n    };\n    PhysicsViewer.prototype._getDebugSphereMesh = function (scene) {\n        if (!this._debugSphereMesh) {\n            this._debugSphereMesh = CreateSphere(\"physicsBodySphereViewMesh\", { diameter: 1 }, scene);\n            this._debugSphereMesh.rotationQuaternion = Quaternion.Identity();\n            this._debugSphereMesh.material = this._getDebugMaterial(scene);\n            this._debugSphereMesh.setEnabled(false);\n        }\n        return this._debugSphereMesh.createInstance(\"physicsBodySphereViewInstance\");\n    };\n    PhysicsViewer.prototype._getDebugCapsuleMesh = function (scene) {\n        if (!this._debugCapsuleMesh) {\n            this._debugCapsuleMesh = CreateCapsule(\"physicsBodyCapsuleViewMesh\", { height: 1 }, scene);\n            this._debugCapsuleMesh.rotationQuaternion = Quaternion.Identity();\n            this._debugCapsuleMesh.material = this._getDebugMaterial(scene);\n            this._debugCapsuleMesh.setEnabled(false);\n        }\n        return this._debugCapsuleMesh.createInstance(\"physicsBodyCapsuleViewInstance\");\n    };\n    PhysicsViewer.prototype._getDebugCylinderMesh = function (scene) {\n        if (!this._debugCylinderMesh) {\n            this._debugCylinderMesh = CreateCylinder(\"physicsBodyCylinderViewMesh\", { diameterTop: 1, diameterBottom: 1, height: 1 }, scene);\n            this._debugCylinderMesh.rotationQuaternion = Quaternion.Identity();\n            this._debugCylinderMesh.material = this._getDebugMaterial(scene);\n            this._debugCylinderMesh.setEnabled(false);\n        }\n        return this._debugCylinderMesh.createInstance(\"physicsBodyCylinderViewInstance\");\n    };\n    PhysicsViewer.prototype._getDebugMeshMesh = function (mesh, scene) {\n        var wireframeOver = new Mesh(mesh.name, scene, null, mesh);\n        wireframeOver.setParent(mesh);\n        wireframeOver.position = Vector3.Zero();\n        wireframeOver.material = this._getDebugMaterial(scene);\n        this._debugMeshMeshes.push(wireframeOver);\n        return wireframeOver;\n    };\n    PhysicsViewer.prototype._getDebugMesh = function (impostor, targetMesh) {\n        var _this = this;\n        if (!this._utilityLayer) {\n            return null;\n        }\n        // Only create child impostor debug meshes when evaluating the parent\n        if (targetMesh && targetMesh.parent && targetMesh.parent.physicsImpostor) {\n            return null;\n        }\n        var mesh = null;\n        var utilityLayerScene = this._utilityLayer.utilityLayerScene;\n        if (!impostor.physicsBody) {\n            Logger.Warn(\"Unable to get physicsBody of impostor. It might be initialized later by its parent's impostor.\");\n            return null;\n        }\n        switch (impostor.type) {\n            case PhysicsImpostor.BoxImpostor:\n                mesh = this._getDebugBoxMesh(utilityLayerScene);\n                impostor.getBoxSizeToRef(mesh.scaling);\n                break;\n            case PhysicsImpostor.SphereImpostor: {\n                mesh = this._getDebugSphereMesh(utilityLayerScene);\n                var radius = impostor.getRadius();\n                mesh.scaling.x = radius * 2;\n                mesh.scaling.y = radius * 2;\n                mesh.scaling.z = radius * 2;\n                break;\n            }\n            case PhysicsImpostor.CapsuleImpostor: {\n                mesh = this._getDebugCapsuleMesh(utilityLayerScene);\n                var bi = impostor.object.getBoundingInfo();\n                mesh.scaling.x = (bi.boundingBox.maximum.x - bi.boundingBox.minimum.x) * 2 * impostor.object.scaling.x;\n                mesh.scaling.y = (bi.boundingBox.maximum.y - bi.boundingBox.minimum.y) * impostor.object.scaling.y;\n                mesh.scaling.z = (bi.boundingBox.maximum.z - bi.boundingBox.minimum.z) * 2 * impostor.object.scaling.z;\n                break;\n            }\n            case PhysicsImpostor.MeshImpostor:\n                if (targetMesh) {\n                    mesh = this._getDebugMeshMesh(targetMesh, utilityLayerScene);\n                }\n                break;\n            case PhysicsImpostor.NoImpostor:\n                if (targetMesh) {\n                    // Handle compound impostors\n                    var childMeshes = targetMesh.getChildMeshes().filter(function (c) {\n                        return c.physicsImpostor ? 1 : 0;\n                    });\n                    childMeshes.forEach(function (m) {\n                        if (m.physicsImpostor && m.getClassName() === \"Mesh\") {\n                            var boundingInfo = m.getBoundingInfo();\n                            var min = boundingInfo.boundingBox.minimum;\n                            var max = boundingInfo.boundingBox.maximum;\n                            switch (m.physicsImpostor.type) {\n                                case PhysicsImpostor.BoxImpostor:\n                                    mesh = _this._getDebugBoxMesh(utilityLayerScene);\n                                    mesh.position.copyFrom(min);\n                                    mesh.position.addInPlace(max);\n                                    mesh.position.scaleInPlace(0.5);\n                                    break;\n                                case PhysicsImpostor.SphereImpostor:\n                                    mesh = _this._getDebugSphereMesh(utilityLayerScene);\n                                    break;\n                                case PhysicsImpostor.CylinderImpostor:\n                                    mesh = _this._getDebugCylinderMesh(utilityLayerScene);\n                                    break;\n                                default:\n                                    mesh = null;\n                                    break;\n                            }\n                            if (mesh) {\n                                mesh.scaling.x = max.x - min.x;\n                                mesh.scaling.y = max.y - min.y;\n                                mesh.scaling.z = max.z - min.z;\n                                mesh.parent = m;\n                            }\n                        }\n                    });\n                }\n                else {\n                    Logger.Warn(\"No target mesh parameter provided for NoImpostor. Skipping.\");\n                }\n                mesh = null;\n                break;\n            case PhysicsImpostor.CylinderImpostor: {\n                mesh = this._getDebugCylinderMesh(utilityLayerScene);\n                var bi = impostor.object.getBoundingInfo();\n                mesh.scaling.x = (bi.boundingBox.maximum.x - bi.boundingBox.minimum.x) * impostor.object.scaling.x;\n                mesh.scaling.y = (bi.boundingBox.maximum.y - bi.boundingBox.minimum.y) * impostor.object.scaling.y;\n                mesh.scaling.z = (bi.boundingBox.maximum.z - bi.boundingBox.minimum.z) * impostor.object.scaling.z;\n                break;\n            }\n        }\n        return mesh;\n    };\n    /** Releases all resources */\n    PhysicsViewer.prototype.dispose = function () {\n        var count = this._numMeshes;\n        for (var index = 0; index < count; index++) {\n            this.hideImpostor(this._impostors[0]);\n        }\n        if (this._debugBoxMesh) {\n            this._debugBoxMesh.dispose();\n        }\n        if (this._debugSphereMesh) {\n            this._debugSphereMesh.dispose();\n        }\n        if (this._debugCylinderMesh) {\n            this._debugCylinderMesh.dispose();\n        }\n        if (this._debugMaterial) {\n            this._debugMaterial.dispose();\n        }\n        this._impostors.length = 0;\n        this._scene = null;\n        this._physicsEnginePlugin = null;\n        if (this._utilityLayer) {\n            this._utilityLayer.dispose();\n            this._utilityLayer = null;\n        }\n    };\n    return PhysicsViewer;\n}());\nexport { PhysicsViewer };\n//# sourceMappingURL=physicsViewer.js.map","import { Vector3 } from \"../Maths/math.vector.js\";\nimport { CreateLines } from \"../Meshes/Builders/linesBuilder.js\";\n/**\n * As raycast might be hard to debug, the RayHelper can help rendering the different rays\n * in order to better appreciate the issue one might have.\n * @see https://doc.babylonjs.com/babylon101/raycasts#debugging\n */\nvar RayHelper = /** @class */ (function () {\n    /**\n     * Instantiate a new ray helper.\n     * As raycast might be hard to debug, the RayHelper can help rendering the different rays\n     * in order to better appreciate the issue one might have.\n     * @see https://doc.babylonjs.com/babylon101/raycasts#debugging\n     * @param ray Defines the ray we are currently tryin to visualize\n     */\n    function RayHelper(ray) {\n        this.ray = ray;\n    }\n    /**\n     * Helper function to create a colored helper in a scene in one line.\n     * @param ray Defines the ray we are currently tryin to visualize\n     * @param scene Defines the scene the ray is used in\n     * @param color Defines the color we want to see the ray in\n     * @returns The newly created ray helper.\n     */\n    RayHelper.CreateAndShow = function (ray, scene, color) {\n        var helper = new RayHelper(ray);\n        helper.show(scene, color);\n        return helper;\n    };\n    /**\n     * Shows the ray we are willing to debug.\n     * @param scene Defines the scene the ray needs to be rendered in\n     * @param color Defines the color the ray needs to be rendered in\n     */\n    RayHelper.prototype.show = function (scene, color) {\n        if (!this._renderFunction && this.ray) {\n            var ray = this.ray;\n            this._renderFunction = this._render.bind(this);\n            this._scene = scene;\n            this._renderPoints = [ray.origin, ray.origin.add(ray.direction.scale(ray.length))];\n            this._renderLine = CreateLines(\"ray\", { points: this._renderPoints, updatable: true }, scene);\n            this._renderLine.isPickable = false;\n            if (this._renderFunction) {\n                this._scene.registerBeforeRender(this._renderFunction);\n            }\n        }\n        if (color && this._renderLine) {\n            this._renderLine.color.copyFrom(color);\n        }\n    };\n    /**\n     * Hides the ray we are debugging.\n     */\n    RayHelper.prototype.hide = function () {\n        if (this._renderFunction && this._scene) {\n            this._scene.unregisterBeforeRender(this._renderFunction);\n            this._scene = null;\n            this._renderFunction = null;\n            if (this._renderLine) {\n                this._renderLine.dispose();\n                this._renderLine = null;\n            }\n            this._renderPoints = [];\n        }\n    };\n    RayHelper.prototype._render = function () {\n        var _a;\n        var ray = this.ray;\n        if (!ray) {\n            return;\n        }\n        var point = this._renderPoints[1];\n        var len = Math.min(ray.length, 1000000);\n        point.copyFrom(ray.direction);\n        point.scaleInPlace(len);\n        point.addInPlace(ray.origin);\n        this._renderPoints[0].copyFrom(ray.origin);\n        CreateLines(\"ray\", { points: this._renderPoints, updatable: true, instance: this._renderLine }, this._scene);\n        (_a = this._renderLine) === null || _a === void 0 ? void 0 : _a.refreshBoundingInfo();\n    };\n    /**\n     * Attach a ray helper to a mesh so that we can easily see its orientation for instance or information like its normals.\n     * @param mesh Defines the mesh we want the helper attached to\n     * @param meshSpaceDirection Defines the direction of the Ray in mesh space (local space of the mesh node)\n     * @param meshSpaceOrigin Defines the origin of the Ray in mesh space (local space of the mesh node)\n     * @param length Defines the length of the ray\n     */\n    RayHelper.prototype.attachToMesh = function (mesh, meshSpaceDirection, meshSpaceOrigin, length) {\n        var _this = this;\n        this._attachedToMesh = mesh;\n        var ray = this.ray;\n        if (!ray) {\n            return;\n        }\n        if (!ray.direction) {\n            ray.direction = Vector3.Zero();\n        }\n        if (!ray.origin) {\n            ray.origin = Vector3.Zero();\n        }\n        if (length) {\n            ray.length = length;\n        }\n        if (!meshSpaceOrigin) {\n            meshSpaceOrigin = Vector3.Zero();\n        }\n        if (!meshSpaceDirection) {\n            // -1 so that this will work with Mesh.lookAt\n            meshSpaceDirection = new Vector3(0, 0, -1);\n        }\n        if (!this._scene) {\n            this._scene = mesh.getScene();\n        }\n        if (!this._meshSpaceDirection) {\n            this._meshSpaceDirection = meshSpaceDirection.clone();\n            this._meshSpaceOrigin = meshSpaceOrigin.clone();\n        }\n        else {\n            this._meshSpaceDirection.copyFrom(meshSpaceDirection);\n            this._meshSpaceOrigin.copyFrom(meshSpaceOrigin);\n        }\n        if (!this._onAfterRenderObserver) {\n            this._onAfterRenderObserver = this._scene.onBeforeRenderObservable.add(function () { return _this._updateToMesh(); });\n            this._onAfterStepObserver = this._scene.onAfterStepObservable.add(function () { return _this._updateToMesh(); });\n        }\n        // force world matrix computation before the first ray helper computation\n        this._attachedToMesh.computeWorldMatrix(true);\n        this._updateToMesh();\n    };\n    /**\n     * Detach the ray helper from the mesh it has previously been attached to.\n     */\n    RayHelper.prototype.detachFromMesh = function () {\n        if (this._attachedToMesh && this._scene) {\n            if (this._onAfterRenderObserver) {\n                this._scene.onBeforeRenderObservable.remove(this._onAfterRenderObserver);\n                this._scene.onAfterStepObservable.remove(this._onAfterStepObserver);\n            }\n            this._attachedToMesh = null;\n            this._onAfterRenderObserver = null;\n            this._onAfterStepObserver = null;\n            this._scene = null;\n        }\n    };\n    RayHelper.prototype._updateToMesh = function () {\n        var ray = this.ray;\n        if (!this._attachedToMesh || !ray) {\n            return;\n        }\n        if (this._attachedToMesh.isDisposed()) {\n            this.detachFromMesh();\n            return;\n        }\n        this._attachedToMesh.getDirectionToRef(this._meshSpaceDirection, ray.direction);\n        Vector3.TransformCoordinatesToRef(this._meshSpaceOrigin, this._attachedToMesh.getWorldMatrix(), ray.origin);\n    };\n    /**\n     * Dispose the helper and release its associated resources.\n     */\n    RayHelper.prototype.dispose = function () {\n        this.hide();\n        this.detachFromMesh();\n        this.ray = null;\n    };\n    return RayHelper;\n}());\nexport { RayHelper };\n//# sourceMappingURL=rayHelper.js.map","import { Vector3, Matrix, TmpVectors } from \"../Maths/math.vector.js\";\nimport { Color3, Color4 } from \"../Maths/math.color.js\";\nimport { Mesh } from \"../Meshes/mesh.js\";\nimport { CreateLineSystem } from \"../Meshes/Builders/linesBuilder.js\";\nimport { UtilityLayerRenderer } from \"../Rendering/utilityLayerRenderer.js\";\nimport { Material } from \"../Materials/material.js\";\nimport { ShaderMaterial } from \"../Materials/shaderMaterial.js\";\nimport { DynamicTexture } from \"../Materials/Textures/dynamicTexture.js\";\nimport { VertexBuffer } from \"../Buffers/buffer.js\";\nimport { Effect } from \"../Materials/effect.js\";\nimport { CreateSphere } from \"../Meshes/Builders/sphereBuilder.js\";\nimport { ExtrudeShapeCustom } from \"../Meshes/Builders/shapeBuilder.js\";\n/**\n * Class used to render a debug view of a given skeleton\n * @see http://www.babylonjs-playground.com/#1BZJVJ#8\n */\nvar SkeletonViewer = /** @class */ (function () {\n    /**\n     * Creates a new SkeletonViewer\n     * @param skeleton defines the skeleton to render\n     * @param mesh defines the mesh attached to the skeleton\n     * @param scene defines the hosting scene\n     * @param autoUpdateBonesMatrices defines a boolean indicating if bones matrices must be forced to update before rendering (true by default)\n     * @param renderingGroupId defines the rendering group id to use with the viewer\n     * @param options All of the extra constructor options for the SkeletonViewer\n     */\n    function SkeletonViewer(\n    /** defines the skeleton to render */\n    skeleton, \n    /** defines the mesh attached to the skeleton */\n    mesh, \n    /** The Scene scope*/\n    scene, \n    /** defines a boolean indicating if bones matrices must be forced to update before rendering (true by default)  */\n    autoUpdateBonesMatrices, \n    /** defines the rendering group id to use with the viewer */\n    renderingGroupId, \n    /** is the options for the viewer */\n    options) {\n        if (autoUpdateBonesMatrices === void 0) { autoUpdateBonesMatrices = true; }\n        if (renderingGroupId === void 0) { renderingGroupId = 3; }\n        if (options === void 0) { options = {}; }\n        var _a, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q;\n        this.skeleton = skeleton;\n        this.mesh = mesh;\n        this.autoUpdateBonesMatrices = autoUpdateBonesMatrices;\n        this.renderingGroupId = renderingGroupId;\n        this.options = options;\n        /** Gets or sets the color used to render the skeleton */\n        this.color = Color3.White();\n        /** Array of the points of the skeleton fo the line view. */\n        this._debugLines = new Array();\n        /** The local axes Meshes. */\n        this._localAxes = null;\n        /** If SkeletonViewer is enabled. */\n        this._isEnabled = true;\n        /** SkeletonViewer render observable. */\n        this._obs = null;\n        this._scene = scene;\n        this._ready = false;\n        //Defaults\n        options.pauseAnimations = (_a = options.pauseAnimations) !== null && _a !== void 0 ? _a : true;\n        options.returnToRest = (_c = options.returnToRest) !== null && _c !== void 0 ? _c : false;\n        options.displayMode = (_d = options.displayMode) !== null && _d !== void 0 ? _d : SkeletonViewer.DISPLAY_LINES;\n        options.displayOptions = (_e = options.displayOptions) !== null && _e !== void 0 ? _e : {};\n        options.displayOptions.midStep = (_f = options.displayOptions.midStep) !== null && _f !== void 0 ? _f : 0.235;\n        options.displayOptions.midStepFactor = (_g = options.displayOptions.midStepFactor) !== null && _g !== void 0 ? _g : 0.155;\n        options.displayOptions.sphereBaseSize = (_h = options.displayOptions.sphereBaseSize) !== null && _h !== void 0 ? _h : 0.15;\n        options.displayOptions.sphereScaleUnit = (_j = options.displayOptions.sphereScaleUnit) !== null && _j !== void 0 ? _j : 2;\n        options.displayOptions.sphereFactor = (_k = options.displayOptions.sphereFactor) !== null && _k !== void 0 ? _k : 0.865;\n        options.displayOptions.spurFollowsChild = (_l = options.displayOptions.spurFollowsChild) !== null && _l !== void 0 ? _l : false;\n        options.displayOptions.showLocalAxes = (_m = options.displayOptions.showLocalAxes) !== null && _m !== void 0 ? _m : false;\n        options.displayOptions.localAxesSize = (_o = options.displayOptions.localAxesSize) !== null && _o !== void 0 ? _o : 0.075;\n        options.computeBonesUsingShaders = (_p = options.computeBonesUsingShaders) !== null && _p !== void 0 ? _p : true;\n        options.useAllBones = (_q = options.useAllBones) !== null && _q !== void 0 ? _q : true;\n        var initialMeshBoneIndices = mesh.getVerticesData(VertexBuffer.MatricesIndicesKind);\n        var initialMeshBoneWeights = mesh.getVerticesData(VertexBuffer.MatricesWeightsKind);\n        this._boneIndices = new Set();\n        if (!options.useAllBones) {\n            if (initialMeshBoneIndices && initialMeshBoneWeights) {\n                for (var i = 0; i < initialMeshBoneIndices.length; ++i) {\n                    var index = initialMeshBoneIndices[i], weight = initialMeshBoneWeights[i];\n                    if (weight !== 0) {\n                        this._boneIndices.add(index);\n                    }\n                }\n            }\n        }\n        /* Create Utility Layer */\n        this._utilityLayer = new UtilityLayerRenderer(this._scene, false);\n        this._utilityLayer.pickUtilitySceneFirst = false;\n        this._utilityLayer.utilityLayerScene.autoClearDepthAndStencil = true;\n        var displayMode = this.options.displayMode || 0;\n        if (displayMode > SkeletonViewer.DISPLAY_SPHERE_AND_SPURS) {\n            displayMode = SkeletonViewer.DISPLAY_LINES;\n        }\n        this.displayMode = displayMode;\n        //Prep the Systems\n        this.update();\n        this._bindObs();\n    }\n    /** public static method to create a BoneWeight Shader\n     * @param options The constructor options\n     * @param scene The scene that the shader is scoped to\n     * @returns The created ShaderMaterial\n     * @see http://www.babylonjs-playground.com/#1BZJVJ#395\n     */\n    SkeletonViewer.CreateBoneWeightShader = function (options, scene) {\n        var _a, _c, _d, _e, _f, _g;\n        var skeleton = options.skeleton;\n        var colorBase = (_a = options.colorBase) !== null && _a !== void 0 ? _a : Color3.Black();\n        var colorZero = (_c = options.colorZero) !== null && _c !== void 0 ? _c : Color3.Blue();\n        var colorQuarter = (_d = options.colorQuarter) !== null && _d !== void 0 ? _d : Color3.Green();\n        var colorHalf = (_e = options.colorHalf) !== null && _e !== void 0 ? _e : Color3.Yellow();\n        var colorFull = (_f = options.colorFull) !== null && _f !== void 0 ? _f : Color3.Red();\n        var targetBoneIndex = (_g = options.targetBoneIndex) !== null && _g !== void 0 ? _g : 0;\n        Effect.ShadersStore[\"boneWeights:\" + skeleton.name + \"VertexShader\"] = \"precision highp float;\\n\\n        attribute vec3 position;\\n        attribute vec2 uv;\\n\\n        uniform mat4 view;\\n        uniform mat4 projection;\\n        uniform mat4 worldViewProjection;\\n\\n        #include<bonesDeclaration>\\n        #if NUM_BONE_INFLUENCERS == 0\\n            attribute vec4 matricesIndices;\\n            attribute vec4 matricesWeights;\\n        #endif\\n        #include<bakedVertexAnimationDeclaration>\\n\\n        #include<instancesDeclaration>\\n\\n        varying vec3 vColor;\\n\\n        uniform vec3 colorBase;\\n        uniform vec3 colorZero;\\n        uniform vec3 colorQuarter;\\n        uniform vec3 colorHalf;\\n        uniform vec3 colorFull;\\n\\n        uniform float targetBoneIndex;\\n\\n        void main() {\\n            vec3 positionUpdated = position;\\n\\n            #include<instancesVertex>\\n            #include<bonesVertex>\\n            #include<bakedVertexAnimation>\\n\\n            vec4 worldPos = finalWorld * vec4(positionUpdated, 1.0);\\n\\n            vec3 color = colorBase;\\n            float totalWeight = 0.;\\n            if(matricesIndices[0] == targetBoneIndex && matricesWeights[0] > 0.){\\n                totalWeight += matricesWeights[0];\\n            }\\n            if(matricesIndices[1] == targetBoneIndex && matricesWeights[1] > 0.){\\n                totalWeight += matricesWeights[1];\\n            }\\n            if(matricesIndices[2] == targetBoneIndex && matricesWeights[2] > 0.){\\n                totalWeight += matricesWeights[2];\\n            }\\n            if(matricesIndices[3] == targetBoneIndex && matricesWeights[3] > 0.){\\n                totalWeight += matricesWeights[3];\\n            }\\n\\n            color = mix(color, colorZero, smoothstep(0., 0.25, totalWeight));\\n            color = mix(color, colorQuarter, smoothstep(0.25, 0.5, totalWeight));\\n            color = mix(color, colorHalf, smoothstep(0.5, 0.75, totalWeight));\\n            color = mix(color, colorFull, smoothstep(0.75, 1.0, totalWeight));\\n            vColor = color;\\n\\n        gl_Position = projection * view * worldPos;\\n        }\";\n        Effect.ShadersStore[\"boneWeights:\" + skeleton.name + \"FragmentShader\"] = \"\\n            precision highp float;\\n            varying vec3 vPosition;\\n\\n            varying vec3 vColor;\\n\\n            void main() {\\n                vec4 color = vec4(vColor, 1.0);\\n                gl_FragColor = color;\\n            }\\n        \";\n        var shader = new ShaderMaterial(\"boneWeight:\" + skeleton.name, scene, {\n            vertex: \"boneWeights:\" + skeleton.name,\n            fragment: \"boneWeights:\" + skeleton.name,\n        }, {\n            attributes: [\"position\", \"normal\", \"matricesIndices\", \"matricesWeights\"],\n            uniforms: [\n                \"world\",\n                \"worldView\",\n                \"worldViewProjection\",\n                \"view\",\n                \"projection\",\n                \"viewProjection\",\n                \"colorBase\",\n                \"colorZero\",\n                \"colorQuarter\",\n                \"colorHalf\",\n                \"colorFull\",\n                \"targetBoneIndex\",\n            ],\n        });\n        shader.setColor3(\"colorBase\", colorBase);\n        shader.setColor3(\"colorZero\", colorZero);\n        shader.setColor3(\"colorQuarter\", colorQuarter);\n        shader.setColor3(\"colorHalf\", colorHalf);\n        shader.setColor3(\"colorFull\", colorFull);\n        shader.setFloat(\"targetBoneIndex\", targetBoneIndex);\n        shader.getClassName = function () {\n            return \"BoneWeightShader\";\n        };\n        shader.transparencyMode = Material.MATERIAL_OPAQUE;\n        return shader;\n    };\n    /** public static method to create a BoneWeight Shader\n     * @param options The constructor options\n     * @param scene The scene that the shader is scoped to\n     * @returns The created ShaderMaterial\n     */\n    SkeletonViewer.CreateSkeletonMapShader = function (options, scene) {\n        var _a;\n        var skeleton = options.skeleton;\n        var colorMap = (_a = options.colorMap) !== null && _a !== void 0 ? _a : [\n            {\n                color: new Color3(1, 0.38, 0.18),\n                location: 0,\n            },\n            {\n                color: new Color3(0.59, 0.18, 1.0),\n                location: 0.2,\n            },\n            {\n                color: new Color3(0.59, 1, 0.18),\n                location: 0.4,\n            },\n            {\n                color: new Color3(1, 0.87, 0.17),\n                location: 0.6,\n            },\n            {\n                color: new Color3(1, 0.17, 0.42),\n                location: 0.8,\n            },\n            {\n                color: new Color3(0.17, 0.68, 1.0),\n                location: 1.0,\n            },\n        ];\n        var bufferWidth = skeleton.bones.length + 1;\n        var colorMapBuffer = SkeletonViewer._CreateBoneMapColorBuffer(bufferWidth, colorMap, scene);\n        var shader = new ShaderMaterial(\"boneWeights:\" + skeleton.name, scene, {\n            vertexSource: \"precision highp float;\\n\\n            attribute vec3 position;\\n            attribute vec2 uv;\\n\\n            uniform mat4 view;\\n            uniform mat4 projection;\\n            uniform mat4 worldViewProjection;\\n            uniform float colorMap[\" +\n                skeleton.bones.length * 4 +\n                \"];\\n\\n            #include<bonesDeclaration>\\n            #if NUM_BONE_INFLUENCERS == 0\\n                attribute vec4 matricesIndices;\\n                attribute vec4 matricesWeights;\\n            #endif\\n            #include<bakedVertexAnimationDeclaration>\\n            #include<instancesDeclaration>\\n\\n            varying vec3 vColor;\\n\\n            void main() {\\n                vec3 positionUpdated = position;\\n\\n                #include<instancesVertex>\\n                #include<bonesVertex>\\n                #include<bakedVertexAnimation>\\n\\n                vec3 color = vec3(0.);\\n                bool first = true;\\n\\n                for (int i = 0; i < 4; i++) {\\n                    int boneIdx = int(matricesIndices[i]);\\n                    float boneWgt = matricesWeights[i];\\n\\n                    vec3 c = vec3(colorMap[boneIdx * 4 + 0], colorMap[boneIdx * 4 + 1], colorMap[boneIdx * 4 + 2]);\\n\\n                    if (boneWgt > 0.) {\\n                        if (first) {\\n                            first = false;\\n                            color = c;\\n                        } else {\\n                            color = mix(color, c, boneWgt);\\n                        }\\n                    }\\n                }\\n\\n                vColor = color;\\n\\n                vec4 worldPos = finalWorld * vec4(positionUpdated, 1.0);\\n\\n                gl_Position = projection * view * worldPos;\\n            }\",\n            fragmentSource: \"\\n            precision highp float;\\n            varying vec3 vColor;\\n\\n            void main() {\\n                vec4 color = vec4( vColor, 1.0 );\\n                gl_FragColor = color;\\n            }\\n            \",\n        }, {\n            attributes: [\"position\", \"normal\", \"matricesIndices\", \"matricesWeights\"],\n            uniforms: [\"world\", \"worldView\", \"worldViewProjection\", \"view\", \"projection\", \"viewProjection\", \"colorMap\"],\n        });\n        shader.setFloats(\"colorMap\", colorMapBuffer);\n        shader.getClassName = function () {\n            return \"SkeletonMapShader\";\n        };\n        shader.transparencyMode = Material.MATERIAL_OPAQUE;\n        return shader;\n    };\n    /** private static method to create a BoneWeight Shader\n     * @param size The size of the buffer to create (usually the bone count)\n     * @param colorMap The gradient data to generate\n     * @param scene The scene that the shader is scoped to\n     * @returns an Array of floats from the color gradient values\n     */\n    SkeletonViewer._CreateBoneMapColorBuffer = function (size, colorMap, scene) {\n        var tempGrad = new DynamicTexture(\"temp\", { width: size, height: 1 }, scene, false);\n        var ctx = tempGrad.getContext();\n        var grad = ctx.createLinearGradient(0, 0, size, 0);\n        colorMap.forEach(function (stop) {\n            grad.addColorStop(stop.location, stop.color.toHexString());\n        });\n        ctx.fillStyle = grad;\n        ctx.fillRect(0, 0, size, 1);\n        tempGrad.update();\n        var buffer = [];\n        var data = ctx.getImageData(0, 0, size, 1).data;\n        var rUnit = 1 / 255;\n        for (var i = 0; i < data.length; i++) {\n            buffer.push(data[i] * rUnit);\n        }\n        tempGrad.dispose();\n        return buffer;\n    };\n    Object.defineProperty(SkeletonViewer.prototype, \"scene\", {\n        /** Gets the Scene. */\n        get: function () {\n            return this._scene;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonViewer.prototype, \"utilityLayer\", {\n        /** Gets the utilityLayer. */\n        get: function () {\n            return this._utilityLayer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonViewer.prototype, \"isReady\", {\n        /** Checks Ready Status. */\n        get: function () {\n            return this._ready;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonViewer.prototype, \"ready\", {\n        /** Sets Ready Status. */\n        set: function (value) {\n            this._ready = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonViewer.prototype, \"debugMesh\", {\n        /** Gets the debugMesh */\n        get: function () {\n            return this._debugMesh;\n        },\n        /** Sets the debugMesh */\n        set: function (value) {\n            this._debugMesh = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SkeletonViewer.prototype, \"displayMode\", {\n        /** Gets the displayMode */\n        get: function () {\n            return this.options.displayMode || SkeletonViewer.DISPLAY_LINES;\n        },\n        /** Sets the displayMode */\n        set: function (value) {\n            if (value > SkeletonViewer.DISPLAY_SPHERE_AND_SPURS) {\n                value = SkeletonViewer.DISPLAY_LINES;\n            }\n            this.options.displayMode = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /** The Dynamic bindings for the update functions */\n    SkeletonViewer.prototype._bindObs = function () {\n        var _this = this;\n        switch (this.displayMode) {\n            case SkeletonViewer.DISPLAY_LINES: {\n                this._obs = this.scene.onBeforeRenderObservable.add(function () {\n                    _this._displayLinesUpdate();\n                });\n                break;\n            }\n        }\n    };\n    /** Update the viewer to sync with current skeleton state, only used to manually update. */\n    SkeletonViewer.prototype.update = function () {\n        switch (this.displayMode) {\n            case SkeletonViewer.DISPLAY_LINES: {\n                this._displayLinesUpdate();\n                break;\n            }\n            case SkeletonViewer.DISPLAY_SPHERES: {\n                this._buildSpheresAndSpurs(true);\n                break;\n            }\n            case SkeletonViewer.DISPLAY_SPHERE_AND_SPURS: {\n                this._buildSpheresAndSpurs(false);\n                break;\n            }\n        }\n        this._buildLocalAxes();\n    };\n    Object.defineProperty(SkeletonViewer.prototype, \"isEnabled\", {\n        get: function () {\n            return this._isEnabled;\n        },\n        /** Gets or sets a boolean indicating if the viewer is enabled */\n        set: function (value) {\n            if (this.isEnabled === value) {\n                return;\n            }\n            this._isEnabled = value;\n            if (this.debugMesh) {\n                this.debugMesh.setEnabled(value);\n            }\n            if (value && !this._obs) {\n                this._bindObs();\n            }\n            else if (!value && this._obs) {\n                this.scene.onBeforeRenderObservable.remove(this._obs);\n                this._obs = null;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SkeletonViewer.prototype._getBonePosition = function (position, bone, meshMat, x, y, z) {\n        if (x === void 0) { x = 0; }\n        if (y === void 0) { y = 0; }\n        if (z === void 0) { z = 0; }\n        var tmat = TmpVectors.Matrix[0];\n        var parentBone = bone.getParent();\n        tmat.copyFrom(bone.getLocalMatrix());\n        if (x !== 0 || y !== 0 || z !== 0) {\n            var tmat2 = TmpVectors.Matrix[1];\n            Matrix.IdentityToRef(tmat2);\n            tmat2.setTranslationFromFloats(x, y, z);\n            tmat2.multiplyToRef(tmat, tmat);\n        }\n        if (parentBone) {\n            tmat.multiplyToRef(parentBone.getAbsoluteTransform(), tmat);\n        }\n        tmat.multiplyToRef(meshMat, tmat);\n        position.x = tmat.m[12];\n        position.y = tmat.m[13];\n        position.z = tmat.m[14];\n    };\n    SkeletonViewer.prototype._getLinesForBonesWithLength = function (bones, meshMat) {\n        var len = bones.length;\n        var mesh = this.mesh;\n        var meshPos = mesh.position;\n        var idx = 0;\n        for (var i = 0; i < len; i++) {\n            var bone = bones[i];\n            var points = this._debugLines[idx];\n            if (bone._index === -1 || (!this._boneIndices.has(bone.getIndex()) && !this.options.useAllBones)) {\n                continue;\n            }\n            if (!points) {\n                points = [Vector3.Zero(), Vector3.Zero()];\n                this._debugLines[idx] = points;\n            }\n            this._getBonePosition(points[0], bone, meshMat);\n            this._getBonePosition(points[1], bone, meshMat, 0, bone.length, 0);\n            points[0].subtractInPlace(meshPos);\n            points[1].subtractInPlace(meshPos);\n            idx++;\n        }\n    };\n    SkeletonViewer.prototype._getLinesForBonesNoLength = function (bones) {\n        var len = bones.length;\n        var boneNum = 0;\n        var mesh = this.mesh;\n        var meshPos = mesh.position;\n        for (var i = len - 1; i >= 0; i--) {\n            var childBone = bones[i];\n            var parentBone = childBone.getParent();\n            if (!parentBone || (!this._boneIndices.has(childBone.getIndex()) && !this.options.useAllBones)) {\n                continue;\n            }\n            var points = this._debugLines[boneNum];\n            if (!points) {\n                points = [Vector3.Zero(), Vector3.Zero()];\n                this._debugLines[boneNum] = points;\n            }\n            childBone.getAbsolutePositionToRef(mesh, points[0]);\n            parentBone.getAbsolutePositionToRef(mesh, points[1]);\n            points[0].subtractInPlace(meshPos);\n            points[1].subtractInPlace(meshPos);\n            boneNum++;\n        }\n    };\n    /**\n     * function to revert the mesh and scene back to the initial state.\n     * @param animationState\n     */\n    SkeletonViewer.prototype._revert = function (animationState) {\n        if (this.options.pauseAnimations) {\n            this.scene.animationsEnabled = animationState;\n            this.utilityLayer.utilityLayerScene.animationsEnabled = animationState;\n        }\n    };\n    /**\n     * function to get the absolute bind pose of a bone by accumulating transformations up the bone hierarchy.\n     * @param bone\n     * @param matrix\n     */\n    SkeletonViewer.prototype._getAbsoluteBindPoseToRef = function (bone, matrix) {\n        if (bone === null || bone._index === -1) {\n            matrix.copyFrom(Matrix.Identity());\n            return;\n        }\n        this._getAbsoluteBindPoseToRef(bone.getParent(), matrix);\n        bone.getBaseMatrix().multiplyToRef(matrix, matrix);\n        return;\n    };\n    /**\n     * function to build and bind sphere joint points and spur bone representations.\n     * @param spheresOnly\n     */\n    SkeletonViewer.prototype._buildSpheresAndSpurs = function (spheresOnly) {\n        var _a, _c;\n        if (spheresOnly === void 0) { spheresOnly = true; }\n        if (this._debugMesh) {\n            this._debugMesh.dispose();\n            this._debugMesh = null;\n            this.ready = false;\n        }\n        this._ready = false;\n        var utilityLayerScene = (_a = this.utilityLayer) === null || _a === void 0 ? void 0 : _a.utilityLayerScene;\n        var bones = this.skeleton.bones;\n        var spheres = [];\n        var spurs = [];\n        var animationState = this.scene.animationsEnabled;\n        try {\n            if (this.options.pauseAnimations) {\n                this.scene.animationsEnabled = false;\n                utilityLayerScene.animationsEnabled = false;\n            }\n            if (this.options.returnToRest) {\n                this.skeleton.returnToRest();\n            }\n            if (this.autoUpdateBonesMatrices) {\n                this.skeleton.computeAbsoluteTransforms();\n            }\n            var longestBoneLength_1 = Number.NEGATIVE_INFINITY;\n            var displayOptions_1 = this.options.displayOptions || {};\n            var _loop_1 = function (i) {\n                var bone = bones[i];\n                if (bone._index === -1 || (!this_1._boneIndices.has(bone.getIndex()) && !this_1.options.useAllBones)) {\n                    return \"continue\";\n                }\n                var boneAbsoluteBindPoseTransform = new Matrix();\n                this_1._getAbsoluteBindPoseToRef(bone, boneAbsoluteBindPoseTransform);\n                var anchorPoint = new Vector3();\n                boneAbsoluteBindPoseTransform.decompose(undefined, undefined, anchorPoint);\n                bone.children.forEach(function (bc) {\n                    var childAbsoluteBindPoseTransform = new Matrix();\n                    bc.getBaseMatrix().multiplyToRef(boneAbsoluteBindPoseTransform, childAbsoluteBindPoseTransform);\n                    var childPoint = new Vector3();\n                    childAbsoluteBindPoseTransform.decompose(undefined, undefined, childPoint);\n                    var distanceFromParent = Vector3.Distance(anchorPoint, childPoint);\n                    if (distanceFromParent > longestBoneLength_1) {\n                        longestBoneLength_1 = distanceFromParent;\n                    }\n                    if (spheresOnly) {\n                        return;\n                    }\n                    var dir = childPoint.clone().subtract(anchorPoint.clone());\n                    var h = dir.length();\n                    var up = dir.normalize().scale(h);\n                    var midStep = displayOptions_1.midStep || 0.165;\n                    var midStepFactor = displayOptions_1.midStepFactor || 0.215;\n                    var up0 = up.scale(midStep);\n                    var spur = ExtrudeShapeCustom(\"skeletonViewer\", {\n                        shape: [new Vector3(1, -1, 0), new Vector3(1, 1, 0), new Vector3(-1, 1, 0), new Vector3(-1, -1, 0), new Vector3(1, -1, 0)],\n                        path: [Vector3.Zero(), up0, up],\n                        scaleFunction: function (i) {\n                            switch (i) {\n                                case 0:\n                                case 2:\n                                    return 0;\n                                case 1:\n                                    return h * midStepFactor;\n                            }\n                            return 0;\n                        },\n                        sideOrientation: Mesh.DEFAULTSIDE,\n                        updatable: false,\n                    }, utilityLayerScene);\n                    var numVertices = spur.getTotalVertices();\n                    var mwk = [], mik = [];\n                    for (var i_1 = 0; i_1 < numVertices; i_1++) {\n                        mwk.push(1, 0, 0, 0);\n                        // Select verts at end of spur (ie vert 10 to 14) and bind to child\n                        // bone if spurFollowsChild is enabled.\n                        if (displayOptions_1.spurFollowsChild && i_1 > 9) {\n                            mik.push(bc.getIndex(), 0, 0, 0);\n                        }\n                        else {\n                            mik.push(bone.getIndex(), 0, 0, 0);\n                        }\n                    }\n                    spur.position = anchorPoint.clone();\n                    spur.setVerticesData(VertexBuffer.MatricesWeightsKind, mwk, false);\n                    spur.setVerticesData(VertexBuffer.MatricesIndicesKind, mik, false);\n                    spur.convertToFlatShadedMesh();\n                    spurs.push(spur);\n                });\n                var sphereBaseSize = displayOptions_1.sphereBaseSize || 0.2;\n                var sphere = CreateSphere(\"skeletonViewer\", {\n                    segments: 6,\n                    diameter: sphereBaseSize,\n                    updatable: true,\n                }, utilityLayerScene);\n                var numVertices = sphere.getTotalVertices();\n                var mwk = [], mik = [];\n                for (var i_2 = 0; i_2 < numVertices; i_2++) {\n                    mwk.push(1, 0, 0, 0);\n                    mik.push(bone.getIndex(), 0, 0, 0);\n                }\n                sphere.setVerticesData(VertexBuffer.MatricesWeightsKind, mwk, false);\n                sphere.setVerticesData(VertexBuffer.MatricesIndicesKind, mik, false);\n                sphere.position = anchorPoint.clone();\n                spheres.push([sphere, bone]);\n            };\n            var this_1 = this;\n            for (var i = 0; i < bones.length; i++) {\n                _loop_1(i);\n            }\n            var sphereScaleUnit = displayOptions_1.sphereScaleUnit || 2;\n            var sphereFactor = displayOptions_1.sphereFactor || 0.85;\n            var meshes = [];\n            for (var i = 0; i < spheres.length; i++) {\n                var _d = spheres[i], sphere = _d[0], bone = _d[1];\n                var scale = 1 / (sphereScaleUnit / longestBoneLength_1);\n                var _stepsOut = 0;\n                var _b = bone;\n                while (_b.getParent() && _b.getParent().getIndex() !== -1) {\n                    _stepsOut++;\n                    _b = _b.getParent();\n                }\n                sphere.scaling.scaleInPlace(scale * Math.pow(sphereFactor, _stepsOut));\n                meshes.push(sphere);\n            }\n            this.debugMesh = Mesh.MergeMeshes(meshes.concat(spurs), true, true);\n            if (this.debugMesh) {\n                this.debugMesh.renderingGroupId = this.renderingGroupId;\n                this.debugMesh.skeleton = this.skeleton;\n                this.debugMesh.parent = this.mesh;\n                this.debugMesh.computeBonesUsingShaders = (_c = this.options.computeBonesUsingShaders) !== null && _c !== void 0 ? _c : true;\n                this.debugMesh.alwaysSelectAsActiveMesh = true;\n            }\n            var light = this.utilityLayer._getSharedGizmoLight();\n            light.intensity = 0.7;\n            this._revert(animationState);\n            this.ready = true;\n        }\n        catch (err) {\n            console.error(err);\n            this._revert(animationState);\n            this.dispose();\n        }\n    };\n    SkeletonViewer.prototype._buildLocalAxes = function () {\n        var _a;\n        if (this._localAxes) {\n            this._localAxes.dispose();\n        }\n        this._localAxes = null;\n        var displayOptions = this.options.displayOptions || {};\n        if (!displayOptions.showLocalAxes) {\n            return;\n        }\n        var targetScene = this._utilityLayer.utilityLayerScene;\n        var size = displayOptions.localAxesSize || 0.075;\n        var lines = [];\n        var colors = [];\n        var red = new Color4(1, 0, 0, 1);\n        var green = new Color4(0, 1, 0, 1);\n        var blue = new Color4(0, 0, 1, 1);\n        var mwk = [];\n        var mik = [];\n        var vertsPerBone = 6;\n        for (var i in this.skeleton.bones) {\n            var bone = this.skeleton.bones[i];\n            if (bone._index === -1 || (!this._boneIndices.has(bone.getIndex()) && !this.options.useAllBones)) {\n                continue;\n            }\n            var boneAbsoluteBindPoseTransform = new Matrix();\n            var boneOrigin = new Vector3();\n            this._getAbsoluteBindPoseToRef(bone, boneAbsoluteBindPoseTransform);\n            boneAbsoluteBindPoseTransform.decompose(undefined, TmpVectors.Quaternion[0], boneOrigin);\n            var m = new Matrix();\n            TmpVectors.Quaternion[0].toRotationMatrix(m);\n            var boneAxisX = Vector3.TransformCoordinates(new Vector3(0 + size, 0, 0), m);\n            var boneAxisY = Vector3.TransformCoordinates(new Vector3(0, 0 + size, 0), m);\n            var boneAxisZ = Vector3.TransformCoordinates(new Vector3(0, 0, 0 + size), m);\n            var axisX = [boneOrigin, boneOrigin.add(boneAxisX)];\n            var axisY = [boneOrigin, boneOrigin.add(boneAxisY)];\n            var axisZ = [boneOrigin, boneOrigin.add(boneAxisZ)];\n            var linePoints = [axisX, axisY, axisZ];\n            var lineColors = [\n                [red, red],\n                [green, green],\n                [blue, blue],\n            ];\n            lines.push.apply(lines, linePoints);\n            colors.push.apply(colors, lineColors);\n            for (var j = 0; j < vertsPerBone; j++) {\n                mwk.push(1, 0, 0, 0);\n                mik.push(bone.getIndex(), 0, 0, 0);\n            }\n        }\n        this._localAxes = CreateLineSystem(\"localAxes\", { lines: lines, colors: colors, updatable: true }, targetScene);\n        this._localAxes.setVerticesData(VertexBuffer.MatricesWeightsKind, mwk, false);\n        this._localAxes.setVerticesData(VertexBuffer.MatricesIndicesKind, mik, false);\n        this._localAxes.skeleton = this.skeleton;\n        this._localAxes.renderingGroupId = this.renderingGroupId + 1;\n        this._localAxes.parent = this.mesh;\n        this._localAxes.computeBonesUsingShaders = (_a = this.options.computeBonesUsingShaders) !== null && _a !== void 0 ? _a : true;\n    };\n    /** Update the viewer to sync with current skeleton state, only used for the line display. */\n    SkeletonViewer.prototype._displayLinesUpdate = function () {\n        if (!this._utilityLayer) {\n            return;\n        }\n        if (this.autoUpdateBonesMatrices) {\n            this.skeleton.computeAbsoluteTransforms();\n        }\n        if (this.skeleton.bones[0].length === undefined) {\n            this._getLinesForBonesNoLength(this.skeleton.bones);\n        }\n        else {\n            this._getLinesForBonesWithLength(this.skeleton.bones, this.mesh.getWorldMatrix());\n        }\n        var targetScene = this._utilityLayer.utilityLayerScene;\n        if (targetScene) {\n            if (!this._debugMesh) {\n                this._debugMesh = CreateLineSystem(\"\", { lines: this._debugLines, updatable: true, instance: null }, targetScene);\n                this._debugMesh.renderingGroupId = this.renderingGroupId;\n            }\n            else {\n                CreateLineSystem(\"\", { lines: this._debugLines, updatable: true, instance: this._debugMesh }, targetScene);\n            }\n            this._debugMesh.position.copyFrom(this.mesh.position);\n            this._debugMesh.color = this.color;\n        }\n    };\n    /** Changes the displayMode of the skeleton viewer\n     * @param mode The displayMode numerical value\n     */\n    SkeletonViewer.prototype.changeDisplayMode = function (mode) {\n        var wasEnabled = this.isEnabled ? true : false;\n        if (this.displayMode !== mode) {\n            this.isEnabled = false;\n            if (this._debugMesh) {\n                this._debugMesh.dispose();\n                this._debugMesh = null;\n                this.ready = false;\n            }\n            this.displayMode = mode;\n            this.update();\n            this._bindObs();\n            this.isEnabled = wasEnabled;\n        }\n    };\n    /** Sets a display option of the skeleton viewer\n     *\n     * | Option           | Type    | Default | Description |\n     * | ---------------- | ------- | ------- | ----------- |\n     * | midStep          | float   | 0.235   | A percentage between a bone and its child that determines the widest part of a spur. Only used when `displayMode` is set to `DISPLAY_SPHERE_AND_SPURS`. |\n     * | midStepFactor    | float   | 0.15    | Mid step width expressed as a factor of the length. A value of 0.5 makes the spur width half of the spur length. Only used when `displayMode` is set to `DISPLAY_SPHERE_AND_SPURS`. |\n     * | sphereBaseSize   | float   | 2       | Sphere base size. Only used when `displayMode` is set to `DISPLAY_SPHERE_AND_SPURS`. |\n     * | sphereScaleUnit  | float   | 0.865   | Sphere scale factor used to scale spheres in relation to the longest bone. Only used when `displayMode` is set to `DISPLAY_SPHERE_AND_SPURS`. |\n     * | spurFollowsChild | boolean | false   | Whether a spur should attach its far end to the child bone. |\n     * | showLocalAxes    | boolean | false   | Displays local axes on all bones. |\n     * | localAxesSize    | float   | 0.075   | Determines the length of each local axis. |\n     *\n     * @param option String of the option name\n     * @param value The numerical option value\n     */\n    SkeletonViewer.prototype.changeDisplayOptions = function (option, value) {\n        var wasEnabled = this.isEnabled ? true : false;\n        this.options.displayOptions[option] = value;\n        this.isEnabled = false;\n        if (this._debugMesh) {\n            this._debugMesh.dispose();\n            this._debugMesh = null;\n            this.ready = false;\n        }\n        this.update();\n        this._bindObs();\n        this.isEnabled = wasEnabled;\n    };\n    /** Release associated resources */\n    SkeletonViewer.prototype.dispose = function () {\n        this.isEnabled = false;\n        if (this._debugMesh) {\n            this._debugMesh.dispose();\n            this._debugMesh = null;\n        }\n        if (this._utilityLayer) {\n            this._utilityLayer.dispose();\n            this._utilityLayer = null;\n        }\n        this.ready = false;\n    };\n    /** public Display constants BABYLON.SkeletonViewer.DISPLAY_LINES */\n    SkeletonViewer.DISPLAY_LINES = 0;\n    /** public Display constants BABYLON.SkeletonViewer.DISPLAY_SPHERES */\n    SkeletonViewer.DISPLAY_SPHERES = 1;\n    /** public Display constants BABYLON.SkeletonViewer.DISPLAY_SPHERE_AND_SPURS */\n    SkeletonViewer.DISPLAY_SPHERE_AND_SPURS = 2;\n    return SkeletonViewer;\n}());\nexport { SkeletonViewer };\n//# sourceMappingURL=skeletonViewer.js.map","import { StandardMaterial } from \"../Materials/standardMaterial.js\";\nimport { Color3 } from \"../Maths/math.color.js\";\nimport { Matrix, TmpVectors, Vector3 } from \"../Maths/math.vector.js\";\nimport { CreateLines } from \"../Meshes/Builders/linesBuilder.js\";\nimport { Mesh } from \"../Meshes/mesh.js\";\nimport { VertexData } from \"../Meshes/mesh.vertexData.js\";\nimport { TransformNode } from \"../Meshes/transformNode.js\";\n/**\n * Class used to render a debug view of the frustum for a directional light\n * @see https://playground.babylonjs.com/#7EFGSG#4\n * @since 5.0.0\n */\nvar DirectionalLightFrustumViewer = /** @class */ (function () {\n    /**\n     * Creates a new frustum viewer\n     * @param light directional light to display the frustum for\n     * @param camera camera used to retrieve the minZ / maxZ values if the shadowMinZ/shadowMaxZ values of the light are not setup\n     */\n    function DirectionalLightFrustumViewer(light, camera) {\n        this._oldPosition = new Vector3(Number.NaN, Number.NaN, Number.NaN);\n        this._oldDirection = new Vector3(Number.NaN, Number.NaN, Number.NaN);\n        this._transparency = 0.3;\n        this._showLines = true;\n        this._showPlanes = true;\n        this._scene = light.getScene();\n        this._light = light;\n        this._camera = camera;\n        this._inverseViewMatrix = Matrix.Identity();\n        this._lightHelperFrustumMeshes = [];\n        this._createGeometry();\n        this.show();\n        this.update();\n    }\n    Object.defineProperty(DirectionalLightFrustumViewer.prototype, \"transparency\", {\n        /**\n         * Gets or sets the transparency of the frustum planes\n         */\n        get: function () {\n            return this._transparency;\n        },\n        set: function (alpha) {\n            this._transparency = alpha;\n            for (var i = 6; i < 12; ++i) {\n                this._lightHelperFrustumMeshes[i].material.alpha = alpha;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DirectionalLightFrustumViewer.prototype, \"showLines\", {\n        /**\n         * true to display the edges of the frustum\n         */\n        get: function () {\n            return this._showLines;\n        },\n        set: function (show) {\n            if (this._showLines === show) {\n                return;\n            }\n            this._showLines = show;\n            for (var i = 0; i < 6; ++i) {\n                this._lightHelperFrustumMeshes[i].setEnabled(show);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DirectionalLightFrustumViewer.prototype, \"showPlanes\", {\n        /**\n         * true to display the planes of the frustum\n         */\n        get: function () {\n            return this._showPlanes;\n        },\n        set: function (show) {\n            if (this._showPlanes === show) {\n                return;\n            }\n            this._showPlanes = show;\n            for (var i = 6; i < 12; ++i) {\n                this._lightHelperFrustumMeshes[i].setEnabled(show);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Shows the frustum\n     */\n    DirectionalLightFrustumViewer.prototype.show = function () {\n        var _this = this;\n        this._lightHelperFrustumMeshes.forEach(function (mesh, index) {\n            mesh.setEnabled((index < 6 && _this._showLines) || (index >= 6 && _this._showPlanes));\n        });\n        this._oldPosition.set(Number.NaN, Number.NaN, Number.NaN);\n        this._visible = true;\n    };\n    /**\n     * Hides the frustum\n     */\n    DirectionalLightFrustumViewer.prototype.hide = function () {\n        this._lightHelperFrustumMeshes.forEach(function (mesh) {\n            mesh.setEnabled(false);\n        });\n        this._visible = false;\n    };\n    /**\n     * Updates the frustum.\n     * Call this method to update the frustum view if the light has changed position/direction\n     */\n    DirectionalLightFrustumViewer.prototype.update = function () {\n        var _a, _b, _c, _d, _e, _f;\n        if (!this._visible) {\n            return;\n        }\n        if (this._oldPosition.equals(this._light.position) &&\n            this._oldDirection.equals(this._light.direction) &&\n            this._oldAutoCalc === this._light.autoCalcShadowZBounds &&\n            this._oldMinZ === this._light.shadowMinZ &&\n            this._oldMaxZ === this._light.shadowMaxZ) {\n            return;\n        }\n        this._oldPosition.copyFrom(this._light.position);\n        this._oldDirection.copyFrom(this._light.direction);\n        this._oldAutoCalc = this._light.autoCalcShadowZBounds;\n        this._oldMinZ = this._light.shadowMinZ;\n        this._oldMaxZ = this._light.shadowMaxZ;\n        TmpVectors.Vector3[0].set(this._light.orthoLeft, this._light.orthoBottom, this._light.shadowMinZ !== undefined ? this._light.shadowMinZ : this._camera.minZ); // min light extents\n        TmpVectors.Vector3[1].set(this._light.orthoRight, this._light.orthoTop, this._light.shadowMaxZ !== undefined ? this._light.shadowMaxZ : this._camera.maxZ); // max light extents\n        var invLightView = this._getInvertViewMatrix();\n        TmpVectors.Vector3[2].copyFromFloats(TmpVectors.Vector3[1].x, TmpVectors.Vector3[1].y, TmpVectors.Vector3[0].z); // n1\n        TmpVectors.Vector3[3].copyFromFloats(TmpVectors.Vector3[1].x, TmpVectors.Vector3[0].y, TmpVectors.Vector3[0].z); // n2\n        TmpVectors.Vector3[4].copyFromFloats(TmpVectors.Vector3[0].x, TmpVectors.Vector3[0].y, TmpVectors.Vector3[0].z); // n3\n        TmpVectors.Vector3[5].copyFromFloats(TmpVectors.Vector3[0].x, TmpVectors.Vector3[1].y, TmpVectors.Vector3[0].z); // n4\n        Vector3.TransformCoordinatesToRef(TmpVectors.Vector3[2], invLightView, TmpVectors.Vector3[2]); // near1\n        Vector3.TransformCoordinatesToRef(TmpVectors.Vector3[3], invLightView, TmpVectors.Vector3[3]); // near2\n        Vector3.TransformCoordinatesToRef(TmpVectors.Vector3[4], invLightView, TmpVectors.Vector3[4]); // near3\n        Vector3.TransformCoordinatesToRef(TmpVectors.Vector3[5], invLightView, TmpVectors.Vector3[5]); // near4\n        TmpVectors.Vector3[6].copyFromFloats(TmpVectors.Vector3[1].x, TmpVectors.Vector3[1].y, TmpVectors.Vector3[1].z); // f1\n        TmpVectors.Vector3[7].copyFromFloats(TmpVectors.Vector3[1].x, TmpVectors.Vector3[0].y, TmpVectors.Vector3[1].z); // f2\n        TmpVectors.Vector3[8].copyFromFloats(TmpVectors.Vector3[0].x, TmpVectors.Vector3[0].y, TmpVectors.Vector3[1].z); // f3\n        TmpVectors.Vector3[9].copyFromFloats(TmpVectors.Vector3[0].x, TmpVectors.Vector3[1].y, TmpVectors.Vector3[1].z); // f4\n        Vector3.TransformCoordinatesToRef(TmpVectors.Vector3[6], invLightView, TmpVectors.Vector3[6]); // far1\n        Vector3.TransformCoordinatesToRef(TmpVectors.Vector3[7], invLightView, TmpVectors.Vector3[7]); // far2\n        Vector3.TransformCoordinatesToRef(TmpVectors.Vector3[8], invLightView, TmpVectors.Vector3[8]); // far3\n        Vector3.TransformCoordinatesToRef(TmpVectors.Vector3[9], invLightView, TmpVectors.Vector3[9]); // far4\n        CreateLines(\"nearlines\", { updatable: true, points: this._nearLinesPoints, instance: this._lightHelperFrustumMeshes[0] }, this._scene);\n        CreateLines(\"farlines\", { updatable: true, points: this._farLinesPoints, instance: this._lightHelperFrustumMeshes[1] }, this._scene);\n        CreateLines(\"trlines\", { updatable: true, points: this._trLinesPoints, instance: this._lightHelperFrustumMeshes[2] }, this._scene);\n        CreateLines(\"brlines\", { updatable: true, points: this._brLinesPoints, instance: this._lightHelperFrustumMeshes[3] }, this._scene);\n        CreateLines(\"tllines\", { updatable: true, points: this._tlLinesPoints, instance: this._lightHelperFrustumMeshes[4] }, this._scene);\n        CreateLines(\"bllines\", { updatable: true, points: this._blLinesPoints, instance: this._lightHelperFrustumMeshes[5] }, this._scene);\n        TmpVectors.Vector3[2].toArray(this._nearPlaneVertices, 0);\n        TmpVectors.Vector3[3].toArray(this._nearPlaneVertices, 3);\n        TmpVectors.Vector3[4].toArray(this._nearPlaneVertices, 6);\n        TmpVectors.Vector3[5].toArray(this._nearPlaneVertices, 9);\n        (_a = this._lightHelperFrustumMeshes[6].geometry) === null || _a === void 0 ? void 0 : _a.updateVerticesDataDirectly(\"position\", this._nearPlaneVertices, 0);\n        TmpVectors.Vector3[6].toArray(this._farPlaneVertices, 0);\n        TmpVectors.Vector3[7].toArray(this._farPlaneVertices, 3);\n        TmpVectors.Vector3[8].toArray(this._farPlaneVertices, 6);\n        TmpVectors.Vector3[9].toArray(this._farPlaneVertices, 9);\n        (_b = this._lightHelperFrustumMeshes[7].geometry) === null || _b === void 0 ? void 0 : _b.updateVerticesDataDirectly(\"position\", this._farPlaneVertices, 0);\n        TmpVectors.Vector3[2].toArray(this._rightPlaneVertices, 0);\n        TmpVectors.Vector3[6].toArray(this._rightPlaneVertices, 3);\n        TmpVectors.Vector3[7].toArray(this._rightPlaneVertices, 6);\n        TmpVectors.Vector3[3].toArray(this._rightPlaneVertices, 9);\n        (_c = this._lightHelperFrustumMeshes[8].geometry) === null || _c === void 0 ? void 0 : _c.updateVerticesDataDirectly(\"position\", this._rightPlaneVertices, 0);\n        TmpVectors.Vector3[5].toArray(this._leftPlaneVertices, 0);\n        TmpVectors.Vector3[9].toArray(this._leftPlaneVertices, 3);\n        TmpVectors.Vector3[8].toArray(this._leftPlaneVertices, 6);\n        TmpVectors.Vector3[4].toArray(this._leftPlaneVertices, 9);\n        (_d = this._lightHelperFrustumMeshes[9].geometry) === null || _d === void 0 ? void 0 : _d.updateVerticesDataDirectly(\"position\", this._leftPlaneVertices, 0);\n        TmpVectors.Vector3[2].toArray(this._topPlaneVertices, 0);\n        TmpVectors.Vector3[6].toArray(this._topPlaneVertices, 3);\n        TmpVectors.Vector3[9].toArray(this._topPlaneVertices, 6);\n        TmpVectors.Vector3[5].toArray(this._topPlaneVertices, 9);\n        (_e = this._lightHelperFrustumMeshes[10].geometry) === null || _e === void 0 ? void 0 : _e.updateVerticesDataDirectly(\"position\", this._topPlaneVertices, 0);\n        TmpVectors.Vector3[3].toArray(this._bottomPlaneVertices, 0);\n        TmpVectors.Vector3[7].toArray(this._bottomPlaneVertices, 3);\n        TmpVectors.Vector3[8].toArray(this._bottomPlaneVertices, 6);\n        TmpVectors.Vector3[4].toArray(this._bottomPlaneVertices, 9);\n        (_f = this._lightHelperFrustumMeshes[11].geometry) === null || _f === void 0 ? void 0 : _f.updateVerticesDataDirectly(\"position\", this._bottomPlaneVertices, 0);\n    };\n    /**\n     * Dispose of the class / remove the frustum view\n     */\n    DirectionalLightFrustumViewer.prototype.dispose = function () {\n        this._lightHelperFrustumMeshes.forEach(function (mesh) {\n            var _a;\n            (_a = mesh.material) === null || _a === void 0 ? void 0 : _a.dispose();\n            mesh.dispose();\n        });\n        this._rootNode.dispose();\n    };\n    DirectionalLightFrustumViewer.prototype._createGeometry = function () {\n        var _this = this;\n        this._rootNode = new TransformNode(\"directionalLightHelperRoot_\" + this._light.name, this._scene);\n        this._rootNode.parent = this._light.parent;\n        this._nearLinesPoints = [Vector3.ZeroReadOnly, Vector3.ZeroReadOnly, Vector3.ZeroReadOnly, Vector3.ZeroReadOnly, Vector3.ZeroReadOnly];\n        var nearLines = CreateLines(\"nearlines\", { updatable: true, points: this._nearLinesPoints }, this._scene);\n        nearLines.parent = this._rootNode;\n        nearLines.alwaysSelectAsActiveMesh = true;\n        this._farLinesPoints = [Vector3.ZeroReadOnly, Vector3.ZeroReadOnly, Vector3.ZeroReadOnly, Vector3.ZeroReadOnly, Vector3.ZeroReadOnly];\n        var farLines = CreateLines(\"farlines\", { updatable: true, points: this._farLinesPoints }, this._scene);\n        farLines.parent = this._rootNode;\n        farLines.alwaysSelectAsActiveMesh = true;\n        this._trLinesPoints = [Vector3.ZeroReadOnly, Vector3.ZeroReadOnly];\n        var trLines = CreateLines(\"trlines\", { updatable: true, points: this._trLinesPoints }, this._scene);\n        trLines.parent = this._rootNode;\n        trLines.alwaysSelectAsActiveMesh = true;\n        this._brLinesPoints = [Vector3.ZeroReadOnly, Vector3.ZeroReadOnly];\n        var brLines = CreateLines(\"brlines\", { updatable: true, points: this._brLinesPoints }, this._scene);\n        brLines.parent = this._rootNode;\n        brLines.alwaysSelectAsActiveMesh = true;\n        this._tlLinesPoints = [Vector3.ZeroReadOnly, Vector3.ZeroReadOnly];\n        var tlLines = CreateLines(\"tllines\", { updatable: true, points: this._tlLinesPoints }, this._scene);\n        tlLines.parent = this._rootNode;\n        tlLines.alwaysSelectAsActiveMesh = true;\n        this._blLinesPoints = [Vector3.ZeroReadOnly, Vector3.ZeroReadOnly];\n        var blLines = CreateLines(\"bllines\", { updatable: true, points: this._blLinesPoints }, this._scene);\n        blLines.parent = this._rootNode;\n        blLines.alwaysSelectAsActiveMesh = true;\n        this._lightHelperFrustumMeshes.push(nearLines, farLines, trLines, brLines, tlLines, blLines);\n        var makePlane = function (name, color, positions) {\n            var plane = new Mesh(name + \"plane\", _this._scene);\n            var mat = new StandardMaterial(name + \"PlaneMat\", _this._scene);\n            plane.material = mat;\n            plane.parent = _this._rootNode;\n            plane.alwaysSelectAsActiveMesh = true;\n            mat.emissiveColor = color;\n            mat.alpha = _this.transparency;\n            mat.backFaceCulling = false;\n            mat.disableLighting = true;\n            var indices = [0, 1, 2, 0, 2, 3];\n            var vertexData = new VertexData();\n            vertexData.positions = positions;\n            vertexData.indices = indices;\n            vertexData.applyToMesh(plane, true);\n            _this._lightHelperFrustumMeshes.push(plane);\n        };\n        this._nearPlaneVertices = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        this._farPlaneVertices = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        this._rightPlaneVertices = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        this._leftPlaneVertices = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        this._topPlaneVertices = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        this._bottomPlaneVertices = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        makePlane(\"near\", new Color3(1, 0, 0), this._nearPlaneVertices);\n        makePlane(\"far\", new Color3(0.3, 0, 0), this._farPlaneVertices);\n        makePlane(\"right\", new Color3(0, 1, 0), this._rightPlaneVertices);\n        makePlane(\"left\", new Color3(0, 0.3, 0), this._leftPlaneVertices);\n        makePlane(\"top\", new Color3(0, 0, 1), this._topPlaneVertices);\n        makePlane(\"bottom\", new Color3(0, 0, 0.3), this._bottomPlaneVertices);\n        this._nearLinesPoints[0] = TmpVectors.Vector3[2];\n        this._nearLinesPoints[1] = TmpVectors.Vector3[3];\n        this._nearLinesPoints[2] = TmpVectors.Vector3[4];\n        this._nearLinesPoints[3] = TmpVectors.Vector3[5];\n        this._nearLinesPoints[4] = TmpVectors.Vector3[2];\n        this._farLinesPoints[0] = TmpVectors.Vector3[6];\n        this._farLinesPoints[1] = TmpVectors.Vector3[7];\n        this._farLinesPoints[2] = TmpVectors.Vector3[8];\n        this._farLinesPoints[3] = TmpVectors.Vector3[9];\n        this._farLinesPoints[4] = TmpVectors.Vector3[6];\n        this._trLinesPoints[0] = TmpVectors.Vector3[2];\n        this._trLinesPoints[1] = TmpVectors.Vector3[6];\n        this._brLinesPoints[0] = TmpVectors.Vector3[3];\n        this._brLinesPoints[1] = TmpVectors.Vector3[7];\n        this._tlLinesPoints[0] = TmpVectors.Vector3[4];\n        this._tlLinesPoints[1] = TmpVectors.Vector3[8];\n        this._blLinesPoints[0] = TmpVectors.Vector3[5];\n        this._blLinesPoints[1] = TmpVectors.Vector3[9];\n    };\n    DirectionalLightFrustumViewer.prototype._getInvertViewMatrix = function () {\n        Matrix.LookAtLHToRef(this._light.position, this._light.position.add(this._light.direction), Vector3.UpReadOnly, this._inverseViewMatrix);\n        this._inverseViewMatrix.invertToRef(this._inverseViewMatrix);\n        return this._inverseViewMatrix;\n    };\n    return DirectionalLightFrustumViewer;\n}());\nexport { DirectionalLightFrustumViewer };\n//# sourceMappingURL=directionalLightFrustumViewer.js.map","/**\n * Enum for Device Types\n */\nexport var DeviceType;\n(function (DeviceType) {\n    /** Generic */\n    DeviceType[DeviceType[\"Generic\"] = 0] = \"Generic\";\n    /** Keyboard */\n    DeviceType[DeviceType[\"Keyboard\"] = 1] = \"Keyboard\";\n    /** Mouse */\n    DeviceType[DeviceType[\"Mouse\"] = 2] = \"Mouse\";\n    /** Touch Pointers */\n    DeviceType[DeviceType[\"Touch\"] = 3] = \"Touch\";\n    /** PS4 Dual Shock */\n    DeviceType[DeviceType[\"DualShock\"] = 4] = \"DualShock\";\n    /** Xbox */\n    DeviceType[DeviceType[\"Xbox\"] = 5] = \"Xbox\";\n    /** Switch Controller */\n    DeviceType[DeviceType[\"Switch\"] = 6] = \"Switch\";\n    /** PS5 DualSense */\n    DeviceType[DeviceType[\"DualSense\"] = 7] = \"DualSense\";\n})(DeviceType || (DeviceType = {}));\n// Device Enums\n/**\n * Enum for All Pointers (Touch/Mouse)\n */\nexport var PointerInput;\n(function (PointerInput) {\n    /** Horizontal Axis (Not used in events/observables; only in polling) */\n    PointerInput[PointerInput[\"Horizontal\"] = 0] = \"Horizontal\";\n    /** Vertical Axis (Not used in events/observables; only in polling) */\n    PointerInput[PointerInput[\"Vertical\"] = 1] = \"Vertical\";\n    /** Left Click or Touch */\n    PointerInput[PointerInput[\"LeftClick\"] = 2] = \"LeftClick\";\n    /** Middle Click */\n    PointerInput[PointerInput[\"MiddleClick\"] = 3] = \"MiddleClick\";\n    /** Right Click */\n    PointerInput[PointerInput[\"RightClick\"] = 4] = \"RightClick\";\n    /** Browser Back */\n    PointerInput[PointerInput[\"BrowserBack\"] = 5] = \"BrowserBack\";\n    /** Browser Forward */\n    PointerInput[PointerInput[\"BrowserForward\"] = 6] = \"BrowserForward\";\n    /** Mouse Wheel X */\n    PointerInput[PointerInput[\"MouseWheelX\"] = 7] = \"MouseWheelX\";\n    /** Mouse Wheel Y */\n    PointerInput[PointerInput[\"MouseWheelY\"] = 8] = \"MouseWheelY\";\n    /** Mouse Wheel Z */\n    PointerInput[PointerInput[\"MouseWheelZ\"] = 9] = \"MouseWheelZ\";\n    /** Used in events/observables to identify if x/y changes occurred */\n    PointerInput[PointerInput[\"Move\"] = 12] = \"Move\";\n})(PointerInput || (PointerInput = {}));\n/** @hidden */\nexport var NativePointerInput;\n(function (NativePointerInput) {\n    /** Horizontal Axis */\n    NativePointerInput[NativePointerInput[\"Horizontal\"] = 0] = \"Horizontal\";\n    /** Vertical Axis */\n    NativePointerInput[NativePointerInput[\"Vertical\"] = 1] = \"Vertical\";\n    /** Left Click or Touch */\n    NativePointerInput[NativePointerInput[\"LeftClick\"] = 2] = \"LeftClick\";\n    /** Middle Click */\n    NativePointerInput[NativePointerInput[\"MiddleClick\"] = 3] = \"MiddleClick\";\n    /** Right Click */\n    NativePointerInput[NativePointerInput[\"RightClick\"] = 4] = \"RightClick\";\n    /** Browser Back */\n    NativePointerInput[NativePointerInput[\"BrowserBack\"] = 5] = \"BrowserBack\";\n    /** Browser Forward */\n    NativePointerInput[NativePointerInput[\"BrowserForward\"] = 6] = \"BrowserForward\";\n    /** Mouse Wheel X */\n    NativePointerInput[NativePointerInput[\"MouseWheelX\"] = 7] = \"MouseWheelX\";\n    /** Mouse Wheel Y */\n    NativePointerInput[NativePointerInput[\"MouseWheelY\"] = 8] = \"MouseWheelY\";\n    /** Mouse Wheel Z */\n    NativePointerInput[NativePointerInput[\"MouseWheelZ\"] = 9] = \"MouseWheelZ\";\n    /** Delta X */\n    NativePointerInput[NativePointerInput[\"DeltaHorizontal\"] = 10] = \"DeltaHorizontal\";\n    /** Delta Y */\n    NativePointerInput[NativePointerInput[\"DeltaVertical\"] = 11] = \"DeltaVertical\";\n})(NativePointerInput || (NativePointerInput = {}));\n/**\n * Enum for Dual Shock Gamepad\n */\nexport var DualShockInput;\n(function (DualShockInput) {\n    /** Cross */\n    DualShockInput[DualShockInput[\"Cross\"] = 0] = \"Cross\";\n    /** Circle */\n    DualShockInput[DualShockInput[\"Circle\"] = 1] = \"Circle\";\n    /** Square */\n    DualShockInput[DualShockInput[\"Square\"] = 2] = \"Square\";\n    /** Triangle */\n    DualShockInput[DualShockInput[\"Triangle\"] = 3] = \"Triangle\";\n    /** L1 */\n    DualShockInput[DualShockInput[\"L1\"] = 4] = \"L1\";\n    /** R1 */\n    DualShockInput[DualShockInput[\"R1\"] = 5] = \"R1\";\n    /** L2 */\n    DualShockInput[DualShockInput[\"L2\"] = 6] = \"L2\";\n    /** R2 */\n    DualShockInput[DualShockInput[\"R2\"] = 7] = \"R2\";\n    /** Share */\n    DualShockInput[DualShockInput[\"Share\"] = 8] = \"Share\";\n    /** Options */\n    DualShockInput[DualShockInput[\"Options\"] = 9] = \"Options\";\n    /** L3 */\n    DualShockInput[DualShockInput[\"L3\"] = 10] = \"L3\";\n    /** R3 */\n    DualShockInput[DualShockInput[\"R3\"] = 11] = \"R3\";\n    /** DPadUp */\n    DualShockInput[DualShockInput[\"DPadUp\"] = 12] = \"DPadUp\";\n    /** DPadDown */\n    DualShockInput[DualShockInput[\"DPadDown\"] = 13] = \"DPadDown\";\n    /** DPadLeft */\n    DualShockInput[DualShockInput[\"DPadLeft\"] = 14] = \"DPadLeft\";\n    /** DRight */\n    DualShockInput[DualShockInput[\"DPadRight\"] = 15] = \"DPadRight\";\n    /** Home */\n    DualShockInput[DualShockInput[\"Home\"] = 16] = \"Home\";\n    /** TouchPad */\n    DualShockInput[DualShockInput[\"TouchPad\"] = 17] = \"TouchPad\";\n    /** LStickXAxis */\n    DualShockInput[DualShockInput[\"LStickXAxis\"] = 18] = \"LStickXAxis\";\n    /** LStickYAxis */\n    DualShockInput[DualShockInput[\"LStickYAxis\"] = 19] = \"LStickYAxis\";\n    /** RStickXAxis */\n    DualShockInput[DualShockInput[\"RStickXAxis\"] = 20] = \"RStickXAxis\";\n    /** RStickYAxis */\n    DualShockInput[DualShockInput[\"RStickYAxis\"] = 21] = \"RStickYAxis\";\n})(DualShockInput || (DualShockInput = {}));\n/**\n * Enum for Dual Sense Gamepad\n */\nexport var DualSenseInput;\n(function (DualSenseInput) {\n    /** Cross */\n    DualSenseInput[DualSenseInput[\"Cross\"] = 0] = \"Cross\";\n    /** Circle */\n    DualSenseInput[DualSenseInput[\"Circle\"] = 1] = \"Circle\";\n    /** Square */\n    DualSenseInput[DualSenseInput[\"Square\"] = 2] = \"Square\";\n    /** Triangle */\n    DualSenseInput[DualSenseInput[\"Triangle\"] = 3] = \"Triangle\";\n    /** L1 */\n    DualSenseInput[DualSenseInput[\"L1\"] = 4] = \"L1\";\n    /** R1 */\n    DualSenseInput[DualSenseInput[\"R1\"] = 5] = \"R1\";\n    /** L2 */\n    DualSenseInput[DualSenseInput[\"L2\"] = 6] = \"L2\";\n    /** R2 */\n    DualSenseInput[DualSenseInput[\"R2\"] = 7] = \"R2\";\n    /** Create */\n    DualSenseInput[DualSenseInput[\"Create\"] = 8] = \"Create\";\n    /** Options */\n    DualSenseInput[DualSenseInput[\"Options\"] = 9] = \"Options\";\n    /** L3 */\n    DualSenseInput[DualSenseInput[\"L3\"] = 10] = \"L3\";\n    /** R3 */\n    DualSenseInput[DualSenseInput[\"R3\"] = 11] = \"R3\";\n    /** DPadUp */\n    DualSenseInput[DualSenseInput[\"DPadUp\"] = 12] = \"DPadUp\";\n    /** DPadDown */\n    DualSenseInput[DualSenseInput[\"DPadDown\"] = 13] = \"DPadDown\";\n    /** DPadLeft */\n    DualSenseInput[DualSenseInput[\"DPadLeft\"] = 14] = \"DPadLeft\";\n    /** DRight */\n    DualSenseInput[DualSenseInput[\"DPadRight\"] = 15] = \"DPadRight\";\n    /** Home */\n    DualSenseInput[DualSenseInput[\"Home\"] = 16] = \"Home\";\n    /** TouchPad */\n    DualSenseInput[DualSenseInput[\"TouchPad\"] = 17] = \"TouchPad\";\n    /** LStickXAxis */\n    DualSenseInput[DualSenseInput[\"LStickXAxis\"] = 18] = \"LStickXAxis\";\n    /** LStickYAxis */\n    DualSenseInput[DualSenseInput[\"LStickYAxis\"] = 19] = \"LStickYAxis\";\n    /** RStickXAxis */\n    DualSenseInput[DualSenseInput[\"RStickXAxis\"] = 20] = \"RStickXAxis\";\n    /** RStickYAxis */\n    DualSenseInput[DualSenseInput[\"RStickYAxis\"] = 21] = \"RStickYAxis\";\n})(DualSenseInput || (DualSenseInput = {}));\n/**\n * Enum for Xbox Gamepad\n */\nexport var XboxInput;\n(function (XboxInput) {\n    /** A */\n    XboxInput[XboxInput[\"A\"] = 0] = \"A\";\n    /** B */\n    XboxInput[XboxInput[\"B\"] = 1] = \"B\";\n    /** X */\n    XboxInput[XboxInput[\"X\"] = 2] = \"X\";\n    /** Y */\n    XboxInput[XboxInput[\"Y\"] = 3] = \"Y\";\n    /** LB */\n    XboxInput[XboxInput[\"LB\"] = 4] = \"LB\";\n    /** RB */\n    XboxInput[XboxInput[\"RB\"] = 5] = \"RB\";\n    /** LT */\n    XboxInput[XboxInput[\"LT\"] = 6] = \"LT\";\n    /** RT */\n    XboxInput[XboxInput[\"RT\"] = 7] = \"RT\";\n    /** Back */\n    XboxInput[XboxInput[\"Back\"] = 8] = \"Back\";\n    /** Start */\n    XboxInput[XboxInput[\"Start\"] = 9] = \"Start\";\n    /** LS */\n    XboxInput[XboxInput[\"LS\"] = 10] = \"LS\";\n    /** RS */\n    XboxInput[XboxInput[\"RS\"] = 11] = \"RS\";\n    /** DPadUp */\n    XboxInput[XboxInput[\"DPadUp\"] = 12] = \"DPadUp\";\n    /** DPadDown */\n    XboxInput[XboxInput[\"DPadDown\"] = 13] = \"DPadDown\";\n    /** DPadLeft */\n    XboxInput[XboxInput[\"DPadLeft\"] = 14] = \"DPadLeft\";\n    /** DRight */\n    XboxInput[XboxInput[\"DPadRight\"] = 15] = \"DPadRight\";\n    /** Home */\n    XboxInput[XboxInput[\"Home\"] = 16] = \"Home\";\n    /** LStickXAxis */\n    XboxInput[XboxInput[\"LStickXAxis\"] = 17] = \"LStickXAxis\";\n    /** LStickYAxis */\n    XboxInput[XboxInput[\"LStickYAxis\"] = 18] = \"LStickYAxis\";\n    /** RStickXAxis */\n    XboxInput[XboxInput[\"RStickXAxis\"] = 19] = \"RStickXAxis\";\n    /** RStickYAxis */\n    XboxInput[XboxInput[\"RStickYAxis\"] = 20] = \"RStickYAxis\";\n})(XboxInput || (XboxInput = {}));\n/**\n * Enum for Switch (Pro/JoyCon L+R) Gamepad\n */\nexport var SwitchInput;\n(function (SwitchInput) {\n    /** B */\n    SwitchInput[SwitchInput[\"B\"] = 0] = \"B\";\n    /** A */\n    SwitchInput[SwitchInput[\"A\"] = 1] = \"A\";\n    /** Y */\n    SwitchInput[SwitchInput[\"Y\"] = 2] = \"Y\";\n    /** X */\n    SwitchInput[SwitchInput[\"X\"] = 3] = \"X\";\n    /** L */\n    SwitchInput[SwitchInput[\"L\"] = 4] = \"L\";\n    /** R */\n    SwitchInput[SwitchInput[\"R\"] = 5] = \"R\";\n    /** ZL */\n    SwitchInput[SwitchInput[\"ZL\"] = 6] = \"ZL\";\n    /** ZR */\n    SwitchInput[SwitchInput[\"ZR\"] = 7] = \"ZR\";\n    /** Minus */\n    SwitchInput[SwitchInput[\"Minus\"] = 8] = \"Minus\";\n    /** Plus */\n    SwitchInput[SwitchInput[\"Plus\"] = 9] = \"Plus\";\n    /** LS */\n    SwitchInput[SwitchInput[\"LS\"] = 10] = \"LS\";\n    /** RS */\n    SwitchInput[SwitchInput[\"RS\"] = 11] = \"RS\";\n    /** DPadUp */\n    SwitchInput[SwitchInput[\"DPadUp\"] = 12] = \"DPadUp\";\n    /** DPadDown */\n    SwitchInput[SwitchInput[\"DPadDown\"] = 13] = \"DPadDown\";\n    /** DPadLeft */\n    SwitchInput[SwitchInput[\"DPadLeft\"] = 14] = \"DPadLeft\";\n    /** DRight */\n    SwitchInput[SwitchInput[\"DPadRight\"] = 15] = \"DPadRight\";\n    /** Home */\n    SwitchInput[SwitchInput[\"Home\"] = 16] = \"Home\";\n    /** Capture */\n    SwitchInput[SwitchInput[\"Capture\"] = 17] = \"Capture\";\n    /** LStickXAxis */\n    SwitchInput[SwitchInput[\"LStickXAxis\"] = 18] = \"LStickXAxis\";\n    /** LStickYAxis */\n    SwitchInput[SwitchInput[\"LStickYAxis\"] = 19] = \"LStickYAxis\";\n    /** RStickXAxis */\n    SwitchInput[SwitchInput[\"RStickXAxis\"] = 20] = \"RStickXAxis\";\n    /** RStickYAxis */\n    SwitchInput[SwitchInput[\"RStickYAxis\"] = 21] = \"RStickYAxis\";\n})(SwitchInput || (SwitchInput = {}));\n//# sourceMappingURL=deviceEnums.js.map","import { Observable } from \"../../Misc/observable.js\";\n/**\n * Class that handles all input for a specific device\n */\nvar DeviceSource = /** @class */ (function () {\n    /**\n     * Default Constructor\n     * @param deviceInputSystem - Reference to DeviceInputSystem\n     * @param deviceType - Type of device\n     * @param deviceSlot - \"Slot\" or index that device is referenced in\n     */\n    function DeviceSource(deviceInputSystem, \n    /** Type of device */\n    deviceType, \n    /** \"Slot\" or index that device is referenced in */\n    deviceSlot) {\n        if (deviceSlot === void 0) { deviceSlot = 0; }\n        this.deviceType = deviceType;\n        this.deviceSlot = deviceSlot;\n        // Public Members\n        /**\n         * Observable to handle device input changes per device\n         */\n        this.onInputChangedObservable = new Observable();\n        this._deviceInputSystem = deviceInputSystem;\n    }\n    /**\n     * Get input for specific input\n     * @param inputIndex - index of specific input on device\n     * @returns Input value from DeviceInputSystem\n     */\n    DeviceSource.prototype.getInput = function (inputIndex) {\n        return this._deviceInputSystem.pollInput(this.deviceType, this.deviceSlot, inputIndex);\n    };\n    return DeviceSource;\n}());\nexport { DeviceSource };\n//# sourceMappingURL=deviceSource.js.map","\nimport { EventConstants } from \"../../Events/deviceInputEvents.js\";\nimport { DeviceType, NativePointerInput, PointerInput } from \"../InputDevices/deviceEnums.js\";\n/**\n * Class to wrap DeviceInputSystem data into an event object\n */\nvar DeviceEventFactory = /** @class */ (function () {\n    function DeviceEventFactory() {\n    }\n    /**\n     * Create device input events based on provided type and slot\n     *\n     * @param deviceType Type of device\n     * @param deviceSlot \"Slot\" or index that device is referenced in\n     * @param inputIndex Id of input to be checked\n     * @param currentState Current value for given input\n     * @param deviceInputSystem Reference to DeviceInputSystem\n     * @param elementToAttachTo HTMLElement to reference as target for inputs\n     * @returns IUIEvent object\n     */\n    DeviceEventFactory.CreateDeviceEvent = function (deviceType, deviceSlot, inputIndex, currentState, deviceInputSystem, elementToAttachTo) {\n        switch (deviceType) {\n            case DeviceType.Keyboard:\n                return this._CreateKeyboardEvent(inputIndex, currentState, deviceInputSystem, elementToAttachTo);\n            case DeviceType.Mouse:\n                if (inputIndex === PointerInput.MouseWheelX || inputIndex === PointerInput.MouseWheelY || inputIndex === PointerInput.MouseWheelZ) {\n                    return this._CreateWheelEvent(deviceType, deviceSlot, inputIndex, currentState, deviceInputSystem, elementToAttachTo);\n                }\n            // eslint-disable-next-line no-fallthrough\n            case DeviceType.Touch:\n                return this._CreatePointerEvent(deviceType, deviceSlot, inputIndex, currentState, deviceInputSystem, elementToAttachTo);\n            default:\n                throw \"Unable to generate event for device \".concat(DeviceType[deviceType]);\n        }\n    };\n    /**\n     * Creates pointer event\n     *\n     * @param deviceType Type of device\n     * @param deviceSlot \"Slot\" or index that device is referenced in\n     * @param inputIndex Id of input to be checked\n     * @param currentState Current value for given input\n     * @param deviceInputSystem Reference to DeviceInputSystem\n     * @param elementToAttachTo HTMLElement to reference as target for inputs\n     * @returns IUIEvent object (Pointer)\n     */\n    DeviceEventFactory._CreatePointerEvent = function (deviceType, deviceSlot, inputIndex, currentState, deviceInputSystem, elementToAttachTo) {\n        var evt = this._CreateMouseEvent(deviceType, deviceSlot, inputIndex, currentState, deviceInputSystem, elementToAttachTo);\n        if (deviceType === DeviceType.Mouse) {\n            evt.deviceType = DeviceType.Mouse;\n            evt.pointerId = 1;\n            evt.pointerType = \"mouse\";\n        }\n        else {\n            evt.deviceType = DeviceType.Touch;\n            evt.pointerId = deviceSlot;\n            evt.pointerType = \"touch\";\n        }\n        if (inputIndex === PointerInput.Move) {\n            evt.type = \"pointermove\";\n        }\n        else if (inputIndex >= PointerInput.LeftClick && inputIndex <= PointerInput.RightClick) {\n            evt.type = currentState === 1 ? \"pointerdown\" : \"pointerup\";\n            evt.button = inputIndex - 2;\n        }\n        return evt;\n    };\n    /**\n     * Create Mouse Wheel Event\n     * @param deviceType Type of device\n     * @param deviceSlot \"Slot\" or index that device is referenced in\n     * @param inputIndex Id of input to be checked\n     * @param currentState Current value for given input\n     * @param deviceInputSystem Reference to DeviceInputSystem\n     * @param elementToAttachTo HTMLElement to reference as target for inputs\n     * @returns IUIEvent object (Wheel)\n     */\n    DeviceEventFactory._CreateWheelEvent = function (deviceType, deviceSlot, inputIndex, currentState, deviceInputSystem, elementToAttachTo) {\n        var evt = this._CreateMouseEvent(deviceType, deviceSlot, inputIndex, currentState, deviceInputSystem, elementToAttachTo);\n        evt.type = \"wheel\";\n        evt.deltaMode = EventConstants.DOM_DELTA_PIXEL;\n        evt.deltaX = 0;\n        evt.deltaY = 0;\n        evt.deltaZ = 0;\n        switch (inputIndex) {\n            case PointerInput.MouseWheelX:\n                evt.deltaX = currentState;\n                break;\n            case PointerInput.MouseWheelY:\n                evt.deltaY = currentState;\n                break;\n            case PointerInput.MouseWheelZ:\n                evt.deltaZ = currentState;\n                break;\n        }\n        return evt;\n    };\n    /**\n     * Create Mouse Event\n     * @param deviceType Type of device\n     * @param deviceSlot \"Slot\" or index that device is referenced in\n     * @param inputIndex Id of input to be checked\n     * @param currentState Current value for given input\n     * @param deviceInputSystem Reference to DeviceInputSystem\n     * @param elementToAttachTo HTMLElement to reference as target for inputs\n     * @returns IUIEvent object (Mouse)\n     */\n    DeviceEventFactory._CreateMouseEvent = function (deviceType, deviceSlot, inputIndex, currentState, deviceInputSystem, elementToAttachTo) {\n        var evt = this._CreateEvent(elementToAttachTo);\n        var pointerX = deviceInputSystem.pollInput(deviceType, deviceSlot, PointerInput.Horizontal);\n        var pointerY = deviceInputSystem.pollInput(deviceType, deviceSlot, PointerInput.Vertical);\n        // Handle offsets/deltas based on existence of HTMLElement\n        if (elementToAttachTo) {\n            evt.movementX = 0;\n            evt.movementY = 0;\n            evt.offsetX = evt.movementX - elementToAttachTo.getBoundingClientRect().x;\n            evt.offsetY = evt.movementY - elementToAttachTo.getBoundingClientRect().y;\n        }\n        else {\n            evt.movementX = deviceInputSystem.pollInput(deviceType, deviceSlot, NativePointerInput.DeltaHorizontal); // DeltaHorizontal\n            evt.movementY = deviceInputSystem.pollInput(deviceType, deviceSlot, NativePointerInput.DeltaVertical); // DeltaVertical\n            evt.offsetX = 0;\n            evt.offsetY = 0;\n        }\n        this._CheckNonCharacterKeys(evt, deviceInputSystem);\n        evt.clientX = pointerX;\n        evt.clientY = pointerY;\n        evt.x = pointerX;\n        evt.y = pointerY;\n        evt.deviceType = deviceType;\n        evt.deviceSlot = deviceSlot;\n        evt.inputIndex = inputIndex;\n        return evt;\n    };\n    /**\n     * Create Keyboard Event\n     * @param inputIndex Id of input to be checked\n     * @param currentState Current value for given input\n     * @param deviceInputSystem Reference to DeviceInputSystem\n     * @param elementToAttachTo HTMLElement to reference as target for inputs\n     * @returns IEvent object (Keyboard)\n     */\n    DeviceEventFactory._CreateKeyboardEvent = function (inputIndex, currentState, deviceInputSystem, elementToAttachTo) {\n        var evt = this._CreateEvent(elementToAttachTo);\n        this._CheckNonCharacterKeys(evt, deviceInputSystem);\n        evt.deviceType = DeviceType.Keyboard;\n        evt.deviceSlot = 0;\n        evt.inputIndex = inputIndex;\n        evt.type = currentState === 1 ? \"keydown\" : \"keyup\";\n        evt.key = String.fromCharCode(inputIndex);\n        evt.keyCode = inputIndex;\n        return evt;\n    };\n    /**\n     * Add parameters for non-character keys (Ctrl, Alt, Meta, Shift)\n     * @param evt Event object to add parameters to\n     * @param deviceInputSystem DeviceInputSystem to pull values from\n     */\n    DeviceEventFactory._CheckNonCharacterKeys = function (evt, deviceInputSystem) {\n        var isKeyboardActive = deviceInputSystem.isDeviceAvailable(DeviceType.Keyboard);\n        var altKey = isKeyboardActive && deviceInputSystem.pollInput(DeviceType.Keyboard, 0, 18) === 1;\n        var ctrlKey = isKeyboardActive && deviceInputSystem.pollInput(DeviceType.Keyboard, 0, 17) === 1;\n        var metaKey = isKeyboardActive &&\n            (deviceInputSystem.pollInput(DeviceType.Keyboard, 0, 91) === 1 ||\n                deviceInputSystem.pollInput(DeviceType.Keyboard, 0, 92) === 1 ||\n                deviceInputSystem.pollInput(DeviceType.Keyboard, 0, 93) === 1);\n        var shiftKey = isKeyboardActive && deviceInputSystem.pollInput(DeviceType.Keyboard, 0, 16) === 1;\n        evt.altKey = altKey;\n        evt.ctrlKey = ctrlKey;\n        evt.metaKey = metaKey;\n        evt.shiftKey = shiftKey;\n    };\n    /**\n     * Create base event object\n     * @param elementToAttachTo Value to use as event target\n     * @returns\n     */\n    DeviceEventFactory._CreateEvent = function (elementToAttachTo) {\n        var evt = {};\n        evt.preventDefault = function () { };\n        evt.target = elementToAttachTo;\n        return evt;\n    };\n    return DeviceEventFactory;\n}());\nexport { DeviceEventFactory };\n//# sourceMappingURL=eventFactory.js.map","import { DeviceEventFactory } from \"../Helpers/eventFactory.js\";\nimport { DeviceType } from \"./deviceEnums.js\";\n/** @hidden */\nvar NativeDeviceInputSystem = /** @class */ (function () {\n    function NativeDeviceInputSystem(onDeviceConnected, onDeviceDisconnected, onInputChanged) {\n        var _this = this;\n        this._nativeInput = _native.DeviceInputSystem\n            ? new _native.DeviceInputSystem(onDeviceConnected, onDeviceDisconnected, function (deviceType, deviceSlot, inputIndex, currentState) {\n                var evt = DeviceEventFactory.CreateDeviceEvent(deviceType, deviceSlot, inputIndex, currentState, _this);\n                onInputChanged(deviceType, deviceSlot, evt);\n            })\n            : this._createDummyNativeInput();\n    }\n    // Public functions\n    /**\n     * Checks for current device input value, given an id and input index. Throws exception if requested device not initialized.\n     * @param deviceType Enum specifying device type\n     * @param deviceSlot \"Slot\" or index that device is referenced in\n     * @param inputIndex Id of input to be checked\n     * @returns Current value of input\n     */\n    NativeDeviceInputSystem.prototype.pollInput = function (deviceType, deviceSlot, inputIndex) {\n        return this._nativeInput.pollInput(deviceType, deviceSlot, inputIndex);\n    };\n    /**\n     * Check for a specific device in the DeviceInputSystem\n     * @param deviceType Type of device to check for\n     * @returns bool with status of device's existence\n     */\n    NativeDeviceInputSystem.prototype.isDeviceAvailable = function (deviceType) {\n        //TODO: FIx native side first\n        return deviceType === DeviceType.Mouse || deviceType === DeviceType.Touch;\n    };\n    /**\n     * Dispose of all the observables\n     */\n    NativeDeviceInputSystem.prototype.dispose = function () {\n        this._nativeInput.dispose();\n    };\n    /**\n     * For versions of BabylonNative that don't have the NativeInput plugin initialized, create a dummy version\n     * @returns Object with dummy functions\n     */\n    NativeDeviceInputSystem.prototype._createDummyNativeInput = function () {\n        var nativeInput = {\n            pollInput: function () {\n                return 0;\n            },\n            isDeviceAvailable: function () {\n                return false;\n            },\n            dispose: function () { },\n        };\n        return nativeInput;\n    };\n    return NativeDeviceInputSystem;\n}());\nexport { NativeDeviceInputSystem };\n//# sourceMappingURL=nativeDeviceInputSystem.js.map","import { DomManagement } from \"../../Misc/domManagement.js\";\nimport { Tools } from \"../../Misc/tools.js\";\nimport { DeviceEventFactory } from \"../Helpers/eventFactory.js\";\nimport { DeviceType, PointerInput } from \"./deviceEnums.js\";\n// eslint-disable-next-line @typescript-eslint/naming-convention\nvar MAX_KEYCODES = 255;\n// eslint-disable-next-line @typescript-eslint/naming-convention\nvar MAX_POINTER_INPUTS = Object.keys(PointerInput).length / 2;\n/** @hidden */\nvar WebDeviceInputSystem = /** @class */ (function () {\n    function WebDeviceInputSystem(engine, onDeviceConnected, onDeviceDisconnected, onInputChanged) {\n        var _this = this;\n        // Private Members\n        this._inputs = [];\n        this._keyboardActive = false;\n        this._pointerActive = false;\n        this._usingSafari = Tools.IsSafari();\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this._keyboardDownEvent = function (evt) { };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this._keyboardUpEvent = function (evt) { };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this._keyboardBlurEvent = function (evt) { };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this._pointerMoveEvent = function (evt) { };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this._pointerDownEvent = function (evt) { };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this._pointerUpEvent = function (evt) { };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this._pointerCancelEvent = function (evt) { };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this._pointerWheelEvent = function (evt) { };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this._pointerBlurEvent = function (evt) { };\n        this._eventsAttached = false;\n        this._mouseId = -1;\n        this._isUsingFirefox = DomManagement.IsNavigatorAvailable() && navigator.userAgent && navigator.userAgent.indexOf(\"Firefox\") !== -1;\n        this._maxTouchPoints = 0;\n        this._pointerInputClearObserver = null;\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this._gamepadConnectedEvent = function (evt) { };\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this._gamepadDisconnectedEvent = function (evt) { };\n        this._eventPrefix = Tools.GetPointerPrefix(engine);\n        this._engine = engine;\n        this._onDeviceConnected = onDeviceConnected;\n        this._onDeviceDisconnected = onDeviceDisconnected;\n        this._onInputChanged = onInputChanged;\n        this._enableEvents();\n        // Set callback to enable event handler switching when inputElement changes\n        if (!this._engine._onEngineViewChanged) {\n            this._engine._onEngineViewChanged = function () {\n                _this._enableEvents();\n            };\n        }\n    }\n    // Public functions\n    /**\n     * Checks for current device input value, given an id and input index. Throws exception if requested device not initialized.\n     * @param deviceType Enum specifying device type\n     * @param deviceSlot \"Slot\" or index that device is referenced in\n     * @param inputIndex Id of input to be checked\n     * @returns Current value of input\n     */\n    WebDeviceInputSystem.prototype.pollInput = function (deviceType, deviceSlot, inputIndex) {\n        var device = this._inputs[deviceType][deviceSlot];\n        if (!device) {\n            throw \"Unable to find device \".concat(DeviceType[deviceType]);\n        }\n        if (deviceType >= DeviceType.DualShock && deviceType <= DeviceType.DualSense && navigator.getGamepads) {\n            this._updateDevice(deviceType, deviceSlot, inputIndex);\n        }\n        var currentValue = device[inputIndex];\n        if (currentValue === undefined) {\n            throw \"Unable to find input \".concat(inputIndex, \" for device \").concat(DeviceType[deviceType], \" in slot \").concat(deviceSlot);\n        }\n        if (inputIndex === PointerInput.Move) {\n            Tools.Warn(\"Unable to provide information for PointerInput.Move.  Try using PointerInput.Horizontal or PointerInput.Vertical for move data.\");\n        }\n        return currentValue;\n    };\n    /**\n     * Check for a specific device in the DeviceInputSystem\n     * @param deviceType Type of device to check for\n     * @returns bool with status of device's existence\n     */\n    WebDeviceInputSystem.prototype.isDeviceAvailable = function (deviceType) {\n        return this._inputs[deviceType] !== undefined;\n    };\n    /**\n     * Dispose of all the eventlisteners\n     */\n    WebDeviceInputSystem.prototype.dispose = function () {\n        // Callbacks\n        this._onDeviceConnected = function () { };\n        this._onDeviceDisconnected = function () { };\n        this._onInputChanged = function () { };\n        delete this._engine._onEngineViewChanged;\n        if (this._elementToAttachTo) {\n            this._disableEvents();\n        }\n    };\n    /**\n     * Enable listening for user input events\n     */\n    WebDeviceInputSystem.prototype._enableEvents = function () {\n        var inputElement = this === null || this === void 0 ? void 0 : this._engine.getInputElement();\n        if (inputElement && (!this._eventsAttached || this._elementToAttachTo !== inputElement)) {\n            // Remove events before adding to avoid double events or simultaneous events on multiple canvases\n            this._disableEvents();\n            // If the inputs array has already been created, zero it out to before setting up events\n            if (this._inputs) {\n                for (var _i = 0, _a = this._inputs; _i < _a.length; _i++) {\n                    var inputs = _a[_i];\n                    if (inputs) {\n                        for (var deviceSlotKey in inputs) {\n                            var deviceSlot = +deviceSlotKey;\n                            var device = inputs[deviceSlot];\n                            if (device) {\n                                for (var inputIndex = 0; inputIndex < device.length; inputIndex++) {\n                                    device[inputIndex] = 0;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            this._elementToAttachTo = inputElement;\n            // Set tab index for the inputElement to the engine's canvasTabIndex, if and only if the element's tab index is -1\n            this._elementToAttachTo.tabIndex = this._elementToAttachTo.tabIndex !== -1 ? this._elementToAttachTo.tabIndex : this._engine.canvasTabIndex;\n            this._handleKeyActions();\n            this._handlePointerActions();\n            this._handleGamepadActions();\n            this._eventsAttached = true;\n            // Check for devices that are already connected but aren't registered. Currently, only checks for gamepads and mouse\n            this._checkForConnectedDevices();\n        }\n    };\n    /**\n     * Disable listening for user input events\n     */\n    WebDeviceInputSystem.prototype._disableEvents = function () {\n        if (this._elementToAttachTo) {\n            // Blur Events\n            this._elementToAttachTo.removeEventListener(\"blur\", this._keyboardBlurEvent);\n            this._elementToAttachTo.removeEventListener(\"blur\", this._pointerBlurEvent);\n            // Keyboard Events\n            this._elementToAttachTo.removeEventListener(\"keydown\", this._keyboardDownEvent);\n            this._elementToAttachTo.removeEventListener(\"keyup\", this._keyboardUpEvent);\n            // Pointer Events\n            this._elementToAttachTo.removeEventListener(this._eventPrefix + \"move\", this._pointerMoveEvent);\n            this._elementToAttachTo.removeEventListener(this._eventPrefix + \"down\", this._pointerDownEvent);\n            this._elementToAttachTo.removeEventListener(this._eventPrefix + \"up\", this._pointerUpEvent);\n            this._elementToAttachTo.removeEventListener(this._eventPrefix + \"cancel\", this._pointerCancelEvent);\n            this._elementToAttachTo.removeEventListener(this._wheelEventName, this._pointerWheelEvent);\n            // Gamepad Events\n            window.removeEventListener(\"gamepadconnected\", this._gamepadConnectedEvent);\n            window.removeEventListener(\"gamepaddisconnected\", this._gamepadDisconnectedEvent);\n        }\n        if (this._pointerInputClearObserver) {\n            this._engine.onEndFrameObservable.remove(this._pointerInputClearObserver);\n        }\n        this._eventsAttached = false;\n    };\n    /**\n     * Checks for existing connections to devices and register them, if necessary\n     * Currently handles gamepads and mouse\n     */\n    WebDeviceInputSystem.prototype._checkForConnectedDevices = function () {\n        if (navigator.getGamepads) {\n            var gamepads = navigator.getGamepads();\n            for (var _i = 0, gamepads_1 = gamepads; _i < gamepads_1.length; _i++) {\n                var gamepad = gamepads_1[_i];\n                if (gamepad) {\n                    this._addGamePad(gamepad);\n                }\n            }\n        }\n        // If the device in use has mouse capabilities, pre-register mouse\n        if (typeof matchMedia === \"function\" && matchMedia(\"(pointer:fine)\").matches) {\n            // This will provide a dummy value for the cursor position and is expected to be overridden when the first mouse event happens.\n            // There isn't any good way to get the current position outside of a pointer event so that's why this was done.\n            this._addPointerDevice(DeviceType.Mouse, 0, 0, 0);\n        }\n    };\n    // Private functions\n    /**\n     * Add a gamepad to the DeviceInputSystem\n     * @param gamepad A single DOM Gamepad object\n     */\n    WebDeviceInputSystem.prototype._addGamePad = function (gamepad) {\n        var deviceType = this._getGamepadDeviceType(gamepad.id);\n        var deviceSlot = gamepad.index;\n        this._gamepads = this._gamepads || new Array(gamepad.index + 1);\n        this._registerDevice(deviceType, deviceSlot, gamepad.buttons.length + gamepad.axes.length);\n        this._gamepads[deviceSlot] = deviceType;\n    };\n    /**\n     * Add pointer device to DeviceInputSystem\n     * @param deviceType Type of Pointer to add\n     * @param deviceSlot Pointer ID (0 for mouse, pointerId for Touch)\n     * @param currentX Current X at point of adding\n     * @param currentY Current Y at point of adding\n     */\n    WebDeviceInputSystem.prototype._addPointerDevice = function (deviceType, deviceSlot, currentX, currentY) {\n        if (!this._pointerActive) {\n            this._pointerActive = true;\n        }\n        this._registerDevice(deviceType, deviceSlot, MAX_POINTER_INPUTS);\n        var pointer = this._inputs[deviceType][deviceSlot]; /* initialize our pointer position immediately after registration */\n        pointer[0] = currentX;\n        pointer[1] = currentY;\n    };\n    /**\n     * Add device and inputs to device array\n     * @param deviceType Enum specifying device type\n     * @param deviceSlot \"Slot\" or index that device is referenced in\n     * @param numberOfInputs Number of input entries to create for given device\n     */\n    WebDeviceInputSystem.prototype._registerDevice = function (deviceType, deviceSlot, numberOfInputs) {\n        if (deviceSlot === undefined) {\n            throw \"Unable to register device \".concat(DeviceType[deviceType], \" to undefined slot.\");\n        }\n        if (!this._inputs[deviceType]) {\n            this._inputs[deviceType] = {};\n        }\n        if (!this._inputs[deviceType][deviceSlot]) {\n            var device = new Array(numberOfInputs);\n            for (var i = 0; i < numberOfInputs; i++) {\n                device[i] = 0; /* set device input as unpressed */\n            }\n            this._inputs[deviceType][deviceSlot] = device;\n            this._onDeviceConnected(deviceType, deviceSlot);\n        }\n    };\n    /**\n     * Given a specific device name, remove that device from the device map\n     * @param deviceType Enum specifying device type\n     * @param deviceSlot \"Slot\" or index that device is referenced in\n     */\n    WebDeviceInputSystem.prototype._unregisterDevice = function (deviceType, deviceSlot) {\n        if (this._inputs[deviceType][deviceSlot]) {\n            delete this._inputs[deviceType][deviceSlot];\n            this._onDeviceDisconnected(deviceType, deviceSlot);\n        }\n    };\n    /**\n     * Handle all actions that come from keyboard interaction\n     */\n    WebDeviceInputSystem.prototype._handleKeyActions = function () {\n        var _this = this;\n        this._keyboardDownEvent = function (evt) {\n            if (!_this._keyboardActive) {\n                _this._keyboardActive = true;\n                _this._registerDevice(DeviceType.Keyboard, 0, MAX_KEYCODES);\n            }\n            var kbKey = _this._inputs[DeviceType.Keyboard][0];\n            if (kbKey) {\n                kbKey[evt.keyCode] = 1;\n                var deviceEvent = evt;\n                deviceEvent.inputIndex = evt.keyCode;\n                _this._onInputChanged(DeviceType.Keyboard, 0, deviceEvent);\n            }\n        };\n        this._keyboardUpEvent = function (evt) {\n            if (!_this._keyboardActive) {\n                _this._keyboardActive = true;\n                _this._registerDevice(DeviceType.Keyboard, 0, MAX_KEYCODES);\n            }\n            var kbKey = _this._inputs[DeviceType.Keyboard][0];\n            if (kbKey) {\n                kbKey[evt.keyCode] = 0;\n                var deviceEvent = evt;\n                deviceEvent.inputIndex = evt.keyCode;\n                _this._onInputChanged(DeviceType.Keyboard, 0, deviceEvent);\n            }\n        };\n        this._keyboardBlurEvent = function () {\n            if (_this._keyboardActive) {\n                var kbKey = _this._inputs[DeviceType.Keyboard][0];\n                for (var i = 0; i < kbKey.length; i++) {\n                    if (kbKey[i] !== 0) {\n                        kbKey[i] = 0;\n                        var deviceEvent = DeviceEventFactory.CreateDeviceEvent(DeviceType.Keyboard, 0, i, 0, _this, _this._elementToAttachTo);\n                        _this._onInputChanged(DeviceType.Keyboard, 0, deviceEvent);\n                    }\n                }\n            }\n        };\n        this._elementToAttachTo.addEventListener(\"keydown\", this._keyboardDownEvent);\n        this._elementToAttachTo.addEventListener(\"keyup\", this._keyboardUpEvent);\n        this._elementToAttachTo.addEventListener(\"blur\", this._keyboardBlurEvent);\n    };\n    /**\n     * Handle all actions that come from pointer interaction\n     */\n    WebDeviceInputSystem.prototype._handlePointerActions = function () {\n        var _this = this;\n        // If maxTouchPoints is defined, use that value.  Otherwise, allow for a minimum for supported gestures like pinch\n        this._maxTouchPoints = (DomManagement.IsNavigatorAvailable() && navigator.maxTouchPoints) || 2;\n        if (!this._activeTouchIds) {\n            this._activeTouchIds = new Array(this._maxTouchPoints);\n        }\n        for (var i = 0; i < this._maxTouchPoints; i++) {\n            this._activeTouchIds[i] = -1;\n        }\n        this._pointerMoveEvent = function (evt) {\n            var deviceType = _this._getPointerType(evt);\n            var deviceSlot = deviceType === DeviceType.Mouse ? 0 : _this._activeTouchIds.indexOf(evt.pointerId);\n            if (!_this._inputs[deviceType]) {\n                _this._inputs[deviceType] = {};\n            }\n            if (!_this._inputs[deviceType][deviceSlot]) {\n                _this._addPointerDevice(deviceType, deviceSlot, evt.clientX, evt.clientY);\n            }\n            var pointer = _this._inputs[deviceType][deviceSlot];\n            if (pointer) {\n                pointer[PointerInput.Horizontal] = evt.clientX;\n                pointer[PointerInput.Vertical] = evt.clientY;\n                var deviceEvent = evt;\n                deviceEvent.inputIndex = PointerInput.Move;\n                _this._onInputChanged(deviceType, deviceSlot, deviceEvent);\n                // Lets Propagate the event for move with same position.\n                if (!_this._usingSafari && evt.button !== -1) {\n                    deviceEvent.inputIndex = evt.button + 2;\n                    pointer[evt.button + 2] = pointer[evt.button + 2] ? 0 : 1; // Reverse state of button if evt.button has value\n                    _this._onInputChanged(deviceType, deviceSlot, deviceEvent);\n                }\n            }\n        };\n        this._pointerDownEvent = function (evt) {\n            var deviceType = _this._getPointerType(evt);\n            var deviceSlot = deviceType === DeviceType.Mouse ? 0 : evt.pointerId;\n            if (deviceType === DeviceType.Touch) {\n                var idx = _this._activeTouchIds.indexOf(-1);\n                if (idx >= 0) {\n                    deviceSlot = idx;\n                    _this._activeTouchIds[idx] = evt.pointerId;\n                }\n                else {\n                    // We can't find an open slot to store new pointer so just return (can only support max number of touches)\n                    Tools.Warn(\"Max number of touches exceeded.  Ignoring touches in excess of \".concat(_this._maxTouchPoints));\n                    return;\n                }\n            }\n            if (!_this._inputs[deviceType]) {\n                _this._inputs[deviceType] = {};\n            }\n            if (!_this._inputs[deviceType][deviceSlot]) {\n                _this._addPointerDevice(deviceType, deviceSlot, evt.clientX, evt.clientY);\n            }\n            else if (deviceType === DeviceType.Touch) {\n                _this._onDeviceConnected(deviceType, deviceSlot);\n            }\n            var pointer = _this._inputs[deviceType][deviceSlot];\n            if (pointer) {\n                var previousHorizontal = pointer[PointerInput.Horizontal];\n                var previousVertical = pointer[PointerInput.Vertical];\n                if (deviceType === DeviceType.Mouse) {\n                    // Mouse; Among supported browsers, value is either 1 or 0 for mouse\n                    if (_this._mouseId === -1) {\n                        if (evt.pointerId === undefined) {\n                            // If there is no pointerId (eg. manually dispatched MouseEvent)\n                            _this._mouseId = _this._isUsingFirefox ? 0 : 1;\n                        }\n                        else {\n                            _this._mouseId = evt.pointerId;\n                        }\n                    }\n                    if (!document.pointerLockElement && _this._elementToAttachTo.hasPointerCapture) {\n                        try {\n                            _this._elementToAttachTo.setPointerCapture(_this._mouseId);\n                        }\n                        catch (e) {\n                            // DO NOTHING\n                        }\n                    }\n                }\n                else {\n                    // Touch; Since touches are dynamically assigned, only set capture if we have an id\n                    if (evt.pointerId && !document.pointerLockElement && _this._elementToAttachTo.hasPointerCapture) {\n                        try {\n                            _this._elementToAttachTo.setPointerCapture(evt.pointerId);\n                        }\n                        catch (e) {\n                            // DO NOTHING\n                        }\n                    }\n                }\n                pointer[PointerInput.Horizontal] = evt.clientX;\n                pointer[PointerInput.Vertical] = evt.clientY;\n                pointer[evt.button + 2] = 1;\n                var deviceEvent = evt;\n                // NOTE: The +2 used here to is because PointerInput has the same value progression for its mouse buttons as PointerEvent.button\n                // However, we have our X and Y values front-loaded to group together the touch inputs but not break this progression\n                // EG. ([X, Y, Left-click], Middle-click, etc...)\n                deviceEvent.inputIndex = evt.button + 2;\n                _this._onInputChanged(deviceType, deviceSlot, deviceEvent);\n                if (previousHorizontal !== evt.clientX || previousVertical !== evt.clientY) {\n                    deviceEvent.inputIndex = PointerInput.Move;\n                    _this._onInputChanged(deviceType, deviceSlot, deviceEvent);\n                }\n            }\n        };\n        this._pointerUpEvent = function (evt) {\n            var _a, _b, _c, _d, _e;\n            var deviceType = _this._getPointerType(evt);\n            var deviceSlot = deviceType === DeviceType.Mouse ? 0 : _this._activeTouchIds.indexOf(evt.pointerId);\n            if (deviceType === DeviceType.Touch) {\n                if (deviceSlot === -1) {\n                    return;\n                }\n                else {\n                    _this._activeTouchIds[deviceSlot] = -1;\n                }\n            }\n            var pointer = (_a = _this._inputs[deviceType]) === null || _a === void 0 ? void 0 : _a[deviceSlot];\n            if (pointer && pointer[evt.button + 2] !== 0) {\n                var previousHorizontal = pointer[PointerInput.Horizontal];\n                var previousVertical = pointer[PointerInput.Vertical];\n                pointer[PointerInput.Horizontal] = evt.clientX;\n                pointer[PointerInput.Vertical] = evt.clientY;\n                pointer[evt.button + 2] = 0;\n                var deviceEvent = evt;\n                if (previousHorizontal !== evt.clientX || previousVertical !== evt.clientY) {\n                    deviceEvent.inputIndex = PointerInput.Move;\n                    _this._onInputChanged(deviceType, deviceSlot, deviceEvent);\n                }\n                // NOTE: The +2 used here to is because PointerInput has the same value progression for its mouse buttons as PointerEvent.button\n                // However, we have our X and Y values front-loaded to group together the touch inputs but not break this progression\n                // EG. ([X, Y, Left-click], Middle-click, etc...)\n                deviceEvent.inputIndex = evt.button + 2;\n                if (deviceType === DeviceType.Mouse && _this._mouseId >= 0 && ((_c = (_b = _this._elementToAttachTo).hasPointerCapture) === null || _c === void 0 ? void 0 : _c.call(_b, _this._mouseId))) {\n                    _this._elementToAttachTo.releasePointerCapture(_this._mouseId);\n                }\n                else if (evt.pointerId && ((_e = (_d = _this._elementToAttachTo).hasPointerCapture) === null || _e === void 0 ? void 0 : _e.call(_d, evt.pointerId))) {\n                    _this._elementToAttachTo.releasePointerCapture(evt.pointerId);\n                }\n                _this._onInputChanged(deviceType, deviceSlot, deviceEvent);\n                if (deviceType === DeviceType.Touch) {\n                    _this._onDeviceDisconnected(deviceType, deviceSlot);\n                }\n            }\n        };\n        this._pointerCancelEvent = function (evt) {\n            var _a, _b, _c, _d;\n            if (evt.pointerType === \"mouse\") {\n                var pointer = _this._inputs[DeviceType.Mouse][0];\n                if (_this._mouseId >= 0 && ((_b = (_a = _this._elementToAttachTo).hasPointerCapture) === null || _b === void 0 ? void 0 : _b.call(_a, _this._mouseId))) {\n                    _this._elementToAttachTo.releasePointerCapture(_this._mouseId);\n                }\n                for (var inputIndex = PointerInput.LeftClick; inputIndex <= PointerInput.BrowserForward; inputIndex++) {\n                    if (pointer[inputIndex] === 1) {\n                        pointer[inputIndex] = 0;\n                        var deviceEvent = DeviceEventFactory.CreateDeviceEvent(DeviceType.Mouse, 0, inputIndex, 0, _this, _this._elementToAttachTo);\n                        _this._onInputChanged(DeviceType.Mouse, 0, deviceEvent);\n                    }\n                }\n            }\n            else {\n                var deviceSlot = _this._activeTouchIds.indexOf(evt.pointerId);\n                if ((_d = (_c = _this._elementToAttachTo).hasPointerCapture) === null || _d === void 0 ? void 0 : _d.call(_c, evt.pointerId)) {\n                    _this._elementToAttachTo.releasePointerCapture(evt.pointerId);\n                }\n                _this._inputs[DeviceType.Touch][deviceSlot][PointerInput.LeftClick] = 0;\n                var deviceEvent = DeviceEventFactory.CreateDeviceEvent(DeviceType.Touch, deviceSlot, PointerInput.LeftClick, 0, _this, _this._elementToAttachTo);\n                _this._onInputChanged(DeviceType.Touch, deviceSlot, deviceEvent);\n                _this._activeTouchIds[deviceSlot] = -1;\n                _this._onDeviceDisconnected(DeviceType.Touch, deviceSlot);\n            }\n        };\n        // Set Wheel Event Name, code originally from scene.inputManager\n        this._wheelEventName =\n            \"onwheel\" in document.createElement(\"div\")\n                ? \"wheel\" // Modern browsers support \"wheel\"\n                : document.onmousewheel !== undefined\n                    ? \"mousewheel\" // Webkit and IE support at least \"mousewheel\"\n                    : \"DOMMouseScroll\"; // let's assume that remaining browsers are older Firefox\n        // Code originally in scene.inputManager.ts\n        // Chrome reports warning in console if wheel listener doesn't set an explicit passive option.\n        // IE11 only supports captureEvent:boolean, not options:object, and it defaults to false.\n        // Feature detection technique copied from: https://github.com/github/eventlistener-polyfill (MIT license)\n        var passiveSupported = false;\n        var noop = function () { };\n        try {\n            var options = {\n                passive: {\n                    get: function () {\n                        passiveSupported = true;\n                    },\n                },\n            };\n            this._elementToAttachTo.addEventListener(\"test\", noop, options);\n            this._elementToAttachTo.removeEventListener(\"test\", noop, options);\n        }\n        catch (e) {\n            /* */\n        }\n        this._pointerBlurEvent = function () {\n            var _a, _b, _c, _d, _e;\n            // Handle mouse buttons\n            if (_this.isDeviceAvailable(DeviceType.Mouse)) {\n                var pointer = _this._inputs[DeviceType.Mouse][0];\n                if (_this._mouseId >= 0 && ((_b = (_a = _this._elementToAttachTo).hasPointerCapture) === null || _b === void 0 ? void 0 : _b.call(_a, _this._mouseId))) {\n                    _this._elementToAttachTo.releasePointerCapture(_this._mouseId);\n                }\n                for (var inputIndex = PointerInput.LeftClick; inputIndex <= PointerInput.BrowserForward; inputIndex++) {\n                    if (pointer[inputIndex] === 1) {\n                        pointer[inputIndex] = 0;\n                        var deviceEvent = DeviceEventFactory.CreateDeviceEvent(DeviceType.Mouse, 0, inputIndex, 0, _this, _this._elementToAttachTo);\n                        _this._onInputChanged(DeviceType.Mouse, 0, deviceEvent);\n                    }\n                }\n            }\n            // Handle Active Touches\n            if (_this.isDeviceAvailable(DeviceType.Touch)) {\n                var pointer = _this._inputs[DeviceType.Touch];\n                for (var deviceSlot = 0; deviceSlot < _this._activeTouchIds.length; deviceSlot++) {\n                    var pointerId = _this._activeTouchIds[deviceSlot];\n                    if ((_d = (_c = _this._elementToAttachTo).hasPointerCapture) === null || _d === void 0 ? void 0 : _d.call(_c, pointerId)) {\n                        _this._elementToAttachTo.releasePointerCapture(pointerId);\n                    }\n                    if (pointerId !== -1 && ((_e = pointer[deviceSlot]) === null || _e === void 0 ? void 0 : _e[PointerInput.LeftClick]) === 1) {\n                        pointer[deviceSlot][PointerInput.LeftClick] = 0;\n                        var deviceEvent = DeviceEventFactory.CreateDeviceEvent(DeviceType.Touch, deviceSlot, PointerInput.LeftClick, 0, _this, _this._elementToAttachTo);\n                        _this._onInputChanged(DeviceType.Touch, deviceSlot, deviceEvent);\n                        _this._activeTouchIds[deviceSlot] = -1;\n                        _this._onDeviceDisconnected(DeviceType.Touch, deviceSlot);\n                    }\n                }\n            }\n        };\n        this._pointerWheelEvent = function (evt) {\n            var deviceType = DeviceType.Mouse;\n            var deviceSlot = 0;\n            if (!_this._inputs[deviceType]) {\n                _this._inputs[deviceType] = [];\n            }\n            if (!_this._inputs[deviceType][deviceSlot]) {\n                _this._pointerActive = true;\n                _this._registerDevice(deviceType, deviceSlot, MAX_POINTER_INPUTS);\n            }\n            var pointer = _this._inputs[deviceType][deviceSlot];\n            if (pointer) {\n                pointer[PointerInput.MouseWheelX] = evt.deltaX || 0;\n                pointer[PointerInput.MouseWheelY] = evt.deltaY || evt.wheelDelta || 0;\n                pointer[PointerInput.MouseWheelZ] = evt.deltaZ || 0;\n                var deviceEvent = evt;\n                if (pointer[PointerInput.MouseWheelX] !== 0) {\n                    deviceEvent.inputIndex = PointerInput.MouseWheelX;\n                    _this._onInputChanged(deviceType, deviceSlot, deviceEvent);\n                }\n                if (pointer[PointerInput.MouseWheelY] !== 0) {\n                    deviceEvent.inputIndex = PointerInput.MouseWheelY;\n                    _this._onInputChanged(deviceType, deviceSlot, deviceEvent);\n                }\n                if (pointer[PointerInput.MouseWheelZ] !== 0) {\n                    deviceEvent.inputIndex = PointerInput.MouseWheelZ;\n                    _this._onInputChanged(deviceType, deviceSlot, deviceEvent);\n                }\n            }\n        };\n        this._elementToAttachTo.addEventListener(this._eventPrefix + \"move\", this._pointerMoveEvent);\n        this._elementToAttachTo.addEventListener(this._eventPrefix + \"down\", this._pointerDownEvent);\n        this._elementToAttachTo.addEventListener(this._eventPrefix + \"up\", this._pointerUpEvent);\n        this._elementToAttachTo.addEventListener(this._eventPrefix + \"cancel\", this._pointerCancelEvent);\n        this._elementToAttachTo.addEventListener(\"blur\", this._pointerBlurEvent);\n        this._elementToAttachTo.addEventListener(this._wheelEventName, this._pointerWheelEvent, passiveSupported ? { passive: false } : false);\n        // Since there's no up or down event for mouse wheel or delta x/y, clear mouse values at end of frame\n        this._pointerInputClearObserver = this._engine.onEndFrameObservable.add(function () {\n            if (_this.isDeviceAvailable(DeviceType.Mouse)) {\n                var pointer = _this._inputs[DeviceType.Mouse][0];\n                pointer[PointerInput.MouseWheelX] = 0;\n                pointer[PointerInput.MouseWheelY] = 0;\n                pointer[PointerInput.MouseWheelZ] = 0;\n            }\n        });\n    };\n    /**\n     * Handle all actions that come from gamepad interaction\n     */\n    WebDeviceInputSystem.prototype._handleGamepadActions = function () {\n        var _this = this;\n        this._gamepadConnectedEvent = function (evt) {\n            _this._addGamePad(evt.gamepad);\n        };\n        this._gamepadDisconnectedEvent = function (evt) {\n            if (_this._gamepads) {\n                var deviceType = _this._getGamepadDeviceType(evt.gamepad.id);\n                var deviceSlot = evt.gamepad.index;\n                _this._unregisterDevice(deviceType, deviceSlot);\n                delete _this._gamepads[deviceSlot];\n            }\n        };\n        window.addEventListener(\"gamepadconnected\", this._gamepadConnectedEvent);\n        window.addEventListener(\"gamepaddisconnected\", this._gamepadDisconnectedEvent);\n    };\n    /**\n     * Update all non-event based devices with each frame\n     * @param deviceType Enum specifying device type\n     * @param deviceSlot \"Slot\" or index that device is referenced in\n     * @param inputIndex Id of input to be checked\n     */\n    WebDeviceInputSystem.prototype._updateDevice = function (deviceType, deviceSlot, inputIndex) {\n        // Gamepads\n        var gp = navigator.getGamepads()[deviceSlot];\n        if (gp && deviceType === this._gamepads[deviceSlot]) {\n            var device = this._inputs[deviceType][deviceSlot];\n            if (inputIndex >= gp.buttons.length) {\n                device[inputIndex] = gp.axes[inputIndex - gp.buttons.length].valueOf();\n            }\n            else {\n                device[inputIndex] = gp.buttons[inputIndex].value;\n            }\n        }\n    };\n    /**\n     * Gets DeviceType from the device name\n     * @param deviceName Name of Device from DeviceInputSystem\n     * @returns DeviceType enum value\n     */\n    WebDeviceInputSystem.prototype._getGamepadDeviceType = function (deviceName) {\n        if (deviceName.indexOf(\"054c\") !== -1) {\n            // DualShock 4 Gamepad\n            return deviceName.indexOf(\"0ce6\") !== -1 ? DeviceType.DualSense : DeviceType.DualShock;\n        }\n        else if (deviceName.indexOf(\"Xbox One\") !== -1 || deviceName.search(\"Xbox 360\") !== -1 || deviceName.search(\"xinput\") !== -1) {\n            // Xbox Gamepad\n            return DeviceType.Xbox;\n        }\n        else if (deviceName.indexOf(\"057e\") !== -1) {\n            // Switch Gamepad\n            return DeviceType.Switch;\n        }\n        return DeviceType.Generic;\n    };\n    /**\n     * Get DeviceType from a given pointer/mouse/touch event.\n     * @param evt PointerEvent to evaluate\n     * @returns DeviceType interpreted from event\n     */\n    WebDeviceInputSystem.prototype._getPointerType = function (evt) {\n        var deviceType = DeviceType.Mouse;\n        if (evt.pointerType === \"touch\" || evt.pointerType === \"pen\" || evt.touches) {\n            deviceType = DeviceType.Touch;\n        }\n        return deviceType;\n    };\n    return WebDeviceInputSystem;\n}());\nexport { WebDeviceInputSystem };\n//# sourceMappingURL=webDeviceInputSystem.js.map","import { DeviceType } from \"./deviceEnums.js\";\nimport { NativeDeviceInputSystem } from \"./nativeDeviceInputSystem.js\";\nimport { WebDeviceInputSystem } from \"./webDeviceInputSystem.js\";\nimport { DeviceSource } from \"./deviceSource.js\";\n/** @hidden */\nvar InternalDeviceSourceManager = /** @class */ (function () {\n    function InternalDeviceSourceManager(engine) {\n        var _this = this;\n        this._registeredManagers = new Array();\n        this._refCount = 0;\n        // Public Functions\n        this.registerManager = function (manager) {\n            for (var deviceType = 0; deviceType < _this._devices.length; deviceType++) {\n                var device = _this._devices[deviceType];\n                for (var deviceSlotKey in device) {\n                    var deviceSlot = +deviceSlotKey;\n                    manager._addDevice(new DeviceSource(_this._deviceInputSystem, deviceType, deviceSlot));\n                }\n            }\n            _this._registeredManagers.push(manager);\n        };\n        this.unregisterManager = function (manager) {\n            var idx = _this._registeredManagers.indexOf(manager);\n            if (idx > -1) {\n                _this._registeredManagers.splice(idx, 1);\n            }\n        };\n        var numberOfDeviceTypes = Object.keys(DeviceType).length / 2;\n        this._devices = new Array(numberOfDeviceTypes);\n        var onDeviceConnected = function (deviceType, deviceSlot) {\n            if (!_this._devices[deviceType]) {\n                _this._devices[deviceType] = new Array();\n            }\n            if (!_this._devices[deviceType][deviceSlot]) {\n                _this._devices[deviceType][deviceSlot] = deviceSlot;\n            }\n            for (var _i = 0, _a = _this._registeredManagers; _i < _a.length; _i++) {\n                var manager = _a[_i];\n                var deviceSource = new DeviceSource(_this._deviceInputSystem, deviceType, deviceSlot);\n                manager._addDevice(deviceSource);\n            }\n        };\n        var onDeviceDisconnected = function (deviceType, deviceSlot) {\n            var _a;\n            if ((_a = _this._devices[deviceType]) === null || _a === void 0 ? void 0 : _a[deviceSlot]) {\n                delete _this._devices[deviceType][deviceSlot];\n            }\n            for (var _i = 0, _b = _this._registeredManagers; _i < _b.length; _i++) {\n                var manager = _b[_i];\n                manager._removeDevice(deviceType, deviceSlot);\n            }\n        };\n        var onInputChanged = function (deviceType, deviceSlot, eventData) {\n            if (eventData) {\n                for (var _i = 0, _a = _this._registeredManagers; _i < _a.length; _i++) {\n                    var manager = _a[_i];\n                    manager._onInputChanged(deviceType, deviceSlot, eventData);\n                }\n            }\n        };\n        if (typeof _native !== \"undefined\") {\n            this._deviceInputSystem = new NativeDeviceInputSystem(onDeviceConnected, onDeviceDisconnected, onInputChanged);\n        }\n        else {\n            this._deviceInputSystem = new WebDeviceInputSystem(engine, onDeviceConnected, onDeviceDisconnected, onInputChanged);\n        }\n    }\n    InternalDeviceSourceManager.prototype.dispose = function () {\n        this._deviceInputSystem.dispose();\n    };\n    return InternalDeviceSourceManager;\n}());\nexport { InternalDeviceSourceManager };\n//# sourceMappingURL=internalDeviceSourceManager.js.map","import { DeviceType } from \"./deviceEnums.js\";\nimport { Observable } from \"../../Misc/observable.js\";\nimport { InternalDeviceSourceManager } from \"./internalDeviceSourceManager.js\";\n/**\n * Class to keep track of devices\n */\nvar DeviceSourceManager = /** @class */ (function () {\n    /**\n     * Default constructor\n     * @param engine - Used to get canvas (if applicable)\n     */\n    function DeviceSourceManager(engine) {\n        var _this = this;\n        var numberOfDeviceTypes = Object.keys(DeviceType).length / 2;\n        this._devices = new Array(numberOfDeviceTypes);\n        this._firstDevice = new Array(numberOfDeviceTypes);\n        this._engine = engine;\n        if (!this._engine._deviceSourceManager) {\n            this._engine._deviceSourceManager = new InternalDeviceSourceManager(engine);\n        }\n        this._engine._deviceSourceManager._refCount++;\n        // Observables\n        this.onDeviceConnectedObservable = new Observable(function (observer) {\n            for (var _i = 0, _a = _this._devices; _i < _a.length; _i++) {\n                var devices = _a[_i];\n                if (devices) {\n                    for (var _b = 0, devices_1 = devices; _b < devices_1.length; _b++) {\n                        var device = devices_1[_b];\n                        if (device) {\n                            _this.onDeviceConnectedObservable.notifyObserver(observer, device);\n                        }\n                    }\n                }\n            }\n        });\n        this.onDeviceDisconnectedObservable = new Observable();\n        this._engine._deviceSourceManager.registerManager(this);\n        this._onDisposeObserver = engine.onDisposeObservable.add(function () {\n            _this.dispose();\n        });\n    }\n    // Public Functions\n    /**\n     * Gets a DeviceSource, given a type and slot\n     * @param deviceType - Type of Device\n     * @param deviceSlot - Slot or ID of device\n     * @returns DeviceSource\n     */\n    DeviceSourceManager.prototype.getDeviceSource = function (deviceType, deviceSlot) {\n        if (deviceSlot === undefined) {\n            if (this._firstDevice[deviceType] === undefined) {\n                return null;\n            }\n            deviceSlot = this._firstDevice[deviceType];\n        }\n        if (!this._devices[deviceType] || this._devices[deviceType][deviceSlot] === undefined) {\n            return null;\n        }\n        return this._devices[deviceType][deviceSlot];\n    };\n    /**\n     * Gets an array of DeviceSource objects for a given device type\n     * @param deviceType - Type of Device\n     * @returns All available DeviceSources of a given type\n     */\n    DeviceSourceManager.prototype.getDeviceSources = function (deviceType) {\n        return this._devices[deviceType].filter(function (source) {\n            return !!source;\n        });\n    };\n    /**\n     * Dispose of DeviceSourceManager\n     */\n    DeviceSourceManager.prototype.dispose = function () {\n        // Null out observable refs\n        this.onDeviceConnectedObservable.clear();\n        this.onDeviceDisconnectedObservable.clear();\n        if (this._engine._deviceSourceManager) {\n            this._engine._deviceSourceManager.unregisterManager(this);\n            if (--this._engine._deviceSourceManager._refCount < 1) {\n                this._engine._deviceSourceManager.dispose();\n                delete this._engine._deviceSourceManager;\n            }\n        }\n        this._engine.onDisposeObservable.remove(this._onDisposeObserver);\n    };\n    // Hidden Functions\n    /**\n     * @param deviceSource - Source to add\n     * @hidden\n     */\n    DeviceSourceManager.prototype._addDevice = function (deviceSource) {\n        if (!this._devices[deviceSource.deviceType]) {\n            this._devices[deviceSource.deviceType] = new Array();\n        }\n        if (!this._devices[deviceSource.deviceType][deviceSource.deviceSlot]) {\n            this._devices[deviceSource.deviceType][deviceSource.deviceSlot] = deviceSource;\n            this._updateFirstDevices(deviceSource.deviceType);\n        }\n        this.onDeviceConnectedObservable.notifyObservers(deviceSource);\n    };\n    /**\n     * @param deviceType - DeviceType\n     * @param deviceSlot - DeviceSlot\n     * @hidden\n     */\n    DeviceSourceManager.prototype._removeDevice = function (deviceType, deviceSlot) {\n        var _a, _b;\n        var deviceSource = (_a = this._devices[deviceType]) === null || _a === void 0 ? void 0 : _a[deviceSlot]; // Grab local reference to use before removing from devices\n        this.onDeviceDisconnectedObservable.notifyObservers(deviceSource);\n        if ((_b = this._devices[deviceType]) === null || _b === void 0 ? void 0 : _b[deviceSlot]) {\n            delete this._devices[deviceType][deviceSlot];\n        }\n        // Even if we don't delete a device, we should still check for the first device as things may have gotten out of sync.\n        this._updateFirstDevices(deviceType);\n    };\n    /**\n     * @param deviceType - DeviceType\n     * @param deviceSlot - DeviceSlot\n     * @param eventData - Event\n     * @hidden\n     */\n    DeviceSourceManager.prototype._onInputChanged = function (deviceType, deviceSlot, eventData) {\n        var _a, _b;\n        (_b = (_a = this._devices[deviceType]) === null || _a === void 0 ? void 0 : _a[deviceSlot]) === null || _b === void 0 ? void 0 : _b.onInputChangedObservable.notifyObservers(eventData);\n    };\n    // Private Functions\n    DeviceSourceManager.prototype._updateFirstDevices = function (type) {\n        switch (type) {\n            case DeviceType.Keyboard:\n            case DeviceType.Mouse:\n                this._firstDevice[type] = 0;\n                break;\n            case DeviceType.Touch:\n            case DeviceType.DualSense:\n            case DeviceType.DualShock:\n            case DeviceType.Xbox:\n            case DeviceType.Switch:\n            case DeviceType.Generic: {\n                delete this._firstDevice[type];\n                // eslint-disable-next-line no-case-declarations\n                var devices = this._devices[type];\n                if (devices) {\n                    for (var i = 0; i < devices.length; i++) {\n                        if (devices[i]) {\n                            this._firstDevice[type] = i;\n                            break;\n                        }\n                    }\n                }\n                break;\n            }\n        }\n    };\n    return DeviceSourceManager;\n}());\nexport { DeviceSourceManager };\n//# sourceMappingURL=deviceSourceManager.js.map","import { ThinEngine } from \"../../Engines/thinEngine.js\";\n\nThinEngine.prototype.setAlphaConstants = function (r, g, b, a) {\n    this._alphaState.setAlphaBlendConstants(r, g, b, a);\n};\nThinEngine.prototype.setAlphaMode = function (mode, noDepthWriteChange) {\n    if (noDepthWriteChange === void 0) { noDepthWriteChange = false; }\n    if (this._alphaMode === mode) {\n        return;\n    }\n    switch (mode) {\n        case 0:\n            this._alphaState.alphaBlend = false;\n            break;\n        case 7:\n            this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE, this._gl.ONE_MINUS_SRC_ALPHA, this._gl.ONE, this._gl.ONE);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 8:\n            this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE, this._gl.ONE_MINUS_SRC_ALPHA, this._gl.ONE, this._gl.ONE_MINUS_SRC_ALPHA);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 2:\n            this._alphaState.setAlphaBlendFunctionParameters(this._gl.SRC_ALPHA, this._gl.ONE_MINUS_SRC_ALPHA, this._gl.ONE, this._gl.ONE);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 6:\n            this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE, this._gl.ONE, this._gl.ZERO, this._gl.ONE);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 1:\n            this._alphaState.setAlphaBlendFunctionParameters(this._gl.SRC_ALPHA, this._gl.ONE, this._gl.ZERO, this._gl.ONE);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 3:\n            this._alphaState.setAlphaBlendFunctionParameters(this._gl.ZERO, this._gl.ONE_MINUS_SRC_COLOR, this._gl.ONE, this._gl.ONE);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 4:\n            this._alphaState.setAlphaBlendFunctionParameters(this._gl.DST_COLOR, this._gl.ZERO, this._gl.ONE, this._gl.ONE);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 5:\n            this._alphaState.setAlphaBlendFunctionParameters(this._gl.SRC_ALPHA, this._gl.ONE_MINUS_SRC_COLOR, this._gl.ONE, this._gl.ONE);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 9:\n            this._alphaState.setAlphaBlendFunctionParameters(this._gl.CONSTANT_COLOR, this._gl.ONE_MINUS_CONSTANT_COLOR, this._gl.CONSTANT_ALPHA, this._gl.ONE_MINUS_CONSTANT_ALPHA);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 10:\n            this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE, this._gl.ONE_MINUS_SRC_COLOR, this._gl.ONE, this._gl.ONE_MINUS_SRC_ALPHA);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 11:\n            this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE, this._gl.ONE, this._gl.ONE, this._gl.ONE);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 12:\n            this._alphaState.setAlphaBlendFunctionParameters(this._gl.DST_ALPHA, this._gl.ONE, this._gl.ZERO, this._gl.ZERO);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 13:\n            this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE_MINUS_DST_COLOR, this._gl.ONE_MINUS_SRC_COLOR, this._gl.ONE_MINUS_DST_ALPHA, this._gl.ONE_MINUS_SRC_ALPHA);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 14:\n            this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE, this._gl.ONE_MINUS_SRC_ALPHA, this._gl.ONE, this._gl.ONE_MINUS_SRC_ALPHA);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 15:\n            this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE, this._gl.ONE, this._gl.ONE, this._gl.ZERO);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 16:\n            this._alphaState.setAlphaBlendFunctionParameters(this._gl.ONE_MINUS_DST_COLOR, this._gl.ONE_MINUS_SRC_COLOR, this._gl.ZERO, this._gl.ONE);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 17:\n            // Same as ALPHA_COMBINE but accumulates (1 - alpha) values in the alpha channel for a later readout in order independant transparency\n            this._alphaState.setAlphaBlendFunctionParameters(this._gl.SRC_ALPHA, this._gl.ONE_MINUS_SRC_ALPHA, this._gl.ONE, this._gl.ONE_MINUS_SRC_ALPHA);\n            this._alphaState.alphaBlend = true;\n            break;\n    }\n    if (!noDepthWriteChange) {\n        this.depthCullingState.depthMask = mode === 0;\n    }\n    this._alphaMode = mode;\n};\nThinEngine.prototype.getAlphaMode = function () {\n    return this._alphaMode;\n};\nThinEngine.prototype.setAlphaEquation = function (equation) {\n    if (this._alphaEquation === equation) {\n        return;\n    }\n    switch (equation) {\n        case 0:\n            this._alphaState.setAlphaEquationParameters(32774, 32774);\n            break;\n        case 1:\n            this._alphaState.setAlphaEquationParameters(32778, 32778);\n            break;\n        case 2:\n            this._alphaState.setAlphaEquationParameters(32779, 32779);\n            break;\n        case 3:\n            this._alphaState.setAlphaEquationParameters(32776, 32776);\n            break;\n        case 4:\n            this._alphaState.setAlphaEquationParameters(32775, 32775);\n            break;\n        case 5:\n            this._alphaState.setAlphaEquationParameters(32775, 32774);\n            break;\n    }\n    this._alphaEquation = equation;\n};\nThinEngine.prototype.getAlphaEquation = function () {\n    return this._alphaEquation;\n};\n//# sourceMappingURL=engine.alpha.js.map","import { ThinEngine } from \"../../Engines/thinEngine.js\";\n/** @hidden */\nexport var ComputeBindingType;\n(function (ComputeBindingType) {\n    ComputeBindingType[ComputeBindingType[\"Texture\"] = 0] = \"Texture\";\n    ComputeBindingType[ComputeBindingType[\"StorageTexture\"] = 1] = \"StorageTexture\";\n    ComputeBindingType[ComputeBindingType[\"UniformBuffer\"] = 2] = \"UniformBuffer\";\n    ComputeBindingType[ComputeBindingType[\"StorageBuffer\"] = 3] = \"StorageBuffer\";\n    ComputeBindingType[ComputeBindingType[\"TextureWithoutSampler\"] = 4] = \"TextureWithoutSampler\";\n    ComputeBindingType[ComputeBindingType[\"Sampler\"] = 5] = \"Sampler\";\n})(ComputeBindingType || (ComputeBindingType = {}));\nThinEngine.prototype.createComputeEffect = function (baseName, options) {\n    throw new Error(\"createComputeEffect: This engine does not support compute shaders!\");\n};\nThinEngine.prototype.createComputePipelineContext = function () {\n    throw new Error(\"createComputePipelineContext: This engine does not support compute shaders!\");\n};\nThinEngine.prototype.createComputeContext = function () {\n    return undefined;\n};\nThinEngine.prototype.computeDispatch = function (effect, context, bindings, x, y, z, bindingsMapping) {\n    throw new Error(\"computeDispatch: This engine does not support compute shaders!\");\n};\nThinEngine.prototype.areAllComputeEffectsReady = function () {\n    return true;\n};\nThinEngine.prototype.releaseComputeEffects = function () { };\nThinEngine.prototype._prepareComputePipelineContext = function (pipelineContext, computeSourceCode, rawComputeSourceCode, defines, entryPoint) { };\nThinEngine.prototype._rebuildComputeEffects = function () { };\nThinEngine.prototype._executeWhenComputeStateIsCompiled = function (pipelineContext, action) {\n    action();\n};\nThinEngine.prototype._releaseComputeEffect = function (effect) { };\nThinEngine.prototype._deleteComputePipelineContext = function (pipelineContext) { };\n//# sourceMappingURL=engine.computeShader.js.map","import { __assign } from \"tslib\";\nimport { ThinEngine } from \"../../Engines/thinEngine.js\";\nimport { InternalTexture, InternalTextureSource } from \"../../Materials/Textures/internalTexture.js\";\nimport { Logger } from \"../../Misc/logger.js\";\nimport { LoadImage } from \"../../Misc/fileTools.js\";\nimport { RandomGUID } from \"../../Misc/guid.js\";\n\nThinEngine.prototype._createDepthStencilCubeTexture = function (size, options, rtWrapper) {\n    var internalTexture = new InternalTexture(this, InternalTextureSource.DepthStencil);\n    internalTexture.isCube = true;\n    if (this.webGLVersion === 1) {\n        Logger.Error(\"Depth cube texture is not supported by WebGL 1.\");\n        return internalTexture;\n    }\n    var internalOptions = __assign({ bilinearFiltering: false, comparisonFunction: 0, generateStencil: false }, options);\n    var gl = this._gl;\n    this._bindTextureDirectly(gl.TEXTURE_CUBE_MAP, internalTexture, true);\n    this._setupDepthStencilTexture(internalTexture, size, internalOptions.generateStencil, internalOptions.bilinearFiltering, internalOptions.comparisonFunction);\n    rtWrapper._depthStencilTexture = internalTexture;\n    rtWrapper._depthStencilTextureWithStencil = internalOptions.generateStencil;\n    // Create the depth/stencil buffer\n    for (var face = 0; face < 6; face++) {\n        if (internalOptions.generateStencil) {\n            gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + face, 0, gl.DEPTH24_STENCIL8, size, size, 0, gl.DEPTH_STENCIL, gl.UNSIGNED_INT_24_8, null);\n        }\n        else {\n            gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + face, 0, gl.DEPTH_COMPONENT24, size, size, 0, gl.DEPTH_COMPONENT, gl.UNSIGNED_INT, null);\n        }\n    }\n    this._bindTextureDirectly(gl.TEXTURE_CUBE_MAP, null);\n    this._internalTexturesCache.push(internalTexture);\n    return internalTexture;\n};\nThinEngine.prototype._partialLoadFile = function (url, index, loadedFiles, onfinish, onErrorCallBack) {\n    if (onErrorCallBack === void 0) { onErrorCallBack = null; }\n    var onload = function (data) {\n        loadedFiles[index] = data;\n        loadedFiles._internalCount++;\n        if (loadedFiles._internalCount === 6) {\n            onfinish(loadedFiles);\n        }\n    };\n    var onerror = function (request, exception) {\n        if (onErrorCallBack && request) {\n            onErrorCallBack(request.status + \" \" + request.statusText, exception);\n        }\n    };\n    this._loadFile(url, onload, undefined, undefined, true, onerror);\n};\nThinEngine.prototype._cascadeLoadFiles = function (scene, onfinish, files, onError) {\n    if (onError === void 0) { onError = null; }\n    var loadedFiles = [];\n    loadedFiles._internalCount = 0;\n    for (var index = 0; index < 6; index++) {\n        this._partialLoadFile(files[index], index, loadedFiles, onfinish, onError);\n    }\n};\nThinEngine.prototype._cascadeLoadImgs = function (scene, texture, onfinish, files, onError, mimeType) {\n    if (onError === void 0) { onError = null; }\n    var loadedImages = [];\n    loadedImages._internalCount = 0;\n    for (var index = 0; index < 6; index++) {\n        this._partialLoadImg(files[index], index, loadedImages, scene, texture, onfinish, onError, mimeType);\n    }\n};\nThinEngine.prototype._partialLoadImg = function (url, index, loadedImages, scene, texture, onfinish, onErrorCallBack, mimeType) {\n    if (onErrorCallBack === void 0) { onErrorCallBack = null; }\n    var tokenPendingData = RandomGUID();\n    var onload = function (img) {\n        loadedImages[index] = img;\n        loadedImages._internalCount++;\n        if (scene) {\n            scene._removePendingData(tokenPendingData);\n        }\n        if (loadedImages._internalCount === 6 && onfinish) {\n            onfinish(texture, loadedImages);\n        }\n    };\n    var onerror = function (message, exception) {\n        if (scene) {\n            scene._removePendingData(tokenPendingData);\n        }\n        if (onErrorCallBack) {\n            onErrorCallBack(message, exception);\n        }\n    };\n    LoadImage(url, onload, onerror, scene ? scene.offlineProvider : null, mimeType);\n    if (scene) {\n        scene._addPendingData(tokenPendingData);\n    }\n};\nThinEngine.prototype._setCubeMapTextureParams = function (texture, loadMipmap, maxLevel) {\n    var gl = this._gl;\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, loadMipmap ? gl.LINEAR_MIPMAP_LINEAR : gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    texture.samplingMode = loadMipmap ? 3 : 2;\n    if (loadMipmap && this.getCaps().textureMaxLevel && maxLevel !== undefined && maxLevel > 0) {\n        gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAX_LEVEL, maxLevel);\n        texture._maxLodLevel = maxLevel;\n    }\n    this._bindTextureDirectly(gl.TEXTURE_CUBE_MAP, null);\n};\nThinEngine.prototype.createCubeTextureBase = function (rootUrl, scene, files, noMipmap, onLoad, onError, format, forcedExtension, createPolynomials, lodScale, lodOffset, fallback, beforeLoadCubeDataCallback, imageHandler, useSRGBBuffer) {\n    var _this = this;\n    if (onLoad === void 0) { onLoad = null; }\n    if (onError === void 0) { onError = null; }\n    if (forcedExtension === void 0) { forcedExtension = null; }\n    if (createPolynomials === void 0) { createPolynomials = false; }\n    if (lodScale === void 0) { lodScale = 0; }\n    if (lodOffset === void 0) { lodOffset = 0; }\n    if (fallback === void 0) { fallback = null; }\n    if (beforeLoadCubeDataCallback === void 0) { beforeLoadCubeDataCallback = null; }\n    if (imageHandler === void 0) { imageHandler = null; }\n    if (useSRGBBuffer === void 0) { useSRGBBuffer = false; }\n    var texture = fallback ? fallback : new InternalTexture(this, InternalTextureSource.Cube);\n    texture.isCube = true;\n    texture.url = rootUrl;\n    texture.generateMipMaps = !noMipmap;\n    texture._lodGenerationScale = lodScale;\n    texture._lodGenerationOffset = lodOffset;\n    texture._useSRGBBuffer = !!useSRGBBuffer && this._caps.supportSRGBBuffers && (this.webGLVersion > 1 || this.isWebGPU || !!noMipmap);\n    if (!this._doNotHandleContextLost) {\n        texture._extension = forcedExtension;\n        texture._files = files;\n    }\n    var originalRootUrl = rootUrl;\n    if (this._transformTextureUrl && !fallback) {\n        rootUrl = this._transformTextureUrl(rootUrl);\n    }\n    var lastDot = rootUrl.lastIndexOf(\".\");\n    var extension = forcedExtension ? forcedExtension : lastDot > -1 ? rootUrl.substring(lastDot).toLowerCase() : \"\";\n    var loader = null;\n    for (var _i = 0, _a = ThinEngine._TextureLoaders; _i < _a.length; _i++) {\n        var availableLoader = _a[_i];\n        if (availableLoader.canLoad(extension)) {\n            loader = availableLoader;\n            break;\n        }\n    }\n    var onInternalError = function (request, exception) {\n        if (rootUrl === originalRootUrl) {\n            if (onError && request) {\n                onError(request.status + \" \" + request.statusText, exception);\n            }\n        }\n        else {\n            // fall back to the original url if the transformed url fails to load\n            Logger.Warn(\"Failed to load \".concat(rootUrl, \", falling back to the \").concat(originalRootUrl));\n            _this.createCubeTextureBase(originalRootUrl, scene, files, !!noMipmap, onLoad, onError, format, forcedExtension, createPolynomials, lodScale, lodOffset, texture, beforeLoadCubeDataCallback, imageHandler, useSRGBBuffer);\n        }\n    };\n    if (loader) {\n        var onloaddata_1 = function (data) {\n            if (beforeLoadCubeDataCallback) {\n                beforeLoadCubeDataCallback(texture, data);\n            }\n            loader.loadCubeData(data, texture, createPolynomials, onLoad, onError);\n        };\n        if (files && files.length === 6) {\n            if (loader.supportCascades) {\n                this._cascadeLoadFiles(scene, function (images) { return onloaddata_1(images.map(function (image) { return new Uint8Array(image); })); }, files, onError);\n            }\n            else {\n                if (onError) {\n                    onError(\"Textures type does not support cascades.\");\n                }\n                else {\n                    Logger.Warn(\"Texture loader does not support cascades.\");\n                }\n            }\n        }\n        else {\n            this._loadFile(rootUrl, function (data) { return onloaddata_1(new Uint8Array(data)); }, undefined, undefined, true, onInternalError);\n        }\n    }\n    else {\n        if (!files) {\n            throw new Error(\"Cannot load cubemap because files were not defined\");\n        }\n        this._cascadeLoadImgs(scene, texture, function (texture, imgs) {\n            if (imageHandler) {\n                imageHandler(texture, imgs);\n            }\n        }, files, onError);\n    }\n    this._internalTexturesCache.push(texture);\n    return texture;\n};\nThinEngine.prototype.createCubeTexture = function (rootUrl, scene, files, noMipmap, onLoad, onError, format, forcedExtension, createPolynomials, lodScale, lodOffset, fallback, loaderOptions, useSRGBBuffer) {\n    var _this = this;\n    if (onLoad === void 0) { onLoad = null; }\n    if (onError === void 0) { onError = null; }\n    if (forcedExtension === void 0) { forcedExtension = null; }\n    if (createPolynomials === void 0) { createPolynomials = false; }\n    if (lodScale === void 0) { lodScale = 0; }\n    if (lodOffset === void 0) { lodOffset = 0; }\n    if (fallback === void 0) { fallback = null; }\n    if (useSRGBBuffer === void 0) { useSRGBBuffer = false; }\n    var gl = this._gl;\n    return this.createCubeTextureBase(rootUrl, scene, files, !!noMipmap, onLoad, onError, format, forcedExtension, createPolynomials, lodScale, lodOffset, fallback, function (texture) { return _this._bindTextureDirectly(gl.TEXTURE_CUBE_MAP, texture, true); }, function (texture, imgs) {\n        var width = _this.needPOTTextures ? ThinEngine.GetExponentOfTwo(imgs[0].width, _this._caps.maxCubemapTextureSize) : imgs[0].width;\n        var height = width;\n        var faces = [\n            gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n            gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n            gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n        ];\n        _this._bindTextureDirectly(gl.TEXTURE_CUBE_MAP, texture, true);\n        _this._unpackFlipY(false);\n        var internalFormat = format ? _this._getInternalFormat(format, texture._useSRGBBuffer) : texture._useSRGBBuffer ? gl.SRGB8_ALPHA8 : gl.RGBA;\n        var texelFormat = format ? _this._getInternalFormat(format) : gl.RGBA;\n        if (texture._useSRGBBuffer && _this.webGLVersion === 1) {\n            texelFormat = internalFormat;\n        }\n        for (var index = 0; index < faces.length; index++) {\n            if (imgs[index].width !== width || imgs[index].height !== height) {\n                _this._prepareWorkingCanvas();\n                if (!_this._workingCanvas || !_this._workingContext) {\n                    Logger.Warn(\"Cannot create canvas to resize texture.\");\n                    return;\n                }\n                _this._workingCanvas.width = width;\n                _this._workingCanvas.height = height;\n                _this._workingContext.drawImage(imgs[index], 0, 0, imgs[index].width, imgs[index].height, 0, 0, width, height);\n                gl.texImage2D(faces[index], 0, internalFormat, texelFormat, gl.UNSIGNED_BYTE, _this._workingCanvas);\n            }\n            else {\n                gl.texImage2D(faces[index], 0, internalFormat, texelFormat, gl.UNSIGNED_BYTE, imgs[index]);\n            }\n        }\n        if (!noMipmap) {\n            gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\n        }\n        _this._setCubeMapTextureParams(texture, !noMipmap);\n        texture.width = width;\n        texture.height = height;\n        texture.isReady = true;\n        if (format) {\n            texture.format = format;\n        }\n        texture.onLoadedObservable.notifyObservers(texture);\n        texture.onLoadedObservable.clear();\n        if (onLoad) {\n            onLoad();\n        }\n    }, !!useSRGBBuffer);\n};\n//# sourceMappingURL=engine.cubeTexture.js.map","import { ThinEngine } from \"../../Engines/thinEngine.js\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nThinEngine.prototype.updateDynamicIndexBuffer = function (indexBuffer, indices, offset) {\n    if (offset === void 0) { offset = 0; }\n    // Force cache update\n    this._currentBoundBuffer[this._gl.ELEMENT_ARRAY_BUFFER] = null;\n    this.bindIndexBuffer(indexBuffer);\n    var view;\n    if (indexBuffer.is32Bits) {\n        // anything else than Uint32Array needs to be converted to Uint32Array\n        view = indices instanceof Uint32Array ? indices : new Uint32Array(indices);\n    }\n    else {\n        // anything else than Uint16Array needs to be converted to Uint16Array\n        view = indices instanceof Uint16Array ? indices : new Uint16Array(indices);\n    }\n    this._gl.bufferData(this._gl.ELEMENT_ARRAY_BUFFER, view, this._gl.DYNAMIC_DRAW);\n    this._resetIndexBufferBinding();\n};\nThinEngine.prototype.updateDynamicVertexBuffer = function (vertexBuffer, data, byteOffset, byteLength) {\n    this.bindArrayBuffer(vertexBuffer);\n    if (byteOffset === undefined) {\n        byteOffset = 0;\n    }\n    var dataLength = data.byteLength || data.length;\n    if (byteLength === undefined || (byteLength >= dataLength && byteOffset === 0)) {\n        if (data instanceof Array) {\n            this._gl.bufferSubData(this._gl.ARRAY_BUFFER, byteOffset, new Float32Array(data));\n        }\n        else {\n            this._gl.bufferSubData(this._gl.ARRAY_BUFFER, byteOffset, data);\n        }\n    }\n    else {\n        if (data instanceof Array) {\n            this._gl.bufferSubData(this._gl.ARRAY_BUFFER, 0, new Float32Array(data).subarray(byteOffset, byteOffset + byteLength));\n        }\n        else {\n            if (data instanceof ArrayBuffer) {\n                data = new Uint8Array(data, byteOffset, byteLength);\n            }\n            else {\n                data = new Uint8Array(data.buffer, data.byteOffset + byteOffset, byteLength);\n            }\n            this._gl.bufferSubData(this._gl.ARRAY_BUFFER, 0, data);\n        }\n    }\n    this._resetVertexBufferBinding();\n};\n//# sourceMappingURL=engine.dynamicBuffer.js.map","import { ThinEngine } from \"../../Engines/thinEngine.js\";\nimport { InternalTexture, InternalTextureSource } from \"../../Materials/Textures/internalTexture.js\";\nThinEngine.prototype.createDynamicTexture = function (width, height, generateMipMaps, samplingMode) {\n    var texture = new InternalTexture(this, InternalTextureSource.Dynamic);\n    texture.baseWidth = width;\n    texture.baseHeight = height;\n    if (generateMipMaps) {\n        width = this.needPOTTextures ? ThinEngine.GetExponentOfTwo(width, this._caps.maxTextureSize) : width;\n        height = this.needPOTTextures ? ThinEngine.GetExponentOfTwo(height, this._caps.maxTextureSize) : height;\n    }\n    //  this.resetTextureCache();\n    texture.width = width;\n    texture.height = height;\n    texture.isReady = false;\n    texture.generateMipMaps = generateMipMaps;\n    texture.samplingMode = samplingMode;\n    this.updateTextureSamplingMode(samplingMode, texture);\n    this._internalTexturesCache.push(texture);\n    return texture;\n};\nThinEngine.prototype.updateDynamicTexture = function (texture, source, invertY, premulAlpha, format, forceBindTexture, \n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nallowGPUOptimization) {\n    if (premulAlpha === void 0) { premulAlpha = false; }\n    if (forceBindTexture === void 0) { forceBindTexture = false; }\n    if (allowGPUOptimization === void 0) { allowGPUOptimization = false; }\n    if (!texture) {\n        return;\n    }\n    var gl = this._gl;\n    var target = gl.TEXTURE_2D;\n    var wasPreviouslyBound = this._bindTextureDirectly(target, texture, true, forceBindTexture);\n    this._unpackFlipY(invertY === undefined ? texture.invertY : invertY);\n    if (premulAlpha) {\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 1);\n    }\n    var textureType = this._getWebGLTextureType(texture.type);\n    var glformat = this._getInternalFormat(format ? format : texture.format);\n    var internalFormat = this._getRGBABufferInternalSizedFormat(texture.type, glformat);\n    gl.texImage2D(target, 0, internalFormat, glformat, textureType, source);\n    if (texture.generateMipMaps) {\n        gl.generateMipmap(target);\n    }\n    if (!wasPreviouslyBound) {\n        this._bindTextureDirectly(target, null);\n    }\n    if (premulAlpha) {\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, 0);\n    }\n    texture.isReady = true;\n};\n//# sourceMappingURL=engine.dynamicTexture.js.map","import { InternalTexture, InternalTextureSource } from \"../../Materials/Textures/internalTexture.js\";\nimport { Logger } from \"../../Misc/logger.js\";\n\nimport { ThinEngine } from \"../thinEngine.js\";\nThinEngine.prototype.restoreSingleAttachment = function () {\n    var gl = this._gl;\n    this.bindAttachments([gl.BACK]);\n};\nThinEngine.prototype.restoreSingleAttachmentForRenderTarget = function () {\n    var gl = this._gl;\n    this.bindAttachments([gl.COLOR_ATTACHMENT0]);\n};\nThinEngine.prototype.buildTextureLayout = function (textureStatus) {\n    var gl = this._gl;\n    var result = [];\n    for (var i = 0; i < textureStatus.length; i++) {\n        if (textureStatus[i]) {\n            result.push(gl[\"COLOR_ATTACHMENT\" + i]);\n        }\n        else {\n            result.push(gl.NONE);\n        }\n    }\n    return result;\n};\nThinEngine.prototype.bindAttachments = function (attachments) {\n    var gl = this._gl;\n    gl.drawBuffers(attachments);\n};\nThinEngine.prototype.unBindMultiColorAttachmentFramebuffer = function (rtWrapper, disableGenerateMipMaps, onBeforeUnbind) {\n    if (disableGenerateMipMaps === void 0) { disableGenerateMipMaps = false; }\n    this._currentRenderTarget = null;\n    // If MSAA, we need to bitblt back to main texture\n    var gl = this._gl;\n    var attachments = rtWrapper._attachments;\n    var count = attachments.length;\n    if (rtWrapper._MSAAFramebuffer) {\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, rtWrapper._MSAAFramebuffer);\n        gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, rtWrapper._framebuffer);\n        for (var i = 0; i < count; i++) {\n            var texture = rtWrapper.textures[i];\n            for (var j = 0; j < count; j++) {\n                attachments[j] = gl.NONE;\n            }\n            attachments[i] = gl[this.webGLVersion > 1 ? \"COLOR_ATTACHMENT\" + i : \"COLOR_ATTACHMENT\" + i + \"_WEBGL\"];\n            gl.readBuffer(attachments[i]);\n            gl.drawBuffers(attachments);\n            gl.blitFramebuffer(0, 0, texture.width, texture.height, 0, 0, texture.width, texture.height, gl.COLOR_BUFFER_BIT, gl.NEAREST);\n        }\n        for (var i = 0; i < count; i++) {\n            attachments[i] = gl[this.webGLVersion > 1 ? \"COLOR_ATTACHMENT\" + i : \"COLOR_ATTACHMENT\" + i + \"_WEBGL\"];\n        }\n        gl.drawBuffers(attachments);\n    }\n    for (var i = 0; i < count; i++) {\n        var texture = rtWrapper.textures[i];\n        if (texture.generateMipMaps && !disableGenerateMipMaps && !texture.isCube) {\n            this._bindTextureDirectly(gl.TEXTURE_2D, texture, true);\n            gl.generateMipmap(gl.TEXTURE_2D);\n            this._bindTextureDirectly(gl.TEXTURE_2D, null);\n        }\n    }\n    if (onBeforeUnbind) {\n        if (rtWrapper._MSAAFramebuffer) {\n            // Bind the correct framebuffer\n            this._bindUnboundFramebuffer(rtWrapper._framebuffer);\n        }\n        onBeforeUnbind();\n    }\n    this._bindUnboundFramebuffer(null);\n};\nThinEngine.prototype.createMultipleRenderTarget = function (size, options, initializeBuffers) {\n    if (initializeBuffers === void 0) { initializeBuffers = true; }\n    var generateMipMaps = false;\n    var generateDepthBuffer = true;\n    var generateStencilBuffer = false;\n    var generateDepthTexture = false;\n    var depthTextureFormat = 15;\n    var textureCount = 1;\n    var defaultType = 0;\n    var defaultSamplingMode = 3;\n    var defaultUseSRGBBuffer = false;\n    var types = new Array();\n    var samplingModes = new Array();\n    var useSRGBBuffers = new Array();\n    var rtWrapper = this._createHardwareRenderTargetWrapper(true, false, size);\n    if (options !== undefined) {\n        generateMipMaps = options.generateMipMaps === undefined ? false : options.generateMipMaps;\n        generateDepthBuffer = options.generateDepthBuffer === undefined ? true : options.generateDepthBuffer;\n        generateStencilBuffer = options.generateStencilBuffer === undefined ? false : options.generateStencilBuffer;\n        generateDepthTexture = options.generateDepthTexture === undefined ? false : options.generateDepthTexture;\n        textureCount = options.textureCount || 1;\n        if (options.types) {\n            types = options.types;\n        }\n        if (options.samplingModes) {\n            samplingModes = options.samplingModes;\n        }\n        if (options.useSRGBBuffers) {\n            useSRGBBuffers = options.useSRGBBuffers;\n        }\n        if (this.webGLVersion > 1 &&\n            (options.depthTextureFormat === 13 ||\n                options.depthTextureFormat === 16 ||\n                options.depthTextureFormat === 14)) {\n            depthTextureFormat = options.depthTextureFormat;\n        }\n    }\n    var gl = this._gl;\n    // Create the framebuffer\n    var framebuffer = gl.createFramebuffer();\n    this._bindUnboundFramebuffer(framebuffer);\n    var width = size.width || size;\n    var height = size.height || size;\n    var textures = [];\n    var attachments = [];\n    var useStencilTexture = this.webGLVersion > 1 && generateDepthTexture && options.depthTextureFormat === 13;\n    var depthStencilBuffer = this._setupFramebufferDepthAttachments(!useStencilTexture && generateStencilBuffer, !generateDepthTexture && generateDepthBuffer, width, height);\n    rtWrapper._framebuffer = framebuffer;\n    rtWrapper._depthStencilBuffer = depthStencilBuffer;\n    rtWrapper._generateDepthBuffer = !generateDepthTexture && generateDepthBuffer;\n    rtWrapper._generateStencilBuffer = !useStencilTexture && generateStencilBuffer;\n    rtWrapper._attachments = attachments;\n    for (var i = 0; i < textureCount; i++) {\n        var samplingMode = samplingModes[i] || defaultSamplingMode;\n        var type = types[i] || defaultType;\n        var useSRGBBuffer = useSRGBBuffers[i] || defaultUseSRGBBuffer;\n        if (type === 1 && !this._caps.textureFloatLinearFiltering) {\n            // if floating point linear (gl.FLOAT) then force to NEAREST_SAMPLINGMODE\n            samplingMode = 1;\n        }\n        else if (type === 2 && !this._caps.textureHalfFloatLinearFiltering) {\n            // if floating point linear (HALF_FLOAT) then force to NEAREST_SAMPLINGMODE\n            samplingMode = 1;\n        }\n        var filters = this._getSamplingParameters(samplingMode, generateMipMaps);\n        if (type === 1 && !this._caps.textureFloat) {\n            type = 0;\n            Logger.Warn(\"Float textures are not supported. Render target forced to TEXTURETYPE_UNSIGNED_BYTE type\");\n        }\n        useSRGBBuffer = useSRGBBuffer && this._caps.supportSRGBBuffers && (this.webGLVersion > 1 || this.isWebGPU);\n        var texture = new InternalTexture(this, InternalTextureSource.MultiRenderTarget);\n        var attachment = gl[this.webGLVersion > 1 ? \"COLOR_ATTACHMENT\" + i : \"COLOR_ATTACHMENT\" + i + \"_WEBGL\"];\n        textures.push(texture);\n        attachments.push(attachment);\n        gl.activeTexture(gl[\"TEXTURE\" + i]);\n        gl.bindTexture(gl.TEXTURE_2D, texture._hardwareTexture.underlyingResource);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filters.mag);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filters.min);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        var internalSizedFormat = this._getRGBABufferInternalSizedFormat(type, 5, useSRGBBuffer);\n        gl.texImage2D(gl.TEXTURE_2D, 0, internalSizedFormat, width, height, 0, gl.RGBA, this._getWebGLTextureType(type), null);\n        gl.framebufferTexture2D(gl.DRAW_FRAMEBUFFER, attachment, gl.TEXTURE_2D, texture._hardwareTexture.underlyingResource, 0);\n        if (generateMipMaps) {\n            this._gl.generateMipmap(this._gl.TEXTURE_2D);\n        }\n        // Unbind\n        this._bindTextureDirectly(gl.TEXTURE_2D, null);\n        texture.baseWidth = width;\n        texture.baseHeight = height;\n        texture.width = width;\n        texture.height = height;\n        texture.isReady = true;\n        texture.samples = 1;\n        texture.generateMipMaps = generateMipMaps;\n        texture.samplingMode = samplingMode;\n        texture.type = type;\n        texture._useSRGBBuffer = useSRGBBuffer;\n        this._internalTexturesCache.push(texture);\n    }\n    if (generateDepthTexture && this._caps.depthTextureExtension) {\n        // Depth texture\n        var depthTexture = new InternalTexture(this, InternalTextureSource.Depth);\n        var depthTextureType = 5;\n        var glDepthTextureInternalFormat = gl.DEPTH_COMPONENT16;\n        var glDepthTextureFormat = gl.DEPTH_COMPONENT;\n        var glDepthTextureType = gl.UNSIGNED_SHORT;\n        var glDepthTextureAttachment = gl.DEPTH_ATTACHMENT;\n        if (this.webGLVersion < 2) {\n            glDepthTextureInternalFormat = gl.DEPTH_COMPONENT;\n        }\n        else {\n            if (depthTextureFormat === 14) {\n                depthTextureType = 1;\n                glDepthTextureType = gl.FLOAT;\n                glDepthTextureInternalFormat = gl.DEPTH_COMPONENT32F;\n            }\n            else if (depthTextureFormat === 16) {\n                depthTextureType = 0;\n                glDepthTextureType = gl.UNSIGNED_INT;\n                glDepthTextureInternalFormat = gl.DEPTH_COMPONENT24;\n                glDepthTextureAttachment = gl.DEPTH_ATTACHMENT;\n            }\n            else if (depthTextureFormat === 13) {\n                depthTextureType = 12;\n                glDepthTextureType = gl.UNSIGNED_INT_24_8;\n                glDepthTextureInternalFormat = gl.DEPTH24_STENCIL8;\n                glDepthTextureFormat = gl.DEPTH_STENCIL;\n                glDepthTextureAttachment = gl.DEPTH_STENCIL_ATTACHMENT;\n            }\n        }\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, depthTexture._hardwareTexture.underlyingResource);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texImage2D(gl.TEXTURE_2D, 0, glDepthTextureInternalFormat, width, height, 0, glDepthTextureFormat, glDepthTextureType, null);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, glDepthTextureAttachment, gl.TEXTURE_2D, depthTexture._hardwareTexture.underlyingResource, 0);\n        depthTexture.baseWidth = width;\n        depthTexture.baseHeight = height;\n        depthTexture.width = width;\n        depthTexture.height = height;\n        depthTexture.isReady = true;\n        depthTexture.samples = 1;\n        depthTexture.generateMipMaps = generateMipMaps;\n        depthTexture.samplingMode = 1;\n        depthTexture.format = depthTextureFormat;\n        depthTexture.type = depthTextureType;\n        textures.push(depthTexture);\n        this._internalTexturesCache.push(depthTexture);\n    }\n    rtWrapper.setTextures(textures);\n    if (initializeBuffers) {\n        gl.drawBuffers(attachments);\n    }\n    this._bindUnboundFramebuffer(null);\n    this.resetTextureCache();\n    return rtWrapper;\n};\nThinEngine.prototype.updateMultipleRenderTargetTextureSampleCount = function (rtWrapper, samples, initializeBuffers) {\n    if (initializeBuffers === void 0) { initializeBuffers = true; }\n    if (this.webGLVersion < 2 || !rtWrapper || !rtWrapper.texture) {\n        return 1;\n    }\n    if (rtWrapper.samples === samples) {\n        return samples;\n    }\n    var count = rtWrapper._attachments.length;\n    if (count === 0) {\n        return 1;\n    }\n    var gl = this._gl;\n    samples = Math.min(samples, this.getCaps().maxMSAASamples);\n    // Dispose previous render buffers\n    if (rtWrapper._depthStencilBuffer) {\n        gl.deleteRenderbuffer(rtWrapper._depthStencilBuffer);\n        rtWrapper._depthStencilBuffer = null;\n    }\n    if (rtWrapper._MSAAFramebuffer) {\n        gl.deleteFramebuffer(rtWrapper._MSAAFramebuffer);\n        rtWrapper._MSAAFramebuffer = null;\n    }\n    for (var i = 0; i < count; i++) {\n        var hardwareTexture = rtWrapper.textures[i]._hardwareTexture;\n        if (hardwareTexture === null || hardwareTexture === void 0 ? void 0 : hardwareTexture._MSAARenderBuffer) {\n            gl.deleteRenderbuffer(hardwareTexture._MSAARenderBuffer);\n            hardwareTexture._MSAARenderBuffer = null;\n        }\n    }\n    if (samples > 1 && gl.renderbufferStorageMultisample) {\n        var framebuffer = gl.createFramebuffer();\n        if (!framebuffer) {\n            throw new Error(\"Unable to create multi sampled framebuffer\");\n        }\n        rtWrapper._MSAAFramebuffer = framebuffer;\n        this._bindUnboundFramebuffer(framebuffer);\n        var attachments = [];\n        for (var i = 0; i < count; i++) {\n            var texture = rtWrapper.textures[i];\n            var hardwareTexture = texture._hardwareTexture;\n            var attachment = gl[this.webGLVersion > 1 ? \"COLOR_ATTACHMENT\" + i : \"COLOR_ATTACHMENT\" + i + \"_WEBGL\"];\n            var colorRenderbuffer = this._createRenderBuffer(texture.width, texture.height, samples, -1 /* not used */, this._getRGBAMultiSampleBufferFormat(texture.type), attachment);\n            if (!colorRenderbuffer) {\n                throw new Error(\"Unable to create multi sampled framebuffer\");\n            }\n            hardwareTexture._MSAARenderBuffer = colorRenderbuffer;\n            texture.samples = samples;\n            attachments.push(attachment);\n        }\n        if (initializeBuffers) {\n            gl.drawBuffers(attachments);\n        }\n    }\n    else {\n        this._bindUnboundFramebuffer(rtWrapper._framebuffer);\n    }\n    rtWrapper._depthStencilBuffer = this._setupFramebufferDepthAttachments(rtWrapper._generateStencilBuffer, rtWrapper._generateDepthBuffer, rtWrapper.texture.width, rtWrapper.texture.height, samples);\n    this._bindUnboundFramebuffer(null);\n    return samples;\n};\n//# sourceMappingURL=engine.multiRender.js.map","import { Camera } from \"../../Cameras/camera.js\";\nimport { Engine } from \"../../Engines/engine.js\";\nimport { Scene } from \"../../scene.js\";\nimport { InternalTexture, InternalTextureSource } from \"../../Materials/Textures/internalTexture.js\";\nimport { Matrix, TmpVectors } from \"../../Maths/math.vector.js\";\nimport { UniformBuffer } from \"../../Materials/uniformBuffer.js\";\nimport { MultiviewRenderTarget } from \"../../Materials/Textures/MultiviewRenderTarget.js\";\nimport { Frustum } from \"../../Maths/math.frustum.js\";\nEngine.prototype.createMultiviewRenderTargetTexture = function (width, height) {\n    var gl = this._gl;\n    if (!this.getCaps().multiview) {\n        throw \"Multiview is not supported\";\n    }\n    var rtWrapper = this._createHardwareRenderTargetWrapper(false, false, { width: width, height: height });\n    rtWrapper._framebuffer = gl.createFramebuffer();\n    var internalTexture = new InternalTexture(this, InternalTextureSource.Unknown, true);\n    internalTexture.width = width;\n    internalTexture.height = height;\n    internalTexture.isMultiview = true;\n    rtWrapper._colorTextureArray = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, rtWrapper._colorTextureArray);\n    gl.texStorage3D(gl.TEXTURE_2D_ARRAY, 1, gl.RGBA8, width, height, 2);\n    rtWrapper._depthStencilTextureArray = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D_ARRAY, rtWrapper._depthStencilTextureArray);\n    gl.texStorage3D(gl.TEXTURE_2D_ARRAY, 1, gl.DEPTH24_STENCIL8, width, height, 2);\n    internalTexture.isReady = true;\n    rtWrapper.setTextures(internalTexture);\n    rtWrapper._depthStencilTexture = internalTexture;\n    return rtWrapper;\n};\nEngine.prototype.bindMultiviewFramebuffer = function (_multiviewTexture) {\n    var multiviewTexture = _multiviewTexture;\n    var gl = this._gl;\n    var ext = this.getCaps().oculusMultiview || this.getCaps().multiview;\n    this.bindFramebuffer(multiviewTexture, undefined, undefined, undefined, true);\n    gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, multiviewTexture._framebuffer);\n    if (multiviewTexture._colorTextureArray && multiviewTexture._depthStencilTextureArray) {\n        if (this.getCaps().oculusMultiview) {\n            ext.framebufferTextureMultisampleMultiviewOVR(gl.DRAW_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, multiviewTexture._colorTextureArray, 0, multiviewTexture.samples, 0, 2);\n            ext.framebufferTextureMultisampleMultiviewOVR(gl.DRAW_FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, multiviewTexture._depthStencilTextureArray, 0, multiviewTexture.samples, 0, 2);\n        }\n        else {\n            ext.framebufferTextureMultiviewOVR(gl.DRAW_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, multiviewTexture._colorTextureArray, 0, 0, 2);\n            ext.framebufferTextureMultiviewOVR(gl.DRAW_FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, multiviewTexture._depthStencilTextureArray, 0, 0, 2);\n        }\n    }\n    else {\n        throw \"Invalid multiview frame buffer\";\n    }\n};\nCamera.prototype._useMultiviewToSingleView = false;\nCamera.prototype._multiviewTexture = null;\nCamera.prototype._resizeOrCreateMultiviewTexture = function (width, height) {\n    if (!this._multiviewTexture) {\n        this._multiviewTexture = new MultiviewRenderTarget(this.getScene(), { width: width, height: height });\n    }\n    else if (this._multiviewTexture.getRenderWidth() != width || this._multiviewTexture.getRenderHeight() != height) {\n        this._multiviewTexture.dispose();\n        this._multiviewTexture = new MultiviewRenderTarget(this.getScene(), { width: width, height: height });\n    }\n};\nfunction createMultiviewUbo(engine, name) {\n    var ubo = new UniformBuffer(engine, undefined, true, name);\n    ubo.addUniform(\"viewProjection\", 16);\n    ubo.addUniform(\"viewProjectionR\", 16);\n    ubo.addUniform(\"view\", 16);\n    ubo.addUniform(\"projection\", 16);\n    ubo.addUniform(\"vEyePosition\", 4);\n    return ubo;\n}\nvar currentCreateSceneUniformBuffer = Scene.prototype.createSceneUniformBuffer;\nScene.prototype._transformMatrixR = Matrix.Zero();\nScene.prototype._multiviewSceneUbo = null;\nScene.prototype._createMultiviewUbo = function () {\n    this._multiviewSceneUbo = createMultiviewUbo(this.getEngine(), \"scene_multiview\");\n};\nScene.prototype.createSceneUniformBuffer = function (name) {\n    if (this._multiviewSceneUbo) {\n        return createMultiviewUbo(this.getEngine(), name);\n    }\n    return currentCreateSceneUniformBuffer.bind(this)(name);\n};\nScene.prototype._updateMultiviewUbo = function (viewR, projectionR) {\n    if (viewR && projectionR) {\n        viewR.multiplyToRef(projectionR, this._transformMatrixR);\n    }\n    if (viewR && projectionR) {\n        viewR.multiplyToRef(projectionR, TmpVectors.Matrix[0]);\n        Frustum.GetRightPlaneToRef(TmpVectors.Matrix[0], this._frustumPlanes[3]); // Replace right plane by second camera right plane\n    }\n    if (this._multiviewSceneUbo) {\n        this._multiviewSceneUbo.updateMatrix(\"viewProjection\", this.getTransformMatrix());\n        this._multiviewSceneUbo.updateMatrix(\"viewProjectionR\", this._transformMatrixR);\n        this._multiviewSceneUbo.updateMatrix(\"view\", this._viewMatrix);\n        this._multiviewSceneUbo.updateMatrix(\"projection\", this._projectionMatrix);\n    }\n};\nScene.prototype._renderMultiviewToSingleView = function (camera) {\n    // Multiview is only able to be displayed directly for API's such as webXR\n    // This displays a multiview image by rendering to the multiview image and then\n    // copying the result into the sub cameras instead of rendering them and proceeding as normal from there\n    // Render to a multiview texture\n    camera._resizeOrCreateMultiviewTexture(camera._rigPostProcess && camera._rigPostProcess && camera._rigPostProcess.width > 0 ? camera._rigPostProcess.width : this.getEngine().getRenderWidth(true), camera._rigPostProcess && camera._rigPostProcess && camera._rigPostProcess.height > 0 ? camera._rigPostProcess.height : this.getEngine().getRenderHeight(true));\n    if (!this._multiviewSceneUbo) {\n        this._createMultiviewUbo();\n    }\n    camera.outputRenderTarget = camera._multiviewTexture;\n    this._renderForCamera(camera);\n    camera.outputRenderTarget = null;\n    // Consume the multiview texture through a shader for each eye\n    for (var index = 0; index < camera._rigCameras.length; index++) {\n        var engine = this.getEngine();\n        this._activeCamera = camera._rigCameras[index];\n        engine.setViewport(this._activeCamera.viewport);\n        if (this.postProcessManager) {\n            this.postProcessManager._prepareFrame();\n            this.postProcessManager._finalizeFrame(this._activeCamera.isIntermediate);\n        }\n    }\n};\n//# sourceMappingURL=engine.multiview.js.map","import { InternalTexture, InternalTextureSource } from \"../../Materials/Textures/internalTexture.js\";\nimport { Logger } from \"../../Misc/logger.js\";\nimport { Tools } from \"../../Misc/tools.js\";\n\nimport { ThinEngine } from \"../thinEngine.js\";\nThinEngine.prototype.updateRawTexture = function (texture, data, format, invertY, compression, type, useSRGBBuffer) {\n    if (compression === void 0) { compression = null; }\n    if (type === void 0) { type = 0; }\n    if (useSRGBBuffer === void 0) { useSRGBBuffer = false; }\n    if (!texture) {\n        return;\n    }\n    // Babylon's internalSizedFomat but gl's texImage2D internalFormat\n    var internalSizedFomat = this._getRGBABufferInternalSizedFormat(type, format, useSRGBBuffer);\n    // Babylon's internalFormat but gl's texImage2D format\n    var internalFormat = this._getInternalFormat(format);\n    var textureType = this._getWebGLTextureType(type);\n    this._bindTextureDirectly(this._gl.TEXTURE_2D, texture, true);\n    this._unpackFlipY(invertY === undefined ? true : invertY ? true : false);\n    if (!this._doNotHandleContextLost) {\n        texture._bufferView = data;\n        texture.format = format;\n        texture.type = type;\n        texture.invertY = invertY;\n        texture._compression = compression;\n    }\n    if (texture.width % 4 !== 0) {\n        this._gl.pixelStorei(this._gl.UNPACK_ALIGNMENT, 1);\n    }\n    if (compression && data) {\n        this._gl.compressedTexImage2D(this._gl.TEXTURE_2D, 0, this.getCaps().s3tc[compression], texture.width, texture.height, 0, data);\n    }\n    else {\n        this._gl.texImage2D(this._gl.TEXTURE_2D, 0, internalSizedFomat, texture.width, texture.height, 0, internalFormat, textureType, data);\n    }\n    if (texture.generateMipMaps) {\n        this._gl.generateMipmap(this._gl.TEXTURE_2D);\n    }\n    this._bindTextureDirectly(this._gl.TEXTURE_2D, null);\n    //  this.resetTextureCache();\n    texture.isReady = true;\n};\nThinEngine.prototype.createRawTexture = function (data, width, height, format, generateMipMaps, invertY, samplingMode, compression, type, \n// eslint-disable-next-line @typescript-eslint/no-unused-vars\ncreationFlags, useSRGBBuffer) {\n    if (compression === void 0) { compression = null; }\n    if (type === void 0) { type = 0; }\n    if (creationFlags === void 0) { creationFlags = 0; }\n    if (useSRGBBuffer === void 0) { useSRGBBuffer = false; }\n    var texture = new InternalTexture(this, InternalTextureSource.Raw);\n    texture.baseWidth = width;\n    texture.baseHeight = height;\n    texture.width = width;\n    texture.height = height;\n    texture.format = format;\n    texture.generateMipMaps = generateMipMaps;\n    texture.samplingMode = samplingMode;\n    texture.invertY = invertY;\n    texture._compression = compression;\n    texture.type = type;\n    texture._useSRGBBuffer = this._getUseSRGBBuffer(useSRGBBuffer, !generateMipMaps);\n    if (!this._doNotHandleContextLost) {\n        texture._bufferView = data;\n    }\n    this.updateRawTexture(texture, data, format, invertY, compression, type, texture._useSRGBBuffer);\n    this._bindTextureDirectly(this._gl.TEXTURE_2D, texture, true);\n    // Filters\n    var filters = this._getSamplingParameters(samplingMode, generateMipMaps);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MAG_FILTER, filters.mag);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MIN_FILTER, filters.min);\n    if (generateMipMaps) {\n        this._gl.generateMipmap(this._gl.TEXTURE_2D);\n    }\n    this._bindTextureDirectly(this._gl.TEXTURE_2D, null);\n    this._internalTexturesCache.push(texture);\n    return texture;\n};\nThinEngine.prototype.createRawCubeTexture = function (data, size, format, type, generateMipMaps, invertY, samplingMode, compression) {\n    if (compression === void 0) { compression = null; }\n    var gl = this._gl;\n    var texture = new InternalTexture(this, InternalTextureSource.CubeRaw);\n    texture.isCube = true;\n    texture.format = format;\n    texture.type = type;\n    if (!this._doNotHandleContextLost) {\n        texture._bufferViewArray = data;\n    }\n    var textureType = this._getWebGLTextureType(type);\n    var internalFormat = this._getInternalFormat(format);\n    if (internalFormat === gl.RGB) {\n        internalFormat = gl.RGBA;\n    }\n    // Mipmap generation needs a sized internal format that is both color-renderable and texture-filterable\n    if (textureType === gl.FLOAT && !this._caps.textureFloatLinearFiltering) {\n        generateMipMaps = false;\n        samplingMode = 1;\n        Logger.Warn(\"Float texture filtering is not supported. Mipmap generation and sampling mode are forced to false and TEXTURE_NEAREST_SAMPLINGMODE, respectively.\");\n    }\n    else if (textureType === this._gl.HALF_FLOAT_OES && !this._caps.textureHalfFloatLinearFiltering) {\n        generateMipMaps = false;\n        samplingMode = 1;\n        Logger.Warn(\"Half float texture filtering is not supported. Mipmap generation and sampling mode are forced to false and TEXTURE_NEAREST_SAMPLINGMODE, respectively.\");\n    }\n    else if (textureType === gl.FLOAT && !this._caps.textureFloatRender) {\n        generateMipMaps = false;\n        Logger.Warn(\"Render to float textures is not supported. Mipmap generation forced to false.\");\n    }\n    else if (textureType === gl.HALF_FLOAT && !this._caps.colorBufferFloat) {\n        generateMipMaps = false;\n        Logger.Warn(\"Render to half float textures is not supported. Mipmap generation forced to false.\");\n    }\n    var width = size;\n    var height = width;\n    texture.width = width;\n    texture.height = height;\n    // Double check on POT to generate Mips.\n    var isPot = !this.needPOTTextures || (Tools.IsExponentOfTwo(texture.width) && Tools.IsExponentOfTwo(texture.height));\n    if (!isPot) {\n        generateMipMaps = false;\n    }\n    // Upload data if needed. The texture won't be ready until then.\n    if (data) {\n        this.updateRawCubeTexture(texture, data, format, type, invertY, compression);\n    }\n    this._bindTextureDirectly(this._gl.TEXTURE_CUBE_MAP, texture, true);\n    // Filters\n    if (data && generateMipMaps) {\n        this._gl.generateMipmap(this._gl.TEXTURE_CUBE_MAP);\n    }\n    var filters = this._getSamplingParameters(samplingMode, generateMipMaps);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, filters.mag);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, filters.min);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    this._bindTextureDirectly(gl.TEXTURE_CUBE_MAP, null);\n    texture.generateMipMaps = generateMipMaps;\n    texture.samplingMode = samplingMode;\n    return texture;\n};\nThinEngine.prototype.updateRawCubeTexture = function (texture, data, format, type, invertY, compression, level) {\n    if (compression === void 0) { compression = null; }\n    if (level === void 0) { level = 0; }\n    texture._bufferViewArray = data;\n    texture.format = format;\n    texture.type = type;\n    texture.invertY = invertY;\n    texture._compression = compression;\n    var gl = this._gl;\n    var textureType = this._getWebGLTextureType(type);\n    var internalFormat = this._getInternalFormat(format);\n    var internalSizedFomat = this._getRGBABufferInternalSizedFormat(type);\n    var needConversion = false;\n    if (internalFormat === gl.RGB) {\n        internalFormat = gl.RGBA;\n        needConversion = true;\n    }\n    this._bindTextureDirectly(gl.TEXTURE_CUBE_MAP, texture, true);\n    this._unpackFlipY(invertY === undefined ? true : invertY ? true : false);\n    if (texture.width % 4 !== 0) {\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\n    }\n    // Data are known to be in +X +Y +Z -X -Y -Z\n    for (var faceIndex = 0; faceIndex < 6; faceIndex++) {\n        var faceData = data[faceIndex];\n        if (compression) {\n            gl.compressedTexImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex, level, this.getCaps().s3tc[compression], texture.width, texture.height, 0, faceData);\n        }\n        else {\n            if (needConversion) {\n                faceData = _convertRGBtoRGBATextureData(faceData, texture.width, texture.height, type);\n            }\n            gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex, level, internalSizedFomat, texture.width, texture.height, 0, internalFormat, textureType, faceData);\n        }\n    }\n    var isPot = !this.needPOTTextures || (Tools.IsExponentOfTwo(texture.width) && Tools.IsExponentOfTwo(texture.height));\n    if (isPot && texture.generateMipMaps && level === 0) {\n        this._gl.generateMipmap(this._gl.TEXTURE_CUBE_MAP);\n    }\n    this._bindTextureDirectly(this._gl.TEXTURE_CUBE_MAP, null);\n    // this.resetTextureCache();\n    texture.isReady = true;\n};\nThinEngine.prototype.createRawCubeTextureFromUrl = function (url, scene, size, format, type, noMipmap, callback, mipmapGenerator, onLoad, onError, samplingMode, invertY) {\n    var _this = this;\n    if (onLoad === void 0) { onLoad = null; }\n    if (onError === void 0) { onError = null; }\n    if (samplingMode === void 0) { samplingMode = 3; }\n    if (invertY === void 0) { invertY = false; }\n    var gl = this._gl;\n    var texture = this.createRawCubeTexture(null, size, format, type, !noMipmap, invertY, samplingMode, null);\n    scene === null || scene === void 0 ? void 0 : scene._addPendingData(texture);\n    texture.url = url;\n    this._internalTexturesCache.push(texture);\n    var onerror = function (request, exception) {\n        scene === null || scene === void 0 ? void 0 : scene._removePendingData(texture);\n        if (onError && request) {\n            onError(request.status + \" \" + request.statusText, exception);\n        }\n    };\n    var internalCallback = function (data) {\n        var width = texture.width;\n        var faceDataArrays = callback(data);\n        if (!faceDataArrays) {\n            return;\n        }\n        if (mipmapGenerator) {\n            var textureType = _this._getWebGLTextureType(type);\n            var internalFormat = _this._getInternalFormat(format);\n            var internalSizedFomat = _this._getRGBABufferInternalSizedFormat(type);\n            var needConversion = false;\n            if (internalFormat === gl.RGB) {\n                internalFormat = gl.RGBA;\n                needConversion = true;\n            }\n            _this._bindTextureDirectly(gl.TEXTURE_CUBE_MAP, texture, true);\n            _this._unpackFlipY(false);\n            var mipData = mipmapGenerator(faceDataArrays);\n            for (var level = 0; level < mipData.length; level++) {\n                var mipSize = width >> level;\n                for (var faceIndex = 0; faceIndex < 6; faceIndex++) {\n                    var mipFaceData = mipData[level][faceIndex];\n                    if (needConversion) {\n                        mipFaceData = _convertRGBtoRGBATextureData(mipFaceData, mipSize, mipSize, type);\n                    }\n                    gl.texImage2D(faceIndex, level, internalSizedFomat, mipSize, mipSize, 0, internalFormat, textureType, mipFaceData);\n                }\n            }\n            _this._bindTextureDirectly(gl.TEXTURE_CUBE_MAP, null);\n        }\n        else {\n            _this.updateRawCubeTexture(texture, faceDataArrays, format, type, invertY);\n        }\n        texture.isReady = true;\n        // this.resetTextureCache();\n        scene === null || scene === void 0 ? void 0 : scene._removePendingData(texture);\n        texture.onLoadedObservable.notifyObservers(texture);\n        texture.onLoadedObservable.clear();\n        if (onLoad) {\n            onLoad();\n        }\n    };\n    this._loadFile(url, function (data) {\n        internalCallback(data);\n    }, undefined, scene === null || scene === void 0 ? void 0 : scene.offlineProvider, true, onerror);\n    return texture;\n};\n/**\n * @param rgbData\n * @param width\n * @param height\n * @param textureType\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction _convertRGBtoRGBATextureData(rgbData, width, height, textureType) {\n    // Create new RGBA data container.\n    var rgbaData;\n    var val1 = 1;\n    if (textureType === 1) {\n        rgbaData = new Float32Array(width * height * 4);\n    }\n    else if (textureType === 2) {\n        rgbaData = new Uint16Array(width * height * 4);\n        val1 = 15360; // 15360 is the encoding of 1 in half float\n    }\n    else if (textureType === 7) {\n        rgbaData = new Uint32Array(width * height * 4);\n    }\n    else {\n        rgbaData = new Uint8Array(width * height * 4);\n    }\n    // Convert each pixel.\n    for (var x = 0; x < width; x++) {\n        for (var y = 0; y < height; y++) {\n            var index = (y * width + x) * 3;\n            var newIndex = (y * width + x) * 4;\n            // Map Old Value to new value.\n            rgbaData[newIndex + 0] = rgbData[index + 0];\n            rgbaData[newIndex + 1] = rgbData[index + 1];\n            rgbaData[newIndex + 2] = rgbData[index + 2];\n            // Add fully opaque alpha channel.\n            rgbaData[newIndex + 3] = val1;\n        }\n    }\n    return rgbaData;\n}\n/**\n * Create a function for createRawTexture3D/createRawTexture2DArray\n * @param is3D true for TEXTURE_3D and false for TEXTURE_2D_ARRAY\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction _makeCreateRawTextureFunction(is3D) {\n    return function (data, width, height, depth, format, generateMipMaps, invertY, samplingMode, compression, textureType) {\n        if (compression === void 0) { compression = null; }\n        if (textureType === void 0) { textureType = 0; }\n        var target = is3D ? this._gl.TEXTURE_3D : this._gl.TEXTURE_2D_ARRAY;\n        var source = is3D ? InternalTextureSource.Raw3D : InternalTextureSource.Raw2DArray;\n        var texture = new InternalTexture(this, source);\n        texture.baseWidth = width;\n        texture.baseHeight = height;\n        texture.baseDepth = depth;\n        texture.width = width;\n        texture.height = height;\n        texture.depth = depth;\n        texture.format = format;\n        texture.type = textureType;\n        texture.generateMipMaps = generateMipMaps;\n        texture.samplingMode = samplingMode;\n        if (is3D) {\n            texture.is3D = true;\n        }\n        else {\n            texture.is2DArray = true;\n        }\n        if (!this._doNotHandleContextLost) {\n            texture._bufferView = data;\n        }\n        if (is3D) {\n            this.updateRawTexture3D(texture, data, format, invertY, compression, textureType);\n        }\n        else {\n            this.updateRawTexture2DArray(texture, data, format, invertY, compression, textureType);\n        }\n        this._bindTextureDirectly(target, texture, true);\n        // Filters\n        var filters = this._getSamplingParameters(samplingMode, generateMipMaps);\n        this._gl.texParameteri(target, this._gl.TEXTURE_MAG_FILTER, filters.mag);\n        this._gl.texParameteri(target, this._gl.TEXTURE_MIN_FILTER, filters.min);\n        if (generateMipMaps) {\n            this._gl.generateMipmap(target);\n        }\n        this._bindTextureDirectly(target, null);\n        this._internalTexturesCache.push(texture);\n        return texture;\n    };\n}\nThinEngine.prototype.createRawTexture2DArray = _makeCreateRawTextureFunction(false);\nThinEngine.prototype.createRawTexture3D = _makeCreateRawTextureFunction(true);\n/**\n * Create a function for updateRawTexture3D/updateRawTexture2DArray\n * @param is3D true for TEXTURE_3D and false for TEXTURE_2D_ARRAY\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction _makeUpdateRawTextureFunction(is3D) {\n    return function (texture, data, format, invertY, compression, textureType) {\n        if (compression === void 0) { compression = null; }\n        if (textureType === void 0) { textureType = 0; }\n        var target = is3D ? this._gl.TEXTURE_3D : this._gl.TEXTURE_2D_ARRAY;\n        var internalType = this._getWebGLTextureType(textureType);\n        var internalFormat = this._getInternalFormat(format);\n        var internalSizedFomat = this._getRGBABufferInternalSizedFormat(textureType, format);\n        this._bindTextureDirectly(target, texture, true);\n        this._unpackFlipY(invertY === undefined ? true : invertY ? true : false);\n        if (!this._doNotHandleContextLost) {\n            texture._bufferView = data;\n            texture.format = format;\n            texture.invertY = invertY;\n            texture._compression = compression;\n        }\n        if (texture.width % 4 !== 0) {\n            this._gl.pixelStorei(this._gl.UNPACK_ALIGNMENT, 1);\n        }\n        if (compression && data) {\n            this._gl.compressedTexImage3D(target, 0, this.getCaps().s3tc[compression], texture.width, texture.height, texture.depth, 0, data);\n        }\n        else {\n            this._gl.texImage3D(target, 0, internalSizedFomat, texture.width, texture.height, texture.depth, 0, internalFormat, internalType, data);\n        }\n        if (texture.generateMipMaps) {\n            this._gl.generateMipmap(target);\n        }\n        this._bindTextureDirectly(target, null);\n        // this.resetTextureCache();\n        texture.isReady = true;\n    };\n}\nThinEngine.prototype.updateRawTexture2DArray = _makeUpdateRawTextureFunction(false);\nThinEngine.prototype.updateRawTexture3D = _makeUpdateRawTextureFunction(true);\n//# sourceMappingURL=engine.rawTexture.js.map","import { ThinEngine } from \"../../Engines/thinEngine.js\";\n\n/**\n * Allocate a typed array depending on a texture type. Optionally can copy existing data in the buffer.\n * @param type type of the texture\n * @param sizeOrDstBuffer size of the array OR an existing buffer that will be used as the destination of the copy (if copyBuffer is provided)\n * @param sizeInBytes true if the size of the array is given in bytes, false if it is the number of elements of the array\n * @param copyBuffer if provided, buffer to copy into the destination buffer (either a newly allocated buffer if sizeOrDstBuffer is a number or use sizeOrDstBuffer as the destination buffer otherwise)\n * @returns the allocated buffer or sizeOrDstBuffer if the latter is an ArrayBuffer\n */\nexport function allocateAndCopyTypedBuffer(type, sizeOrDstBuffer, sizeInBytes, copyBuffer) {\n    if (sizeInBytes === void 0) { sizeInBytes = false; }\n    switch (type) {\n        case 3: {\n            var buffer_1 = sizeOrDstBuffer instanceof ArrayBuffer ? new Int8Array(sizeOrDstBuffer) : new Int8Array(sizeOrDstBuffer);\n            if (copyBuffer) {\n                buffer_1.set(new Int8Array(copyBuffer));\n            }\n            return buffer_1;\n        }\n        case 0: {\n            var buffer_2 = sizeOrDstBuffer instanceof ArrayBuffer ? new Uint8Array(sizeOrDstBuffer) : new Uint8Array(sizeOrDstBuffer);\n            if (copyBuffer) {\n                buffer_2.set(new Uint8Array(copyBuffer));\n            }\n            return buffer_2;\n        }\n        case 4: {\n            var buffer_3 = sizeOrDstBuffer instanceof ArrayBuffer ? new Int16Array(sizeOrDstBuffer) : new Int16Array(sizeInBytes ? sizeOrDstBuffer / 2 : sizeOrDstBuffer);\n            if (copyBuffer) {\n                buffer_3.set(new Int16Array(copyBuffer));\n            }\n            return buffer_3;\n        }\n        case 5:\n        case 8:\n        case 9:\n        case 10:\n        case 2: {\n            var buffer_4 = sizeOrDstBuffer instanceof ArrayBuffer ? new Uint16Array(sizeOrDstBuffer) : new Uint16Array(sizeInBytes ? sizeOrDstBuffer / 2 : sizeOrDstBuffer);\n            if (copyBuffer) {\n                buffer_4.set(new Uint16Array(copyBuffer));\n            }\n            return buffer_4;\n        }\n        case 6: {\n            var buffer_5 = sizeOrDstBuffer instanceof ArrayBuffer ? new Int32Array(sizeOrDstBuffer) : new Int32Array(sizeInBytes ? sizeOrDstBuffer / 4 : sizeOrDstBuffer);\n            if (copyBuffer) {\n                buffer_5.set(new Int32Array(copyBuffer));\n            }\n            return buffer_5;\n        }\n        case 7:\n        case 11:\n        case 12:\n        case 13:\n        case 14:\n        case 15: {\n            var buffer_6 = sizeOrDstBuffer instanceof ArrayBuffer ? new Uint32Array(sizeOrDstBuffer) : new Uint32Array(sizeInBytes ? sizeOrDstBuffer / 4 : sizeOrDstBuffer);\n            if (copyBuffer) {\n                buffer_6.set(new Uint32Array(copyBuffer));\n            }\n            return buffer_6;\n        }\n        case 1: {\n            var buffer_7 = sizeOrDstBuffer instanceof ArrayBuffer ? new Float32Array(sizeOrDstBuffer) : new Float32Array(sizeInBytes ? sizeOrDstBuffer / 4 : sizeOrDstBuffer);\n            if (copyBuffer) {\n                buffer_7.set(new Float32Array(copyBuffer));\n            }\n            return buffer_7;\n        }\n    }\n    var buffer = sizeOrDstBuffer instanceof ArrayBuffer ? new Uint8Array(sizeOrDstBuffer) : new Uint8Array(sizeOrDstBuffer);\n    if (copyBuffer) {\n        buffer.set(new Uint8Array(copyBuffer));\n    }\n    return buffer;\n}\nThinEngine.prototype._readTexturePixelsSync = function (texture, width, height, faceIndex, level, buffer, flushRenderer, noDataConversion, x, y) {\n    var _a, _b;\n    if (faceIndex === void 0) { faceIndex = -1; }\n    if (level === void 0) { level = 0; }\n    if (buffer === void 0) { buffer = null; }\n    if (flushRenderer === void 0) { flushRenderer = true; }\n    if (noDataConversion === void 0) { noDataConversion = false; }\n    if (x === void 0) { x = 0; }\n    if (y === void 0) { y = 0; }\n    var gl = this._gl;\n    if (!gl) {\n        throw new Error(\"Engine does not have gl rendering context.\");\n    }\n    if (!this._dummyFramebuffer) {\n        var dummy = gl.createFramebuffer();\n        if (!dummy) {\n            throw new Error(\"Unable to create dummy framebuffer\");\n        }\n        this._dummyFramebuffer = dummy;\n    }\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._dummyFramebuffer);\n    if (faceIndex > -1) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex, (_a = texture._hardwareTexture) === null || _a === void 0 ? void 0 : _a.underlyingResource, level);\n    }\n    else {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, (_b = texture._hardwareTexture) === null || _b === void 0 ? void 0 : _b.underlyingResource, level);\n    }\n    var readType = texture.type !== undefined ? this._getWebGLTextureType(texture.type) : gl.UNSIGNED_BYTE;\n    if (!noDataConversion) {\n        switch (readType) {\n            case gl.UNSIGNED_BYTE:\n                if (!buffer) {\n                    buffer = new Uint8Array(4 * width * height);\n                }\n                readType = gl.UNSIGNED_BYTE;\n                break;\n            default:\n                if (!buffer) {\n                    buffer = new Float32Array(4 * width * height);\n                }\n                readType = gl.FLOAT;\n                break;\n        }\n    }\n    else if (!buffer) {\n        buffer = allocateAndCopyTypedBuffer(texture.type, 4 * width * height);\n    }\n    if (flushRenderer) {\n        this.flushFramebuffer();\n    }\n    gl.readPixels(x, y, width, height, gl.RGBA, readType, buffer);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this._currentFramebuffer);\n    return buffer;\n};\nThinEngine.prototype._readTexturePixels = function (texture, width, height, faceIndex, level, buffer, flushRenderer, noDataConversion, x, y) {\n    if (faceIndex === void 0) { faceIndex = -1; }\n    if (level === void 0) { level = 0; }\n    if (buffer === void 0) { buffer = null; }\n    if (flushRenderer === void 0) { flushRenderer = true; }\n    if (noDataConversion === void 0) { noDataConversion = false; }\n    if (x === void 0) { x = 0; }\n    if (y === void 0) { y = 0; }\n    return Promise.resolve(this._readTexturePixelsSync(texture, width, height, faceIndex, level, buffer, flushRenderer, noDataConversion, x, y));\n};\n//# sourceMappingURL=engine.readTexture.js.map","import { __extends } from \"tslib\";\nimport { RenderTargetWrapper } from \"../renderTargetWrapper.js\";\n/** @hidden */\nvar WebGLRenderTargetWrapper = /** @class */ (function (_super) {\n    __extends(WebGLRenderTargetWrapper, _super);\n    function WebGLRenderTargetWrapper(isMulti, isCube, size, engine, context) {\n        var _this = _super.call(this, isMulti, isCube, size, engine) || this;\n        _this._framebuffer = null;\n        _this._depthStencilBuffer = null;\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        _this._MSAAFramebuffer = null;\n        // Multiview\n        _this._colorTextureArray = null;\n        _this._depthStencilTextureArray = null;\n        _this._context = context;\n        return _this;\n    }\n    WebGLRenderTargetWrapper.prototype._cloneRenderTargetWrapper = function () {\n        var rtw = null;\n        if (this._colorTextureArray && this._depthStencilTextureArray) {\n            rtw = this._engine.createMultiviewRenderTargetTexture(this.width, this.height);\n            rtw.texture.isReady = true;\n        }\n        else {\n            rtw = _super.prototype._cloneRenderTargetWrapper.call(this);\n        }\n        return rtw;\n    };\n    WebGLRenderTargetWrapper.prototype._swapRenderTargetWrapper = function (target) {\n        _super.prototype._swapRenderTargetWrapper.call(this, target);\n        target._framebuffer = this._framebuffer;\n        target._depthStencilBuffer = this._depthStencilBuffer;\n        target._MSAAFramebuffer = this._MSAAFramebuffer;\n        target._colorTextureArray = this._colorTextureArray;\n        target._depthStencilTextureArray = this._depthStencilTextureArray;\n        this._framebuffer = this._depthStencilBuffer = this._MSAAFramebuffer = this._colorTextureArray = this._depthStencilTextureArray = null;\n    };\n    /**\n     * Shares the depth buffer of this render target with another render target.\n     * @hidden\n     * @param renderTarget Destination renderTarget\n     */\n    WebGLRenderTargetWrapper.prototype._shareDepth = function (renderTarget) {\n        _super.prototype._shareDepth.call(this, renderTarget);\n        var gl = this._context;\n        var depthbuffer = this._depthStencilBuffer;\n        var framebuffer = renderTarget._framebuffer;\n        if (renderTarget._depthStencilBuffer) {\n            gl.deleteRenderbuffer(renderTarget._depthStencilBuffer);\n        }\n        renderTarget._depthStencilBuffer = this._depthStencilBuffer;\n        this._engine._bindUnboundFramebuffer(framebuffer);\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthbuffer);\n        this._engine._bindUnboundFramebuffer(null);\n    };\n    /**\n     * Binds a texture to this render target on a specific attachment\n     * @param texture The texture to bind to the framebuffer\n     * @param attachmentIndex Index of the attachment\n     * @param faceIndex The face of the texture to render to in case of cube texture\n     * @param lodLevel defines the lod level to bind to the frame buffer\n     */\n    WebGLRenderTargetWrapper.prototype._bindTextureRenderTarget = function (texture, attachmentIndex, faceIndex, lodLevel) {\n        if (attachmentIndex === void 0) { attachmentIndex = 0; }\n        if (faceIndex === void 0) { faceIndex = -1; }\n        if (lodLevel === void 0) { lodLevel = 0; }\n        if (!texture._hardwareTexture) {\n            return;\n        }\n        var gl = this._context;\n        var framebuffer = this._framebuffer;\n        var currentFB = this._engine._currentFramebuffer;\n        this._engine._bindUnboundFramebuffer(framebuffer);\n        var attachment = gl[this._engine.webGLVersion > 1 ? \"COLOR_ATTACHMENT\" + attachmentIndex : \"COLOR_ATTACHMENT\" + attachmentIndex + \"_WEBGL\"];\n        var target = faceIndex !== -1 ? gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex : gl.TEXTURE_2D;\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, attachment, target, texture._hardwareTexture.underlyingResource, lodLevel);\n        this._engine._bindUnboundFramebuffer(currentFB);\n    };\n    /**\n     * Set a texture in the textures array\n     * @param texture the texture to set\n     * @param index the index in the textures array to set\n     * @param disposePrevious If this function should dispose the previous texture\n     */\n    WebGLRenderTargetWrapper.prototype.setTexture = function (texture, index, disposePrevious) {\n        if (index === void 0) { index = 0; }\n        if (disposePrevious === void 0) { disposePrevious = true; }\n        _super.prototype.setTexture.call(this, texture, index, disposePrevious);\n        this._bindTextureRenderTarget(texture, index);\n    };\n    WebGLRenderTargetWrapper.prototype.dispose = function (disposeOnlyFramebuffers) {\n        if (disposeOnlyFramebuffers === void 0) { disposeOnlyFramebuffers = false; }\n        var gl = this._context;\n        if (!disposeOnlyFramebuffers) {\n            if (this._colorTextureArray) {\n                this._context.deleteTexture(this._colorTextureArray);\n                this._colorTextureArray = null;\n            }\n            if (this._depthStencilTextureArray) {\n                this._context.deleteTexture(this._depthStencilTextureArray);\n                this._depthStencilTextureArray = null;\n            }\n        }\n        if (this._framebuffer) {\n            gl.deleteFramebuffer(this._framebuffer);\n            this._framebuffer = null;\n        }\n        if (this._depthStencilBuffer) {\n            gl.deleteRenderbuffer(this._depthStencilBuffer);\n            this._depthStencilBuffer = null;\n        }\n        if (this._MSAAFramebuffer) {\n            gl.deleteFramebuffer(this._MSAAFramebuffer);\n            this._MSAAFramebuffer = null;\n        }\n        _super.prototype.dispose.call(this, disposeOnlyFramebuffers);\n    };\n    return WebGLRenderTargetWrapper;\n}(RenderTargetWrapper));\nexport { WebGLRenderTargetWrapper };\n//# sourceMappingURL=webGLRenderTargetWrapper.js.map","import { __assign } from \"tslib\";\nimport { InternalTexture, InternalTextureSource } from \"../../Materials/Textures/internalTexture.js\";\nimport { Logger } from \"../../Misc/logger.js\";\nimport { ThinEngine } from \"../thinEngine.js\";\nimport { WebGLRenderTargetWrapper } from \"../WebGL/webGLRenderTargetWrapper.js\";\n\nThinEngine.prototype._createHardwareRenderTargetWrapper = function (isMulti, isCube, size) {\n    var rtWrapper = new WebGLRenderTargetWrapper(isMulti, isCube, size, this, this._gl);\n    this._renderTargetWrapperCache.push(rtWrapper);\n    return rtWrapper;\n};\nThinEngine.prototype.createRenderTargetTexture = function (size, options) {\n    var rtWrapper = this._createHardwareRenderTargetWrapper(false, false, size);\n    var fullOptions = {};\n    if (options !== undefined && typeof options === \"object\") {\n        fullOptions.generateDepthBuffer = !!options.generateDepthBuffer;\n        fullOptions.generateStencilBuffer = !!options.generateStencilBuffer;\n        fullOptions.noColorTarget = !!options.noColorTarget;\n    }\n    else {\n        fullOptions.generateDepthBuffer = true;\n        fullOptions.generateStencilBuffer = false;\n        fullOptions.noColorTarget = false;\n    }\n    var texture = fullOptions.noColorTarget ? null : this._createInternalTexture(size, options, true, InternalTextureSource.RenderTarget);\n    var width = size.width || size;\n    var height = size.height || size;\n    var currentFrameBuffer = this._currentFramebuffer;\n    var gl = this._gl;\n    // Create the framebuffer\n    var framebuffer = gl.createFramebuffer();\n    this._bindUnboundFramebuffer(framebuffer);\n    rtWrapper._depthStencilBuffer = this._setupFramebufferDepthAttachments(fullOptions.generateStencilBuffer ? true : false, fullOptions.generateDepthBuffer, width, height);\n    // No need to rebind on every frame\n    if (texture && !texture.is2DArray) {\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture._hardwareTexture.underlyingResource, 0);\n    }\n    this._bindUnboundFramebuffer(currentFrameBuffer);\n    rtWrapper._framebuffer = framebuffer;\n    rtWrapper._generateDepthBuffer = fullOptions.generateDepthBuffer;\n    rtWrapper._generateStencilBuffer = fullOptions.generateStencilBuffer ? true : false;\n    rtWrapper.setTextures(texture);\n    return rtWrapper;\n};\nThinEngine.prototype.createDepthStencilTexture = function (size, options, rtWrapper) {\n    if (options.isCube) {\n        var width = size.width || size;\n        return this._createDepthStencilCubeTexture(width, options, rtWrapper);\n    }\n    else {\n        return this._createDepthStencilTexture(size, options, rtWrapper);\n    }\n};\nThinEngine.prototype._createDepthStencilTexture = function (size, options, rtWrapper) {\n    var gl = this._gl;\n    var layers = size.layers || 0;\n    var target = layers !== 0 ? gl.TEXTURE_2D_ARRAY : gl.TEXTURE_2D;\n    var internalTexture = new InternalTexture(this, InternalTextureSource.DepthStencil);\n    if (!this._caps.depthTextureExtension) {\n        Logger.Error(\"Depth texture is not supported by your browser or hardware.\");\n        return internalTexture;\n    }\n    var internalOptions = __assign({ bilinearFiltering: false, comparisonFunction: 0, generateStencil: false }, options);\n    this._bindTextureDirectly(target, internalTexture, true);\n    this._setupDepthStencilTexture(internalTexture, size, internalOptions.generateStencil, internalOptions.comparisonFunction === 0 ? false : internalOptions.bilinearFiltering, internalOptions.comparisonFunction);\n    internalTexture.format = internalOptions.generateStencil ? 13 : 16;\n    rtWrapper._depthStencilTexture = internalTexture;\n    rtWrapper._depthStencilTextureWithStencil = internalOptions.generateStencil;\n    var type = internalOptions.generateStencil ? gl.UNSIGNED_INT_24_8 : gl.UNSIGNED_INT;\n    var internalFormat = internalOptions.generateStencil ? gl.DEPTH_STENCIL : gl.DEPTH_COMPONENT;\n    var sizedFormat = internalFormat;\n    if (this.webGLVersion > 1) {\n        sizedFormat = internalOptions.generateStencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n    }\n    if (internalTexture.is2DArray) {\n        gl.texImage3D(target, 0, sizedFormat, internalTexture.width, internalTexture.height, layers, 0, internalFormat, type, null);\n    }\n    else {\n        gl.texImage2D(target, 0, sizedFormat, internalTexture.width, internalTexture.height, 0, internalFormat, type, null);\n    }\n    this._bindTextureDirectly(target, null);\n    this._internalTexturesCache.push(internalTexture);\n    return internalTexture;\n};\nThinEngine.prototype.updateRenderTargetTextureSampleCount = function (rtWrapper, samples) {\n    if (this.webGLVersion < 2 || !rtWrapper || !rtWrapper.texture) {\n        return 1;\n    }\n    if (rtWrapper.samples === samples) {\n        return samples;\n    }\n    var gl = this._gl;\n    samples = Math.min(samples, this.getCaps().maxMSAASamples);\n    // Dispose previous render buffers\n    if (rtWrapper._depthStencilBuffer) {\n        gl.deleteRenderbuffer(rtWrapper._depthStencilBuffer);\n        rtWrapper._depthStencilBuffer = null;\n    }\n    if (rtWrapper._MSAAFramebuffer) {\n        gl.deleteFramebuffer(rtWrapper._MSAAFramebuffer);\n        rtWrapper._MSAAFramebuffer = null;\n    }\n    var hardwareTexture = rtWrapper.texture._hardwareTexture;\n    if (hardwareTexture._MSAARenderBuffer) {\n        gl.deleteRenderbuffer(hardwareTexture._MSAARenderBuffer);\n        hardwareTexture._MSAARenderBuffer = null;\n    }\n    if (samples > 1 && gl.renderbufferStorageMultisample) {\n        var framebuffer = gl.createFramebuffer();\n        if (!framebuffer) {\n            throw new Error(\"Unable to create multi sampled framebuffer\");\n        }\n        rtWrapper._MSAAFramebuffer = framebuffer;\n        this._bindUnboundFramebuffer(rtWrapper._MSAAFramebuffer);\n        var colorRenderbuffer = this._createRenderBuffer(rtWrapper.texture.width, rtWrapper.texture.height, samples, -1 /* not used */, this._getRGBAMultiSampleBufferFormat(rtWrapper.texture.type), gl.COLOR_ATTACHMENT0, false);\n        if (!colorRenderbuffer) {\n            throw new Error(\"Unable to create multi sampled framebuffer\");\n        }\n        hardwareTexture._MSAARenderBuffer = colorRenderbuffer;\n    }\n    else {\n        this._bindUnboundFramebuffer(rtWrapper._framebuffer);\n    }\n    rtWrapper.texture.samples = samples;\n    rtWrapper._depthStencilBuffer = this._setupFramebufferDepthAttachments(rtWrapper._generateStencilBuffer, rtWrapper._generateDepthBuffer, rtWrapper.texture.width, rtWrapper.texture.height, samples);\n    this._bindUnboundFramebuffer(null);\n    return samples;\n};\n//# sourceMappingURL=engine.renderTarget.js.map","import { __assign } from \"tslib\";\nimport { InternalTexture, InternalTextureSource } from \"../../Materials/Textures/internalTexture.js\";\nimport { Logger } from \"../../Misc/logger.js\";\n\nimport { ThinEngine } from \"../thinEngine.js\";\nThinEngine.prototype.createRenderTargetCubeTexture = function (size, options) {\n    var rtWrapper = this._createHardwareRenderTargetWrapper(false, true, size);\n    var fullOptions = __assign({ generateMipMaps: true, generateDepthBuffer: true, generateStencilBuffer: false, type: 0, samplingMode: 3, format: 5 }, options);\n    fullOptions.generateStencilBuffer = fullOptions.generateDepthBuffer && fullOptions.generateStencilBuffer;\n    if (fullOptions.type === 1 && !this._caps.textureFloatLinearFiltering) {\n        // if floating point linear (gl.FLOAT) then force to NEAREST_SAMPLINGMODE\n        fullOptions.samplingMode = 1;\n    }\n    else if (fullOptions.type === 2 && !this._caps.textureHalfFloatLinearFiltering) {\n        // if floating point linear (HALF_FLOAT) then force to NEAREST_SAMPLINGMODE\n        fullOptions.samplingMode = 1;\n    }\n    var gl = this._gl;\n    var texture = new InternalTexture(this, InternalTextureSource.RenderTarget);\n    this._bindTextureDirectly(gl.TEXTURE_CUBE_MAP, texture, true);\n    var filters = this._getSamplingParameters(fullOptions.samplingMode, fullOptions.generateMipMaps);\n    if (fullOptions.type === 1 && !this._caps.textureFloat) {\n        fullOptions.type = 0;\n        Logger.Warn(\"Float textures are not supported. Cube render target forced to TEXTURETYPE_UNESIGNED_BYTE type\");\n    }\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MAG_FILTER, filters.mag);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_MIN_FILTER, filters.min);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    for (var face = 0; face < 6; face++) {\n        gl.texImage2D(gl.TEXTURE_CUBE_MAP_POSITIVE_X + face, 0, this._getRGBABufferInternalSizedFormat(fullOptions.type, fullOptions.format), size, size, 0, this._getInternalFormat(fullOptions.format), this._getWebGLTextureType(fullOptions.type), null);\n    }\n    // Create the framebuffer\n    var framebuffer = gl.createFramebuffer();\n    this._bindUnboundFramebuffer(framebuffer);\n    rtWrapper._depthStencilBuffer = this._setupFramebufferDepthAttachments(fullOptions.generateStencilBuffer, fullOptions.generateDepthBuffer, size, size);\n    // MipMaps\n    if (fullOptions.generateMipMaps) {\n        gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\n    }\n    // Unbind\n    this._bindTextureDirectly(gl.TEXTURE_CUBE_MAP, null);\n    this._bindUnboundFramebuffer(null);\n    rtWrapper._framebuffer = framebuffer;\n    rtWrapper._generateDepthBuffer = fullOptions.generateDepthBuffer;\n    rtWrapper._generateStencilBuffer = fullOptions.generateStencilBuffer;\n    texture.width = size;\n    texture.height = size;\n    texture.isReady = true;\n    texture.isCube = true;\n    texture.samples = 1;\n    texture.generateMipMaps = fullOptions.generateMipMaps;\n    texture.samplingMode = fullOptions.samplingMode;\n    texture.type = fullOptions.type;\n    texture.format = fullOptions.format;\n    this._internalTexturesCache.push(texture);\n    rtWrapper.setTextures(texture);\n    return rtWrapper;\n};\n//# sourceMappingURL=engine.renderTargetCube.js.map","import { ThinEngine } from \"../../Engines/thinEngine.js\";\nimport { WebGLDataBuffer } from \"../../Meshes/WebGL/webGLDataBuffer.js\";\nThinEngine.prototype.createUniformBuffer = function (elements) {\n    var ubo = this._gl.createBuffer();\n    if (!ubo) {\n        throw new Error(\"Unable to create uniform buffer\");\n    }\n    var result = new WebGLDataBuffer(ubo);\n    this.bindUniformBuffer(result);\n    if (elements instanceof Float32Array) {\n        this._gl.bufferData(this._gl.UNIFORM_BUFFER, elements, this._gl.STATIC_DRAW);\n    }\n    else {\n        this._gl.bufferData(this._gl.UNIFORM_BUFFER, new Float32Array(elements), this._gl.STATIC_DRAW);\n    }\n    this.bindUniformBuffer(null);\n    result.references = 1;\n    return result;\n};\nThinEngine.prototype.createDynamicUniformBuffer = function (elements) {\n    var ubo = this._gl.createBuffer();\n    if (!ubo) {\n        throw new Error(\"Unable to create dynamic uniform buffer\");\n    }\n    var result = new WebGLDataBuffer(ubo);\n    this.bindUniformBuffer(result);\n    if (elements instanceof Float32Array) {\n        this._gl.bufferData(this._gl.UNIFORM_BUFFER, elements, this._gl.DYNAMIC_DRAW);\n    }\n    else {\n        this._gl.bufferData(this._gl.UNIFORM_BUFFER, new Float32Array(elements), this._gl.DYNAMIC_DRAW);\n    }\n    this.bindUniformBuffer(null);\n    result.references = 1;\n    return result;\n};\nThinEngine.prototype.updateUniformBuffer = function (uniformBuffer, elements, offset, count) {\n    this.bindUniformBuffer(uniformBuffer);\n    if (offset === undefined) {\n        offset = 0;\n    }\n    if (count === undefined) {\n        if (elements instanceof Float32Array) {\n            this._gl.bufferSubData(this._gl.UNIFORM_BUFFER, offset, elements);\n        }\n        else {\n            this._gl.bufferSubData(this._gl.UNIFORM_BUFFER, offset, new Float32Array(elements));\n        }\n    }\n    else {\n        if (elements instanceof Float32Array) {\n            this._gl.bufferSubData(this._gl.UNIFORM_BUFFER, 0, elements.subarray(offset, offset + count));\n        }\n        else {\n            this._gl.bufferSubData(this._gl.UNIFORM_BUFFER, 0, new Float32Array(elements).subarray(offset, offset + count));\n        }\n    }\n    this.bindUniformBuffer(null);\n};\nThinEngine.prototype.bindUniformBuffer = function (buffer) {\n    this._gl.bindBuffer(this._gl.UNIFORM_BUFFER, buffer ? buffer.underlyingResource : null);\n};\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nThinEngine.prototype.bindUniformBufferBase = function (buffer, location, name) {\n    this._gl.bindBufferBase(this._gl.UNIFORM_BUFFER, location, buffer ? buffer.underlyingResource : null);\n};\nThinEngine.prototype.bindUniformBlock = function (pipelineContext, blockName, index) {\n    var program = pipelineContext.program;\n    var uniformLocation = this._gl.getUniformBlockIndex(program, blockName);\n    if (uniformLocation !== 0xffffffff) {\n        this._gl.uniformBlockBinding(program, uniformLocation, index);\n    }\n};\n//# sourceMappingURL=engine.uniformBuffer.js.map","import { ThinEngine } from \"../../Engines/thinEngine.js\";\nThinEngine.prototype.updateVideoTexture = function (texture, video, invertY) {\n    if (!texture || texture._isDisabled) {\n        return;\n    }\n    var wasPreviouslyBound = this._bindTextureDirectly(this._gl.TEXTURE_2D, texture, true);\n    this._unpackFlipY(!invertY); // Video are upside down by default\n    try {\n        // Testing video texture support\n        if (this._videoTextureSupported === undefined) {\n            // clear old errors just in case.\n            this._gl.getError();\n            this._gl.texImage2D(this._gl.TEXTURE_2D, 0, this._gl.RGBA, this._gl.RGBA, this._gl.UNSIGNED_BYTE, video);\n            if (this._gl.getError() !== 0) {\n                this._videoTextureSupported = false;\n            }\n            else {\n                this._videoTextureSupported = true;\n            }\n        }\n        // Copy video through the current working canvas if video texture is not supported\n        if (!this._videoTextureSupported) {\n            if (!texture._workingCanvas) {\n                texture._workingCanvas = this.createCanvas(texture.width, texture.height);\n                var context_1 = texture._workingCanvas.getContext(\"2d\");\n                if (!context_1) {\n                    throw new Error(\"Unable to get 2d context\");\n                }\n                texture._workingContext = context_1;\n                texture._workingCanvas.width = texture.width;\n                texture._workingCanvas.height = texture.height;\n            }\n            texture._workingContext.clearRect(0, 0, texture.width, texture.height);\n            texture._workingContext.drawImage(video, 0, 0, video.videoWidth, video.videoHeight, 0, 0, texture.width, texture.height);\n            this._gl.texImage2D(this._gl.TEXTURE_2D, 0, this._gl.RGBA, this._gl.RGBA, this._gl.UNSIGNED_BYTE, texture._workingCanvas);\n        }\n        else {\n            this._gl.texImage2D(this._gl.TEXTURE_2D, 0, this._gl.RGBA, this._gl.RGBA, this._gl.UNSIGNED_BYTE, video);\n        }\n        if (texture.generateMipMaps) {\n            this._gl.generateMipmap(this._gl.TEXTURE_2D);\n        }\n        if (!wasPreviouslyBound) {\n            this._bindTextureDirectly(this._gl.TEXTURE_2D, null);\n        }\n        //    this.resetTextureCache();\n        texture.isReady = true;\n    }\n    catch (ex) {\n        // Something unexpected\n        // Let's disable the texture\n        texture._isDisabled = true;\n    }\n};\n//# sourceMappingURL=engine.videoTexture.js.map","import { __assign } from \"tslib\";\nimport { Engine } from \"../../Engines/engine.js\";\nimport { Size } from \"../../Maths/math.size.js\";\nimport { Observable } from \"../../Misc/observable.js\";\nimport { Tools } from \"../../Misc/tools.js\";\nimport { IsWindowObjectExist } from \"../../Misc/domManagement.js\";\nObject.defineProperty(Engine.prototype, \"isInVRExclusivePointerMode\", {\n    get: function () {\n        return this._vrExclusivePointerMode;\n    },\n    enumerable: true,\n    configurable: true,\n});\nEngine.prototype._prepareVRComponent = function () {\n    this._vrSupported = false;\n    this._vrExclusivePointerMode = false;\n    this.onVRDisplayChangedObservable = new Observable();\n    this.onVRRequestPresentComplete = new Observable();\n    this.onVRRequestPresentStart = new Observable();\n};\nEngine.prototype.isVRDevicePresent = function () {\n    return !!this._vrDisplay;\n};\nEngine.prototype.getVRDevice = function () {\n    return this._vrDisplay;\n};\nEngine.prototype.initWebVR = function () {\n    this.initWebVRAsync();\n    return this.onVRDisplayChangedObservable;\n};\nEngine.prototype.initWebVRAsync = function () {\n    var _this = this;\n    var notifyObservers = function () {\n        var eventArgs = {\n            vrDisplay: _this._vrDisplay,\n            vrSupported: _this._vrSupported,\n        };\n        _this.onVRDisplayChangedObservable.notifyObservers(eventArgs);\n        _this._webVRInitPromise = new Promise(function (res) {\n            res(eventArgs);\n        });\n    };\n    if (!this._onVrDisplayConnect) {\n        this._onVrDisplayConnect = function (event) {\n            _this._vrDisplay = event.display;\n            notifyObservers();\n        };\n        this._onVrDisplayDisconnect = function () {\n            _this._vrDisplay.cancelAnimationFrame(_this._frameHandler);\n            _this._vrDisplay = undefined;\n            _this._frameHandler = Engine.QueueNewFrame(_this._boundRenderFunction);\n            notifyObservers();\n        };\n        this._onVrDisplayPresentChange = function () {\n            _this._vrExclusivePointerMode = _this._vrDisplay && _this._vrDisplay.isPresenting;\n        };\n        var hostWindow = this.getHostWindow();\n        if (hostWindow) {\n            hostWindow.addEventListener(\"vrdisplayconnect\", this._onVrDisplayConnect);\n            hostWindow.addEventListener(\"vrdisplaydisconnect\", this._onVrDisplayDisconnect);\n            hostWindow.addEventListener(\"vrdisplaypresentchange\", this._onVrDisplayPresentChange);\n        }\n    }\n    this._webVRInitPromise = this._webVRInitPromise || this._getVRDisplaysAsync();\n    this._webVRInitPromise.then(notifyObservers);\n    return this._webVRInitPromise;\n};\nEngine.prototype._getVRDisplaysAsync = function () {\n    var _this = this;\n    return new Promise(function (res) {\n        if (navigator.getVRDisplays) {\n            navigator.getVRDisplays().then(function (devices) {\n                _this._vrSupported = true;\n                // note that devices may actually be an empty array. This is fine;\n                // we expect this._vrDisplay to be undefined in this case.\n                _this._vrDisplay = devices[0];\n                res({\n                    vrDisplay: _this._vrDisplay,\n                    vrSupported: _this._vrSupported,\n                });\n            });\n        }\n        else {\n            _this._vrDisplay = undefined;\n            _this._vrSupported = false;\n            res({\n                vrDisplay: _this._vrDisplay,\n                vrSupported: _this._vrSupported,\n            });\n        }\n    });\n};\nEngine.prototype.enableVR = function (options) {\n    var _this = this;\n    if (this._vrDisplay && !this._vrDisplay.isPresenting) {\n        var onResolved = function () {\n            _this.onVRRequestPresentComplete.notifyObservers(true);\n            _this._onVRFullScreenTriggered();\n        };\n        var onRejected = function () {\n            _this.onVRRequestPresentComplete.notifyObservers(false);\n        };\n        this.onVRRequestPresentStart.notifyObservers(this);\n        var presentationAttributes = {\n            highRefreshRate: this.vrPresentationAttributes ? this.vrPresentationAttributes.highRefreshRate : false,\n            foveationLevel: this.vrPresentationAttributes ? this.vrPresentationAttributes.foveationLevel : 1,\n            multiview: (this.getCaps().multiview || this.getCaps().oculusMultiview) && options.useMultiview,\n        };\n        this._vrDisplay\n            .requestPresent([\n            __assign({ source: this.getRenderingCanvas(), attributes: presentationAttributes }, presentationAttributes),\n        ])\n            .then(onResolved)\n            .catch(onRejected);\n    }\n};\nEngine.prototype._onVRFullScreenTriggered = function () {\n    if (this._vrDisplay && this._vrDisplay.isPresenting) {\n        //get the old size before we change\n        this._oldSize = new Size(this.getRenderWidth(), this.getRenderHeight());\n        this._oldHardwareScaleFactor = this.getHardwareScalingLevel();\n        //get the width and height, change the render size\n        var leftEye = this._vrDisplay.getEyeParameters(\"left\");\n        this.setHardwareScalingLevel(1);\n        this.setSize(leftEye.renderWidth * 2, leftEye.renderHeight);\n    }\n    else {\n        this.setHardwareScalingLevel(this._oldHardwareScaleFactor);\n        this.setSize(this._oldSize.width, this._oldSize.height);\n    }\n};\nEngine.prototype.disableVR = function () {\n    var _this = this;\n    if (this._vrDisplay && this._vrDisplay.isPresenting) {\n        this._vrDisplay\n            .exitPresent()\n            .then(function () { return _this._onVRFullScreenTriggered(); })\n            .catch(function () { return _this._onVRFullScreenTriggered(); });\n    }\n    if (IsWindowObjectExist()) {\n        window.removeEventListener(\"vrdisplaypointerrestricted\", this._onVRDisplayPointerRestricted);\n        window.removeEventListener(\"vrdisplaypointerunrestricted\", this._onVRDisplayPointerUnrestricted);\n        if (this._onVrDisplayConnect) {\n            window.removeEventListener(\"vrdisplayconnect\", this._onVrDisplayConnect);\n            if (this._onVrDisplayDisconnect) {\n                window.removeEventListener(\"vrdisplaydisconnect\", this._onVrDisplayDisconnect);\n            }\n            if (this._onVrDisplayPresentChange) {\n                window.removeEventListener(\"vrdisplaypresentchange\", this._onVrDisplayPresentChange);\n            }\n            this._onVrDisplayConnect = null;\n            this._onVrDisplayDisconnect = null;\n        }\n    }\n};\nEngine.prototype._connectVREvents = function (canvas, document) {\n    var _this = this;\n    this._onVRDisplayPointerRestricted = function () {\n        if (canvas) {\n            canvas.requestPointerLock();\n        }\n    };\n    this._onVRDisplayPointerUnrestricted = function () {\n        // Edge fix - for some reason document is not present and this is window\n        if (!document) {\n            var hostWindow = _this.getHostWindow();\n            if (hostWindow.document && hostWindow.document.exitPointerLock) {\n                hostWindow.document.exitPointerLock();\n            }\n            return;\n        }\n        if (!document.exitPointerLock) {\n            return;\n        }\n        document.exitPointerLock();\n    };\n    if (IsWindowObjectExist()) {\n        var hostWindow = this.getHostWindow();\n        hostWindow.addEventListener(\"vrdisplaypointerrestricted\", this._onVRDisplayPointerRestricted, false);\n        hostWindow.addEventListener(\"vrdisplaypointerunrestricted\", this._onVRDisplayPointerUnrestricted, false);\n    }\n};\nEngine.prototype._submitVRFrame = function () {\n    // Submit frame to the vr device, if enabled\n    if (this._vrDisplay && this._vrDisplay.isPresenting) {\n        // TODO: We should only submit the frame if we read frameData successfully.\n        try {\n            this._vrDisplay.submitFrame();\n        }\n        catch (e) {\n            Tools.Warn(\"webVR submitFrame has had an unexpected failure: \" + e);\n        }\n    }\n};\nEngine.prototype.isVRPresenting = function () {\n    return this._vrDisplay && this._vrDisplay.isPresenting;\n};\nEngine.prototype._requestVRFrame = function () {\n    this._frameHandler = Engine.QueueNewFrame(this._boundRenderFunction, this._vrDisplay);\n};\n//# sourceMappingURL=engine.webVR.js.map","/** @hidden */\nvar NativeDataStream = /** @class */ (function () {\n    function NativeDataStream() {\n        var _this = this;\n        var buffer = new ArrayBuffer(NativeDataStream.DEFAULT_BUFFER_SIZE);\n        this._uint32s = new Uint32Array(buffer);\n        this._int32s = new Int32Array(buffer);\n        this._float32s = new Float32Array(buffer);\n        this._length = NativeDataStream.DEFAULT_BUFFER_SIZE / 4;\n        this._position = 0;\n        this._nativeDataStream = new _native.NativeDataStream(function () {\n            _this._flush();\n        });\n    }\n    NativeDataStream.prototype.writeUint32 = function (value) {\n        this._flushIfNecessary(1);\n        this._uint32s[this._position++] = value;\n    };\n    NativeDataStream.prototype.writeInt32 = function (value) {\n        this._flushIfNecessary(1);\n        this._int32s[this._position++] = value;\n    };\n    NativeDataStream.prototype.writeFloat32 = function (value) {\n        this._flushIfNecessary(1);\n        this._float32s[this._position++] = value;\n    };\n    NativeDataStream.prototype.writeUint32Array = function (values) {\n        this._flushIfNecessary(1 + values.length);\n        this._uint32s[this._position++] = values.length;\n        this._uint32s.set(values, this._position);\n        this._position += values.length;\n    };\n    NativeDataStream.prototype.writeInt32Array = function (values) {\n        this._flushIfNecessary(1 + values.length);\n        this._uint32s[this._position++] = values.length;\n        this._int32s.set(values, this._position);\n        this._position += values.length;\n    };\n    NativeDataStream.prototype.writeFloat32Array = function (values) {\n        this._flushIfNecessary(1 + values.length);\n        this._uint32s[this._position++] = values.length;\n        this._float32s.set(values, this._position);\n        this._position += values.length;\n    };\n    NativeDataStream.prototype.writeNativeData = function (handle) {\n        this._flushIfNecessary(handle.length);\n        this._uint32s.set(handle, this._position);\n        this._position += handle.length;\n    };\n    NativeDataStream.prototype.writeBoolean = function (value) {\n        this.writeUint32(value ? 1 : 0);\n    };\n    NativeDataStream.prototype._flushIfNecessary = function (required) {\n        if (this._position + required > this._length) {\n            this._flush();\n        }\n    };\n    NativeDataStream.prototype._flush = function () {\n        this._nativeDataStream.writeBuffer(this._uint32s.buffer, this._position);\n        this._position = 0;\n    };\n    // Must be multiple of 4!\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    NativeDataStream.DEFAULT_BUFFER_SIZE = 65536;\n    return NativeDataStream;\n}());\nexport { NativeDataStream };\n//# sourceMappingURL=nativeDataStream.js.map","import { EscapeRegExp, ExtractBetweenMarkers, FindBackward, IsIdentifierChar, RemoveComments, SkipWhitespaces } from \"../../Misc/codeStringParsingTools.js\";\n/**\n * Class used to inline functions in shader code\n */\nvar ShaderCodeInliner = /** @class */ (function () {\n    /**\n     * Initializes the inliner\n     * @param sourceCode shader code source to inline\n     * @param numMaxIterations maximum number of iterations (used to detect recursive calls)\n     */\n    function ShaderCodeInliner(sourceCode, numMaxIterations) {\n        if (numMaxIterations === void 0) { numMaxIterations = 20; }\n        /** Gets or sets the debug mode */\n        this.debug = false;\n        this._sourceCode = sourceCode;\n        this._numMaxIterations = numMaxIterations;\n        this._functionDescr = [];\n        this.inlineToken = \"#define inline\";\n    }\n    Object.defineProperty(ShaderCodeInliner.prototype, \"code\", {\n        /** Gets the code after the inlining process */\n        get: function () {\n            return this._sourceCode;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Start the processing of the shader code\n     */\n    ShaderCodeInliner.prototype.processCode = function () {\n        if (this.debug) {\n            console.log(\"Start inlining process (code size=\".concat(this._sourceCode.length, \")...\"));\n        }\n        this._collectFunctions();\n        this._processInlining(this._numMaxIterations);\n        if (this.debug) {\n            console.log(\"End of inlining process.\");\n        }\n    };\n    ShaderCodeInliner.prototype._collectFunctions = function () {\n        var startIndex = 0;\n        while (startIndex < this._sourceCode.length) {\n            // locate the function to inline and extract its name\n            var inlineTokenIndex = this._sourceCode.indexOf(this.inlineToken, startIndex);\n            if (inlineTokenIndex < 0) {\n                break;\n            }\n            var funcParamsStartIndex = this._sourceCode.indexOf(\"(\", inlineTokenIndex + this.inlineToken.length);\n            if (funcParamsStartIndex < 0) {\n                if (this.debug) {\n                    console.warn(\"Could not find the opening parenthesis after the token. startIndex=\".concat(startIndex));\n                }\n                startIndex = inlineTokenIndex + this.inlineToken.length;\n                continue;\n            }\n            var funcNameMatch = ShaderCodeInliner._RegexpFindFunctionNameAndType.exec(this._sourceCode.substring(inlineTokenIndex + this.inlineToken.length, funcParamsStartIndex));\n            if (!funcNameMatch) {\n                if (this.debug) {\n                    console.warn(\"Could not extract the name/type of the function from: \".concat(this._sourceCode.substring(inlineTokenIndex + this.inlineToken.length, funcParamsStartIndex)));\n                }\n                startIndex = inlineTokenIndex + this.inlineToken.length;\n                continue;\n            }\n            var _a = [funcNameMatch[3], funcNameMatch[4]], funcType = _a[0], funcName = _a[1];\n            // extract the parameters of the function as a whole string (without the leading / trailing parenthesis)\n            var funcParamsEndIndex = ExtractBetweenMarkers(\"(\", \")\", this._sourceCode, funcParamsStartIndex);\n            if (funcParamsEndIndex < 0) {\n                if (this.debug) {\n                    console.warn(\"Could not extract the parameters the function '\".concat(funcName, \"' (type=\").concat(funcType, \"). funcParamsStartIndex=\").concat(funcParamsStartIndex));\n                }\n                startIndex = inlineTokenIndex + this.inlineToken.length;\n                continue;\n            }\n            var funcParams = this._sourceCode.substring(funcParamsStartIndex + 1, funcParamsEndIndex);\n            // extract the body of the function (with the curly brackets)\n            var funcBodyStartIndex = SkipWhitespaces(this._sourceCode, funcParamsEndIndex + 1);\n            if (funcBodyStartIndex === this._sourceCode.length) {\n                if (this.debug) {\n                    console.warn(\"Could not extract the body of the function '\".concat(funcName, \"' (type=\").concat(funcType, \"). funcParamsEndIndex=\").concat(funcParamsEndIndex));\n                }\n                startIndex = inlineTokenIndex + this.inlineToken.length;\n                continue;\n            }\n            var funcBodyEndIndex = ExtractBetweenMarkers(\"{\", \"}\", this._sourceCode, funcBodyStartIndex);\n            if (funcBodyEndIndex < 0) {\n                if (this.debug) {\n                    console.warn(\"Could not extract the body of the function '\".concat(funcName, \"' (type=\").concat(funcType, \"). funcBodyStartIndex=\").concat(funcBodyStartIndex));\n                }\n                startIndex = inlineTokenIndex + this.inlineToken.length;\n                continue;\n            }\n            var funcBody = this._sourceCode.substring(funcBodyStartIndex, funcBodyEndIndex + 1);\n            // process the parameters: extract each names\n            var params = RemoveComments(funcParams).split(\",\");\n            var paramNames = [];\n            for (var p = 0; p < params.length; ++p) {\n                var param = params[p].trim();\n                var idx = param.lastIndexOf(\" \");\n                if (idx >= 0) {\n                    paramNames.push(param.substring(idx + 1));\n                }\n            }\n            if (funcType !== \"void\") {\n                // for functions that return a value, we will replace \"return\" by \"tempvarname = \", tempvarname being a unique generated name\n                paramNames.push(\"return\");\n            }\n            // collect the function\n            this._functionDescr.push({\n                name: funcName,\n                type: funcType,\n                parameters: paramNames,\n                body: funcBody,\n                callIndex: 0,\n            });\n            startIndex = funcBodyEndIndex + 1;\n            // remove the function from the source code\n            var partBefore = inlineTokenIndex > 0 ? this._sourceCode.substring(0, inlineTokenIndex) : \"\";\n            var partAfter = funcBodyEndIndex + 1 < this._sourceCode.length - 1 ? this._sourceCode.substring(funcBodyEndIndex + 1) : \"\";\n            this._sourceCode = partBefore + partAfter;\n            startIndex -= funcBodyEndIndex + 1 - inlineTokenIndex;\n        }\n        if (this.debug) {\n            console.log(\"Collect functions: \".concat(this._functionDescr.length, \" functions found. functionDescr=\"), this._functionDescr);\n        }\n    };\n    ShaderCodeInliner.prototype._processInlining = function (numMaxIterations) {\n        if (numMaxIterations === void 0) { numMaxIterations = 20; }\n        while (numMaxIterations-- >= 0) {\n            if (!this._replaceFunctionCallsByCode()) {\n                break;\n            }\n        }\n        if (this.debug) {\n            console.log(\"numMaxIterations is \".concat(numMaxIterations, \" after inlining process\"));\n        }\n        return numMaxIterations >= 0;\n    };\n    ShaderCodeInliner.prototype._replaceFunctionCallsByCode = function () {\n        var doAgain = false;\n        for (var _i = 0, _a = this._functionDescr; _i < _a.length; _i++) {\n            var func = _a[_i];\n            var name_1 = func.name, type = func.type, parameters = func.parameters, body = func.body;\n            var startIndex = 0;\n            while (startIndex < this._sourceCode.length) {\n                // Look for the function name in the source code\n                var functionCallIndex = this._sourceCode.indexOf(name_1, startIndex);\n                if (functionCallIndex < 0) {\n                    break;\n                }\n                // Make sure \"name\" is not part of a bigger string\n                if (functionCallIndex === 0 || IsIdentifierChar(this._sourceCode.charAt(functionCallIndex - 1))) {\n                    startIndex = functionCallIndex + name_1.length;\n                    continue;\n                }\n                // Find the opening parenthesis\n                var callParamsStartIndex = SkipWhitespaces(this._sourceCode, functionCallIndex + name_1.length);\n                if (callParamsStartIndex === this._sourceCode.length || this._sourceCode.charAt(callParamsStartIndex) !== \"(\") {\n                    startIndex = functionCallIndex + name_1.length;\n                    continue;\n                }\n                // extract the parameters of the function call as a whole string (without the leading / trailing parenthesis)\n                var callParamsEndIndex = ExtractBetweenMarkers(\"(\", \")\", this._sourceCode, callParamsStartIndex);\n                if (callParamsEndIndex < 0) {\n                    if (this.debug) {\n                        console.warn(\"Could not extract the parameters of the function call. Function '\".concat(name_1, \"' (type=\").concat(type, \"). callParamsStartIndex=\").concat(callParamsStartIndex));\n                    }\n                    startIndex = functionCallIndex + name_1.length;\n                    continue;\n                }\n                var callParams = this._sourceCode.substring(callParamsStartIndex + 1, callParamsEndIndex);\n                // process the parameter call: extract each names\n                // this function split the parameter list used in the function call at ',' boundaries by taking care of potential parenthesis like in:\n                //      myfunc(a, vec2(1., 0.), 4.)\n                var splitParameterCall = function (s) {\n                    var parameters = [];\n                    var curIdx = 0, startParamIdx = 0;\n                    while (curIdx < s.length) {\n                        if (s.charAt(curIdx) === \"(\") {\n                            var idx2 = ExtractBetweenMarkers(\"(\", \")\", s, curIdx);\n                            if (idx2 < 0) {\n                                return null;\n                            }\n                            curIdx = idx2;\n                        }\n                        else if (s.charAt(curIdx) === \",\") {\n                            parameters.push(s.substring(startParamIdx, curIdx));\n                            startParamIdx = curIdx + 1;\n                        }\n                        curIdx++;\n                    }\n                    if (startParamIdx < curIdx) {\n                        parameters.push(s.substring(startParamIdx, curIdx));\n                    }\n                    return parameters;\n                };\n                var params = splitParameterCall(RemoveComments(callParams));\n                if (params === null) {\n                    if (this.debug) {\n                        console.warn(\"Invalid function call: can't extract the parameters of the function call. Function '\".concat(name_1, \"' (type=\").concat(type, \"). callParamsStartIndex=\").concat(callParamsStartIndex, \", callParams=\") +\n                            callParams);\n                    }\n                    startIndex = functionCallIndex + name_1.length;\n                    continue;\n                }\n                var paramNames = [];\n                for (var p = 0; p < params.length; ++p) {\n                    var param = params[p].trim();\n                    paramNames.push(param);\n                }\n                var retParamName = type !== \"void\" ? name_1 + \"_\" + func.callIndex++ : null;\n                if (retParamName) {\n                    paramNames.push(retParamName + \" =\");\n                }\n                if (paramNames.length !== parameters.length) {\n                    if (this.debug) {\n                        console.warn(\"Invalid function call: not the same number of parameters for the call than the number expected by the function. Function '\".concat(name_1, \"' (type=\").concat(type, \"). function parameters=\").concat(parameters, \", call parameters=\").concat(paramNames));\n                    }\n                    startIndex = functionCallIndex + name_1.length;\n                    continue;\n                }\n                startIndex = callParamsEndIndex + 1;\n                // replace the function call by the body function\n                var funcBody = this._replaceNames(body, parameters, paramNames);\n                var partBefore = functionCallIndex > 0 ? this._sourceCode.substring(0, functionCallIndex) : \"\";\n                var partAfter = callParamsEndIndex + 1 < this._sourceCode.length - 1 ? this._sourceCode.substring(callParamsEndIndex + 1) : \"\";\n                if (retParamName) {\n                    // case where the function returns a value. We generate:\n                    // FUNCTYPE retParamName;\n                    // {function body}\n                    // and replace the function call by retParamName\n                    var injectDeclarationIndex = FindBackward(this._sourceCode, functionCallIndex - 1, \"\\n\");\n                    partBefore = this._sourceCode.substring(0, injectDeclarationIndex + 1);\n                    var partBetween = this._sourceCode.substring(injectDeclarationIndex + 1, functionCallIndex);\n                    this._sourceCode = partBefore + type + \" \" + retParamName + \";\\n\" + funcBody + \"\\n\" + partBetween + retParamName + partAfter;\n                    if (this.debug) {\n                        console.log(\"Replace function call by code. Function '\".concat(name_1, \"' (type=\").concat(type, \"). injectDeclarationIndex=\").concat(injectDeclarationIndex, \", call parameters=\").concat(paramNames));\n                    }\n                }\n                else {\n                    // simple case where the return value of the function is \"void\"\n                    this._sourceCode = partBefore + funcBody + partAfter;\n                    startIndex += funcBody.length - (callParamsEndIndex + 1 - functionCallIndex);\n                    if (this.debug) {\n                        console.log(\"Replace function call by code. Function '\".concat(name_1, \"' (type=\").concat(type, \"). functionCallIndex=\").concat(functionCallIndex, \", call parameters=\").concat(paramNames));\n                    }\n                }\n                doAgain = true;\n            }\n        }\n        return doAgain;\n    };\n    ShaderCodeInliner.prototype._replaceNames = function (code, sources, destinations) {\n        var _loop_1 = function (i) {\n            var source = new RegExp(EscapeRegExp(sources[i]), \"g\"), sourceLen = sources[i].length, destination = destinations[i];\n            code = code.replace(source, function (match) {\n                var args = [];\n                for (var _i = 1; _i < arguments.length; _i++) {\n                    args[_i - 1] = arguments[_i];\n                }\n                var offset = args[0];\n                // Make sure \"source\" is not part of a bigger identifier (for eg, if source=view and we matched it with viewDirection)\n                if (IsIdentifierChar(code.charAt(offset - 1)) || IsIdentifierChar(code.charAt(offset + sourceLen))) {\n                    return sources[i];\n                }\n                return destination;\n            });\n        };\n        for (var i = 0; i < sources.length; ++i) {\n            _loop_1(i);\n        }\n        return code;\n    };\n    ShaderCodeInliner._RegexpFindFunctionNameAndType = /((\\s+?)(\\w+)\\s+(\\w+)\\s*?)$/;\n    return ShaderCodeInliner;\n}());\nexport { ShaderCodeInliner };\n//# sourceMappingURL=shaderCodeInliner.js.map","/** @hidden */\nvar ShaderCodeNode = /** @class */ (function () {\n    function ShaderCodeNode() {\n        this.children = [];\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ShaderCodeNode.prototype.isValid = function (preprocessors) {\n        return true;\n    };\n    ShaderCodeNode.prototype.process = function (preprocessors, options) {\n        var result = \"\";\n        if (this.line) {\n            var value = this.line;\n            var processor = options.processor;\n            if (processor) {\n                // This must be done before other replacements to avoid mistakenly changing something that was already changed.\n                if (processor.lineProcessor) {\n                    value = processor.lineProcessor(value, options.isFragment, options.processingContext);\n                }\n                if (processor.attributeProcessor && this.line.startsWith(\"attribute\")) {\n                    value = processor.attributeProcessor(this.line, preprocessors, options.processingContext);\n                }\n                else if (processor.varyingProcessor && this.line.startsWith(\"varying\")) {\n                    value = processor.varyingProcessor(this.line, options.isFragment, preprocessors, options.processingContext);\n                }\n                else if (processor.uniformProcessor && processor.uniformRegexp && processor.uniformRegexp.test(this.line)) {\n                    if (!options.lookForClosingBracketForUniformBuffer) {\n                        value = processor.uniformProcessor(this.line, options.isFragment, preprocessors, options.processingContext);\n                    }\n                }\n                else if (processor.uniformBufferProcessor && processor.uniformBufferRegexp && processor.uniformBufferRegexp.test(this.line)) {\n                    if (!options.lookForClosingBracketForUniformBuffer) {\n                        value = processor.uniformBufferProcessor(this.line, options.isFragment, options.processingContext);\n                        options.lookForClosingBracketForUniformBuffer = true;\n                    }\n                }\n                else if (processor.textureProcessor && processor.textureRegexp && processor.textureRegexp.test(this.line)) {\n                    value = processor.textureProcessor(this.line, options.isFragment, preprocessors, options.processingContext);\n                }\n                else if ((processor.uniformProcessor || processor.uniformBufferProcessor) && this.line.startsWith(\"uniform\") && !options.lookForClosingBracketForUniformBuffer) {\n                    var regex = /uniform\\s+(?:(?:highp)?|(?:lowp)?)\\s*(\\S+)\\s+(\\S+)\\s*;/;\n                    if (regex.test(this.line)) {\n                        // uniform\n                        if (processor.uniformProcessor) {\n                            value = processor.uniformProcessor(this.line, options.isFragment, preprocessors, options.processingContext);\n                        }\n                    }\n                    else {\n                        // Uniform buffer\n                        if (processor.uniformBufferProcessor) {\n                            value = processor.uniformBufferProcessor(this.line, options.isFragment, options.processingContext);\n                            options.lookForClosingBracketForUniformBuffer = true;\n                        }\n                    }\n                }\n                if (options.lookForClosingBracketForUniformBuffer && this.line.indexOf(\"}\") !== -1) {\n                    options.lookForClosingBracketForUniformBuffer = false;\n                    if (processor.endOfUniformBufferProcessor) {\n                        value = processor.endOfUniformBufferProcessor(this.line, options.isFragment, options.processingContext);\n                    }\n                }\n            }\n            result += value + \"\\r\\n\";\n        }\n        this.children.forEach(function (child) {\n            result += child.process(preprocessors, options);\n        });\n        if (this.additionalDefineKey) {\n            preprocessors[this.additionalDefineKey] = this.additionalDefineValue || \"true\";\n        }\n        return result;\n    };\n    return ShaderCodeNode;\n}());\nexport { ShaderCodeNode };\n//# sourceMappingURL=shaderCodeNode.js.map","/** @hidden */\nvar ShaderCodeCursor = /** @class */ (function () {\n    function ShaderCodeCursor() {\n    }\n    Object.defineProperty(ShaderCodeCursor.prototype, \"currentLine\", {\n        get: function () {\n            return this._lines[this.lineIndex];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ShaderCodeCursor.prototype, \"canRead\", {\n        get: function () {\n            return this.lineIndex < this._lines.length - 1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ShaderCodeCursor.prototype, \"lines\", {\n        set: function (value) {\n            this._lines = [];\n            for (var _i = 0, value_1 = value; _i < value_1.length; _i++) {\n                var line = value_1[_i];\n                // Prevent removing line break in macros.\n                if (line[0] === \"#\") {\n                    this._lines.push(line);\n                    continue;\n                }\n                // Do not split single line comments\n                if (line.trim().startsWith(\"//\")) {\n                    this._lines.push(line);\n                    continue;\n                }\n                var split = line.split(\";\");\n                for (var index = 0; index < split.length; index++) {\n                    var subLine = split[index];\n                    subLine = subLine.trim();\n                    if (!subLine) {\n                        continue;\n                    }\n                    this._lines.push(subLine + (index !== split.length - 1 ? \";\" : \"\"));\n                }\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return ShaderCodeCursor;\n}());\nexport { ShaderCodeCursor };\n//# sourceMappingURL=shaderCodeCursor.js.map","import { __extends } from \"tslib\";\nimport { ShaderCodeNode } from \"./shaderCodeNode.js\";\n/** @hidden */\nvar ShaderCodeConditionNode = /** @class */ (function (_super) {\n    __extends(ShaderCodeConditionNode, _super);\n    function ShaderCodeConditionNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ShaderCodeConditionNode.prototype.process = function (preprocessors, options) {\n        for (var index = 0; index < this.children.length; index++) {\n            var node = this.children[index];\n            if (node.isValid(preprocessors)) {\n                return node.process(preprocessors, options);\n            }\n        }\n        return \"\";\n    };\n    return ShaderCodeConditionNode;\n}(ShaderCodeNode));\nexport { ShaderCodeConditionNode };\n//# sourceMappingURL=shaderCodeConditionNode.js.map","import { __extends } from \"tslib\";\nimport { ShaderCodeNode } from \"./shaderCodeNode.js\";\n/** @hidden */\nvar ShaderCodeTestNode = /** @class */ (function (_super) {\n    __extends(ShaderCodeTestNode, _super);\n    function ShaderCodeTestNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ShaderCodeTestNode.prototype.isValid = function (preprocessors) {\n        return this.testExpression.isTrue(preprocessors);\n    };\n    return ShaderCodeTestNode;\n}(ShaderCodeNode));\nexport { ShaderCodeTestNode };\n//# sourceMappingURL=shaderCodeTestNode.js.map","/* eslint-disable @typescript-eslint/naming-convention */\n/** @hidden */\nvar ShaderDefineExpression = /** @class */ (function () {\n    function ShaderDefineExpression() {\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ShaderDefineExpression.prototype.isTrue = function (preprocessors) {\n        return true;\n    };\n    ShaderDefineExpression.postfixToInfix = function (postfix) {\n        var stack = [];\n        for (var _i = 0, postfix_1 = postfix; _i < postfix_1.length; _i++) {\n            var c = postfix_1[_i];\n            if (ShaderDefineExpression._OperatorPriority[c] === undefined) {\n                stack.push(c);\n            }\n            else {\n                var v1 = stack[stack.length - 1], v2 = stack[stack.length - 2];\n                stack.length -= 2;\n                stack.push(\"(\".concat(v2).concat(c).concat(v1, \")\"));\n            }\n        }\n        return stack[stack.length - 1];\n    };\n    ShaderDefineExpression.infixToPostfix = function (infix) {\n        var result = [];\n        var stackIdx = -1;\n        var pushOperand = function () {\n            operand = operand.trim();\n            if (operand !== \"\") {\n                result.push(operand);\n                operand = \"\";\n            }\n        };\n        var push = function (s) {\n            if (stackIdx < ShaderDefineExpression._Stack.length - 1) {\n                ShaderDefineExpression._Stack[++stackIdx] = s;\n            }\n        };\n        var peek = function () { return ShaderDefineExpression._Stack[stackIdx]; };\n        var pop = function () { return (stackIdx === -1 ? \"!!INVALID EXPRESSION!!\" : ShaderDefineExpression._Stack[stackIdx--]); };\n        var idx = 0, operand = \"\";\n        while (idx < infix.length) {\n            var c = infix.charAt(idx), token = idx < infix.length - 1 ? infix.substr(idx, 2) : \"\";\n            if (c === \"(\") {\n                operand = \"\";\n                push(c);\n            }\n            else if (c === \")\") {\n                pushOperand();\n                while (stackIdx !== -1 && peek() !== \"(\") {\n                    result.push(pop());\n                }\n                pop();\n            }\n            else if (ShaderDefineExpression._OperatorPriority[token] > 1) {\n                pushOperand();\n                while (stackIdx !== -1 && ShaderDefineExpression._OperatorPriority[peek()] >= ShaderDefineExpression._OperatorPriority[token]) {\n                    result.push(pop());\n                }\n                push(token);\n                idx++;\n            }\n            else {\n                operand += c;\n            }\n            idx++;\n        }\n        pushOperand();\n        while (stackIdx !== -1) {\n            if (peek() === \"(\") {\n                pop();\n            }\n            else {\n                result.push(pop());\n            }\n        }\n        return result;\n    };\n    ShaderDefineExpression._OperatorPriority = {\n        \")\": 0,\n        \"(\": 1,\n        \"||\": 2,\n        \"&&\": 3,\n    };\n    ShaderDefineExpression._Stack = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n    return ShaderDefineExpression;\n}());\nexport { ShaderDefineExpression };\n//# sourceMappingURL=shaderDefineExpression.js.map","import { __extends } from \"tslib\";\nimport { ShaderDefineExpression } from \"../shaderDefineExpression.js\";\n/** @hidden */\nvar ShaderDefineIsDefinedOperator = /** @class */ (function (_super) {\n    __extends(ShaderDefineIsDefinedOperator, _super);\n    function ShaderDefineIsDefinedOperator(define, not) {\n        if (not === void 0) { not = false; }\n        var _this = _super.call(this) || this;\n        _this.define = define;\n        _this.not = not;\n        return _this;\n    }\n    ShaderDefineIsDefinedOperator.prototype.isTrue = function (preprocessors) {\n        var condition = preprocessors[this.define] !== undefined;\n        if (this.not) {\n            condition = !condition;\n        }\n        return condition;\n    };\n    return ShaderDefineIsDefinedOperator;\n}(ShaderDefineExpression));\nexport { ShaderDefineIsDefinedOperator };\n//# sourceMappingURL=shaderDefineIsDefinedOperator.js.map","import { __extends } from \"tslib\";\nimport { ShaderDefineExpression } from \"../shaderDefineExpression.js\";\n/** @hidden */\nvar ShaderDefineOrOperator = /** @class */ (function (_super) {\n    __extends(ShaderDefineOrOperator, _super);\n    function ShaderDefineOrOperator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ShaderDefineOrOperator.prototype.isTrue = function (preprocessors) {\n        return this.leftOperand.isTrue(preprocessors) || this.rightOperand.isTrue(preprocessors);\n    };\n    return ShaderDefineOrOperator;\n}(ShaderDefineExpression));\nexport { ShaderDefineOrOperator };\n//# sourceMappingURL=shaderDefineOrOperator.js.map","import { __extends } from \"tslib\";\nimport { ShaderDefineExpression } from \"../shaderDefineExpression.js\";\n/** @hidden */\nvar ShaderDefineAndOperator = /** @class */ (function (_super) {\n    __extends(ShaderDefineAndOperator, _super);\n    function ShaderDefineAndOperator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ShaderDefineAndOperator.prototype.isTrue = function (preprocessors) {\n        return this.leftOperand.isTrue(preprocessors) && this.rightOperand.isTrue(preprocessors);\n    };\n    return ShaderDefineAndOperator;\n}(ShaderDefineExpression));\nexport { ShaderDefineAndOperator };\n//# sourceMappingURL=shaderDefineAndOperator.js.map","import { __extends } from \"tslib\";\nimport { ShaderDefineExpression } from \"../shaderDefineExpression.js\";\n/** @hidden */\nvar ShaderDefineArithmeticOperator = /** @class */ (function (_super) {\n    __extends(ShaderDefineArithmeticOperator, _super);\n    function ShaderDefineArithmeticOperator(define, operand, testValue) {\n        var _this = _super.call(this) || this;\n        _this.define = define;\n        _this.operand = operand;\n        _this.testValue = testValue;\n        return _this;\n    }\n    ShaderDefineArithmeticOperator.prototype.isTrue = function (preprocessors) {\n        var value = preprocessors[this.define];\n        if (value === undefined) {\n            value = this.define;\n        }\n        var condition = false;\n        var left = parseInt(value);\n        var right = parseInt(this.testValue);\n        switch (this.operand) {\n            case \">\":\n                condition = left > right;\n                break;\n            case \"<\":\n                condition = left < right;\n                break;\n            case \"<=\":\n                condition = left <= right;\n                break;\n            case \">=\":\n                condition = left >= right;\n                break;\n            case \"==\":\n                condition = left === right;\n                break;\n        }\n        return condition;\n    };\n    return ShaderDefineArithmeticOperator;\n}(ShaderDefineExpression));\nexport { ShaderDefineArithmeticOperator };\n//# sourceMappingURL=shaderDefineArithmeticOperator.js.map","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { ShaderCodeNode } from \"./shaderCodeNode.js\";\nimport { ShaderCodeCursor } from \"./shaderCodeCursor.js\";\nimport { ShaderCodeConditionNode } from \"./shaderCodeConditionNode.js\";\nimport { ShaderCodeTestNode } from \"./shaderCodeTestNode.js\";\nimport { ShaderDefineIsDefinedOperator } from \"./Expressions/Operators/shaderDefineIsDefinedOperator.js\";\nimport { ShaderDefineOrOperator } from \"./Expressions/Operators/shaderDefineOrOperator.js\";\nimport { ShaderDefineAndOperator } from \"./Expressions/Operators/shaderDefineAndOperator.js\";\nimport { ShaderDefineExpression } from \"./Expressions/shaderDefineExpression.js\";\nimport { ShaderDefineArithmeticOperator } from \"./Expressions/Operators/shaderDefineArithmeticOperator.js\";\nimport { _WarnImport } from \"../../Misc/devTools.js\";\nimport { ShaderLanguage } from \"../../Materials/shaderLanguage.js\";\nvar regexSE = /defined\\s*?\\((.+?)\\)/g;\nvar regexSERevert = /defined\\s*?\\[(.+?)\\]/g;\nvar regexShaderInclude = /#include\\s?<(.+)>(\\((.*)\\))*(\\[(.*)\\])*/g;\n/** @hidden */\nvar ShaderProcessor = /** @class */ (function () {\n    function ShaderProcessor() {\n    }\n    ShaderProcessor.Initialize = function (options) {\n        if (options.processor && options.processor.initializeShaders) {\n            options.processor.initializeShaders(options.processingContext);\n        }\n    };\n    ShaderProcessor.Process = function (sourceCode, options, callback, engine) {\n        var _this = this;\n        var _a;\n        if ((_a = options.processor) === null || _a === void 0 ? void 0 : _a.preProcessShaderCode) {\n            sourceCode = options.processor.preProcessShaderCode(sourceCode, options.isFragment);\n        }\n        this._ProcessIncludes(sourceCode, options, function (codeWithIncludes) {\n            if (options.processCodeAfterIncludes) {\n                codeWithIncludes = options.processCodeAfterIncludes(options.isFragment ? \"fragment\" : \"vertex\", codeWithIncludes);\n            }\n            var migratedCode = _this._ProcessShaderConversion(codeWithIncludes, options, engine);\n            callback(migratedCode);\n        });\n    };\n    ShaderProcessor.PreProcess = function (sourceCode, options, callback, engine) {\n        var _this = this;\n        var _a;\n        if ((_a = options.processor) === null || _a === void 0 ? void 0 : _a.preProcessShaderCode) {\n            sourceCode = options.processor.preProcessShaderCode(sourceCode, options.isFragment);\n        }\n        this._ProcessIncludes(sourceCode, options, function (codeWithIncludes) {\n            if (options.processCodeAfterIncludes) {\n                codeWithIncludes = options.processCodeAfterIncludes(options.isFragment ? \"fragment\" : \"vertex\", codeWithIncludes);\n            }\n            var migratedCode = _this._ApplyPreProcessing(codeWithIncludes, options, engine);\n            callback(migratedCode);\n        });\n    };\n    ShaderProcessor.Finalize = function (vertexCode, fragmentCode, options) {\n        if (!options.processor || !options.processor.finalizeShaders) {\n            return { vertexCode: vertexCode, fragmentCode: fragmentCode };\n        }\n        return options.processor.finalizeShaders(vertexCode, fragmentCode, options.processingContext);\n    };\n    ShaderProcessor._ProcessPrecision = function (source, options) {\n        var _a;\n        if ((_a = options.processor) === null || _a === void 0 ? void 0 : _a.noPrecision) {\n            return source;\n        }\n        var shouldUseHighPrecisionShader = options.shouldUseHighPrecisionShader;\n        if (source.indexOf(\"precision highp float\") === -1) {\n            if (!shouldUseHighPrecisionShader) {\n                source = \"precision mediump float;\\n\" + source;\n            }\n            else {\n                source = \"precision highp float;\\n\" + source;\n            }\n        }\n        else {\n            if (!shouldUseHighPrecisionShader) {\n                // Moving highp to mediump\n                source = source.replace(\"precision highp float\", \"precision mediump float\");\n            }\n        }\n        return source;\n    };\n    ShaderProcessor._ExtractOperation = function (expression) {\n        var regex = /defined\\((.+)\\)/;\n        var match = regex.exec(expression);\n        if (match && match.length) {\n            return new ShaderDefineIsDefinedOperator(match[1].trim(), expression[0] === \"!\");\n        }\n        var operators = [\"==\", \">=\", \"<=\", \"<\", \">\"];\n        var operator = \"\";\n        var indexOperator = 0;\n        for (var _i = 0, operators_1 = operators; _i < operators_1.length; _i++) {\n            operator = operators_1[_i];\n            indexOperator = expression.indexOf(operator);\n            if (indexOperator > -1) {\n                break;\n            }\n        }\n        if (indexOperator === -1) {\n            return new ShaderDefineIsDefinedOperator(expression);\n        }\n        var define = expression.substring(0, indexOperator).trim();\n        var value = expression.substring(indexOperator + operator.length).trim();\n        return new ShaderDefineArithmeticOperator(define, operator, value);\n    };\n    ShaderProcessor._BuildSubExpression = function (expression) {\n        expression = expression.replace(regexSE, \"defined[$1]\");\n        var postfix = ShaderDefineExpression.infixToPostfix(expression);\n        var stack = [];\n        for (var _i = 0, postfix_1 = postfix; _i < postfix_1.length; _i++) {\n            var c = postfix_1[_i];\n            if (c !== \"||\" && c !== \"&&\") {\n                stack.push(c);\n            }\n            else if (stack.length >= 2) {\n                var v1 = stack[stack.length - 1], v2 = stack[stack.length - 2];\n                stack.length -= 2;\n                var operator = c == \"&&\" ? new ShaderDefineAndOperator() : new ShaderDefineOrOperator();\n                if (typeof v1 === \"string\") {\n                    v1 = v1.replace(regexSERevert, \"defined($1)\");\n                }\n                if (typeof v2 === \"string\") {\n                    v2 = v2.replace(regexSERevert, \"defined($1)\");\n                }\n                operator.leftOperand = typeof v2 === \"string\" ? this._ExtractOperation(v2) : v2;\n                operator.rightOperand = typeof v1 === \"string\" ? this._ExtractOperation(v1) : v1;\n                stack.push(operator);\n            }\n        }\n        var result = stack[stack.length - 1];\n        if (typeof result === \"string\") {\n            result = result.replace(regexSERevert, \"defined($1)\");\n        }\n        // note: stack.length !== 1 if there was an error in the parsing\n        return typeof result === \"string\" ? this._ExtractOperation(result) : result;\n    };\n    ShaderProcessor._BuildExpression = function (line, start) {\n        var node = new ShaderCodeTestNode();\n        var command = line.substring(0, start);\n        var expression = line.substring(start);\n        expression = expression.substring(0, (expression.indexOf(\"//\") + 1 || expression.length + 1) - 1).trim();\n        if (command === \"#ifdef\") {\n            node.testExpression = new ShaderDefineIsDefinedOperator(expression);\n        }\n        else if (command === \"#ifndef\") {\n            node.testExpression = new ShaderDefineIsDefinedOperator(expression, true);\n        }\n        else {\n            node.testExpression = this._BuildSubExpression(expression);\n        }\n        return node;\n    };\n    ShaderProcessor._MoveCursorWithinIf = function (cursor, rootNode, ifNode) {\n        var line = cursor.currentLine;\n        while (this._MoveCursor(cursor, ifNode)) {\n            line = cursor.currentLine;\n            var first5 = line.substring(0, 5).toLowerCase();\n            if (first5 === \"#else\") {\n                var elseNode = new ShaderCodeNode();\n                rootNode.children.push(elseNode);\n                this._MoveCursor(cursor, elseNode);\n                return;\n            }\n            else if (first5 === \"#elif\") {\n                var elifNode = this._BuildExpression(line, 5);\n                rootNode.children.push(elifNode);\n                ifNode = elifNode;\n            }\n        }\n    };\n    ShaderProcessor._MoveCursor = function (cursor, rootNode) {\n        while (cursor.canRead) {\n            cursor.lineIndex++;\n            var line = cursor.currentLine;\n            var keywords = /(#ifdef)|(#else)|(#elif)|(#endif)|(#ifndef)|(#if)/;\n            var matches = keywords.exec(line);\n            if (matches && matches.length) {\n                var keyword = matches[0];\n                switch (keyword) {\n                    case \"#ifdef\": {\n                        var newRootNode = new ShaderCodeConditionNode();\n                        rootNode.children.push(newRootNode);\n                        var ifNode = this._BuildExpression(line, 6);\n                        newRootNode.children.push(ifNode);\n                        this._MoveCursorWithinIf(cursor, newRootNode, ifNode);\n                        break;\n                    }\n                    case \"#else\":\n                    case \"#elif\":\n                        return true;\n                    case \"#endif\":\n                        return false;\n                    case \"#ifndef\": {\n                        var newRootNode = new ShaderCodeConditionNode();\n                        rootNode.children.push(newRootNode);\n                        var ifNode = this._BuildExpression(line, 7);\n                        newRootNode.children.push(ifNode);\n                        this._MoveCursorWithinIf(cursor, newRootNode, ifNode);\n                        break;\n                    }\n                    case \"#if\": {\n                        var newRootNode = new ShaderCodeConditionNode();\n                        var ifNode = this._BuildExpression(line, 3);\n                        rootNode.children.push(newRootNode);\n                        newRootNode.children.push(ifNode);\n                        this._MoveCursorWithinIf(cursor, newRootNode, ifNode);\n                        break;\n                    }\n                }\n            }\n            else {\n                var newNode = new ShaderCodeNode();\n                newNode.line = line;\n                rootNode.children.push(newNode);\n                // Detect additional defines\n                if (line[0] === \"#\" && line[1] === \"d\") {\n                    var split = line.replace(\";\", \"\").split(\" \");\n                    newNode.additionalDefineKey = split[1];\n                    if (split.length === 3) {\n                        newNode.additionalDefineValue = split[2];\n                    }\n                }\n            }\n        }\n        return false;\n    };\n    ShaderProcessor._EvaluatePreProcessors = function (sourceCode, preprocessors, options) {\n        var rootNode = new ShaderCodeNode();\n        var cursor = new ShaderCodeCursor();\n        cursor.lineIndex = -1;\n        cursor.lines = sourceCode.split(\"\\n\");\n        // Decompose (We keep it in 2 steps so it is easier to maintain and perf hit is insignificant)\n        this._MoveCursor(cursor, rootNode);\n        // Recompose\n        return rootNode.process(preprocessors, options);\n    };\n    ShaderProcessor._PreparePreProcessors = function (options, engine) {\n        var _a;\n        var defines = options.defines;\n        var preprocessors = {};\n        for (var _i = 0, defines_1 = defines; _i < defines_1.length; _i++) {\n            var define = defines_1[_i];\n            var keyValue = define.replace(\"#define\", \"\").replace(\";\", \"\").trim();\n            var split = keyValue.split(\" \");\n            preprocessors[split[0]] = split.length > 1 ? split[1] : \"\";\n        }\n        if (((_a = options.processor) === null || _a === void 0 ? void 0 : _a.shaderLanguage) === ShaderLanguage.GLSL) {\n            preprocessors[\"GL_ES\"] = \"true\";\n        }\n        preprocessors[\"__VERSION__\"] = options.version;\n        preprocessors[options.platformName] = \"true\";\n        engine._getGlobalDefines(preprocessors);\n        return preprocessors;\n    };\n    ShaderProcessor._ProcessShaderConversion = function (sourceCode, options, engine) {\n        var preparedSourceCode = this._ProcessPrecision(sourceCode, options);\n        if (!options.processor) {\n            return preparedSourceCode;\n        }\n        // Already converted\n        if (options.processor.shaderLanguage === ShaderLanguage.GLSL && preparedSourceCode.indexOf(\"#version 3\") !== -1) {\n            return preparedSourceCode.replace(\"#version 300 es\", \"\");\n        }\n        var defines = options.defines;\n        var preprocessors = this._PreparePreProcessors(options, engine);\n        // General pre processing\n        if (options.processor.preProcessor) {\n            preparedSourceCode = options.processor.preProcessor(preparedSourceCode, defines, options.isFragment, options.processingContext);\n        }\n        preparedSourceCode = this._EvaluatePreProcessors(preparedSourceCode, preprocessors, options);\n        // Post processing\n        if (options.processor.postProcessor) {\n            preparedSourceCode = options.processor.postProcessor(preparedSourceCode, defines, options.isFragment, options.processingContext, engine);\n        }\n        // Inline functions tagged with #define inline\n        if (engine._features.needShaderCodeInlining) {\n            preparedSourceCode = engine.inlineShaderCode(preparedSourceCode);\n        }\n        return preparedSourceCode;\n    };\n    ShaderProcessor._ApplyPreProcessing = function (sourceCode, options, engine) {\n        var _a, _b;\n        var preparedSourceCode = sourceCode;\n        var defines = options.defines;\n        var preprocessors = this._PreparePreProcessors(options, engine);\n        // General pre processing\n        if ((_a = options.processor) === null || _a === void 0 ? void 0 : _a.preProcessor) {\n            preparedSourceCode = options.processor.preProcessor(preparedSourceCode, defines, options.isFragment, options.processingContext);\n        }\n        preparedSourceCode = this._EvaluatePreProcessors(preparedSourceCode, preprocessors, options);\n        // Post processing\n        if ((_b = options.processor) === null || _b === void 0 ? void 0 : _b.postProcessor) {\n            preparedSourceCode = options.processor.postProcessor(preparedSourceCode, defines, options.isFragment, options.processingContext, engine);\n        }\n        // Inline functions tagged with #define inline\n        if (engine._features.needShaderCodeInlining) {\n            preparedSourceCode = engine.inlineShaderCode(preparedSourceCode);\n        }\n        return preparedSourceCode;\n    };\n    ShaderProcessor._ProcessIncludes = function (sourceCode, options, callback) {\n        var _this = this;\n        var match = regexShaderInclude.exec(sourceCode);\n        var returnValue = new String(sourceCode);\n        var keepProcessing = false;\n        var _loop_1 = function () {\n            var includeFile = match[1];\n            // Uniform declaration\n            if (includeFile.indexOf(\"__decl__\") !== -1) {\n                includeFile = includeFile.replace(/__decl__/, \"\");\n                if (options.supportsUniformBuffers) {\n                    includeFile = includeFile.replace(/Vertex/, \"Ubo\");\n                    includeFile = includeFile.replace(/Fragment/, \"Ubo\");\n                }\n                includeFile = includeFile + \"Declaration\";\n            }\n            if (options.includesShadersStore[includeFile]) {\n                // Substitution\n                var includeContent = options.includesShadersStore[includeFile];\n                if (match[2]) {\n                    var splits = match[3].split(\",\");\n                    for (var index = 0; index < splits.length; index += 2) {\n                        var source = new RegExp(splits[index], \"g\");\n                        var dest = splits[index + 1];\n                        includeContent = includeContent.replace(source, dest);\n                    }\n                }\n                if (match[4]) {\n                    var indexString = match[5];\n                    if (indexString.indexOf(\"..\") !== -1) {\n                        var indexSplits = indexString.split(\"..\");\n                        var minIndex = parseInt(indexSplits[0]);\n                        var maxIndex = parseInt(indexSplits[1]);\n                        var sourceIncludeContent = includeContent.slice(0);\n                        includeContent = \"\";\n                        if (isNaN(maxIndex)) {\n                            maxIndex = options.indexParameters[indexSplits[1]];\n                        }\n                        for (var i = minIndex; i < maxIndex; i++) {\n                            if (!options.supportsUniformBuffers) {\n                                // Ubo replacement\n                                sourceIncludeContent = sourceIncludeContent.replace(/light\\{X\\}.(\\w*)/g, function (str, p1) {\n                                    return p1 + \"{X}\";\n                                });\n                            }\n                            includeContent += sourceIncludeContent.replace(/\\{X\\}/g, i.toString()) + \"\\n\";\n                        }\n                    }\n                    else {\n                        if (!options.supportsUniformBuffers) {\n                            // Ubo replacement\n                            includeContent = includeContent.replace(/light\\{X\\}.(\\w*)/g, function (str, p1) {\n                                return p1 + \"{X}\";\n                            });\n                        }\n                        includeContent = includeContent.replace(/\\{X\\}/g, indexString);\n                    }\n                }\n                // Replace\n                returnValue = returnValue.replace(match[0], includeContent);\n                keepProcessing = keepProcessing || includeContent.indexOf(\"#include<\") >= 0 || includeContent.indexOf(\"#include <\") >= 0;\n            }\n            else {\n                var includeShaderUrl = options.shadersRepository + \"ShadersInclude/\" + includeFile + \".fx\";\n                ShaderProcessor._FileToolsLoadFile(includeShaderUrl, function (fileContent) {\n                    options.includesShadersStore[includeFile] = fileContent;\n                    _this._ProcessIncludes(returnValue, options, callback);\n                });\n                return { value: void 0 };\n            }\n            match = regexShaderInclude.exec(sourceCode);\n        };\n        while (match != null) {\n            var state_1 = _loop_1();\n            if (typeof state_1 === \"object\")\n                return state_1.value;\n        }\n        if (keepProcessing) {\n            this._ProcessIncludes(returnValue.toString(), options, callback);\n        }\n        else {\n            callback(returnValue);\n        }\n    };\n    /**\n     * Loads a file from a url\n     * @param url url to load\n     * @param onSuccess callback called when the file successfully loads\n     * @param onProgress callback called while file is loading (if the server supports this mode)\n     * @param offlineProvider defines the offline provider for caching\n     * @param useArrayBuffer defines a boolean indicating that date must be returned as ArrayBuffer\n     * @param onError callback called when the file fails to load\n     * @returns a file request object\n     * @hidden\n     */\n    ShaderProcessor._FileToolsLoadFile = function (url, onSuccess, onProgress, offlineProvider, useArrayBuffer, onError) {\n        throw _WarnImport(\"FileTools\");\n    };\n    return ShaderProcessor;\n}());\nexport { ShaderProcessor };\n//# sourceMappingURL=shaderProcessor.js.map","import { ShaderLanguage } from \"../../Materials/shaderLanguage.js\";\n/** @hidden */\nvar WebGL2ShaderProcessor = /** @class */ (function () {\n    function WebGL2ShaderProcessor() {\n        this.shaderLanguage = ShaderLanguage.GLSL;\n    }\n    WebGL2ShaderProcessor.prototype.attributeProcessor = function (attribute) {\n        return attribute.replace(\"attribute\", \"in\");\n    };\n    WebGL2ShaderProcessor.prototype.varyingProcessor = function (varying, isFragment) {\n        return varying.replace(\"varying\", isFragment ? \"in\" : \"out\");\n    };\n    WebGL2ShaderProcessor.prototype.postProcessor = function (code, defines, isFragment) {\n        var hasDrawBuffersExtension = code.search(/#extension.+GL_EXT_draw_buffers.+require/) !== -1;\n        // Remove extensions\n        var regex = /#extension.+(GL_OVR_multiview2|GL_OES_standard_derivatives|GL_EXT_shader_texture_lod|GL_EXT_frag_depth|GL_EXT_draw_buffers).+(enable|require)/g;\n        code = code.replace(regex, \"\");\n        // Replace instructions\n        code = code.replace(/texture2D\\s*\\(/g, \"texture(\");\n        if (isFragment) {\n            code = code.replace(/texture2DLodEXT\\s*\\(/g, \"textureLod(\");\n            code = code.replace(/textureCubeLodEXT\\s*\\(/g, \"textureLod(\");\n            code = code.replace(/textureCube\\s*\\(/g, \"texture(\");\n            code = code.replace(/gl_FragDepthEXT/g, \"gl_FragDepth\");\n            code = code.replace(/gl_FragColor/g, \"glFragColor\");\n            code = code.replace(/gl_FragData/g, \"glFragData\");\n            code = code.replace(/void\\s+?main\\s*\\(/g, (hasDrawBuffersExtension ? \"\" : \"out vec4 glFragColor;\\n\") + \"void main(\");\n        }\n        else {\n            var hasMultiviewExtension = defines.indexOf(\"#define MULTIVIEW\") !== -1;\n            if (hasMultiviewExtension) {\n                return \"#extension GL_OVR_multiview2 : require\\nlayout (num_views = 2) in;\\n\" + code;\n            }\n        }\n        return code;\n    };\n    return WebGL2ShaderProcessor;\n}());\nexport { WebGL2ShaderProcessor };\n//# sourceMappingURL=webGL2ShaderProcessors.js.map","/** @hidden */\nvar WebGLHardwareTexture = /** @class */ (function () {\n    function WebGLHardwareTexture(existingTexture, context) {\n        if (existingTexture === void 0) { existingTexture = null; }\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        this._MSAARenderBuffer = null;\n        this._context = context;\n        if (!existingTexture) {\n            existingTexture = context.createTexture();\n            if (!existingTexture) {\n                throw new Error(\"Unable to create webGL texture\");\n            }\n        }\n        this.set(existingTexture);\n    }\n    Object.defineProperty(WebGLHardwareTexture.prototype, \"underlyingResource\", {\n        get: function () {\n            return this._webGLTexture;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebGLHardwareTexture.prototype.setUsage = function () { };\n    WebGLHardwareTexture.prototype.set = function (hardwareTexture) {\n        this._webGLTexture = hardwareTexture;\n    };\n    WebGLHardwareTexture.prototype.reset = function () {\n        this._webGLTexture = null;\n        this._MSAARenderBuffer = null;\n    };\n    WebGLHardwareTexture.prototype.release = function () {\n        if (this._MSAARenderBuffer) {\n            this._context.deleteRenderbuffer(this._MSAARenderBuffer);\n            this._MSAARenderBuffer = null;\n        }\n        if (this._webGLTexture) {\n            this._context.deleteTexture(this._webGLTexture);\n        }\n        this.reset();\n    };\n    return WebGLHardwareTexture;\n}());\nexport { WebGLHardwareTexture };\n//# sourceMappingURL=webGLHardwareTexture.js.map","/** @hidden */\nvar WebGLPipelineContext = /** @class */ (function () {\n    function WebGLPipelineContext() {\n        this._valueCache = {};\n        this.vertexCompilationError = null;\n        this.fragmentCompilationError = null;\n        this.programLinkError = null;\n        this.programValidationError = null;\n    }\n    Object.defineProperty(WebGLPipelineContext.prototype, \"isAsync\", {\n        get: function () {\n            return this.isParallelCompiled;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGLPipelineContext.prototype, \"isReady\", {\n        get: function () {\n            if (this.program) {\n                if (this.isParallelCompiled) {\n                    return this.engine._isRenderingStateCompiled(this);\n                }\n                return true;\n            }\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebGLPipelineContext.prototype._handlesSpectorRebuildCallback = function (onCompiled) {\n        if (onCompiled && this.program) {\n            onCompiled(this.program);\n        }\n    };\n    WebGLPipelineContext.prototype._fillEffectInformation = function (effect, uniformBuffersNames, uniformsNames, uniforms, samplerList, samplers, attributesNames, attributes) {\n        var engine = this.engine;\n        if (engine.supportsUniformBuffers) {\n            for (var name_1 in uniformBuffersNames) {\n                effect.bindUniformBlock(name_1, uniformBuffersNames[name_1]);\n            }\n        }\n        var effectAvailableUniforms = this.engine.getUniforms(this, uniformsNames);\n        effectAvailableUniforms.forEach(function (uniform, index) {\n            uniforms[uniformsNames[index]] = uniform;\n        });\n        this._uniforms = uniforms;\n        var index;\n        for (index = 0; index < samplerList.length; index++) {\n            var sampler = effect.getUniform(samplerList[index]);\n            if (sampler == null) {\n                samplerList.splice(index, 1);\n                index--;\n            }\n        }\n        samplerList.forEach(function (name, index) {\n            samplers[name] = index;\n        });\n        for (var _i = 0, _a = engine.getAttributes(this, attributesNames); _i < _a.length; _i++) {\n            var attr = _a[_i];\n            attributes.push(attr);\n        }\n    };\n    /**\n     * Release all associated resources.\n     **/\n    WebGLPipelineContext.prototype.dispose = function () {\n        this._uniforms = {};\n    };\n    /**\n     * @param uniformName\n     * @param matrix\n     * @hidden\n     */\n    WebGLPipelineContext.prototype._cacheMatrix = function (uniformName, matrix) {\n        var cache = this._valueCache[uniformName];\n        var flag = matrix.updateFlag;\n        if (cache !== undefined && cache === flag) {\n            return false;\n        }\n        this._valueCache[uniformName] = flag;\n        return true;\n    };\n    /**\n     * @param uniformName\n     * @param x\n     * @param y\n     * @hidden\n     */\n    WebGLPipelineContext.prototype._cacheFloat2 = function (uniformName, x, y) {\n        var cache = this._valueCache[uniformName];\n        if (!cache || cache.length !== 2) {\n            cache = [x, y];\n            this._valueCache[uniformName] = cache;\n            return true;\n        }\n        var changed = false;\n        if (cache[0] !== x) {\n            cache[0] = x;\n            changed = true;\n        }\n        if (cache[1] !== y) {\n            cache[1] = y;\n            changed = true;\n        }\n        return changed;\n    };\n    /**\n     * @param uniformName\n     * @param x\n     * @param y\n     * @param z\n     * @hidden\n     */\n    WebGLPipelineContext.prototype._cacheFloat3 = function (uniformName, x, y, z) {\n        var cache = this._valueCache[uniformName];\n        if (!cache || cache.length !== 3) {\n            cache = [x, y, z];\n            this._valueCache[uniformName] = cache;\n            return true;\n        }\n        var changed = false;\n        if (cache[0] !== x) {\n            cache[0] = x;\n            changed = true;\n        }\n        if (cache[1] !== y) {\n            cache[1] = y;\n            changed = true;\n        }\n        if (cache[2] !== z) {\n            cache[2] = z;\n            changed = true;\n        }\n        return changed;\n    };\n    /**\n     * @param uniformName\n     * @param x\n     * @param y\n     * @param z\n     * @param w\n     * @hidden\n     */\n    WebGLPipelineContext.prototype._cacheFloat4 = function (uniformName, x, y, z, w) {\n        var cache = this._valueCache[uniformName];\n        if (!cache || cache.length !== 4) {\n            cache = [x, y, z, w];\n            this._valueCache[uniformName] = cache;\n            return true;\n        }\n        var changed = false;\n        if (cache[0] !== x) {\n            cache[0] = x;\n            changed = true;\n        }\n        if (cache[1] !== y) {\n            cache[1] = y;\n            changed = true;\n        }\n        if (cache[2] !== z) {\n            cache[2] = z;\n            changed = true;\n        }\n        if (cache[3] !== w) {\n            cache[3] = w;\n            changed = true;\n        }\n        return changed;\n    };\n    /**\n     * Sets an integer value on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param value Value to be set.\n     */\n    WebGLPipelineContext.prototype.setInt = function (uniformName, value) {\n        var cache = this._valueCache[uniformName];\n        if (cache !== undefined && cache === value) {\n            return;\n        }\n        if (this.engine.setInt(this._uniforms[uniformName], value)) {\n            this._valueCache[uniformName] = value;\n        }\n    };\n    /**\n     * Sets a int2 on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param x First int in int2.\n     * @param y Second int in int2.\n     */\n    WebGLPipelineContext.prototype.setInt2 = function (uniformName, x, y) {\n        if (this._cacheFloat2(uniformName, x, y)) {\n            if (!this.engine.setInt2(this._uniforms[uniformName], x, y)) {\n                this._valueCache[uniformName] = null;\n            }\n        }\n    };\n    /**\n     * Sets a int3 on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param x First int in int3.\n     * @param y Second int in int3.\n     * @param z Third int in int3.\n     */\n    WebGLPipelineContext.prototype.setInt3 = function (uniformName, x, y, z) {\n        if (this._cacheFloat3(uniformName, x, y, z)) {\n            if (!this.engine.setInt3(this._uniforms[uniformName], x, y, z)) {\n                this._valueCache[uniformName] = null;\n            }\n        }\n    };\n    /**\n     * Sets a int4 on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param x First int in int4.\n     * @param y Second int in int4.\n     * @param z Third int in int4.\n     * @param w Fourth int in int4.\n     */\n    WebGLPipelineContext.prototype.setInt4 = function (uniformName, x, y, z, w) {\n        if (this._cacheFloat4(uniformName, x, y, z, w)) {\n            if (!this.engine.setInt4(this._uniforms[uniformName], x, y, z, w)) {\n                this._valueCache[uniformName] = null;\n            }\n        }\n    };\n    /**\n     * Sets an int array on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param array array to be set.\n     */\n    WebGLPipelineContext.prototype.setIntArray = function (uniformName, array) {\n        this._valueCache[uniformName] = null;\n        this.engine.setIntArray(this._uniforms[uniformName], array);\n    };\n    /**\n     * Sets an int array 2 on a uniform variable. (Array is specified as single array eg. [1,2,3,4] will result in [[1,2],[3,4]] in the shader)\n     * @param uniformName Name of the variable.\n     * @param array array to be set.\n     */\n    WebGLPipelineContext.prototype.setIntArray2 = function (uniformName, array) {\n        this._valueCache[uniformName] = null;\n        this.engine.setIntArray2(this._uniforms[uniformName], array);\n    };\n    /**\n     * Sets an int array 3 on a uniform variable. (Array is specified as single array eg. [1,2,3,4,5,6] will result in [[1,2,3],[4,5,6]] in the shader)\n     * @param uniformName Name of the variable.\n     * @param array array to be set.\n     */\n    WebGLPipelineContext.prototype.setIntArray3 = function (uniformName, array) {\n        this._valueCache[uniformName] = null;\n        this.engine.setIntArray3(this._uniforms[uniformName], array);\n    };\n    /**\n     * Sets an int array 4 on a uniform variable. (Array is specified as single array eg. [1,2,3,4,5,6,7,8] will result in [[1,2,3,4],[5,6,7,8]] in the shader)\n     * @param uniformName Name of the variable.\n     * @param array array to be set.\n     */\n    WebGLPipelineContext.prototype.setIntArray4 = function (uniformName, array) {\n        this._valueCache[uniformName] = null;\n        this.engine.setIntArray4(this._uniforms[uniformName], array);\n    };\n    /**\n     * Sets an array on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param array array to be set.\n     */\n    WebGLPipelineContext.prototype.setArray = function (uniformName, array) {\n        this._valueCache[uniformName] = null;\n        this.engine.setArray(this._uniforms[uniformName], array);\n    };\n    /**\n     * Sets an array 2 on a uniform variable. (Array is specified as single array eg. [1,2,3,4] will result in [[1,2],[3,4]] in the shader)\n     * @param uniformName Name of the variable.\n     * @param array array to be set.\n     */\n    WebGLPipelineContext.prototype.setArray2 = function (uniformName, array) {\n        this._valueCache[uniformName] = null;\n        this.engine.setArray2(this._uniforms[uniformName], array);\n    };\n    /**\n     * Sets an array 3 on a uniform variable. (Array is specified as single array eg. [1,2,3,4,5,6] will result in [[1,2,3],[4,5,6]] in the shader)\n     * @param uniformName Name of the variable.\n     * @param array array to be set.\n     * @returns this effect.\n     */\n    WebGLPipelineContext.prototype.setArray3 = function (uniformName, array) {\n        this._valueCache[uniformName] = null;\n        this.engine.setArray3(this._uniforms[uniformName], array);\n    };\n    /**\n     * Sets an array 4 on a uniform variable. (Array is specified as single array eg. [1,2,3,4,5,6,7,8] will result in [[1,2,3,4],[5,6,7,8]] in the shader)\n     * @param uniformName Name of the variable.\n     * @param array array to be set.\n     */\n    WebGLPipelineContext.prototype.setArray4 = function (uniformName, array) {\n        this._valueCache[uniformName] = null;\n        this.engine.setArray4(this._uniforms[uniformName], array);\n    };\n    /**\n     * Sets matrices on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param matrices matrices to be set.\n     */\n    WebGLPipelineContext.prototype.setMatrices = function (uniformName, matrices) {\n        if (!matrices) {\n            return;\n        }\n        this._valueCache[uniformName] = null;\n        this.engine.setMatrices(this._uniforms[uniformName], matrices);\n    };\n    /**\n     * Sets matrix on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param matrix matrix to be set.\n     */\n    WebGLPipelineContext.prototype.setMatrix = function (uniformName, matrix) {\n        if (this._cacheMatrix(uniformName, matrix)) {\n            if (!this.engine.setMatrices(this._uniforms[uniformName], matrix.toArray())) {\n                this._valueCache[uniformName] = null;\n            }\n        }\n    };\n    /**\n     * Sets a 3x3 matrix on a uniform variable. (Specified as [1,2,3,4,5,6,7,8,9] will result in [1,2,3][4,5,6][7,8,9] matrix)\n     * @param uniformName Name of the variable.\n     * @param matrix matrix to be set.\n     */\n    WebGLPipelineContext.prototype.setMatrix3x3 = function (uniformName, matrix) {\n        this._valueCache[uniformName] = null;\n        this.engine.setMatrix3x3(this._uniforms[uniformName], matrix);\n    };\n    /**\n     * Sets a 2x2 matrix on a uniform variable. (Specified as [1,2,3,4] will result in [1,2][3,4] matrix)\n     * @param uniformName Name of the variable.\n     * @param matrix matrix to be set.\n     */\n    WebGLPipelineContext.prototype.setMatrix2x2 = function (uniformName, matrix) {\n        this._valueCache[uniformName] = null;\n        this.engine.setMatrix2x2(this._uniforms[uniformName], matrix);\n    };\n    /**\n     * Sets a float on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param value value to be set.\n     * @returns this effect.\n     */\n    WebGLPipelineContext.prototype.setFloat = function (uniformName, value) {\n        var cache = this._valueCache[uniformName];\n        if (cache !== undefined && cache === value) {\n            return;\n        }\n        if (this.engine.setFloat(this._uniforms[uniformName], value)) {\n            this._valueCache[uniformName] = value;\n        }\n    };\n    /**\n     * Sets a Vector2 on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param vector2 vector2 to be set.\n     */\n    WebGLPipelineContext.prototype.setVector2 = function (uniformName, vector2) {\n        if (this._cacheFloat2(uniformName, vector2.x, vector2.y)) {\n            if (!this.engine.setFloat2(this._uniforms[uniformName], vector2.x, vector2.y)) {\n                this._valueCache[uniformName] = null;\n            }\n        }\n    };\n    /**\n     * Sets a float2 on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param x First float in float2.\n     * @param y Second float in float2.\n     */\n    WebGLPipelineContext.prototype.setFloat2 = function (uniformName, x, y) {\n        if (this._cacheFloat2(uniformName, x, y)) {\n            if (!this.engine.setFloat2(this._uniforms[uniformName], x, y)) {\n                this._valueCache[uniformName] = null;\n            }\n        }\n    };\n    /**\n     * Sets a Vector3 on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param vector3 Value to be set.\n     */\n    WebGLPipelineContext.prototype.setVector3 = function (uniformName, vector3) {\n        if (this._cacheFloat3(uniformName, vector3.x, vector3.y, vector3.z)) {\n            if (!this.engine.setFloat3(this._uniforms[uniformName], vector3.x, vector3.y, vector3.z)) {\n                this._valueCache[uniformName] = null;\n            }\n        }\n    };\n    /**\n     * Sets a float3 on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param x First float in float3.\n     * @param y Second float in float3.\n     * @param z Third float in float3.\n     */\n    WebGLPipelineContext.prototype.setFloat3 = function (uniformName, x, y, z) {\n        if (this._cacheFloat3(uniformName, x, y, z)) {\n            if (!this.engine.setFloat3(this._uniforms[uniformName], x, y, z)) {\n                this._valueCache[uniformName] = null;\n            }\n        }\n    };\n    /**\n     * Sets a Vector4 on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param vector4 Value to be set.\n     */\n    WebGLPipelineContext.prototype.setVector4 = function (uniformName, vector4) {\n        if (this._cacheFloat4(uniformName, vector4.x, vector4.y, vector4.z, vector4.w)) {\n            if (!this.engine.setFloat4(this._uniforms[uniformName], vector4.x, vector4.y, vector4.z, vector4.w)) {\n                this._valueCache[uniformName] = null;\n            }\n        }\n    };\n    /**\n     * Sets a Quaternion on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param quaternion Value to be set.\n     */\n    WebGLPipelineContext.prototype.setQuaternion = function (uniformName, quaternion) {\n        if (this._cacheFloat4(uniformName, quaternion.x, quaternion.y, quaternion.z, quaternion.w)) {\n            if (!this.engine.setFloat4(this._uniforms[uniformName], quaternion.x, quaternion.y, quaternion.z, quaternion.w)) {\n                this._valueCache[uniformName] = null;\n            }\n        }\n    };\n    /**\n     * Sets a float4 on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param x First float in float4.\n     * @param y Second float in float4.\n     * @param z Third float in float4.\n     * @param w Fourth float in float4.\n     * @returns this effect.\n     */\n    WebGLPipelineContext.prototype.setFloat4 = function (uniformName, x, y, z, w) {\n        if (this._cacheFloat4(uniformName, x, y, z, w)) {\n            if (!this.engine.setFloat4(this._uniforms[uniformName], x, y, z, w)) {\n                this._valueCache[uniformName] = null;\n            }\n        }\n    };\n    /**\n     * Sets a Color3 on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param color3 Value to be set.\n     */\n    WebGLPipelineContext.prototype.setColor3 = function (uniformName, color3) {\n        if (this._cacheFloat3(uniformName, color3.r, color3.g, color3.b)) {\n            if (!this.engine.setFloat3(this._uniforms[uniformName], color3.r, color3.g, color3.b)) {\n                this._valueCache[uniformName] = null;\n            }\n        }\n    };\n    /**\n     * Sets a Color4 on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param color3 Value to be set.\n     * @param alpha Alpha value to be set.\n     */\n    WebGLPipelineContext.prototype.setColor4 = function (uniformName, color3, alpha) {\n        if (this._cacheFloat4(uniformName, color3.r, color3.g, color3.b, alpha)) {\n            if (!this.engine.setFloat4(this._uniforms[uniformName], color3.r, color3.g, color3.b, alpha)) {\n                this._valueCache[uniformName] = null;\n            }\n        }\n    };\n    /**\n     * Sets a Color4 on a uniform variable\n     * @param uniformName defines the name of the variable\n     * @param color4 defines the value to be set\n     */\n    WebGLPipelineContext.prototype.setDirectColor4 = function (uniformName, color4) {\n        if (this._cacheFloat4(uniformName, color4.r, color4.g, color4.b, color4.a)) {\n            if (!this.engine.setFloat4(this._uniforms[uniformName], color4.r, color4.g, color4.b, color4.a)) {\n                this._valueCache[uniformName] = null;\n            }\n        }\n    };\n    WebGLPipelineContext.prototype._getVertexShaderCode = function () {\n        return this.vertexShader ? this.engine._getShaderSource(this.vertexShader) : null;\n    };\n    WebGLPipelineContext.prototype._getFragmentShaderCode = function () {\n        return this.fragmentShader ? this.engine._getShaderSource(this.fragmentShader) : null;\n    };\n    return WebGLPipelineContext;\n}());\nexport { WebGLPipelineContext };\n//# sourceMappingURL=webGLPipelineContext.js.map","import { ShaderLanguage } from \"../../Materials/shaderLanguage.js\";\n/** @hidden */\nvar WebGLShaderProcessor = /** @class */ (function () {\n    function WebGLShaderProcessor() {\n        this.shaderLanguage = ShaderLanguage.GLSL;\n    }\n    WebGLShaderProcessor.prototype.postProcessor = function (code, defines, isFragment, processingContext, engine) {\n        // Remove extensions\n        if (!engine.getCaps().drawBuffersExtension) {\n            // even if enclosed in #if/#endif, IE11 does parse the #extension declaration, so we need to remove it altogether\n            var regex = /#extension.+GL_EXT_draw_buffers.+(enable|require)/g;\n            code = code.replace(regex, \"\");\n        }\n        return code;\n    };\n    return WebGLShaderProcessor;\n}());\nexport { WebGLShaderProcessor };\n//# sourceMappingURL=webGLShaderProcessors.js.map","import { WebGPUDataBuffer } from \"../../Meshes/WebGPU/webgpuDataBuffer.js\";\nimport { FromHalfFloat } from \"../../Misc/textureTools.js\";\n\nimport { allocateAndCopyTypedBuffer } from \"../Extensions/engine.readTexture.js\";\nimport * as WebGPUConstants from \"./webgpuConstants.js\";\n/** @hidden */\nvar WebGPUBufferManager = /** @class */ (function () {\n    function WebGPUBufferManager(device) {\n        this._deferredReleaseBuffers = [];\n        this._device = device;\n    }\n    WebGPUBufferManager._IsGPUBuffer = function (buffer) {\n        return buffer.underlyingResource === undefined;\n    };\n    WebGPUBufferManager.prototype.createRawBuffer = function (viewOrSize, flags, mappedAtCreation) {\n        if (mappedAtCreation === void 0) { mappedAtCreation = false; }\n        var alignedLength = viewOrSize.byteLength !== undefined ? (viewOrSize.byteLength + 3) & ~3 : (viewOrSize + 3) & ~3; // 4 bytes alignments (because of the upload which requires this)\n        var verticesBufferDescriptor = {\n            mappedAtCreation: mappedAtCreation,\n            size: alignedLength,\n            usage: flags,\n        };\n        return this._device.createBuffer(verticesBufferDescriptor);\n    };\n    WebGPUBufferManager.prototype.createBuffer = function (viewOrSize, flags) {\n        var isView = viewOrSize.byteLength !== undefined;\n        var buffer = this.createRawBuffer(viewOrSize, flags);\n        var dataBuffer = new WebGPUDataBuffer(buffer);\n        dataBuffer.references = 1;\n        dataBuffer.capacity = isView ? viewOrSize.byteLength : viewOrSize;\n        if (isView) {\n            this.setSubData(dataBuffer, 0, viewOrSize);\n        }\n        return dataBuffer;\n    };\n    WebGPUBufferManager.prototype.setRawData = function (buffer, dstByteOffset, src, srcByteOffset, byteLength) {\n        this._device.queue.writeBuffer(buffer, dstByteOffset, src.buffer, srcByteOffset, byteLength);\n    };\n    WebGPUBufferManager.prototype.setSubData = function (dataBuffer, dstByteOffset, src, srcByteOffset, byteLength) {\n        if (srcByteOffset === void 0) { srcByteOffset = 0; }\n        if (byteLength === void 0) { byteLength = 0; }\n        var buffer = dataBuffer.underlyingResource;\n        byteLength = byteLength || src.byteLength;\n        byteLength = Math.min(byteLength, dataBuffer.capacity - dstByteOffset);\n        // After Migration to Canary\n        var chunkStart = src.byteOffset + srcByteOffset;\n        var chunkEnd = chunkStart + byteLength;\n        // 4 bytes alignments for upload\n        var alignedLength = (byteLength + 3) & ~3;\n        if (alignedLength !== byteLength) {\n            var tempView = new Uint8Array(src.buffer.slice(chunkStart, chunkEnd));\n            src = new Uint8Array(alignedLength);\n            src.set(tempView);\n            srcByteOffset = 0;\n            chunkStart = 0;\n            chunkEnd = alignedLength;\n            byteLength = alignedLength;\n        }\n        // Chunk\n        var maxChunk = 1024 * 1024 * 15;\n        var offset = 0;\n        while (chunkEnd - (chunkStart + offset) > maxChunk) {\n            this._device.queue.writeBuffer(buffer, dstByteOffset + offset, src.buffer, chunkStart + offset, maxChunk);\n            offset += maxChunk;\n        }\n        this._device.queue.writeBuffer(buffer, dstByteOffset + offset, src.buffer, chunkStart + offset, byteLength - offset);\n    };\n    WebGPUBufferManager.prototype._getHalfFloatAsFloatRGBAArrayBuffer = function (dataLength, arrayBuffer, destArray) {\n        if (!destArray) {\n            destArray = new Float32Array(dataLength);\n        }\n        var srcData = new Uint16Array(arrayBuffer);\n        while (dataLength--) {\n            destArray[dataLength] = FromHalfFloat(srcData[dataLength]);\n        }\n        return destArray;\n    };\n    WebGPUBufferManager.prototype.readDataFromBuffer = function (gpuBuffer, size, width, height, bytesPerRow, bytesPerRowAligned, type, offset, buffer, destroyBuffer, noDataConversion) {\n        var _this = this;\n        if (type === void 0) { type = 0; }\n        if (offset === void 0) { offset = 0; }\n        if (buffer === void 0) { buffer = null; }\n        if (destroyBuffer === void 0) { destroyBuffer = true; }\n        if (noDataConversion === void 0) { noDataConversion = false; }\n        var floatFormat = type === 1 ? 2 : type === 2 ? 1 : 0;\n        return new Promise(function (resolve, reject) {\n            gpuBuffer.mapAsync(WebGPUConstants.MapMode.Read, offset, size).then(function () {\n                var copyArrayBuffer = gpuBuffer.getMappedRange(offset, size);\n                var data = buffer;\n                if (noDataConversion) {\n                    if (data === null) {\n                        data = allocateAndCopyTypedBuffer(type, size, true, copyArrayBuffer);\n                    }\n                    else {\n                        data = allocateAndCopyTypedBuffer(type, data.buffer, undefined, copyArrayBuffer);\n                    }\n                }\n                else {\n                    if (data === null) {\n                        switch (floatFormat) {\n                            case 0: // byte format\n                                data = new Uint8Array(size);\n                                data.set(new Uint8Array(copyArrayBuffer));\n                                break;\n                            case 1: // half float\n                                // TODO WEBGPU use computer shaders (or render pass) to make the conversion?\n                                data = _this._getHalfFloatAsFloatRGBAArrayBuffer(size / 2, copyArrayBuffer);\n                                break;\n                            case 2: // float\n                                data = new Float32Array(size / 4);\n                                data.set(new Float32Array(copyArrayBuffer));\n                                break;\n                        }\n                    }\n                    else {\n                        switch (floatFormat) {\n                            case 0: // byte format\n                                data = new Uint8Array(data.buffer);\n                                data.set(new Uint8Array(copyArrayBuffer));\n                                break;\n                            case 1: // half float\n                                // TODO WEBGPU use computer shaders (or render pass) to make the conversion?\n                                data = _this._getHalfFloatAsFloatRGBAArrayBuffer(size / 2, copyArrayBuffer, buffer);\n                                break;\n                            case 2: // float\n                                data = new Float32Array(data.buffer);\n                                data.set(new Float32Array(copyArrayBuffer));\n                                break;\n                        }\n                    }\n                }\n                if (bytesPerRow !== bytesPerRowAligned) {\n                    // TODO WEBGPU use computer shaders (or render pass) to build the final buffer data?\n                    if (floatFormat === 1 && !noDataConversion) {\n                        // half float have been converted to float above\n                        bytesPerRow *= 2;\n                        bytesPerRowAligned *= 2;\n                    }\n                    var data2 = new Uint8Array(data.buffer);\n                    var offset_1 = bytesPerRow, offset2 = 0;\n                    for (var y = 1; y < height; ++y) {\n                        offset2 = y * bytesPerRowAligned;\n                        for (var x = 0; x < bytesPerRow; ++x) {\n                            data2[offset_1++] = data2[offset2++];\n                        }\n                    }\n                    if (floatFormat !== 0 && !noDataConversion) {\n                        data = new Float32Array(data2.buffer, 0, offset_1 / 4);\n                    }\n                    else {\n                        data = new Uint8Array(data2.buffer, 0, offset_1);\n                    }\n                }\n                gpuBuffer.unmap();\n                if (destroyBuffer) {\n                    _this.releaseBuffer(gpuBuffer);\n                }\n                resolve(data);\n            }, function (reason) { return reject(reason); });\n        });\n    };\n    WebGPUBufferManager.prototype.releaseBuffer = function (buffer) {\n        if (WebGPUBufferManager._IsGPUBuffer(buffer)) {\n            this._deferredReleaseBuffers.push(buffer);\n            return true;\n        }\n        buffer.references--;\n        if (buffer.references === 0) {\n            this._deferredReleaseBuffers.push(buffer.underlyingResource);\n            return true;\n        }\n        return false;\n    };\n    WebGPUBufferManager.prototype.destroyDeferredBuffers = function () {\n        for (var i = 0; i < this._deferredReleaseBuffers.length; ++i) {\n            this._deferredReleaseBuffers[i].destroy();\n        }\n        this._deferredReleaseBuffers.length = 0;\n    };\n    return WebGPUBufferManager;\n}());\nexport { WebGPUBufferManager };\n//# sourceMappingURL=webgpuBufferManager.js.map","/** @hidden */\nvar WebGPURenderItemViewport = /** @class */ (function () {\n    function WebGPURenderItemViewport(x, y, w, h) {\n        this.x = Math.floor(x);\n        this.y = Math.floor(y);\n        this.w = Math.floor(w);\n        this.h = Math.floor(h);\n    }\n    WebGPURenderItemViewport.prototype.run = function (renderPass) {\n        renderPass.setViewport(this.x, this.y, this.w, this.h, 0, 1);\n    };\n    WebGPURenderItemViewport.prototype.clone = function () {\n        return new WebGPURenderItemViewport(this.x, this.y, this.w, this.h);\n    };\n    return WebGPURenderItemViewport;\n}());\nexport { WebGPURenderItemViewport };\n/** @hidden */\nvar WebGPURenderItemScissor = /** @class */ (function () {\n    function WebGPURenderItemScissor(x, y, w, h) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n    }\n    WebGPURenderItemScissor.prototype.run = function (renderPass) {\n        renderPass.setScissorRect(this.x, this.y, this.w, this.h);\n    };\n    WebGPURenderItemScissor.prototype.clone = function () {\n        return new WebGPURenderItemScissor(this.x, this.y, this.w, this.h);\n    };\n    return WebGPURenderItemScissor;\n}());\nexport { WebGPURenderItemScissor };\n/** @hidden */\nvar WebGPURenderItemStencilRef = /** @class */ (function () {\n    function WebGPURenderItemStencilRef(ref) {\n        this.ref = ref;\n    }\n    WebGPURenderItemStencilRef.prototype.run = function (renderPass) {\n        renderPass.setStencilReference(this.ref);\n    };\n    WebGPURenderItemStencilRef.prototype.clone = function () {\n        return new WebGPURenderItemStencilRef(this.ref);\n    };\n    return WebGPURenderItemStencilRef;\n}());\nexport { WebGPURenderItemStencilRef };\n/** @hidden */\nvar WebGPURenderItemBlendColor = /** @class */ (function () {\n    function WebGPURenderItemBlendColor(color) {\n        this.color = color;\n    }\n    WebGPURenderItemBlendColor.prototype.run = function (renderPass) {\n        renderPass.setBlendConstant(this.color);\n    };\n    WebGPURenderItemBlendColor.prototype.clone = function () {\n        return new WebGPURenderItemBlendColor(this.color);\n    };\n    return WebGPURenderItemBlendColor;\n}());\nexport { WebGPURenderItemBlendColor };\n/** @hidden */\nvar WebGPURenderItemBeginOcclusionQuery = /** @class */ (function () {\n    function WebGPURenderItemBeginOcclusionQuery(query) {\n        this.query = query;\n    }\n    WebGPURenderItemBeginOcclusionQuery.prototype.run = function (renderPass) {\n        renderPass.beginOcclusionQuery(this.query);\n    };\n    WebGPURenderItemBeginOcclusionQuery.prototype.clone = function () {\n        return new WebGPURenderItemBeginOcclusionQuery(this.query);\n    };\n    return WebGPURenderItemBeginOcclusionQuery;\n}());\nexport { WebGPURenderItemBeginOcclusionQuery };\n/** @hidden */\nvar WebGPURenderItemEndOcclusionQuery = /** @class */ (function () {\n    function WebGPURenderItemEndOcclusionQuery() {\n    }\n    WebGPURenderItemEndOcclusionQuery.prototype.run = function (renderPass) {\n        renderPass.endOcclusionQuery();\n    };\n    WebGPURenderItemEndOcclusionQuery.prototype.clone = function () {\n        return new WebGPURenderItemEndOcclusionQuery();\n    };\n    return WebGPURenderItemEndOcclusionQuery;\n}());\nexport { WebGPURenderItemEndOcclusionQuery };\nvar WebGPURenderItemBundles = /** @class */ (function () {\n    function WebGPURenderItemBundles() {\n        this.bundles = [];\n    }\n    WebGPURenderItemBundles.prototype.run = function (renderPass) {\n        renderPass.executeBundles(this.bundles);\n    };\n    WebGPURenderItemBundles.prototype.clone = function () {\n        var cloned = new WebGPURenderItemBundles();\n        cloned.bundles = this.bundles;\n        return cloned;\n    };\n    return WebGPURenderItemBundles;\n}());\n/** @hidden */\nvar WebGPUBundleList = /** @class */ (function () {\n    function WebGPUBundleList(device) {\n        this.numDrawCalls = 0;\n        this._device = device;\n        this._list = new Array(10);\n        this._listLength = 0;\n    }\n    WebGPUBundleList.prototype.addBundle = function (bundle) {\n        if (!this._currentItemIsBundle) {\n            var item = new WebGPURenderItemBundles();\n            this._list[this._listLength++] = item;\n            this._currentBundleList = item.bundles;\n            this._currentItemIsBundle = true;\n        }\n        if (bundle) {\n            this._currentBundleList.push(bundle);\n        }\n    };\n    WebGPUBundleList.prototype._finishBundle = function () {\n        if (this._currentItemIsBundle && this._bundleEncoder) {\n            this._currentBundleList.push(this._bundleEncoder.finish());\n            this._bundleEncoder = undefined;\n            this._currentItemIsBundle = false;\n        }\n    };\n    WebGPUBundleList.prototype.addItem = function (item) {\n        this._finishBundle();\n        this._list[this._listLength++] = item;\n        this._currentItemIsBundle = false;\n    };\n    WebGPUBundleList.prototype.getBundleEncoder = function (colorFormats, depthStencilFormat, sampleCount) {\n        if (!this._currentItemIsBundle) {\n            this.addBundle();\n            this._bundleEncoder = this._device.createRenderBundleEncoder({\n                colorFormats: colorFormats,\n                depthStencilFormat: depthStencilFormat,\n                sampleCount: sampleCount,\n            });\n        }\n        return this._bundleEncoder;\n    };\n    WebGPUBundleList.prototype.close = function () {\n        this._finishBundle();\n    };\n    WebGPUBundleList.prototype.run = function (renderPass) {\n        this.close();\n        for (var i = 0; i < this._listLength; ++i) {\n            this._list[i].run(renderPass);\n        }\n    };\n    WebGPUBundleList.prototype.reset = function () {\n        this._listLength = 0;\n        this._currentItemIsBundle = false;\n        this.numDrawCalls = 0;\n    };\n    WebGPUBundleList.prototype.clone = function () {\n        this.close();\n        var cloned = new WebGPUBundleList(this._device);\n        cloned._list = new Array(this._listLength);\n        cloned._listLength = this._listLength;\n        cloned.numDrawCalls = this.numDrawCalls;\n        for (var i = 0; i < this._listLength; ++i) {\n            cloned._list[i] = this._list[i].clone();\n        }\n        return cloned;\n    };\n    return WebGPUBundleList;\n}());\nexport { WebGPUBundleList };\n//# sourceMappingURL=webgpuBundleList.js.map","import { Logger } from \"../../Misc/logger.js\";\nvar WebGPUBindGroupCacheNode = /** @class */ (function () {\n    function WebGPUBindGroupCacheNode() {\n        this.values = {};\n    }\n    return WebGPUBindGroupCacheNode;\n}());\n/** @hidden */\nvar WebGPUCacheBindGroups = /** @class */ (function () {\n    function WebGPUCacheBindGroups(device, cacheSampler, engine) {\n        this.disabled = false;\n        this._device = device;\n        this._cacheSampler = cacheSampler;\n        this._engine = engine;\n    }\n    Object.defineProperty(WebGPUCacheBindGroups, \"Statistics\", {\n        get: function () {\n            return {\n                totalCreated: WebGPUCacheBindGroups.NumBindGroupsCreatedTotal,\n                lastFrameCreated: WebGPUCacheBindGroups.NumBindGroupsCreatedLastFrame,\n                lookupLastFrame: WebGPUCacheBindGroups.NumBindGroupsLookupLastFrame,\n                noLookupLastFrame: WebGPUCacheBindGroups.NumBindGroupsNoLookupLastFrame,\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebGPUCacheBindGroups.prototype.endFrame = function () {\n        WebGPUCacheBindGroups.NumBindGroupsCreatedLastFrame = WebGPUCacheBindGroups._NumBindGroupsCreatedCurrentFrame;\n        WebGPUCacheBindGroups.NumBindGroupsLookupLastFrame = WebGPUCacheBindGroups._NumBindGroupsLookupCurrentFrame;\n        WebGPUCacheBindGroups.NumBindGroupsNoLookupLastFrame = WebGPUCacheBindGroups._NumBindGroupsNoLookupCurrentFrame;\n        WebGPUCacheBindGroups._NumBindGroupsCreatedCurrentFrame = 0;\n        WebGPUCacheBindGroups._NumBindGroupsLookupCurrentFrame = 0;\n        WebGPUCacheBindGroups._NumBindGroupsNoLookupCurrentFrame = 0;\n    };\n    /**\n     * Cache is currently based on the uniform/storage buffers, samplers and textures used by the binding groups.\n     * Note that all uniform buffers have an offset of 0 in Babylon and we don't have a use case where we would have the same buffer used with different capacity values:\n     * that means we don't need to factor in the offset/size of the buffer in the cache, only the id\n     * @param webgpuPipelineContext\n     * @param drawContext\n     * @param materialContext\n     */\n    WebGPUCacheBindGroups.prototype.getBindGroups = function (webgpuPipelineContext, drawContext, materialContext) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        var bindGroups = undefined;\n        var node = WebGPUCacheBindGroups._Cache;\n        var cacheIsDisabled = this.disabled || materialContext.forceBindGroupCreation;\n        if (!cacheIsDisabled) {\n            if (!drawContext.isDirty(materialContext.updateId) && !materialContext.isDirty) {\n                WebGPUCacheBindGroups._NumBindGroupsNoLookupCurrentFrame++;\n                return drawContext.bindGroups;\n            }\n            for (var _i = 0, _l = webgpuPipelineContext.shaderProcessingContext.bufferNames; _i < _l.length; _i++) {\n                var bufferName = _l[_i];\n                var uboId = (_b = (_a = drawContext.buffers[bufferName]) === null || _a === void 0 ? void 0 : _a.uniqueId) !== null && _b !== void 0 ? _b : 0;\n                var nextNode = node.values[uboId];\n                if (!nextNode) {\n                    nextNode = new WebGPUBindGroupCacheNode();\n                    node.values[uboId] = nextNode;\n                }\n                node = nextNode;\n            }\n            for (var _m = 0, _o = webgpuPipelineContext.shaderProcessingContext.samplerNames; _m < _o.length; _m++) {\n                var samplerName = _o[_m];\n                var samplerHashCode = (_d = (_c = materialContext.samplers[samplerName]) === null || _c === void 0 ? void 0 : _c.hashCode) !== null && _d !== void 0 ? _d : 0;\n                var nextNode = node.values[samplerHashCode];\n                if (!nextNode) {\n                    nextNode = new WebGPUBindGroupCacheNode();\n                    node.values[samplerHashCode] = nextNode;\n                }\n                node = nextNode;\n            }\n            for (var _p = 0, _q = webgpuPipelineContext.shaderProcessingContext.textureNames; _p < _q.length; _p++) {\n                var textureName = _q[_p];\n                var textureId = (_g = (_f = (_e = materialContext.textures[textureName]) === null || _e === void 0 ? void 0 : _e.texture) === null || _f === void 0 ? void 0 : _f.uniqueId) !== null && _g !== void 0 ? _g : 0;\n                var nextNode = node.values[textureId];\n                if (!nextNode) {\n                    nextNode = new WebGPUBindGroupCacheNode();\n                    node.values[textureId] = nextNode;\n                }\n                node = nextNode;\n            }\n            bindGroups = node.bindGroups;\n        }\n        drawContext.resetIsDirty(materialContext.updateId);\n        materialContext.isDirty = false;\n        if (bindGroups) {\n            drawContext.bindGroups = bindGroups;\n            WebGPUCacheBindGroups._NumBindGroupsLookupCurrentFrame++;\n            return bindGroups;\n        }\n        bindGroups = [];\n        drawContext.bindGroups = bindGroups;\n        if (!cacheIsDisabled) {\n            node.bindGroups = bindGroups;\n        }\n        WebGPUCacheBindGroups.NumBindGroupsCreatedTotal++;\n        WebGPUCacheBindGroups._NumBindGroupsCreatedCurrentFrame++;\n        var bindGroupLayouts = webgpuPipelineContext.bindGroupLayouts;\n        for (var i = 0; i < webgpuPipelineContext.shaderProcessingContext.bindGroupLayoutEntries.length; i++) {\n            var setDefinition = webgpuPipelineContext.shaderProcessingContext.bindGroupLayoutEntries[i];\n            var entries = webgpuPipelineContext.shaderProcessingContext.bindGroupEntries[i];\n            for (var j = 0; j < setDefinition.length; j++) {\n                var entry = webgpuPipelineContext.shaderProcessingContext.bindGroupLayoutEntries[i][j];\n                var entryInfo = webgpuPipelineContext.shaderProcessingContext.bindGroupLayoutEntryInfo[i][entry.binding];\n                var name_1 = (_h = entryInfo.nameInArrayOfTexture) !== null && _h !== void 0 ? _h : entryInfo.name;\n                if (entry.sampler) {\n                    var bindingInfo = materialContext.samplers[name_1];\n                    if (bindingInfo) {\n                        var sampler = bindingInfo.sampler;\n                        if (!sampler) {\n                            if (this._engine.dbgSanityChecks) {\n                                Logger.Error(\"Trying to bind a null sampler! entry=\".concat(JSON.stringify(entry), \", name=\").concat(name_1, \", bindingInfo=\").concat(JSON.stringify(bindingInfo, function (key, value) { return (key === \"texture\" ? \"<no dump>\" : value); }), \", materialContext.uniqueId=\").concat(materialContext.uniqueId), 50);\n                            }\n                            continue;\n                        }\n                        entries[j].resource = this._cacheSampler.getSampler(sampler, false, bindingInfo.hashCode);\n                    }\n                    else {\n                        Logger.Error(\"Sampler \\\"\".concat(name_1, \"\\\" could not be bound. entry=\").concat(JSON.stringify(entry), \", materialContext=\").concat(JSON.stringify(materialContext, function (key, value) {\n                            return key === \"texture\" || key === \"sampler\" ? \"<no dump>\" : value;\n                        })), 50);\n                    }\n                }\n                else if (entry.texture || entry.storageTexture) {\n                    var bindingInfo = materialContext.textures[name_1];\n                    if (bindingInfo) {\n                        if (this._engine.dbgSanityChecks && bindingInfo.texture === null) {\n                            Logger.Error(\"Trying to bind a null texture! entry=\".concat(JSON.stringify(entry), \", bindingInfo=\").concat(JSON.stringify(bindingInfo, function (key, value) {\n                                return key === \"texture\" ? \"<no dump>\" : value;\n                            }), \", materialContext.uniqueId=\").concat(materialContext.uniqueId), 50);\n                            continue;\n                        }\n                        var hardwareTexture = bindingInfo.texture._hardwareTexture;\n                        if (this._engine.dbgSanityChecks &&\n                            (!hardwareTexture || (entry.texture && !hardwareTexture.view) || (entry.storageTexture && !hardwareTexture.viewForWriting))) {\n                            Logger.Error(\"Trying to bind a null gpu texture or view! entry=\".concat(JSON.stringify(entry), \", name=\").concat(name_1, \", bindingInfo=\").concat(JSON.stringify(bindingInfo, function (key, value) { return (key === \"texture\" ? \"<no dump>\" : value); }), \", isReady=\").concat((_j = bindingInfo.texture) === null || _j === void 0 ? void 0 : _j.isReady, \", materialContext.uniqueId=\").concat(materialContext.uniqueId), 50);\n                            continue;\n                        }\n                        entries[j].resource = entry.storageTexture ? hardwareTexture.viewForWriting : hardwareTexture.view;\n                    }\n                    else {\n                        Logger.Error(\"Texture \\\"\".concat(name_1, \"\\\" could not be bound. entry=\").concat(JSON.stringify(entry), \", materialContext=\").concat(JSON.stringify(materialContext, function (key, value) {\n                            return key === \"texture\" || key === \"sampler\" ? \"<no dump>\" : value;\n                        })), 50);\n                    }\n                }\n                else if (entry.externalTexture) {\n                    var bindingInfo = materialContext.textures[name_1];\n                    if (bindingInfo) {\n                        if (this._engine.dbgSanityChecks && bindingInfo.texture === null) {\n                            Logger.Error(\"Trying to bind a null external texture! entry=\".concat(JSON.stringify(entry), \", name=\").concat(name_1, \", bindingInfo=\").concat(JSON.stringify(bindingInfo, function (key, value) { return (key === \"texture\" ? \"<no dump>\" : value); }), \", materialContext.uniqueId=\").concat(materialContext.uniqueId), 50);\n                            continue;\n                        }\n                        var externalTexture = bindingInfo.texture.underlyingResource;\n                        if (this._engine.dbgSanityChecks && !externalTexture) {\n                            Logger.Error(\"Trying to bind a null gpu external texture! entry=\".concat(JSON.stringify(entry), \", name=\").concat(name_1, \", bindingInfo=\").concat(JSON.stringify(bindingInfo, function (key, value) { return (key === \"texture\" ? \"<no dump>\" : value); }), \", isReady=\").concat((_k = bindingInfo.texture) === null || _k === void 0 ? void 0 : _k.isReady, \", materialContext.uniqueId=\").concat(materialContext.uniqueId), 50);\n                            continue;\n                        }\n                        entries[j].resource = this._device.importExternalTexture({ source: externalTexture });\n                    }\n                    else {\n                        Logger.Error(\"Texture \\\"\".concat(name_1, \"\\\" could not be bound. entry=\").concat(JSON.stringify(entry), \", materialContext=\").concat(JSON.stringify(materialContext, function (key, value) {\n                            return key === \"texture\" || key === \"sampler\" ? \"<no dump>\" : value;\n                        })), 50);\n                    }\n                }\n                else if (entry.buffer) {\n                    var dataBuffer = drawContext.buffers[name_1];\n                    if (dataBuffer) {\n                        var webgpuBuffer = dataBuffer.underlyingResource;\n                        entries[j].resource.buffer = webgpuBuffer;\n                        entries[j].resource.size = dataBuffer.capacity;\n                    }\n                    else {\n                        Logger.Error(\"Can't find buffer \\\"\".concat(name_1, \"\\\". entry=\").concat(JSON.stringify(entry), \", buffers=\").concat(JSON.stringify(drawContext.buffers), \", drawContext.uniqueId=\").concat(drawContext.uniqueId), 50);\n                    }\n                }\n            }\n            var groupLayout = bindGroupLayouts[i];\n            bindGroups[i] = this._device.createBindGroup({\n                layout: groupLayout,\n                entries: entries,\n            });\n        }\n        return bindGroups;\n    };\n    WebGPUCacheBindGroups.NumBindGroupsCreatedTotal = 0;\n    WebGPUCacheBindGroups.NumBindGroupsCreatedLastFrame = 0;\n    WebGPUCacheBindGroups.NumBindGroupsLookupLastFrame = 0;\n    WebGPUCacheBindGroups.NumBindGroupsNoLookupLastFrame = 0;\n    WebGPUCacheBindGroups._Cache = new WebGPUBindGroupCacheNode();\n    WebGPUCacheBindGroups._NumBindGroupsCreatedCurrentFrame = 0;\n    WebGPUCacheBindGroups._NumBindGroupsLookupCurrentFrame = 0;\n    WebGPUCacheBindGroups._NumBindGroupsNoLookupCurrentFrame = 0;\n    return WebGPUCacheBindGroups;\n}());\nexport { WebGPUCacheBindGroups };\n//# sourceMappingURL=webgpuCacheBindGroups.js.map","/* eslint-disable @typescript-eslint/naming-convention */\n\nimport * as WebGPUConstants from \"./webgpuConstants.js\";\nimport { VertexBuffer } from \"../../Buffers/buffer.js\";\nimport { WebGPUShaderProcessor } from \"./webgpuShaderProcessor.js\";\nimport { renderableTextureFormatToIndex, WebGPUTextureHelper } from \"./webgpuTextureHelper.js\";\nvar StatePosition;\n(function (StatePosition) {\n    StatePosition[StatePosition[\"StencilReadMask\"] = 0] = \"StencilReadMask\";\n    StatePosition[StatePosition[\"StencilWriteMask\"] = 1] = \"StencilWriteMask\";\n    //DepthBiasClamp = 1, // not used, so remove it to improve perf\n    StatePosition[StatePosition[\"DepthBias\"] = 2] = \"DepthBias\";\n    StatePosition[StatePosition[\"DepthBiasSlopeScale\"] = 3] = \"DepthBiasSlopeScale\";\n    StatePosition[StatePosition[\"DepthStencilState\"] = 4] = \"DepthStencilState\";\n    StatePosition[StatePosition[\"MRTAttachments1\"] = 5] = \"MRTAttachments1\";\n    StatePosition[StatePosition[\"MRTAttachments2\"] = 6] = \"MRTAttachments2\";\n    StatePosition[StatePosition[\"RasterizationState\"] = 7] = \"RasterizationState\";\n    StatePosition[StatePosition[\"ColorStates\"] = 8] = \"ColorStates\";\n    StatePosition[StatePosition[\"ShaderStage\"] = 9] = \"ShaderStage\";\n    StatePosition[StatePosition[\"TextureStage\"] = 10] = \"TextureStage\";\n    StatePosition[StatePosition[\"VertexState\"] = 11] = \"VertexState\";\n    StatePosition[StatePosition[\"NumStates\"] = 12] = \"NumStates\";\n})(StatePosition || (StatePosition = {}));\nvar alphaBlendFactorToIndex = {\n    0: 1,\n    1: 2,\n    0x0300: 3,\n    0x0301: 4,\n    0x0302: 5,\n    0x0303: 6,\n    0x0304: 7,\n    0x0305: 8,\n    0x0306: 9,\n    0x0307: 10,\n    0x0308: 11,\n    0x8001: 12,\n    0x8002: 13,\n    0x8003: 12,\n    0x8004: 13, // OneMinusBlendColor (alpha)\n};\nvar stencilOpToIndex = {\n    0x0000: 0,\n    0x1e00: 1,\n    0x1e01: 2,\n    0x1e02: 3,\n    0x1e03: 4,\n    0x150a: 5,\n    0x8507: 6,\n    0x8508: 7, // DECR_WRAP\n};\n/** @hidden */\nvar WebGPUCacheRenderPipeline = /** @class */ (function () {\n    function WebGPUCacheRenderPipeline(device, emptyVertexBuffer, useTextureStage) {\n        this.mrtTextureCount = 0;\n        this._device = device;\n        this._useTextureStage = useTextureStage;\n        this._states = new Array(30); // pre-allocate enough room so that no new allocation will take place afterwards\n        this._statesLength = 0;\n        this._stateDirtyLowestIndex = 0;\n        this._emptyVertexBuffer = emptyVertexBuffer;\n        this._mrtFormats = [];\n        this._parameter = { token: undefined, pipeline: null };\n        this.disabled = false;\n        this.vertexBuffers = [];\n        this._kMaxVertexBufferStride = device.limits.maxVertexBufferArrayStride || 2048;\n        this.reset();\n    }\n    WebGPUCacheRenderPipeline.prototype.reset = function () {\n        this._isDirty = true;\n        this.vertexBuffers.length = 0;\n        this.setAlphaToCoverage(false);\n        this.resetDepthCullingState();\n        this.setClampDepth(false);\n        this.setDepthBias(0);\n        //this.setDepthBiasClamp(0);\n        this._webgpuColorFormat = [WebGPUConstants.TextureFormat.BGRA8Unorm];\n        this.setColorFormat(WebGPUConstants.TextureFormat.BGRA8Unorm);\n        this.setMRT([]);\n        this.setAlphaBlendEnabled(false);\n        this.setAlphaBlendFactors([null, null, null, null], [null, null]);\n        this.setWriteMask(0xf);\n        this.setDepthStencilFormat(WebGPUConstants.TextureFormat.Depth24PlusStencil8);\n        this.setStencilEnabled(false);\n        this.resetStencilState();\n        this.setBuffers(null, null, null);\n        this._setTextureState(0);\n    };\n    Object.defineProperty(WebGPUCacheRenderPipeline.prototype, \"colorFormats\", {\n        get: function () {\n            return this._mrtAttachments1 > 0 ? this._mrtFormats : this._webgpuColorFormat;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebGPUCacheRenderPipeline.prototype.getRenderPipeline = function (fillMode, effect, sampleCount, textureState) {\n        if (textureState === void 0) { textureState = 0; }\n        if (sampleCount > 1) {\n            // WebGPU only supports 1 or 4\n            sampleCount = 4;\n        }\n        if (this.disabled) {\n            var topology_1 = WebGPUCacheRenderPipeline._GetTopology(fillMode);\n            this._setVertexState(effect); // to fill this.vertexBuffers with correct data\n            this._parameter.pipeline = this._createRenderPipeline(effect, topology_1, sampleCount);\n            WebGPUCacheRenderPipeline.NumCacheMiss++;\n            WebGPUCacheRenderPipeline._NumPipelineCreationCurrentFrame++;\n            return this._parameter.pipeline;\n        }\n        this._setShaderStage(effect.uniqueId);\n        this._setRasterizationState(fillMode, sampleCount);\n        this._setColorStates();\n        this._setDepthStencilState();\n        this._setVertexState(effect);\n        this._setTextureState(textureState);\n        this.lastStateDirtyLowestIndex = this._stateDirtyLowestIndex;\n        if (!this._isDirty && this._parameter.pipeline) {\n            this._stateDirtyLowestIndex = this._statesLength;\n            WebGPUCacheRenderPipeline.NumCacheHitWithoutHash++;\n            return this._parameter.pipeline;\n        }\n        this._getRenderPipeline(this._parameter);\n        this._isDirty = false;\n        this._stateDirtyLowestIndex = this._statesLength;\n        if (this._parameter.pipeline) {\n            WebGPUCacheRenderPipeline.NumCacheHitWithHash++;\n            return this._parameter.pipeline;\n        }\n        var topology = WebGPUCacheRenderPipeline._GetTopology(fillMode);\n        this._parameter.pipeline = this._createRenderPipeline(effect, topology, sampleCount);\n        this._setRenderPipeline(this._parameter);\n        WebGPUCacheRenderPipeline.NumCacheMiss++;\n        WebGPUCacheRenderPipeline._NumPipelineCreationCurrentFrame++;\n        return this._parameter.pipeline;\n    };\n    WebGPUCacheRenderPipeline.prototype.endFrame = function () {\n        WebGPUCacheRenderPipeline.NumPipelineCreationLastFrame = WebGPUCacheRenderPipeline._NumPipelineCreationCurrentFrame;\n        WebGPUCacheRenderPipeline._NumPipelineCreationCurrentFrame = 0;\n    };\n    WebGPUCacheRenderPipeline.prototype.setAlphaToCoverage = function (enabled) {\n        this._alphaToCoverageEnabled = enabled;\n    };\n    WebGPUCacheRenderPipeline.prototype.setFrontFace = function (frontFace) {\n        this._frontFace = frontFace;\n    };\n    WebGPUCacheRenderPipeline.prototype.setCullEnabled = function (enabled) {\n        this._cullEnabled = enabled;\n    };\n    WebGPUCacheRenderPipeline.prototype.setCullFace = function (cullFace) {\n        this._cullFace = cullFace;\n    };\n    WebGPUCacheRenderPipeline.prototype.setClampDepth = function (clampDepth) {\n        this._clampDepth = clampDepth;\n    };\n    WebGPUCacheRenderPipeline.prototype.resetDepthCullingState = function () {\n        this.setDepthCullingState(false, 2, 1, 0, 0, true, true, 519);\n    };\n    WebGPUCacheRenderPipeline.prototype.setDepthCullingState = function (cullEnabled, frontFace, cullFace, zOffset, zOffsetUnits, depthTestEnabled, depthWriteEnabled, depthCompare) {\n        this._depthWriteEnabled = depthWriteEnabled;\n        this._depthTestEnabled = depthTestEnabled;\n        this._depthCompare = (depthCompare !== null && depthCompare !== void 0 ? depthCompare : 519) - 0x0200;\n        this._cullFace = cullFace;\n        this._cullEnabled = cullEnabled;\n        this._frontFace = frontFace;\n        this.setDepthBiasSlopeScale(zOffset);\n        this.setDepthBias(zOffsetUnits);\n    };\n    WebGPUCacheRenderPipeline.prototype.setDepthBias = function (depthBias) {\n        if (this._depthBias !== depthBias) {\n            this._depthBias = depthBias;\n            this._states[StatePosition.DepthBias] = depthBias;\n            this._isDirty = true;\n            this._stateDirtyLowestIndex = Math.min(this._stateDirtyLowestIndex, StatePosition.DepthBias);\n        }\n    };\n    /*public setDepthBiasClamp(depthBiasClamp: number): void {\n        if (this._depthBiasClamp !== depthBiasClamp) {\n            this._depthBiasClamp = depthBiasClamp;\n            this._states[StatePosition.DepthBiasClamp] = depthBiasClamp.toString();\n            this._isDirty = true;\n        }\n    }*/\n    WebGPUCacheRenderPipeline.prototype.setDepthBiasSlopeScale = function (depthBiasSlopeScale) {\n        if (this._depthBiasSlopeScale !== depthBiasSlopeScale) {\n            this._depthBiasSlopeScale = depthBiasSlopeScale;\n            this._states[StatePosition.DepthBiasSlopeScale] = depthBiasSlopeScale;\n            this._isDirty = true;\n            this._stateDirtyLowestIndex = Math.min(this._stateDirtyLowestIndex, StatePosition.DepthBiasSlopeScale);\n        }\n    };\n    WebGPUCacheRenderPipeline.prototype.setColorFormat = function (format) {\n        this._webgpuColorFormat[0] = format;\n        this._colorFormat = renderableTextureFormatToIndex[format !== null && format !== void 0 ? format : \"\"];\n    };\n    WebGPUCacheRenderPipeline.prototype.setMRTAttachments = function (attachments) {\n        this.mrtAttachments = attachments;\n        var mask = 0;\n        for (var i = 0; i < attachments.length; ++i) {\n            if (attachments[i] !== 0) {\n                mask += 1 << i;\n            }\n        }\n        if (this._mrtEnabledMask !== mask) {\n            this._mrtEnabledMask = mask;\n            this._isDirty = true;\n            this._stateDirtyLowestIndex = Math.min(this._stateDirtyLowestIndex, StatePosition.MRTAttachments1);\n        }\n    };\n    WebGPUCacheRenderPipeline.prototype.setMRT = function (textureArray, textureCount) {\n        var _a, _b;\n        textureCount = textureCount !== null && textureCount !== void 0 ? textureCount : textureArray.length;\n        if (textureCount > 10) {\n            // If we want more than 10 attachments we need to change this method (and the StatePosition enum) but 10 seems plenty: note that WebGPU only supports 8 at the time (2021/12/13)!\n            // As we need 39 different values we are using 6 bits to encode a texture format, meaning we can encode 5 texture formats in 32 bits\n            // We are using 2x32 bit values to handle 10 textures\n            throw \"Can't handle more than 10 attachments for a MRT in cache render pipeline!\";\n        }\n        this.mrtTextureArray = textureArray;\n        this.mrtTextureCount = textureCount;\n        this._mrtEnabledMask = 0xffff; // all textures are enabled at start (meaning we can write to them). Calls to setMRTAttachments may disable some\n        var bits = [0, 0];\n        var indexBits = 0, mask = 0, numRT = 0;\n        for (var i = 0; i < textureCount; ++i) {\n            var texture = textureArray[i];\n            var gpuWrapper = texture === null || texture === void 0 ? void 0 : texture._hardwareTexture;\n            this._mrtFormats[numRT] = (_a = gpuWrapper === null || gpuWrapper === void 0 ? void 0 : gpuWrapper.format) !== null && _a !== void 0 ? _a : this._webgpuColorFormat[0];\n            bits[indexBits] += renderableTextureFormatToIndex[(_b = this._mrtFormats[numRT]) !== null && _b !== void 0 ? _b : \"\"] << mask;\n            mask += 6;\n            numRT++;\n            if (mask >= 32) {\n                mask = 0;\n                indexBits++;\n            }\n        }\n        this._mrtFormats.length = numRT;\n        if (this._mrtAttachments1 !== bits[0] || this._mrtAttachments2 !== bits[1]) {\n            this._mrtAttachments1 = bits[0];\n            this._mrtAttachments2 = bits[1];\n            this._states[StatePosition.MRTAttachments1] = bits[0];\n            this._states[StatePosition.MRTAttachments2] = bits[1];\n            this._isDirty = true;\n            this._stateDirtyLowestIndex = Math.min(this._stateDirtyLowestIndex, StatePosition.MRTAttachments1);\n        }\n    };\n    WebGPUCacheRenderPipeline.prototype.setAlphaBlendEnabled = function (enabled) {\n        this._alphaBlendEnabled = enabled;\n    };\n    WebGPUCacheRenderPipeline.prototype.setAlphaBlendFactors = function (factors, operations) {\n        this._alphaBlendFuncParams = factors;\n        this._alphaBlendEqParams = operations;\n    };\n    WebGPUCacheRenderPipeline.prototype.setWriteMask = function (mask) {\n        this._writeMask = mask;\n    };\n    WebGPUCacheRenderPipeline.prototype.setDepthStencilFormat = function (format) {\n        this._webgpuDepthStencilFormat = format;\n        this._depthStencilFormat = format === undefined ? 0 : renderableTextureFormatToIndex[format];\n    };\n    WebGPUCacheRenderPipeline.prototype.setDepthTestEnabled = function (enabled) {\n        this._depthTestEnabled = enabled;\n    };\n    WebGPUCacheRenderPipeline.prototype.setDepthWriteEnabled = function (enabled) {\n        this._depthWriteEnabled = enabled;\n    };\n    WebGPUCacheRenderPipeline.prototype.setDepthCompare = function (func) {\n        this._depthCompare = (func !== null && func !== void 0 ? func : 519) - 0x0200;\n    };\n    WebGPUCacheRenderPipeline.prototype.setStencilEnabled = function (enabled) {\n        this._stencilEnabled = enabled;\n    };\n    WebGPUCacheRenderPipeline.prototype.setStencilCompare = function (func) {\n        this._stencilFrontCompare = (func !== null && func !== void 0 ? func : 519) - 0x0200;\n    };\n    WebGPUCacheRenderPipeline.prototype.setStencilDepthFailOp = function (op) {\n        this._stencilFrontDepthFailOp = op === null ? 1 /* KEEP */ : stencilOpToIndex[op];\n    };\n    WebGPUCacheRenderPipeline.prototype.setStencilPassOp = function (op) {\n        this._stencilFrontPassOp = op === null ? 2 /* REPLACE */ : stencilOpToIndex[op];\n    };\n    WebGPUCacheRenderPipeline.prototype.setStencilFailOp = function (op) {\n        this._stencilFrontFailOp = op === null ? 1 /* KEEP */ : stencilOpToIndex[op];\n    };\n    WebGPUCacheRenderPipeline.prototype.setStencilReadMask = function (mask) {\n        if (this._stencilReadMask !== mask) {\n            this._stencilReadMask = mask;\n            this._states[StatePosition.StencilReadMask] = mask;\n            this._isDirty = true;\n            this._stateDirtyLowestIndex = Math.min(this._stateDirtyLowestIndex, StatePosition.StencilReadMask);\n        }\n    };\n    WebGPUCacheRenderPipeline.prototype.setStencilWriteMask = function (mask) {\n        if (this._stencilWriteMask !== mask) {\n            this._stencilWriteMask = mask;\n            this._states[StatePosition.StencilWriteMask] = mask;\n            this._isDirty = true;\n            this._stateDirtyLowestIndex = Math.min(this._stateDirtyLowestIndex, StatePosition.StencilWriteMask);\n        }\n    };\n    WebGPUCacheRenderPipeline.prototype.resetStencilState = function () {\n        this.setStencilState(false, 519, 7680, 7681, 7680, 0xff, 0xff);\n    };\n    WebGPUCacheRenderPipeline.prototype.setStencilState = function (stencilEnabled, compare, depthFailOp, passOp, failOp, readMask, writeMask) {\n        this._stencilEnabled = stencilEnabled;\n        this._stencilFrontCompare = (compare !== null && compare !== void 0 ? compare : 519) - 0x0200;\n        this._stencilFrontDepthFailOp = depthFailOp === null ? 1 /* KEEP */ : stencilOpToIndex[depthFailOp];\n        this._stencilFrontPassOp = passOp === null ? 2 /* REPLACE */ : stencilOpToIndex[passOp];\n        this._stencilFrontFailOp = failOp === null ? 1 /* KEEP */ : stencilOpToIndex[failOp];\n        this.setStencilReadMask(readMask);\n        this.setStencilWriteMask(writeMask);\n    };\n    WebGPUCacheRenderPipeline.prototype.setBuffers = function (vertexBuffers, indexBuffer, overrideVertexBuffers) {\n        this._vertexBuffers = vertexBuffers;\n        this._overrideVertexBuffers = overrideVertexBuffers;\n        this._indexBuffer = indexBuffer;\n    };\n    WebGPUCacheRenderPipeline._GetTopology = function (fillMode) {\n        switch (fillMode) {\n            // Triangle views\n            case 0:\n                return WebGPUConstants.PrimitiveTopology.TriangleList;\n            case 2:\n                return WebGPUConstants.PrimitiveTopology.PointList;\n            case 1:\n                return WebGPUConstants.PrimitiveTopology.LineList;\n            // Draw modes\n            case 3:\n                return WebGPUConstants.PrimitiveTopology.PointList;\n            case 4:\n                return WebGPUConstants.PrimitiveTopology.LineList;\n            case 5:\n                // return this._gl.LINE_LOOP;\n                // TODO WEBGPU. Line Loop Mode Fallback at buffer load time.\n                throw \"LineLoop is an unsupported fillmode in WebGPU\";\n            case 6:\n                return WebGPUConstants.PrimitiveTopology.LineStrip;\n            case 7:\n                return WebGPUConstants.PrimitiveTopology.TriangleStrip;\n            case 8:\n                // return this._gl.TRIANGLE_FAN;\n                // TODO WEBGPU. Triangle Fan Mode Fallback at buffer load time.\n                throw \"TriangleFan is an unsupported fillmode in WebGPU\";\n            default:\n                return WebGPUConstants.PrimitiveTopology.TriangleList;\n        }\n    };\n    WebGPUCacheRenderPipeline._GetAphaBlendOperation = function (operation) {\n        switch (operation) {\n            case 32774:\n                return WebGPUConstants.BlendOperation.Add;\n            case 32778:\n                return WebGPUConstants.BlendOperation.Subtract;\n            case 32779:\n                return WebGPUConstants.BlendOperation.ReverseSubtract;\n            case 32775:\n                return WebGPUConstants.BlendOperation.Min;\n            case 32776:\n                return WebGPUConstants.BlendOperation.Max;\n            default:\n                return WebGPUConstants.BlendOperation.Add;\n        }\n    };\n    WebGPUCacheRenderPipeline._GetAphaBlendFactor = function (factor) {\n        switch (factor) {\n            case 0:\n                return WebGPUConstants.BlendFactor.Zero;\n            case 1:\n                return WebGPUConstants.BlendFactor.One;\n            case 768:\n                return WebGPUConstants.BlendFactor.Src;\n            case 769:\n                return WebGPUConstants.BlendFactor.OneMinusSrc;\n            case 770:\n                return WebGPUConstants.BlendFactor.SrcAlpha;\n            case 771:\n                return WebGPUConstants.BlendFactor.OneMinusSrcAlpha;\n            case 772:\n                return WebGPUConstants.BlendFactor.DstAlpha;\n            case 773:\n                return WebGPUConstants.BlendFactor.OneMinusDstAlpha;\n            case 774:\n                return WebGPUConstants.BlendFactor.Dst;\n            case 775:\n                return WebGPUConstants.BlendFactor.OneMinusDst;\n            case 776:\n                return WebGPUConstants.BlendFactor.SrcAlphaSaturated;\n            case 32769:\n                return WebGPUConstants.BlendFactor.Constant;\n            case 32770:\n                return WebGPUConstants.BlendFactor.OneMinusConstant;\n            case 32771:\n                return WebGPUConstants.BlendFactor.Constant;\n            case 32772:\n                return WebGPUConstants.BlendFactor.OneMinusConstant;\n            default:\n                return WebGPUConstants.BlendFactor.One;\n        }\n    };\n    WebGPUCacheRenderPipeline._GetCompareFunction = function (compareFunction) {\n        switch (compareFunction) {\n            case 0: // NEVER\n                return WebGPUConstants.CompareFunction.Never;\n            case 1: // LESS\n                return WebGPUConstants.CompareFunction.Less;\n            case 2: // EQUAL\n                return WebGPUConstants.CompareFunction.Equal;\n            case 3: // LEQUAL\n                return WebGPUConstants.CompareFunction.LessEqual;\n            case 4: // GREATER\n                return WebGPUConstants.CompareFunction.Greater;\n            case 5: // NOTEQUAL\n                return WebGPUConstants.CompareFunction.NotEqual;\n            case 6: // GEQUAL\n                return WebGPUConstants.CompareFunction.GreaterEqual;\n            case 7: // ALWAYS\n                return WebGPUConstants.CompareFunction.Always;\n        }\n        return WebGPUConstants.CompareFunction.Never;\n    };\n    WebGPUCacheRenderPipeline._GetStencilOpFunction = function (operation) {\n        switch (operation) {\n            case 0:\n                return WebGPUConstants.StencilOperation.Zero;\n            case 1:\n                return WebGPUConstants.StencilOperation.Keep;\n            case 2:\n                return WebGPUConstants.StencilOperation.Replace;\n            case 3:\n                return WebGPUConstants.StencilOperation.IncrementClamp;\n            case 4:\n                return WebGPUConstants.StencilOperation.DecrementClamp;\n            case 5:\n                return WebGPUConstants.StencilOperation.Invert;\n            case 6:\n                return WebGPUConstants.StencilOperation.IncrementWrap;\n            case 7:\n                return WebGPUConstants.StencilOperation.DecrementWrap;\n        }\n        return WebGPUConstants.StencilOperation.Keep;\n    };\n    WebGPUCacheRenderPipeline._GetVertexInputDescriptorFormat = function (vertexBuffer) {\n        var type = vertexBuffer.type;\n        var normalized = vertexBuffer.normalized;\n        var size = vertexBuffer.getSize();\n        switch (type) {\n            case VertexBuffer.BYTE:\n                switch (size) {\n                    case 1:\n                    case 2:\n                        return normalized ? WebGPUConstants.VertexFormat.Snorm8x2 : WebGPUConstants.VertexFormat.Sint8x2;\n                    case 3:\n                    case 4:\n                        return normalized ? WebGPUConstants.VertexFormat.Snorm8x4 : WebGPUConstants.VertexFormat.Sint8x4;\n                }\n                break;\n            case VertexBuffer.UNSIGNED_BYTE:\n                switch (size) {\n                    case 1:\n                    case 2:\n                        return normalized ? WebGPUConstants.VertexFormat.Unorm8x2 : WebGPUConstants.VertexFormat.Uint8x2;\n                    case 3:\n                    case 4:\n                        return normalized ? WebGPUConstants.VertexFormat.Unorm8x4 : WebGPUConstants.VertexFormat.Uint8x4;\n                }\n                break;\n            case VertexBuffer.SHORT:\n                switch (size) {\n                    case 1:\n                    case 2:\n                        return normalized ? WebGPUConstants.VertexFormat.Snorm16x2 : WebGPUConstants.VertexFormat.Sint16x2;\n                    case 3:\n                    case 4:\n                        return normalized ? WebGPUConstants.VertexFormat.Snorm16x4 : WebGPUConstants.VertexFormat.Sint16x4;\n                }\n                break;\n            case VertexBuffer.UNSIGNED_SHORT:\n                switch (size) {\n                    case 1:\n                    case 2:\n                        return normalized ? WebGPUConstants.VertexFormat.Unorm16x2 : WebGPUConstants.VertexFormat.Uint16x2;\n                    case 3:\n                    case 4:\n                        return normalized ? WebGPUConstants.VertexFormat.Unorm16x4 : WebGPUConstants.VertexFormat.Uint16x4;\n                }\n                break;\n            case VertexBuffer.INT:\n                switch (size) {\n                    case 1:\n                        return WebGPUConstants.VertexFormat.Sint32;\n                    case 2:\n                        return WebGPUConstants.VertexFormat.Sint32x2;\n                    case 3:\n                        return WebGPUConstants.VertexFormat.Sint32x3;\n                    case 4:\n                        return WebGPUConstants.VertexFormat.Sint32x4;\n                }\n                break;\n            case VertexBuffer.UNSIGNED_INT:\n                switch (size) {\n                    case 1:\n                        return WebGPUConstants.VertexFormat.Uint32;\n                    case 2:\n                        return WebGPUConstants.VertexFormat.Uint32x2;\n                    case 3:\n                        return WebGPUConstants.VertexFormat.Uint32x3;\n                    case 4:\n                        return WebGPUConstants.VertexFormat.Uint32x4;\n                }\n                break;\n            case VertexBuffer.FLOAT:\n                switch (size) {\n                    case 1:\n                        return WebGPUConstants.VertexFormat.Float32;\n                    case 2:\n                        return WebGPUConstants.VertexFormat.Float32x2;\n                    case 3:\n                        return WebGPUConstants.VertexFormat.Float32x3;\n                    case 4:\n                        return WebGPUConstants.VertexFormat.Float32x4;\n                }\n                break;\n        }\n        throw new Error(\"Invalid Format '\".concat(vertexBuffer.getKind(), \"' - type=\").concat(type, \", normalized=\").concat(normalized, \", size=\").concat(size));\n    };\n    WebGPUCacheRenderPipeline.prototype._getAphaBlendState = function () {\n        if (!this._alphaBlendEnabled) {\n            return null;\n        }\n        return {\n            srcFactor: WebGPUCacheRenderPipeline._GetAphaBlendFactor(this._alphaBlendFuncParams[2]),\n            dstFactor: WebGPUCacheRenderPipeline._GetAphaBlendFactor(this._alphaBlendFuncParams[3]),\n            operation: WebGPUCacheRenderPipeline._GetAphaBlendOperation(this._alphaBlendEqParams[1]),\n        };\n    };\n    WebGPUCacheRenderPipeline.prototype._getColorBlendState = function () {\n        if (!this._alphaBlendEnabled) {\n            return null;\n        }\n        return {\n            srcFactor: WebGPUCacheRenderPipeline._GetAphaBlendFactor(this._alphaBlendFuncParams[0]),\n            dstFactor: WebGPUCacheRenderPipeline._GetAphaBlendFactor(this._alphaBlendFuncParams[1]),\n            operation: WebGPUCacheRenderPipeline._GetAphaBlendOperation(this._alphaBlendEqParams[0]),\n        };\n    };\n    WebGPUCacheRenderPipeline.prototype._setShaderStage = function (id) {\n        if (this._shaderId !== id) {\n            this._shaderId = id;\n            this._states[StatePosition.ShaderStage] = id;\n            this._isDirty = true;\n            this._stateDirtyLowestIndex = Math.min(this._stateDirtyLowestIndex, StatePosition.ShaderStage);\n        }\n    };\n    WebGPUCacheRenderPipeline.prototype._setRasterizationState = function (topology, sampleCount) {\n        var frontFace = this._frontFace;\n        var cullMode = this._cullEnabled ? this._cullFace : 0;\n        var clampDepth = this._clampDepth ? 1 : 0;\n        var alphaToCoverage = this._alphaToCoverageEnabled ? 1 : 0;\n        var rasterizationState = frontFace - 1 + (cullMode << 1) + (clampDepth << 3) + (alphaToCoverage << 4) + (topology << 5) + (sampleCount << 8);\n        if (this._rasterizationState !== rasterizationState) {\n            this._rasterizationState = rasterizationState;\n            this._states[StatePosition.RasterizationState] = this._rasterizationState;\n            this._isDirty = true;\n            this._stateDirtyLowestIndex = Math.min(this._stateDirtyLowestIndex, StatePosition.RasterizationState);\n        }\n    };\n    WebGPUCacheRenderPipeline.prototype._setColorStates = function () {\n        var colorStates = ((this._writeMask ? 1 : 0) << 22) + (this._colorFormat << 23) + ((this._depthWriteEnabled ? 1 : 0) << 29); // this state has been moved from depthStencilState here because alpha and depth are related (generally when alpha is on, depth write is off and the other way around)\n        if (this._alphaBlendEnabled) {\n            colorStates +=\n                ((this._alphaBlendFuncParams[0] === null ? 2 : alphaBlendFactorToIndex[this._alphaBlendFuncParams[0]]) << 0) +\n                    ((this._alphaBlendFuncParams[1] === null ? 2 : alphaBlendFactorToIndex[this._alphaBlendFuncParams[1]]) << 4) +\n                    ((this._alphaBlendFuncParams[2] === null ? 2 : alphaBlendFactorToIndex[this._alphaBlendFuncParams[2]]) << 8) +\n                    ((this._alphaBlendFuncParams[3] === null ? 2 : alphaBlendFactorToIndex[this._alphaBlendFuncParams[3]]) << 12) +\n                    ((this._alphaBlendEqParams[0] === null ? 1 : this._alphaBlendEqParams[0] - 0x8005) << 16) +\n                    ((this._alphaBlendEqParams[1] === null ? 1 : this._alphaBlendEqParams[1] - 0x8005) << 19);\n        }\n        if (colorStates !== this._colorStates) {\n            this._colorStates = colorStates;\n            this._states[StatePosition.ColorStates] = this._colorStates;\n            this._isDirty = true;\n            this._stateDirtyLowestIndex = Math.min(this._stateDirtyLowestIndex, StatePosition.ColorStates);\n        }\n    };\n    WebGPUCacheRenderPipeline.prototype._setDepthStencilState = function () {\n        var stencilState = !this._stencilEnabled\n            ? 7 /* ALWAYS */ + (1 /* KEEP */ << 3) + (1 /* KEEP */ << 6) + (1 /* KEEP */ << 9)\n            : this._stencilFrontCompare + (this._stencilFrontDepthFailOp << 3) + (this._stencilFrontPassOp << 6) + (this._stencilFrontFailOp << 9);\n        var depthStencilState = this._depthStencilFormat + ((this._depthTestEnabled ? this._depthCompare : 7) /* ALWAYS */ << 6) + (stencilState << 10); // stencil front - stencil back is the same\n        if (this._depthStencilState !== depthStencilState) {\n            this._depthStencilState = depthStencilState;\n            this._states[StatePosition.DepthStencilState] = this._depthStencilState;\n            this._isDirty = true;\n            this._stateDirtyLowestIndex = Math.min(this._stateDirtyLowestIndex, StatePosition.DepthStencilState);\n        }\n    };\n    WebGPUCacheRenderPipeline.prototype._setVertexState = function (effect) {\n        var _a, _b;\n        var currStateLen = this._statesLength;\n        var newNumStates = StatePosition.VertexState;\n        var webgpuPipelineContext = effect._pipelineContext;\n        var attributes = webgpuPipelineContext.shaderProcessingContext.attributeNamesFromEffect;\n        var locations = webgpuPipelineContext.shaderProcessingContext.attributeLocationsFromEffect;\n        var currentGPUBuffer;\n        var numVertexBuffers = 0;\n        for (var index = 0; index < attributes.length; index++) {\n            var location_1 = locations[index];\n            var vertexBuffer = (_a = (this._overrideVertexBuffers && this._overrideVertexBuffers[attributes[index]])) !== null && _a !== void 0 ? _a : this._vertexBuffers[attributes[index]];\n            if (!vertexBuffer) {\n                // In WebGL it's valid to not bind a vertex buffer to an attribute, but it's not valid in WebGPU\n                // So we must bind a dummy buffer when we are not given one for a specific attribute\n                vertexBuffer = this._emptyVertexBuffer;\n            }\n            var buffer = (_b = vertexBuffer.getBuffer()) === null || _b === void 0 ? void 0 : _b.underlyingResource;\n            // We optimize usage of GPUVertexBufferLayout: we will create a single GPUVertexBufferLayout for all the attributes which follow each other and which use the same GPU buffer\n            // However, there are some constraints in the attribute.offset value range, so we must check for them before being able to reuse the same GPUVertexBufferLayout\n            // See _getVertexInputDescriptor() below\n            if (vertexBuffer._validOffsetRange === undefined) {\n                var offset = vertexBuffer.byteOffset;\n                var formatSize = vertexBuffer.getSize(true);\n                var byteStride = vertexBuffer.byteStride;\n                vertexBuffer._validOffsetRange = offset <= this._kMaxVertexBufferStride - formatSize && (byteStride === 0 || offset + formatSize <= byteStride);\n            }\n            if (!(currentGPUBuffer && currentGPUBuffer === buffer && vertexBuffer._validOffsetRange)) {\n                // we can't combine the previous vertexBuffer with the current one\n                this.vertexBuffers[numVertexBuffers++] = vertexBuffer;\n                currentGPUBuffer = vertexBuffer._validOffsetRange ? buffer : null;\n            }\n            var vid = vertexBuffer.hashCode + (location_1 << 7);\n            this._isDirty = this._isDirty || this._states[newNumStates] !== vid;\n            this._states[newNumStates++] = vid;\n        }\n        this.vertexBuffers.length = numVertexBuffers;\n        this._statesLength = newNumStates;\n        this._isDirty = this._isDirty || newNumStates !== currStateLen;\n        if (this._isDirty) {\n            this._stateDirtyLowestIndex = Math.min(this._stateDirtyLowestIndex, StatePosition.VertexState);\n        }\n    };\n    WebGPUCacheRenderPipeline.prototype._setTextureState = function (textureState) {\n        if (this._textureState !== textureState) {\n            this._textureState = textureState;\n            this._states[StatePosition.TextureStage] = this._textureState;\n            this._isDirty = true;\n            this._stateDirtyLowestIndex = Math.min(this._stateDirtyLowestIndex, StatePosition.TextureStage);\n        }\n    };\n    WebGPUCacheRenderPipeline.prototype._createPipelineLayout = function (webgpuPipelineContext) {\n        if (this._useTextureStage) {\n            return this._createPipelineLayoutWithTextureStage(webgpuPipelineContext);\n        }\n        var bindGroupLayouts = [];\n        var bindGroupLayoutEntries = webgpuPipelineContext.shaderProcessingContext.bindGroupLayoutEntries;\n        for (var i = 0; i < bindGroupLayoutEntries.length; i++) {\n            var setDefinition = bindGroupLayoutEntries[i];\n            bindGroupLayouts[i] = this._device.createBindGroupLayout({\n                entries: setDefinition,\n            });\n        }\n        webgpuPipelineContext.bindGroupLayouts = bindGroupLayouts;\n        return this._device.createPipelineLayout({ bindGroupLayouts: bindGroupLayouts });\n    };\n    WebGPUCacheRenderPipeline.prototype._createPipelineLayoutWithTextureStage = function (webgpuPipelineContext) {\n        var _a;\n        var shaderProcessingContext = webgpuPipelineContext.shaderProcessingContext;\n        var bindGroupLayoutEntries = shaderProcessingContext.bindGroupLayoutEntries;\n        var bitVal = 1;\n        for (var i = 0; i < bindGroupLayoutEntries.length; i++) {\n            var setDefinition = bindGroupLayoutEntries[i];\n            for (var j = 0; j < setDefinition.length; j++) {\n                var entry = bindGroupLayoutEntries[i][j];\n                if (entry.texture) {\n                    var name_1 = shaderProcessingContext.bindGroupLayoutEntryInfo[i][entry.binding].name;\n                    var textureInfo = shaderProcessingContext.availableTextures[name_1];\n                    var samplerInfo = textureInfo.autoBindSampler ? shaderProcessingContext.availableSamplers[name_1 + WebGPUShaderProcessor.AutoSamplerSuffix] : null;\n                    var sampleType = textureInfo.sampleType;\n                    var samplerType = (_a = samplerInfo === null || samplerInfo === void 0 ? void 0 : samplerInfo.type) !== null && _a !== void 0 ? _a : WebGPUConstants.SamplerBindingType.Filtering;\n                    if (this._textureState & bitVal && sampleType !== WebGPUConstants.TextureSampleType.Depth) {\n                        // The texture is a 32 bits float texture but the system does not support linear filtering for them:\n                        // we set the sampler to \"non-filtering\" and the texture sample type to \"unfilterable-float\"\n                        if (textureInfo.autoBindSampler) {\n                            samplerType = WebGPUConstants.SamplerBindingType.NonFiltering;\n                        }\n                        sampleType = WebGPUConstants.TextureSampleType.UnfilterableFloat;\n                    }\n                    entry.texture.sampleType = sampleType;\n                    if (samplerInfo) {\n                        var binding = shaderProcessingContext.bindGroupLayoutEntryInfo[samplerInfo.binding.groupIndex][samplerInfo.binding.bindingIndex].index;\n                        bindGroupLayoutEntries[samplerInfo.binding.groupIndex][binding].sampler.type = samplerType;\n                    }\n                    bitVal = bitVal << 1;\n                }\n            }\n        }\n        var bindGroupLayouts = [];\n        for (var i = 0; i < bindGroupLayoutEntries.length; ++i) {\n            bindGroupLayouts[i] = this._device.createBindGroupLayout({\n                entries: bindGroupLayoutEntries[i],\n            });\n        }\n        webgpuPipelineContext.bindGroupLayouts = bindGroupLayouts;\n        return this._device.createPipelineLayout({ bindGroupLayouts: bindGroupLayouts });\n    };\n    WebGPUCacheRenderPipeline.prototype._getVertexInputDescriptor = function (effect) {\n        var _a, _b;\n        var descriptors = [];\n        var webgpuPipelineContext = effect._pipelineContext;\n        var attributes = webgpuPipelineContext.shaderProcessingContext.attributeNamesFromEffect;\n        var locations = webgpuPipelineContext.shaderProcessingContext.attributeLocationsFromEffect;\n        var currentGPUBuffer;\n        var currentGPUAttributes;\n        for (var index = 0; index < attributes.length; index++) {\n            var location_2 = locations[index];\n            var vertexBuffer = (_a = (this._overrideVertexBuffers && this._overrideVertexBuffers[attributes[index]])) !== null && _a !== void 0 ? _a : this._vertexBuffers[attributes[index]];\n            if (!vertexBuffer) {\n                // In WebGL it's valid to not bind a vertex buffer to an attribute, but it's not valid in WebGPU\n                // So we must bind a dummy buffer when we are not given one for a specific attribute\n                vertexBuffer = this._emptyVertexBuffer;\n            }\n            var buffer = (_b = vertexBuffer.getBuffer()) === null || _b === void 0 ? void 0 : _b.underlyingResource;\n            // We reuse the same GPUVertexBufferLayout for all attributes that use the same underlying GPU buffer (and for attributes that follow each other in the attributes array)\n            var offset = vertexBuffer.byteOffset;\n            var invalidOffsetRange = !vertexBuffer._validOffsetRange;\n            if (!(currentGPUBuffer && currentGPUAttributes && currentGPUBuffer === buffer) || invalidOffsetRange) {\n                var vertexBufferDescriptor = {\n                    arrayStride: vertexBuffer.byteStride,\n                    stepMode: vertexBuffer.getIsInstanced() ? WebGPUConstants.InputStepMode.Instance : WebGPUConstants.InputStepMode.Vertex,\n                    attributes: [],\n                };\n                descriptors.push(vertexBufferDescriptor);\n                currentGPUAttributes = vertexBufferDescriptor.attributes;\n                if (invalidOffsetRange) {\n                    offset = 0; // the offset will be set directly in the setVertexBuffer call\n                    buffer = null; // buffer can't be reused\n                }\n            }\n            currentGPUAttributes.push({\n                shaderLocation: location_2,\n                offset: offset,\n                format: WebGPUCacheRenderPipeline._GetVertexInputDescriptorFormat(vertexBuffer),\n            });\n            currentGPUBuffer = buffer;\n        }\n        return descriptors;\n    };\n    WebGPUCacheRenderPipeline.prototype._createRenderPipeline = function (effect, topology, sampleCount) {\n        var webgpuPipelineContext = effect._pipelineContext;\n        var inputStateDescriptor = this._getVertexInputDescriptor(effect);\n        var pipelineLayout = this._createPipelineLayout(webgpuPipelineContext);\n        var colorStates = [];\n        var alphaBlend = this._getAphaBlendState();\n        var colorBlend = this._getColorBlendState();\n        if (this._mrtAttachments1 > 0) {\n            for (var i = 0; i < this._mrtFormats.length; ++i) {\n                var format = this._mrtFormats[i];\n                if (format) {\n                    var descr = {\n                        format: format,\n                        writeMask: (this._mrtEnabledMask & (1 << i)) !== 0 ? this._writeMask : 0,\n                    };\n                    if (alphaBlend && colorBlend) {\n                        descr.blend = {\n                            alpha: alphaBlend,\n                            color: colorBlend,\n                        };\n                    }\n                    colorStates.push(descr);\n                }\n                else {\n                    colorStates.push(null);\n                }\n            }\n        }\n        else {\n            if (this._webgpuColorFormat[0]) {\n                var descr = {\n                    format: this._webgpuColorFormat[0],\n                    writeMask: this._writeMask,\n                };\n                if (alphaBlend && colorBlend) {\n                    descr.blend = {\n                        alpha: alphaBlend,\n                        color: colorBlend,\n                    };\n                }\n                colorStates.push(descr);\n            }\n            else {\n                colorStates.push(null);\n            }\n        }\n        var stencilFrontBack = {\n            compare: WebGPUCacheRenderPipeline._GetCompareFunction(this._stencilEnabled ? this._stencilFrontCompare : 7 /* ALWAYS */),\n            depthFailOp: WebGPUCacheRenderPipeline._GetStencilOpFunction(this._stencilEnabled ? this._stencilFrontDepthFailOp : 1 /* KEEP */),\n            failOp: WebGPUCacheRenderPipeline._GetStencilOpFunction(this._stencilEnabled ? this._stencilFrontFailOp : 1 /* KEEP */),\n            passOp: WebGPUCacheRenderPipeline._GetStencilOpFunction(this._stencilEnabled ? this._stencilFrontPassOp : 1 /* KEEP */),\n        };\n        var stripIndexFormat = undefined;\n        if (topology === WebGPUConstants.PrimitiveTopology.LineStrip || topology === WebGPUConstants.PrimitiveTopology.TriangleStrip) {\n            stripIndexFormat = !this._indexBuffer || this._indexBuffer.is32Bits ? WebGPUConstants.IndexFormat.Uint32 : WebGPUConstants.IndexFormat.Uint16;\n        }\n        var depthStencilFormatHasStencil = this._webgpuDepthStencilFormat ? WebGPUTextureHelper.HasStencilAspect(this._webgpuDepthStencilFormat) : false;\n        return this._device.createRenderPipeline({\n            layout: pipelineLayout,\n            vertex: {\n                module: webgpuPipelineContext.stages.vertexStage.module,\n                entryPoint: webgpuPipelineContext.stages.vertexStage.entryPoint,\n                buffers: inputStateDescriptor,\n            },\n            primitive: {\n                topology: topology,\n                stripIndexFormat: stripIndexFormat,\n                frontFace: this._frontFace === 1 ? WebGPUConstants.FrontFace.CCW : WebGPUConstants.FrontFace.CW,\n                cullMode: !this._cullEnabled ? WebGPUConstants.CullMode.None : this._cullFace === 2 ? WebGPUConstants.CullMode.Front : WebGPUConstants.CullMode.Back,\n            },\n            fragment: !webgpuPipelineContext.stages.fragmentStage\n                ? undefined\n                : {\n                    module: webgpuPipelineContext.stages.fragmentStage.module,\n                    entryPoint: webgpuPipelineContext.stages.fragmentStage.entryPoint,\n                    targets: colorStates,\n                },\n            multisample: {\n                count: sampleCount,\n                /*mask,\n                alphaToCoverageEnabled,*/\n            },\n            depthStencil: this._webgpuDepthStencilFormat === undefined\n                ? undefined\n                : {\n                    depthWriteEnabled: this._depthWriteEnabled,\n                    depthCompare: this._depthTestEnabled ? WebGPUCacheRenderPipeline._GetCompareFunction(this._depthCompare) : WebGPUConstants.CompareFunction.Always,\n                    format: this._webgpuDepthStencilFormat,\n                    stencilFront: this._stencilEnabled && depthStencilFormatHasStencil ? stencilFrontBack : undefined,\n                    stencilBack: this._stencilEnabled && depthStencilFormatHasStencil ? stencilFrontBack : undefined,\n                    stencilReadMask: this._stencilEnabled && depthStencilFormatHasStencil ? this._stencilReadMask : undefined,\n                    stencilWriteMask: this._stencilEnabled && depthStencilFormatHasStencil ? this._stencilWriteMask : undefined,\n                    depthBias: this._depthBias,\n                    depthBiasClamp: this._depthBiasClamp,\n                    depthBiasSlopeScale: this._depthBiasSlopeScale,\n                },\n        });\n    };\n    WebGPUCacheRenderPipeline.NumCacheHitWithoutHash = 0;\n    WebGPUCacheRenderPipeline.NumCacheHitWithHash = 0;\n    WebGPUCacheRenderPipeline.NumCacheMiss = 0;\n    WebGPUCacheRenderPipeline.NumPipelineCreationLastFrame = 0;\n    WebGPUCacheRenderPipeline._NumPipelineCreationCurrentFrame = 0;\n    return WebGPUCacheRenderPipeline;\n}());\nexport { WebGPUCacheRenderPipeline };\n//# sourceMappingURL=webgpuCacheRenderPipeline.js.map","import { __extends } from \"tslib\";\nimport { WebGPUCacheRenderPipeline } from \"./webgpuCacheRenderPipeline.js\";\n/** @hidden */\nvar NodeState = /** @class */ (function () {\n    function NodeState() {\n        this.values = {};\n    }\n    NodeState.prototype.count = function () {\n        var countNode = 0, countPipeline = this.pipeline ? 1 : 0;\n        for (var value in this.values) {\n            var node = this.values[value];\n            var _a = node.count(), childCountNodes = _a[0], childCoundPipeline = _a[1];\n            countNode += childCountNodes;\n            countPipeline += childCoundPipeline;\n            countNode++;\n        }\n        return [countNode, countPipeline];\n    };\n    return NodeState;\n}());\n/** @hidden */\nvar WebGPUCacheRenderPipelineTree = /** @class */ (function (_super) {\n    __extends(WebGPUCacheRenderPipelineTree, _super);\n    function WebGPUCacheRenderPipelineTree(device, emptyVertexBuffer, useTextureStage) {\n        var _this = _super.call(this, device, emptyVertexBuffer, useTextureStage) || this;\n        _this._nodeStack = [];\n        _this._nodeStack[0] = WebGPUCacheRenderPipelineTree._Cache;\n        return _this;\n    }\n    WebGPUCacheRenderPipelineTree.GetNodeCounts = function () {\n        var counts = WebGPUCacheRenderPipelineTree._Cache.count();\n        return { nodeCount: counts[0], pipelineCount: counts[1] };\n    };\n    WebGPUCacheRenderPipelineTree._GetPipelines = function (node, pipelines, curPath, curPathLen) {\n        if (node.pipeline) {\n            var path = curPath.slice();\n            path.length = curPathLen;\n            pipelines.push(path);\n        }\n        for (var value in node.values) {\n            var nnode = node.values[value];\n            curPath[curPathLen] = parseInt(value);\n            WebGPUCacheRenderPipelineTree._GetPipelines(nnode, pipelines, curPath, curPathLen + 1);\n        }\n    };\n    WebGPUCacheRenderPipelineTree.GetPipelines = function () {\n        var pipelines = [];\n        WebGPUCacheRenderPipelineTree._GetPipelines(WebGPUCacheRenderPipelineTree._Cache, pipelines, [], 0);\n        return pipelines;\n    };\n    WebGPUCacheRenderPipelineTree.prototype._getRenderPipeline = function (param) {\n        var node = this._nodeStack[this._stateDirtyLowestIndex];\n        for (var i = this._stateDirtyLowestIndex; i < this._statesLength; ++i) {\n            var nn = node.values[this._states[i]];\n            if (!nn) {\n                nn = new NodeState();\n                node.values[this._states[i]] = nn;\n            }\n            node = nn;\n            this._nodeStack[i + 1] = node;\n        }\n        param.token = node;\n        param.pipeline = node.pipeline;\n    };\n    WebGPUCacheRenderPipelineTree.prototype._setRenderPipeline = function (param) {\n        param.token.pipeline = param.pipeline;\n    };\n    WebGPUCacheRenderPipelineTree._Cache = new NodeState();\n    return WebGPUCacheRenderPipelineTree;\n}(WebGPUCacheRenderPipeline));\nexport { WebGPUCacheRenderPipelineTree };\n//# sourceMappingURL=webgpuCacheRenderPipelineTree.js.map","import { __assign } from \"tslib\";\nimport * as WebGPUConstants from \"./webgpuConstants.js\";\n\nvar filterToBits = [\n    0 | (0 << 1) | (0 << 2),\n    0 | (0 << 1) | (0 << 2),\n    1 | (1 << 1) | (0 << 2),\n    1 | (1 << 1) | (1 << 2),\n    0 | (0 << 1) | (0 << 2),\n    0 | (1 << 1) | (0 << 2),\n    0 | (1 << 1) | (1 << 2),\n    0 | (1 << 1) | (0 << 2),\n    0 | (0 << 1) | (1 << 2),\n    1 | (0 << 1) | (0 << 2),\n    1 | (0 << 1) | (1 << 2),\n    1 | (1 << 1) | (0 << 2),\n    1 | (0 << 1) | (0 << 2), // TEXTURE_LINEAR_NEAREST\n];\n// subtract 0x01FF from the comparison function value before indexing this array!\nvar comparisonFunctionToBits = [\n    (0 << 3) | (0 << 4) | (0 << 5) | (0 << 6),\n    (0 << 3) | (0 << 4) | (0 << 5) | (1 << 6),\n    (0 << 3) | (0 << 4) | (1 << 5) | (0 << 6),\n    (0 << 3) | (0 << 4) | (1 << 5) | (1 << 6),\n    (0 << 3) | (1 << 4) | (0 << 5) | (0 << 6),\n    (0 << 3) | (1 << 4) | (0 << 5) | (1 << 6),\n    (0 << 3) | (1 << 4) | (1 << 5) | (0 << 6),\n    (0 << 3) | (1 << 4) | (1 << 5) | (1 << 6),\n    (1 << 3) | (0 << 4) | (0 << 5) | (0 << 6), // ALWAYS\n];\nvar filterNoMipToBits = [\n    0 << 7,\n    1 << 7,\n    1 << 7,\n    0 << 7,\n    0 << 7,\n    0 << 7,\n    0 << 7,\n    1 << 7,\n    0 << 7,\n    0 << 7,\n    0 << 7,\n    0 << 7,\n    1 << 7, // TEXTURE_LINEAR_NEAREST\n];\n/** @hidden */\nvar WebGPUCacheSampler = /** @class */ (function () {\n    function WebGPUCacheSampler(device) {\n        this._samplers = {};\n        this._device = device;\n        this.disabled = false;\n    }\n    WebGPUCacheSampler.GetSamplerHashCode = function (sampler) {\n        var _a, _b, _c;\n        // The WebGPU spec currently only allows values 1 and 4 for anisotropy\n        var anisotropy = sampler._cachedAnisotropicFilteringLevel && sampler._cachedAnisotropicFilteringLevel > 1 ? 4 : 1;\n        var code = filterToBits[sampler.samplingMode] +\n            comparisonFunctionToBits[(sampler._comparisonFunction || 0x0202) - 0x0200 + 1] +\n            filterNoMipToBits[sampler.samplingMode] + // handle the lodMinClamp = lodMaxClamp = 0 case when no filter used for mip mapping\n            (((_a = sampler._cachedWrapU) !== null && _a !== void 0 ? _a : 1) << 8) +\n            (((_b = sampler._cachedWrapV) !== null && _b !== void 0 ? _b : 1) << 10) +\n            (((_c = sampler._cachedWrapR) !== null && _c !== void 0 ? _c : 1) << 12) +\n            ((sampler.useMipMaps ? 1 : 0) << 14) + // need to factor this in because _getSamplerFilterDescriptor depends on samplingMode AND useMipMaps!\n            (anisotropy << 15);\n        return code;\n    };\n    WebGPUCacheSampler._GetSamplerFilterDescriptor = function (sampler, anisotropy) {\n        var magFilter, minFilter, mipmapFilter, lodMinClamp, lodMaxClamp;\n        var useMipMaps = sampler.useMipMaps;\n        switch (sampler.samplingMode) {\n            case 11:\n                magFilter = WebGPUConstants.FilterMode.Linear;\n                minFilter = WebGPUConstants.FilterMode.Linear;\n                mipmapFilter = WebGPUConstants.FilterMode.Nearest;\n                if (!useMipMaps) {\n                    lodMinClamp = lodMaxClamp = 0;\n                }\n                break;\n            case 3:\n            case 3:\n                magFilter = WebGPUConstants.FilterMode.Linear;\n                minFilter = WebGPUConstants.FilterMode.Linear;\n                if (!useMipMaps) {\n                    mipmapFilter = WebGPUConstants.FilterMode.Nearest;\n                    lodMinClamp = lodMaxClamp = 0;\n                }\n                else {\n                    mipmapFilter = WebGPUConstants.FilterMode.Linear;\n                }\n                break;\n            case 8:\n                magFilter = WebGPUConstants.FilterMode.Nearest;\n                minFilter = WebGPUConstants.FilterMode.Nearest;\n                if (!useMipMaps) {\n                    mipmapFilter = WebGPUConstants.FilterMode.Nearest;\n                    lodMinClamp = lodMaxClamp = 0;\n                }\n                else {\n                    mipmapFilter = WebGPUConstants.FilterMode.Linear;\n                }\n                break;\n            case 4:\n                magFilter = WebGPUConstants.FilterMode.Nearest;\n                minFilter = WebGPUConstants.FilterMode.Nearest;\n                mipmapFilter = WebGPUConstants.FilterMode.Nearest;\n                if (!useMipMaps) {\n                    lodMinClamp = lodMaxClamp = 0;\n                }\n                break;\n            case 5:\n                magFilter = WebGPUConstants.FilterMode.Nearest;\n                minFilter = WebGPUConstants.FilterMode.Linear;\n                mipmapFilter = WebGPUConstants.FilterMode.Nearest;\n                if (!useMipMaps) {\n                    lodMinClamp = lodMaxClamp = 0;\n                }\n                break;\n            case 6:\n                magFilter = WebGPUConstants.FilterMode.Nearest;\n                minFilter = WebGPUConstants.FilterMode.Linear;\n                if (!useMipMaps) {\n                    mipmapFilter = WebGPUConstants.FilterMode.Nearest;\n                    lodMinClamp = lodMaxClamp = 0;\n                }\n                else {\n                    mipmapFilter = WebGPUConstants.FilterMode.Linear;\n                }\n                break;\n            case 7:\n                magFilter = WebGPUConstants.FilterMode.Nearest;\n                minFilter = WebGPUConstants.FilterMode.Linear;\n                mipmapFilter = WebGPUConstants.FilterMode.Nearest;\n                lodMinClamp = lodMaxClamp = 0;\n                break;\n            case 1:\n            case 1:\n                magFilter = WebGPUConstants.FilterMode.Nearest;\n                minFilter = WebGPUConstants.FilterMode.Nearest;\n                mipmapFilter = WebGPUConstants.FilterMode.Nearest;\n                lodMinClamp = lodMaxClamp = 0;\n                break;\n            case 9:\n                magFilter = WebGPUConstants.FilterMode.Linear;\n                minFilter = WebGPUConstants.FilterMode.Nearest;\n                mipmapFilter = WebGPUConstants.FilterMode.Nearest;\n                if (!useMipMaps) {\n                    lodMinClamp = lodMaxClamp = 0;\n                }\n                break;\n            case 10:\n                magFilter = WebGPUConstants.FilterMode.Linear;\n                minFilter = WebGPUConstants.FilterMode.Nearest;\n                if (!useMipMaps) {\n                    mipmapFilter = WebGPUConstants.FilterMode.Nearest;\n                    lodMinClamp = lodMaxClamp = 0;\n                }\n                else {\n                    mipmapFilter = WebGPUConstants.FilterMode.Linear;\n                }\n                break;\n            case 2:\n            case 2:\n                magFilter = WebGPUConstants.FilterMode.Linear;\n                minFilter = WebGPUConstants.FilterMode.Linear;\n                mipmapFilter = WebGPUConstants.FilterMode.Nearest;\n                lodMinClamp = lodMaxClamp = 0;\n                break;\n            case 12:\n                magFilter = WebGPUConstants.FilterMode.Linear;\n                minFilter = WebGPUConstants.FilterMode.Nearest;\n                mipmapFilter = WebGPUConstants.FilterMode.Nearest;\n                lodMinClamp = lodMaxClamp = 0;\n                break;\n            default:\n                magFilter = WebGPUConstants.FilterMode.Nearest;\n                minFilter = WebGPUConstants.FilterMode.Nearest;\n                mipmapFilter = WebGPUConstants.FilterMode.Nearest;\n                lodMinClamp = lodMaxClamp = 0;\n                break;\n        }\n        if (anisotropy > 1 && (lodMinClamp !== 0 || lodMaxClamp !== 0)) {\n            return {\n                magFilter: WebGPUConstants.FilterMode.Linear,\n                minFilter: WebGPUConstants.FilterMode.Linear,\n                mipmapFilter: WebGPUConstants.FilterMode.Linear,\n                anisotropyEnabled: true,\n            };\n        }\n        return {\n            magFilter: magFilter,\n            minFilter: minFilter,\n            mipmapFilter: mipmapFilter,\n            lodMinClamp: lodMinClamp,\n            lodMaxClamp: lodMaxClamp,\n        };\n    };\n    WebGPUCacheSampler._GetWrappingMode = function (mode) {\n        switch (mode) {\n            case 1:\n                return WebGPUConstants.AddressMode.Repeat;\n            case 0:\n                return WebGPUConstants.AddressMode.ClampToEdge;\n            case 2:\n                return WebGPUConstants.AddressMode.MirrorRepeat;\n        }\n        return WebGPUConstants.AddressMode.Repeat;\n    };\n    WebGPUCacheSampler._GetSamplerWrappingDescriptor = function (sampler) {\n        return {\n            addressModeU: this._GetWrappingMode(sampler._cachedWrapU),\n            addressModeV: this._GetWrappingMode(sampler._cachedWrapV),\n            addressModeW: this._GetWrappingMode(sampler._cachedWrapR),\n        };\n    };\n    WebGPUCacheSampler._GetSamplerDescriptor = function (sampler) {\n        // The WebGPU spec currently only allows values 1 and 4 for anisotropy\n        var anisotropy = sampler.useMipMaps && sampler._cachedAnisotropicFilteringLevel && sampler._cachedAnisotropicFilteringLevel > 1 ? 4 : 1;\n        var filterDescriptor = this._GetSamplerFilterDescriptor(sampler, anisotropy);\n        return __assign(__assign(__assign({}, filterDescriptor), this._GetSamplerWrappingDescriptor(sampler)), { compare: sampler._comparisonFunction ? WebGPUCacheSampler.GetCompareFunction(sampler._comparisonFunction) : undefined, maxAnisotropy: filterDescriptor.anisotropyEnabled ? anisotropy : 1 });\n    };\n    WebGPUCacheSampler.GetCompareFunction = function (compareFunction) {\n        switch (compareFunction) {\n            case 519:\n                return WebGPUConstants.CompareFunction.Always;\n            case 514:\n                return WebGPUConstants.CompareFunction.Equal;\n            case 516:\n                return WebGPUConstants.CompareFunction.Greater;\n            case 518:\n                return WebGPUConstants.CompareFunction.GreaterEqual;\n            case 513:\n                return WebGPUConstants.CompareFunction.Less;\n            case 515:\n                return WebGPUConstants.CompareFunction.LessEqual;\n            case 512:\n                return WebGPUConstants.CompareFunction.Never;\n            case 517:\n                return WebGPUConstants.CompareFunction.NotEqual;\n            default:\n                return WebGPUConstants.CompareFunction.Less;\n        }\n    };\n    WebGPUCacheSampler.prototype.getSampler = function (sampler, bypassCache, hash) {\n        if (bypassCache === void 0) { bypassCache = false; }\n        if (hash === void 0) { hash = 0; }\n        if (this.disabled) {\n            return this._device.createSampler(WebGPUCacheSampler._GetSamplerDescriptor(sampler));\n        }\n        if (bypassCache) {\n            hash = 0;\n        }\n        else if (hash === 0) {\n            hash = WebGPUCacheSampler.GetSamplerHashCode(sampler);\n        }\n        var gpuSampler = bypassCache ? undefined : this._samplers[hash];\n        if (!gpuSampler) {\n            gpuSampler = this._device.createSampler(WebGPUCacheSampler._GetSamplerDescriptor(sampler));\n            if (!bypassCache) {\n                this._samplers[hash] = gpuSampler;\n            }\n        }\n        return gpuSampler;\n    };\n    return WebGPUCacheSampler;\n}());\nexport { WebGPUCacheSampler };\n//# sourceMappingURL=webgpuCacheSampler.js.map","\nimport { WebGPUCacheRenderPipelineTree } from \"./webgpuCacheRenderPipelineTree.js\";\nimport { WebGPUShaderProcessingContext } from \"./webgpuShaderProcessingContext.js\";\nimport { renderableTextureFormatToIndex, WebGPUTextureHelper } from \"./webgpuTextureHelper.js\";\nimport \"../../Shaders/clearQuad.vertex.js\";\nimport \"../../Shaders/clearQuad.fragment.js\";\n/** @hidden */\nvar WebGPUClearQuad = /** @class */ (function () {\n    function WebGPUClearQuad(device, engine, emptyVertexBuffer) {\n        this._bindGroups = {};\n        this._bundleCache = {};\n        this._keyTemp = [];\n        this._device = device;\n        this._engine = engine;\n        this._cacheRenderPipeline = new WebGPUCacheRenderPipelineTree(this._device, emptyVertexBuffer, !engine._caps.textureFloatLinearFiltering);\n        this._cacheRenderPipeline.setDepthTestEnabled(false);\n        this._cacheRenderPipeline.setStencilReadMask(0xff);\n        this._effect = engine.createEffect(\"clearQuad\", [], [\"color\", \"depthValue\"]);\n    }\n    WebGPUClearQuad.prototype.setDepthStencilFormat = function (format) {\n        this._depthTextureFormat = format;\n        this._cacheRenderPipeline.setDepthStencilFormat(format);\n    };\n    WebGPUClearQuad.prototype.setColorFormat = function (format) {\n        this._cacheRenderPipeline.setColorFormat(format);\n    };\n    WebGPUClearQuad.prototype.setMRTAttachments = function (attachments, textureArray, textureCount) {\n        this._cacheRenderPipeline.setMRT(textureArray, textureCount);\n        this._cacheRenderPipeline.setMRTAttachments(attachments);\n    };\n    WebGPUClearQuad.prototype.clear = function (renderPass, clearColor, clearDepth, clearStencil, sampleCount) {\n        var _a, _b;\n        if (sampleCount === void 0) { sampleCount = 1; }\n        var renderPass2;\n        var bundle = null;\n        var bundleKey;\n        var isRTTPass = !!this._engine._currentRenderTarget;\n        if (renderPass) {\n            renderPass2 = renderPass;\n        }\n        else {\n            var idx = 0;\n            this._keyTemp.length = 0;\n            for (var i = 0; i < this._cacheRenderPipeline.colorFormats.length; ++i) {\n                this._keyTemp[idx++] = renderableTextureFormatToIndex[(_a = this._cacheRenderPipeline.colorFormats[i]) !== null && _a !== void 0 ? _a : \"\"];\n            }\n            var depthStencilFormatIndex = renderableTextureFormatToIndex[(_b = this._depthTextureFormat) !== null && _b !== void 0 ? _b : 0];\n            this._keyTemp[idx] =\n                (clearColor ? clearColor.r + clearColor.g * 256 + clearColor.b * 256 * 256 + clearColor.a * 256 * 256 * 256 : 0) +\n                    (clearDepth ? Math.pow(2, 32) : 0) +\n                    (clearStencil ? Math.pow(2, 33) : 0) +\n                    (this._engine.useReverseDepthBuffer ? Math.pow(2, 34) : 0) +\n                    (isRTTPass ? Math.pow(2, 35) : 0) +\n                    (sampleCount > 1 ? Math.pow(2, 36) : 0) +\n                    depthStencilFormatIndex * Math.pow(2, 37);\n            bundleKey = this._keyTemp.join(\"_\");\n            bundle = this._bundleCache[bundleKey];\n            if (bundle) {\n                return bundle;\n            }\n            renderPass2 = this._device.createRenderBundleEncoder({\n                colorFormats: this._cacheRenderPipeline.colorFormats,\n                depthStencilFormat: this._depthTextureFormat,\n                sampleCount: sampleCount,\n            });\n        }\n        this._cacheRenderPipeline.setDepthWriteEnabled(!!clearDepth);\n        this._cacheRenderPipeline.setStencilEnabled(!!clearStencil && !!this._depthTextureFormat && WebGPUTextureHelper.HasStencilAspect(this._depthTextureFormat));\n        this._cacheRenderPipeline.setStencilWriteMask(clearStencil ? 0xff : 0);\n        this._cacheRenderPipeline.setStencilCompare(clearStencil ? 519 : 512);\n        this._cacheRenderPipeline.setStencilPassOp(clearStencil ? 7681 : 7680);\n        this._cacheRenderPipeline.setWriteMask(clearColor ? 0xf : 0);\n        var pipeline = this._cacheRenderPipeline.getRenderPipeline(7, this._effect, sampleCount);\n        var webgpuPipelineContext = this._effect._pipelineContext;\n        if (clearColor) {\n            this._effect.setDirectColor4(\"color\", clearColor);\n        }\n        this._effect.setFloat(\"depthValue\", this._engine.useReverseDepthBuffer ? this._engine._clearReverseDepthValue : this._engine._clearDepthValue);\n        webgpuPipelineContext.uniformBuffer.update();\n        var bufferInternals = isRTTPass ? this._engine._ubInvertY : this._engine._ubDontInvertY;\n        var bufferLeftOver = webgpuPipelineContext.uniformBuffer.getBuffer();\n        var key = bufferLeftOver.uniqueId + \"-\" + bufferInternals.uniqueId;\n        var bindGroups = this._bindGroups[key];\n        if (!bindGroups) {\n            var bindGroupLayouts = webgpuPipelineContext.bindGroupLayouts;\n            bindGroups = this._bindGroups[key] = [];\n            bindGroups.push(this._device.createBindGroup({\n                layout: bindGroupLayouts[0],\n                entries: [],\n            }));\n            if (!WebGPUShaderProcessingContext._SimplifiedKnownBindings) {\n                bindGroups.push(this._device.createBindGroup({\n                    layout: bindGroupLayouts[1],\n                    entries: [],\n                }));\n            }\n            bindGroups.push(this._device.createBindGroup({\n                layout: bindGroupLayouts[WebGPUShaderProcessingContext._SimplifiedKnownBindings ? 1 : 2],\n                entries: [\n                    {\n                        binding: 0,\n                        resource: {\n                            buffer: bufferInternals.underlyingResource,\n                            size: bufferInternals.capacity,\n                        },\n                    },\n                    {\n                        binding: 1,\n                        resource: {\n                            buffer: bufferLeftOver.underlyingResource,\n                            size: bufferLeftOver.capacity,\n                        },\n                    },\n                ],\n            }));\n        }\n        renderPass2.setPipeline(pipeline);\n        for (var i = 0; i < bindGroups.length; ++i) {\n            renderPass2.setBindGroup(i, bindGroups[i]);\n        }\n        renderPass2.draw(4, 1, 0, 0);\n        if (!renderPass) {\n            bundle = renderPass2.finish();\n            this._bundleCache[bundleKey] = bundle;\n        }\n        return bundle;\n    };\n    return WebGPUClearQuad;\n}());\nexport { WebGPUClearQuad };\n//# sourceMappingURL=webgpuClearQuad.js.map","/** @hidden */\n// eslint-disable-next-line import/export\nexport var PredefinedColorSpace;\n(function (PredefinedColorSpace) {\n    PredefinedColorSpace[\"SRGB\"] = \"srgb\";\n})(PredefinedColorSpace || (PredefinedColorSpace = {}));\n/** @hidden */\n// eslint-disable-next-line import/export\nexport var PowerPreference;\n(function (PowerPreference) {\n    PowerPreference[\"LowPower\"] = \"low-power\";\n    PowerPreference[\"HighPerformance\"] = \"high-performance\";\n})(PowerPreference || (PowerPreference = {}));\n/** @hidden */\nexport var FeatureName;\n(function (FeatureName) {\n    FeatureName[\"DepthClipControl\"] = \"depth-clip-control\";\n    FeatureName[\"Depth24UnormStencil8\"] = \"depth24unorm-stencil8\";\n    FeatureName[\"Depth32FloatStencil8\"] = \"depth32float-stencil8\";\n    FeatureName[\"TextureCompressionBC\"] = \"texture-compression-bc\";\n    FeatureName[\"TextureCompressionETC2\"] = \"texture-compression-etc2\";\n    FeatureName[\"TextureCompressionASTC\"] = \"texture-compression-astc\";\n    FeatureName[\"TimestampQuery\"] = \"timestamp-query\";\n    FeatureName[\"IndirectFirstInstance\"] = \"indirect-first-instance\";\n    FeatureName[\"ShaderF16\"] = \"shader-f16\";\n    FeatureName[\"BGRA8UnormStorage\"] = \"bgra8unorm-storage\";\n})(FeatureName || (FeatureName = {}));\n/** @hidden */\nexport var BufferUsage;\n(function (BufferUsage) {\n    BufferUsage[BufferUsage[\"MapRead\"] = 1] = \"MapRead\";\n    BufferUsage[BufferUsage[\"MapWrite\"] = 2] = \"MapWrite\";\n    BufferUsage[BufferUsage[\"CopySrc\"] = 4] = \"CopySrc\";\n    BufferUsage[BufferUsage[\"CopyDst\"] = 8] = \"CopyDst\";\n    BufferUsage[BufferUsage[\"Index\"] = 16] = \"Index\";\n    BufferUsage[BufferUsage[\"Vertex\"] = 32] = \"Vertex\";\n    BufferUsage[BufferUsage[\"Uniform\"] = 64] = \"Uniform\";\n    BufferUsage[BufferUsage[\"Storage\"] = 128] = \"Storage\";\n    BufferUsage[BufferUsage[\"Indirect\"] = 256] = \"Indirect\";\n    BufferUsage[BufferUsage[\"QueryResolve\"] = 512] = \"QueryResolve\";\n})(BufferUsage || (BufferUsage = {}));\n/** @hidden */\nexport var MapMode;\n(function (MapMode) {\n    MapMode[MapMode[\"Read\"] = 1] = \"Read\";\n    MapMode[MapMode[\"Write\"] = 2] = \"Write\";\n})(MapMode || (MapMode = {}));\n/** @hidden */\nexport var TextureDimension;\n(function (TextureDimension) {\n    TextureDimension[\"E1d\"] = \"1d\";\n    TextureDimension[\"E2d\"] = \"2d\";\n    TextureDimension[\"E3d\"] = \"3d\";\n})(TextureDimension || (TextureDimension = {}));\n/** @hidden */\nexport var TextureUsage;\n(function (TextureUsage) {\n    TextureUsage[TextureUsage[\"CopySrc\"] = 1] = \"CopySrc\";\n    TextureUsage[TextureUsage[\"CopyDst\"] = 2] = \"CopyDst\";\n    TextureUsage[TextureUsage[\"TextureBinding\"] = 4] = \"TextureBinding\";\n    TextureUsage[TextureUsage[\"StorageBinding\"] = 8] = \"StorageBinding\";\n    TextureUsage[TextureUsage[\"RenderAttachment\"] = 16] = \"RenderAttachment\";\n})(TextureUsage || (TextureUsage = {}));\n/** @hidden */\nexport var TextureViewDimension;\n(function (TextureViewDimension) {\n    TextureViewDimension[\"E1d\"] = \"1d\";\n    TextureViewDimension[\"E2d\"] = \"2d\";\n    TextureViewDimension[\"E2dArray\"] = \"2d-array\";\n    TextureViewDimension[\"Cube\"] = \"cube\";\n    TextureViewDimension[\"CubeArray\"] = \"cube-array\";\n    TextureViewDimension[\"E3d\"] = \"3d\";\n})(TextureViewDimension || (TextureViewDimension = {}));\n/** @hidden */\nexport var TextureAspect;\n(function (TextureAspect) {\n    TextureAspect[\"All\"] = \"all\";\n    TextureAspect[\"StencilOnly\"] = \"stencil-only\";\n    TextureAspect[\"DepthOnly\"] = \"depth-only\";\n})(TextureAspect || (TextureAspect = {}));\n/**\n * Comments taken from https://github.com/gfx-rs/wgpu/blob/master/wgpu-types/src/lib.rs\n * @hidden\n */\nexport var TextureFormat;\n(function (TextureFormat) {\n    // 8-bit formats\n    TextureFormat[\"R8Unorm\"] = \"r8unorm\";\n    TextureFormat[\"R8Snorm\"] = \"r8snorm\";\n    TextureFormat[\"R8Uint\"] = \"r8uint\";\n    TextureFormat[\"R8Sint\"] = \"r8sint\";\n    // 16-bit formats\n    TextureFormat[\"R16Uint\"] = \"r16uint\";\n    TextureFormat[\"R16Sint\"] = \"r16sint\";\n    TextureFormat[\"R16Float\"] = \"r16float\";\n    TextureFormat[\"RG8Unorm\"] = \"rg8unorm\";\n    TextureFormat[\"RG8Snorm\"] = \"rg8snorm\";\n    TextureFormat[\"RG8Uint\"] = \"rg8uint\";\n    TextureFormat[\"RG8Sint\"] = \"rg8sint\";\n    // 32-bit formats\n    TextureFormat[\"R32Uint\"] = \"r32uint\";\n    TextureFormat[\"R32Sint\"] = \"r32sint\";\n    TextureFormat[\"R32Float\"] = \"r32float\";\n    TextureFormat[\"RG16Uint\"] = \"rg16uint\";\n    TextureFormat[\"RG16Sint\"] = \"rg16sint\";\n    TextureFormat[\"RG16Float\"] = \"rg16float\";\n    TextureFormat[\"RGBA8Unorm\"] = \"rgba8unorm\";\n    TextureFormat[\"RGBA8UnormSRGB\"] = \"rgba8unorm-srgb\";\n    TextureFormat[\"RGBA8Snorm\"] = \"rgba8snorm\";\n    TextureFormat[\"RGBA8Uint\"] = \"rgba8uint\";\n    TextureFormat[\"RGBA8Sint\"] = \"rgba8sint\";\n    TextureFormat[\"BGRA8Unorm\"] = \"bgra8unorm\";\n    TextureFormat[\"BGRA8UnormSRGB\"] = \"bgra8unorm-srgb\";\n    // Packed 32-bit formats\n    TextureFormat[\"RGB9E5UFloat\"] = \"rgb9e5ufloat\";\n    TextureFormat[\"RGB10A2Unorm\"] = \"rgb10a2unorm\";\n    TextureFormat[\"RG11B10UFloat\"] = \"rg11b10ufloat\";\n    // 64-bit formats\n    TextureFormat[\"RG32Uint\"] = \"rg32uint\";\n    TextureFormat[\"RG32Sint\"] = \"rg32sint\";\n    TextureFormat[\"RG32Float\"] = \"rg32float\";\n    TextureFormat[\"RGBA16Uint\"] = \"rgba16uint\";\n    TextureFormat[\"RGBA16Sint\"] = \"rgba16sint\";\n    TextureFormat[\"RGBA16Float\"] = \"rgba16float\";\n    // 128-bit formats\n    TextureFormat[\"RGBA32Uint\"] = \"rgba32uint\";\n    TextureFormat[\"RGBA32Sint\"] = \"rgba32sint\";\n    TextureFormat[\"RGBA32Float\"] = \"rgba32float\";\n    // Depth and stencil formats\n    TextureFormat[\"Stencil8\"] = \"stencil8\";\n    TextureFormat[\"Depth16Unorm\"] = \"depth16unorm\";\n    TextureFormat[\"Depth24Plus\"] = \"depth24plus\";\n    TextureFormat[\"Depth24PlusStencil8\"] = \"depth24plus-stencil8\";\n    TextureFormat[\"Depth32Float\"] = \"depth32float\";\n    // BC compressed formats usable if \"texture-compression-bc\" is both\n    // supported by the device/user agent and enabled in requestDevice.\n    TextureFormat[\"BC1RGBAUnorm\"] = \"bc1-rgba-unorm\";\n    TextureFormat[\"BC1RGBAUnormSRGB\"] = \"bc1-rgba-unorm-srgb\";\n    TextureFormat[\"BC2RGBAUnorm\"] = \"bc2-rgba-unorm\";\n    TextureFormat[\"BC2RGBAUnormSRGB\"] = \"bc2-rgba-unorm-srgb\";\n    TextureFormat[\"BC3RGBAUnorm\"] = \"bc3-rgba-unorm\";\n    TextureFormat[\"BC3RGBAUnormSRGB\"] = \"bc3-rgba-unorm-srgb\";\n    TextureFormat[\"BC4RUnorm\"] = \"bc4-r-unorm\";\n    TextureFormat[\"BC4RSnorm\"] = \"bc4-r-snorm\";\n    TextureFormat[\"BC5RGUnorm\"] = \"bc5-rg-unorm\";\n    TextureFormat[\"BC5RGSnorm\"] = \"bc5-rg-snorm\";\n    TextureFormat[\"BC6HRGBUFloat\"] = \"bc6h-rgb-ufloat\";\n    TextureFormat[\"BC6HRGBFloat\"] = \"bc6h-rgb-float\";\n    TextureFormat[\"BC7RGBAUnorm\"] = \"bc7-rgba-unorm\";\n    TextureFormat[\"BC7RGBAUnormSRGB\"] = \"bc7-rgba-unorm-srgb\";\n    // ETC2 compressed formats usable if \"texture-compression-etc2\" is both\n    // supported by the device/user agent and enabled in requestDevice.\n    TextureFormat[\"ETC2RGB8Unorm\"] = \"etc2-rgb8unorm\";\n    TextureFormat[\"ETC2RGB8UnormSRGB\"] = \"etc2-rgb8unorm-srgb\";\n    TextureFormat[\"ETC2RGB8A1Unorm\"] = \"etc2-rgb8a1unorm\";\n    TextureFormat[\"ETC2RGB8A1UnormSRGB\"] = \"etc2-rgb8a1unorm-srgb\";\n    TextureFormat[\"ETC2RGBA8Unorm\"] = \"etc2-rgba8unorm\";\n    TextureFormat[\"ETC2RGBA8UnormSRGB\"] = \"etc2-rgba8unorm-srgb\";\n    TextureFormat[\"EACR11Unorm\"] = \"eac-r11unorm\";\n    TextureFormat[\"EACR11Snorm\"] = \"eac-r11snorm\";\n    TextureFormat[\"EACRG11Unorm\"] = \"eac-rg11unorm\";\n    TextureFormat[\"EACRG11Snorm\"] = \"eac-rg11snorm\";\n    // ASTC compressed formats usable if \"texture-compression-astc\" is both\n    // supported by the device/user agent and enabled in requestDevice.\n    TextureFormat[\"ASTC4x4Unorm\"] = \"astc-4x4-unorm\";\n    TextureFormat[\"ASTC4x4UnormSRGB\"] = \"astc-4x4-unorm-srgb\";\n    TextureFormat[\"ASTC5x4Unorm\"] = \"astc-5x4-unorm\";\n    TextureFormat[\"ASTC5x4UnormSRGB\"] = \"astc-5x4-unorm-srgb\";\n    TextureFormat[\"ASTC5x5Unorm\"] = \"astc-5x5-unorm\";\n    TextureFormat[\"ASTC5x5UnormSRGB\"] = \"astc-5x5-unorm-srgb\";\n    TextureFormat[\"ASTC6x5Unorm\"] = \"astc-6x5-unorm\";\n    TextureFormat[\"ASTC6x5UnormSRGB\"] = \"astc-6x5-unorm-srgb\";\n    TextureFormat[\"ASTC6x6Unorm\"] = \"astc-6x6-unorm\";\n    TextureFormat[\"ASTC6x6UnormSRGB\"] = \"astc-6x6-unorm-srgb\";\n    TextureFormat[\"ASTC8x5Unorm\"] = \"astc-8x5-unorm\";\n    TextureFormat[\"ASTC8x5UnormSRGB\"] = \"astc-8x5-unorm-srgb\";\n    TextureFormat[\"ASTC8x6Unorm\"] = \"astc-8x6-unorm\";\n    TextureFormat[\"ASTC8x6UnormSRGB\"] = \"astc-8x6-unorm-srgb\";\n    TextureFormat[\"ASTC8x8Unorm\"] = \"astc-8x8-unorm\";\n    TextureFormat[\"ASTC8x8UnormSRGB\"] = \"astc-8x8-unorm-srgb\";\n    TextureFormat[\"ASTC10x5Unorm\"] = \"astc-10x5-unorm\";\n    TextureFormat[\"ASTC10x5UnormSRGB\"] = \"astc-10x5-unorm-srgb\";\n    TextureFormat[\"ASTC10x6Unorm\"] = \"astc-10x6-unorm\";\n    TextureFormat[\"ASTC10x6UnormSRGB\"] = \"astc-10x6-unorm-srgb\";\n    TextureFormat[\"ASTC10x8Unorm\"] = \"astc-10x8-unorm\";\n    TextureFormat[\"ASTC10x8UnormSRGB\"] = \"astc-10x8-unorm-srgb\";\n    TextureFormat[\"ASTC10x10Unorm\"] = \"astc-10x10-unorm\";\n    TextureFormat[\"ASTC10x10UnormSRGB\"] = \"astc-10x10-unorm-srgb\";\n    TextureFormat[\"ASTC12x10Unorm\"] = \"astc-12x10-unorm\";\n    TextureFormat[\"ASTC12x10UnormSRGB\"] = \"astc-12x10-unorm-srgb\";\n    TextureFormat[\"ASTC12x12Unorm\"] = \"astc-12x12-unorm\";\n    TextureFormat[\"ASTC12x12UnormSRGB\"] = \"astc-12x12-unorm-srgb\";\n    // \"depth24unorm-stencil8\" feature\n    TextureFormat[\"Depth24UnormStencil8\"] = \"depth24unorm-stencil8\";\n    // \"depth32float-stencil8\" feature\n    TextureFormat[\"Depth32FloatStencil8\"] = \"depth32float-stencil8\";\n})(TextureFormat || (TextureFormat = {}));\n/** @hidden */\nexport var AddressMode;\n(function (AddressMode) {\n    AddressMode[\"ClampToEdge\"] = \"clamp-to-edge\";\n    AddressMode[\"Repeat\"] = \"repeat\";\n    AddressMode[\"MirrorRepeat\"] = \"mirror-repeat\";\n})(AddressMode || (AddressMode = {}));\n/** @hidden */\nexport var FilterMode;\n(function (FilterMode) {\n    FilterMode[\"Nearest\"] = \"nearest\";\n    FilterMode[\"Linear\"] = \"linear\";\n})(FilterMode || (FilterMode = {}));\n/** @hidden */\nexport var CompareFunction;\n(function (CompareFunction) {\n    CompareFunction[\"Never\"] = \"never\";\n    CompareFunction[\"Less\"] = \"less\";\n    CompareFunction[\"Equal\"] = \"equal\";\n    CompareFunction[\"LessEqual\"] = \"less-equal\";\n    CompareFunction[\"Greater\"] = \"greater\";\n    CompareFunction[\"NotEqual\"] = \"not-equal\";\n    CompareFunction[\"GreaterEqual\"] = \"greater-equal\";\n    CompareFunction[\"Always\"] = \"always\";\n})(CompareFunction || (CompareFunction = {}));\n/** @hidden */\nexport var ShaderStage;\n(function (ShaderStage) {\n    ShaderStage[ShaderStage[\"Vertex\"] = 1] = \"Vertex\";\n    ShaderStage[ShaderStage[\"Fragment\"] = 2] = \"Fragment\";\n    ShaderStage[ShaderStage[\"Compute\"] = 4] = \"Compute\";\n})(ShaderStage || (ShaderStage = {}));\n/** @hidden */\nexport var BufferBindingType;\n(function (BufferBindingType) {\n    BufferBindingType[\"Uniform\"] = \"uniform\";\n    BufferBindingType[\"Storage\"] = \"storage\";\n    BufferBindingType[\"ReadOnlyStorage\"] = \"read-only-storage\";\n})(BufferBindingType || (BufferBindingType = {}));\n/** @hidden */\nexport var SamplerBindingType;\n(function (SamplerBindingType) {\n    SamplerBindingType[\"Filtering\"] = \"filtering\";\n    SamplerBindingType[\"NonFiltering\"] = \"non-filtering\";\n    SamplerBindingType[\"Comparison\"] = \"comparison\";\n})(SamplerBindingType || (SamplerBindingType = {}));\n/** @hidden */\nexport var TextureSampleType;\n(function (TextureSampleType) {\n    TextureSampleType[\"Float\"] = \"float\";\n    TextureSampleType[\"UnfilterableFloat\"] = \"unfilterable-float\";\n    TextureSampleType[\"Depth\"] = \"depth\";\n    TextureSampleType[\"Sint\"] = \"sint\";\n    TextureSampleType[\"Uint\"] = \"uint\";\n})(TextureSampleType || (TextureSampleType = {}));\n/** @hidden */\nexport var StorageTextureAccess;\n(function (StorageTextureAccess) {\n    StorageTextureAccess[\"WriteOnly\"] = \"write-only\";\n})(StorageTextureAccess || (StorageTextureAccess = {}));\n/** @hidden */\nexport var CompilationMessageType;\n(function (CompilationMessageType) {\n    CompilationMessageType[\"Error\"] = \"error\";\n    CompilationMessageType[\"Warning\"] = \"warning\";\n    CompilationMessageType[\"Info\"] = \"info\";\n})(CompilationMessageType || (CompilationMessageType = {}));\n/** @hidden */\nexport var AutoLayoutMode;\n(function (AutoLayoutMode) {\n    AutoLayoutMode[\"Auto\"] = \"auto\";\n})(AutoLayoutMode || (AutoLayoutMode = {}));\n/** @hidden */\nexport var PrimitiveTopology;\n(function (PrimitiveTopology) {\n    PrimitiveTopology[\"PointList\"] = \"point-list\";\n    PrimitiveTopology[\"LineList\"] = \"line-list\";\n    PrimitiveTopology[\"LineStrip\"] = \"line-strip\";\n    PrimitiveTopology[\"TriangleList\"] = \"triangle-list\";\n    PrimitiveTopology[\"TriangleStrip\"] = \"triangle-strip\";\n})(PrimitiveTopology || (PrimitiveTopology = {}));\n/** @hidden */\nexport var FrontFace;\n(function (FrontFace) {\n    FrontFace[\"CCW\"] = \"ccw\";\n    FrontFace[\"CW\"] = \"cw\";\n})(FrontFace || (FrontFace = {}));\n/** @hidden */\nexport var CullMode;\n(function (CullMode) {\n    CullMode[\"None\"] = \"none\";\n    CullMode[\"Front\"] = \"front\";\n    CullMode[\"Back\"] = \"back\";\n})(CullMode || (CullMode = {}));\n/** @hidden */\nexport var ColorWriteFlags;\n(function (ColorWriteFlags) {\n    ColorWriteFlags[ColorWriteFlags[\"Red\"] = 1] = \"Red\";\n    ColorWriteFlags[ColorWriteFlags[\"Green\"] = 2] = \"Green\";\n    ColorWriteFlags[ColorWriteFlags[\"Blue\"] = 4] = \"Blue\";\n    ColorWriteFlags[ColorWriteFlags[\"Alpha\"] = 8] = \"Alpha\";\n    ColorWriteFlags[ColorWriteFlags[\"All\"] = 15] = \"All\";\n})(ColorWriteFlags || (ColorWriteFlags = {}));\n/** @hidden */\nexport var BlendFactor;\n(function (BlendFactor) {\n    BlendFactor[\"Zero\"] = \"zero\";\n    BlendFactor[\"One\"] = \"one\";\n    BlendFactor[\"Src\"] = \"src\";\n    BlendFactor[\"OneMinusSrc\"] = \"one-minus-src\";\n    BlendFactor[\"SrcAlpha\"] = \"src-alpha\";\n    BlendFactor[\"OneMinusSrcAlpha\"] = \"one-minus-src-alpha\";\n    BlendFactor[\"Dst\"] = \"dst\";\n    BlendFactor[\"OneMinusDst\"] = \"one-minus-dst\";\n    BlendFactor[\"DstAlpha\"] = \"dst-alpha\";\n    BlendFactor[\"OneMinusDstAlpha\"] = \"one-minus-dst-alpha\";\n    BlendFactor[\"SrcAlphaSaturated\"] = \"src-alpha-saturated\";\n    BlendFactor[\"Constant\"] = \"constant\";\n    BlendFactor[\"OneMinusConstant\"] = \"one-minus-constant\";\n})(BlendFactor || (BlendFactor = {}));\n/** @hidden */\nexport var BlendOperation;\n(function (BlendOperation) {\n    BlendOperation[\"Add\"] = \"add\";\n    BlendOperation[\"Subtract\"] = \"subtract\";\n    BlendOperation[\"ReverseSubtract\"] = \"reverse-subtract\";\n    BlendOperation[\"Min\"] = \"min\";\n    BlendOperation[\"Max\"] = \"max\";\n})(BlendOperation || (BlendOperation = {}));\n/** @hidden */\nexport var StencilOperation;\n(function (StencilOperation) {\n    StencilOperation[\"Keep\"] = \"keep\";\n    StencilOperation[\"Zero\"] = \"zero\";\n    StencilOperation[\"Replace\"] = \"replace\";\n    StencilOperation[\"Invert\"] = \"invert\";\n    StencilOperation[\"IncrementClamp\"] = \"increment-clamp\";\n    StencilOperation[\"DecrementClamp\"] = \"decrement-clamp\";\n    StencilOperation[\"IncrementWrap\"] = \"increment-wrap\";\n    StencilOperation[\"DecrementWrap\"] = \"decrement-wrap\";\n})(StencilOperation || (StencilOperation = {}));\n/** @hidden */\nexport var IndexFormat;\n(function (IndexFormat) {\n    IndexFormat[\"Uint16\"] = \"uint16\";\n    IndexFormat[\"Uint32\"] = \"uint32\";\n})(IndexFormat || (IndexFormat = {}));\n/** @hidden */\nexport var VertexFormat;\n(function (VertexFormat) {\n    VertexFormat[\"Uint8x2\"] = \"uint8x2\";\n    VertexFormat[\"Uint8x4\"] = \"uint8x4\";\n    VertexFormat[\"Sint8x2\"] = \"sint8x2\";\n    VertexFormat[\"Sint8x4\"] = \"sint8x4\";\n    VertexFormat[\"Unorm8x2\"] = \"unorm8x2\";\n    VertexFormat[\"Unorm8x4\"] = \"unorm8x4\";\n    VertexFormat[\"Snorm8x2\"] = \"snorm8x2\";\n    VertexFormat[\"Snorm8x4\"] = \"snorm8x4\";\n    VertexFormat[\"Uint16x2\"] = \"uint16x2\";\n    VertexFormat[\"Uint16x4\"] = \"uint16x4\";\n    VertexFormat[\"Sint16x2\"] = \"sint16x2\";\n    VertexFormat[\"Sint16x4\"] = \"sint16x4\";\n    VertexFormat[\"Unorm16x2\"] = \"unorm16x2\";\n    VertexFormat[\"Unorm16x4\"] = \"unorm16x4\";\n    VertexFormat[\"Snorm16x2\"] = \"snorm16x2\";\n    VertexFormat[\"Snorm16x4\"] = \"snorm16x4\";\n    VertexFormat[\"Float16x2\"] = \"float16x2\";\n    VertexFormat[\"Float16x4\"] = \"float16x4\";\n    VertexFormat[\"Float32\"] = \"float32\";\n    VertexFormat[\"Float32x2\"] = \"float32x2\";\n    VertexFormat[\"Float32x3\"] = \"float32x3\";\n    VertexFormat[\"Float32x4\"] = \"float32x4\";\n    VertexFormat[\"Uint32\"] = \"uint32\";\n    VertexFormat[\"Uint32x2\"] = \"uint32x2\";\n    VertexFormat[\"Uint32x3\"] = \"uint32x3\";\n    VertexFormat[\"Uint32x4\"] = \"uint32x4\";\n    VertexFormat[\"Sint32\"] = \"sint32\";\n    VertexFormat[\"Sint32x2\"] = \"sint32x2\";\n    VertexFormat[\"Sint32x3\"] = \"sint32x3\";\n    VertexFormat[\"Sint32x4\"] = \"sint32x4\";\n})(VertexFormat || (VertexFormat = {}));\n/** @hidden */\nexport var InputStepMode;\n(function (InputStepMode) {\n    InputStepMode[\"Vertex\"] = \"vertex\";\n    InputStepMode[\"Instance\"] = \"instance\";\n})(InputStepMode || (InputStepMode = {}));\n/** @hidden */\nexport var ComputePassTimestampLocation;\n(function (ComputePassTimestampLocation) {\n    ComputePassTimestampLocation[\"Beginning\"] = \"beginning\";\n    ComputePassTimestampLocation[\"End\"] = \"end\";\n})(ComputePassTimestampLocation || (ComputePassTimestampLocation = {}));\n/** @hidden */\nexport var RenderPassTimestampLocation;\n(function (RenderPassTimestampLocation) {\n    RenderPassTimestampLocation[\"Beginning\"] = \"beginning\";\n    RenderPassTimestampLocation[\"End\"] = \"end\";\n})(RenderPassTimestampLocation || (RenderPassTimestampLocation = {}));\n/** @hidden */\nexport var LoadOp;\n(function (LoadOp) {\n    LoadOp[\"Load\"] = \"load\";\n    LoadOp[\"Clear\"] = \"clear\";\n})(LoadOp || (LoadOp = {}));\n/** @hidden */\nexport var StoreOp;\n(function (StoreOp) {\n    StoreOp[\"Store\"] = \"store\";\n    StoreOp[\"Discard\"] = \"discard\";\n})(StoreOp || (StoreOp = {}));\n/** @hidden */\nexport var QueryType;\n(function (QueryType) {\n    QueryType[\"Occlusion\"] = \"occlusion\";\n    QueryType[\"Timestamp\"] = \"timestamp\";\n})(QueryType || (QueryType = {}));\n/** @hidden */\nexport var CanvasCompositingAlphaMode;\n(function (CanvasCompositingAlphaMode) {\n    CanvasCompositingAlphaMode[\"Opaque\"] = \"opaque\";\n    CanvasCompositingAlphaMode[\"Premultiplied\"] = \"premultiplied\";\n})(CanvasCompositingAlphaMode || (CanvasCompositingAlphaMode = {}));\n/** @hidden */\nexport var DeviceLostReason;\n(function (DeviceLostReason) {\n    DeviceLostReason[\"Destroyed\"] = \"destroyed\";\n})(DeviceLostReason || (DeviceLostReason = {}));\n/** @hidden */\nexport var ErrorFilter;\n(function (ErrorFilter) {\n    ErrorFilter[\"OutOfMemory\"] = \"out-of-memory\";\n    ErrorFilter[\"Validation\"] = \"validation\";\n})(ErrorFilter || (ErrorFilter = {}));\n//# sourceMappingURL=webgpuConstants.js.map","import { __extends } from \"tslib\";\nimport { DepthCullingState } from \"../../States/depthCullingState.js\";\n/**\n * @hidden\n **/\nvar WebGPUDepthCullingState = /** @class */ (function (_super) {\n    __extends(WebGPUDepthCullingState, _super);\n    /**\n     * Initializes the state.\n     * @param cache\n     */\n    function WebGPUDepthCullingState(cache) {\n        var _this = _super.call(this, false) || this;\n        _this._cache = cache;\n        _this.reset();\n        return _this;\n    }\n    Object.defineProperty(WebGPUDepthCullingState.prototype, \"zOffset\", {\n        get: function () {\n            return this._zOffset;\n        },\n        set: function (value) {\n            if (this._zOffset === value) {\n                return;\n            }\n            this._zOffset = value;\n            this._isZOffsetDirty = true;\n            this._cache.setDepthBiasSlopeScale(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUDepthCullingState.prototype, \"zOffsetUnits\", {\n        get: function () {\n            return this._zOffsetUnits;\n        },\n        set: function (value) {\n            if (this._zOffsetUnits === value) {\n                return;\n            }\n            this._zOffsetUnits = value;\n            this._isZOffsetDirty = true;\n            this._cache.setDepthBias(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUDepthCullingState.prototype, \"cullFace\", {\n        get: function () {\n            return this._cullFace;\n        },\n        set: function (value) {\n            if (this._cullFace === value) {\n                return;\n            }\n            this._cullFace = value;\n            this._isCullFaceDirty = true;\n            this._cache.setCullFace(value !== null && value !== void 0 ? value : 1);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUDepthCullingState.prototype, \"cull\", {\n        get: function () {\n            return this._cull;\n        },\n        set: function (value) {\n            if (this._cull === value) {\n                return;\n            }\n            this._cull = value;\n            this._isCullDirty = true;\n            this._cache.setCullEnabled(!!value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUDepthCullingState.prototype, \"depthFunc\", {\n        get: function () {\n            return this._depthFunc;\n        },\n        set: function (value) {\n            if (this._depthFunc === value) {\n                return;\n            }\n            this._depthFunc = value;\n            this._isDepthFuncDirty = true;\n            this._cache.setDepthCompare(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUDepthCullingState.prototype, \"depthMask\", {\n        get: function () {\n            return this._depthMask;\n        },\n        set: function (value) {\n            if (this._depthMask === value) {\n                return;\n            }\n            this._depthMask = value;\n            this._isDepthMaskDirty = true;\n            this._cache.setDepthWriteEnabled(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUDepthCullingState.prototype, \"depthTest\", {\n        get: function () {\n            return this._depthTest;\n        },\n        set: function (value) {\n            if (this._depthTest === value) {\n                return;\n            }\n            this._depthTest = value;\n            this._isDepthTestDirty = true;\n            this._cache.setDepthTestEnabled(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUDepthCullingState.prototype, \"frontFace\", {\n        get: function () {\n            return this._frontFace;\n        },\n        set: function (value) {\n            if (this._frontFace === value) {\n                return;\n            }\n            this._frontFace = value;\n            this._isFrontFaceDirty = true;\n            this._cache.setFrontFace(value !== null && value !== void 0 ? value : 2);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebGPUDepthCullingState.prototype.reset = function () {\n        _super.prototype.reset.call(this);\n        this._cache.resetDepthCullingState();\n    };\n    WebGPUDepthCullingState.prototype.apply = function () {\n        // nothing to do\n    };\n    return WebGPUDepthCullingState;\n}(DepthCullingState));\nexport { WebGPUDepthCullingState };\n//# sourceMappingURL=webgpuDepthCullingState.js.map","import * as WebGPUConstants from \"./webgpuConstants.js\";\n/** @hidden */\nvar WebGPUDrawContext = /** @class */ (function () {\n    function WebGPUDrawContext(bufferManager) {\n        this._bufferManager = bufferManager;\n        this.uniqueId = WebGPUDrawContext._Counter++;\n        this._useInstancing = false;\n        this._currentInstanceCount = 0;\n        this.reset();\n    }\n    WebGPUDrawContext.prototype.isDirty = function (materialContextUpdateId) {\n        return this._isDirty || this._materialContextUpdateId !== materialContextUpdateId;\n    };\n    WebGPUDrawContext.prototype.resetIsDirty = function (materialContextUpdateId) {\n        this._isDirty = false;\n        this._materialContextUpdateId = materialContextUpdateId;\n    };\n    Object.defineProperty(WebGPUDrawContext.prototype, \"useInstancing\", {\n        get: function () {\n            return this._useInstancing;\n        },\n        set: function (use) {\n            if (this._useInstancing === use) {\n                return;\n            }\n            if (!use) {\n                if (this.indirectDrawBuffer) {\n                    this._bufferManager.releaseBuffer(this.indirectDrawBuffer);\n                }\n                this.indirectDrawBuffer = undefined;\n                this._indirectDrawData = undefined;\n            }\n            else {\n                this.indirectDrawBuffer = this._bufferManager.createRawBuffer(40, WebGPUConstants.BufferUsage.CopyDst | WebGPUConstants.BufferUsage.Indirect);\n                this._indirectDrawData = new Uint32Array(5);\n                this._indirectDrawData[3] = 0;\n                this._indirectDrawData[4] = 0;\n            }\n            this._useInstancing = use;\n            this._currentInstanceCount = -1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebGPUDrawContext.prototype.reset = function () {\n        this.buffers = {};\n        this._isDirty = true;\n        this._materialContextUpdateId = 0;\n        this.fastBundle = undefined;\n        this.bindGroups = undefined;\n    };\n    WebGPUDrawContext.prototype.setBuffer = function (name, buffer) {\n        var _a;\n        this._isDirty || (this._isDirty = (buffer === null || buffer === void 0 ? void 0 : buffer.uniqueId) !== ((_a = this.buffers[name]) === null || _a === void 0 ? void 0 : _a.uniqueId));\n        this.buffers[name] = buffer;\n    };\n    WebGPUDrawContext.prototype.setIndirectData = function (indexOrVertexCount, instanceCount, firstIndexOrVertex) {\n        if (instanceCount === this._currentInstanceCount || !this.indirectDrawBuffer || !this._indirectDrawData) {\n            // The current buffer is already up to date so do nothing\n            // Note that we only check for instanceCount and not indexOrVertexCount nor firstIndexOrVertex because those values\n            // are supposed to not change during the lifetime of a draw context\n            return;\n        }\n        this._currentInstanceCount = instanceCount;\n        this._indirectDrawData[0] = indexOrVertexCount;\n        this._indirectDrawData[1] = instanceCount;\n        this._indirectDrawData[2] = firstIndexOrVertex;\n        this._bufferManager.setRawData(this.indirectDrawBuffer, 0, this._indirectDrawData, 0, 20);\n    };\n    WebGPUDrawContext.prototype.dispose = function () {\n        if (this.indirectDrawBuffer) {\n            this._bufferManager.releaseBuffer(this.indirectDrawBuffer);\n            this.indirectDrawBuffer = undefined;\n            this._indirectDrawData = undefined;\n        }\n        this.fastBundle = undefined;\n        this.bindGroups = undefined;\n        this.buffers = undefined;\n    };\n    WebGPUDrawContext._Counter = 0;\n    return WebGPUDrawContext;\n}());\nexport { WebGPUDrawContext };\n//# sourceMappingURL=webgpuDrawContext.js.map","import { InternalTextureSource } from \"../../Materials/Textures/internalTexture.js\";\nimport { Scalar } from \"../../Maths/math.scalar.js\";\nimport * as WebGPUConstants from \"./webgpuConstants.js\";\n/** @hidden */\nvar WebGPUHardwareTexture = /** @class */ (function () {\n    function WebGPUHardwareTexture(existingTexture) {\n        if (existingTexture === void 0) { existingTexture = null; }\n        this.format = WebGPUConstants.TextureFormat.RGBA8Unorm;\n        this.textureUsages = 0;\n        this.textureAdditionalUsages = 0;\n        this._webgpuTexture = existingTexture;\n        this._webgpuMSAATexture = null;\n        this.view = null;\n        this.viewForWriting = null;\n    }\n    Object.defineProperty(WebGPUHardwareTexture.prototype, \"underlyingResource\", {\n        get: function () {\n            return this._webgpuTexture;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUHardwareTexture.prototype, \"msaaTexture\", {\n        get: function () {\n            return this._webgpuMSAATexture;\n        },\n        set: function (texture) {\n            this._webgpuMSAATexture = texture;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebGPUHardwareTexture.prototype.set = function (hardwareTexture) {\n        this._webgpuTexture = hardwareTexture;\n    };\n    WebGPUHardwareTexture.prototype.setUsage = function (textureSource, generateMipMaps, isCube, width, height) {\n        generateMipMaps = textureSource === InternalTextureSource.RenderTarget ? false : generateMipMaps;\n        this.createView({\n            format: this.format,\n            dimension: isCube ? WebGPUConstants.TextureViewDimension.Cube : WebGPUConstants.TextureViewDimension.E2d,\n            mipLevelCount: generateMipMaps ? Scalar.ILog2(Math.max(width, height)) + 1 : 1,\n            baseArrayLayer: 0,\n            baseMipLevel: 0,\n            arrayLayerCount: isCube ? 6 : 1,\n            aspect: WebGPUConstants.TextureAspect.All,\n        });\n    };\n    WebGPUHardwareTexture.prototype.createView = function (descriptor, createViewForWriting) {\n        if (createViewForWriting === void 0) { createViewForWriting = false; }\n        this.view = this._webgpuTexture.createView(descriptor);\n        if (createViewForWriting && descriptor) {\n            var saveNumMipMaps = descriptor.mipLevelCount;\n            descriptor.mipLevelCount = 1;\n            this.viewForWriting = this._webgpuTexture.createView(descriptor);\n            descriptor.mipLevelCount = saveNumMipMaps;\n        }\n    };\n    WebGPUHardwareTexture.prototype.reset = function () {\n        this._webgpuTexture = null;\n        this._webgpuMSAATexture = null;\n        this.view = null;\n        this.viewForWriting = null;\n    };\n    WebGPUHardwareTexture.prototype.release = function () {\n        var _a, _b, _c;\n        (_a = this._webgpuTexture) === null || _a === void 0 ? void 0 : _a.destroy();\n        (_b = this._webgpuMSAATexture) === null || _b === void 0 ? void 0 : _b.destroy();\n        (_c = this._copyInvertYTempTexture) === null || _c === void 0 ? void 0 : _c.destroy();\n        this.reset();\n    };\n    return WebGPUHardwareTexture;\n}());\nexport { WebGPUHardwareTexture };\n//# sourceMappingURL=webgpuHardwareTexture.js.map","import { ExternalTexture } from \"../../Materials/Textures/externalTexture.js\";\n\nimport { WebGPUCacheSampler } from \"./webgpuCacheSampler.js\";\n/** @hidden */\nvar WebGPUMaterialContext = /** @class */ (function () {\n    function WebGPUMaterialContext() {\n        this.uniqueId = WebGPUMaterialContext._Counter++;\n        this.updateId = 0;\n        this.reset();\n    }\n    Object.defineProperty(WebGPUMaterialContext.prototype, \"forceBindGroupCreation\", {\n        get: function () {\n            // If there is at least one external texture to bind, we must recreate the bind groups each time\n            // because we need to retrieve a new texture each frame (by calling device.importExternalTexture)\n            return this._numExternalTextures > 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUMaterialContext.prototype, \"hasFloatTextures\", {\n        get: function () {\n            return this._numFloatTextures > 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebGPUMaterialContext.prototype.reset = function () {\n        this.samplers = {};\n        this.textures = {};\n        this.isDirty = true;\n        this._numFloatTextures = 0;\n        this._numExternalTextures = 0;\n    };\n    WebGPUMaterialContext.prototype.setSampler = function (name, sampler) {\n        var samplerCache = this.samplers[name];\n        var currentHashCode = -1;\n        if (!samplerCache) {\n            this.samplers[name] = samplerCache = { sampler: sampler, hashCode: 0 };\n        }\n        else {\n            currentHashCode = samplerCache.hashCode;\n        }\n        samplerCache.sampler = sampler;\n        samplerCache.hashCode = sampler ? WebGPUCacheSampler.GetSamplerHashCode(sampler) : 0;\n        var isDirty = currentHashCode !== samplerCache.hashCode;\n        if (isDirty) {\n            this.updateId++;\n        }\n        this.isDirty || (this.isDirty = isDirty);\n    };\n    WebGPUMaterialContext.prototype.setTexture = function (name, texture) {\n        var _a, _b, _c;\n        var textureCache = this.textures[name];\n        var currentTextureId = -1;\n        if (!textureCache) {\n            this.textures[name] = textureCache = { texture: texture, isFloatTexture: false, isExternalTexture: false };\n        }\n        else {\n            currentTextureId = (_b = (_a = textureCache.texture) === null || _a === void 0 ? void 0 : _a.uniqueId) !== null && _b !== void 0 ? _b : -1;\n        }\n        if (textureCache.isExternalTexture) {\n            this._numExternalTextures--;\n        }\n        if (textureCache.isFloatTexture) {\n            this._numFloatTextures--;\n        }\n        if (texture) {\n            textureCache.isFloatTexture = texture.type === 1;\n            textureCache.isExternalTexture = ExternalTexture.IsExternalTexture(texture);\n            if (textureCache.isFloatTexture) {\n                this._numFloatTextures++;\n            }\n            if (textureCache.isExternalTexture) {\n                this._numExternalTextures++;\n            }\n        }\n        else {\n            textureCache.isFloatTexture = false;\n            textureCache.isExternalTexture = false;\n        }\n        textureCache.texture = texture;\n        var isDirty = currentTextureId !== ((_c = texture === null || texture === void 0 ? void 0 : texture.uniqueId) !== null && _c !== void 0 ? _c : -1);\n        if (isDirty) {\n            this.updateId++;\n        }\n        this.isDirty || (this.isDirty = isDirty);\n    };\n    WebGPUMaterialContext._Counter = 0;\n    return WebGPUMaterialContext;\n}());\nexport { WebGPUMaterialContext };\n//# sourceMappingURL=webgpuMaterialContext.js.map","import * as WebGPUConstants from \"./webgpuConstants.js\";\nimport { WebGPUQuerySet } from \"./webgpuQuerySet.js\";\n/** @hidden */\nvar WebGPUOcclusionQuery = /** @class */ (function () {\n    function WebGPUOcclusionQuery(engine, device, bufferManager, startCount, incrementCount) {\n        if (startCount === void 0) { startCount = 50; }\n        if (incrementCount === void 0) { incrementCount = 100; }\n        this._availableIndices = [];\n        this._engine = engine;\n        this._device = device;\n        this._bufferManager = bufferManager;\n        this._frameLastBuffer = -1;\n        this._currentTotalIndices = 0;\n        this._countIncrement = incrementCount;\n        this._allocateNewIndices(startCount);\n    }\n    Object.defineProperty(WebGPUOcclusionQuery.prototype, \"querySet\", {\n        get: function () {\n            return this._querySet.querySet;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUOcclusionQuery.prototype, \"hasQueries\", {\n        get: function () {\n            return this._currentTotalIndices !== this._availableIndices.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUOcclusionQuery.prototype, \"canBeginQuery\", {\n        get: function () {\n            var passIndex = this._engine._getCurrentRenderPassIndex();\n            switch (passIndex) {\n                case 0: {\n                    return this._engine._mainRenderPassWrapper.renderPassDescriptor.occlusionQuerySet !== undefined;\n                }\n                case 1: {\n                    return this._engine._rttRenderPassWrapper.renderPassDescriptor.occlusionQuerySet !== undefined;\n                }\n            }\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebGPUOcclusionQuery.prototype.createQuery = function () {\n        if (this._availableIndices.length === 0) {\n            this._allocateNewIndices();\n        }\n        var index = this._availableIndices[this._availableIndices.length - 1];\n        this._availableIndices.length--;\n        return index;\n    };\n    WebGPUOcclusionQuery.prototype.deleteQuery = function (index) {\n        this._availableIndices[this._availableIndices.length - 1] = index;\n    };\n    WebGPUOcclusionQuery.prototype.isQueryResultAvailable = function (index) {\n        this._retrieveQueryBuffer();\n        return !!this._lastBuffer && index < this._lastBuffer.length;\n    };\n    WebGPUOcclusionQuery.prototype.getQueryResult = function (index) {\n        var _a, _b;\n        return Number((_b = (_a = this._lastBuffer) === null || _a === void 0 ? void 0 : _a[index]) !== null && _b !== void 0 ? _b : -1);\n    };\n    WebGPUOcclusionQuery.prototype._retrieveQueryBuffer = function () {\n        var _this = this;\n        if (this._lastBuffer && this._frameLastBuffer === this._engine.frameId) {\n            return;\n        }\n        if (this._frameLastBuffer !== this._engine.frameId) {\n            this._frameLastBuffer = this._engine.frameId;\n            this._querySet.readValues(0, this._currentTotalIndices).then(function (arrayBuffer) {\n                _this._lastBuffer = arrayBuffer;\n            });\n        }\n    };\n    WebGPUOcclusionQuery.prototype._allocateNewIndices = function (numIndices) {\n        numIndices = numIndices !== null && numIndices !== void 0 ? numIndices : this._countIncrement;\n        this._delayQuerySetDispose();\n        for (var i = 0; i < numIndices; ++i) {\n            this._availableIndices.push(this._currentTotalIndices + i);\n        }\n        this._currentTotalIndices += numIndices;\n        this._querySet = new WebGPUQuerySet(this._currentTotalIndices, WebGPUConstants.QueryType.Occlusion, this._device, this._bufferManager, false);\n    };\n    WebGPUOcclusionQuery.prototype._delayQuerySetDispose = function () {\n        var querySet = this._querySet;\n        if (querySet) {\n            // Wait a bit before disposing of the queryset, in case some queries are still running for it\n            setTimeout(function () { return querySet.dispose; }, 1000);\n        }\n    };\n    WebGPUOcclusionQuery.prototype.dispose = function () {\n        var _a;\n        (_a = this._querySet) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._availableIndices = [];\n    };\n    return WebGPUOcclusionQuery;\n}());\nexport { WebGPUOcclusionQuery };\n//# sourceMappingURL=webgpuOcclusionQuery.js.map","import { UniformBuffer } from \"../../Materials/uniformBuffer.js\";\nimport { WebGPUShaderProcessor } from \"./webgpuShaderProcessor.js\";\n/** @hidden */\nvar WebGPUPipelineContext = /** @class */ (function () {\n    function WebGPUPipelineContext(shaderProcessingContext, engine) {\n        this._name = \"unnamed\";\n        this.shaderProcessingContext = shaderProcessingContext;\n        this._leftOverUniformsByName = {};\n        this.engine = engine;\n    }\n    Object.defineProperty(WebGPUPipelineContext.prototype, \"isAsync\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUPipelineContext.prototype, \"isReady\", {\n        get: function () {\n            if (this.stages) {\n                return true;\n            }\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebGPUPipelineContext.prototype._handlesSpectorRebuildCallback = function () {\n        // Nothing to do yet for spector.\n    };\n    WebGPUPipelineContext.prototype._fillEffectInformation = function (effect, uniformBuffersNames, uniformsNames, uniforms, samplerList, samplers, attributesNames, attributes) {\n        var engine = this.engine;\n        // Prevent Memory Leak by reducing the number of string, refer to the string instead of copy.\n        effect._fragmentSourceCode = \"\";\n        effect._vertexSourceCode = \"\";\n        // this._fragmentSourceCodeOverride = \"\";\n        // this._vertexSourceCodeOverride = \"\";\n        var foundSamplers = this.shaderProcessingContext.availableTextures;\n        var index;\n        for (index = 0; index < samplerList.length; index++) {\n            var name_1 = samplerList[index];\n            var sampler = foundSamplers[samplerList[index]];\n            if (sampler == null || sampler == undefined) {\n                samplerList.splice(index, 1);\n                index--;\n            }\n            else {\n                samplers[name_1] = index;\n            }\n        }\n        for (var _i = 0, _a = engine.getAttributes(this, attributesNames); _i < _a.length; _i++) {\n            var attr = _a[_i];\n            attributes.push(attr);\n        }\n        // Build the uniform layout for the left over uniforms.\n        this.buildUniformLayout();\n        var attributeNamesFromEffect = [];\n        var attributeLocationsFromEffect = [];\n        for (index = 0; index < attributesNames.length; index++) {\n            var location_1 = attributes[index];\n            if (location_1 >= 0) {\n                attributeNamesFromEffect.push(attributesNames[index]);\n                attributeLocationsFromEffect.push(location_1);\n            }\n        }\n        this.shaderProcessingContext.attributeNamesFromEffect = attributeNamesFromEffect;\n        this.shaderProcessingContext.attributeLocationsFromEffect = attributeLocationsFromEffect;\n    };\n    /** @hidden */\n    /**\n     * Build the uniform buffer used in the material.\n     */\n    WebGPUPipelineContext.prototype.buildUniformLayout = function () {\n        if (!this.shaderProcessingContext.leftOverUniforms.length) {\n            return;\n        }\n        this.uniformBuffer = new UniformBuffer(this.engine, undefined, undefined, \"leftOver-\" + this._name);\n        for (var _i = 0, _a = this.shaderProcessingContext.leftOverUniforms; _i < _a.length; _i++) {\n            var leftOverUniform = _a[_i];\n            var type = leftOverUniform.type.replace(/^(.*?)(<.*>)?$/, \"$1\");\n            var size = WebGPUShaderProcessor.UniformSizes[type];\n            this.uniformBuffer.addUniform(leftOverUniform.name, size, leftOverUniform.length);\n            this._leftOverUniformsByName[leftOverUniform.name] = leftOverUniform.type;\n        }\n        this.uniformBuffer.create();\n    };\n    /**\n     * Release all associated resources.\n     **/\n    WebGPUPipelineContext.prototype.dispose = function () {\n        if (this.uniformBuffer) {\n            this.uniformBuffer.dispose();\n        }\n    };\n    /**\n     * Sets an integer value on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param value Value to be set.\n     */\n    WebGPUPipelineContext.prototype.setInt = function (uniformName, value) {\n        if (!this.uniformBuffer || !this._leftOverUniformsByName[uniformName]) {\n            return;\n        }\n        this.uniformBuffer.updateInt(uniformName, value);\n    };\n    /**\n     * Sets an int2 value on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param x First int in int2.\n     * @param y Second int in int2.\n     */\n    WebGPUPipelineContext.prototype.setInt2 = function (uniformName, x, y) {\n        if (!this.uniformBuffer || !this._leftOverUniformsByName[uniformName]) {\n            return;\n        }\n        this.uniformBuffer.updateInt2(uniformName, x, y);\n    };\n    /**\n     * Sets an int3 value on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param x First int in int3.\n     * @param y Second int in int3.\n     * @param z Third int in int3.\n     */\n    WebGPUPipelineContext.prototype.setInt3 = function (uniformName, x, y, z) {\n        if (!this.uniformBuffer || !this._leftOverUniformsByName[uniformName]) {\n            return;\n        }\n        this.uniformBuffer.updateInt3(uniformName, x, y, z);\n    };\n    /**\n     * Sets an int4 value on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param x First int in int4.\n     * @param y Second int in int4.\n     * @param z Third int in int4.\n     * @param w Fourth int in int4.\n     */\n    WebGPUPipelineContext.prototype.setInt4 = function (uniformName, x, y, z, w) {\n        if (!this.uniformBuffer || !this._leftOverUniformsByName[uniformName]) {\n            return;\n        }\n        this.uniformBuffer.updateInt4(uniformName, x, y, z, w);\n    };\n    /**\n     * Sets an int array on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param array array to be set.\n     */\n    WebGPUPipelineContext.prototype.setIntArray = function (uniformName, array) {\n        if (!this.uniformBuffer || !this._leftOverUniformsByName[uniformName]) {\n            return;\n        }\n        this.uniformBuffer.updateIntArray(uniformName, array);\n    };\n    /**\n     * Sets an int array 2 on a uniform variable. (Array is specified as single array eg. [1,2,3,4] will result in [[1,2],[3,4]] in the shader)\n     * @param uniformName Name of the variable.\n     * @param array array to be set.\n     */\n    WebGPUPipelineContext.prototype.setIntArray2 = function (uniformName, array) {\n        this.setIntArray(uniformName, array);\n    };\n    /**\n     * Sets an int array 3 on a uniform variable. (Array is specified as single array eg. [1,2,3,4,5,6] will result in [[1,2,3],[4,5,6]] in the shader)\n     * @param uniformName Name of the variable.\n     * @param array array to be set.\n     */\n    WebGPUPipelineContext.prototype.setIntArray3 = function (uniformName, array) {\n        this.setIntArray(uniformName, array);\n    };\n    /**\n     * Sets an int array 4 on a uniform variable. (Array is specified as single array eg. [1,2,3,4,5,6,7,8] will result in [[1,2,3,4],[5,6,7,8]] in the shader)\n     * @param uniformName Name of the variable.\n     * @param array array to be set.\n     */\n    WebGPUPipelineContext.prototype.setIntArray4 = function (uniformName, array) {\n        this.setIntArray(uniformName, array);\n    };\n    /**\n     * Sets an array on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param array array to be set.\n     */\n    WebGPUPipelineContext.prototype.setArray = function (uniformName, array) {\n        if (!this.uniformBuffer || !this._leftOverUniformsByName[uniformName]) {\n            return;\n        }\n        this.uniformBuffer.updateArray(uniformName, array);\n    };\n    /**\n     * Sets an array 2 on a uniform variable. (Array is specified as single array eg. [1,2,3,4] will result in [[1,2],[3,4]] in the shader)\n     * @param uniformName Name of the variable.\n     * @param array array to be set.\n     */\n    WebGPUPipelineContext.prototype.setArray2 = function (uniformName, array) {\n        this.setArray(uniformName, array);\n    };\n    /**\n     * Sets an array 3 on a uniform variable. (Array is specified as single array eg. [1,2,3,4,5,6] will result in [[1,2,3],[4,5,6]] in the shader)\n     * @param uniformName Name of the variable.\n     * @param array array to be set.\n     * @returns this effect.\n     */\n    WebGPUPipelineContext.prototype.setArray3 = function (uniformName, array) {\n        this.setArray(uniformName, array);\n    };\n    /**\n     * Sets an array 4 on a uniform variable. (Array is specified as single array eg. [1,2,3,4,5,6,7,8] will result in [[1,2,3,4],[5,6,7,8]] in the shader)\n     * @param uniformName Name of the variable.\n     * @param array array to be set.\n     */\n    WebGPUPipelineContext.prototype.setArray4 = function (uniformName, array) {\n        this.setArray(uniformName, array);\n    };\n    /**\n     * Sets matrices on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param matrices matrices to be set.\n     */\n    WebGPUPipelineContext.prototype.setMatrices = function (uniformName, matrices) {\n        if (!this.uniformBuffer || !this._leftOverUniformsByName[uniformName]) {\n            return;\n        }\n        this.uniformBuffer.updateMatrices(uniformName, matrices);\n    };\n    /**\n     * Sets matrix on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param matrix matrix to be set.\n     */\n    WebGPUPipelineContext.prototype.setMatrix = function (uniformName, matrix) {\n        if (!this.uniformBuffer || !this._leftOverUniformsByName[uniformName]) {\n            return;\n        }\n        this.uniformBuffer.updateMatrix(uniformName, matrix);\n    };\n    /**\n     * Sets a 3x3 matrix on a uniform variable. (Specified as [1,2,3,4,5,6,7,8,9] will result in [1,2,3][4,5,6][7,8,9] matrix)\n     * @param uniformName Name of the variable.\n     * @param matrix matrix to be set.\n     */\n    WebGPUPipelineContext.prototype.setMatrix3x3 = function (uniformName, matrix) {\n        if (!this.uniformBuffer || !this._leftOverUniformsByName[uniformName]) {\n            return;\n        }\n        this.uniformBuffer.updateMatrix3x3(uniformName, matrix);\n    };\n    /**\n     * Sets a 2x2 matrix on a uniform variable. (Specified as [1,2,3,4] will result in [1,2][3,4] matrix)\n     * @param uniformName Name of the variable.\n     * @param matrix matrix to be set.\n     */\n    WebGPUPipelineContext.prototype.setMatrix2x2 = function (uniformName, matrix) {\n        if (!this.uniformBuffer || !this._leftOverUniformsByName[uniformName]) {\n            return;\n        }\n        this.uniformBuffer.updateMatrix2x2(uniformName, matrix);\n    };\n    /**\n     * Sets a float on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param value value to be set.\n     * @returns this effect.\n     */\n    WebGPUPipelineContext.prototype.setFloat = function (uniformName, value) {\n        if (!this.uniformBuffer || !this._leftOverUniformsByName[uniformName]) {\n            return;\n        }\n        this.uniformBuffer.updateFloat(uniformName, value);\n    };\n    /**\n     * Sets a Vector2 on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param vector2 vector2 to be set.\n     */\n    WebGPUPipelineContext.prototype.setVector2 = function (uniformName, vector2) {\n        this.setFloat2(uniformName, vector2.x, vector2.y);\n    };\n    /**\n     * Sets a float2 on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param x First float in float2.\n     * @param y Second float in float2.\n     */\n    WebGPUPipelineContext.prototype.setFloat2 = function (uniformName, x, y) {\n        if (!this.uniformBuffer || !this._leftOverUniformsByName[uniformName]) {\n            return;\n        }\n        this.uniformBuffer.updateFloat2(uniformName, x, y);\n    };\n    /**\n     * Sets a Vector3 on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param vector3 Value to be set.\n     */\n    WebGPUPipelineContext.prototype.setVector3 = function (uniformName, vector3) {\n        this.setFloat3(uniformName, vector3.x, vector3.y, vector3.z);\n    };\n    /**\n     * Sets a float3 on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param x First float in float3.\n     * @param y Second float in float3.\n     * @param z Third float in float3.\n     */\n    WebGPUPipelineContext.prototype.setFloat3 = function (uniformName, x, y, z) {\n        if (!this.uniformBuffer || !this._leftOverUniformsByName[uniformName]) {\n            return;\n        }\n        this.uniformBuffer.updateFloat3(uniformName, x, y, z);\n    };\n    /**\n     * Sets a Vector4 on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param vector4 Value to be set.\n     */\n    WebGPUPipelineContext.prototype.setVector4 = function (uniformName, vector4) {\n        this.setFloat4(uniformName, vector4.x, vector4.y, vector4.z, vector4.w);\n    };\n    /**\n     * Sets a Quaternion on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param quaternion Value to be set.\n     */\n    WebGPUPipelineContext.prototype.setQuaternion = function (uniformName, quaternion) {\n        this.setFloat4(uniformName, quaternion.x, quaternion.y, quaternion.z, quaternion.w);\n    };\n    /**\n     * Sets a float4 on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param x First float in float4.\n     * @param y Second float in float4.\n     * @param z Third float in float4.\n     * @param w Fourth float in float4.\n     * @returns this effect.\n     */\n    WebGPUPipelineContext.prototype.setFloat4 = function (uniformName, x, y, z, w) {\n        if (!this.uniformBuffer || !this._leftOverUniformsByName[uniformName]) {\n            return;\n        }\n        this.uniformBuffer.updateFloat4(uniformName, x, y, z, w);\n    };\n    /**\n     * Sets a Color3 on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param color3 Value to be set.\n     */\n    WebGPUPipelineContext.prototype.setColor3 = function (uniformName, color3) {\n        this.setFloat3(uniformName, color3.r, color3.g, color3.b);\n    };\n    /**\n     * Sets a Color4 on a uniform variable.\n     * @param uniformName Name of the variable.\n     * @param color3 Value to be set.\n     * @param alpha Alpha value to be set.\n     */\n    WebGPUPipelineContext.prototype.setColor4 = function (uniformName, color3, alpha) {\n        this.setFloat4(uniformName, color3.r, color3.g, color3.b, alpha);\n    };\n    /**\n     * Sets a Color4 on a uniform variable\n     * @param uniformName defines the name of the variable\n     * @param color4 defines the value to be set\n     */\n    WebGPUPipelineContext.prototype.setDirectColor4 = function (uniformName, color4) {\n        this.setFloat4(uniformName, color4.r, color4.g, color4.b, color4.a);\n    };\n    WebGPUPipelineContext.prototype._getVertexShaderCode = function () {\n        var _a;\n        return (_a = this.sources) === null || _a === void 0 ? void 0 : _a.vertex;\n    };\n    WebGPUPipelineContext.prototype._getFragmentShaderCode = function () {\n        var _a;\n        return (_a = this.sources) === null || _a === void 0 ? void 0 : _a.fragment;\n    };\n    return WebGPUPipelineContext;\n}());\nexport { WebGPUPipelineContext };\n//# sourceMappingURL=webgpuPipelineContext.js.map","import { __awaiter, __generator } from \"tslib\";\nimport * as WebGPUConstants from \"./webgpuConstants.js\";\n/** @hidden */\nvar WebGPUQuerySet = /** @class */ (function () {\n    function WebGPUQuerySet(count, type, device, bufferManager, canUseMultipleBuffers) {\n        if (canUseMultipleBuffers === void 0) { canUseMultipleBuffers = true; }\n        this._dstBuffers = [];\n        this._device = device;\n        this._bufferManager = bufferManager;\n        this._count = count;\n        this._canUseMultipleBuffers = canUseMultipleBuffers;\n        this._querySet = device.createQuerySet({\n            type: type,\n            count: count,\n        });\n        this._queryBuffer = bufferManager.createRawBuffer(8 * count, WebGPUConstants.BufferUsage.QueryResolve | WebGPUConstants.BufferUsage.CopySrc);\n        if (!canUseMultipleBuffers) {\n            this._dstBuffers.push(this._bufferManager.createRawBuffer(8 * this._count, WebGPUConstants.BufferUsage.MapRead | WebGPUConstants.BufferUsage.CopyDst));\n        }\n    }\n    Object.defineProperty(WebGPUQuerySet.prototype, \"querySet\", {\n        get: function () {\n            return this._querySet;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebGPUQuerySet.prototype._getBuffer = function (firstQuery, queryCount) {\n        if (!this._canUseMultipleBuffers && this._dstBuffers.length === 0) {\n            return null;\n        }\n        var encoderResult = this._device.createCommandEncoder();\n        var buffer;\n        if (this._dstBuffers.length === 0) {\n            buffer = this._bufferManager.createRawBuffer(8 * this._count, WebGPUConstants.BufferUsage.MapRead | WebGPUConstants.BufferUsage.CopyDst);\n        }\n        else {\n            buffer = this._dstBuffers[this._dstBuffers.length - 1];\n            this._dstBuffers.length--;\n        }\n        encoderResult.resolveQuerySet(this._querySet, firstQuery, queryCount, this._queryBuffer, 0);\n        encoderResult.copyBufferToBuffer(this._queryBuffer, 0, buffer, 0, 8 * queryCount);\n        this._device.queue.submit([encoderResult.finish()]);\n        return buffer;\n    };\n    WebGPUQuerySet.prototype.readValues = function (firstQuery, queryCount) {\n        if (firstQuery === void 0) { firstQuery = 0; }\n        if (queryCount === void 0) { queryCount = 1; }\n        return __awaiter(this, void 0, void 0, function () {\n            var buffer, arrayBuf;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        buffer = this._getBuffer(firstQuery, queryCount);\n                        if (buffer === null) {\n                            return [2 /*return*/, null];\n                        }\n                        return [4 /*yield*/, buffer.mapAsync(WebGPUConstants.MapMode.Read)];\n                    case 1:\n                        _a.sent();\n                        arrayBuf = new BigUint64Array(buffer.getMappedRange()).slice();\n                        buffer.unmap();\n                        this._dstBuffers[this._dstBuffers.length] = buffer;\n                        return [2 /*return*/, arrayBuf];\n                }\n            });\n        });\n    };\n    WebGPUQuerySet.prototype.readValue = function (firstQuery) {\n        if (firstQuery === void 0) { firstQuery = 0; }\n        return __awaiter(this, void 0, void 0, function () {\n            var buffer, arrayBuf, value;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        buffer = this._getBuffer(firstQuery, 1);\n                        if (buffer === null) {\n                            return [2 /*return*/, null];\n                        }\n                        return [4 /*yield*/, buffer.mapAsync(WebGPUConstants.MapMode.Read)];\n                    case 1:\n                        _a.sent();\n                        arrayBuf = new BigUint64Array(buffer.getMappedRange());\n                        value = Number(arrayBuf[0]);\n                        buffer.unmap();\n                        this._dstBuffers[this._dstBuffers.length] = buffer;\n                        return [2 /*return*/, value];\n                }\n            });\n        });\n    };\n    WebGPUQuerySet.prototype.readTwoValuesAndSubtract = function (firstQuery) {\n        if (firstQuery === void 0) { firstQuery = 0; }\n        return __awaiter(this, void 0, void 0, function () {\n            var buffer, arrayBuf, value;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        buffer = this._getBuffer(firstQuery, 2);\n                        if (buffer === null) {\n                            return [2 /*return*/, null];\n                        }\n                        return [4 /*yield*/, buffer.mapAsync(WebGPUConstants.MapMode.Read)];\n                    case 1:\n                        _a.sent();\n                        arrayBuf = new BigUint64Array(buffer.getMappedRange());\n                        value = Number(arrayBuf[1] - arrayBuf[0]);\n                        buffer.unmap();\n                        this._dstBuffers[this._dstBuffers.length] = buffer;\n                        return [2 /*return*/, value];\n                }\n            });\n        });\n    };\n    WebGPUQuerySet.prototype.dispose = function () {\n        this._querySet.destroy();\n        this._bufferManager.releaseBuffer(this._queryBuffer);\n        for (var i = 0; i < this._dstBuffers.length; ++i) {\n            this._bufferManager.releaseBuffer(this._dstBuffers[i]);\n        }\n    };\n    return WebGPUQuerySet;\n}());\nexport { WebGPUQuerySet };\n//# sourceMappingURL=webgpuQuerySet.js.map","/** @hidden */\nvar WebGPURenderPassWrapper = /** @class */ (function () {\n    function WebGPURenderPassWrapper() {\n        this.colorAttachmentGPUTextures = [];\n        this.reset();\n    }\n    WebGPURenderPassWrapper.prototype.reset = function (fullReset) {\n        if (fullReset === void 0) { fullReset = false; }\n        this.renderPass = null;\n        if (fullReset) {\n            this.renderPassDescriptor = null;\n            this.colorAttachmentViewDescriptor = null;\n            this.depthAttachmentViewDescriptor = null;\n            this.colorAttachmentGPUTextures = [];\n            this.depthTextureFormat = undefined;\n        }\n    };\n    return WebGPURenderPassWrapper;\n}());\nexport { WebGPURenderPassWrapper };\n//# sourceMappingURL=webgpuRenderPassWrapper.js.map","var _maxGroups = 4;\nvar _maxBindingsPerGroup = 1 << 16;\n// all types not listed are assumed to consume 1 location\nvar _typeToLocationSize = {\n    // GLSL types\n    mat2: 2,\n    mat3: 3,\n    mat4: 4,\n    // WGSL types\n    mat2x2: 2,\n    mat3x3: 3,\n    mat4x4: 4,\n};\n/**\n * @hidden\n */\nvar WebGPUShaderProcessingContext = /** @class */ (function () {\n    function WebGPUShaderProcessingContext(shaderLanguage) {\n        this.shaderLanguage = shaderLanguage;\n        this._attributeNextLocation = 0;\n        this._varyingNextLocation = 0;\n        this.freeGroupIndex = 0;\n        this.freeBindingIndex = 0;\n        this.availableVaryings = {};\n        this.availableAttributes = {};\n        this.availableBuffers = {};\n        this.availableTextures = {};\n        this.availableSamplers = {};\n        this.orderedAttributes = [];\n        this.bindGroupLayoutEntries = [];\n        this.bindGroupLayoutEntryInfo = [];\n        this.bindGroupEntries = [];\n        this.bufferNames = [];\n        this.textureNames = [];\n        this.samplerNames = [];\n        this.leftOverUniforms = [];\n        this._findStartingGroupBinding();\n    }\n    Object.defineProperty(WebGPUShaderProcessingContext, \"KnownUBOs\", {\n        get: function () {\n            return WebGPUShaderProcessingContext._SimplifiedKnownBindings ? WebGPUShaderProcessingContext._SimplifiedKnownUBOs : WebGPUShaderProcessingContext._KnownUBOs;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebGPUShaderProcessingContext.prototype._findStartingGroupBinding = function () {\n        var knownUBOs = WebGPUShaderProcessingContext.KnownUBOs;\n        var groups = [];\n        for (var name_1 in knownUBOs) {\n            var binding = knownUBOs[name_1].binding;\n            if (binding.groupIndex === -1) {\n                continue;\n            }\n            if (groups[binding.groupIndex] === undefined) {\n                groups[binding.groupIndex] = binding.bindingIndex;\n            }\n            else {\n                groups[binding.groupIndex] = Math.max(groups[binding.groupIndex], binding.bindingIndex);\n            }\n        }\n        this.freeGroupIndex = groups.length - 1;\n        if (this.freeGroupIndex === 0) {\n            this.freeGroupIndex++;\n            this.freeBindingIndex = 0;\n        }\n        else {\n            this.freeBindingIndex = groups[groups.length - 1] + 1;\n        }\n    };\n    WebGPUShaderProcessingContext.prototype.getAttributeNextLocation = function (dataType, arrayLength) {\n        var _a;\n        if (arrayLength === void 0) { arrayLength = 0; }\n        var index = this._attributeNextLocation;\n        this._attributeNextLocation += ((_a = _typeToLocationSize[dataType]) !== null && _a !== void 0 ? _a : 1) * (arrayLength || 1);\n        return index;\n    };\n    WebGPUShaderProcessingContext.prototype.getVaryingNextLocation = function (dataType, arrayLength) {\n        var _a;\n        if (arrayLength === void 0) { arrayLength = 0; }\n        var index = this._varyingNextLocation;\n        this._varyingNextLocation += ((_a = _typeToLocationSize[dataType]) !== null && _a !== void 0 ? _a : 1) * (arrayLength || 1);\n        return index;\n    };\n    WebGPUShaderProcessingContext.prototype.getNextFreeUBOBinding = function () {\n        return this._getNextFreeBinding(1);\n    };\n    WebGPUShaderProcessingContext.prototype._getNextFreeBinding = function (bindingCount) {\n        if (this.freeBindingIndex > _maxBindingsPerGroup - bindingCount) {\n            this.freeGroupIndex++;\n            this.freeBindingIndex = 0;\n        }\n        if (this.freeGroupIndex === _maxGroups) {\n            throw \"Too many textures or UBOs have been declared and it is not supported in WebGPU.\";\n        }\n        var returnValue = {\n            groupIndex: this.freeGroupIndex,\n            bindingIndex: this.freeBindingIndex,\n        };\n        this.freeBindingIndex += bindingCount;\n        return returnValue;\n    };\n    /** @hidden */\n    WebGPUShaderProcessingContext._SimplifiedKnownBindings = true; // if true, use only group=0,binding=0 as a known group/binding for the Scene ubo and use group=1,binding=X for all other bindings\n    // if false, see _KnownUBOs for the known groups/bindings used\n    WebGPUShaderProcessingContext._SimplifiedKnownUBOs = {\n        Scene: { binding: { groupIndex: 0, bindingIndex: 0 } },\n        Light0: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light1: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light2: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light3: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light4: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light5: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light6: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light7: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light8: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light9: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light10: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light11: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light12: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light13: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light14: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light15: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light16: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light17: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light18: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light19: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light20: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light21: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light22: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light23: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light24: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light25: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light26: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light27: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light28: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light29: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light30: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Light31: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Material: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Mesh: { binding: { groupIndex: -1, bindingIndex: -1 } },\n        Internals: { binding: { groupIndex: -1, bindingIndex: -1 } },\n    };\n    WebGPUShaderProcessingContext._KnownUBOs = {\n        Scene: { binding: { groupIndex: 0, bindingIndex: 0 } },\n        Light0: { binding: { groupIndex: 1, bindingIndex: 0 } },\n        Light1: { binding: { groupIndex: 1, bindingIndex: 1 } },\n        Light2: { binding: { groupIndex: 1, bindingIndex: 2 } },\n        Light3: { binding: { groupIndex: 1, bindingIndex: 3 } },\n        Light4: { binding: { groupIndex: 1, bindingIndex: 4 } },\n        Light5: { binding: { groupIndex: 1, bindingIndex: 5 } },\n        Light6: { binding: { groupIndex: 1, bindingIndex: 6 } },\n        Light7: { binding: { groupIndex: 1, bindingIndex: 7 } },\n        Light8: { binding: { groupIndex: 1, bindingIndex: 8 } },\n        Light9: { binding: { groupIndex: 1, bindingIndex: 9 } },\n        Light10: { binding: { groupIndex: 1, bindingIndex: 10 } },\n        Light11: { binding: { groupIndex: 1, bindingIndex: 11 } },\n        Light12: { binding: { groupIndex: 1, bindingIndex: 12 } },\n        Light13: { binding: { groupIndex: 1, bindingIndex: 13 } },\n        Light14: { binding: { groupIndex: 1, bindingIndex: 14 } },\n        Light15: { binding: { groupIndex: 1, bindingIndex: 15 } },\n        Light16: { binding: { groupIndex: 1, bindingIndex: 16 } },\n        Light17: { binding: { groupIndex: 1, bindingIndex: 17 } },\n        Light18: { binding: { groupIndex: 1, bindingIndex: 18 } },\n        Light19: { binding: { groupIndex: 1, bindingIndex: 19 } },\n        Light20: { binding: { groupIndex: 1, bindingIndex: 20 } },\n        Light21: { binding: { groupIndex: 1, bindingIndex: 21 } },\n        Light22: { binding: { groupIndex: 1, bindingIndex: 22 } },\n        Light23: { binding: { groupIndex: 1, bindingIndex: 23 } },\n        Light24: { binding: { groupIndex: 1, bindingIndex: 24 } },\n        Light25: { binding: { groupIndex: 1, bindingIndex: 25 } },\n        Light26: { binding: { groupIndex: 1, bindingIndex: 26 } },\n        Light27: { binding: { groupIndex: 1, bindingIndex: 27 } },\n        Light28: { binding: { groupIndex: 1, bindingIndex: 28 } },\n        Light29: { binding: { groupIndex: 1, bindingIndex: 29 } },\n        Light30: { binding: { groupIndex: 1, bindingIndex: 30 } },\n        Light31: { binding: { groupIndex: 1, bindingIndex: 31 } },\n        Material: { binding: { groupIndex: 2, bindingIndex: 0 } },\n        Mesh: { binding: { groupIndex: 2, bindingIndex: 1 } },\n        Internals: { binding: { groupIndex: 2, bindingIndex: 2 } },\n    };\n    return WebGPUShaderProcessingContext;\n}());\nexport { WebGPUShaderProcessingContext };\n//# sourceMappingURL=webgpuShaderProcessingContext.js.map","import { ShaderLanguage } from \"../../Materials/shaderLanguage.js\";\nimport * as WebGPUConstants from \"./webgpuConstants.js\";\n/** @hidden */\nvar WebGPUShaderProcessor = /** @class */ (function () {\n    function WebGPUShaderProcessor() {\n        this.shaderLanguage = ShaderLanguage.GLSL;\n    }\n    WebGPUShaderProcessor.prototype._addUniformToLeftOverUBO = function (name, uniformType, preProcessors) {\n        var _a;\n        var length = 0;\n        _a = this._getArraySize(name, uniformType, preProcessors), name = _a[0], uniformType = _a[1], length = _a[2];\n        for (var i = 0; i < this._webgpuProcessingContext.leftOverUniforms.length; i++) {\n            if (this._webgpuProcessingContext.leftOverUniforms[i].name === name) {\n                return;\n            }\n        }\n        this._webgpuProcessingContext.leftOverUniforms.push({\n            name: name,\n            type: uniformType,\n            length: length,\n        });\n    };\n    WebGPUShaderProcessor.prototype._buildLeftOverUBO = function () {\n        if (!this._webgpuProcessingContext.leftOverUniforms.length) {\n            return \"\";\n        }\n        var name = WebGPUShaderProcessor.LeftOvertUBOName;\n        var availableUBO = this._webgpuProcessingContext.availableBuffers[name];\n        if (!availableUBO) {\n            availableUBO = {\n                binding: this._webgpuProcessingContext.getNextFreeUBOBinding(),\n            };\n            this._webgpuProcessingContext.availableBuffers[name] = availableUBO;\n            this._addBufferBindingDescription(name, availableUBO, WebGPUConstants.BufferBindingType.Uniform, true);\n            this._addBufferBindingDescription(name, availableUBO, WebGPUConstants.BufferBindingType.Uniform, false);\n        }\n        return this._generateLeftOverUBOCode(name, availableUBO);\n    };\n    WebGPUShaderProcessor.prototype._collectBindingNames = function () {\n        // collect all the binding names for faster processing in WebGPUCacheBindGroup\n        for (var i = 0; i < this._webgpuProcessingContext.bindGroupLayoutEntries.length; i++) {\n            var setDefinition = this._webgpuProcessingContext.bindGroupLayoutEntries[i];\n            if (setDefinition === undefined) {\n                this._webgpuProcessingContext.bindGroupLayoutEntries[i] = [];\n                continue;\n            }\n            for (var j = 0; j < setDefinition.length; j++) {\n                var entry = this._webgpuProcessingContext.bindGroupLayoutEntries[i][j];\n                var name_1 = this._webgpuProcessingContext.bindGroupLayoutEntryInfo[i][entry.binding].name;\n                var nameInArrayOfTexture = this._webgpuProcessingContext.bindGroupLayoutEntryInfo[i][entry.binding].nameInArrayOfTexture;\n                if (entry) {\n                    if (entry.texture || entry.externalTexture || entry.storageTexture) {\n                        this._webgpuProcessingContext.textureNames.push(nameInArrayOfTexture);\n                    }\n                    else if (entry.sampler) {\n                        this._webgpuProcessingContext.samplerNames.push(name_1);\n                    }\n                    else if (entry.buffer) {\n                        this._webgpuProcessingContext.bufferNames.push(name_1);\n                    }\n                }\n            }\n        }\n    };\n    WebGPUShaderProcessor.prototype._preCreateBindGroupEntries = function () {\n        var bindGroupEntries = this._webgpuProcessingContext.bindGroupEntries;\n        for (var i = 0; i < this._webgpuProcessingContext.bindGroupLayoutEntries.length; i++) {\n            var setDefinition = this._webgpuProcessingContext.bindGroupLayoutEntries[i];\n            var entries = [];\n            for (var j = 0; j < setDefinition.length; j++) {\n                var entry = this._webgpuProcessingContext.bindGroupLayoutEntries[i][j];\n                if (entry.sampler || entry.texture || entry.storageTexture || entry.externalTexture) {\n                    entries.push({\n                        binding: entry.binding,\n                        resource: undefined,\n                    });\n                }\n                else if (entry.buffer) {\n                    entries.push({\n                        binding: entry.binding,\n                        resource: {\n                            buffer: undefined,\n                            offset: 0,\n                            size: 0,\n                        },\n                    });\n                }\n            }\n            bindGroupEntries[i] = entries;\n        }\n    };\n    WebGPUShaderProcessor.prototype._addTextureBindingDescription = function (name, textureInfo, textureIndex, dimension, format, isVertex) {\n        // eslint-disable-next-line prefer-const\n        var _a = textureInfo.textures[textureIndex], groupIndex = _a.groupIndex, bindingIndex = _a.bindingIndex;\n        if (!this._webgpuProcessingContext.bindGroupLayoutEntries[groupIndex]) {\n            this._webgpuProcessingContext.bindGroupLayoutEntries[groupIndex] = [];\n            this._webgpuProcessingContext.bindGroupLayoutEntryInfo[groupIndex] = [];\n        }\n        if (!this._webgpuProcessingContext.bindGroupLayoutEntryInfo[groupIndex][bindingIndex]) {\n            var len = void 0;\n            if (dimension === null) {\n                len = this._webgpuProcessingContext.bindGroupLayoutEntries[groupIndex].push({\n                    binding: bindingIndex,\n                    visibility: 0,\n                    externalTexture: {},\n                });\n            }\n            else if (format) {\n                len = this._webgpuProcessingContext.bindGroupLayoutEntries[groupIndex].push({\n                    binding: bindingIndex,\n                    visibility: 0,\n                    storageTexture: {\n                        access: WebGPUConstants.StorageTextureAccess.WriteOnly,\n                        format: format,\n                        viewDimension: dimension,\n                    },\n                });\n            }\n            else {\n                len = this._webgpuProcessingContext.bindGroupLayoutEntries[groupIndex].push({\n                    binding: bindingIndex,\n                    visibility: 0,\n                    texture: {\n                        sampleType: textureInfo.sampleType,\n                        viewDimension: dimension,\n                        multisampled: false,\n                    },\n                });\n            }\n            var textureName = textureInfo.isTextureArray ? name + textureIndex : name;\n            this._webgpuProcessingContext.bindGroupLayoutEntryInfo[groupIndex][bindingIndex] = { name: name, index: len - 1, nameInArrayOfTexture: textureName };\n        }\n        bindingIndex = this._webgpuProcessingContext.bindGroupLayoutEntryInfo[groupIndex][bindingIndex].index;\n        if (isVertex) {\n            this._webgpuProcessingContext.bindGroupLayoutEntries[groupIndex][bindingIndex].visibility |= WebGPUConstants.ShaderStage.Vertex;\n        }\n        else {\n            this._webgpuProcessingContext.bindGroupLayoutEntries[groupIndex][bindingIndex].visibility |= WebGPUConstants.ShaderStage.Fragment;\n        }\n    };\n    WebGPUShaderProcessor.prototype._addSamplerBindingDescription = function (name, samplerInfo, isVertex) {\n        // eslint-disable-next-line prefer-const\n        var _a = samplerInfo.binding, groupIndex = _a.groupIndex, bindingIndex = _a.bindingIndex;\n        if (!this._webgpuProcessingContext.bindGroupLayoutEntries[groupIndex]) {\n            this._webgpuProcessingContext.bindGroupLayoutEntries[groupIndex] = [];\n            this._webgpuProcessingContext.bindGroupLayoutEntryInfo[groupIndex] = [];\n        }\n        if (!this._webgpuProcessingContext.bindGroupLayoutEntryInfo[groupIndex][bindingIndex]) {\n            var len = this._webgpuProcessingContext.bindGroupLayoutEntries[groupIndex].push({\n                binding: bindingIndex,\n                visibility: 0,\n                sampler: {\n                    type: samplerInfo.type,\n                },\n            });\n            this._webgpuProcessingContext.bindGroupLayoutEntryInfo[groupIndex][bindingIndex] = { name: name, index: len - 1 };\n        }\n        bindingIndex = this._webgpuProcessingContext.bindGroupLayoutEntryInfo[groupIndex][bindingIndex].index;\n        if (isVertex) {\n            this._webgpuProcessingContext.bindGroupLayoutEntries[groupIndex][bindingIndex].visibility |= WebGPUConstants.ShaderStage.Vertex;\n        }\n        else {\n            this._webgpuProcessingContext.bindGroupLayoutEntries[groupIndex][bindingIndex].visibility |= WebGPUConstants.ShaderStage.Fragment;\n        }\n    };\n    WebGPUShaderProcessor.prototype._addBufferBindingDescription = function (name, uniformBufferInfo, bufferType, isVertex) {\n        // eslint-disable-next-line prefer-const\n        var _a = uniformBufferInfo.binding, groupIndex = _a.groupIndex, bindingIndex = _a.bindingIndex;\n        if (!this._webgpuProcessingContext.bindGroupLayoutEntries[groupIndex]) {\n            this._webgpuProcessingContext.bindGroupLayoutEntries[groupIndex] = [];\n            this._webgpuProcessingContext.bindGroupLayoutEntryInfo[groupIndex] = [];\n        }\n        if (!this._webgpuProcessingContext.bindGroupLayoutEntryInfo[groupIndex][bindingIndex]) {\n            var len = this._webgpuProcessingContext.bindGroupLayoutEntries[groupIndex].push({\n                binding: bindingIndex,\n                visibility: 0,\n                buffer: {\n                    type: bufferType,\n                },\n            });\n            this._webgpuProcessingContext.bindGroupLayoutEntryInfo[groupIndex][bindingIndex] = { name: name, index: len - 1 };\n        }\n        bindingIndex = this._webgpuProcessingContext.bindGroupLayoutEntryInfo[groupIndex][bindingIndex].index;\n        if (isVertex) {\n            this._webgpuProcessingContext.bindGroupLayoutEntries[groupIndex][bindingIndex].visibility |= WebGPUConstants.ShaderStage.Vertex;\n        }\n        else {\n            this._webgpuProcessingContext.bindGroupLayoutEntries[groupIndex][bindingIndex].visibility |= WebGPUConstants.ShaderStage.Fragment;\n        }\n    };\n    WebGPUShaderProcessor.prototype._injectStartingAndEndingCode = function (code, mainFuncDecl, startingCode, endingCode) {\n        if (startingCode) {\n            var idx = code.indexOf(mainFuncDecl);\n            if (idx >= 0) {\n                // eslint-disable-next-line no-empty\n                while (idx++ < code.length && code.charAt(idx) != \"{\") { }\n                if (idx < code.length) {\n                    // eslint-disable-next-line no-empty\n                    while (idx++ < code.length && code.charAt(idx) != \"\\n\") { }\n                    if (idx < code.length) {\n                        var part1 = code.substring(0, idx + 1);\n                        var part2 = code.substring(idx + 1);\n                        code = part1 + startingCode + part2;\n                    }\n                }\n            }\n        }\n        if (endingCode) {\n            var lastClosingCurly = code.lastIndexOf(\"}\");\n            code = code.substring(0, lastClosingCurly);\n            code += endingCode + \"\\n}\";\n        }\n        return code;\n    };\n    WebGPUShaderProcessor.AutoSamplerSuffix = \"Sampler\";\n    WebGPUShaderProcessor.LeftOvertUBOName = \"LeftOver\";\n    WebGPUShaderProcessor.InternalsUBOName = \"Internals\";\n    WebGPUShaderProcessor.UniformSizes = {\n        // GLSL types\n        bool: 1,\n        int: 1,\n        float: 1,\n        vec2: 2,\n        ivec2: 2,\n        vec3: 3,\n        ivec3: 3,\n        vec4: 4,\n        ivec4: 4,\n        mat2: 4,\n        mat3: 12,\n        mat4: 16,\n        // WGSL types\n        i32: 1,\n        u32: 1,\n        f32: 1,\n        mat2x2: 4,\n        mat3x3: 12,\n        mat4x4: 16,\n    };\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    WebGPUShaderProcessor._SamplerFunctionByWebGLSamplerType = {\n        sampler2D: \"sampler2D\",\n        sampler2DArray: \"sampler2DArray\",\n        sampler2DShadow: \"sampler2DShadow\",\n        sampler2DArrayShadow: \"sampler2DArrayShadow\",\n        samplerCube: \"samplerCube\",\n        sampler3D: \"sampler3D\",\n    };\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    WebGPUShaderProcessor._TextureTypeByWebGLSamplerType = {\n        sampler2D: \"texture2D\",\n        sampler2DArray: \"texture2DArray\",\n        sampler2DShadow: \"texture2D\",\n        sampler2DArrayShadow: \"texture2DArray\",\n        samplerCube: \"textureCube\",\n        samplerCubeArray: \"textureCubeArray\",\n        sampler3D: \"texture3D\",\n    };\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    WebGPUShaderProcessor._GpuTextureViewDimensionByWebGPUTextureType = {\n        textureCube: WebGPUConstants.TextureViewDimension.Cube,\n        textureCubeArray: WebGPUConstants.TextureViewDimension.CubeArray,\n        texture2D: WebGPUConstants.TextureViewDimension.E2d,\n        texture2DArray: WebGPUConstants.TextureViewDimension.E2dArray,\n        texture3D: WebGPUConstants.TextureViewDimension.E3d,\n    };\n    // if the webgl sampler type is not listed in this array, \"sampler\" is taken by default\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    WebGPUShaderProcessor._SamplerTypeByWebGLSamplerType = {\n        sampler2DShadow: \"samplerShadow\",\n        sampler2DArrayShadow: \"samplerShadow\",\n    };\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    WebGPUShaderProcessor._IsComparisonSamplerByWebGPUSamplerType = {\n        samplerShadow: true,\n        samplerArrayShadow: true,\n        sampler: false,\n    };\n    return WebGPUShaderProcessor;\n}());\nexport { WebGPUShaderProcessor };\n//# sourceMappingURL=webgpuShaderProcessor.js.map","import { __extends } from \"tslib\";\nimport { WebGPUShaderProcessingContext } from \"./webgpuShaderProcessingContext.js\";\nimport * as WebGPUConstants from \"./webgpuConstants.js\";\nimport { Logger } from \"../../Misc/logger.js\";\nimport { WebGPUShaderProcessor } from \"./webgpuShaderProcessor.js\";\nimport { ShaderLanguage } from \"../../Materials/shaderLanguage.js\";\n/** @hidden */\nvar WebGPUShaderProcessorGLSL = /** @class */ (function (_super) {\n    __extends(WebGPUShaderProcessorGLSL, _super);\n    function WebGPUShaderProcessorGLSL() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._missingVaryings = [];\n        _this._textureArrayProcessing = [];\n        _this.shaderLanguage = ShaderLanguage.GLSL;\n        return _this;\n    }\n    WebGPUShaderProcessorGLSL.prototype._getArraySize = function (name, type, preProcessors) {\n        var length = 0;\n        var startArray = name.indexOf(\"[\");\n        var endArray = name.indexOf(\"]\");\n        if (startArray > 0 && endArray > 0) {\n            var lengthInString = name.substring(startArray + 1, endArray);\n            length = +lengthInString;\n            if (isNaN(length)) {\n                length = +preProcessors[lengthInString.trim()];\n            }\n            name = name.substr(0, startArray);\n        }\n        return [name, type, length];\n    };\n    WebGPUShaderProcessorGLSL.prototype.initializeShaders = function (processingContext) {\n        this._webgpuProcessingContext = processingContext;\n        this._missingVaryings.length = 0;\n        this._textureArrayProcessing.length = 0;\n    };\n    WebGPUShaderProcessorGLSL.prototype.preProcessShaderCode = function (code, isFragment) {\n        var ubDeclaration = \"uniform \".concat(WebGPUShaderProcessor.InternalsUBOName, \" {\\nfloat yFactor__;\\nfloat textureOutputHeight__;\\n};\\n\");\n        if (isFragment) {\n            return ubDeclaration + \"##INJECTCODE##\\n\" + code;\n        }\n        return ubDeclaration + code;\n    };\n    WebGPUShaderProcessorGLSL.prototype.varyingProcessor = function (varying, isFragment, preProcessors) {\n        this._preProcessors = preProcessors;\n        var varyingRegex = /\\s*varying\\s+(?:(?:highp)?|(?:lowp)?)\\s*(\\S+)\\s+(\\S+)\\s*;/gm;\n        var match = varyingRegex.exec(varying);\n        if (match != null) {\n            var varyingType = match[1];\n            var name_1 = match[2];\n            var location_1;\n            if (isFragment) {\n                location_1 = this._webgpuProcessingContext.availableVaryings[name_1];\n                this._missingVaryings[location_1] = \"\";\n                if (location_1 === undefined) {\n                    Logger.Warn(\"Invalid fragment shader: The varying named \\\"\".concat(name_1, \"\\\" is not declared in the vertex shader! This declaration will be ignored.\"));\n                }\n            }\n            else {\n                location_1 = this._webgpuProcessingContext.getVaryingNextLocation(varyingType, this._getArraySize(name_1, varyingType, preProcessors)[2]);\n                this._webgpuProcessingContext.availableVaryings[name_1] = location_1;\n                this._missingVaryings[location_1] = \"layout(location = \".concat(location_1, \") in \").concat(varyingType, \" \").concat(name_1, \";\");\n            }\n            varying = varying.replace(match[0], location_1 === undefined ? \"\" : \"layout(location = \".concat(location_1, \") \").concat(isFragment ? \"in\" : \"out\", \" \").concat(varyingType, \" \").concat(name_1, \";\"));\n        }\n        return varying;\n    };\n    WebGPUShaderProcessorGLSL.prototype.attributeProcessor = function (attribute, preProcessors) {\n        this._preProcessors = preProcessors;\n        var attribRegex = /\\s*attribute\\s+(\\S+)\\s+(\\S+)\\s*;/gm;\n        var match = attribRegex.exec(attribute);\n        if (match != null) {\n            var attributeType = match[1];\n            var name_2 = match[2];\n            var location_2 = this._webgpuProcessingContext.getAttributeNextLocation(attributeType, this._getArraySize(name_2, attributeType, preProcessors)[2]);\n            this._webgpuProcessingContext.availableAttributes[name_2] = location_2;\n            this._webgpuProcessingContext.orderedAttributes[location_2] = name_2;\n            attribute = attribute.replace(match[0], \"layout(location = \".concat(location_2, \") in \").concat(attributeType, \" \").concat(name_2, \";\"));\n        }\n        return attribute;\n    };\n    WebGPUShaderProcessorGLSL.prototype.uniformProcessor = function (uniform, isFragment, preProcessors) {\n        var _a;\n        var _b;\n        this._preProcessors = preProcessors;\n        var uniformRegex = /\\s*uniform\\s+(?:(?:highp)?|(?:lowp)?)\\s*(\\S+)\\s+(\\S+)\\s*;/gm;\n        var match = uniformRegex.exec(uniform);\n        if (match != null) {\n            var uniformType = match[1];\n            var name_3 = match[2];\n            if (uniformType.indexOf(\"sampler\") === 0 || uniformType.indexOf(\"sampler\") === 1) {\n                var arraySize = 0; // 0 means the texture is not declared as an array\n                _a = this._getArraySize(name_3, uniformType, preProcessors), name_3 = _a[0], uniformType = _a[1], arraySize = _a[2];\n                var textureInfo = this._webgpuProcessingContext.availableTextures[name_3];\n                if (!textureInfo) {\n                    textureInfo = {\n                        autoBindSampler: true,\n                        isTextureArray: arraySize > 0,\n                        isStorageTexture: false,\n                        textures: [],\n                        sampleType: WebGPUConstants.TextureSampleType.Float,\n                    };\n                    for (var i = 0; i < (arraySize || 1); ++i) {\n                        textureInfo.textures.push(this._webgpuProcessingContext.getNextFreeUBOBinding());\n                    }\n                }\n                var samplerType = (_b = WebGPUShaderProcessor._SamplerTypeByWebGLSamplerType[uniformType]) !== null && _b !== void 0 ? _b : \"sampler\";\n                var isComparisonSampler = !!WebGPUShaderProcessor._IsComparisonSamplerByWebGPUSamplerType[samplerType];\n                var samplerBindingType = isComparisonSampler ? WebGPUConstants.SamplerBindingType.Comparison : WebGPUConstants.SamplerBindingType.Filtering;\n                var samplerName = name_3 + WebGPUShaderProcessor.AutoSamplerSuffix;\n                var samplerInfo = this._webgpuProcessingContext.availableSamplers[samplerName];\n                if (!samplerInfo) {\n                    samplerInfo = {\n                        binding: this._webgpuProcessingContext.getNextFreeUBOBinding(),\n                        type: samplerBindingType,\n                    };\n                }\n                var componentType = uniformType.charAt(0) === \"u\" ? \"u\" : uniformType.charAt(0) === \"i\" ? \"i\" : \"\";\n                if (componentType) {\n                    uniformType = uniformType.substr(1);\n                }\n                var sampleType = isComparisonSampler\n                    ? WebGPUConstants.TextureSampleType.Depth\n                    : componentType === \"u\"\n                        ? WebGPUConstants.TextureSampleType.Uint\n                        : componentType === \"i\"\n                            ? WebGPUConstants.TextureSampleType.Sint\n                            : WebGPUConstants.TextureSampleType.Float;\n                textureInfo.sampleType = sampleType;\n                var isTextureArray = arraySize > 0;\n                var samplerGroupIndex = samplerInfo.binding.groupIndex;\n                var samplerBindingIndex = samplerInfo.binding.bindingIndex;\n                var samplerFunction = WebGPUShaderProcessor._SamplerFunctionByWebGLSamplerType[uniformType];\n                var textureType = WebGPUShaderProcessor._TextureTypeByWebGLSamplerType[uniformType];\n                var textureDimension = WebGPUShaderProcessor._GpuTextureViewDimensionByWebGPUTextureType[textureType];\n                // Manage textures and samplers.\n                if (!isTextureArray) {\n                    arraySize = 1;\n                    uniform = \"layout(set = \".concat(samplerGroupIndex, \", binding = \").concat(samplerBindingIndex, \") uniform \").concat(componentType).concat(samplerType, \" \").concat(samplerName, \";\\n                        layout(set = \").concat(textureInfo.textures[0].groupIndex, \", binding = \").concat(textureInfo.textures[0].bindingIndex, \") uniform \").concat(textureType, \" \").concat(name_3, \"Texture;\\n                        #define \").concat(name_3, \" \").concat(componentType).concat(samplerFunction, \"(\").concat(name_3, \"Texture, \").concat(samplerName, \")\");\n                }\n                else {\n                    var layouts = [];\n                    layouts.push(\"layout(set = \".concat(samplerGroupIndex, \", binding = \").concat(samplerBindingIndex, \") uniform \").concat(componentType).concat(samplerType, \" \").concat(samplerName, \";\"));\n                    uniform = \"\\r\\n\";\n                    for (var i = 0; i < arraySize; ++i) {\n                        var textureSetIndex = textureInfo.textures[i].groupIndex;\n                        var textureBindingIndex = textureInfo.textures[i].bindingIndex;\n                        layouts.push(\"layout(set = \".concat(textureSetIndex, \", binding = \").concat(textureBindingIndex, \") uniform \").concat(textureType, \" \").concat(name_3, \"Texture\").concat(i, \";\"));\n                        uniform += \"\".concat(i > 0 ? \"\\r\\n\" : \"\", \"#define \").concat(name_3).concat(i, \" \").concat(componentType).concat(samplerFunction, \"(\").concat(name_3, \"Texture\").concat(i, \", \").concat(samplerName, \")\");\n                    }\n                    uniform = layouts.join(\"\\r\\n\") + uniform;\n                    this._textureArrayProcessing.push(name_3);\n                }\n                this._webgpuProcessingContext.availableTextures[name_3] = textureInfo;\n                this._webgpuProcessingContext.availableSamplers[samplerName] = samplerInfo;\n                this._addSamplerBindingDescription(samplerName, samplerInfo, !isFragment);\n                for (var i = 0; i < arraySize; ++i) {\n                    this._addTextureBindingDescription(name_3, textureInfo, i, textureDimension, null, !isFragment);\n                }\n            }\n            else {\n                this._addUniformToLeftOverUBO(name_3, uniformType, preProcessors);\n                uniform = \"\";\n            }\n        }\n        return uniform;\n    };\n    WebGPUShaderProcessorGLSL.prototype.uniformBufferProcessor = function (uniformBuffer, isFragment) {\n        var uboRegex = /uniform\\s+(\\w+)/gm;\n        var match = uboRegex.exec(uniformBuffer);\n        if (match != null) {\n            var name_4 = match[1];\n            var uniformBufferInfo = this._webgpuProcessingContext.availableBuffers[name_4];\n            if (!uniformBufferInfo) {\n                var knownUBO = WebGPUShaderProcessingContext.KnownUBOs[name_4];\n                var binding = void 0;\n                if (knownUBO && knownUBO.binding.groupIndex !== -1) {\n                    binding = knownUBO.binding;\n                }\n                else {\n                    binding = this._webgpuProcessingContext.getNextFreeUBOBinding();\n                }\n                uniformBufferInfo = { binding: binding };\n                this._webgpuProcessingContext.availableBuffers[name_4] = uniformBufferInfo;\n            }\n            this._addBufferBindingDescription(name_4, uniformBufferInfo, WebGPUConstants.BufferBindingType.Uniform, !isFragment);\n            uniformBuffer = uniformBuffer.replace(\"uniform\", \"layout(set = \".concat(uniformBufferInfo.binding.groupIndex, \", binding = \").concat(uniformBufferInfo.binding.bindingIndex, \") uniform\"));\n        }\n        return uniformBuffer;\n    };\n    WebGPUShaderProcessorGLSL.prototype.postProcessor = function (code, defines, isFragment, processingContext, engine) {\n        var hasDrawBuffersExtension = code.search(/#extension.+GL_EXT_draw_buffers.+require/) !== -1;\n        // Remove extensions\n        var regex = /#extension.+(GL_OVR_multiview2|GL_OES_standard_derivatives|GL_EXT_shader_texture_lod|GL_EXT_frag_depth|GL_EXT_draw_buffers).+(enable|require)/g;\n        code = code.replace(regex, \"\");\n        // Replace instructions\n        code = code.replace(/texture2D\\s*\\(/g, \"texture(\");\n        if (isFragment) {\n            var hasFragCoord = code.indexOf(\"gl_FragCoord\") >= 0;\n            var fragCoordCode = \"\\n                glFragCoord__ = gl_FragCoord;\\n                if (yFactor__ == 1.) {\\n                    glFragCoord__.y = textureOutputHeight__ - glFragCoord__.y;\\n                }\\n            \";\n            var injectCode = hasFragCoord ? \"vec4 glFragCoord__;\\n\" : \"\";\n            code = code.replace(/texture2DLodEXT\\s*\\(/g, \"textureLod(\");\n            code = code.replace(/textureCubeLodEXT\\s*\\(/g, \"textureLod(\");\n            code = code.replace(/textureCube\\s*\\(/g, \"texture(\");\n            code = code.replace(/gl_FragDepthEXT/g, \"gl_FragDepth\");\n            code = code.replace(/gl_FragColor/g, \"glFragColor\");\n            code = code.replace(/gl_FragData/g, \"glFragData\");\n            code = code.replace(/gl_FragCoord/g, \"glFragCoord__\");\n            code = code.replace(/void\\s+?main\\s*\\(/g, (hasDrawBuffersExtension ? \"\" : \"layout(location = 0) out vec4 glFragColor;\\n\") + \"void main(\");\n            code = code.replace(/dFdy/g, \"(-yFactor__)*dFdy\"); // will also handle dFdyCoarse and dFdyFine\n            code = code.replace(\"##INJECTCODE##\", injectCode);\n            if (hasFragCoord) {\n                code = this._injectStartingAndEndingCode(code, \"void main\", fragCoordCode);\n            }\n        }\n        else {\n            code = code.replace(/gl_InstanceID/g, \"gl_InstanceIndex\");\n            code = code.replace(/gl_VertexID/g, \"gl_VertexIndex\");\n            var hasMultiviewExtension = defines.indexOf(\"#define MULTIVIEW\") !== -1;\n            if (hasMultiviewExtension) {\n                return \"#extension GL_OVR_multiview2 : require\\nlayout (num_views = 2) in;\\n\" + code;\n            }\n        }\n        // Flip Y + convert z range from [-1,1] to [0,1]\n        if (!isFragment) {\n            var lastClosingCurly = code.lastIndexOf(\"}\");\n            code = code.substring(0, lastClosingCurly);\n            code += \"gl_Position.y *= yFactor__;\\n\";\n            if (!engine.isNDCHalfZRange) {\n                code += \"gl_Position.z = (gl_Position.z + gl_Position.w) / 2.0;\\n\";\n            }\n            code += \"}\";\n        }\n        return code;\n    };\n    WebGPUShaderProcessorGLSL.prototype._applyTextureArrayProcessing = function (code, name) {\n        // Replaces the occurrences of name[XX] by nameXX\n        var regex = new RegExp(name + \"\\\\s*\\\\[(.+)?\\\\]\", \"gm\");\n        var match = regex.exec(code);\n        while (match != null) {\n            var index = match[1];\n            var iindex = +index;\n            if (this._preProcessors && isNaN(iindex)) {\n                iindex = +this._preProcessors[index.trim()];\n            }\n            code = code.replace(match[0], name + iindex);\n            match = regex.exec(code);\n        }\n        return code;\n    };\n    WebGPUShaderProcessorGLSL.prototype._generateLeftOverUBOCode = function (name, uniformBufferDescription) {\n        var ubo = \"layout(set = \".concat(uniformBufferDescription.binding.groupIndex, \", binding = \").concat(uniformBufferDescription.binding.bindingIndex, \") uniform \").concat(name, \" {\\n    \");\n        for (var _i = 0, _a = this._webgpuProcessingContext.leftOverUniforms; _i < _a.length; _i++) {\n            var leftOverUniform = _a[_i];\n            if (leftOverUniform.length > 0) {\n                ubo += \"    \".concat(leftOverUniform.type, \" \").concat(leftOverUniform.name, \"[\").concat(leftOverUniform.length, \"];\\n\");\n            }\n            else {\n                ubo += \"    \".concat(leftOverUniform.type, \" \").concat(leftOverUniform.name, \";\\n\");\n            }\n        }\n        ubo += \"};\\n\\n\";\n        return ubo;\n    };\n    WebGPUShaderProcessorGLSL.prototype.finalizeShaders = function (vertexCode, fragmentCode) {\n        // make replacements for texture names in the texture array case\n        for (var i = 0; i < this._textureArrayProcessing.length; ++i) {\n            var name_5 = this._textureArrayProcessing[i];\n            vertexCode = this._applyTextureArrayProcessing(vertexCode, name_5);\n            fragmentCode = this._applyTextureArrayProcessing(fragmentCode, name_5);\n        }\n        // inject the missing varying in the fragment shader\n        for (var i = 0; i < this._missingVaryings.length; ++i) {\n            var decl = this._missingVaryings[i];\n            if (decl && decl.length > 0) {\n                fragmentCode = decl + \"\\n\" + fragmentCode;\n            }\n        }\n        // Builds the leftover UBOs.\n        var leftOverUBO = this._buildLeftOverUBO();\n        vertexCode = leftOverUBO + vertexCode;\n        fragmentCode = leftOverUBO + fragmentCode;\n        this._collectBindingNames();\n        this._preCreateBindGroupEntries();\n        this._preProcessors = null;\n        return { vertexCode: vertexCode, fragmentCode: fragmentCode };\n    };\n    return WebGPUShaderProcessorGLSL;\n}(WebGPUShaderProcessor));\nexport { WebGPUShaderProcessorGLSL };\n//# sourceMappingURL=webgpuShaderProcessorsGLSL.js.map","import { __extends } from \"tslib\";\nimport { WebGPUShaderProcessingContext } from \"./webgpuShaderProcessingContext.js\";\nimport * as WebGPUConstants from \"./webgpuConstants.js\";\nimport { Logger } from \"../../Misc/logger.js\";\nimport { WebGPUShaderProcessor } from \"./webgpuShaderProcessor.js\";\nimport { RemoveComments } from \"../../Misc/codeStringParsingTools.js\";\nimport \"../../ShadersWGSL/ShadersInclude/bonesDeclaration.js\";\nimport \"../../ShadersWGSL/ShadersInclude/bonesVertex.js\";\nimport \"../../ShadersWGSL/ShadersInclude/bakedVertexAnimationDeclaration.js\";\nimport \"../../ShadersWGSL/ShadersInclude/bakedVertexAnimation.js\";\nimport \"../../ShadersWGSL/ShadersInclude/clipPlaneFragment.js\";\nimport \"../../ShadersWGSL/ShadersInclude/clipPlaneFragmentDeclaration.js\";\nimport \"../../ShadersWGSL/ShadersInclude/clipPlaneVertex.js\";\nimport \"../../ShadersWGSL/ShadersInclude/clipPlaneVertexDeclaration.js\";\nimport \"../../ShadersWGSL/ShadersInclude/instancesDeclaration.js\";\nimport \"../../ShadersWGSL/ShadersInclude/instancesVertex.js\";\nimport \"../../ShadersWGSL/ShadersInclude/meshUboDeclaration.js\";\nimport \"../../ShadersWGSL/ShadersInclude/morphTargetsVertex.js\";\nimport \"../../ShadersWGSL/ShadersInclude/morphTargetsVertexDeclaration.js\";\nimport \"../../ShadersWGSL/ShadersInclude/morphTargetsVertexGlobal.js\";\nimport \"../../ShadersWGSL/ShadersInclude/morphTargetsVertexGlobalDeclaration.js\";\nimport \"../../ShadersWGSL/ShadersInclude/sceneUboDeclaration.js\";\nimport { ShaderLanguage } from \"../../Materials/shaderLanguage.js\";\nvar builtInName_vertex_index = \"gl_VertexID\";\nvar builtInName_instance_index = \"gl_InstanceID\";\nvar builtInName_position = \"gl_Position\";\nvar builtInName_position_frag = \"gl_FragCoord\";\nvar builtInName_front_facing = \"gl_FrontFacing\";\nvar builtInName_frag_depth = \"gl_FragDepth\";\nvar builtInName_FragColor = \"gl_FragColor\";\nvar leftOverVarName = \"uniforms\";\nvar internalsVarName = \"internals\";\nvar gpuTextureViewDimensionByWebGPUTextureFunction = {\n    texture_1d: WebGPUConstants.TextureViewDimension.E1d,\n    texture_2d: WebGPUConstants.TextureViewDimension.E2d,\n    texture_2d_array: WebGPUConstants.TextureViewDimension.E2dArray,\n    texture_3d: WebGPUConstants.TextureViewDimension.E3d,\n    texture_cube: WebGPUConstants.TextureViewDimension.Cube,\n    texture_cube_array: WebGPUConstants.TextureViewDimension.CubeArray,\n    texture_multisampled_2d: WebGPUConstants.TextureViewDimension.E2d,\n    texture_depth_2d: WebGPUConstants.TextureViewDimension.E2d,\n    texture_depth_2d_array: WebGPUConstants.TextureViewDimension.E2dArray,\n    texture_depth_cube: WebGPUConstants.TextureViewDimension.Cube,\n    texture_depth_cube_array: WebGPUConstants.TextureViewDimension.CubeArray,\n    texture_depth_multisampled_2d: WebGPUConstants.TextureViewDimension.E2d,\n    texture_storage_1d: WebGPUConstants.TextureViewDimension.E1d,\n    texture_storage_2d: WebGPUConstants.TextureViewDimension.E2d,\n    texture_storage_2d_array: WebGPUConstants.TextureViewDimension.E2dArray,\n    texture_storage_3d: WebGPUConstants.TextureViewDimension.E3d,\n    texture_external: null,\n};\n/** @hidden */\nvar WebGPUShaderProcessorWGSL = /** @class */ (function (_super) {\n    __extends(WebGPUShaderProcessorWGSL, _super);\n    function WebGPUShaderProcessorWGSL() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.shaderLanguage = ShaderLanguage.WGSL;\n        _this.uniformRegexp = /uniform\\s+(\\w+)\\s*:\\s*(.+)\\s*;/;\n        _this.textureRegexp = /var\\s+(\\w+)\\s*:\\s*((array<\\s*)?(texture_\\w+)\\s*(<\\s*(.+)\\s*>)?\\s*(,\\s*\\w+\\s*>\\s*)?);/;\n        _this.noPrecision = true;\n        return _this;\n    }\n    WebGPUShaderProcessorWGSL.prototype._getArraySize = function (name, uniformType, preProcessors) {\n        var length = 0;\n        var endArray = uniformType.lastIndexOf(\">\");\n        if (uniformType.indexOf(\"array\") >= 0 && endArray > 0) {\n            var startArray = endArray;\n            while (startArray > 0 && uniformType.charAt(startArray) !== \" \" && uniformType.charAt(startArray) !== \",\") {\n                startArray--;\n            }\n            var lengthInString = uniformType.substring(startArray + 1, endArray);\n            length = +lengthInString;\n            if (isNaN(length)) {\n                length = +preProcessors[lengthInString.trim()];\n            }\n            while (startArray > 0 && (uniformType.charAt(startArray) === \" \" || uniformType.charAt(startArray) === \",\")) {\n                startArray--;\n            }\n            uniformType = uniformType.substring(uniformType.indexOf(\"<\") + 1, startArray + 1);\n        }\n        return [name, uniformType, length];\n    };\n    WebGPUShaderProcessorWGSL.prototype.initializeShaders = function (processingContext) {\n        this._webgpuProcessingContext = processingContext;\n        this._attributesWGSL = [];\n        this._attributesDeclWGSL = [];\n        this._attributeNamesWGSL = [];\n        this._varyingsWGSL = [];\n        this._varyingsDeclWGSL = [];\n        this._varyingNamesWGSL = [];\n        this._stridedUniformArrays = [];\n    };\n    WebGPUShaderProcessorWGSL.prototype.preProcessShaderCode = function (code) {\n        return (\"struct \".concat(WebGPUShaderProcessor.InternalsUBOName, \" {\\nyFactor__: f32,\\ntextureOutputHeight__: f32,\\n};\\nvar<uniform> \").concat(internalsVarName, \" : \").concat(WebGPUShaderProcessor.InternalsUBOName, \";\\n\") +\n            RemoveComments(code));\n    };\n    WebGPUShaderProcessorWGSL.prototype.varyingProcessor = function (varying, isFragment, preProcessors) {\n        var varyingRegex = /\\s*varying\\s+(?:(?:highp)?|(?:lowp)?)\\s*(\\S+)\\s*:\\s*(.+)\\s*;/gm;\n        var match = varyingRegex.exec(varying);\n        if (match !== null) {\n            var varyingType = match[2];\n            var name_1 = match[1];\n            var location_1;\n            if (isFragment) {\n                location_1 = this._webgpuProcessingContext.availableVaryings[name_1];\n                if (location_1 === undefined) {\n                    Logger.Warn(\"Invalid fragment shader: The varying named \\\"\".concat(name_1, \"\\\" is not declared in the vertex shader! This declaration will be ignored.\"));\n                }\n            }\n            else {\n                location_1 = this._webgpuProcessingContext.getVaryingNextLocation(varyingType, this._getArraySize(name_1, varyingType, preProcessors)[2]);\n                this._webgpuProcessingContext.availableVaryings[name_1] = location_1;\n                this._varyingsWGSL.push(\"@location(\".concat(location_1, \") \").concat(name_1, \" : \").concat(varyingType, \",\"));\n                this._varyingsDeclWGSL.push(\"var<private> \".concat(name_1, \" : \").concat(varyingType, \";\"));\n                this._varyingNamesWGSL.push(name_1);\n            }\n            varying = \"\";\n        }\n        return varying;\n    };\n    WebGPUShaderProcessorWGSL.prototype.attributeProcessor = function (attribute, preProcessors) {\n        var attribRegex = /\\s*attribute\\s+(\\S+)\\s*:\\s*(.+)\\s*;/gm;\n        var match = attribRegex.exec(attribute);\n        if (match !== null) {\n            var attributeType = match[2];\n            var name_2 = match[1];\n            var location_2 = this._webgpuProcessingContext.getAttributeNextLocation(attributeType, this._getArraySize(name_2, attributeType, preProcessors)[2]);\n            this._webgpuProcessingContext.availableAttributes[name_2] = location_2;\n            this._webgpuProcessingContext.orderedAttributes[location_2] = name_2;\n            this._attributesWGSL.push(\"@location(\".concat(location_2, \") \").concat(name_2, \" : \").concat(attributeType, \",\"));\n            this._attributesDeclWGSL.push(\"var<private> \".concat(name_2, \" : \").concat(attributeType, \";\"));\n            this._attributeNamesWGSL.push(name_2);\n            attribute = \"\";\n        }\n        return attribute;\n    };\n    WebGPUShaderProcessorWGSL.prototype.uniformProcessor = function (uniform, isFragment, preProcessors) {\n        var match = this.uniformRegexp.exec(uniform);\n        if (match !== null) {\n            var uniformType = match[2];\n            var name_3 = match[1];\n            this._addUniformToLeftOverUBO(name_3, uniformType, preProcessors);\n            uniform = \"\";\n        }\n        return uniform;\n    };\n    WebGPUShaderProcessorWGSL.prototype.textureProcessor = function (texture, isFragment, preProcessors) {\n        var match = this.textureRegexp.exec(texture);\n        if (match !== null) {\n            var name_4 = match[1]; // name of the variable\n            var type = match[2]; // texture_2d<f32> or array<texture_2d_array<f32>, 5> for eg\n            var isArrayOfTexture = !!match[3];\n            var textureFunc = match[4]; // texture_2d, texture_depth_2d, etc\n            var isStorageTexture = textureFunc.indexOf(\"storage\") > 0;\n            var componentType = match[6]; // f32 or i32 or u32 or undefined\n            var storageTextureFormat = isStorageTexture ? componentType.substring(0, componentType.indexOf(\",\")).trim() : null;\n            var arraySize = isArrayOfTexture ? this._getArraySize(name_4, type, preProcessors)[2] : 0;\n            var textureInfo = this._webgpuProcessingContext.availableTextures[name_4];\n            if (!textureInfo) {\n                textureInfo = {\n                    isTextureArray: arraySize > 0,\n                    isStorageTexture: isStorageTexture,\n                    textures: [],\n                    sampleType: WebGPUConstants.TextureSampleType.Float,\n                };\n                arraySize = arraySize || 1;\n                for (var i = 0; i < arraySize; ++i) {\n                    textureInfo.textures.push(this._webgpuProcessingContext.getNextFreeUBOBinding());\n                }\n            }\n            else {\n                arraySize = textureInfo.textures.length;\n            }\n            this._webgpuProcessingContext.availableTextures[name_4] = textureInfo;\n            var isDepthTexture = textureFunc.indexOf(\"depth\") > 0;\n            var textureDimension = gpuTextureViewDimensionByWebGPUTextureFunction[textureFunc];\n            var sampleType = isDepthTexture\n                ? WebGPUConstants.TextureSampleType.Depth\n                : componentType === \"u32\"\n                    ? WebGPUConstants.TextureSampleType.Uint\n                    : componentType === \"i32\"\n                        ? WebGPUConstants.TextureSampleType.Sint\n                        : WebGPUConstants.TextureSampleType.Float;\n            textureInfo.sampleType = sampleType;\n            if (textureDimension === undefined) {\n                throw \"Can't get the texture dimension corresponding to the texture function \\\"\".concat(textureFunc, \"\\\"!\");\n            }\n            for (var i = 0; i < arraySize; ++i) {\n                var _a = textureInfo.textures[i], groupIndex = _a.groupIndex, bindingIndex = _a.bindingIndex;\n                if (i === 0) {\n                    texture = \"@group(\".concat(groupIndex, \") @binding(\").concat(bindingIndex, \") \").concat(texture);\n                }\n                this._addTextureBindingDescription(name_4, textureInfo, i, textureDimension, storageTextureFormat, !isFragment);\n            }\n        }\n        return texture;\n    };\n    WebGPUShaderProcessorWGSL.prototype.postProcessor = function (code) {\n        return code;\n    };\n    WebGPUShaderProcessorWGSL.prototype.finalizeShaders = function (vertexCode, fragmentCode) {\n        var fragCoordCode = fragmentCode.indexOf(\"gl_FragCoord\") >= 0\n            ? \"\\n            if (internals.yFactor__ == 1.) {\\n                gl_FragCoord.y = internals.textureOutputHeight__ - gl_FragCoord.y;\\n            }\\n        \"\n            : \"\";\n        // Add the group/binding info to the sampler declaration (var xxx: sampler|sampler_comparison)\n        vertexCode = this._processSamplers(vertexCode, true);\n        fragmentCode = this._processSamplers(fragmentCode, false);\n        // Add the group/binding info to the uniform/storage buffer declarations (var<uniform> XXX:YYY or var<storage(,read_write|read)> XXX:YYY)\n        vertexCode = this._processCustomBuffers(vertexCode, true);\n        fragmentCode = this._processCustomBuffers(fragmentCode, false);\n        // Builds the leftover UBOs.\n        var leftOverUBO = this._buildLeftOverUBO();\n        vertexCode = leftOverUBO + vertexCode;\n        fragmentCode = leftOverUBO + fragmentCode;\n        // Vertex code\n        vertexCode = vertexCode.replace(/#define /g, \"//#define \");\n        vertexCode = this._processStridedUniformArrays(vertexCode);\n        var varyingsDecl = this._varyingsDeclWGSL.join(\"\\n\") + \"\\n\";\n        var vertexBuiltinDecl = \"var<private> \".concat(builtInName_vertex_index, \" : u32;\\nvar<private> \").concat(builtInName_instance_index, \" : u32;\\nvar<private> \").concat(builtInName_position, \" : vec4<f32>;\\n\");\n        var vertexAttributesDecl = this._attributesDeclWGSL.join(\"\\n\") + \"\\n\";\n        var vertexInputs = \"struct VertexInputs {\\n  @builtin(vertex_index) vertexIndex : u32,\\n  @builtin(instance_index) instanceIndex : u32,\\n\";\n        if (this._attributesWGSL.length > 0) {\n            vertexInputs += this._attributesWGSL.join(\"\\n\");\n        }\n        vertexInputs += \"\\n};\\n\";\n        var vertexFragmentInputs = \"struct FragmentInputs {\\n  @builtin(position) position : vec4<f32>,\\n\";\n        if (this._varyingsWGSL.length > 0) {\n            vertexFragmentInputs += this._varyingsWGSL.join(\"\\n\");\n        }\n        vertexFragmentInputs += \"\\n};\\n\";\n        vertexCode = vertexBuiltinDecl + vertexInputs + vertexAttributesDecl + vertexFragmentInputs + varyingsDecl + vertexCode;\n        var vertexStartingCode = \"  var output : FragmentInputs;\\n  \".concat(builtInName_vertex_index, \" = input.vertexIndex;\\n  \").concat(builtInName_instance_index, \" = input.instanceIndex;\\n\");\n        for (var i = 0; i < this._attributeNamesWGSL.length; ++i) {\n            var name_5 = this._attributeNamesWGSL[i];\n            vertexStartingCode += \"  \".concat(name_5, \" = input.\").concat(name_5, \";\\n\");\n        }\n        var vertexEndingCode = \"  output.position = \".concat(builtInName_position, \";\\n  output.position.y = output.position.y * internals.yFactor__;\\n\");\n        for (var i = 0; i < this._varyingNamesWGSL.length; ++i) {\n            var name_6 = this._varyingNamesWGSL[i];\n            vertexEndingCode += \"  output.\".concat(name_6, \" = \").concat(name_6, \";\\n\");\n        }\n        vertexEndingCode += \"  return output;\";\n        vertexCode = this._injectStartingAndEndingCode(vertexCode, \"fn main\", vertexStartingCode, vertexEndingCode);\n        // fragment code\n        fragmentCode = fragmentCode.replace(/#define /g, \"//#define \");\n        fragmentCode = this._processStridedUniformArrays(fragmentCode);\n        fragmentCode = fragmentCode.replace(/dpdy/g, \"(-internals.yFactor__)*dpdy\"); // will also handle dpdyCoarse and dpdyFine\n        var fragmentBuiltinDecl = \"var<private> \".concat(builtInName_position_frag, \" : vec4<f32>;\\nvar<private> \").concat(builtInName_front_facing, \" : bool;\\nvar<private> \").concat(builtInName_FragColor, \" : vec4<f32>;\\nvar<private> \").concat(builtInName_frag_depth, \" : f32;\\n\");\n        var fragmentFragmentInputs = \"struct FragmentInputs {\\n  @builtin(position) position : vec4<f32>,\\n  @builtin(front_facing) frontFacing : bool,\\n\";\n        if (this._varyingsWGSL.length > 0) {\n            fragmentFragmentInputs += this._varyingsWGSL.join(\"\\n\");\n        }\n        fragmentFragmentInputs += \"\\n};\\n\";\n        var fragmentOutputs = \"struct FragmentOutputs {\\n  @location(0) color : vec4<f32>,\\n\";\n        var hasFragDepth = false;\n        var idx = 0;\n        while (!hasFragDepth) {\n            idx = fragmentCode.indexOf(builtInName_frag_depth, idx);\n            if (idx < 0) {\n                break;\n            }\n            var saveIndex = idx;\n            hasFragDepth = true;\n            while (idx > 1 && fragmentCode.charAt(idx) !== \"\\n\") {\n                if (fragmentCode.charAt(idx) === \"/\" && fragmentCode.charAt(idx - 1) === \"/\") {\n                    hasFragDepth = false;\n                    break;\n                }\n                idx--;\n            }\n            idx = saveIndex + builtInName_frag_depth.length;\n        }\n        if (hasFragDepth) {\n            fragmentOutputs += \"  @builtin(frag_depth) fragDepth: f32,\\n\";\n        }\n        fragmentOutputs += \"};\\n\";\n        fragmentCode = fragmentBuiltinDecl + fragmentFragmentInputs + varyingsDecl + fragmentOutputs + fragmentCode;\n        var fragmentStartingCode = \"  var output : FragmentOutputs;\\n  \".concat(builtInName_position_frag, \" = input.position;\\n  \").concat(builtInName_front_facing, \" = input.frontFacing;\\n\") + fragCoordCode;\n        for (var i = 0; i < this._varyingNamesWGSL.length; ++i) {\n            var name_7 = this._varyingNamesWGSL[i];\n            fragmentStartingCode += \"  \".concat(name_7, \" = input.\").concat(name_7, \";\\n\");\n        }\n        var fragmentEndingCode = \"  output.color = \".concat(builtInName_FragColor, \";\\n\");\n        if (hasFragDepth) {\n            fragmentEndingCode += \"  output.fragDepth = \".concat(builtInName_frag_depth, \";\\n\");\n        }\n        fragmentEndingCode += \"  return output;\";\n        fragmentCode = this._injectStartingAndEndingCode(fragmentCode, \"fn main\", fragmentStartingCode, fragmentEndingCode);\n        this._collectBindingNames();\n        this._preCreateBindGroupEntries();\n        return { vertexCode: vertexCode, fragmentCode: fragmentCode };\n    };\n    WebGPUShaderProcessorWGSL.prototype._generateLeftOverUBOCode = function (name, uniformBufferDescription) {\n        var stridedArrays = \"\";\n        var ubo = \"struct \".concat(name, \" {\\n\");\n        for (var _i = 0, _a = this._webgpuProcessingContext.leftOverUniforms; _i < _a.length; _i++) {\n            var leftOverUniform = _a[_i];\n            var type = leftOverUniform.type.replace(/^(.*?)(<.*>)?$/, \"$1\");\n            var size = WebGPUShaderProcessor.UniformSizes[type];\n            if (leftOverUniform.length > 0) {\n                if (size <= 2) {\n                    var stridedArrayType = \"\".concat(name, \"_\").concat(this._stridedUniformArrays.length, \"_strided_arr\");\n                    stridedArrays += \"struct \".concat(stridedArrayType, \" {\\n                        @size(16)\\n                        el: \").concat(type, \",\\n                    }\");\n                    this._stridedUniformArrays.push(leftOverUniform.name);\n                    ubo += \" @align(16) \".concat(leftOverUniform.name, \" : array<\").concat(stridedArrayType, \", \").concat(leftOverUniform.length, \">,\\n\");\n                }\n                else {\n                    ubo += \" \".concat(leftOverUniform.name, \" : array<\").concat(leftOverUniform.type, \", \").concat(leftOverUniform.length, \">,\\n\");\n                }\n            }\n            else {\n                ubo += \"  \".concat(leftOverUniform.name, \" : \").concat(leftOverUniform.type, \",\\n\");\n            }\n        }\n        ubo += \"};\\n\";\n        ubo = \"\".concat(stridedArrays, \"\\n\").concat(ubo);\n        ubo += \"@group(\".concat(uniformBufferDescription.binding.groupIndex, \") @binding(\").concat(uniformBufferDescription.binding.bindingIndex, \") var<uniform> \").concat(leftOverVarName, \" : \").concat(name, \";\\n\");\n        return ubo;\n    };\n    WebGPUShaderProcessorWGSL.prototype._processSamplers = function (code, isVertex) {\n        var samplerRegexp = /var\\s+(\\w+Sampler)\\s*:\\s*(sampler|sampler_comparison)\\s*;/gm;\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            var match = samplerRegexp.exec(code);\n            if (match === null) {\n                break;\n            }\n            var name_8 = match[1]; // name of the variable\n            var samplerType = match[2]; // sampler or sampler_comparison\n            var textureName = name_8.indexOf(WebGPUShaderProcessor.AutoSamplerSuffix) === name_8.length - WebGPUShaderProcessor.AutoSamplerSuffix.length\n                ? name_8.substring(0, name_8.indexOf(WebGPUShaderProcessor.AutoSamplerSuffix))\n                : null;\n            var samplerBindingType = samplerType === \"sampler_comparison\" ? WebGPUConstants.SamplerBindingType.Comparison : WebGPUConstants.SamplerBindingType.Filtering;\n            if (textureName) {\n                var textureInfo = this._webgpuProcessingContext.availableTextures[textureName];\n                if (textureInfo) {\n                    textureInfo.autoBindSampler = true;\n                }\n            }\n            var samplerInfo = this._webgpuProcessingContext.availableSamplers[name_8];\n            if (!samplerInfo) {\n                samplerInfo = {\n                    binding: this._webgpuProcessingContext.getNextFreeUBOBinding(),\n                    type: samplerBindingType,\n                };\n                this._webgpuProcessingContext.availableSamplers[name_8] = samplerInfo;\n            }\n            this._addSamplerBindingDescription(name_8, samplerInfo, isVertex);\n            var part1 = code.substring(0, match.index);\n            var insertPart = \"@group(\".concat(samplerInfo.binding.groupIndex, \") @binding(\").concat(samplerInfo.binding.bindingIndex, \") \");\n            var part2 = code.substring(match.index);\n            code = part1 + insertPart + part2;\n            samplerRegexp.lastIndex += insertPart.length;\n        }\n        return code;\n    };\n    WebGPUShaderProcessorWGSL.prototype._processCustomBuffers = function (code, isVertex) {\n        var instantiateBufferRegexp = /var<\\s*(uniform|storage)\\s*(,\\s*(read|read_write)\\s*)?>\\s+(\\S+)\\s*:\\s*(\\S+)\\s*;/gm;\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            var match = instantiateBufferRegexp.exec(code);\n            if (match === null) {\n                break;\n            }\n            var type = match[1];\n            var decoration = match[3];\n            var name_9 = match[4];\n            var structName = match[5];\n            var bufferInfo = this._webgpuProcessingContext.availableBuffers[name_9];\n            if (!bufferInfo) {\n                var knownUBO = type === \"uniform\" ? WebGPUShaderProcessingContext.KnownUBOs[structName] : null;\n                var binding = void 0;\n                if (knownUBO) {\n                    name_9 = structName;\n                    binding = knownUBO.binding;\n                    if (binding.groupIndex === -1) {\n                        binding = this._webgpuProcessingContext.getNextFreeUBOBinding();\n                    }\n                }\n                else {\n                    binding = this._webgpuProcessingContext.getNextFreeUBOBinding();\n                }\n                bufferInfo = { binding: binding };\n                this._webgpuProcessingContext.availableBuffers[name_9] = bufferInfo;\n            }\n            this._addBufferBindingDescription(name_9, this._webgpuProcessingContext.availableBuffers[name_9], decoration === \"read_write\"\n                ? WebGPUConstants.BufferBindingType.Storage\n                : type === \"storage\"\n                    ? WebGPUConstants.BufferBindingType.ReadOnlyStorage\n                    : WebGPUConstants.BufferBindingType.Uniform, isVertex);\n            var groupIndex = bufferInfo.binding.groupIndex;\n            var bindingIndex = bufferInfo.binding.bindingIndex;\n            var part1 = code.substring(0, match.index);\n            var insertPart = \"@group(\".concat(groupIndex, \") @binding(\").concat(bindingIndex, \") \");\n            var part2 = code.substring(match.index);\n            code = part1 + insertPart + part2;\n            instantiateBufferRegexp.lastIndex += insertPart.length;\n        }\n        return code;\n    };\n    WebGPUShaderProcessorWGSL.prototype._processStridedUniformArrays = function (code) {\n        for (var _i = 0, _a = this._stridedUniformArrays; _i < _a.length; _i++) {\n            var uniformArrayName = _a[_i];\n            code = code.replace(new RegExp(\"\".concat(uniformArrayName, \"\\\\s*\\\\[(.*)\\\\]\"), \"g\"), \"\".concat(uniformArrayName, \"[$1].el\"));\n        }\n        return code;\n    };\n    return WebGPUShaderProcessorWGSL;\n}(WebGPUShaderProcessor));\nexport { WebGPUShaderProcessorWGSL };\n//# sourceMappingURL=webgpuShaderProcessorsWGSL.js.map","\n/** @hidden */\nvar WebGPUSnapshotRendering = /** @class */ (function () {\n    function WebGPUSnapshotRendering(engine, renderingMode, bundleList, bundleListRenderTarget) {\n        this._record = false;\n        this._play = false;\n        this._mainPassBundleList = [];\n        this._enabled = false;\n        this._engine = engine;\n        this._mode = renderingMode;\n        this._bundleList = bundleList;\n        this._bundleListRenderTarget = bundleListRenderTarget;\n    }\n    Object.defineProperty(WebGPUSnapshotRendering.prototype, \"enabled\", {\n        get: function () {\n            return this._enabled;\n        },\n        set: function (activate) {\n            this._mainPassBundleList.length = 0;\n            this._record = this._enabled = activate;\n            this._play = false;\n            if (activate) {\n                this._modeSaved = this._mode;\n                this._mode = 0; // need to reset to standard for the recording pass to avoid some code being bypassed\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUSnapshotRendering.prototype, \"play\", {\n        get: function () {\n            return this._play;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUSnapshotRendering.prototype, \"record\", {\n        get: function () {\n            return this._record;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUSnapshotRendering.prototype, \"mode\", {\n        get: function () {\n            return this._mode;\n        },\n        set: function (mode) {\n            if (this._record) {\n                this._modeSaved = mode;\n            }\n            else {\n                this._mode = mode;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebGPUSnapshotRendering.prototype.endMainRenderPass = function () {\n        if (this._record) {\n            this._mainPassBundleList.push(this._bundleList.clone());\n        }\n    };\n    WebGPUSnapshotRendering.prototype.endRenderTargetPass = function (currentRenderPass, gpuWrapper) {\n        var _a, _b, _c, _d;\n        if (this._play) {\n            (_b = (_a = gpuWrapper._bundleLists) === null || _a === void 0 ? void 0 : _a[gpuWrapper._currentLayer]) === null || _b === void 0 ? void 0 : _b.run(currentRenderPass);\n            if (this._mode === 1) {\n                this._engine._reportDrawCall((_d = (_c = gpuWrapper._bundleLists) === null || _c === void 0 ? void 0 : _c[gpuWrapper._currentLayer]) === null || _d === void 0 ? void 0 : _d.numDrawCalls);\n            }\n        }\n        else if (this._record) {\n            if (!gpuWrapper._bundleLists) {\n                gpuWrapper._bundleLists = [];\n            }\n            gpuWrapper._bundleLists[gpuWrapper._currentLayer] = this._bundleListRenderTarget.clone();\n            gpuWrapper._bundleLists[gpuWrapper._currentLayer].run(currentRenderPass);\n            this._bundleListRenderTarget.reset();\n        }\n        else {\n            return false;\n        }\n        return true;\n    };\n    WebGPUSnapshotRendering.prototype.endFrame = function (mainRenderPass) {\n        if (this._record) {\n            this._mainPassBundleList.push(this._bundleList.clone());\n            this._record = false;\n            this._play = true;\n            this._mode = this._modeSaved;\n        }\n        if (mainRenderPass !== null && this._play) {\n            for (var i = 0; i < this._mainPassBundleList.length; ++i) {\n                this._mainPassBundleList[i].run(mainRenderPass);\n                if (this._mode === 1) {\n                    this._engine._reportDrawCall(this._mainPassBundleList[i].numDrawCalls);\n                }\n            }\n        }\n    };\n    WebGPUSnapshotRendering.prototype.reset = function () {\n        this.enabled = false;\n        this.enabled = true;\n    };\n    return WebGPUSnapshotRendering;\n}());\nexport { WebGPUSnapshotRendering };\n//# sourceMappingURL=webgpuSnapshotRendering.js.map","import { __extends } from \"tslib\";\nimport { StencilStateComposer } from \"../../States/stencilStateComposer.js\";\n/**\n * @hidden\n **/\nvar WebGPUStencilStateComposer = /** @class */ (function (_super) {\n    __extends(WebGPUStencilStateComposer, _super);\n    function WebGPUStencilStateComposer(cache) {\n        var _this = _super.call(this, false) || this;\n        _this._cache = cache;\n        _this.reset();\n        return _this;\n    }\n    Object.defineProperty(WebGPUStencilStateComposer.prototype, \"func\", {\n        get: function () {\n            return this._func;\n        },\n        set: function (value) {\n            if (this._func === value) {\n                return;\n            }\n            this._func = value;\n            this._cache.setStencilCompare(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUStencilStateComposer.prototype, \"funcMask\", {\n        get: function () {\n            return this._funcMask;\n        },\n        set: function (value) {\n            if (this._funcMask === value) {\n                return;\n            }\n            this._funcMask = value;\n            this._cache.setStencilReadMask(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUStencilStateComposer.prototype, \"opStencilFail\", {\n        get: function () {\n            return this._opStencilFail;\n        },\n        set: function (value) {\n            if (this._opStencilFail === value) {\n                return;\n            }\n            this._opStencilFail = value;\n            this._cache.setStencilFailOp(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUStencilStateComposer.prototype, \"opDepthFail\", {\n        get: function () {\n            return this._opDepthFail;\n        },\n        set: function (value) {\n            if (this._opDepthFail === value) {\n                return;\n            }\n            this._opDepthFail = value;\n            this._cache.setStencilDepthFailOp(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUStencilStateComposer.prototype, \"opStencilDepthPass\", {\n        get: function () {\n            return this._opStencilDepthPass;\n        },\n        set: function (value) {\n            if (this._opStencilDepthPass === value) {\n                return;\n            }\n            this._opStencilDepthPass = value;\n            this._cache.setStencilPassOp(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUStencilStateComposer.prototype, \"mask\", {\n        get: function () {\n            return this._mask;\n        },\n        set: function (value) {\n            if (this._mask === value) {\n                return;\n            }\n            this._mask = value;\n            this._cache.setStencilWriteMask(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUStencilStateComposer.prototype, \"enabled\", {\n        get: function () {\n            return this._enabled;\n        },\n        set: function (value) {\n            if (this._enabled === value) {\n                return;\n            }\n            this._enabled = value;\n            this._cache.setStencilEnabled(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebGPUStencilStateComposer.prototype.reset = function () {\n        _super.prototype.reset.call(this);\n        this._cache.resetStencilState();\n    };\n    WebGPUStencilStateComposer.prototype.apply = function () {\n        var _a;\n        var stencilMaterialEnabled = (_a = this.stencilMaterial) === null || _a === void 0 ? void 0 : _a.enabled;\n        this.enabled = stencilMaterialEnabled ? this.stencilMaterial.enabled : this.stencilGlobal.enabled;\n        if (!this.enabled) {\n            return;\n        }\n        this.func = stencilMaterialEnabled ? this.stencilMaterial.func : this.stencilGlobal.func;\n        this.funcRef = stencilMaterialEnabled ? this.stencilMaterial.funcRef : this.stencilGlobal.funcRef;\n        this.funcMask = stencilMaterialEnabled ? this.stencilMaterial.funcMask : this.stencilGlobal.funcMask;\n        this.opStencilFail = stencilMaterialEnabled ? this.stencilMaterial.opStencilFail : this.stencilGlobal.opStencilFail;\n        this.opDepthFail = stencilMaterialEnabled ? this.stencilMaterial.opDepthFail : this.stencilGlobal.opDepthFail;\n        this.opStencilDepthPass = stencilMaterialEnabled ? this.stencilMaterial.opStencilDepthPass : this.stencilGlobal.opStencilDepthPass;\n        this.mask = stencilMaterialEnabled ? this.stencilMaterial.mask : this.stencilGlobal.mask;\n    };\n    return WebGPUStencilStateComposer;\n}(StencilStateComposer));\nexport { WebGPUStencilStateComposer };\n//# sourceMappingURL=webgpuStencilStateComposer.js.map","/* eslint-disable @typescript-eslint/naming-convention */\n// License for the mipmap generation code:\n//\n// Copyright 2020 Brandon Jones\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\nimport * as WebGPUConstants from \"./webgpuConstants.js\";\nimport { Scalar } from \"../../Maths/math.scalar.js\";\n\nimport { InternalTextureSource } from \"../../Materials/Textures/internalTexture.js\";\nimport { WebGPUHardwareTexture } from \"./webgpuHardwareTexture.js\";\n// TODO WEBGPU improve mipmap generation by using compute shaders\n// TODO WEBGPU use WGSL instead of GLSL\nvar mipmapVertexSource = \"\\n    const vec2 pos[4] = vec2[4](vec2(-1.0f, 1.0f), vec2(1.0f, 1.0f), vec2(-1.0f, -1.0f), vec2(1.0f, -1.0f));\\n    const vec2 tex[4] = vec2[4](vec2(0.0f, 0.0f), vec2(1.0f, 0.0f), vec2(0.0f, 1.0f), vec2(1.0f, 1.0f));\\n\\n    layout(location = 0) out vec2 vTex;\\n\\n    void main() {\\n        vTex = tex[gl_VertexIndex];\\n        gl_Position = vec4(pos[gl_VertexIndex], 0.0, 1.0);\\n    }\\n    \";\nvar mipmapFragmentSource = \"\\n    layout(set = 0, binding = 0) uniform sampler imgSampler;\\n    layout(set = 0, binding = 1) uniform texture2D img;\\n\\n    layout(location = 0) in vec2 vTex;\\n    layout(location = 0) out vec4 outColor;\\n\\n    void main() {\\n        outColor = texture(sampler2D(img, imgSampler), vTex);\\n    }\\n    \";\nvar invertYPreMultiplyAlphaVertexSource = \"\\n    #extension GL_EXT_samplerless_texture_functions : enable\\n\\n    const vec2 pos[4] = vec2[4](vec2(-1.0f, 1.0f), vec2(1.0f, 1.0f), vec2(-1.0f, -1.0f), vec2(1.0f, -1.0f));\\n    const vec2 tex[4] = vec2[4](vec2(0.0f, 0.0f), vec2(1.0f, 0.0f), vec2(0.0f, 1.0f), vec2(1.0f, 1.0f));\\n\\n    layout(set = 0, binding = 0) uniform texture2D img;\\n\\n    #ifdef INVERTY\\n        layout(location = 0) out flat ivec2 vTextureSize;\\n    #endif\\n\\n    void main() {\\n        #ifdef INVERTY\\n            vTextureSize = textureSize(img, 0);\\n        #endif\\n        gl_Position = vec4(pos[gl_VertexIndex], 0.0, 1.0);\\n    }\\n    \";\nvar invertYPreMultiplyAlphaFragmentSource = \"\\n    #extension GL_EXT_samplerless_texture_functions : enable\\n\\n    layout(set = 0, binding = 0) uniform texture2D img;\\n\\n    #ifdef INVERTY\\n        layout(location = 0) in flat ivec2 vTextureSize;\\n    #endif\\n    layout(location = 0) out vec4 outColor;\\n\\n    void main() {\\n    #ifdef INVERTY\\n        vec4 color = texelFetch(img, ivec2(gl_FragCoord.x, vTextureSize.y - gl_FragCoord.y), 0);\\n    #else\\n        vec4 color = texelFetch(img, ivec2(gl_FragCoord.xy), 0);\\n    #endif\\n    #ifdef PREMULTIPLYALPHA\\n        color.rgb *= color.a;\\n    #endif\\n        outColor = color;\\n    }\\n    \";\nvar invertYPreMultiplyAlphaWithOfstVertexSource = invertYPreMultiplyAlphaVertexSource;\nvar invertYPreMultiplyAlphaWithOfstFragmentSource = \"\\n    #extension GL_EXT_samplerless_texture_functions : enable\\n\\n    layout(set = 0, binding = 0) uniform texture2D img;\\n    layout(set = 0, binding = 1) uniform Params {\\n        float ofstX;\\n        float ofstY;\\n        float width;\\n        float height;\\n    };\\n\\n    #ifdef INVERTY\\n        layout(location = 0) in flat ivec2 vTextureSize;\\n    #endif\\n    layout(location = 0) out vec4 outColor;\\n\\n    void main() {\\n        if (gl_FragCoord.x < ofstX || gl_FragCoord.x >= ofstX + width) {\\n            discard;\\n        }\\n        if (gl_FragCoord.y < ofstY || gl_FragCoord.y >= ofstY + height) {\\n            discard;\\n        }\\n    #ifdef INVERTY\\n        vec4 color = texelFetch(img, ivec2(gl_FragCoord.x, ofstY + height - (gl_FragCoord.y - ofstY)), 0);\\n    #else\\n        vec4 color = texelFetch(img, ivec2(gl_FragCoord.xy), 0);\\n    #endif\\n    #ifdef PREMULTIPLYALPHA\\n        color.rgb *= color.a;\\n    #endif\\n        outColor = color;\\n    }\\n    \";\nvar clearVertexSource = \"\\n    const vec2 pos[4] = vec2[4](vec2(-1.0f, 1.0f), vec2(1.0f, 1.0f), vec2(-1.0f, -1.0f), vec2(1.0f, -1.0f));\\n\\n    void main() {\\n        gl_Position = vec4(pos[gl_VertexIndex], 0.0, 1.0);\\n    }\\n    \";\nvar clearFragmentSource = \"\\n    layout(set = 0, binding = 0) uniform Uniforms {\\n        uniform vec4 color;\\n    };\\n\\n    layout(location = 0) out vec4 outColor;\\n\\n    void main() {\\n        outColor = color;\\n    }\\n    \";\nvar PipelineType;\n(function (PipelineType) {\n    PipelineType[PipelineType[\"MipMap\"] = 0] = \"MipMap\";\n    PipelineType[PipelineType[\"InvertYPremultiplyAlpha\"] = 1] = \"InvertYPremultiplyAlpha\";\n    PipelineType[PipelineType[\"Clear\"] = 2] = \"Clear\";\n    PipelineType[PipelineType[\"InvertYPremultiplyAlphaWithOfst\"] = 3] = \"InvertYPremultiplyAlphaWithOfst\";\n})(PipelineType || (PipelineType = {}));\nvar shadersForPipelineType = [\n    { vertex: mipmapVertexSource, fragment: mipmapFragmentSource },\n    { vertex: invertYPreMultiplyAlphaVertexSource, fragment: invertYPreMultiplyAlphaFragmentSource },\n    { vertex: clearVertexSource, fragment: clearFragmentSource },\n    { vertex: invertYPreMultiplyAlphaWithOfstVertexSource, fragment: invertYPreMultiplyAlphaWithOfstFragmentSource },\n];\n/**\n * Map a (renderable) texture format (GPUTextureFormat) to an index for fast lookup (in caches for eg)\n */\nexport var renderableTextureFormatToIndex = {\n    \"\": 0,\n    r8unorm: 1,\n    r8uint: 2,\n    r8sint: 3,\n    r16uint: 4,\n    r16sint: 5,\n    r16float: 6,\n    rg8unorm: 7,\n    rg8uint: 8,\n    rg8sint: 9,\n    r32uint: 10,\n    r32sint: 11,\n    r32float: 12,\n    rg16uint: 13,\n    rg16sint: 14,\n    rg16float: 15,\n    rgba8unorm: 16,\n    \"rgba8unorm-srgb\": 17,\n    rgba8uint: 18,\n    rgba8sint: 19,\n    bgra8unorm: 20,\n    \"bgra8unorm-srgb\": 21,\n    rgb10a2unorm: 22,\n    rg32uint: 23,\n    rg32sint: 24,\n    rg32float: 25,\n    rgba16uint: 26,\n    rgba16sint: 27,\n    rgba16float: 28,\n    rgba32uint: 29,\n    rgba32sint: 30,\n    rgba32float: 31,\n    stencil8: 32,\n    depth16unorm: 33,\n    depth24plus: 34,\n    \"depth24plus-stencil8\": 35,\n    depth32float: 36,\n    \"depth24unorm-stencil8\": 37,\n    \"depth32float-stencil8\": 38,\n};\n/** @hidden */\nvar WebGPUTextureHelper = /** @class */ (function () {\n    //------------------------------------------------------------------------------\n    //                         Initialization / Helpers\n    //------------------------------------------------------------------------------\n    function WebGPUTextureHelper(device, glslang, tintWASM, bufferManager) {\n        this._pipelines = {};\n        this._compiledShaders = [];\n        this._deferredReleaseTextures = [];\n        this._device = device;\n        this._glslang = glslang;\n        this._tintWASM = tintWASM;\n        this._bufferManager = bufferManager;\n        this._mipmapSampler = device.createSampler({ minFilter: WebGPUConstants.FilterMode.Linear });\n        this._ubCopyWithOfst = this._bufferManager.createBuffer(4 * 4, WebGPUConstants.BufferUsage.Uniform | WebGPUConstants.BufferUsage.CopyDst).underlyingResource;\n        this._getPipeline(WebGPUConstants.TextureFormat.RGBA8Unorm);\n    }\n    WebGPUTextureHelper.ComputeNumMipmapLevels = function (width, height) {\n        return Scalar.ILog2(Math.max(width, height)) + 1;\n    };\n    WebGPUTextureHelper.prototype._getPipeline = function (format, type, params) {\n        if (type === void 0) { type = PipelineType.MipMap; }\n        var index = type === PipelineType.MipMap\n            ? 1 << 0\n            : type === PipelineType.InvertYPremultiplyAlpha\n                ? ((params.invertY ? 1 : 0) << 1) + ((params.premultiplyAlpha ? 1 : 0) << 2)\n                : type === PipelineType.Clear\n                    ? 1 << 3\n                    : type === PipelineType.InvertYPremultiplyAlphaWithOfst\n                        ? ((params.invertY ? 1 : 0) << 4) + ((params.premultiplyAlpha ? 1 : 0) << 5)\n                        : 0;\n        if (!this._pipelines[format]) {\n            this._pipelines[format] = [];\n        }\n        var pipelineAndBGL = this._pipelines[format][index];\n        if (!pipelineAndBGL) {\n            var defines = \"#version 450\\r\\n\";\n            if (type === PipelineType.InvertYPremultiplyAlpha || type === PipelineType.InvertYPremultiplyAlphaWithOfst) {\n                if (params.invertY) {\n                    defines += \"#define INVERTY\\r\\n\";\n                }\n                if (params.premultiplyAlpha) {\n                    defines += \"#define PREMULTIPLYALPHA\\r\\n\";\n                }\n            }\n            var modules = this._compiledShaders[index];\n            if (!modules) {\n                var vertexCode = this._glslang.compileGLSL(defines + shadersForPipelineType[type].vertex, \"vertex\");\n                var fragmentCode = this._glslang.compileGLSL(defines + shadersForPipelineType[type].fragment, \"fragment\");\n                if (this._tintWASM) {\n                    vertexCode = this._tintWASM.convertSpirV2WGSL(vertexCode);\n                    fragmentCode = this._tintWASM.convertSpirV2WGSL(fragmentCode);\n                }\n                var vertexModule = this._device.createShaderModule({\n                    code: vertexCode,\n                });\n                var fragmentModule = this._device.createShaderModule({\n                    code: fragmentCode,\n                });\n                modules = this._compiledShaders[index] = [vertexModule, fragmentModule];\n            }\n            var pipeline = this._device.createRenderPipeline({\n                layout: WebGPUConstants.AutoLayoutMode.Auto,\n                vertex: {\n                    module: modules[0],\n                    entryPoint: \"main\",\n                },\n                fragment: {\n                    module: modules[1],\n                    entryPoint: \"main\",\n                    targets: [\n                        {\n                            format: format,\n                        },\n                    ],\n                },\n                primitive: {\n                    topology: WebGPUConstants.PrimitiveTopology.TriangleStrip,\n                    stripIndexFormat: WebGPUConstants.IndexFormat.Uint16,\n                },\n            });\n            pipelineAndBGL = this._pipelines[format][index] = [pipeline, pipeline.getBindGroupLayout(0)];\n        }\n        return pipelineAndBGL;\n    };\n    WebGPUTextureHelper._GetTextureTypeFromFormat = function (format) {\n        switch (format) {\n            // One Component = 8 bits\n            case WebGPUConstants.TextureFormat.R8Unorm:\n            case WebGPUConstants.TextureFormat.R8Snorm:\n            case WebGPUConstants.TextureFormat.R8Uint:\n            case WebGPUConstants.TextureFormat.R8Sint:\n            case WebGPUConstants.TextureFormat.RG8Unorm:\n            case WebGPUConstants.TextureFormat.RG8Snorm:\n            case WebGPUConstants.TextureFormat.RG8Uint:\n            case WebGPUConstants.TextureFormat.RG8Sint:\n            case WebGPUConstants.TextureFormat.RGBA8Unorm:\n            case WebGPUConstants.TextureFormat.RGBA8UnormSRGB:\n            case WebGPUConstants.TextureFormat.RGBA8Snorm:\n            case WebGPUConstants.TextureFormat.RGBA8Uint:\n            case WebGPUConstants.TextureFormat.RGBA8Sint:\n            case WebGPUConstants.TextureFormat.BGRA8Unorm:\n            case WebGPUConstants.TextureFormat.BGRA8UnormSRGB:\n            case WebGPUConstants.TextureFormat.RGB10A2Unorm: // composite format - let's say it's byte...\n            case WebGPUConstants.TextureFormat.RGB9E5UFloat: // composite format - let's say it's byte...\n            case WebGPUConstants.TextureFormat.RG11B10UFloat: // composite format - let's say it's byte...\n            case WebGPUConstants.TextureFormat.Depth24UnormStencil8: // composite format - let's say it's byte...\n            case WebGPUConstants.TextureFormat.Depth32FloatStencil8: // composite format - let's say it's byte...\n            case WebGPUConstants.TextureFormat.BC7RGBAUnorm:\n            case WebGPUConstants.TextureFormat.BC7RGBAUnormSRGB:\n            case WebGPUConstants.TextureFormat.BC6HRGBUFloat:\n            case WebGPUConstants.TextureFormat.BC6HRGBFloat:\n            case WebGPUConstants.TextureFormat.BC5RGUnorm:\n            case WebGPUConstants.TextureFormat.BC5RGSnorm:\n            case WebGPUConstants.TextureFormat.BC3RGBAUnorm:\n            case WebGPUConstants.TextureFormat.BC3RGBAUnormSRGB:\n            case WebGPUConstants.TextureFormat.BC2RGBAUnorm:\n            case WebGPUConstants.TextureFormat.BC2RGBAUnormSRGB:\n            case WebGPUConstants.TextureFormat.BC4RUnorm:\n            case WebGPUConstants.TextureFormat.BC4RSnorm:\n            case WebGPUConstants.TextureFormat.BC1RGBAUnorm:\n            case WebGPUConstants.TextureFormat.BC1RGBAUnormSRGB:\n            case WebGPUConstants.TextureFormat.ETC2RGB8Unorm:\n            case WebGPUConstants.TextureFormat.ETC2RGB8UnormSRGB:\n            case WebGPUConstants.TextureFormat.ETC2RGB8A1Unorm:\n            case WebGPUConstants.TextureFormat.ETC2RGB8A1UnormSRGB:\n            case WebGPUConstants.TextureFormat.ETC2RGBA8Unorm:\n            case WebGPUConstants.TextureFormat.ETC2RGBA8UnormSRGB:\n            case WebGPUConstants.TextureFormat.EACR11Unorm:\n            case WebGPUConstants.TextureFormat.EACR11Snorm:\n            case WebGPUConstants.TextureFormat.EACRG11Unorm:\n            case WebGPUConstants.TextureFormat.EACRG11Snorm:\n            case WebGPUConstants.TextureFormat.ASTC4x4Unorm:\n            case WebGPUConstants.TextureFormat.ASTC4x4UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC5x4Unorm:\n            case WebGPUConstants.TextureFormat.ASTC5x4UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC5x5Unorm:\n            case WebGPUConstants.TextureFormat.ASTC5x5UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC6x5Unorm:\n            case WebGPUConstants.TextureFormat.ASTC6x5UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC6x6Unorm:\n            case WebGPUConstants.TextureFormat.ASTC6x6UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC8x5Unorm:\n            case WebGPUConstants.TextureFormat.ASTC8x5UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC8x6Unorm:\n            case WebGPUConstants.TextureFormat.ASTC8x6UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC8x8Unorm:\n            case WebGPUConstants.TextureFormat.ASTC8x8UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC10x5Unorm:\n            case WebGPUConstants.TextureFormat.ASTC10x5UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC10x6Unorm:\n            case WebGPUConstants.TextureFormat.ASTC10x6UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC10x8Unorm:\n            case WebGPUConstants.TextureFormat.ASTC10x8UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC10x10Unorm:\n            case WebGPUConstants.TextureFormat.ASTC10x10UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC12x10Unorm:\n            case WebGPUConstants.TextureFormat.ASTC12x10UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC12x12Unorm:\n            case WebGPUConstants.TextureFormat.ASTC12x12UnormSRGB:\n                return 0;\n            // One component = 16 bits\n            case WebGPUConstants.TextureFormat.R16Uint:\n            case WebGPUConstants.TextureFormat.R16Sint:\n            case WebGPUConstants.TextureFormat.RG16Uint:\n            case WebGPUConstants.TextureFormat.RG16Sint:\n            case WebGPUConstants.TextureFormat.RGBA16Uint:\n            case WebGPUConstants.TextureFormat.RGBA16Sint:\n            case WebGPUConstants.TextureFormat.Depth16Unorm:\n                return 5;\n            case WebGPUConstants.TextureFormat.R16Float:\n            case WebGPUConstants.TextureFormat.RG16Float:\n            case WebGPUConstants.TextureFormat.RGBA16Float:\n                return 2;\n            // One component = 32 bits\n            case WebGPUConstants.TextureFormat.R32Uint:\n            case WebGPUConstants.TextureFormat.R32Sint:\n            case WebGPUConstants.TextureFormat.RG32Uint:\n            case WebGPUConstants.TextureFormat.RG32Sint:\n            case WebGPUConstants.TextureFormat.RGBA32Uint:\n            case WebGPUConstants.TextureFormat.RGBA32Sint:\n                return 7;\n            case WebGPUConstants.TextureFormat.R32Float:\n            case WebGPUConstants.TextureFormat.RG32Float:\n            case WebGPUConstants.TextureFormat.RGBA32Float:\n            case WebGPUConstants.TextureFormat.Depth32Float:\n                return 1;\n            case WebGPUConstants.TextureFormat.Stencil8:\n                throw \"No fixed size for Stencil8 format!\";\n            case WebGPUConstants.TextureFormat.Depth24Plus:\n                throw \"No fixed size for Depth24Plus format!\";\n            case WebGPUConstants.TextureFormat.Depth24PlusStencil8:\n                throw \"No fixed size for Depth24PlusStencil8 format!\";\n        }\n        return 0;\n    };\n    WebGPUTextureHelper._GetBlockInformationFromFormat = function (format) {\n        switch (format) {\n            // 8 bits formats\n            case WebGPUConstants.TextureFormat.R8Unorm:\n            case WebGPUConstants.TextureFormat.R8Snorm:\n            case WebGPUConstants.TextureFormat.R8Uint:\n            case WebGPUConstants.TextureFormat.R8Sint:\n                return { width: 1, height: 1, length: 1 };\n            // 16 bits formats\n            case WebGPUConstants.TextureFormat.R16Uint:\n            case WebGPUConstants.TextureFormat.R16Sint:\n            case WebGPUConstants.TextureFormat.R16Float:\n            case WebGPUConstants.TextureFormat.RG8Unorm:\n            case WebGPUConstants.TextureFormat.RG8Snorm:\n            case WebGPUConstants.TextureFormat.RG8Uint:\n            case WebGPUConstants.TextureFormat.RG8Sint:\n                return { width: 1, height: 1, length: 2 };\n            // 32 bits formats\n            case WebGPUConstants.TextureFormat.R32Uint:\n            case WebGPUConstants.TextureFormat.R32Sint:\n            case WebGPUConstants.TextureFormat.R32Float:\n            case WebGPUConstants.TextureFormat.RG16Uint:\n            case WebGPUConstants.TextureFormat.RG16Sint:\n            case WebGPUConstants.TextureFormat.RG16Float:\n            case WebGPUConstants.TextureFormat.RGBA8Unorm:\n            case WebGPUConstants.TextureFormat.RGBA8UnormSRGB:\n            case WebGPUConstants.TextureFormat.RGBA8Snorm:\n            case WebGPUConstants.TextureFormat.RGBA8Uint:\n            case WebGPUConstants.TextureFormat.RGBA8Sint:\n            case WebGPUConstants.TextureFormat.BGRA8Unorm:\n            case WebGPUConstants.TextureFormat.BGRA8UnormSRGB:\n            case WebGPUConstants.TextureFormat.RGB9E5UFloat:\n            case WebGPUConstants.TextureFormat.RGB10A2Unorm:\n            case WebGPUConstants.TextureFormat.RG11B10UFloat:\n                return { width: 1, height: 1, length: 4 };\n            // 64 bits formats\n            case WebGPUConstants.TextureFormat.RG32Uint:\n            case WebGPUConstants.TextureFormat.RG32Sint:\n            case WebGPUConstants.TextureFormat.RG32Float:\n            case WebGPUConstants.TextureFormat.RGBA16Uint:\n            case WebGPUConstants.TextureFormat.RGBA16Sint:\n            case WebGPUConstants.TextureFormat.RGBA16Float:\n                return { width: 1, height: 1, length: 8 };\n            // 128 bits formats\n            case WebGPUConstants.TextureFormat.RGBA32Uint:\n            case WebGPUConstants.TextureFormat.RGBA32Sint:\n            case WebGPUConstants.TextureFormat.RGBA32Float:\n                return { width: 1, height: 1, length: 16 };\n            // Depth and stencil formats\n            case WebGPUConstants.TextureFormat.Stencil8:\n                throw \"No fixed size for Stencil8 format!\";\n            case WebGPUConstants.TextureFormat.Depth16Unorm:\n                return { width: 1, height: 1, length: 2 };\n            case WebGPUConstants.TextureFormat.Depth24Plus:\n                throw \"No fixed size for Depth24Plus format!\";\n            case WebGPUConstants.TextureFormat.Depth24PlusStencil8:\n                throw \"No fixed size for Depth24PlusStencil8 format!\";\n            case WebGPUConstants.TextureFormat.Depth32Float:\n                return { width: 1, height: 1, length: 4 };\n            case WebGPUConstants.TextureFormat.Depth24UnormStencil8:\n                return { width: 1, height: 1, length: 4 };\n            case WebGPUConstants.TextureFormat.Depth32FloatStencil8:\n                return { width: 1, height: 1, length: 5 };\n            // BC compressed formats usable if \"texture-compression-bc\" is both\n            // supported by the device/user agent and enabled in requestDevice.\n            case WebGPUConstants.TextureFormat.BC7RGBAUnorm:\n            case WebGPUConstants.TextureFormat.BC7RGBAUnormSRGB:\n            case WebGPUConstants.TextureFormat.BC6HRGBUFloat:\n            case WebGPUConstants.TextureFormat.BC6HRGBFloat:\n            case WebGPUConstants.TextureFormat.BC5RGUnorm:\n            case WebGPUConstants.TextureFormat.BC5RGSnorm:\n            case WebGPUConstants.TextureFormat.BC3RGBAUnorm:\n            case WebGPUConstants.TextureFormat.BC3RGBAUnormSRGB:\n            case WebGPUConstants.TextureFormat.BC2RGBAUnorm:\n            case WebGPUConstants.TextureFormat.BC2RGBAUnormSRGB:\n                return { width: 4, height: 4, length: 16 };\n            case WebGPUConstants.TextureFormat.BC4RUnorm:\n            case WebGPUConstants.TextureFormat.BC4RSnorm:\n            case WebGPUConstants.TextureFormat.BC1RGBAUnorm:\n            case WebGPUConstants.TextureFormat.BC1RGBAUnormSRGB:\n                return { width: 4, height: 4, length: 8 };\n            // ETC2 compressed formats usable if \"texture-compression-etc2\" is both\n            // supported by the device/user agent and enabled in requestDevice.\n            case WebGPUConstants.TextureFormat.ETC2RGB8Unorm:\n            case WebGPUConstants.TextureFormat.ETC2RGB8UnormSRGB:\n            case WebGPUConstants.TextureFormat.ETC2RGB8A1Unorm:\n            case WebGPUConstants.TextureFormat.ETC2RGB8A1UnormSRGB:\n            case WebGPUConstants.TextureFormat.EACR11Unorm:\n            case WebGPUConstants.TextureFormat.EACR11Snorm:\n                return { width: 4, height: 4, length: 8 };\n            case WebGPUConstants.TextureFormat.ETC2RGBA8Unorm:\n            case WebGPUConstants.TextureFormat.ETC2RGBA8UnormSRGB:\n            case WebGPUConstants.TextureFormat.EACRG11Unorm:\n            case WebGPUConstants.TextureFormat.EACRG11Snorm:\n                return { width: 4, height: 4, length: 16 };\n            // ASTC compressed formats usable if \"texture-compression-astc\" is both\n            // supported by the device/user agent and enabled in requestDevice.\n            case WebGPUConstants.TextureFormat.ASTC4x4Unorm:\n            case WebGPUConstants.TextureFormat.ASTC4x4UnormSRGB:\n                return { width: 4, height: 4, length: 16 };\n            case WebGPUConstants.TextureFormat.ASTC5x4Unorm:\n            case WebGPUConstants.TextureFormat.ASTC5x4UnormSRGB:\n                return { width: 5, height: 4, length: 16 };\n            case WebGPUConstants.TextureFormat.ASTC5x5Unorm:\n            case WebGPUConstants.TextureFormat.ASTC5x5UnormSRGB:\n                return { width: 5, height: 5, length: 16 };\n            case WebGPUConstants.TextureFormat.ASTC6x5Unorm:\n            case WebGPUConstants.TextureFormat.ASTC6x5UnormSRGB:\n                return { width: 6, height: 5, length: 16 };\n            case WebGPUConstants.TextureFormat.ASTC6x6Unorm:\n            case WebGPUConstants.TextureFormat.ASTC6x6UnormSRGB:\n                return { width: 6, height: 6, length: 16 };\n            case WebGPUConstants.TextureFormat.ASTC8x5Unorm:\n            case WebGPUConstants.TextureFormat.ASTC8x5UnormSRGB:\n                return { width: 8, height: 5, length: 16 };\n            case WebGPUConstants.TextureFormat.ASTC8x6Unorm:\n            case WebGPUConstants.TextureFormat.ASTC8x6UnormSRGB:\n                return { width: 8, height: 6, length: 16 };\n            case WebGPUConstants.TextureFormat.ASTC8x8Unorm:\n            case WebGPUConstants.TextureFormat.ASTC8x8UnormSRGB:\n                return { width: 8, height: 8, length: 16 };\n            case WebGPUConstants.TextureFormat.ASTC10x5Unorm:\n            case WebGPUConstants.TextureFormat.ASTC10x5UnormSRGB:\n                return { width: 10, height: 5, length: 16 };\n            case WebGPUConstants.TextureFormat.ASTC10x6Unorm:\n            case WebGPUConstants.TextureFormat.ASTC10x6UnormSRGB:\n                return { width: 10, height: 6, length: 16 };\n            case WebGPUConstants.TextureFormat.ASTC10x8Unorm:\n            case WebGPUConstants.TextureFormat.ASTC10x8UnormSRGB:\n                return { width: 10, height: 8, length: 16 };\n            case WebGPUConstants.TextureFormat.ASTC10x10Unorm:\n            case WebGPUConstants.TextureFormat.ASTC10x10UnormSRGB:\n                return { width: 10, height: 10, length: 16 };\n            case WebGPUConstants.TextureFormat.ASTC12x10Unorm:\n            case WebGPUConstants.TextureFormat.ASTC12x10UnormSRGB:\n                return { width: 12, height: 10, length: 16 };\n            case WebGPUConstants.TextureFormat.ASTC12x12Unorm:\n            case WebGPUConstants.TextureFormat.ASTC12x12UnormSRGB:\n                return { width: 12, height: 12, length: 16 };\n        }\n        return { width: 1, height: 1, length: 4 };\n    };\n    WebGPUTextureHelper._IsHardwareTexture = function (texture) {\n        return !!texture.release;\n    };\n    WebGPUTextureHelper._IsInternalTexture = function (texture) {\n        return !!texture.dispose;\n    };\n    WebGPUTextureHelper.IsImageBitmap = function (imageBitmap) {\n        return imageBitmap.close !== undefined;\n    };\n    WebGPUTextureHelper.IsImageBitmapArray = function (imageBitmap) {\n        return Array.isArray(imageBitmap) && imageBitmap[0].close !== undefined;\n    };\n    WebGPUTextureHelper.prototype.setCommandEncoder = function (encoder) {\n        this._commandEncoderForCreation = encoder;\n    };\n    WebGPUTextureHelper.IsCompressedFormat = function (format) {\n        switch (format) {\n            case WebGPUConstants.TextureFormat.BC7RGBAUnormSRGB:\n            case WebGPUConstants.TextureFormat.BC7RGBAUnorm:\n            case WebGPUConstants.TextureFormat.BC6HRGBFloat:\n            case WebGPUConstants.TextureFormat.BC6HRGBUFloat:\n            case WebGPUConstants.TextureFormat.BC5RGSnorm:\n            case WebGPUConstants.TextureFormat.BC5RGUnorm:\n            case WebGPUConstants.TextureFormat.BC4RSnorm:\n            case WebGPUConstants.TextureFormat.BC4RUnorm:\n            case WebGPUConstants.TextureFormat.BC3RGBAUnormSRGB:\n            case WebGPUConstants.TextureFormat.BC3RGBAUnorm:\n            case WebGPUConstants.TextureFormat.BC2RGBAUnormSRGB:\n            case WebGPUConstants.TextureFormat.BC2RGBAUnorm:\n            case WebGPUConstants.TextureFormat.BC1RGBAUnormSRGB:\n            case WebGPUConstants.TextureFormat.BC1RGBAUnorm:\n            case WebGPUConstants.TextureFormat.ETC2RGB8Unorm:\n            case WebGPUConstants.TextureFormat.ETC2RGB8UnormSRGB:\n            case WebGPUConstants.TextureFormat.ETC2RGB8A1Unorm:\n            case WebGPUConstants.TextureFormat.ETC2RGB8A1UnormSRGB:\n            case WebGPUConstants.TextureFormat.ETC2RGBA8Unorm:\n            case WebGPUConstants.TextureFormat.ETC2RGBA8UnormSRGB:\n            case WebGPUConstants.TextureFormat.EACR11Unorm:\n            case WebGPUConstants.TextureFormat.EACR11Snorm:\n            case WebGPUConstants.TextureFormat.EACRG11Unorm:\n            case WebGPUConstants.TextureFormat.EACRG11Snorm:\n            case WebGPUConstants.TextureFormat.ASTC4x4Unorm:\n            case WebGPUConstants.TextureFormat.ASTC4x4UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC5x4Unorm:\n            case WebGPUConstants.TextureFormat.ASTC5x4UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC5x5Unorm:\n            case WebGPUConstants.TextureFormat.ASTC5x5UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC6x5Unorm:\n            case WebGPUConstants.TextureFormat.ASTC6x5UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC6x6Unorm:\n            case WebGPUConstants.TextureFormat.ASTC6x6UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC8x5Unorm:\n            case WebGPUConstants.TextureFormat.ASTC8x5UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC8x6Unorm:\n            case WebGPUConstants.TextureFormat.ASTC8x6UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC8x8Unorm:\n            case WebGPUConstants.TextureFormat.ASTC8x8UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC10x5Unorm:\n            case WebGPUConstants.TextureFormat.ASTC10x5UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC10x6Unorm:\n            case WebGPUConstants.TextureFormat.ASTC10x6UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC10x8Unorm:\n            case WebGPUConstants.TextureFormat.ASTC10x8UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC10x10Unorm:\n            case WebGPUConstants.TextureFormat.ASTC10x10UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC12x10Unorm:\n            case WebGPUConstants.TextureFormat.ASTC12x10UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC12x12Unorm:\n            case WebGPUConstants.TextureFormat.ASTC12x12UnormSRGB:\n                return true;\n        }\n        return false;\n    };\n    WebGPUTextureHelper.GetWebGPUTextureFormat = function (type, format, useSRGBBuffer) {\n        if (useSRGBBuffer === void 0) { useSRGBBuffer = false; }\n        switch (format) {\n            case 15:\n                return WebGPUConstants.TextureFormat.Depth16Unorm;\n            case 16:\n                return WebGPUConstants.TextureFormat.Depth24Plus;\n            case 13:\n                return WebGPUConstants.TextureFormat.Depth24PlusStencil8;\n            case 14:\n                return WebGPUConstants.TextureFormat.Depth32Float;\n            case 17:\n                return WebGPUConstants.TextureFormat.Depth24UnormStencil8;\n            case 18:\n                return WebGPUConstants.TextureFormat.Depth32FloatStencil8;\n            case 36492:\n                return useSRGBBuffer ? WebGPUConstants.TextureFormat.BC7RGBAUnormSRGB : WebGPUConstants.TextureFormat.BC7RGBAUnorm;\n            case 36495:\n                return WebGPUConstants.TextureFormat.BC6HRGBUFloat;\n            case 36494:\n                return WebGPUConstants.TextureFormat.BC6HRGBFloat;\n            case 33779:\n                return useSRGBBuffer ? WebGPUConstants.TextureFormat.BC3RGBAUnormSRGB : WebGPUConstants.TextureFormat.BC3RGBAUnorm;\n            case 33778:\n                return useSRGBBuffer ? WebGPUConstants.TextureFormat.BC2RGBAUnormSRGB : WebGPUConstants.TextureFormat.BC2RGBAUnorm;\n            case 33777:\n            case 33776:\n                return useSRGBBuffer ? WebGPUConstants.TextureFormat.BC1RGBAUnormSRGB : WebGPUConstants.TextureFormat.BC1RGBAUnorm;\n            case 37808:\n                return useSRGBBuffer ? WebGPUConstants.TextureFormat.ASTC4x4UnormSRGB : WebGPUConstants.TextureFormat.ASTC4x4Unorm;\n            case 36196:\n            case 37492:\n                return useSRGBBuffer ? WebGPUConstants.TextureFormat.ETC2RGB8UnormSRGB : WebGPUConstants.TextureFormat.ETC2RGB8Unorm;\n            case 37496:\n                return useSRGBBuffer ? WebGPUConstants.TextureFormat.ETC2RGBA8UnormSRGB : WebGPUConstants.TextureFormat.ETC2RGBA8Unorm;\n        }\n        switch (type) {\n            case 3:\n                switch (format) {\n                    case 6:\n                        return WebGPUConstants.TextureFormat.R8Snorm;\n                    case 7:\n                        return WebGPUConstants.TextureFormat.RG8Snorm;\n                    case 4:\n                        throw \"RGB format not supported in WebGPU\";\n                    case 8:\n                        return WebGPUConstants.TextureFormat.R8Sint;\n                    case 9:\n                        return WebGPUConstants.TextureFormat.RG8Sint;\n                    case 10:\n                        throw \"RGB_INTEGER format not supported in WebGPU\";\n                    case 11:\n                        return WebGPUConstants.TextureFormat.RGBA8Sint;\n                    default:\n                        return WebGPUConstants.TextureFormat.RGBA8Snorm;\n                }\n            case 0:\n                switch (format) {\n                    case 6:\n                        return WebGPUConstants.TextureFormat.R8Unorm;\n                    case 7:\n                        return WebGPUConstants.TextureFormat.RG8Unorm;\n                    case 4:\n                        throw \"TEXTUREFORMAT_RGB format not supported in WebGPU\";\n                    case 5:\n                        return useSRGBBuffer ? WebGPUConstants.TextureFormat.RGBA8UnormSRGB : WebGPUConstants.TextureFormat.RGBA8Unorm;\n                    case 12:\n                        return useSRGBBuffer ? WebGPUConstants.TextureFormat.BGRA8UnormSRGB : WebGPUConstants.TextureFormat.BGRA8Unorm;\n                    case 8:\n                        return WebGPUConstants.TextureFormat.R8Uint;\n                    case 9:\n                        return WebGPUConstants.TextureFormat.RG8Uint;\n                    case 10:\n                        throw \"RGB_INTEGER format not supported in WebGPU\";\n                    case 11:\n                        return WebGPUConstants.TextureFormat.RGBA8Uint;\n                    case 0:\n                        throw \"TEXTUREFORMAT_ALPHA format not supported in WebGPU\";\n                    case 1:\n                        throw \"TEXTUREFORMAT_LUMINANCE format not supported in WebGPU\";\n                    case 2:\n                        throw \"TEXTUREFORMAT_LUMINANCE_ALPHA format not supported in WebGPU\";\n                    default:\n                        return WebGPUConstants.TextureFormat.RGBA8Unorm;\n                }\n            case 4:\n                switch (format) {\n                    case 8:\n                        return WebGPUConstants.TextureFormat.R16Sint;\n                    case 9:\n                        return WebGPUConstants.TextureFormat.RG16Sint;\n                    case 10:\n                        throw \"TEXTUREFORMAT_RGB_INTEGER format not supported in WebGPU\";\n                    case 11:\n                        return WebGPUConstants.TextureFormat.RGBA16Sint;\n                    default:\n                        return WebGPUConstants.TextureFormat.RGBA16Sint;\n                }\n            case 5:\n                switch (format) {\n                    case 8:\n                        return WebGPUConstants.TextureFormat.R16Uint;\n                    case 9:\n                        return WebGPUConstants.TextureFormat.RG16Uint;\n                    case 10:\n                        throw \"TEXTUREFORMAT_RGB_INTEGER format not supported in WebGPU\";\n                    case 11:\n                        return WebGPUConstants.TextureFormat.RGBA16Uint;\n                    default:\n                        return WebGPUConstants.TextureFormat.RGBA16Uint;\n                }\n            case 6:\n                switch (format) {\n                    case 8:\n                        return WebGPUConstants.TextureFormat.R32Sint;\n                    case 9:\n                        return WebGPUConstants.TextureFormat.RG32Sint;\n                    case 10:\n                        throw \"TEXTUREFORMAT_RGB_INTEGER format not supported in WebGPU\";\n                    case 11:\n                        return WebGPUConstants.TextureFormat.RGBA32Sint;\n                    default:\n                        return WebGPUConstants.TextureFormat.RGBA32Sint;\n                }\n            case 7: // Refers to UNSIGNED_INT\n                switch (format) {\n                    case 8:\n                        return WebGPUConstants.TextureFormat.R32Uint;\n                    case 9:\n                        return WebGPUConstants.TextureFormat.RG32Uint;\n                    case 10:\n                        throw \"TEXTUREFORMAT_RGB_INTEGER format not supported in WebGPU\";\n                    case 11:\n                        return WebGPUConstants.TextureFormat.RGBA32Uint;\n                    default:\n                        return WebGPUConstants.TextureFormat.RGBA32Uint;\n                }\n            case 1:\n                switch (format) {\n                    case 6:\n                        return WebGPUConstants.TextureFormat.R32Float; // By default. Other possibility is R16Float.\n                    case 7:\n                        return WebGPUConstants.TextureFormat.RG32Float; // By default. Other possibility is RG16Float.\n                    case 4:\n                        throw \"TEXTUREFORMAT_RGB format not supported in WebGPU\";\n                    case 5:\n                        return WebGPUConstants.TextureFormat.RGBA32Float; // By default. Other possibility is RGBA16Float.\n                    default:\n                        return WebGPUConstants.TextureFormat.RGBA32Float;\n                }\n            case 2:\n                switch (format) {\n                    case 6:\n                        return WebGPUConstants.TextureFormat.R16Float;\n                    case 7:\n                        return WebGPUConstants.TextureFormat.RG16Float;\n                    case 4:\n                        throw \"TEXTUREFORMAT_RGB format not supported in WebGPU\";\n                    case 5:\n                        return WebGPUConstants.TextureFormat.RGBA16Float;\n                    default:\n                        return WebGPUConstants.TextureFormat.RGBA16Float;\n                }\n            case 10:\n                throw \"TEXTURETYPE_UNSIGNED_SHORT_5_6_5 format not supported in WebGPU\";\n            case 13:\n                throw \"TEXTURETYPE_UNSIGNED_INT_10F_11F_11F_REV format not supported in WebGPU\";\n            case 14:\n                throw \"TEXTURETYPE_UNSIGNED_INT_5_9_9_9_REV format not supported in WebGPU\";\n            case 8:\n                throw \"TEXTURETYPE_UNSIGNED_SHORT_4_4_4_4 format not supported in WebGPU\";\n            case 9:\n                throw \"TEXTURETYPE_UNSIGNED_SHORT_5_5_5_1 format not supported in WebGPU\";\n            case 11:\n                switch (format) {\n                    case 5:\n                        return WebGPUConstants.TextureFormat.RGB10A2Unorm;\n                    case 11:\n                        throw \"TEXTUREFORMAT_RGBA_INTEGER format not supported in WebGPU when type is TEXTURETYPE_UNSIGNED_INT_2_10_10_10_REV\";\n                    default:\n                        return WebGPUConstants.TextureFormat.RGB10A2Unorm;\n                }\n        }\n        return useSRGBBuffer ? WebGPUConstants.TextureFormat.RGBA8UnormSRGB : WebGPUConstants.TextureFormat.RGBA8Unorm;\n    };\n    WebGPUTextureHelper.GetNumChannelsFromWebGPUTextureFormat = function (format) {\n        switch (format) {\n            case WebGPUConstants.TextureFormat.R8Unorm:\n            case WebGPUConstants.TextureFormat.R8Snorm:\n            case WebGPUConstants.TextureFormat.R8Uint:\n            case WebGPUConstants.TextureFormat.R8Sint:\n            case WebGPUConstants.TextureFormat.BC4RUnorm:\n            case WebGPUConstants.TextureFormat.BC4RSnorm:\n            case WebGPUConstants.TextureFormat.R16Uint:\n            case WebGPUConstants.TextureFormat.R16Sint:\n            case WebGPUConstants.TextureFormat.Depth16Unorm:\n            case WebGPUConstants.TextureFormat.R16Float:\n            case WebGPUConstants.TextureFormat.R32Uint:\n            case WebGPUConstants.TextureFormat.R32Sint:\n            case WebGPUConstants.TextureFormat.R32Float:\n            case WebGPUConstants.TextureFormat.Depth32Float:\n            case WebGPUConstants.TextureFormat.Stencil8:\n            case WebGPUConstants.TextureFormat.Depth24Plus:\n            case WebGPUConstants.TextureFormat.EACR11Unorm:\n            case WebGPUConstants.TextureFormat.EACR11Snorm:\n                return 1;\n            case WebGPUConstants.TextureFormat.RG8Unorm:\n            case WebGPUConstants.TextureFormat.RG8Snorm:\n            case WebGPUConstants.TextureFormat.RG8Uint:\n            case WebGPUConstants.TextureFormat.RG8Sint:\n            case WebGPUConstants.TextureFormat.Depth24UnormStencil8: // composite format - let's say it's byte...\n            case WebGPUConstants.TextureFormat.Depth32FloatStencil8: // composite format - let's say it's byte...\n            case WebGPUConstants.TextureFormat.BC5RGUnorm:\n            case WebGPUConstants.TextureFormat.BC5RGSnorm:\n            case WebGPUConstants.TextureFormat.RG16Uint:\n            case WebGPUConstants.TextureFormat.RG16Sint:\n            case WebGPUConstants.TextureFormat.RG16Float:\n            case WebGPUConstants.TextureFormat.RG32Uint:\n            case WebGPUConstants.TextureFormat.RG32Sint:\n            case WebGPUConstants.TextureFormat.RG32Float:\n            case WebGPUConstants.TextureFormat.Depth24PlusStencil8:\n            case WebGPUConstants.TextureFormat.EACRG11Unorm:\n            case WebGPUConstants.TextureFormat.EACRG11Snorm:\n                return 2;\n            case WebGPUConstants.TextureFormat.RGB9E5UFloat: // composite format - let's say it's byte...\n            case WebGPUConstants.TextureFormat.RG11B10UFloat: // composite format - let's say it's byte...\n            case WebGPUConstants.TextureFormat.BC6HRGBUFloat:\n            case WebGPUConstants.TextureFormat.BC6HRGBFloat:\n            case WebGPUConstants.TextureFormat.ETC2RGB8Unorm:\n            case WebGPUConstants.TextureFormat.ETC2RGB8UnormSRGB:\n                return 3;\n            case WebGPUConstants.TextureFormat.RGBA8Unorm:\n            case WebGPUConstants.TextureFormat.RGBA8UnormSRGB:\n            case WebGPUConstants.TextureFormat.RGBA8Snorm:\n            case WebGPUConstants.TextureFormat.RGBA8Uint:\n            case WebGPUConstants.TextureFormat.RGBA8Sint:\n            case WebGPUConstants.TextureFormat.BGRA8Unorm:\n            case WebGPUConstants.TextureFormat.BGRA8UnormSRGB:\n            case WebGPUConstants.TextureFormat.RGB10A2Unorm: // composite format - let's say it's byte...\n            case WebGPUConstants.TextureFormat.BC7RGBAUnorm:\n            case WebGPUConstants.TextureFormat.BC7RGBAUnormSRGB:\n            case WebGPUConstants.TextureFormat.BC3RGBAUnorm:\n            case WebGPUConstants.TextureFormat.BC3RGBAUnormSRGB:\n            case WebGPUConstants.TextureFormat.BC2RGBAUnorm:\n            case WebGPUConstants.TextureFormat.BC2RGBAUnormSRGB:\n            case WebGPUConstants.TextureFormat.BC1RGBAUnorm:\n            case WebGPUConstants.TextureFormat.BC1RGBAUnormSRGB:\n            case WebGPUConstants.TextureFormat.RGBA16Uint:\n            case WebGPUConstants.TextureFormat.RGBA16Sint:\n            case WebGPUConstants.TextureFormat.RGBA16Float:\n            case WebGPUConstants.TextureFormat.RGBA32Uint:\n            case WebGPUConstants.TextureFormat.RGBA32Sint:\n            case WebGPUConstants.TextureFormat.RGBA32Float:\n            case WebGPUConstants.TextureFormat.ETC2RGB8A1Unorm:\n            case WebGPUConstants.TextureFormat.ETC2RGB8A1UnormSRGB:\n            case WebGPUConstants.TextureFormat.ETC2RGBA8Unorm:\n            case WebGPUConstants.TextureFormat.ETC2RGBA8UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC4x4Unorm:\n            case WebGPUConstants.TextureFormat.ASTC4x4UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC5x4Unorm:\n            case WebGPUConstants.TextureFormat.ASTC5x4UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC5x5Unorm:\n            case WebGPUConstants.TextureFormat.ASTC5x5UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC6x5Unorm:\n            case WebGPUConstants.TextureFormat.ASTC6x5UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC6x6Unorm:\n            case WebGPUConstants.TextureFormat.ASTC6x6UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC8x5Unorm:\n            case WebGPUConstants.TextureFormat.ASTC8x5UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC8x6Unorm:\n            case WebGPUConstants.TextureFormat.ASTC8x6UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC8x8Unorm:\n            case WebGPUConstants.TextureFormat.ASTC8x8UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC10x5Unorm:\n            case WebGPUConstants.TextureFormat.ASTC10x5UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC10x6Unorm:\n            case WebGPUConstants.TextureFormat.ASTC10x6UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC10x8Unorm:\n            case WebGPUConstants.TextureFormat.ASTC10x8UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC10x10Unorm:\n            case WebGPUConstants.TextureFormat.ASTC10x10UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC12x10Unorm:\n            case WebGPUConstants.TextureFormat.ASTC12x10UnormSRGB:\n            case WebGPUConstants.TextureFormat.ASTC12x12Unorm:\n            case WebGPUConstants.TextureFormat.ASTC12x12UnormSRGB:\n                return 4;\n        }\n        throw \"Unknown format \".concat(format, \"!\");\n    };\n    WebGPUTextureHelper.HasStencilAspect = function (format) {\n        switch (format) {\n            case WebGPUConstants.TextureFormat.Stencil8:\n            case WebGPUConstants.TextureFormat.Depth24UnormStencil8:\n            case WebGPUConstants.TextureFormat.Depth32FloatStencil8:\n            case WebGPUConstants.TextureFormat.Depth24PlusStencil8:\n                return true;\n        }\n        return false;\n    };\n    WebGPUTextureHelper.HasDepthAndStencilAspects = function (format) {\n        switch (format) {\n            case WebGPUConstants.TextureFormat.Depth24UnormStencil8:\n            case WebGPUConstants.TextureFormat.Depth32FloatStencil8:\n            case WebGPUConstants.TextureFormat.Depth24PlusStencil8:\n                return true;\n        }\n        return false;\n    };\n    WebGPUTextureHelper.prototype.invertYPreMultiplyAlpha = function (gpuOrHdwTexture, width, height, format, invertY, premultiplyAlpha, faceIndex, mipLevel, layers, ofstX, ofstY, rectWidth, rectHeight, commandEncoder, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    allowGPUOptimization) {\n        var _a, _b, _c, _d, _e, _f;\n        if (invertY === void 0) { invertY = false; }\n        if (premultiplyAlpha === void 0) { premultiplyAlpha = false; }\n        if (faceIndex === void 0) { faceIndex = 0; }\n        if (mipLevel === void 0) { mipLevel = 0; }\n        if (layers === void 0) { layers = 1; }\n        if (ofstX === void 0) { ofstX = 0; }\n        if (ofstY === void 0) { ofstY = 0; }\n        if (rectWidth === void 0) { rectWidth = 0; }\n        if (rectHeight === void 0) { rectHeight = 0; }\n        var useRect = rectWidth !== 0;\n        var useOwnCommandEncoder = commandEncoder === undefined;\n        var _g = this._getPipeline(format, useRect ? PipelineType.InvertYPremultiplyAlphaWithOfst : PipelineType.InvertYPremultiplyAlpha, {\n            invertY: invertY,\n            premultiplyAlpha: premultiplyAlpha,\n        }), pipeline = _g[0], bindGroupLayout = _g[1];\n        faceIndex = Math.max(faceIndex, 0);\n        if (useOwnCommandEncoder) {\n            commandEncoder = this._device.createCommandEncoder({});\n        }\n        (_b = (_a = commandEncoder).pushDebugGroup) === null || _b === void 0 ? void 0 : _b.call(_a, \"internal process texture - invertY=\".concat(invertY, \" premultiplyAlpha=\").concat(premultiplyAlpha));\n        var gpuTexture;\n        if (WebGPUTextureHelper._IsHardwareTexture(gpuOrHdwTexture)) {\n            gpuTexture = gpuOrHdwTexture.underlyingResource;\n            if (!(invertY && !premultiplyAlpha && layers === 1 && faceIndex === 0)) {\n                // we optimize only for the most likely case (invertY=true, premultiplyAlpha=false, layers=1, faceIndex=0) to avoid dealing with big caches\n                gpuOrHdwTexture = undefined;\n            }\n        }\n        else {\n            gpuTexture = gpuOrHdwTexture;\n            gpuOrHdwTexture = undefined;\n        }\n        if (!gpuTexture) {\n            return;\n        }\n        if (useRect) {\n            this._bufferManager.setRawData(this._ubCopyWithOfst, 0, new Float32Array([ofstX, ofstY, rectWidth, rectHeight]), 0, 4 * 4);\n        }\n        var webgpuHardwareTexture = gpuOrHdwTexture;\n        var outputTexture = (_c = webgpuHardwareTexture === null || webgpuHardwareTexture === void 0 ? void 0 : webgpuHardwareTexture._copyInvertYTempTexture) !== null && _c !== void 0 ? _c : this.createTexture({ width: width, height: height, layers: 1 }, false, false, false, false, false, format, 1, commandEncoder, WebGPUConstants.TextureUsage.CopySrc | WebGPUConstants.TextureUsage.RenderAttachment | WebGPUConstants.TextureUsage.TextureBinding);\n        var renderPassDescriptor = (_d = webgpuHardwareTexture === null || webgpuHardwareTexture === void 0 ? void 0 : webgpuHardwareTexture._copyInvertYRenderPassDescr) !== null && _d !== void 0 ? _d : {\n            colorAttachments: [\n                {\n                    view: outputTexture.createView({\n                        format: format,\n                        dimension: WebGPUConstants.TextureViewDimension.E2d,\n                        baseMipLevel: 0,\n                        mipLevelCount: 1,\n                        arrayLayerCount: 1,\n                        baseArrayLayer: 0,\n                    }),\n                    loadOp: WebGPUConstants.LoadOp.Load,\n                    storeOp: WebGPUConstants.StoreOp.Store,\n                },\n            ],\n        };\n        var passEncoder = commandEncoder.beginRenderPass(renderPassDescriptor);\n        var bindGroup = useRect ? webgpuHardwareTexture === null || webgpuHardwareTexture === void 0 ? void 0 : webgpuHardwareTexture._copyInvertYBindGroupWithOfst : webgpuHardwareTexture === null || webgpuHardwareTexture === void 0 ? void 0 : webgpuHardwareTexture._copyInvertYBindGroup;\n        if (!bindGroup) {\n            var descriptor = {\n                layout: bindGroupLayout,\n                entries: [\n                    {\n                        binding: 0,\n                        resource: gpuTexture.createView({\n                            format: format,\n                            dimension: WebGPUConstants.TextureViewDimension.E2d,\n                            baseMipLevel: mipLevel,\n                            mipLevelCount: 1,\n                            arrayLayerCount: layers,\n                            baseArrayLayer: faceIndex,\n                        }),\n                    },\n                ],\n            };\n            if (useRect) {\n                descriptor.entries.push({\n                    binding: 1,\n                    resource: {\n                        buffer: this._ubCopyWithOfst,\n                    },\n                });\n            }\n            bindGroup = this._device.createBindGroup(descriptor);\n        }\n        passEncoder.setPipeline(pipeline);\n        passEncoder.setBindGroup(0, bindGroup);\n        passEncoder.draw(4, 1, 0, 0);\n        passEncoder.end();\n        commandEncoder.copyTextureToTexture({\n            texture: outputTexture,\n        }, {\n            texture: gpuTexture,\n            mipLevel: mipLevel,\n            origin: {\n                x: 0,\n                y: 0,\n                z: faceIndex,\n            },\n        }, {\n            width: width,\n            height: height,\n            depthOrArrayLayers: 1,\n        });\n        if (webgpuHardwareTexture) {\n            webgpuHardwareTexture._copyInvertYTempTexture = outputTexture;\n            webgpuHardwareTexture._copyInvertYRenderPassDescr = renderPassDescriptor;\n            if (useRect) {\n                webgpuHardwareTexture._copyInvertYBindGroupWithOfst = bindGroup;\n            }\n            else {\n                webgpuHardwareTexture._copyInvertYBindGroup = bindGroup;\n            }\n        }\n        else {\n            this._deferredReleaseTextures.push([outputTexture, null]);\n        }\n        (_f = (_e = commandEncoder).popDebugGroup) === null || _f === void 0 ? void 0 : _f.call(_e);\n        if (useOwnCommandEncoder) {\n            this._device.queue.submit([commandEncoder.finish()]);\n            commandEncoder = null;\n        }\n    };\n    WebGPUTextureHelper.prototype.copyWithInvertY = function (srcTextureView, format, renderPassDescriptor, commandEncoder) {\n        var _a, _b, _c, _d;\n        var useOwnCommandEncoder = commandEncoder === undefined;\n        var _e = this._getPipeline(format, PipelineType.InvertYPremultiplyAlpha, { invertY: true, premultiplyAlpha: false }), pipeline = _e[0], bindGroupLayout = _e[1];\n        if (useOwnCommandEncoder) {\n            commandEncoder = this._device.createCommandEncoder({});\n        }\n        (_b = (_a = commandEncoder).pushDebugGroup) === null || _b === void 0 ? void 0 : _b.call(_a, \"internal copy texture with invertY\");\n        var passEncoder = commandEncoder.beginRenderPass(renderPassDescriptor);\n        var bindGroup = this._device.createBindGroup({\n            layout: bindGroupLayout,\n            entries: [\n                {\n                    binding: 0,\n                    resource: srcTextureView,\n                },\n            ],\n        });\n        passEncoder.setPipeline(pipeline);\n        passEncoder.setBindGroup(0, bindGroup);\n        passEncoder.draw(4, 1, 0, 0);\n        passEncoder.end();\n        (_d = (_c = commandEncoder).popDebugGroup) === null || _d === void 0 ? void 0 : _d.call(_c);\n        if (useOwnCommandEncoder) {\n            this._device.queue.submit([commandEncoder.finish()]);\n            commandEncoder = null;\n        }\n    };\n    //------------------------------------------------------------------------------\n    //                               Creation\n    //------------------------------------------------------------------------------\n    WebGPUTextureHelper.prototype.createTexture = function (imageBitmap, hasMipmaps, generateMipmaps, invertY, premultiplyAlpha, is3D, format, sampleCount, commandEncoder, usage, additionalUsages) {\n        if (hasMipmaps === void 0) { hasMipmaps = false; }\n        if (generateMipmaps === void 0) { generateMipmaps = false; }\n        if (invertY === void 0) { invertY = false; }\n        if (premultiplyAlpha === void 0) { premultiplyAlpha = false; }\n        if (is3D === void 0) { is3D = false; }\n        if (format === void 0) { format = WebGPUConstants.TextureFormat.RGBA8Unorm; }\n        if (sampleCount === void 0) { sampleCount = 1; }\n        if (usage === void 0) { usage = -1; }\n        if (additionalUsages === void 0) { additionalUsages = 0; }\n        if (sampleCount > 1) {\n            // WebGPU only supports 1 or 4\n            sampleCount = 4;\n        }\n        var layerCount = imageBitmap.layers || 1;\n        var textureSize = {\n            width: imageBitmap.width,\n            height: imageBitmap.height,\n            depthOrArrayLayers: layerCount,\n        };\n        var isCompressedFormat = WebGPUTextureHelper.IsCompressedFormat(format);\n        var mipLevelCount = hasMipmaps ? WebGPUTextureHelper.ComputeNumMipmapLevels(imageBitmap.width, imageBitmap.height) : 1;\n        var usages = usage >= 0 ? usage : WebGPUConstants.TextureUsage.CopySrc | WebGPUConstants.TextureUsage.CopyDst | WebGPUConstants.TextureUsage.TextureBinding;\n        additionalUsages |= hasMipmaps && !isCompressedFormat ? WebGPUConstants.TextureUsage.CopySrc | WebGPUConstants.TextureUsage.RenderAttachment : 0;\n        if (!isCompressedFormat && !is3D) {\n            // we don't know in advance if the texture will be updated with copyExternalImageToTexture (which requires to have those flags), so we need to force the flags all the times\n            additionalUsages |= WebGPUConstants.TextureUsage.RenderAttachment | WebGPUConstants.TextureUsage.CopyDst;\n        }\n        var gpuTexture = this._device.createTexture({\n            size: textureSize,\n            dimension: is3D ? WebGPUConstants.TextureDimension.E3d : WebGPUConstants.TextureDimension.E2d,\n            format: format,\n            usage: usages | additionalUsages,\n            sampleCount: sampleCount,\n            mipLevelCount: mipLevelCount,\n        });\n        if (WebGPUTextureHelper.IsImageBitmap(imageBitmap)) {\n            this.updateTexture(imageBitmap, gpuTexture, imageBitmap.width, imageBitmap.height, layerCount, format, 0, 0, invertY, premultiplyAlpha, 0, 0);\n            if (hasMipmaps && generateMipmaps) {\n                this.generateMipmaps(gpuTexture, format, mipLevelCount, 0, commandEncoder);\n            }\n        }\n        return gpuTexture;\n    };\n    WebGPUTextureHelper.prototype.createCubeTexture = function (imageBitmaps, hasMipmaps, generateMipmaps, invertY, premultiplyAlpha, format, sampleCount, commandEncoder, usage, additionalUsages) {\n        if (hasMipmaps === void 0) { hasMipmaps = false; }\n        if (generateMipmaps === void 0) { generateMipmaps = false; }\n        if (invertY === void 0) { invertY = false; }\n        if (premultiplyAlpha === void 0) { premultiplyAlpha = false; }\n        if (format === void 0) { format = WebGPUConstants.TextureFormat.RGBA8Unorm; }\n        if (sampleCount === void 0) { sampleCount = 1; }\n        if (usage === void 0) { usage = -1; }\n        if (additionalUsages === void 0) { additionalUsages = 0; }\n        if (sampleCount > 1) {\n            // WebGPU only supports 1 or 4\n            sampleCount = 4;\n        }\n        var width = WebGPUTextureHelper.IsImageBitmapArray(imageBitmaps) ? imageBitmaps[0].width : imageBitmaps.width;\n        var height = WebGPUTextureHelper.IsImageBitmapArray(imageBitmaps) ? imageBitmaps[0].height : imageBitmaps.height;\n        var isCompressedFormat = WebGPUTextureHelper.IsCompressedFormat(format);\n        var mipLevelCount = hasMipmaps ? WebGPUTextureHelper.ComputeNumMipmapLevels(width, height) : 1;\n        var usages = usage >= 0 ? usage : WebGPUConstants.TextureUsage.CopySrc | WebGPUConstants.TextureUsage.CopyDst | WebGPUConstants.TextureUsage.TextureBinding;\n        additionalUsages |= hasMipmaps && !isCompressedFormat ? WebGPUConstants.TextureUsage.CopySrc | WebGPUConstants.TextureUsage.RenderAttachment : 0;\n        if (!isCompressedFormat) {\n            // we don't know in advance if the texture will be updated with copyExternalImageToTexture (which requires to have those flags), so we need to force the flags all the times\n            additionalUsages |= WebGPUConstants.TextureUsage.RenderAttachment | WebGPUConstants.TextureUsage.CopyDst;\n        }\n        var gpuTexture = this._device.createTexture({\n            size: {\n                width: width,\n                height: height,\n                depthOrArrayLayers: 6,\n            },\n            dimension: WebGPUConstants.TextureDimension.E2d,\n            format: format,\n            usage: usages | additionalUsages,\n            sampleCount: sampleCount,\n            mipLevelCount: mipLevelCount,\n        });\n        if (WebGPUTextureHelper.IsImageBitmapArray(imageBitmaps)) {\n            this.updateCubeTextures(imageBitmaps, gpuTexture, width, height, format, invertY, premultiplyAlpha, 0, 0);\n            if (hasMipmaps && generateMipmaps) {\n                this.generateCubeMipmaps(gpuTexture, format, mipLevelCount, commandEncoder);\n            }\n        }\n        return gpuTexture;\n    };\n    WebGPUTextureHelper.prototype.generateCubeMipmaps = function (gpuTexture, format, mipLevelCount, commandEncoder) {\n        var _a, _b, _c, _d;\n        var useOwnCommandEncoder = commandEncoder === undefined;\n        if (useOwnCommandEncoder) {\n            commandEncoder = this._device.createCommandEncoder({});\n        }\n        (_b = (_a = commandEncoder).pushDebugGroup) === null || _b === void 0 ? void 0 : _b.call(_a, \"create cube mipmaps - \".concat(mipLevelCount, \" levels\"));\n        for (var f = 0; f < 6; ++f) {\n            this.generateMipmaps(gpuTexture, format, mipLevelCount, f, commandEncoder);\n        }\n        (_d = (_c = commandEncoder).popDebugGroup) === null || _d === void 0 ? void 0 : _d.call(_c);\n        if (useOwnCommandEncoder) {\n            this._device.queue.submit([commandEncoder.finish()]);\n            commandEncoder = null;\n        }\n    };\n    WebGPUTextureHelper.prototype.generateMipmaps = function (gpuOrHdwTexture, format, mipLevelCount, faceIndex, commandEncoder) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        if (faceIndex === void 0) { faceIndex = 0; }\n        var useOwnCommandEncoder = commandEncoder === undefined;\n        var _j = this._getPipeline(format), pipeline = _j[0], bindGroupLayout = _j[1];\n        faceIndex = Math.max(faceIndex, 0);\n        if (useOwnCommandEncoder) {\n            commandEncoder = this._device.createCommandEncoder({});\n        }\n        (_b = (_a = commandEncoder).pushDebugGroup) === null || _b === void 0 ? void 0 : _b.call(_a, \"create mipmaps for face #\".concat(faceIndex, \" - \").concat(mipLevelCount, \" levels\"));\n        var gpuTexture;\n        if (WebGPUTextureHelper._IsHardwareTexture(gpuOrHdwTexture)) {\n            gpuTexture = gpuOrHdwTexture.underlyingResource;\n            gpuOrHdwTexture._mipmapGenRenderPassDescr = gpuOrHdwTexture._mipmapGenRenderPassDescr || [];\n            gpuOrHdwTexture._mipmapGenBindGroup = gpuOrHdwTexture._mipmapGenBindGroup || [];\n        }\n        else {\n            gpuTexture = gpuOrHdwTexture;\n            gpuOrHdwTexture = undefined;\n        }\n        if (!gpuTexture) {\n            return;\n        }\n        var webgpuHardwareTexture = gpuOrHdwTexture;\n        for (var i = 1; i < mipLevelCount; ++i) {\n            var renderPassDescriptor = (_d = (_c = webgpuHardwareTexture === null || webgpuHardwareTexture === void 0 ? void 0 : webgpuHardwareTexture._mipmapGenRenderPassDescr[faceIndex]) === null || _c === void 0 ? void 0 : _c[i - 1]) !== null && _d !== void 0 ? _d : {\n                colorAttachments: [\n                    {\n                        view: gpuTexture.createView({\n                            format: format,\n                            dimension: WebGPUConstants.TextureViewDimension.E2d,\n                            baseMipLevel: i,\n                            mipLevelCount: 1,\n                            arrayLayerCount: 1,\n                            baseArrayLayer: faceIndex,\n                        }),\n                        loadOp: WebGPUConstants.LoadOp.Load,\n                        storeOp: WebGPUConstants.StoreOp.Store,\n                    },\n                ],\n            };\n            if (webgpuHardwareTexture) {\n                webgpuHardwareTexture._mipmapGenRenderPassDescr[faceIndex] = webgpuHardwareTexture._mipmapGenRenderPassDescr[faceIndex] || [];\n                webgpuHardwareTexture._mipmapGenRenderPassDescr[faceIndex][i - 1] = renderPassDescriptor;\n            }\n            var passEncoder = commandEncoder.beginRenderPass(renderPassDescriptor);\n            var bindGroup = (_f = (_e = webgpuHardwareTexture === null || webgpuHardwareTexture === void 0 ? void 0 : webgpuHardwareTexture._mipmapGenBindGroup[faceIndex]) === null || _e === void 0 ? void 0 : _e[i - 1]) !== null && _f !== void 0 ? _f : this._device.createBindGroup({\n                layout: bindGroupLayout,\n                entries: [\n                    {\n                        binding: 0,\n                        resource: this._mipmapSampler,\n                    },\n                    {\n                        binding: 1,\n                        resource: gpuTexture.createView({\n                            format: format,\n                            dimension: WebGPUConstants.TextureViewDimension.E2d,\n                            baseMipLevel: i - 1,\n                            mipLevelCount: 1,\n                            arrayLayerCount: 1,\n                            baseArrayLayer: faceIndex,\n                        }),\n                    },\n                ],\n            });\n            if (webgpuHardwareTexture) {\n                webgpuHardwareTexture._mipmapGenBindGroup[faceIndex] = webgpuHardwareTexture._mipmapGenBindGroup[faceIndex] || [];\n                webgpuHardwareTexture._mipmapGenBindGroup[faceIndex][i - 1] = bindGroup;\n            }\n            passEncoder.setPipeline(pipeline);\n            passEncoder.setBindGroup(0, bindGroup);\n            passEncoder.draw(4, 1, 0, 0);\n            passEncoder.end();\n        }\n        (_h = (_g = commandEncoder).popDebugGroup) === null || _h === void 0 ? void 0 : _h.call(_g);\n        if (useOwnCommandEncoder) {\n            this._device.queue.submit([commandEncoder.finish()]);\n            commandEncoder = null;\n        }\n    };\n    WebGPUTextureHelper.prototype.createGPUTextureForInternalTexture = function (texture, width, height, depth, creationFlags) {\n        if (!texture._hardwareTexture) {\n            texture._hardwareTexture = new WebGPUHardwareTexture();\n        }\n        if (width === undefined) {\n            width = texture.width;\n        }\n        if (height === undefined) {\n            height = texture.height;\n        }\n        if (depth === undefined) {\n            depth = texture.depth;\n        }\n        var gpuTextureWrapper = texture._hardwareTexture;\n        var isStorageTexture = ((creationFlags !== null && creationFlags !== void 0 ? creationFlags : 0) & 1) !== 0;\n        gpuTextureWrapper.format = WebGPUTextureHelper.GetWebGPUTextureFormat(texture.type, texture.format, texture._useSRGBBuffer);\n        gpuTextureWrapper.textureUsages =\n            texture._source === InternalTextureSource.RenderTarget || texture.source === InternalTextureSource.MultiRenderTarget\n                ? WebGPUConstants.TextureUsage.TextureBinding | WebGPUConstants.TextureUsage.CopySrc | WebGPUConstants.TextureUsage.RenderAttachment\n                : texture._source === InternalTextureSource.DepthStencil\n                    ? WebGPUConstants.TextureUsage.TextureBinding | WebGPUConstants.TextureUsage.RenderAttachment\n                    : -1;\n        gpuTextureWrapper.textureAdditionalUsages = isStorageTexture ? WebGPUConstants.TextureUsage.StorageBinding : 0;\n        var hasMipMaps = texture.generateMipMaps;\n        var layerCount = depth || 1;\n        var mipmapCount;\n        if (texture._maxLodLevel !== null) {\n            mipmapCount = texture._maxLodLevel;\n        }\n        else {\n            mipmapCount = hasMipMaps ? WebGPUTextureHelper.ComputeNumMipmapLevels(width, height) : 1;\n        }\n        if (texture.isCube) {\n            var gpuTexture = this.createCubeTexture({ width: width, height: height }, texture.generateMipMaps, texture.generateMipMaps, texture.invertY, false, gpuTextureWrapper.format, 1, this._commandEncoderForCreation, gpuTextureWrapper.textureUsages, gpuTextureWrapper.textureAdditionalUsages);\n            gpuTextureWrapper.set(gpuTexture);\n            gpuTextureWrapper.createView({\n                format: gpuTextureWrapper.format,\n                dimension: WebGPUConstants.TextureViewDimension.Cube,\n                mipLevelCount: mipmapCount,\n                baseArrayLayer: 0,\n                baseMipLevel: 0,\n                arrayLayerCount: 6,\n                aspect: WebGPUTextureHelper.HasDepthAndStencilAspects(gpuTextureWrapper.format) ? WebGPUConstants.TextureAspect.DepthOnly : WebGPUConstants.TextureAspect.All,\n            }, isStorageTexture);\n        }\n        else {\n            var gpuTexture = this.createTexture({ width: width, height: height, layers: layerCount }, texture.generateMipMaps, texture.generateMipMaps, texture.invertY, false, texture.is3D, gpuTextureWrapper.format, 1, this._commandEncoderForCreation, gpuTextureWrapper.textureUsages, gpuTextureWrapper.textureAdditionalUsages);\n            gpuTextureWrapper.set(gpuTexture);\n            gpuTextureWrapper.createView({\n                format: gpuTextureWrapper.format,\n                dimension: texture.is2DArray\n                    ? WebGPUConstants.TextureViewDimension.E2dArray\n                    : texture.is3D\n                        ? WebGPUConstants.TextureDimension.E3d\n                        : WebGPUConstants.TextureViewDimension.E2d,\n                mipLevelCount: mipmapCount,\n                baseArrayLayer: 0,\n                baseMipLevel: 0,\n                arrayLayerCount: texture.is3D ? 1 : layerCount,\n                aspect: WebGPUTextureHelper.HasDepthAndStencilAspects(gpuTextureWrapper.format) ? WebGPUConstants.TextureAspect.DepthOnly : WebGPUConstants.TextureAspect.All,\n            }, isStorageTexture);\n        }\n        texture.width = texture.baseWidth = width;\n        texture.height = texture.baseHeight = height;\n        texture.depth = texture.baseDepth = depth;\n        this.createMSAATexture(texture, texture.samples);\n        return gpuTextureWrapper;\n    };\n    WebGPUTextureHelper.prototype.createMSAATexture = function (texture, samples) {\n        var gpuTextureWrapper = texture._hardwareTexture;\n        if (gpuTextureWrapper === null || gpuTextureWrapper === void 0 ? void 0 : gpuTextureWrapper.msaaTexture) {\n            this.releaseTexture(gpuTextureWrapper.msaaTexture);\n            gpuTextureWrapper.msaaTexture = null;\n        }\n        if (!gpuTextureWrapper || (samples !== null && samples !== void 0 ? samples : 1) <= 1) {\n            return;\n        }\n        var width = texture.width;\n        var height = texture.height;\n        var layerCount = texture.depth || 1;\n        if (texture.isCube) {\n            var gpuMSAATexture = this.createCubeTexture({ width: width, height: height }, false, false, texture.invertY, false, gpuTextureWrapper.format, samples, this._commandEncoderForCreation, gpuTextureWrapper.textureUsages, gpuTextureWrapper.textureAdditionalUsages);\n            gpuTextureWrapper.msaaTexture = gpuMSAATexture;\n        }\n        else {\n            var gpuMSAATexture = this.createTexture({ width: width, height: height, layers: layerCount }, false, false, texture.invertY, false, texture.is3D, gpuTextureWrapper.format, samples, this._commandEncoderForCreation, gpuTextureWrapper.textureUsages, gpuTextureWrapper.textureAdditionalUsages);\n            gpuTextureWrapper.msaaTexture = gpuMSAATexture;\n        }\n    };\n    //------------------------------------------------------------------------------\n    //                                  Update\n    //------------------------------------------------------------------------------\n    WebGPUTextureHelper.prototype.updateCubeTextures = function (imageBitmaps, gpuTexture, width, height, format, invertY, premultiplyAlpha, offsetX, offsetY) {\n        if (invertY === void 0) { invertY = false; }\n        if (premultiplyAlpha === void 0) { premultiplyAlpha = false; }\n        if (offsetX === void 0) { offsetX = 0; }\n        if (offsetY === void 0) { offsetY = 0; }\n        var faces = [0, 3, 1, 4, 2, 5];\n        for (var f = 0; f < faces.length; ++f) {\n            var imageBitmap = imageBitmaps[faces[f]];\n            this.updateTexture(imageBitmap, gpuTexture, width, height, 1, format, f, 0, invertY, premultiplyAlpha, offsetX, offsetY);\n        }\n    };\n    // TODO WEBGPU handle data source not being in the same format than the destination texture?\n    WebGPUTextureHelper.prototype.updateTexture = function (imageBitmap, texture, width, height, layers, format, faceIndex, mipLevel, invertY, premultiplyAlpha, offsetX, offsetY, allowGPUOptimization) {\n        if (faceIndex === void 0) { faceIndex = 0; }\n        if (mipLevel === void 0) { mipLevel = 0; }\n        if (invertY === void 0) { invertY = false; }\n        if (premultiplyAlpha === void 0) { premultiplyAlpha = false; }\n        if (offsetX === void 0) { offsetX = 0; }\n        if (offsetY === void 0) { offsetY = 0; }\n        var gpuTexture = WebGPUTextureHelper._IsInternalTexture(texture) ? texture._hardwareTexture.underlyingResource : texture;\n        var blockInformation = WebGPUTextureHelper._GetBlockInformationFromFormat(format);\n        var gpuOrHdwTexture = WebGPUTextureHelper._IsInternalTexture(texture) ? texture._hardwareTexture : texture;\n        var textureCopyView = {\n            texture: gpuTexture,\n            origin: {\n                x: offsetX,\n                y: offsetY,\n                z: Math.max(faceIndex, 0),\n            },\n            mipLevel: mipLevel,\n            premultipliedAlpha: premultiplyAlpha,\n        };\n        var textureExtent = {\n            width: Math.ceil(width / blockInformation.width) * blockInformation.width,\n            height: Math.ceil(height / blockInformation.height) * blockInformation.height,\n            depthOrArrayLayers: layers || 1,\n        };\n        if (imageBitmap.byteLength !== undefined) {\n            imageBitmap = imageBitmap;\n            var bytesPerRow = Math.ceil(width / blockInformation.width) * blockInformation.length;\n            var aligned = Math.ceil(bytesPerRow / 256) * 256 === bytesPerRow;\n            if (aligned) {\n                var commandEncoder = this._device.createCommandEncoder({});\n                var buffer = this._bufferManager.createRawBuffer(imageBitmap.byteLength, WebGPUConstants.BufferUsage.MapWrite | WebGPUConstants.BufferUsage.CopySrc, true);\n                var arrayBuffer = buffer.getMappedRange();\n                new Uint8Array(arrayBuffer).set(imageBitmap);\n                buffer.unmap();\n                commandEncoder.copyBufferToTexture({\n                    buffer: buffer,\n                    offset: 0,\n                    bytesPerRow: bytesPerRow,\n                    rowsPerImage: height,\n                }, textureCopyView, textureExtent);\n                this._device.queue.submit([commandEncoder.finish()]);\n                this._bufferManager.releaseBuffer(buffer);\n            }\n            else {\n                this._device.queue.writeTexture(textureCopyView, imageBitmap, {\n                    offset: 0,\n                    bytesPerRow: bytesPerRow,\n                    rowsPerImage: height,\n                }, textureExtent);\n            }\n            if (invertY || premultiplyAlpha) {\n                if (WebGPUTextureHelper._IsInternalTexture(texture)) {\n                    var dontUseRect = offsetX === 0 && offsetY === 0 && width === texture.width && height === texture.height;\n                    this.invertYPreMultiplyAlpha(gpuOrHdwTexture, texture.width, texture.height, format, invertY, premultiplyAlpha, faceIndex, mipLevel, layers || 1, offsetX, offsetY, dontUseRect ? 0 : width, dontUseRect ? 0 : height, undefined, allowGPUOptimization);\n                }\n                else {\n                    // we should never take this code path\n                    throw \"updateTexture: Can't process the texture data because a GPUTexture was provided instead of an InternalTexture!\";\n                }\n            }\n        }\n        else {\n            imageBitmap = imageBitmap;\n            if (invertY) {\n                textureCopyView.premultipliedAlpha = false; // we are going to handle premultiplyAlpha ourselves\n                // we must preprocess the image\n                if (WebGPUTextureHelper._IsInternalTexture(texture) && offsetX === 0 && offsetY === 0 && width === texture.width && height === texture.height) {\n                    // optimization when the source image is the same size than the destination texture and offsets X/Y == 0:\n                    // we simply copy the source to the destination and we apply the preprocessing on the destination\n                    this._device.queue.copyExternalImageToTexture({ source: imageBitmap }, textureCopyView, textureExtent);\n                    this.invertYPreMultiplyAlpha(gpuOrHdwTexture, width, height, format, invertY, premultiplyAlpha, faceIndex, mipLevel, layers || 1, 0, 0, 0, 0, undefined, allowGPUOptimization);\n                }\n                else {\n                    // we must apply the preprocessing on the source image before copying it into the destination texture\n                    var commandEncoder = this._device.createCommandEncoder({});\n                    // create a temp texture and copy the image to it\n                    var srcTexture = this.createTexture({ width: width, height: height, layers: 1 }, false, false, false, false, false, format, 1, commandEncoder, WebGPUConstants.TextureUsage.CopySrc | WebGPUConstants.TextureUsage.TextureBinding);\n                    this._deferredReleaseTextures.push([srcTexture, null]);\n                    textureExtent.depthOrArrayLayers = 1;\n                    this._device.queue.copyExternalImageToTexture({ source: imageBitmap }, { texture: srcTexture }, textureExtent);\n                    textureExtent.depthOrArrayLayers = layers || 1;\n                    // apply the preprocessing to this temp texture\n                    this.invertYPreMultiplyAlpha(srcTexture, width, height, format, invertY, premultiplyAlpha, faceIndex, mipLevel, layers || 1, 0, 0, 0, 0, commandEncoder, allowGPUOptimization);\n                    // copy the temp texture to the destination texture\n                    commandEncoder.copyTextureToTexture({ texture: srcTexture }, textureCopyView, textureExtent);\n                    this._device.queue.submit([commandEncoder.finish()]);\n                }\n            }\n            else {\n                // no preprocessing: direct copy to destination texture\n                this._device.queue.copyExternalImageToTexture({ source: imageBitmap }, textureCopyView, textureExtent);\n            }\n        }\n    };\n    WebGPUTextureHelper.prototype.readPixels = function (texture, x, y, width, height, format, faceIndex, mipLevel, buffer, noDataConversion) {\n        if (faceIndex === void 0) { faceIndex = 0; }\n        if (mipLevel === void 0) { mipLevel = 0; }\n        if (buffer === void 0) { buffer = null; }\n        if (noDataConversion === void 0) { noDataConversion = false; }\n        var blockInformation = WebGPUTextureHelper._GetBlockInformationFromFormat(format);\n        var bytesPerRow = Math.ceil(width / blockInformation.width) * blockInformation.length;\n        var bytesPerRowAligned = Math.ceil(bytesPerRow / 256) * 256;\n        var size = bytesPerRowAligned * height;\n        var gpuBuffer = this._bufferManager.createRawBuffer(size, WebGPUConstants.BufferUsage.MapRead | WebGPUConstants.BufferUsage.CopyDst);\n        var commandEncoder = this._device.createCommandEncoder({});\n        commandEncoder.copyTextureToBuffer({\n            texture: texture,\n            mipLevel: mipLevel,\n            origin: {\n                x: x,\n                y: y,\n                z: Math.max(faceIndex, 0),\n            },\n        }, {\n            buffer: gpuBuffer,\n            offset: 0,\n            bytesPerRow: bytesPerRowAligned,\n        }, {\n            width: width,\n            height: height,\n            depthOrArrayLayers: 1,\n        });\n        this._device.queue.submit([commandEncoder.finish()]);\n        return this._bufferManager.readDataFromBuffer(gpuBuffer, size, width, height, bytesPerRow, bytesPerRowAligned, WebGPUTextureHelper._GetTextureTypeFromFormat(format), 0, buffer, true, noDataConversion);\n    };\n    //------------------------------------------------------------------------------\n    //                              Dispose\n    //------------------------------------------------------------------------------\n    WebGPUTextureHelper.prototype.releaseTexture = function (texture) {\n        if (WebGPUTextureHelper._IsInternalTexture(texture)) {\n            var hardwareTexture = texture._hardwareTexture;\n            var irradianceTexture = texture._irradianceTexture;\n            // We can't destroy the objects just now because they could be used in the current frame - we delay the destroying after the end of the frame\n            this._deferredReleaseTextures.push([hardwareTexture, irradianceTexture]);\n        }\n        else {\n            this._deferredReleaseTextures.push([texture, null]);\n        }\n    };\n    WebGPUTextureHelper.prototype.destroyDeferredTextures = function () {\n        for (var i = 0; i < this._deferredReleaseTextures.length; ++i) {\n            var _a = this._deferredReleaseTextures[i], hardwareTexture = _a[0], irradianceTexture = _a[1];\n            if (hardwareTexture) {\n                if (WebGPUTextureHelper._IsHardwareTexture(hardwareTexture)) {\n                    hardwareTexture.release();\n                }\n                else {\n                    hardwareTexture.destroy();\n                }\n            }\n            irradianceTexture === null || irradianceTexture === void 0 ? void 0 : irradianceTexture.dispose();\n        }\n        this._deferredReleaseTextures.length = 0;\n    };\n    return WebGPUTextureHelper;\n}());\nexport { WebGPUTextureHelper };\n//# sourceMappingURL=webgpuTextureHelper.js.map","import { __awaiter, __generator } from \"tslib\";\nimport * as WebGPUConstants from \"./webgpuConstants.js\";\nimport { PerfCounter } from \"../../Misc/perfCounter.js\";\nimport { WebGPUQuerySet } from \"./webgpuQuerySet.js\";\n/** @hidden */\nvar WebGPUTimestampQuery = /** @class */ (function () {\n    function WebGPUTimestampQuery(device, bufferManager) {\n        this._enabled = false;\n        this._gpuFrameTimeCounter = new PerfCounter();\n        this._measureDurationState = 0;\n        this._device = device;\n        this._bufferManager = bufferManager;\n    }\n    Object.defineProperty(WebGPUTimestampQuery.prototype, \"gpuFrameTimeCounter\", {\n        get: function () {\n            return this._gpuFrameTimeCounter;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUTimestampQuery.prototype, \"enable\", {\n        get: function () {\n            return this._enabled;\n        },\n        set: function (value) {\n            if (this._enabled === value) {\n                return;\n            }\n            this._enabled = value;\n            this._measureDurationState = 0;\n            if (value) {\n                this._measureDuration = new WebGPUDurationMeasure(this._device, this._bufferManager);\n            }\n            else {\n                this._measureDuration.dispose();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebGPUTimestampQuery.prototype.startFrame = function (commandEncoder) {\n        if (this._enabled && this._measureDurationState === 0) {\n            this._measureDuration.start(commandEncoder);\n            this._measureDurationState = 1;\n        }\n    };\n    WebGPUTimestampQuery.prototype.endFrame = function (commandEncoder) {\n        var _this = this;\n        if (this._measureDurationState === 1) {\n            this._measureDurationState = 2;\n            this._measureDuration.stop(commandEncoder).then(function (duration) {\n                if (duration !== null && duration >= 0) {\n                    _this._gpuFrameTimeCounter.fetchNewFrame();\n                    _this._gpuFrameTimeCounter.addCount(duration, true);\n                }\n                _this._measureDurationState = 0;\n            });\n        }\n    };\n    return WebGPUTimestampQuery;\n}());\nexport { WebGPUTimestampQuery };\n/** @hidden */\nvar WebGPUDurationMeasure = /** @class */ (function () {\n    function WebGPUDurationMeasure(device, bufferManager) {\n        this._querySet = new WebGPUQuerySet(2, WebGPUConstants.QueryType.Timestamp, device, bufferManager);\n    }\n    WebGPUDurationMeasure.prototype.start = function (encoder) {\n        encoder.writeTimestamp(this._querySet.querySet, 0);\n    };\n    WebGPUDurationMeasure.prototype.stop = function (encoder) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                encoder.writeTimestamp(this._querySet.querySet, 1);\n                return [2 /*return*/, this._querySet.readTwoValuesAndSubtract(0)];\n            });\n        });\n    };\n    WebGPUDurationMeasure.prototype.dispose = function () {\n        this._querySet.dispose();\n    };\n    return WebGPUDurationMeasure;\n}());\nexport { WebGPUDurationMeasure };\n//# sourceMappingURL=webgpuTimestampQuery.js.map","import { __assign, __awaiter, __generator } from \"tslib\";\nimport { IsWindowObjectExist } from \"../../Misc/domManagement.js\";\nimport { Tools } from \"../../Misc/tools.js\";\n/** @hidden */\nvar WebGPUTintWASM = /** @class */ (function () {\n    function WebGPUTintWASM() {\n        this._twgsl = null;\n    }\n    WebGPUTintWASM.prototype.initTwgsl = function (twgslOptions) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        twgslOptions = twgslOptions || {};\n                        twgslOptions = __assign(__assign({}, WebGPUTintWASM._TWgslDefaultOptions), twgslOptions);\n                        if (twgslOptions.twgsl) {\n                            this._twgsl = twgslOptions.twgsl;\n                            return [2 /*return*/, Promise.resolve()];\n                        }\n                        if (!(twgslOptions.jsPath && twgslOptions.wasmPath)) return [3 /*break*/, 3];\n                        if (!IsWindowObjectExist()) return [3 /*break*/, 2];\n                        return [4 /*yield*/, Tools.LoadScriptAsync(twgslOptions.jsPath)];\n                    case 1:\n                        _b.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        importScripts(twgslOptions.jsPath);\n                        _b.label = 3;\n                    case 3:\n                        if (!self.twgsl) return [3 /*break*/, 5];\n                        _a = this;\n                        return [4 /*yield*/, self.twgsl(twgslOptions.wasmPath)];\n                    case 4:\n                        _a._twgsl = _b.sent();\n                        return [2 /*return*/, Promise.resolve()];\n                    case 5: return [2 /*return*/, Promise.reject(\"twgsl is not available.\")];\n                }\n            });\n        });\n    };\n    WebGPUTintWASM.prototype.convertSpirV2WGSL = function (code) {\n        return this._twgsl.convertSpirV2WGSL(code);\n    };\n    // Default twgsl options.\n    WebGPUTintWASM._TWgslDefaultOptions = {\n        jsPath: \"https://preview.babylonjs.com/twgsl/twgsl.js\",\n        wasmPath: \"https://preview.babylonjs.com/twgsl/twgsl.wasm\",\n    };\n    return WebGPUTintWASM;\n}());\nexport { WebGPUTintWASM };\n//# sourceMappingURL=webgpuTintWASM.js.map","/* eslint-disable @typescript-eslint/naming-convention */\n/** Defines the cross module used constants to avoid circular dependencies */\nvar Constants = /** @class */ (function () {\n    function Constants() {\n    }\n    /** Defines that alpha blending is disabled */\n    Constants.ALPHA_DISABLE = 0;\n    /** Defines that alpha blending is SRC ALPHA * SRC + DEST */\n    Constants.ALPHA_ADD = 1;\n    /** Defines that alpha blending is SRC ALPHA * SRC + (1 - SRC ALPHA) * DEST */\n    Constants.ALPHA_COMBINE = 2;\n    /** Defines that alpha blending is DEST - SRC * DEST */\n    Constants.ALPHA_SUBTRACT = 3;\n    /** Defines that alpha blending is SRC * DEST */\n    Constants.ALPHA_MULTIPLY = 4;\n    /** Defines that alpha blending is SRC ALPHA * SRC + (1 - SRC) * DEST */\n    Constants.ALPHA_MAXIMIZED = 5;\n    /** Defines that alpha blending is SRC + DEST */\n    Constants.ALPHA_ONEONE = 6;\n    /** Defines that alpha blending is SRC + (1 - SRC ALPHA) * DEST */\n    Constants.ALPHA_PREMULTIPLIED = 7;\n    /**\n     * Defines that alpha blending is SRC + (1 - SRC ALPHA) * DEST\n     * Alpha will be set to (1 - SRC ALPHA) * DEST ALPHA\n     */\n    Constants.ALPHA_PREMULTIPLIED_PORTERDUFF = 8;\n    /** Defines that alpha blending is CST * SRC + (1 - CST) * DEST */\n    Constants.ALPHA_INTERPOLATE = 9;\n    /**\n     * Defines that alpha blending is SRC + (1 - SRC) * DEST\n     * Alpha will be set to SRC ALPHA + (1 - SRC ALPHA) * DEST ALPHA\n     */\n    Constants.ALPHA_SCREENMODE = 10;\n    /**\n     * Defines that alpha blending is SRC + DST\n     * Alpha will be set to SRC ALPHA + DST ALPHA\n     */\n    Constants.ALPHA_ONEONE_ONEONE = 11;\n    /**\n     * Defines that alpha blending is SRC * DST ALPHA + DST\n     * Alpha will be set to 0\n     */\n    Constants.ALPHA_ALPHATOCOLOR = 12;\n    /**\n     * Defines that alpha blending is SRC * (1 - DST) + DST * (1 - SRC)\n     */\n    Constants.ALPHA_REVERSEONEMINUS = 13;\n    /**\n     * Defines that alpha blending is SRC + DST * (1 - SRC ALPHA)\n     * Alpha will be set to SRC ALPHA + DST ALPHA * (1 - SRC ALPHA)\n     */\n    Constants.ALPHA_SRC_DSTONEMINUSSRCALPHA = 14;\n    /**\n     * Defines that alpha blending is SRC + DST\n     * Alpha will be set to SRC ALPHA\n     */\n    Constants.ALPHA_ONEONE_ONEZERO = 15;\n    /**\n     * Defines that alpha blending is SRC * (1 - DST) + DST * (1 - SRC)\n     * Alpha will be set to DST ALPHA\n     */\n    Constants.ALPHA_EXCLUSION = 16;\n    /**\n     * Defines that alpha blending is SRC * SRC ALPHA + DST * (1 - SRC ALPHA)\n     * Alpha will be set to SRC ALPHA + (1 - SRC ALPHA) * DST ALPHA\n     */\n    Constants.ALPHA_LAYER_ACCUMULATE = 17;\n    /** Defines that alpha blending equation a SUM */\n    Constants.ALPHA_EQUATION_ADD = 0;\n    /** Defines that alpha blending equation a SUBSTRACTION */\n    Constants.ALPHA_EQUATION_SUBSTRACT = 1;\n    /** Defines that alpha blending equation a REVERSE SUBSTRACTION */\n    Constants.ALPHA_EQUATION_REVERSE_SUBTRACT = 2;\n    /** Defines that alpha blending equation a MAX operation */\n    Constants.ALPHA_EQUATION_MAX = 3;\n    /** Defines that alpha blending equation a MIN operation */\n    Constants.ALPHA_EQUATION_MIN = 4;\n    /**\n     * Defines that alpha blending equation a DARKEN operation:\n     * It takes the min of the src and sums the alpha channels.\n     */\n    Constants.ALPHA_EQUATION_DARKEN = 5;\n    /** Defines that the resource is not delayed*/\n    Constants.DELAYLOADSTATE_NONE = 0;\n    /** Defines that the resource was successfully delay loaded */\n    Constants.DELAYLOADSTATE_LOADED = 1;\n    /** Defines that the resource is currently delay loading */\n    Constants.DELAYLOADSTATE_LOADING = 2;\n    /** Defines that the resource is delayed and has not started loading */\n    Constants.DELAYLOADSTATE_NOTLOADED = 4;\n    // Depth or Stencil test Constants.\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will never pass. i.e. Nothing will be drawn */\n    Constants.NEVER = 0x0200;\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will always pass. i.e. Pixels will be drawn in the order they are drawn */\n    Constants.ALWAYS = 0x0207;\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than the stored value */\n    Constants.LESS = 0x0201;\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is equals to the stored value */\n    Constants.EQUAL = 0x0202;\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than or equal to the stored value */\n    Constants.LEQUAL = 0x0203;\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than the stored value */\n    Constants.GREATER = 0x0204;\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than or equal to the stored value */\n    Constants.GEQUAL = 0x0206;\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is not equal to the stored value */\n    Constants.NOTEQUAL = 0x0205;\n    // Stencil Actions Constants.\n    /** Passed to stencilOperation to specify that stencil value must be kept */\n    Constants.KEEP = 0x1e00;\n    /** Passed to stencilOperation to specify that stencil value must be zero */\n    Constants.ZERO = 0x0000;\n    /** Passed to stencilOperation to specify that stencil value must be replaced */\n    Constants.REPLACE = 0x1e01;\n    /** Passed to stencilOperation to specify that stencil value must be incremented */\n    Constants.INCR = 0x1e02;\n    /** Passed to stencilOperation to specify that stencil value must be decremented */\n    Constants.DECR = 0x1e03;\n    /** Passed to stencilOperation to specify that stencil value must be inverted */\n    Constants.INVERT = 0x150a;\n    /** Passed to stencilOperation to specify that stencil value must be incremented with wrapping */\n    Constants.INCR_WRAP = 0x8507;\n    /** Passed to stencilOperation to specify that stencil value must be decremented with wrapping */\n    Constants.DECR_WRAP = 0x8508;\n    /** Texture is not repeating outside of 0..1 UVs */\n    Constants.TEXTURE_CLAMP_ADDRESSMODE = 0;\n    /** Texture is repeating outside of 0..1 UVs */\n    Constants.TEXTURE_WRAP_ADDRESSMODE = 1;\n    /** Texture is repeating and mirrored */\n    Constants.TEXTURE_MIRROR_ADDRESSMODE = 2;\n    /** Flag to create a storage texture */\n    Constants.TEXTURE_CREATIONFLAG_STORAGE = 1;\n    /** ALPHA */\n    Constants.TEXTUREFORMAT_ALPHA = 0;\n    /** LUMINANCE */\n    Constants.TEXTUREFORMAT_LUMINANCE = 1;\n    /** LUMINANCE_ALPHA */\n    Constants.TEXTUREFORMAT_LUMINANCE_ALPHA = 2;\n    /** RGB */\n    Constants.TEXTUREFORMAT_RGB = 4;\n    /** RGBA */\n    Constants.TEXTUREFORMAT_RGBA = 5;\n    /** RED */\n    Constants.TEXTUREFORMAT_RED = 6;\n    /** RED (2nd reference) */\n    Constants.TEXTUREFORMAT_R = 6;\n    /** RG */\n    Constants.TEXTUREFORMAT_RG = 7;\n    /** RED_INTEGER */\n    Constants.TEXTUREFORMAT_RED_INTEGER = 8;\n    /** RED_INTEGER (2nd reference) */\n    Constants.TEXTUREFORMAT_R_INTEGER = 8;\n    /** RG_INTEGER */\n    Constants.TEXTUREFORMAT_RG_INTEGER = 9;\n    /** RGB_INTEGER */\n    Constants.TEXTUREFORMAT_RGB_INTEGER = 10;\n    /** RGBA_INTEGER */\n    Constants.TEXTUREFORMAT_RGBA_INTEGER = 11;\n    /** BGRA */\n    Constants.TEXTUREFORMAT_BGRA = 12;\n    /** Depth 24 bits + Stencil 8 bits */\n    Constants.TEXTUREFORMAT_DEPTH24_STENCIL8 = 13;\n    /** Depth 32 bits float */\n    Constants.TEXTUREFORMAT_DEPTH32_FLOAT = 14;\n    /** Depth 16 bits */\n    Constants.TEXTUREFORMAT_DEPTH16 = 15;\n    /** Depth 24 bits */\n    Constants.TEXTUREFORMAT_DEPTH24 = 16;\n    /** Depth 24 bits unorm + Stencil 8 bits */\n    Constants.TEXTUREFORMAT_DEPTH24UNORM_STENCIL8 = 17;\n    /** Depth 32 bits float + Stencil 8 bits */\n    Constants.TEXTUREFORMAT_DEPTH32FLOAT_STENCIL8 = 18;\n    /** Compressed BC7 */\n    Constants.TEXTUREFORMAT_COMPRESSED_RGBA_BPTC_UNORM = 36492;\n    /** Compressed BC7 (SRGB) */\n    Constants.TEXTUREFORMAT_COMPRESSED_SRGB_ALPHA_BPTC_UNORM = 36493;\n    /** Compressed BC6 unsigned float */\n    Constants.TEXTUREFORMAT_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT = 36495;\n    /** Compressed BC6 signed float */\n    Constants.TEXTUREFORMAT_COMPRESSED_RGB_BPTC_SIGNED_FLOAT = 36494;\n    /** Compressed BC3 */\n    Constants.TEXTUREFORMAT_COMPRESSED_RGBA_S3TC_DXT5 = 33779;\n    /** Compressed BC3 (SRGB) */\n    Constants.TEXTUREFORMAT_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = 35919;\n    /** Compressed BC2 */\n    Constants.TEXTUREFORMAT_COMPRESSED_RGBA_S3TC_DXT3 = 33778;\n    /** Compressed BC2 (SRGB) */\n    Constants.TEXTUREFORMAT_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = 35918;\n    /** Compressed BC1 (RGBA) */\n    Constants.TEXTUREFORMAT_COMPRESSED_RGBA_S3TC_DXT1 = 33777;\n    /** Compressed BC1 (RGB) */\n    Constants.TEXTUREFORMAT_COMPRESSED_RGB_S3TC_DXT1 = 33776;\n    /** Compressed BC1 (SRGB+A) */\n    Constants.TEXTUREFORMAT_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = 35917;\n    /** Compressed BC1 (SRGB) */\n    Constants.TEXTUREFORMAT_COMPRESSED_SRGB_S3TC_DXT1_EXT = 35916;\n    /** Compressed ASTC 4x4 */\n    Constants.TEXTUREFORMAT_COMPRESSED_RGBA_ASTC_4x4 = 37808;\n    /** Compressed ASTC 4x4 (SRGB) */\n    Constants.TEXTUREFORMAT_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = 37840;\n    /** Compressed ETC1 (RGB) */\n    Constants.TEXTUREFORMAT_COMPRESSED_RGB_ETC1_WEBGL = 36196;\n    /** Compressed ETC2 (RGB) */\n    Constants.TEXTUREFORMAT_COMPRESSED_RGB8_ETC2 = 37492;\n    /** Compressed ETC2 (SRGB) */\n    Constants.TEXTUREFORMAT_COMPRESSED_SRGB8_ETC2 = 37493;\n    /** Compressed ETC2 (RGB+A1) */\n    Constants.TEXTUREFORMAT_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37494;\n    /** Compressed ETC2 (SRGB+A1)*/\n    Constants.TEXTUREFORMAT_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37495;\n    /** Compressed ETC2 (RGB+A) */\n    Constants.TEXTUREFORMAT_COMPRESSED_RGBA8_ETC2_EAC = 37496;\n    /** Compressed ETC2 (SRGB+1) */\n    Constants.TEXTUREFORMAT_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 37497;\n    /** UNSIGNED_BYTE */\n    Constants.TEXTURETYPE_UNSIGNED_BYTE = 0;\n    /** UNSIGNED_BYTE (2nd reference) */\n    Constants.TEXTURETYPE_UNSIGNED_INT = 0;\n    /** FLOAT */\n    Constants.TEXTURETYPE_FLOAT = 1;\n    /** HALF_FLOAT */\n    Constants.TEXTURETYPE_HALF_FLOAT = 2;\n    /** BYTE */\n    Constants.TEXTURETYPE_BYTE = 3;\n    /** SHORT */\n    Constants.TEXTURETYPE_SHORT = 4;\n    /** UNSIGNED_SHORT */\n    Constants.TEXTURETYPE_UNSIGNED_SHORT = 5;\n    /** INT */\n    Constants.TEXTURETYPE_INT = 6;\n    /** UNSIGNED_INT */\n    Constants.TEXTURETYPE_UNSIGNED_INTEGER = 7;\n    /** UNSIGNED_SHORT_4_4_4_4 */\n    Constants.TEXTURETYPE_UNSIGNED_SHORT_4_4_4_4 = 8;\n    /** UNSIGNED_SHORT_5_5_5_1 */\n    Constants.TEXTURETYPE_UNSIGNED_SHORT_5_5_5_1 = 9;\n    /** UNSIGNED_SHORT_5_6_5 */\n    Constants.TEXTURETYPE_UNSIGNED_SHORT_5_6_5 = 10;\n    /** UNSIGNED_INT_2_10_10_10_REV */\n    Constants.TEXTURETYPE_UNSIGNED_INT_2_10_10_10_REV = 11;\n    /** UNSIGNED_INT_24_8 */\n    Constants.TEXTURETYPE_UNSIGNED_INT_24_8 = 12;\n    /** UNSIGNED_INT_10F_11F_11F_REV */\n    Constants.TEXTURETYPE_UNSIGNED_INT_10F_11F_11F_REV = 13;\n    /** UNSIGNED_INT_5_9_9_9_REV */\n    Constants.TEXTURETYPE_UNSIGNED_INT_5_9_9_9_REV = 14;\n    /** FLOAT_32_UNSIGNED_INT_24_8_REV */\n    Constants.TEXTURETYPE_FLOAT_32_UNSIGNED_INT_24_8_REV = 15;\n    /** UNDEFINED */\n    Constants.TEXTURETYPE_UNDEFINED = 16;\n    /** nearest is mag = nearest and min = nearest and no mip */\n    Constants.TEXTURE_NEAREST_SAMPLINGMODE = 1;\n    /** mag = nearest and min = nearest and mip = none */\n    Constants.TEXTURE_NEAREST_NEAREST = 1;\n    /** Bilinear is mag = linear and min = linear and no mip */\n    Constants.TEXTURE_BILINEAR_SAMPLINGMODE = 2;\n    /** mag = linear and min = linear and mip = none */\n    Constants.TEXTURE_LINEAR_LINEAR = 2;\n    /** Trilinear is mag = linear and min = linear and mip = linear */\n    Constants.TEXTURE_TRILINEAR_SAMPLINGMODE = 3;\n    /** Trilinear is mag = linear and min = linear and mip = linear */\n    Constants.TEXTURE_LINEAR_LINEAR_MIPLINEAR = 3;\n    /** mag = nearest and min = nearest and mip = nearest */\n    Constants.TEXTURE_NEAREST_NEAREST_MIPNEAREST = 4;\n    /** mag = nearest and min = linear and mip = nearest */\n    Constants.TEXTURE_NEAREST_LINEAR_MIPNEAREST = 5;\n    /** mag = nearest and min = linear and mip = linear */\n    Constants.TEXTURE_NEAREST_LINEAR_MIPLINEAR = 6;\n    /** mag = nearest and min = linear and mip = none */\n    Constants.TEXTURE_NEAREST_LINEAR = 7;\n    /** nearest is mag = nearest and min = nearest and mip = linear */\n    Constants.TEXTURE_NEAREST_NEAREST_MIPLINEAR = 8;\n    /** mag = linear and min = nearest and mip = nearest */\n    Constants.TEXTURE_LINEAR_NEAREST_MIPNEAREST = 9;\n    /** mag = linear and min = nearest and mip = linear */\n    Constants.TEXTURE_LINEAR_NEAREST_MIPLINEAR = 10;\n    /** Bilinear is mag = linear and min = linear and mip = nearest */\n    Constants.TEXTURE_LINEAR_LINEAR_MIPNEAREST = 11;\n    /** mag = linear and min = nearest and mip = none */\n    Constants.TEXTURE_LINEAR_NEAREST = 12;\n    /** Explicit coordinates mode */\n    Constants.TEXTURE_EXPLICIT_MODE = 0;\n    /** Spherical coordinates mode */\n    Constants.TEXTURE_SPHERICAL_MODE = 1;\n    /** Planar coordinates mode */\n    Constants.TEXTURE_PLANAR_MODE = 2;\n    /** Cubic coordinates mode */\n    Constants.TEXTURE_CUBIC_MODE = 3;\n    /** Projection coordinates mode */\n    Constants.TEXTURE_PROJECTION_MODE = 4;\n    /** Skybox coordinates mode */\n    Constants.TEXTURE_SKYBOX_MODE = 5;\n    /** Inverse Cubic coordinates mode */\n    Constants.TEXTURE_INVCUBIC_MODE = 6;\n    /** Equirectangular coordinates mode */\n    Constants.TEXTURE_EQUIRECTANGULAR_MODE = 7;\n    /** Equirectangular Fixed coordinates mode */\n    Constants.TEXTURE_FIXED_EQUIRECTANGULAR_MODE = 8;\n    /** Equirectangular Fixed Mirrored coordinates mode */\n    Constants.TEXTURE_FIXED_EQUIRECTANGULAR_MIRRORED_MODE = 9;\n    /** Offline (baking) quality for texture filtering */\n    Constants.TEXTURE_FILTERING_QUALITY_OFFLINE = 4096;\n    /** High quality for texture filtering */\n    Constants.TEXTURE_FILTERING_QUALITY_HIGH = 64;\n    /** Medium quality for texture filtering */\n    Constants.TEXTURE_FILTERING_QUALITY_MEDIUM = 16;\n    /** Low quality for texture filtering */\n    Constants.TEXTURE_FILTERING_QUALITY_LOW = 8;\n    // Texture rescaling mode\n    /** Defines that texture rescaling will use a floor to find the closer power of 2 size */\n    Constants.SCALEMODE_FLOOR = 1;\n    /** Defines that texture rescaling will look for the nearest power of 2 size */\n    Constants.SCALEMODE_NEAREST = 2;\n    /** Defines that texture rescaling will use a ceil to find the closer power of 2 size */\n    Constants.SCALEMODE_CEILING = 3;\n    /**\n     * The dirty texture flag value\n     */\n    Constants.MATERIAL_TextureDirtyFlag = 1;\n    /**\n     * The dirty light flag value\n     */\n    Constants.MATERIAL_LightDirtyFlag = 2;\n    /**\n     * The dirty fresnel flag value\n     */\n    Constants.MATERIAL_FresnelDirtyFlag = 4;\n    /**\n     * The dirty attribute flag value\n     */\n    Constants.MATERIAL_AttributesDirtyFlag = 8;\n    /**\n     * The dirty misc flag value\n     */\n    Constants.MATERIAL_MiscDirtyFlag = 16;\n    /**\n     * The dirty prepass flag value\n     */\n    Constants.MATERIAL_PrePassDirtyFlag = 32;\n    /**\n     * The all dirty flag value\n     */\n    Constants.MATERIAL_AllDirtyFlag = 63;\n    /**\n     * Returns the triangle fill mode\n     */\n    Constants.MATERIAL_TriangleFillMode = 0;\n    /**\n     * Returns the wireframe mode\n     */\n    Constants.MATERIAL_WireFrameFillMode = 1;\n    /**\n     * Returns the point fill mode\n     */\n    Constants.MATERIAL_PointFillMode = 2;\n    /**\n     * Returns the point list draw mode\n     */\n    Constants.MATERIAL_PointListDrawMode = 3;\n    /**\n     * Returns the line list draw mode\n     */\n    Constants.MATERIAL_LineListDrawMode = 4;\n    /**\n     * Returns the line loop draw mode\n     */\n    Constants.MATERIAL_LineLoopDrawMode = 5;\n    /**\n     * Returns the line strip draw mode\n     */\n    Constants.MATERIAL_LineStripDrawMode = 6;\n    /**\n     * Returns the triangle strip draw mode\n     */\n    Constants.MATERIAL_TriangleStripDrawMode = 7;\n    /**\n     * Returns the triangle fan draw mode\n     */\n    Constants.MATERIAL_TriangleFanDrawMode = 8;\n    /**\n     * Stores the clock-wise side orientation\n     */\n    Constants.MATERIAL_ClockWiseSideOrientation = 0;\n    /**\n     * Stores the counter clock-wise side orientation\n     */\n    Constants.MATERIAL_CounterClockWiseSideOrientation = 1;\n    /**\n     * Nothing\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\n     */\n    Constants.ACTION_NothingTrigger = 0;\n    /**\n     * On pick\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\n     */\n    Constants.ACTION_OnPickTrigger = 1;\n    /**\n     * On left pick\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\n     */\n    Constants.ACTION_OnLeftPickTrigger = 2;\n    /**\n     * On right pick\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\n     */\n    Constants.ACTION_OnRightPickTrigger = 3;\n    /**\n     * On center pick\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\n     */\n    Constants.ACTION_OnCenterPickTrigger = 4;\n    /**\n     * On pick down\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\n     */\n    Constants.ACTION_OnPickDownTrigger = 5;\n    /**\n     * On double pick\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\n     */\n    Constants.ACTION_OnDoublePickTrigger = 6;\n    /**\n     * On pick up\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\n     */\n    Constants.ACTION_OnPickUpTrigger = 7;\n    /**\n     * On pick out.\n     * This trigger will only be raised if you also declared a OnPickDown\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\n     */\n    Constants.ACTION_OnPickOutTrigger = 16;\n    /**\n     * On long press\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\n     */\n    Constants.ACTION_OnLongPressTrigger = 8;\n    /**\n     * On pointer over\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\n     */\n    Constants.ACTION_OnPointerOverTrigger = 9;\n    /**\n     * On pointer out\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\n     */\n    Constants.ACTION_OnPointerOutTrigger = 10;\n    /**\n     * On every frame\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\n     */\n    Constants.ACTION_OnEveryFrameTrigger = 11;\n    /**\n     * On intersection enter\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\n     */\n    Constants.ACTION_OnIntersectionEnterTrigger = 12;\n    /**\n     * On intersection exit\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\n     */\n    Constants.ACTION_OnIntersectionExitTrigger = 13;\n    /**\n     * On key down\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\n     */\n    Constants.ACTION_OnKeyDownTrigger = 14;\n    /**\n     * On key up\n     * @see https://doc.babylonjs.com/how_to/how_to_use_actions#triggers\n     */\n    Constants.ACTION_OnKeyUpTrigger = 15;\n    /**\n     * Billboard mode will only apply to Y axis\n     */\n    Constants.PARTICLES_BILLBOARDMODE_Y = 2;\n    /**\n     * Billboard mode will apply to all axes\n     */\n    Constants.PARTICLES_BILLBOARDMODE_ALL = 7;\n    /**\n     * Special billboard mode where the particle will be biilboard to the camera but rotated to align with direction\n     */\n    Constants.PARTICLES_BILLBOARDMODE_STRETCHED = 8;\n    /** Default culling strategy : this is an exclusion test and it's the more accurate.\n     *  Test order :\n     *  Is the bounding sphere outside the frustum ?\n     *  If not, are the bounding box vertices outside the frustum ?\n     *  It not, then the cullable object is in the frustum.\n     */\n    Constants.MESHES_CULLINGSTRATEGY_STANDARD = 0;\n    /** Culling strategy : Bounding Sphere Only.\n     *  This is an exclusion test. It's faster than the standard strategy because the bounding box is not tested.\n     *  It's also less accurate than the standard because some not visible objects can still be selected.\n     *  Test : is the bounding sphere outside the frustum ?\n     *  If not, then the cullable object is in the frustum.\n     */\n    Constants.MESHES_CULLINGSTRATEGY_BOUNDINGSPHERE_ONLY = 1;\n    /** Culling strategy : Optimistic Inclusion.\n     *  This in an inclusion test first, then the standard exclusion test.\n     *  This can be faster when a cullable object is expected to be almost always in the camera frustum.\n     *  This could also be a little slower than the standard test when the tested object center is not the frustum but one of its bounding box vertex is still inside.\n     *  Anyway, it's as accurate as the standard strategy.\n     *  Test :\n     *  Is the cullable object bounding sphere center in the frustum ?\n     *  If not, apply the default culling strategy.\n     */\n    Constants.MESHES_CULLINGSTRATEGY_OPTIMISTIC_INCLUSION = 2;\n    /** Culling strategy : Optimistic Inclusion then Bounding Sphere Only.\n     *  This in an inclusion test first, then the bounding sphere only exclusion test.\n     *  This can be the fastest test when a cullable object is expected to be almost always in the camera frustum.\n     *  This could also be a little slower than the BoundingSphereOnly strategy when the tested object center is not in the frustum but its bounding sphere still intersects it.\n     *  It's less accurate than the standard strategy and as accurate as the BoundingSphereOnly strategy.\n     *  Test :\n     *  Is the cullable object bounding sphere center in the frustum ?\n     *  If not, apply the Bounding Sphere Only strategy. No Bounding Box is tested here.\n     */\n    Constants.MESHES_CULLINGSTRATEGY_OPTIMISTIC_INCLUSION_THEN_BSPHERE_ONLY = 3;\n    /**\n     * No logging while loading\n     */\n    Constants.SCENELOADER_NO_LOGGING = 0;\n    /**\n     * Minimal logging while loading\n     */\n    Constants.SCENELOADER_MINIMAL_LOGGING = 1;\n    /**\n     * Summary logging while loading\n     */\n    Constants.SCENELOADER_SUMMARY_LOGGING = 2;\n    /**\n     * Detailed logging while loading\n     */\n    Constants.SCENELOADER_DETAILED_LOGGING = 3;\n    /**\n     * Constant used to retrieve the irradiance texture index in the textures array in the prepass\n     * using getIndex(Constants.PREPASS_IRRADIANCE_TEXTURE_TYPE)\n     */\n    Constants.PREPASS_IRRADIANCE_TEXTURE_TYPE = 0;\n    /**\n     * Constant used to retrieve the position texture index in the textures array in the prepass\n     * using getIndex(Constants.PREPASS_POSITION_TEXTURE_INDEX)\n     */\n    Constants.PREPASS_POSITION_TEXTURE_TYPE = 1;\n    /**\n     * Constant used to retrieve the velocity texture index in the textures array in the prepass\n     * using getIndex(Constants.PREPASS_VELOCITY_TEXTURE_INDEX)\n     */\n    Constants.PREPASS_VELOCITY_TEXTURE_TYPE = 2;\n    /**\n     * Constant used to retrieve the reflectivity texture index in the textures array in the prepass\n     * using the getIndex(Constants.PREPASS_REFLECTIVITY_TEXTURE_TYPE)\n     */\n    Constants.PREPASS_REFLECTIVITY_TEXTURE_TYPE = 3;\n    /**\n     * Constant used to retrieve the lit color texture index in the textures array in the prepass\n     * using the getIndex(Constants.PREPASS_COLOR_TEXTURE_TYPE)\n     */\n    Constants.PREPASS_COLOR_TEXTURE_TYPE = 4;\n    /**\n     * Constant used to retrieve depth index in the textures array in the prepass\n     * using the getIndex(Constants.PREPASS_DEPTH_TEXTURE_TYPE)\n     */\n    Constants.PREPASS_DEPTH_TEXTURE_TYPE = 5;\n    /**\n     * Constant used to retrieve normal index in the textures array in the prepass\n     * using the getIndex(Constants.PREPASS_NORMAL_TEXTURE_TYPE)\n     */\n    Constants.PREPASS_NORMAL_TEXTURE_TYPE = 6;\n    /**\n     * Constant used to retrieve albedo index in the textures array in the prepass\n     * using the getIndex(Constants.PREPASS_ALBEDO_SQRT_TEXTURE_TYPE)\n     */\n    Constants.PREPASS_ALBEDO_SQRT_TEXTURE_TYPE = 7;\n    /** Flag to create a readable buffer (the buffer can be the source of a copy) */\n    Constants.BUFFER_CREATIONFLAG_READ = 1;\n    /** Flag to create a writable buffer (the buffer can be the destination of a copy) */\n    Constants.BUFFER_CREATIONFLAG_WRITE = 2;\n    /** Flag to create a readable and writable buffer */\n    Constants.BUFFER_CREATIONFLAG_READWRITE = 3;\n    /** Flag to create a buffer suitable to be used as a uniform buffer */\n    Constants.BUFFER_CREATIONFLAG_UNIFORM = 4;\n    /** Flag to create a buffer suitable to be used as a vertex buffer */\n    Constants.BUFFER_CREATIONFLAG_VERTEX = 8;\n    /** Flag to create a buffer suitable to be used as an index buffer */\n    Constants.BUFFER_CREATIONFLAG_INDEX = 16;\n    /** Flag to create a buffer suitable to be used as a storage buffer */\n    Constants.BUFFER_CREATIONFLAG_STORAGE = 32;\n    /**\n     * Prefixes used by the engine for sub mesh draw wrappers\n     */\n    /** @hidden */\n    Constants.RENDERPASS_MAIN = 0;\n    /**\n     * Constant used as key code for Alt key\n     */\n    Constants.INPUT_ALT_KEY = 18;\n    /**\n     * Constant used as key code for Ctrl key\n     */\n    Constants.INPUT_CTRL_KEY = 17;\n    /**\n     * Constant used as key code for Meta key (Left Win, Left Cmd)\n     */\n    Constants.INPUT_META_KEY1 = 91;\n    /**\n     * Constant used as key code for Meta key (Right Win)\n     */\n    Constants.INPUT_META_KEY2 = 92;\n    /**\n     * Constant used as key code for Meta key (Right Win, Right Cmd)\n     */\n    Constants.INPUT_META_KEY3 = 93;\n    /**\n     * Constant used as key code for Shift key\n     */\n    Constants.INPUT_SHIFT_KEY = 16;\n    /** Standard snapshot rendering. In this mode, some form of dynamic behavior is possible (for eg, uniform buffers are still updated) */\n    Constants.SNAPSHOTRENDERING_STANDARD = 0;\n    /** Fast snapshot rendering. In this mode, everything is static and only some limited form of dynamic behaviour is possible */\n    Constants.SNAPSHOTRENDERING_FAST = 1;\n    /**\n     * This is the default projection mode used by the cameras.\n     * It helps recreating a feeling of perspective and better appreciate depth.\n     * This is the best way to simulate real life cameras.\n     */\n    Constants.PERSPECTIVE_CAMERA = 0;\n    /**\n     * This helps creating camera with an orthographic mode.\n     * Orthographic is commonly used in engineering as a means to produce object specifications that communicate dimensions unambiguously, each line of 1 unit length (cm, meter..whatever) will appear to have the same length everywhere on the drawing. This allows the drafter to dimension only a subset of lines and let the reader know that other lines of that length on the drawing are also that length in reality. Every parallel line in the drawing is also parallel in the object.\n     */\n    Constants.ORTHOGRAPHIC_CAMERA = 1;\n    /**\n     * This is the default FOV mode for perspective cameras.\n     * This setting aligns the upper and lower bounds of the viewport to the upper and lower bounds of the camera frustum.\n     */\n    Constants.FOVMODE_VERTICAL_FIXED = 0;\n    /**\n     * This setting aligns the left and right bounds of the viewport to the left and right bounds of the camera frustum.\n     */\n    Constants.FOVMODE_HORIZONTAL_FIXED = 1;\n    /**\n     * This specifies there is no need for a camera rig.\n     * Basically only one eye is rendered corresponding to the camera.\n     */\n    Constants.RIG_MODE_NONE = 0;\n    /**\n     * Simulates a camera Rig with one blue eye and one red eye.\n     * This can be use with 3d blue and red glasses.\n     */\n    Constants.RIG_MODE_STEREOSCOPIC_ANAGLYPH = 10;\n    /**\n     * Defines that both eyes of the camera will be rendered side by side with a parallel target.\n     */\n    Constants.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_PARALLEL = 11;\n    /**\n     * Defines that both eyes of the camera will be rendered side by side with a none parallel target.\n     */\n    Constants.RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_CROSSEYED = 12;\n    /**\n     * Defines that both eyes of the camera will be rendered over under each other.\n     */\n    Constants.RIG_MODE_STEREOSCOPIC_OVERUNDER = 13;\n    /**\n     * Defines that both eyes of the camera will be rendered on successive lines interlaced for passive 3d monitors.\n     */\n    Constants.RIG_MODE_STEREOSCOPIC_INTERLACED = 14;\n    /**\n     * Defines that both eyes of the camera should be renderered in a VR mode (carbox).\n     */\n    Constants.RIG_MODE_VR = 20;\n    /**\n     * Defines that both eyes of the camera should be renderered in a VR mode (webVR).\n     */\n    Constants.RIG_MODE_WEBVR = 21;\n    /**\n     * Custom rig mode allowing rig cameras to be populated manually with any number of cameras\n     */\n    Constants.RIG_MODE_CUSTOM = 22;\n    /**\n     * Maximum number of uv sets supported\n     */\n    Constants.MAX_SUPPORTED_UV_SETS = 6;\n    /**\n     * GL constants\n     */\n    /** Alpha blend equation: ADD */\n    Constants.GL_ALPHA_EQUATION_ADD = 0x8006;\n    /** Alpha equation: MIN */\n    Constants.GL_ALPHA_EQUATION_MIN = 0x8007;\n    /** Alpha equation: MAX */\n    Constants.GL_ALPHA_EQUATION_MAX = 0x8008;\n    /** Alpha equation: SUBTRACT */\n    Constants.GL_ALPHA_EQUATION_SUBTRACT = 0x800a;\n    /** Alpha equation: REVERSE_SUBTRACT */\n    Constants.GL_ALPHA_EQUATION_REVERSE_SUBTRACT = 0x800b;\n    /** Alpha blend function: SRC */\n    Constants.GL_ALPHA_FUNCTION_SRC = 0x0300;\n    /** Alpha blend function: ONE_MINUS_SRC */\n    Constants.GL_ALPHA_FUNCTION_ONE_MINUS_SRC_COLOR = 0x0301;\n    /** Alpha blend function: SRC_ALPHA */\n    Constants.GL_ALPHA_FUNCTION_SRC_ALPHA = 0x0302;\n    /** Alpha blend function: ONE_MINUS_SRC_ALPHA */\n    Constants.GL_ALPHA_FUNCTION_ONE_MINUS_SRC_ALPHA = 0x0303;\n    /** Alpha blend function: DST_ALPHA */\n    Constants.GL_ALPHA_FUNCTION_DST_ALPHA = 0x0304;\n    /** Alpha blend function: ONE_MINUS_DST_ALPHA */\n    Constants.GL_ALPHA_FUNCTION_ONE_MINUS_DST_ALPHA = 0x0305;\n    /** Alpha blend function: ONE_MINUS_DST */\n    Constants.GL_ALPHA_FUNCTION_DST_COLOR = 0x0306;\n    /** Alpha blend function: ONE_MINUS_DST */\n    Constants.GL_ALPHA_FUNCTION_ONE_MINUS_DST_COLOR = 0x0307;\n    /** Alpha blend function: SRC_ALPHA_SATURATED */\n    Constants.GL_ALPHA_FUNCTION_SRC_ALPHA_SATURATED = 0x0308;\n    /** Alpha blend function: CONSTANT */\n    Constants.GL_ALPHA_FUNCTION_CONSTANT_COLOR = 0x8001;\n    /** Alpha blend function: ONE_MINUS_CONSTANT */\n    Constants.GL_ALPHA_FUNCTION_ONE_MINUS_CONSTANT_COLOR = 0x8002;\n    /** Alpha blend function: CONSTANT_ALPHA */\n    Constants.GL_ALPHA_FUNCTION_CONSTANT_ALPHA = 0x8003;\n    /** Alpha blend function: ONE_MINUS_CONSTANT_ALPHA */\n    Constants.GL_ALPHA_FUNCTION_ONE_MINUS_CONSTANT_ALPHA = 0x8004;\n    /** URL to the snippet server. Points to the public snippet server by default */\n    Constants.SnippetUrl = \"https://snippet.babylonjs.com\";\n    return Constants;\n}());\nexport { Constants };\n//# sourceMappingURL=constants.js.map","import { __extends } from \"tslib\";\nimport { Observable } from \"../Misc/observable.js\";\nimport { InternalTexture, InternalTextureSource } from \"../Materials/Textures/internalTexture.js\";\nimport { IsDocumentAvailable, IsWindowObjectExist } from \"../Misc/domManagement.js\";\nimport { EngineStore } from \"./engineStore.js\";\nimport { _WarnImport } from \"../Misc/devTools.js\";\nimport { ThinEngine } from \"./thinEngine.js\";\n\nimport { PerformanceMonitor } from \"../Misc/performanceMonitor.js\";\nimport { PerfCounter } from \"../Misc/perfCounter.js\";\nimport { WebGLDataBuffer } from \"../Meshes/WebGL/webGLDataBuffer.js\";\nimport { Logger } from \"../Misc/logger.js\";\nimport { WebGLHardwareTexture } from \"./WebGL/webGLHardwareTexture.js\";\nimport \"./Extensions/engine.alpha.js\";\nimport \"./Extensions/engine.readTexture.js\";\nimport \"./Extensions/engine.dynamicBuffer.js\";\n/**\n * The engine class is responsible for interfacing with all lower-level APIs such as WebGL and Audio\n */\nvar Engine = /** @class */ (function (_super) {\n    __extends(Engine, _super);\n    /**\n     * Creates a new engine\n     * @param canvasOrContext defines the canvas or WebGL context to use for rendering. If you provide a WebGL context, Babylon.js will not hook events on the canvas (like pointers, keyboards, etc...) so no event observables will be available. This is mostly used when Babylon.js is used as a plugin on a system which already used the WebGL context\n     * @param antialias defines enable antialiasing (default: false)\n     * @param options defines further options to be sent to the getContext() function\n     * @param adaptToDeviceRatio defines whether to adapt to the device's viewport characteristics (default: false)\n     */\n    function Engine(canvasOrContext, antialias, options, adaptToDeviceRatio) {\n        if (adaptToDeviceRatio === void 0) { adaptToDeviceRatio = false; }\n        var _this = _super.call(this, canvasOrContext, antialias, options, adaptToDeviceRatio) || this;\n        // Members\n        /**\n         * Gets or sets a boolean to enable/disable IndexedDB support and avoid XHR on .manifest\n         **/\n        _this.enableOfflineSupport = false;\n        /**\n         * Gets or sets a boolean to enable/disable checking manifest if IndexedDB support is enabled (js will always consider the database is up to date)\n         **/\n        _this.disableManifestCheck = false;\n        /**\n         * Gets the list of created scenes\n         */\n        _this.scenes = new Array();\n        /** @hidden */\n        _this._virtualScenes = new Array();\n        /**\n         * Event raised when a new scene is created\n         */\n        _this.onNewSceneAddedObservable = new Observable();\n        /**\n         * Gets the list of created postprocesses\n         */\n        _this.postProcesses = new Array();\n        /**\n         * Gets a boolean indicating if the pointer is currently locked\n         */\n        _this.isPointerLock = false;\n        // Observables\n        /**\n         * Observable event triggered each time the rendering canvas is resized\n         */\n        _this.onResizeObservable = new Observable();\n        /**\n         * Observable event triggered each time the canvas loses focus\n         */\n        _this.onCanvasBlurObservable = new Observable();\n        /**\n         * Observable event triggered each time the canvas gains focus\n         */\n        _this.onCanvasFocusObservable = new Observable();\n        /**\n         * Observable event triggered each time the canvas receives pointerout event\n         */\n        _this.onCanvasPointerOutObservable = new Observable();\n        /**\n         * Observable raised when the engine begins a new frame\n         */\n        _this.onBeginFrameObservable = new Observable();\n        /**\n         * If set, will be used to request the next animation frame for the render loop\n         */\n        _this.customAnimationFrameRequester = null;\n        /**\n         * Observable raised when the engine ends the current frame\n         */\n        _this.onEndFrameObservable = new Observable();\n        /**\n         * Observable raised when the engine is about to compile a shader\n         */\n        _this.onBeforeShaderCompilationObservable = new Observable();\n        /**\n         * Observable raised when the engine has just compiled a shader\n         */\n        _this.onAfterShaderCompilationObservable = new Observable();\n        // Deterministic lockstepMaxSteps\n        _this._deterministicLockstep = false;\n        _this._lockstepMaxSteps = 4;\n        _this._timeStep = 1 / 60;\n        // FPS\n        _this._fps = 60;\n        _this._deltaTime = 0;\n        /** @hidden */\n        _this._drawCalls = new PerfCounter();\n        /** Gets or sets the tab index to set to the rendering canvas. 1 is the minimum value to set to be able to capture keyboard events */\n        _this.canvasTabIndex = 1;\n        /**\n         * Turn this value on if you want to pause FPS computation when in background\n         */\n        _this.disablePerformanceMonitorInBackground = false;\n        _this._performanceMonitor = new PerformanceMonitor();\n        _this._compatibilityMode = true;\n        /**\n         * Gets or sets the current render pass id\n         */\n        _this.currentRenderPassId = 0;\n        _this._renderPassNames = [\"main\"];\n        Engine.Instances.push(_this);\n        if (!canvasOrContext) {\n            return _this;\n        }\n        _this._features.supportRenderPasses = true;\n        options = _this._creationOptions;\n        if (canvasOrContext.getContext) {\n            var canvas_1 = canvasOrContext;\n            _this._sharedInit(canvas_1, !!options.doNotHandleTouchAction, options.audioEngine);\n            if (IsWindowObjectExist()) {\n                var anyDoc_1 = document;\n                // Fullscreen\n                _this._onFullscreenChange = function () {\n                    if (anyDoc_1.fullscreen !== undefined) {\n                        _this.isFullscreen = anyDoc_1.fullscreen;\n                    }\n                    else if (anyDoc_1.mozFullScreen !== undefined) {\n                        _this.isFullscreen = anyDoc_1.mozFullScreen;\n                    }\n                    else if (anyDoc_1.webkitIsFullScreen !== undefined) {\n                        _this.isFullscreen = anyDoc_1.webkitIsFullScreen;\n                    }\n                    else if (anyDoc_1.msIsFullScreen !== undefined) {\n                        _this.isFullscreen = anyDoc_1.msIsFullScreen;\n                    }\n                    // Pointer lock\n                    if (_this.isFullscreen && _this._pointerLockRequested && canvas_1) {\n                        Engine._RequestPointerlock(canvas_1);\n                    }\n                };\n                document.addEventListener(\"fullscreenchange\", _this._onFullscreenChange, false);\n                document.addEventListener(\"mozfullscreenchange\", _this._onFullscreenChange, false);\n                document.addEventListener(\"webkitfullscreenchange\", _this._onFullscreenChange, false);\n                document.addEventListener(\"msfullscreenchange\", _this._onFullscreenChange, false);\n                // Pointer lock\n                _this._onPointerLockChange = function () {\n                    _this.isPointerLock =\n                        anyDoc_1.mozPointerLockElement === canvas_1 ||\n                            anyDoc_1.webkitPointerLockElement === canvas_1 ||\n                            anyDoc_1.msPointerLockElement === canvas_1 ||\n                            anyDoc_1.pointerLockElement === canvas_1;\n                };\n                document.addEventListener(\"pointerlockchange\", _this._onPointerLockChange, false);\n                document.addEventListener(\"mspointerlockchange\", _this._onPointerLockChange, false);\n                document.addEventListener(\"mozpointerlockchange\", _this._onPointerLockChange, false);\n                document.addEventListener(\"webkitpointerlockchange\", _this._onPointerLockChange, false);\n                // Create Audio Engine if needed.\n                if (!Engine.audioEngine && options.audioEngine && Engine.AudioEngineFactory) {\n                    Engine.audioEngine = Engine.AudioEngineFactory(_this.getRenderingCanvas(), _this.getAudioContext(), _this.getAudioDestination());\n                }\n            }\n            _this._connectVREvents();\n            _this.enableOfflineSupport = Engine.OfflineProviderFactory !== undefined;\n            _this._deterministicLockstep = !!options.deterministicLockstep;\n            _this._lockstepMaxSteps = options.lockstepMaxSteps || 0;\n            _this._timeStep = options.timeStep || 1 / 60;\n        }\n        // Load WebVR Devices\n        _this._prepareVRComponent();\n        if (options.autoEnableWebVR) {\n            _this.initWebVR();\n        }\n        return _this;\n    }\n    Object.defineProperty(Engine, \"NpmPackage\", {\n        /**\n         * Returns the current npm package of the sdk\n         */\n        // Not mixed with Version for tooling purpose.\n        get: function () {\n            return ThinEngine.NpmPackage;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Engine, \"Version\", {\n        /**\n         * Returns the current version of the framework\n         */\n        get: function () {\n            return ThinEngine.Version;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Engine, \"Instances\", {\n        /** Gets the list of created engines */\n        get: function () {\n            return EngineStore.Instances;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Engine, \"LastCreatedEngine\", {\n        /**\n         * Gets the latest created engine\n         */\n        get: function () {\n            return EngineStore.LastCreatedEngine;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Engine, \"LastCreatedScene\", {\n        /**\n         * Gets the latest created scene\n         */\n        get: function () {\n            return EngineStore.LastCreatedScene;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /** @hidden */\n    /**\n     * Engine abstraction for loading and creating an image bitmap from a given source string.\n     * @param imageSource source to load the image from.\n     * @param options An object that sets options for the image's extraction.\n     * @returns ImageBitmap.\n     */\n    Engine.prototype._createImageBitmapFromSource = function (imageSource, options) {\n        var _this = this;\n        var promise = new Promise(function (resolve, reject) {\n            var image = new Image();\n            image.onload = function () {\n                image.decode().then(function () {\n                    _this.createImageBitmap(image, options).then(function (imageBitmap) {\n                        resolve(imageBitmap);\n                    });\n                });\n            };\n            image.onerror = function () {\n                reject(\"Error loading image \".concat(image.src));\n            };\n            image.src = imageSource;\n        });\n        return promise;\n    };\n    /**\n     * Engine abstraction for createImageBitmap\n     * @param image source for image\n     * @param options An object that sets options for the image's extraction.\n     * @returns ImageBitmap\n     */\n    Engine.prototype.createImageBitmap = function (image, options) {\n        return createImageBitmap(image, options);\n    };\n    /**\n     * Resize an image and returns the image data as an uint8array\n     * @param image image to resize\n     * @param bufferWidth destination buffer width\n     * @param bufferHeight destination buffer height\n     * @returns an uint8array containing RGBA values of bufferWidth * bufferHeight size\n     */\n    Engine.prototype.resizeImageBitmap = function (image, bufferWidth, bufferHeight) {\n        var canvas = this.createCanvas(bufferWidth, bufferHeight);\n        var context = canvas.getContext(\"2d\");\n        if (!context) {\n            throw new Error(\"Unable to get 2d context for resizeImageBitmap\");\n        }\n        context.drawImage(image, 0, 0);\n        // Create VertexData from map data\n        // Cast is due to wrong definition in lib.d.ts from ts 1.3 - https://github.com/Microsoft/TypeScript/issues/949\n        var buffer = context.getImageData(0, 0, bufferWidth, bufferHeight).data;\n        return buffer;\n    };\n    /**\n     * Will flag all materials in all scenes in all engines as dirty to trigger new shader compilation\n     * @param flag defines which part of the materials must be marked as dirty\n     * @param predicate defines a predicate used to filter which materials should be affected\n     */\n    Engine.MarkAllMaterialsAsDirty = function (flag, predicate) {\n        for (var engineIndex = 0; engineIndex < Engine.Instances.length; engineIndex++) {\n            var engine = Engine.Instances[engineIndex];\n            for (var sceneIndex = 0; sceneIndex < engine.scenes.length; sceneIndex++) {\n                engine.scenes[sceneIndex].markAllMaterialsAsDirty(flag, predicate);\n            }\n        }\n    };\n    /**\n     * Method called to create the default loading screen.\n     * This can be overridden in your own app.\n     * @param canvas The rendering canvas element\n     * @returns The loading screen\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Engine.DefaultLoadingScreenFactory = function (canvas) {\n        throw _WarnImport(\"LoadingScreen\");\n    };\n    Object.defineProperty(Engine.prototype, \"_supportsHardwareTextureRescaling\", {\n        get: function () {\n            return !!Engine._RescalePostProcessFactory;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Engine.prototype, \"performanceMonitor\", {\n        /**\n         * Gets the performance monitor attached to this engine\n         * @see https://doc.babylonjs.com/how_to/optimizing_your_scene#engineinstrumentation\n         */\n        get: function () {\n            return this._performanceMonitor;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Engine.prototype, \"compatibilityMode\", {\n        /**\n         * (WebGPU only) True (default) to be in compatibility mode, meaning rendering all existing scenes without artifacts (same rendering than WebGL).\n         * Setting the property to false will improve performances but may not work in some scenes if some precautions are not taken.\n         * See https://doc.babylonjs.com/advanced_topics/webGPU/webGPUOptimization/webGPUNonCompatibilityMode for more details\n         */\n        get: function () {\n            return this._compatibilityMode;\n        },\n        set: function (mode) {\n            // not supported in WebGL\n            this._compatibilityMode = true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // Events\n    /**\n     * Gets the HTML element used to attach event listeners\n     * @returns a HTML element\n     */\n    Engine.prototype.getInputElement = function () {\n        return this._renderingCanvas;\n    };\n    /**\n     * Shared initialization across engines types.\n     * @param canvas The canvas associated with this instance of the engine.\n     * @param doNotHandleTouchAction Defines that engine should ignore modifying touch action attribute and style\n     * @param audioEngine Defines if an audio engine should be created by default\n     */\n    Engine.prototype._sharedInit = function (canvas, doNotHandleTouchAction, audioEngine) {\n        var _this = this;\n        _super.prototype._sharedInit.call(this, canvas, doNotHandleTouchAction, audioEngine);\n        this._onCanvasFocus = function () {\n            _this.onCanvasFocusObservable.notifyObservers(_this);\n        };\n        this._onCanvasBlur = function () {\n            _this.onCanvasBlurObservable.notifyObservers(_this);\n        };\n        canvas.addEventListener(\"focus\", this._onCanvasFocus);\n        canvas.addEventListener(\"blur\", this._onCanvasBlur);\n        this._onBlur = function () {\n            if (_this.disablePerformanceMonitorInBackground) {\n                _this._performanceMonitor.disable();\n            }\n            _this._windowIsBackground = true;\n        };\n        this._onFocus = function () {\n            if (_this.disablePerformanceMonitorInBackground) {\n                _this._performanceMonitor.enable();\n            }\n            _this._windowIsBackground = false;\n        };\n        this._onCanvasPointerOut = function (ev) {\n            // Check that the element at the point of the pointer out isn't the canvas and if it isn't, notify observers\n            // Note: This is a workaround for a bug with Safari\n            if (document.elementFromPoint(ev.clientX, ev.clientY) !== canvas) {\n                _this.onCanvasPointerOutObservable.notifyObservers(ev);\n            }\n        };\n        if (IsWindowObjectExist()) {\n            var hostWindow = this.getHostWindow();\n            if (hostWindow) {\n                hostWindow.addEventListener(\"blur\", this._onBlur);\n                hostWindow.addEventListener(\"focus\", this._onFocus);\n            }\n        }\n        canvas.addEventListener(\"pointerout\", this._onCanvasPointerOut);\n        if (!doNotHandleTouchAction) {\n            this._disableTouchAction();\n        }\n        // Create Audio Engine if needed.\n        if (!Engine.audioEngine && audioEngine && Engine.AudioEngineFactory) {\n            Engine.audioEngine = Engine.AudioEngineFactory(this.getRenderingCanvas(), this.getAudioContext(), this.getAudioDestination());\n        }\n    };\n    /**\n     * Gets current aspect ratio\n     * @param viewportOwner defines the camera to use to get the aspect ratio\n     * @param useScreen defines if screen size must be used (or the current render target if any)\n     * @returns a number defining the aspect ratio\n     */\n    Engine.prototype.getAspectRatio = function (viewportOwner, useScreen) {\n        if (useScreen === void 0) { useScreen = false; }\n        var viewport = viewportOwner.viewport;\n        return (this.getRenderWidth(useScreen) * viewport.width) / (this.getRenderHeight(useScreen) * viewport.height);\n    };\n    /**\n     * Gets current screen aspect ratio\n     * @returns a number defining the aspect ratio\n     */\n    Engine.prototype.getScreenAspectRatio = function () {\n        return this.getRenderWidth(true) / this.getRenderHeight(true);\n    };\n    /**\n     * Gets the client rect of the HTML canvas attached with the current webGL context\n     * @returns a client rectangle\n     */\n    Engine.prototype.getRenderingCanvasClientRect = function () {\n        if (!this._renderingCanvas) {\n            return null;\n        }\n        return this._renderingCanvas.getBoundingClientRect();\n    };\n    /**\n     * Gets the client rect of the HTML element used for events\n     * @returns a client rectangle\n     */\n    Engine.prototype.getInputElementClientRect = function () {\n        if (!this._renderingCanvas) {\n            return null;\n        }\n        return this.getInputElement().getBoundingClientRect();\n    };\n    /**\n     * Gets a boolean indicating that the engine is running in deterministic lock step mode\n     * @see https://doc.babylonjs.com/babylon101/animations#deterministic-lockstep\n     * @returns true if engine is in deterministic lock step mode\n     */\n    Engine.prototype.isDeterministicLockStep = function () {\n        return this._deterministicLockstep;\n    };\n    /**\n     * Gets the max steps when engine is running in deterministic lock step\n     * @see https://doc.babylonjs.com/babylon101/animations#deterministic-lockstep\n     * @returns the max steps\n     */\n    Engine.prototype.getLockstepMaxSteps = function () {\n        return this._lockstepMaxSteps;\n    };\n    /**\n     * Returns the time in ms between steps when using deterministic lock step.\n     * @returns time step in (ms)\n     */\n    Engine.prototype.getTimeStep = function () {\n        return this._timeStep * 1000;\n    };\n    /**\n     * Force the mipmap generation for the given render target texture\n     * @param texture defines the render target texture to use\n     * @param unbind defines whether or not to unbind the texture after generation. Defaults to true.\n     */\n    Engine.prototype.generateMipMapsForCubemap = function (texture, unbind) {\n        if (unbind === void 0) { unbind = true; }\n        if (texture.generateMipMaps) {\n            var gl = this._gl;\n            this._bindTextureDirectly(gl.TEXTURE_CUBE_MAP, texture, true);\n            gl.generateMipmap(gl.TEXTURE_CUBE_MAP);\n            if (unbind) {\n                this._bindTextureDirectly(gl.TEXTURE_CUBE_MAP, null);\n            }\n        }\n    };\n    /** States */\n    /**\n     * Gets a boolean indicating if depth testing is enabled\n     * @returns the current state\n     */\n    Engine.prototype.getDepthBuffer = function () {\n        return this._depthCullingState.depthTest;\n    };\n    /**\n     * Enable or disable depth buffering\n     * @param enable defines the state to set\n     */\n    Engine.prototype.setDepthBuffer = function (enable) {\n        this._depthCullingState.depthTest = enable;\n    };\n    /**\n     * Gets a boolean indicating if depth writing is enabled\n     * @returns the current depth writing state\n     */\n    Engine.prototype.getDepthWrite = function () {\n        return this._depthCullingState.depthMask;\n    };\n    /**\n     * Enable or disable depth writing\n     * @param enable defines the state to set\n     */\n    Engine.prototype.setDepthWrite = function (enable) {\n        this._depthCullingState.depthMask = enable;\n    };\n    /**\n     * Gets a boolean indicating if stencil buffer is enabled\n     * @returns the current stencil buffer state\n     */\n    Engine.prototype.getStencilBuffer = function () {\n        return this._stencilState.stencilTest;\n    };\n    /**\n     * Enable or disable the stencil buffer\n     * @param enable defines if the stencil buffer must be enabled or disabled\n     */\n    Engine.prototype.setStencilBuffer = function (enable) {\n        this._stencilState.stencilTest = enable;\n    };\n    /**\n     * Gets the current stencil mask\n     * @returns a number defining the new stencil mask to use\n     */\n    Engine.prototype.getStencilMask = function () {\n        return this._stencilState.stencilMask;\n    };\n    /**\n     * Sets the current stencil mask\n     * @param mask defines the new stencil mask to use\n     */\n    Engine.prototype.setStencilMask = function (mask) {\n        this._stencilState.stencilMask = mask;\n    };\n    /**\n     * Gets the current stencil function\n     * @returns a number defining the stencil function to use\n     */\n    Engine.prototype.getStencilFunction = function () {\n        return this._stencilState.stencilFunc;\n    };\n    /**\n     * Gets the current stencil reference value\n     * @returns a number defining the stencil reference value to use\n     */\n    Engine.prototype.getStencilFunctionReference = function () {\n        return this._stencilState.stencilFuncRef;\n    };\n    /**\n     * Gets the current stencil mask\n     * @returns a number defining the stencil mask to use\n     */\n    Engine.prototype.getStencilFunctionMask = function () {\n        return this._stencilState.stencilFuncMask;\n    };\n    /**\n     * Sets the current stencil function\n     * @param stencilFunc defines the new stencil function to use\n     */\n    Engine.prototype.setStencilFunction = function (stencilFunc) {\n        this._stencilState.stencilFunc = stencilFunc;\n    };\n    /**\n     * Sets the current stencil reference\n     * @param reference defines the new stencil reference to use\n     */\n    Engine.prototype.setStencilFunctionReference = function (reference) {\n        this._stencilState.stencilFuncRef = reference;\n    };\n    /**\n     * Sets the current stencil mask\n     * @param mask defines the new stencil mask to use\n     */\n    Engine.prototype.setStencilFunctionMask = function (mask) {\n        this._stencilState.stencilFuncMask = mask;\n    };\n    /**\n     * Gets the current stencil operation when stencil fails\n     * @returns a number defining stencil operation to use when stencil fails\n     */\n    Engine.prototype.getStencilOperationFail = function () {\n        return this._stencilState.stencilOpStencilFail;\n    };\n    /**\n     * Gets the current stencil operation when depth fails\n     * @returns a number defining stencil operation to use when depth fails\n     */\n    Engine.prototype.getStencilOperationDepthFail = function () {\n        return this._stencilState.stencilOpDepthFail;\n    };\n    /**\n     * Gets the current stencil operation when stencil passes\n     * @returns a number defining stencil operation to use when stencil passes\n     */\n    Engine.prototype.getStencilOperationPass = function () {\n        return this._stencilState.stencilOpStencilDepthPass;\n    };\n    /**\n     * Sets the stencil operation to use when stencil fails\n     * @param operation defines the stencil operation to use when stencil fails\n     */\n    Engine.prototype.setStencilOperationFail = function (operation) {\n        this._stencilState.stencilOpStencilFail = operation;\n    };\n    /**\n     * Sets the stencil operation to use when depth fails\n     * @param operation defines the stencil operation to use when depth fails\n     */\n    Engine.prototype.setStencilOperationDepthFail = function (operation) {\n        this._stencilState.stencilOpDepthFail = operation;\n    };\n    /**\n     * Sets the stencil operation to use when stencil passes\n     * @param operation defines the stencil operation to use when stencil passes\n     */\n    Engine.prototype.setStencilOperationPass = function (operation) {\n        this._stencilState.stencilOpStencilDepthPass = operation;\n    };\n    /**\n     * Sets a boolean indicating if the dithering state is enabled or disabled\n     * @param value defines the dithering state\n     */\n    Engine.prototype.setDitheringState = function (value) {\n        if (value) {\n            this._gl.enable(this._gl.DITHER);\n        }\n        else {\n            this._gl.disable(this._gl.DITHER);\n        }\n    };\n    /**\n     * Sets a boolean indicating if the rasterizer state is enabled or disabled\n     * @param value defines the rasterizer state\n     */\n    Engine.prototype.setRasterizerState = function (value) {\n        if (value) {\n            this._gl.disable(this._gl.RASTERIZER_DISCARD);\n        }\n        else {\n            this._gl.enable(this._gl.RASTERIZER_DISCARD);\n        }\n    };\n    /**\n     * Gets the current depth function\n     * @returns a number defining the depth function\n     */\n    Engine.prototype.getDepthFunction = function () {\n        return this._depthCullingState.depthFunc;\n    };\n    /**\n     * Sets the current depth function\n     * @param depthFunc defines the function to use\n     */\n    Engine.prototype.setDepthFunction = function (depthFunc) {\n        this._depthCullingState.depthFunc = depthFunc;\n    };\n    /**\n     * Sets the current depth function to GREATER\n     */\n    Engine.prototype.setDepthFunctionToGreater = function () {\n        this.setDepthFunction(516);\n    };\n    /**\n     * Sets the current depth function to GEQUAL\n     */\n    Engine.prototype.setDepthFunctionToGreaterOrEqual = function () {\n        this.setDepthFunction(518);\n    };\n    /**\n     * Sets the current depth function to LESS\n     */\n    Engine.prototype.setDepthFunctionToLess = function () {\n        this.setDepthFunction(513);\n    };\n    /**\n     * Sets the current depth function to LEQUAL\n     */\n    Engine.prototype.setDepthFunctionToLessOrEqual = function () {\n        this.setDepthFunction(515);\n    };\n    /**\n     * Caches the the state of the stencil buffer\n     */\n    Engine.prototype.cacheStencilState = function () {\n        this._cachedStencilBuffer = this.getStencilBuffer();\n        this._cachedStencilFunction = this.getStencilFunction();\n        this._cachedStencilMask = this.getStencilMask();\n        this._cachedStencilOperationPass = this.getStencilOperationPass();\n        this._cachedStencilOperationFail = this.getStencilOperationFail();\n        this._cachedStencilOperationDepthFail = this.getStencilOperationDepthFail();\n        this._cachedStencilReference = this.getStencilFunctionReference();\n    };\n    /**\n     * Restores the state of the stencil buffer\n     */\n    Engine.prototype.restoreStencilState = function () {\n        this.setStencilFunction(this._cachedStencilFunction);\n        this.setStencilMask(this._cachedStencilMask);\n        this.setStencilBuffer(this._cachedStencilBuffer);\n        this.setStencilOperationPass(this._cachedStencilOperationPass);\n        this.setStencilOperationFail(this._cachedStencilOperationFail);\n        this.setStencilOperationDepthFail(this._cachedStencilOperationDepthFail);\n        this.setStencilFunctionReference(this._cachedStencilReference);\n    };\n    /**\n     * Directly set the WebGL Viewport\n     * @param x defines the x coordinate of the viewport (in screen space)\n     * @param y defines the y coordinate of the viewport (in screen space)\n     * @param width defines the width of the viewport (in screen space)\n     * @param height defines the height of the viewport (in screen space)\n     * @return the current viewport Object (if any) that is being replaced by this call. You can restore this viewport later on to go back to the original state\n     */\n    Engine.prototype.setDirectViewport = function (x, y, width, height) {\n        var currentViewport = this._cachedViewport;\n        this._cachedViewport = null;\n        this._viewport(x, y, width, height);\n        return currentViewport;\n    };\n    /**\n     * Executes a scissor clear (ie. a clear on a specific portion of the screen)\n     * @param x defines the x-coordinate of the bottom left corner of the clear rectangle\n     * @param y defines the y-coordinate of the corner of the clear rectangle\n     * @param width defines the width of the clear rectangle\n     * @param height defines the height of the clear rectangle\n     * @param clearColor defines the clear color\n     */\n    Engine.prototype.scissorClear = function (x, y, width, height, clearColor) {\n        this.enableScissor(x, y, width, height);\n        this.clear(clearColor, true, true, true);\n        this.disableScissor();\n    };\n    /**\n     * Enable scissor test on a specific rectangle (ie. render will only be executed on a specific portion of the screen)\n     * @param x defines the x-coordinate of the bottom left corner of the clear rectangle\n     * @param y defines the y-coordinate of the corner of the clear rectangle\n     * @param width defines the width of the clear rectangle\n     * @param height defines the height of the clear rectangle\n     */\n    Engine.prototype.enableScissor = function (x, y, width, height) {\n        var gl = this._gl;\n        // Change state\n        gl.enable(gl.SCISSOR_TEST);\n        gl.scissor(x, y, width, height);\n    };\n    /**\n     * Disable previously set scissor test rectangle\n     */\n    Engine.prototype.disableScissor = function () {\n        var gl = this._gl;\n        gl.disable(gl.SCISSOR_TEST);\n    };\n    /**\n     * @param numDrawCalls\n     * @hidden\n     */\n    Engine.prototype._reportDrawCall = function (numDrawCalls) {\n        if (numDrawCalls === void 0) { numDrawCalls = 1; }\n        this._drawCalls.addCount(numDrawCalls, false);\n    };\n    /**\n     * Initializes a webVR display and starts listening to display change events\n     * The onVRDisplayChangedObservable will be notified upon these changes\n     * @returns The onVRDisplayChangedObservable\n     */\n    Engine.prototype.initWebVR = function () {\n        throw _WarnImport(\"WebVRCamera\");\n    };\n    /** @hidden */\n    Engine.prototype._prepareVRComponent = function () {\n        // Do nothing as the engine side effect will overload it\n    };\n    /**\n     * @param canvas\n     * @param document\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Engine.prototype._connectVREvents = function (canvas, document) {\n        // Do nothing as the engine side effect will overload it\n    };\n    /** @hidden */\n    Engine.prototype._submitVRFrame = function () {\n        // Do nothing as the engine side effect will overload it\n    };\n    /**\n     * Call this function to leave webVR mode\n     * Will do nothing if webVR is not supported or if there is no webVR device\n     * @see https://doc.babylonjs.com/how_to/webvr_camera\n     */\n    Engine.prototype.disableVR = function () {\n        // Do nothing as the engine side effect will overload it\n    };\n    /**\n     * Gets a boolean indicating that the system is in VR mode and is presenting\n     * @returns true if VR mode is engaged\n     */\n    Engine.prototype.isVRPresenting = function () {\n        return false;\n    };\n    /** @hidden */\n    Engine.prototype._requestVRFrame = function () {\n        // Do nothing as the engine side effect will overload it\n    };\n    /**\n     * @param url\n     * @param offlineProvider\n     * @param useArrayBuffer\n     * @hidden\n     */\n    Engine.prototype._loadFileAsync = function (url, offlineProvider, useArrayBuffer) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._loadFile(url, function (data) {\n                resolve(data);\n            }, undefined, offlineProvider, useArrayBuffer, function (request, exception) {\n                reject(exception);\n            });\n        });\n    };\n    /**\n     * Gets the source code of the vertex shader associated with a specific webGL program\n     * @param program defines the program to use\n     * @returns a string containing the source code of the vertex shader associated with the program\n     */\n    Engine.prototype.getVertexShaderSource = function (program) {\n        var shaders = this._gl.getAttachedShaders(program);\n        if (!shaders) {\n            return null;\n        }\n        return this._gl.getShaderSource(shaders[0]);\n    };\n    /**\n     * Gets the source code of the fragment shader associated with a specific webGL program\n     * @param program defines the program to use\n     * @returns a string containing the source code of the fragment shader associated with the program\n     */\n    Engine.prototype.getFragmentShaderSource = function (program) {\n        var shaders = this._gl.getAttachedShaders(program);\n        if (!shaders) {\n            return null;\n        }\n        return this._gl.getShaderSource(shaders[1]);\n    };\n    /**\n     * Sets a depth stencil texture from a render target to the according uniform.\n     * @param channel The texture channel\n     * @param uniform The uniform to set\n     * @param texture The render target texture containing the depth stencil texture to apply\n     * @param name The texture name\n     */\n    Engine.prototype.setDepthStencilTexture = function (channel, uniform, texture, name) {\n        if (channel === undefined) {\n            return;\n        }\n        if (uniform) {\n            this._boundUniforms[channel] = uniform;\n        }\n        if (!texture || !texture.depthStencilTexture) {\n            this._setTexture(channel, null, undefined, undefined, name);\n        }\n        else {\n            this._setTexture(channel, texture, false, true, name);\n        }\n    };\n    /**\n     * Sets a texture to the webGL context from a postprocess\n     * @param channel defines the channel to use\n     * @param postProcess defines the source postprocess\n     * @param name name of the channel\n     */\n    Engine.prototype.setTextureFromPostProcess = function (channel, postProcess, name) {\n        var _a;\n        var postProcessInput = null;\n        if (postProcess) {\n            if (postProcess._textures.data[postProcess._currentRenderTextureInd]) {\n                postProcessInput = postProcess._textures.data[postProcess._currentRenderTextureInd];\n            }\n            else if (postProcess._forcedOutputTexture) {\n                postProcessInput = postProcess._forcedOutputTexture;\n            }\n        }\n        this._bindTexture(channel, (_a = postProcessInput === null || postProcessInput === void 0 ? void 0 : postProcessInput.texture) !== null && _a !== void 0 ? _a : null, name);\n    };\n    /**\n     * Binds the output of the passed in post process to the texture channel specified\n     * @param channel The channel the texture should be bound to\n     * @param postProcess The post process which's output should be bound\n     * @param name name of the channel\n     */\n    Engine.prototype.setTextureFromPostProcessOutput = function (channel, postProcess, name) {\n        var _a, _b;\n        this._bindTexture(channel, (_b = (_a = postProcess === null || postProcess === void 0 ? void 0 : postProcess._outputTexture) === null || _a === void 0 ? void 0 : _a.texture) !== null && _b !== void 0 ? _b : null, name);\n    };\n    Engine.prototype._rebuildBuffers = function () {\n        // Index / Vertex\n        for (var _i = 0, _a = this.scenes; _i < _a.length; _i++) {\n            var scene = _a[_i];\n            scene.resetCachedMaterial();\n            scene._rebuildGeometries();\n            scene._rebuildTextures();\n        }\n        for (var _b = 0, _c = this._virtualScenes; _b < _c.length; _b++) {\n            var scene = _c[_b];\n            scene.resetCachedMaterial();\n            scene._rebuildGeometries();\n            scene._rebuildTextures();\n        }\n        _super.prototype._rebuildBuffers.call(this);\n    };\n    /** @hidden */\n    Engine.prototype._renderFrame = function () {\n        for (var index = 0; index < this._activeRenderLoops.length; index++) {\n            var renderFunction = this._activeRenderLoops[index];\n            renderFunction();\n        }\n    };\n    Engine.prototype._renderLoop = function () {\n        if (!this._contextWasLost) {\n            var shouldRender = true;\n            if (!this.renderEvenInBackground && this._windowIsBackground) {\n                shouldRender = false;\n            }\n            if (shouldRender) {\n                // Start new frame\n                this.beginFrame();\n                // Child canvases\n                if (!this._renderViews()) {\n                    // Main frame\n                    this._renderFrame();\n                }\n                // Present\n                this.endFrame();\n            }\n        }\n        if (this._activeRenderLoops.length > 0) {\n            // Register new frame\n            if (this.customAnimationFrameRequester) {\n                this.customAnimationFrameRequester.requestID = this._queueNewFrame(this.customAnimationFrameRequester.renderFunction || this._boundRenderFunction, this.customAnimationFrameRequester);\n                this._frameHandler = this.customAnimationFrameRequester.requestID;\n            }\n            else if (this.isVRPresenting()) {\n                this._requestVRFrame();\n            }\n            else {\n                this._frameHandler = this._queueNewFrame(this._boundRenderFunction, this.getHostWindow());\n            }\n        }\n        else {\n            this._renderingQueueLaunched = false;\n        }\n    };\n    /** @hidden */\n    Engine.prototype._renderViews = function () {\n        return false;\n    };\n    /**\n     * Toggle full screen mode\n     * @param requestPointerLock defines if a pointer lock should be requested from the user\n     */\n    Engine.prototype.switchFullscreen = function (requestPointerLock) {\n        if (this.isFullscreen) {\n            this.exitFullscreen();\n        }\n        else {\n            this.enterFullscreen(requestPointerLock);\n        }\n    };\n    /**\n     * Enters full screen mode\n     * @param requestPointerLock defines if a pointer lock should be requested from the user\n     */\n    Engine.prototype.enterFullscreen = function (requestPointerLock) {\n        if (!this.isFullscreen) {\n            this._pointerLockRequested = requestPointerLock;\n            if (this._renderingCanvas) {\n                Engine._RequestFullscreen(this._renderingCanvas);\n            }\n        }\n    };\n    /**\n     * Exits full screen mode\n     */\n    Engine.prototype.exitFullscreen = function () {\n        if (this.isFullscreen) {\n            Engine._ExitFullscreen();\n        }\n    };\n    /**\n     * Enters Pointerlock mode\n     */\n    Engine.prototype.enterPointerlock = function () {\n        if (this._renderingCanvas) {\n            Engine._RequestPointerlock(this._renderingCanvas);\n        }\n    };\n    /**\n     * Exits Pointerlock mode\n     */\n    Engine.prototype.exitPointerlock = function () {\n        Engine._ExitPointerlock();\n    };\n    /**\n     * Begin a new frame\n     */\n    Engine.prototype.beginFrame = function () {\n        this._measureFps();\n        this.onBeginFrameObservable.notifyObservers(this);\n        _super.prototype.beginFrame.call(this);\n    };\n    /**\n     * End the current frame\n     */\n    Engine.prototype.endFrame = function () {\n        _super.prototype.endFrame.call(this);\n        this._submitVRFrame();\n        this.onEndFrameObservable.notifyObservers(this);\n    };\n    /**\n     * Resize the view according to the canvas' size\n     * @param forceSetSize true to force setting the sizes of the underlying canvas\n     */\n    Engine.prototype.resize = function (forceSetSize) {\n        if (forceSetSize === void 0) { forceSetSize = false; }\n        // We're not resizing the size of the canvas while in VR mode & presenting\n        if (this.isVRPresenting()) {\n            return;\n        }\n        _super.prototype.resize.call(this, forceSetSize);\n    };\n    /**\n     * Force a specific size of the canvas\n     * @param width defines the new canvas' width\n     * @param height defines the new canvas' height\n     * @param forceSetSize true to force setting the sizes of the underlying canvas\n     * @returns true if the size was changed\n     */\n    Engine.prototype.setSize = function (width, height, forceSetSize) {\n        if (forceSetSize === void 0) { forceSetSize = false; }\n        if (!this._renderingCanvas) {\n            return false;\n        }\n        if (!_super.prototype.setSize.call(this, width, height, forceSetSize)) {\n            return false;\n        }\n        if (this.scenes) {\n            for (var index = 0; index < this.scenes.length; index++) {\n                var scene = this.scenes[index];\n                for (var camIndex = 0; camIndex < scene.cameras.length; camIndex++) {\n                    var cam = scene.cameras[camIndex];\n                    cam._currentRenderId = 0;\n                }\n            }\n            if (this.onResizeObservable.hasObservers()) {\n                this.onResizeObservable.notifyObservers(this);\n            }\n        }\n        return true;\n    };\n    Engine.prototype._deletePipelineContext = function (pipelineContext) {\n        var webGLPipelineContext = pipelineContext;\n        if (webGLPipelineContext && webGLPipelineContext.program) {\n            if (webGLPipelineContext.transformFeedback) {\n                this.deleteTransformFeedback(webGLPipelineContext.transformFeedback);\n                webGLPipelineContext.transformFeedback = null;\n            }\n        }\n        _super.prototype._deletePipelineContext.call(this, pipelineContext);\n    };\n    Engine.prototype.createShaderProgram = function (pipelineContext, vertexCode, fragmentCode, defines, context, transformFeedbackVaryings) {\n        if (transformFeedbackVaryings === void 0) { transformFeedbackVaryings = null; }\n        context = context || this._gl;\n        this.onBeforeShaderCompilationObservable.notifyObservers(this);\n        var program = _super.prototype.createShaderProgram.call(this, pipelineContext, vertexCode, fragmentCode, defines, context, transformFeedbackVaryings);\n        this.onAfterShaderCompilationObservable.notifyObservers(this);\n        return program;\n    };\n    Engine.prototype._createShaderProgram = function (pipelineContext, vertexShader, fragmentShader, context, transformFeedbackVaryings) {\n        if (transformFeedbackVaryings === void 0) { transformFeedbackVaryings = null; }\n        var shaderProgram = context.createProgram();\n        pipelineContext.program = shaderProgram;\n        if (!shaderProgram) {\n            throw new Error(\"Unable to create program\");\n        }\n        context.attachShader(shaderProgram, vertexShader);\n        context.attachShader(shaderProgram, fragmentShader);\n        if (this.webGLVersion > 1 && transformFeedbackVaryings) {\n            var transformFeedback = this.createTransformFeedback();\n            this.bindTransformFeedback(transformFeedback);\n            this.setTranformFeedbackVaryings(shaderProgram, transformFeedbackVaryings);\n            pipelineContext.transformFeedback = transformFeedback;\n        }\n        context.linkProgram(shaderProgram);\n        if (this.webGLVersion > 1 && transformFeedbackVaryings) {\n            this.bindTransformFeedback(null);\n        }\n        pipelineContext.context = context;\n        pipelineContext.vertexShader = vertexShader;\n        pipelineContext.fragmentShader = fragmentShader;\n        if (!pipelineContext.isParallelCompiled) {\n            this._finalizePipelineContext(pipelineContext);\n        }\n        return shaderProgram;\n    };\n    /**\n     * @param texture\n     * @hidden\n     */\n    Engine.prototype._releaseTexture = function (texture) {\n        _super.prototype._releaseTexture.call(this, texture);\n    };\n    /**\n     * @param rtWrapper\n     * @hidden\n     */\n    Engine.prototype._releaseRenderTargetWrapper = function (rtWrapper) {\n        _super.prototype._releaseRenderTargetWrapper.call(this, rtWrapper);\n        // Set output texture of post process to null if the framebuffer has been released/disposed\n        this.scenes.forEach(function (scene) {\n            scene.postProcesses.forEach(function (postProcess) {\n                if (postProcess._outputTexture === rtWrapper) {\n                    postProcess._outputTexture = null;\n                }\n            });\n            scene.cameras.forEach(function (camera) {\n                camera._postProcesses.forEach(function (postProcess) {\n                    if (postProcess) {\n                        if (postProcess._outputTexture === rtWrapper) {\n                            postProcess._outputTexture = null;\n                        }\n                    }\n                });\n            });\n        });\n    };\n    /**\n     * Gets the names of the render passes that are currently created\n     * @returns list of the render pass names\n     */\n    Engine.prototype.getRenderPassNames = function () {\n        return this._renderPassNames;\n    };\n    /**\n     * Gets the name of the current render pass\n     * @returns name of the current render pass\n     */\n    Engine.prototype.getCurrentRenderPassName = function () {\n        return this._renderPassNames[this.currentRenderPassId];\n    };\n    /**\n     * Creates a render pass id\n     * @param name Name of the render pass (for debug purpose only)\n     * @returns the id of the new render pass\n     */\n    Engine.prototype.createRenderPassId = function (name) {\n        // Note: render pass id == 0 is always for the main render pass\n        var id = ++Engine._RenderPassIdCounter;\n        this._renderPassNames[id] = name !== null && name !== void 0 ? name : \"NONAME\";\n        return id;\n    };\n    /**\n     * Releases a render pass id\n     * @param id id of the render pass to release\n     */\n    Engine.prototype.releaseRenderPassId = function (id) {\n        this._renderPassNames[id] = undefined;\n        for (var s = 0; s < this.scenes.length; ++s) {\n            var scene = this.scenes[s];\n            for (var m = 0; m < scene.meshes.length; ++m) {\n                var mesh = scene.meshes[m];\n                if (mesh.subMeshes) {\n                    for (var b = 0; b < mesh.subMeshes.length; ++b) {\n                        var subMesh = mesh.subMeshes[b];\n                        subMesh._removeDrawWrapper(id);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     * Rescales a texture\n     * @param source input texture\n     * @param destination destination texture\n     * @param scene scene to use to render the resize\n     * @param internalFormat format to use when resizing\n     * @param onComplete callback to be called when resize has completed\n     */\n    Engine.prototype._rescaleTexture = function (source, destination, scene, internalFormat, onComplete) {\n        var _this = this;\n        this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MAG_FILTER, this._gl.LINEAR);\n        this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MIN_FILTER, this._gl.LINEAR);\n        this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_WRAP_S, this._gl.CLAMP_TO_EDGE);\n        this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_WRAP_T, this._gl.CLAMP_TO_EDGE);\n        var rtt = this.createRenderTargetTexture({\n            width: destination.width,\n            height: destination.height,\n        }, {\n            generateMipMaps: false,\n            type: 0,\n            samplingMode: 2,\n            generateDepthBuffer: false,\n            generateStencilBuffer: false,\n        });\n        if (!this._rescalePostProcess && Engine._RescalePostProcessFactory) {\n            this._rescalePostProcess = Engine._RescalePostProcessFactory(this);\n        }\n        this._rescalePostProcess.externalTextureSamplerBinding = true;\n        this._rescalePostProcess.getEffect().executeWhenCompiled(function () {\n            _this._rescalePostProcess.onApply = function (effect) {\n                effect._bindTexture(\"textureSampler\", source);\n            };\n            var hostingScene = scene;\n            if (!hostingScene) {\n                hostingScene = _this.scenes[_this.scenes.length - 1];\n            }\n            hostingScene.postProcessManager.directRender([_this._rescalePostProcess], rtt, true);\n            _this._bindTextureDirectly(_this._gl.TEXTURE_2D, destination, true);\n            _this._gl.copyTexImage2D(_this._gl.TEXTURE_2D, 0, internalFormat, 0, 0, destination.width, destination.height, 0);\n            _this.unBindFramebuffer(rtt);\n            rtt.dispose();\n            if (onComplete) {\n                onComplete();\n            }\n        });\n    };\n    // FPS\n    /**\n     * Gets the current framerate\n     * @returns a number representing the framerate\n     */\n    Engine.prototype.getFps = function () {\n        return this._fps;\n    };\n    /**\n     * Gets the time spent between current and previous frame\n     * @returns a number representing the delta time in ms\n     */\n    Engine.prototype.getDeltaTime = function () {\n        return this._deltaTime;\n    };\n    Engine.prototype._measureFps = function () {\n        this._performanceMonitor.sampleFrame();\n        this._fps = this._performanceMonitor.averageFPS;\n        this._deltaTime = this._performanceMonitor.instantaneousFrameTime || 0;\n    };\n    /**\n     * Wraps an external web gl texture in a Babylon texture.\n     * @param texture defines the external texture\n     * @returns the babylon internal texture\n     */\n    Engine.prototype.wrapWebGLTexture = function (texture) {\n        var hardwareTexture = new WebGLHardwareTexture(texture, this._gl);\n        var internalTexture = new InternalTexture(this, InternalTextureSource.Unknown, true);\n        internalTexture._hardwareTexture = hardwareTexture;\n        internalTexture.isReady = true;\n        return internalTexture;\n    };\n    /**\n     * @param texture\n     * @param image\n     * @param faceIndex\n     * @param lod\n     * @hidden\n     */\n    Engine.prototype._uploadImageToTexture = function (texture, image, faceIndex, lod) {\n        if (faceIndex === void 0) { faceIndex = 0; }\n        if (lod === void 0) { lod = 0; }\n        var gl = this._gl;\n        var textureType = this._getWebGLTextureType(texture.type);\n        var format = this._getInternalFormat(texture.format);\n        var internalFormat = this._getRGBABufferInternalSizedFormat(texture.type, format);\n        var bindTarget = texture.isCube ? gl.TEXTURE_CUBE_MAP : gl.TEXTURE_2D;\n        this._bindTextureDirectly(bindTarget, texture, true);\n        this._unpackFlipY(texture.invertY);\n        var target = gl.TEXTURE_2D;\n        if (texture.isCube) {\n            target = gl.TEXTURE_CUBE_MAP_POSITIVE_X + faceIndex;\n        }\n        gl.texImage2D(target, lod, internalFormat, format, textureType, image);\n        this._bindTextureDirectly(bindTarget, null, true);\n    };\n    /**\n     * Updates a depth texture Comparison Mode and Function.\n     * If the comparison Function is equal to 0, the mode will be set to none.\n     * Otherwise, this only works in webgl 2 and requires a shadow sampler in the shader.\n     * @param texture The texture to set the comparison function for\n     * @param comparisonFunction The comparison function to set, 0 if no comparison required\n     */\n    Engine.prototype.updateTextureComparisonFunction = function (texture, comparisonFunction) {\n        if (this.webGLVersion === 1) {\n            Logger.Error(\"WebGL 1 does not support texture comparison.\");\n            return;\n        }\n        var gl = this._gl;\n        if (texture.isCube) {\n            this._bindTextureDirectly(this._gl.TEXTURE_CUBE_MAP, texture, true);\n            if (comparisonFunction === 0) {\n                gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_COMPARE_FUNC, 515);\n                gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_COMPARE_MODE, gl.NONE);\n            }\n            else {\n                gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_COMPARE_FUNC, comparisonFunction);\n                gl.texParameteri(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n            }\n            this._bindTextureDirectly(this._gl.TEXTURE_CUBE_MAP, null);\n        }\n        else {\n            this._bindTextureDirectly(this._gl.TEXTURE_2D, texture, true);\n            if (comparisonFunction === 0) {\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_COMPARE_FUNC, 515);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_COMPARE_MODE, gl.NONE);\n            }\n            else {\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_COMPARE_FUNC, comparisonFunction);\n                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_COMPARE_MODE, gl.COMPARE_REF_TO_TEXTURE);\n            }\n            this._bindTextureDirectly(this._gl.TEXTURE_2D, null);\n        }\n        texture._comparisonFunction = comparisonFunction;\n    };\n    /**\n     * Creates a webGL buffer to use with instantiation\n     * @param capacity defines the size of the buffer\n     * @returns the webGL buffer\n     */\n    Engine.prototype.createInstancesBuffer = function (capacity) {\n        var buffer = this._gl.createBuffer();\n        if (!buffer) {\n            throw new Error(\"Unable to create instance buffer\");\n        }\n        var result = new WebGLDataBuffer(buffer);\n        result.capacity = capacity;\n        this.bindArrayBuffer(result);\n        this._gl.bufferData(this._gl.ARRAY_BUFFER, capacity, this._gl.DYNAMIC_DRAW);\n        result.references = 1;\n        return result;\n    };\n    /**\n     * Delete a webGL buffer used with instantiation\n     * @param buffer defines the webGL buffer to delete\n     */\n    Engine.prototype.deleteInstancesBuffer = function (buffer) {\n        this._gl.deleteBuffer(buffer);\n    };\n    Engine.prototype._clientWaitAsync = function (sync, flags, intervalms) {\n        if (flags === void 0) { flags = 0; }\n        if (intervalms === void 0) { intervalms = 10; }\n        var gl = this._gl;\n        return new Promise(function (resolve, reject) {\n            var check = function () {\n                var res = gl.clientWaitSync(sync, flags, 0);\n                if (res == gl.WAIT_FAILED) {\n                    reject();\n                    return;\n                }\n                if (res == gl.TIMEOUT_EXPIRED) {\n                    setTimeout(check, intervalms);\n                    return;\n                }\n                resolve();\n            };\n            check();\n        });\n    };\n    /**\n     * @param x\n     * @param y\n     * @param w\n     * @param h\n     * @param format\n     * @param type\n     * @param outputBuffer\n     * @hidden\n     */\n    Engine.prototype._readPixelsAsync = function (x, y, w, h, format, type, outputBuffer) {\n        if (this._webGLVersion < 2) {\n            throw new Error(\"_readPixelsAsync only work on WebGL2+\");\n        }\n        var gl = this._gl;\n        var buf = gl.createBuffer();\n        gl.bindBuffer(gl.PIXEL_PACK_BUFFER, buf);\n        gl.bufferData(gl.PIXEL_PACK_BUFFER, outputBuffer.byteLength, gl.STREAM_READ);\n        gl.readPixels(x, y, w, h, format, type, 0);\n        gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null);\n        var sync = gl.fenceSync(gl.SYNC_GPU_COMMANDS_COMPLETE, 0);\n        if (!sync) {\n            return null;\n        }\n        gl.flush();\n        return this._clientWaitAsync(sync, 0, 10).then(function () {\n            gl.deleteSync(sync);\n            gl.bindBuffer(gl.PIXEL_PACK_BUFFER, buf);\n            gl.getBufferSubData(gl.PIXEL_PACK_BUFFER, 0, outputBuffer);\n            gl.bindBuffer(gl.PIXEL_PACK_BUFFER, null);\n            gl.deleteBuffer(buf);\n            return outputBuffer;\n        });\n    };\n    Engine.prototype.dispose = function () {\n        this.hideLoadingUI();\n        this.onNewSceneAddedObservable.clear();\n        // Release postProcesses\n        while (this.postProcesses.length) {\n            this.postProcesses[0].dispose();\n        }\n        // Rescale PP\n        if (this._rescalePostProcess) {\n            this._rescalePostProcess.dispose();\n        }\n        // Release scenes\n        while (this.scenes.length) {\n            this.scenes[0].dispose();\n        }\n        while (this._virtualScenes.length) {\n            this._virtualScenes[0].dispose();\n        }\n        // Release audio engine\n        if (Engine.Instances.length === 1 && Engine.audioEngine) {\n            Engine.audioEngine.dispose();\n            Engine.audioEngine = null;\n        }\n        //WebVR\n        this.disableVR();\n        // Events\n        if (IsWindowObjectExist()) {\n            window.removeEventListener(\"blur\", this._onBlur);\n            window.removeEventListener(\"focus\", this._onFocus);\n            if (this._renderingCanvas) {\n                this._renderingCanvas.removeEventListener(\"focus\", this._onCanvasFocus);\n                this._renderingCanvas.removeEventListener(\"blur\", this._onCanvasBlur);\n                this._renderingCanvas.removeEventListener(\"pointerout\", this._onCanvasPointerOut);\n            }\n            if (IsDocumentAvailable()) {\n                document.removeEventListener(\"fullscreenchange\", this._onFullscreenChange);\n                document.removeEventListener(\"mozfullscreenchange\", this._onFullscreenChange);\n                document.removeEventListener(\"webkitfullscreenchange\", this._onFullscreenChange);\n                document.removeEventListener(\"msfullscreenchange\", this._onFullscreenChange);\n                document.removeEventListener(\"pointerlockchange\", this._onPointerLockChange);\n                document.removeEventListener(\"mspointerlockchange\", this._onPointerLockChange);\n                document.removeEventListener(\"mozpointerlockchange\", this._onPointerLockChange);\n                document.removeEventListener(\"webkitpointerlockchange\", this._onPointerLockChange);\n            }\n        }\n        _super.prototype.dispose.call(this);\n        // Remove from Instances\n        var index = Engine.Instances.indexOf(this);\n        if (index >= 0) {\n            Engine.Instances.splice(index, 1);\n        }\n        // Observables\n        this.onResizeObservable.clear();\n        this.onCanvasBlurObservable.clear();\n        this.onCanvasFocusObservable.clear();\n        this.onCanvasPointerOutObservable.clear();\n        this.onBeginFrameObservable.clear();\n        this.onEndFrameObservable.clear();\n    };\n    Engine.prototype._disableTouchAction = function () {\n        if (!this._renderingCanvas || !this._renderingCanvas.setAttribute) {\n            return;\n        }\n        this._renderingCanvas.setAttribute(\"touch-action\", \"none\");\n        this._renderingCanvas.style.touchAction = \"none\";\n        this._renderingCanvas.style.msTouchAction = \"none\";\n        this._renderingCanvas.style.webkitTapHighlightColor = \"transparent\";\n    };\n    // Loading screen\n    /**\n     * Display the loading screen\n     * @see https://doc.babylonjs.com/how_to/creating_a_custom_loading_screen\n     */\n    Engine.prototype.displayLoadingUI = function () {\n        if (!IsWindowObjectExist()) {\n            return;\n        }\n        var loadingScreen = this.loadingScreen;\n        if (loadingScreen) {\n            loadingScreen.displayLoadingUI();\n        }\n    };\n    /**\n     * Hide the loading screen\n     * @see https://doc.babylonjs.com/how_to/creating_a_custom_loading_screen\n     */\n    Engine.prototype.hideLoadingUI = function () {\n        if (!IsWindowObjectExist()) {\n            return;\n        }\n        var loadingScreen = this._loadingScreen;\n        if (loadingScreen) {\n            loadingScreen.hideLoadingUI();\n        }\n    };\n    Object.defineProperty(Engine.prototype, \"loadingScreen\", {\n        /**\n         * Gets the current loading screen object\n         * @see https://doc.babylonjs.com/how_to/creating_a_custom_loading_screen\n         */\n        get: function () {\n            if (!this._loadingScreen && this._renderingCanvas) {\n                this._loadingScreen = Engine.DefaultLoadingScreenFactory(this._renderingCanvas);\n            }\n            return this._loadingScreen;\n        },\n        /**\n         * Sets the current loading screen object\n         * @see https://doc.babylonjs.com/how_to/creating_a_custom_loading_screen\n         */\n        set: function (loadingScreen) {\n            this._loadingScreen = loadingScreen;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Engine.prototype, \"loadingUIText\", {\n        /**\n         * Sets the current loading screen text\n         * @see https://doc.babylonjs.com/how_to/creating_a_custom_loading_screen\n         */\n        set: function (text) {\n            this.loadingScreen.loadingUIText = text;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Engine.prototype, \"loadingUIBackgroundColor\", {\n        /**\n         * Sets the current loading screen background color\n         * @see https://doc.babylonjs.com/how_to/creating_a_custom_loading_screen\n         */\n        set: function (color) {\n            this.loadingScreen.loadingUIBackgroundColor = color;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * creates and returns a new video element\n     * @param constraints video constraints\n     * @returns video element\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Engine.prototype.createVideoElement = function (constraints) {\n        return document.createElement(\"video\");\n    };\n    /** Pointerlock and fullscreen */\n    /**\n     * Ask the browser to promote the current element to pointerlock mode\n     * @param element defines the DOM element to promote\n     */\n    Engine._RequestPointerlock = function (element) {\n        element.requestPointerLock =\n            element.requestPointerLock || element.msRequestPointerLock || element.mozRequestPointerLock || element.webkitRequestPointerLock;\n        if (element.requestPointerLock) {\n            element.requestPointerLock();\n            element.focus();\n        }\n    };\n    /**\n     * Asks the browser to exit pointerlock mode\n     */\n    Engine._ExitPointerlock = function () {\n        var anyDoc = document;\n        document.exitPointerLock = document.exitPointerLock || anyDoc.msExitPointerLock || anyDoc.mozExitPointerLock || anyDoc.webkitExitPointerLock;\n        if (document.exitPointerLock) {\n            document.exitPointerLock();\n        }\n    };\n    /**\n     * Ask the browser to promote the current element to fullscreen rendering mode\n     * @param element defines the DOM element to promote\n     */\n    Engine._RequestFullscreen = function (element) {\n        var requestFunction = element.requestFullscreen || element.msRequestFullscreen || element.webkitRequestFullscreen || element.mozRequestFullScreen;\n        if (!requestFunction) {\n            return;\n        }\n        requestFunction.call(element);\n    };\n    /**\n     * Asks the browser to exit fullscreen mode\n     */\n    Engine._ExitFullscreen = function () {\n        var anyDoc = document;\n        if (document.exitFullscreen) {\n            document.exitFullscreen();\n        }\n        else if (anyDoc.mozCancelFullScreen) {\n            anyDoc.mozCancelFullScreen();\n        }\n        else if (anyDoc.webkitCancelFullScreen) {\n            anyDoc.webkitCancelFullScreen();\n        }\n        else if (anyDoc.msCancelFullScreen) {\n            anyDoc.msCancelFullScreen();\n        }\n    };\n    /**\n     * Get Font size information\n     * @param font font name\n     * @return an object containing ascent, height and descent\n     */\n    Engine.prototype.getFontOffset = function (font) {\n        var text = document.createElement(\"span\");\n        text.innerHTML = \"Hg\";\n        text.setAttribute(\"style\", \"font: \".concat(font, \" !important\"));\n        var block = document.createElement(\"div\");\n        block.style.display = \"inline-block\";\n        block.style.width = \"1px\";\n        block.style.height = \"0px\";\n        block.style.verticalAlign = \"bottom\";\n        var div = document.createElement(\"div\");\n        div.style.whiteSpace = \"nowrap\";\n        div.appendChild(text);\n        div.appendChild(block);\n        document.body.appendChild(div);\n        var fontAscent = 0;\n        var fontHeight = 0;\n        try {\n            fontHeight = block.getBoundingClientRect().top - text.getBoundingClientRect().top;\n            block.style.verticalAlign = \"baseline\";\n            fontAscent = block.getBoundingClientRect().top - text.getBoundingClientRect().top;\n        }\n        finally {\n            document.body.removeChild(div);\n        }\n        return { ascent: fontAscent, height: fontHeight, descent: fontHeight - fontAscent };\n    };\n    // Const statics\n    /** Defines that alpha blending is disabled */\n    Engine.ALPHA_DISABLE = 0;\n    /** Defines that alpha blending to SRC ALPHA * SRC + DEST */\n    Engine.ALPHA_ADD = 1;\n    /** Defines that alpha blending to SRC ALPHA * SRC + (1 - SRC ALPHA) * DEST */\n    Engine.ALPHA_COMBINE = 2;\n    /** Defines that alpha blending to DEST - SRC * DEST */\n    Engine.ALPHA_SUBTRACT = 3;\n    /** Defines that alpha blending to SRC * DEST */\n    Engine.ALPHA_MULTIPLY = 4;\n    /** Defines that alpha blending to SRC ALPHA * SRC + (1 - SRC) * DEST */\n    Engine.ALPHA_MAXIMIZED = 5;\n    /** Defines that alpha blending to SRC + DEST */\n    Engine.ALPHA_ONEONE = 6;\n    /** Defines that alpha blending to SRC + (1 - SRC ALPHA) * DEST */\n    Engine.ALPHA_PREMULTIPLIED = 7;\n    /**\n     * Defines that alpha blending to SRC + (1 - SRC ALPHA) * DEST\n     * Alpha will be set to (1 - SRC ALPHA) * DEST ALPHA\n     */\n    Engine.ALPHA_PREMULTIPLIED_PORTERDUFF = 8;\n    /** Defines that alpha blending to CST * SRC + (1 - CST) * DEST */\n    Engine.ALPHA_INTERPOLATE = 9;\n    /**\n     * Defines that alpha blending to SRC + (1 - SRC) * DEST\n     * Alpha will be set to SRC ALPHA + (1 - SRC ALPHA) * DEST ALPHA\n     */\n    Engine.ALPHA_SCREENMODE = 10;\n    /** Defines that the resource is not delayed*/\n    Engine.DELAYLOADSTATE_NONE = 0;\n    /** Defines that the resource was successfully delay loaded */\n    Engine.DELAYLOADSTATE_LOADED = 1;\n    /** Defines that the resource is currently delay loading */\n    Engine.DELAYLOADSTATE_LOADING = 2;\n    /** Defines that the resource is delayed and has not started loading */\n    Engine.DELAYLOADSTATE_NOTLOADED = 4;\n    // Depht or Stencil test Constants.\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will never pass. i.e. Nothing will be drawn */\n    Engine.NEVER = 512;\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will always pass. i.e. Pixels will be drawn in the order they are drawn */\n    Engine.ALWAYS = 519;\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than the stored value */\n    Engine.LESS = 513;\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is equals to the stored value */\n    Engine.EQUAL = 514;\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than or equal to the stored value */\n    Engine.LEQUAL = 515;\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than the stored value */\n    Engine.GREATER = 516;\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than or equal to the stored value */\n    Engine.GEQUAL = 518;\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is not equal to the stored value */\n    Engine.NOTEQUAL = 517;\n    // Stencil Actions Constants.\n    /** Passed to stencilOperation to specify that stencil value must be kept */\n    Engine.KEEP = 7680;\n    /** Passed to stencilOperation to specify that stencil value must be replaced */\n    Engine.REPLACE = 7681;\n    /** Passed to stencilOperation to specify that stencil value must be incremented */\n    Engine.INCR = 7682;\n    /** Passed to stencilOperation to specify that stencil value must be decremented */\n    Engine.DECR = 7683;\n    /** Passed to stencilOperation to specify that stencil value must be inverted */\n    Engine.INVERT = 5386;\n    /** Passed to stencilOperation to specify that stencil value must be incremented with wrapping */\n    Engine.INCR_WRAP = 34055;\n    /** Passed to stencilOperation to specify that stencil value must be decremented with wrapping */\n    Engine.DECR_WRAP = 34056;\n    /** Texture is not repeating outside of 0..1 UVs */\n    Engine.TEXTURE_CLAMP_ADDRESSMODE = 0;\n    /** Texture is repeating outside of 0..1 UVs */\n    Engine.TEXTURE_WRAP_ADDRESSMODE = 1;\n    /** Texture is repeating and mirrored */\n    Engine.TEXTURE_MIRROR_ADDRESSMODE = 2;\n    /** ALPHA */\n    Engine.TEXTUREFORMAT_ALPHA = 0;\n    /** LUMINANCE */\n    Engine.TEXTUREFORMAT_LUMINANCE = 1;\n    /** LUMINANCE_ALPHA */\n    Engine.TEXTUREFORMAT_LUMINANCE_ALPHA = 2;\n    /** RGB */\n    Engine.TEXTUREFORMAT_RGB = 4;\n    /** RGBA */\n    Engine.TEXTUREFORMAT_RGBA = 5;\n    /** RED */\n    Engine.TEXTUREFORMAT_RED = 6;\n    /** RED (2nd reference) */\n    Engine.TEXTUREFORMAT_R = 6;\n    /** RG */\n    Engine.TEXTUREFORMAT_RG = 7;\n    /** RED_INTEGER */\n    Engine.TEXTUREFORMAT_RED_INTEGER = 8;\n    /** RED_INTEGER (2nd reference) */\n    Engine.TEXTUREFORMAT_R_INTEGER = 8;\n    /** RG_INTEGER */\n    Engine.TEXTUREFORMAT_RG_INTEGER = 9;\n    /** RGB_INTEGER */\n    Engine.TEXTUREFORMAT_RGB_INTEGER = 10;\n    /** RGBA_INTEGER */\n    Engine.TEXTUREFORMAT_RGBA_INTEGER = 11;\n    /** UNSIGNED_BYTE */\n    Engine.TEXTURETYPE_UNSIGNED_BYTE = 0;\n    /** UNSIGNED_BYTE (2nd reference) */\n    Engine.TEXTURETYPE_UNSIGNED_INT = 0;\n    /** FLOAT */\n    Engine.TEXTURETYPE_FLOAT = 1;\n    /** HALF_FLOAT */\n    Engine.TEXTURETYPE_HALF_FLOAT = 2;\n    /** BYTE */\n    Engine.TEXTURETYPE_BYTE = 3;\n    /** SHORT */\n    Engine.TEXTURETYPE_SHORT = 4;\n    /** UNSIGNED_SHORT */\n    Engine.TEXTURETYPE_UNSIGNED_SHORT = 5;\n    /** INT */\n    Engine.TEXTURETYPE_INT = 6;\n    /** UNSIGNED_INT */\n    Engine.TEXTURETYPE_UNSIGNED_INTEGER = 7;\n    /** UNSIGNED_SHORT_4_4_4_4 */\n    Engine.TEXTURETYPE_UNSIGNED_SHORT_4_4_4_4 = 8;\n    /** UNSIGNED_SHORT_5_5_5_1 */\n    Engine.TEXTURETYPE_UNSIGNED_SHORT_5_5_5_1 = 9;\n    /** UNSIGNED_SHORT_5_6_5 */\n    Engine.TEXTURETYPE_UNSIGNED_SHORT_5_6_5 = 10;\n    /** UNSIGNED_INT_2_10_10_10_REV */\n    Engine.TEXTURETYPE_UNSIGNED_INT_2_10_10_10_REV = 11;\n    /** UNSIGNED_INT_24_8 */\n    Engine.TEXTURETYPE_UNSIGNED_INT_24_8 = 12;\n    /** UNSIGNED_INT_10F_11F_11F_REV */\n    Engine.TEXTURETYPE_UNSIGNED_INT_10F_11F_11F_REV = 13;\n    /** UNSIGNED_INT_5_9_9_9_REV */\n    Engine.TEXTURETYPE_UNSIGNED_INT_5_9_9_9_REV = 14;\n    /** FLOAT_32_UNSIGNED_INT_24_8_REV */\n    Engine.TEXTURETYPE_FLOAT_32_UNSIGNED_INT_24_8_REV = 15;\n    /** nearest is mag = nearest and min = nearest and mip = none */\n    Engine.TEXTURE_NEAREST_SAMPLINGMODE = 1;\n    /** Bilinear is mag = linear and min = linear and mip = nearest */\n    Engine.TEXTURE_BILINEAR_SAMPLINGMODE = 2;\n    /** Trilinear is mag = linear and min = linear and mip = linear */\n    Engine.TEXTURE_TRILINEAR_SAMPLINGMODE = 3;\n    /** nearest is mag = nearest and min = nearest and mip = linear */\n    Engine.TEXTURE_NEAREST_NEAREST_MIPLINEAR = 8;\n    /** Bilinear is mag = linear and min = linear and mip = nearest */\n    Engine.TEXTURE_LINEAR_LINEAR_MIPNEAREST = 11;\n    /** Trilinear is mag = linear and min = linear and mip = linear */\n    Engine.TEXTURE_LINEAR_LINEAR_MIPLINEAR = 3;\n    /** mag = nearest and min = nearest and mip = nearest */\n    Engine.TEXTURE_NEAREST_NEAREST_MIPNEAREST = 4;\n    /** mag = nearest and min = linear and mip = nearest */\n    Engine.TEXTURE_NEAREST_LINEAR_MIPNEAREST = 5;\n    /** mag = nearest and min = linear and mip = linear */\n    Engine.TEXTURE_NEAREST_LINEAR_MIPLINEAR = 6;\n    /** mag = nearest and min = linear and mip = none */\n    Engine.TEXTURE_NEAREST_LINEAR = 7;\n    /** mag = nearest and min = nearest and mip = none */\n    Engine.TEXTURE_NEAREST_NEAREST = 1;\n    /** mag = linear and min = nearest and mip = nearest */\n    Engine.TEXTURE_LINEAR_NEAREST_MIPNEAREST = 9;\n    /** mag = linear and min = nearest and mip = linear */\n    Engine.TEXTURE_LINEAR_NEAREST_MIPLINEAR = 10;\n    /** mag = linear and min = linear and mip = none */\n    Engine.TEXTURE_LINEAR_LINEAR = 2;\n    /** mag = linear and min = nearest and mip = none */\n    Engine.TEXTURE_LINEAR_NEAREST = 12;\n    /** Explicit coordinates mode */\n    Engine.TEXTURE_EXPLICIT_MODE = 0;\n    /** Spherical coordinates mode */\n    Engine.TEXTURE_SPHERICAL_MODE = 1;\n    /** Planar coordinates mode */\n    Engine.TEXTURE_PLANAR_MODE = 2;\n    /** Cubic coordinates mode */\n    Engine.TEXTURE_CUBIC_MODE = 3;\n    /** Projection coordinates mode */\n    Engine.TEXTURE_PROJECTION_MODE = 4;\n    /** Skybox coordinates mode */\n    Engine.TEXTURE_SKYBOX_MODE = 5;\n    /** Inverse Cubic coordinates mode */\n    Engine.TEXTURE_INVCUBIC_MODE = 6;\n    /** Equirectangular coordinates mode */\n    Engine.TEXTURE_EQUIRECTANGULAR_MODE = 7;\n    /** Equirectangular Fixed coordinates mode */\n    Engine.TEXTURE_FIXED_EQUIRECTANGULAR_MODE = 8;\n    /** Equirectangular Fixed Mirrored coordinates mode */\n    Engine.TEXTURE_FIXED_EQUIRECTANGULAR_MIRRORED_MODE = 9;\n    // Texture rescaling mode\n    /** Defines that texture rescaling will use a floor to find the closer power of 2 size */\n    Engine.SCALEMODE_FLOOR = 1;\n    /** Defines that texture rescaling will look for the nearest power of 2 size */\n    Engine.SCALEMODE_NEAREST = 2;\n    /** Defines that texture rescaling will use a ceil to find the closer power of 2 size */\n    Engine.SCALEMODE_CEILING = 3;\n    /**\n     * Method called to create the default rescale post process on each engine.\n     */\n    Engine._RescalePostProcessFactory = null;\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Engine._RenderPassIdCounter = 0;\n    return Engine;\n}(ThinEngine));\nexport { Engine };\n//# sourceMappingURL=engine.js.map","/**\n * The engine store class is responsible to hold all the instances of Engine and Scene created\n * during the life time of the application.\n */\nvar EngineStore = /** @class */ (function () {\n    function EngineStore() {\n    }\n    Object.defineProperty(EngineStore, \"LastCreatedEngine\", {\n        /**\n         * Gets the latest created engine\n         */\n        get: function () {\n            if (this.Instances.length === 0) {\n                return null;\n            }\n            return this.Instances[this.Instances.length - 1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EngineStore, \"LastCreatedScene\", {\n        /**\n         * Gets the latest created scene\n         */\n        get: function () {\n            return this._LastCreatedScene;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /** Gets the list of created engines */\n    EngineStore.Instances = new Array();\n    /** @hidden */\n    EngineStore._LastCreatedScene = null;\n    /**\n     * Gets or sets a global variable indicating if fallback texture must be used when a texture cannot be loaded\n     * @ignorenaming\n     */\n    EngineStore.UseFallbackTexture = true;\n    /**\n     * Texture content used if a texture cannot loaded\n     * @ignorenaming\n     */\n    EngineStore.FallbackTexture = \"\";\n    return EngineStore;\n}());\nexport { EngineStore };\n//# sourceMappingURL=engineStore.js.map","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { ThinEngine } from \"../../Engines/thinEngine.js\";\nThinEngine.prototype._debugPushGroup = function (groupName, targetObject) { };\nThinEngine.prototype._debugPopGroup = function (targetObject) { };\nThinEngine.prototype._debugInsertMarker = function (text, targetObject) { };\nThinEngine.prototype._debugFlushPendingCommands = function () { };\n//# sourceMappingURL=engine.debugging.js.map","import { Engine } from \"../../Engines/engine.js\";\nimport { AbstractMesh } from \"../../Meshes/abstractMesh.js\";\nimport { _TimeToken } from \"../../Instrumentation/timeToken.js\";\nimport { PerfCounter } from \"../../Misc/perfCounter.js\";\n/** @hidden */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nvar _OcclusionDataStorage = /** @class */ (function () {\n    function _OcclusionDataStorage() {\n        /** @hidden */\n        this.occlusionInternalRetryCounter = 0;\n        /** @hidden */\n        this.isOcclusionQueryInProgress = false;\n        /** @hidden */\n        this.isOccluded = false;\n        /** @hidden */\n        this.occlusionRetryCount = -1;\n        /** @hidden */\n        this.occlusionType = AbstractMesh.OCCLUSION_TYPE_NONE;\n        /** @hidden */\n        this.occlusionQueryAlgorithmType = AbstractMesh.OCCLUSION_ALGORITHM_TYPE_CONSERVATIVE;\n        /** @hidden */\n        this.forceRenderingWhenOccluded = false;\n    }\n    return _OcclusionDataStorage;\n}());\nexport { _OcclusionDataStorage };\nEngine.prototype.createQuery = function () {\n    return this._gl.createQuery();\n};\nEngine.prototype.deleteQuery = function (query) {\n    this._gl.deleteQuery(query);\n    return this;\n};\nEngine.prototype.isQueryResultAvailable = function (query) {\n    return this._gl.getQueryParameter(query, this._gl.QUERY_RESULT_AVAILABLE);\n};\nEngine.prototype.getQueryResult = function (query) {\n    return this._gl.getQueryParameter(query, this._gl.QUERY_RESULT);\n};\nEngine.prototype.beginOcclusionQuery = function (algorithmType, query) {\n    var glAlgorithm = this._getGlAlgorithmType(algorithmType);\n    this._gl.beginQuery(glAlgorithm, query);\n    return true;\n};\nEngine.prototype.endOcclusionQuery = function (algorithmType) {\n    var glAlgorithm = this._getGlAlgorithmType(algorithmType);\n    this._gl.endQuery(glAlgorithm);\n    return this;\n};\nEngine.prototype._createTimeQuery = function () {\n    var timerQuery = this.getCaps().timerQuery;\n    if (timerQuery.createQueryEXT) {\n        return timerQuery.createQueryEXT();\n    }\n    return this.createQuery();\n};\nEngine.prototype._deleteTimeQuery = function (query) {\n    var timerQuery = this.getCaps().timerQuery;\n    if (timerQuery.deleteQueryEXT) {\n        timerQuery.deleteQueryEXT(query);\n        return;\n    }\n    this.deleteQuery(query);\n};\nEngine.prototype._getTimeQueryResult = function (query) {\n    var timerQuery = this.getCaps().timerQuery;\n    if (timerQuery.getQueryObjectEXT) {\n        return timerQuery.getQueryObjectEXT(query, timerQuery.QUERY_RESULT_EXT);\n    }\n    return this.getQueryResult(query);\n};\nEngine.prototype._getTimeQueryAvailability = function (query) {\n    var timerQuery = this.getCaps().timerQuery;\n    if (timerQuery.getQueryObjectEXT) {\n        return timerQuery.getQueryObjectEXT(query, timerQuery.QUERY_RESULT_AVAILABLE_EXT);\n    }\n    return this.isQueryResultAvailable(query);\n};\nEngine.prototype.startTimeQuery = function () {\n    var caps = this.getCaps();\n    var timerQuery = caps.timerQuery;\n    if (!timerQuery) {\n        return null;\n    }\n    var token = new _TimeToken();\n    this._gl.getParameter(timerQuery.GPU_DISJOINT_EXT);\n    if (caps.canUseTimestampForTimerQuery) {\n        token._startTimeQuery = this._createTimeQuery();\n        timerQuery.queryCounterEXT(token._startTimeQuery, timerQuery.TIMESTAMP_EXT);\n    }\n    else {\n        if (this._currentNonTimestampToken) {\n            return this._currentNonTimestampToken;\n        }\n        token._timeElapsedQuery = this._createTimeQuery();\n        if (timerQuery.beginQueryEXT) {\n            timerQuery.beginQueryEXT(timerQuery.TIME_ELAPSED_EXT, token._timeElapsedQuery);\n        }\n        else {\n            this._gl.beginQuery(timerQuery.TIME_ELAPSED_EXT, token._timeElapsedQuery);\n        }\n        this._currentNonTimestampToken = token;\n    }\n    return token;\n};\nEngine.prototype.endTimeQuery = function (token) {\n    var caps = this.getCaps();\n    var timerQuery = caps.timerQuery;\n    if (!timerQuery || !token) {\n        return -1;\n    }\n    if (caps.canUseTimestampForTimerQuery) {\n        if (!token._startTimeQuery) {\n            return -1;\n        }\n        if (!token._endTimeQuery) {\n            token._endTimeQuery = this._createTimeQuery();\n            timerQuery.queryCounterEXT(token._endTimeQuery, timerQuery.TIMESTAMP_EXT);\n        }\n    }\n    else if (!token._timeElapsedQueryEnded) {\n        if (!token._timeElapsedQuery) {\n            return -1;\n        }\n        if (timerQuery.endQueryEXT) {\n            timerQuery.endQueryEXT(timerQuery.TIME_ELAPSED_EXT);\n        }\n        else {\n            this._gl.endQuery(timerQuery.TIME_ELAPSED_EXT);\n        }\n        token._timeElapsedQueryEnded = true;\n    }\n    var disjoint = this._gl.getParameter(timerQuery.GPU_DISJOINT_EXT);\n    var available = false;\n    if (token._endTimeQuery) {\n        available = this._getTimeQueryAvailability(token._endTimeQuery);\n    }\n    else if (token._timeElapsedQuery) {\n        available = this._getTimeQueryAvailability(token._timeElapsedQuery);\n    }\n    if (available && !disjoint) {\n        var result = 0;\n        if (caps.canUseTimestampForTimerQuery) {\n            if (!token._startTimeQuery || !token._endTimeQuery) {\n                return -1;\n            }\n            var timeStart = this._getTimeQueryResult(token._startTimeQuery);\n            var timeEnd = this._getTimeQueryResult(token._endTimeQuery);\n            result = timeEnd - timeStart;\n            this._deleteTimeQuery(token._startTimeQuery);\n            this._deleteTimeQuery(token._endTimeQuery);\n            token._startTimeQuery = null;\n            token._endTimeQuery = null;\n        }\n        else {\n            if (!token._timeElapsedQuery) {\n                return -1;\n            }\n            result = this._getTimeQueryResult(token._timeElapsedQuery);\n            this._deleteTimeQuery(token._timeElapsedQuery);\n            token._timeElapsedQuery = null;\n            token._timeElapsedQueryEnded = false;\n            this._currentNonTimestampToken = null;\n        }\n        return result;\n    }\n    return -1;\n};\nEngine.prototype._captureGPUFrameTime = false;\nEngine.prototype._gpuFrameTime = new PerfCounter();\nEngine.prototype.getGPUFrameTimeCounter = function () {\n    return this._gpuFrameTime;\n};\nEngine.prototype.captureGPUFrameTime = function (value) {\n    var _this = this;\n    if (value === this._captureGPUFrameTime) {\n        return;\n    }\n    this._captureGPUFrameTime = value;\n    if (value) {\n        this._onBeginFrameObserver = this.onBeginFrameObservable.add(function () {\n            if (!_this._gpuFrameTimeToken) {\n                _this._gpuFrameTimeToken = _this.startTimeQuery();\n            }\n        });\n        this._onEndFrameObserver = this.onEndFrameObservable.add(function () {\n            if (!_this._gpuFrameTimeToken) {\n                return;\n            }\n            var time = _this.endTimeQuery(_this._gpuFrameTimeToken);\n            if (time > -1) {\n                _this._gpuFrameTimeToken = null;\n                _this._gpuFrameTime.fetchNewFrame();\n                _this._gpuFrameTime.addCount(time, true);\n            }\n        });\n    }\n    else {\n        this.onBeginFrameObservable.remove(this._onBeginFrameObserver);\n        this._onBeginFrameObserver = null;\n        this.onEndFrameObservable.remove(this._onEndFrameObserver);\n        this._onEndFrameObserver = null;\n    }\n};\nEngine.prototype._getGlAlgorithmType = function (algorithmType) {\n    return algorithmType === AbstractMesh.OCCLUSION_ALGORITHM_TYPE_CONSERVATIVE ? this._gl.ANY_SAMPLES_PASSED_CONSERVATIVE : this._gl.ANY_SAMPLES_PASSED;\n};\nObject.defineProperty(AbstractMesh.prototype, \"isOcclusionQueryInProgress\", {\n    get: function () {\n        return this._occlusionDataStorage.isOcclusionQueryInProgress;\n    },\n    set: function (value) {\n        this._occlusionDataStorage.isOcclusionQueryInProgress = value;\n    },\n    enumerable: false,\n    configurable: true,\n});\nObject.defineProperty(AbstractMesh.prototype, \"_occlusionDataStorage\", {\n    get: function () {\n        if (!this.__occlusionDataStorage) {\n            this.__occlusionDataStorage = new _OcclusionDataStorage();\n        }\n        return this.__occlusionDataStorage;\n    },\n    enumerable: false,\n    configurable: true,\n});\nObject.defineProperty(AbstractMesh.prototype, \"isOccluded\", {\n    get: function () {\n        return this._occlusionDataStorage.isOccluded;\n    },\n    set: function (value) {\n        this._occlusionDataStorage.isOccluded = value;\n    },\n    enumerable: true,\n    configurable: true,\n});\nObject.defineProperty(AbstractMesh.prototype, \"occlusionQueryAlgorithmType\", {\n    get: function () {\n        return this._occlusionDataStorage.occlusionQueryAlgorithmType;\n    },\n    set: function (value) {\n        this._occlusionDataStorage.occlusionQueryAlgorithmType = value;\n    },\n    enumerable: true,\n    configurable: true,\n});\nObject.defineProperty(AbstractMesh.prototype, \"occlusionType\", {\n    get: function () {\n        return this._occlusionDataStorage.occlusionType;\n    },\n    set: function (value) {\n        this._occlusionDataStorage.occlusionType = value;\n    },\n    enumerable: true,\n    configurable: true,\n});\nObject.defineProperty(AbstractMesh.prototype, \"occlusionRetryCount\", {\n    get: function () {\n        return this._occlusionDataStorage.occlusionRetryCount;\n    },\n    set: function (value) {\n        this._occlusionDataStorage.occlusionRetryCount = value;\n    },\n    enumerable: true,\n    configurable: true,\n});\nObject.defineProperty(AbstractMesh.prototype, \"forceRenderingWhenOccluded\", {\n    get: function () {\n        return this._occlusionDataStorage.forceRenderingWhenOccluded;\n    },\n    set: function (value) {\n        this._occlusionDataStorage.forceRenderingWhenOccluded = value;\n    },\n    enumerable: true,\n    configurable: true,\n});\n// We also need to update AbstractMesh as there is a portion of the code there\nAbstractMesh.prototype._checkOcclusionQuery = function () {\n    var dataStorage = this._occlusionDataStorage;\n    if (dataStorage.occlusionType === AbstractMesh.OCCLUSION_TYPE_NONE) {\n        dataStorage.isOccluded = false;\n        return false;\n    }\n    var engine = this.getEngine();\n    if (!engine.getCaps().supportOcclusionQuery) {\n        dataStorage.isOccluded = false;\n        return false;\n    }\n    if (!engine.isQueryResultAvailable) {\n        // Occlusion query where not referenced\n        dataStorage.isOccluded = false;\n        return false;\n    }\n    if (this.isOcclusionQueryInProgress && this._occlusionQuery) {\n        var isOcclusionQueryAvailable = engine.isQueryResultAvailable(this._occlusionQuery);\n        if (isOcclusionQueryAvailable) {\n            var occlusionQueryResult = engine.getQueryResult(this._occlusionQuery);\n            dataStorage.isOcclusionQueryInProgress = false;\n            dataStorage.occlusionInternalRetryCounter = 0;\n            dataStorage.isOccluded = occlusionQueryResult > 0 ? false : true;\n        }\n        else {\n            dataStorage.occlusionInternalRetryCounter++;\n            if (dataStorage.occlusionRetryCount !== -1 && dataStorage.occlusionInternalRetryCounter > dataStorage.occlusionRetryCount) {\n                dataStorage.isOcclusionQueryInProgress = false;\n                dataStorage.occlusionInternalRetryCounter = 0;\n                // if optimistic set isOccluded to false regardless of the status of isOccluded. (Render in the current render loop)\n                // if strict continue the last state of the object.\n                dataStorage.isOccluded = dataStorage.occlusionType === AbstractMesh.OCCLUSION_TYPE_OPTIMISTIC ? false : dataStorage.isOccluded;\n            }\n            else {\n                return dataStorage.occlusionType === AbstractMesh.OCCLUSION_TYPE_OPTIMISTIC ? false : dataStorage.isOccluded;\n            }\n        }\n    }\n    var scene = this.getScene();\n    if (scene.getBoundingBoxRenderer) {\n        var occlusionBoundingBoxRenderer = scene.getBoundingBoxRenderer();\n        if (this._occlusionQuery === null) {\n            this._occlusionQuery = engine.createQuery();\n        }\n        if (engine.beginOcclusionQuery(dataStorage.occlusionQueryAlgorithmType, this._occlusionQuery)) {\n            occlusionBoundingBoxRenderer.renderOcclusionBoundingBox(this);\n            engine.endOcclusionQuery(dataStorage.occlusionQueryAlgorithmType);\n            this._occlusionDataStorage.isOcclusionQueryInProgress = true;\n        }\n    }\n    return dataStorage.isOccluded;\n};\n//# sourceMappingURL=engine.query.js.map","import { Engine } from \"../../Engines/engine.js\";\n/** @hidden */\n// eslint-disable-next-line no-var\nexport var _forceTransformFeedbackToBundle = true;\nEngine.prototype.createTransformFeedback = function () {\n    return this._gl.createTransformFeedback();\n};\nEngine.prototype.deleteTransformFeedback = function (value) {\n    this._gl.deleteTransformFeedback(value);\n};\nEngine.prototype.bindTransformFeedback = function (value) {\n    this._gl.bindTransformFeedback(this._gl.TRANSFORM_FEEDBACK, value);\n};\nEngine.prototype.beginTransformFeedback = function (usePoints) {\n    if (usePoints === void 0) { usePoints = true; }\n    this._gl.beginTransformFeedback(usePoints ? this._gl.POINTS : this._gl.TRIANGLES);\n};\nEngine.prototype.endTransformFeedback = function () {\n    this._gl.endTransformFeedback();\n};\nEngine.prototype.setTranformFeedbackVaryings = function (program, value) {\n    this._gl.transformFeedbackVaryings(program, value, this._gl.INTERLEAVED_ATTRIBS);\n};\nEngine.prototype.bindTransformFeedbackBuffer = function (value) {\n    this._gl.bindBufferBase(this._gl.TRANSFORM_FEEDBACK_BUFFER, 0, value ? value.underlyingResource : null);\n};\n//# sourceMappingURL=engine.transformFeedback.js.map","import { ThinEngine } from \"../../Engines/thinEngine.js\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nThinEngine.prototype.createExternalTexture = function (video) {\n    return null;\n};\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nThinEngine.prototype.setExternalTexture = function (name, texture) {\n    throw new Error(\"setExternalTexture: This engine does not support external textures!\");\n};\n//# sourceMappingURL=engine.externalTexture.js.map","import { ThinEngine } from \"../../Engines/thinEngine.js\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nThinEngine.prototype.setTextureSampler = function (name, sampler) {\n    throw new Error(\"setTextureSampler: This engine does not support separate texture sampler objects!\");\n};\n//# sourceMappingURL=engine.textureSampler.js.map","import { Engine } from \"../engine.js\";\n/**\n * Class used to define an additional view for the engine\n * @see https://doc.babylonjs.com/divingDeeper/scene/multiCanvas\n */\nvar EngineView = /** @class */ (function () {\n    function EngineView() {\n    }\n    return EngineView;\n}());\nexport { EngineView };\nObject.defineProperty(Engine.prototype, \"inputElement\", {\n    get: function () {\n        return this._inputElement;\n    },\n    set: function (value) {\n        var _a;\n        if (this._inputElement !== value) {\n            this._inputElement = value;\n            (_a = this._onEngineViewChanged) === null || _a === void 0 ? void 0 : _a.call(this);\n        }\n    },\n});\nEngine.prototype.getInputElement = function () {\n    return this.inputElement || this.getRenderingCanvas();\n};\nEngine.prototype.registerView = function (canvas, camera, clearBeforeCopy) {\n    var _this = this;\n    if (!this.views) {\n        this.views = [];\n    }\n    for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n        var view = _a[_i];\n        if (view.target === canvas) {\n            return view;\n        }\n    }\n    var masterCanvas = this.getRenderingCanvas();\n    if (masterCanvas) {\n        canvas.width = masterCanvas.width;\n        canvas.height = masterCanvas.height;\n    }\n    var newView = { target: canvas, camera: camera, clearBeforeCopy: clearBeforeCopy, enabled: true };\n    this.views.push(newView);\n    if (camera) {\n        camera.onDisposeObservable.add(function () {\n            _this.unRegisterView(canvas);\n        });\n    }\n    return newView;\n};\nEngine.prototype.unRegisterView = function (canvas) {\n    if (!this.views) {\n        return this;\n    }\n    for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n        var view = _a[_i];\n        if (view.target === canvas) {\n            var index = this.views.indexOf(view);\n            if (index !== -1) {\n                this.views.splice(index, 1);\n            }\n            break;\n        }\n    }\n    return this;\n};\nEngine.prototype._renderViews = function () {\n    if (!this.views) {\n        return false;\n    }\n    var parent = this.getRenderingCanvas();\n    if (!parent) {\n        return false;\n    }\n    for (var _i = 0, _a = this.views; _i < _a.length; _i++) {\n        var view = _a[_i];\n        if (!view.enabled) {\n            continue;\n        }\n        var canvas = view.target;\n        var context_1 = canvas.getContext(\"2d\");\n        if (!context_1) {\n            continue;\n        }\n        var camera = view.camera;\n        var previewCamera = null;\n        var scene = null;\n        if (camera) {\n            scene = camera.getScene();\n            if (scene.activeCameras && scene.activeCameras.length) {\n                continue;\n            }\n            this.activeView = view;\n            previewCamera = scene.activeCamera;\n            scene.activeCamera = camera;\n        }\n        if (view.customResize) {\n            view.customResize(canvas);\n        }\n        else {\n            // Set sizes\n            var width = Math.floor(canvas.clientWidth / this._hardwareScalingLevel);\n            var height = Math.floor(canvas.clientHeight / this._hardwareScalingLevel);\n            var dimsChanged = width !== canvas.width || parent.width !== canvas.width || height !== canvas.height || parent.height !== canvas.height;\n            if (canvas.clientWidth && canvas.clientHeight && dimsChanged) {\n                canvas.width = width;\n                canvas.height = height;\n                this.setSize(width, height);\n            }\n        }\n        if (!parent.width || !parent.height) {\n            return false;\n        }\n        // Render the frame\n        this._renderFrame();\n        this.flushFramebuffer();\n        // Copy to target\n        if (view.clearBeforeCopy) {\n            context_1.clearRect(0, 0, parent.width, parent.height);\n        }\n        context_1.drawImage(parent, 0, 0);\n        // Restore\n        if (previewCamera && scene) {\n            scene.activeCamera = previewCamera;\n        }\n    }\n    this.activeView = null;\n    return true;\n};\n//# sourceMappingURL=engine.views.js.map","import { Engine } from \"../engine.js\";\nfunction transformTextureUrl(url) {\n    var excludeFn = function (entry) {\n        var strRegExPattern = \"\\\\b\" + entry + \"\\\\b\";\n        return url && (url === entry || url.match(new RegExp(strRegExPattern, \"g\")));\n    };\n    if (this._excludedCompressedTextures && this._excludedCompressedTextures.some(excludeFn)) {\n        return url;\n    }\n    var lastDot = url.lastIndexOf(\".\");\n    var lastQuestionMark = url.lastIndexOf(\"?\");\n    var querystring = lastQuestionMark > -1 ? url.substring(lastQuestionMark, url.length) : \"\";\n    return (lastDot > -1 ? url.substring(0, lastDot) : url) + this._textureFormatInUse + querystring;\n}\nObject.defineProperty(Engine.prototype, \"texturesSupported\", {\n    get: function () {\n        // Intelligently add supported compressed formats in order to check for.\n        // Check for ASTC support first as it is most powerful and to be very cross platform.\n        // Next PVRTC & DXT, which are probably superior to ETC1/2.\n        // Likely no hardware which supports both PVR & DXT, so order matters little.\n        // ETC2 is newer and handles ETC1 (no alpha capability), so check for first.\n        var texturesSupported = new Array();\n        if (this._caps.astc) {\n            texturesSupported.push(\"-astc.ktx\");\n        }\n        if (this._caps.s3tc) {\n            texturesSupported.push(\"-dxt.ktx\");\n        }\n        if (this._caps.pvrtc) {\n            texturesSupported.push(\"-pvrtc.ktx\");\n        }\n        if (this._caps.etc2) {\n            texturesSupported.push(\"-etc2.ktx\");\n        }\n        if (this._caps.etc1) {\n            texturesSupported.push(\"-etc1.ktx\");\n        }\n        return texturesSupported;\n    },\n    enumerable: true,\n    configurable: true,\n});\nObject.defineProperty(Engine.prototype, \"textureFormatInUse\", {\n    get: function () {\n        return this._textureFormatInUse || null;\n    },\n    enumerable: true,\n    configurable: true,\n});\nEngine.prototype.setCompressedTextureExclusions = function (skippedFiles) {\n    this._excludedCompressedTextures = skippedFiles;\n};\nEngine.prototype.setTextureFormatToUse = function (formatsAvailable) {\n    var texturesSupported = this.texturesSupported;\n    for (var i = 0, len1 = texturesSupported.length; i < len1; i++) {\n        for (var j = 0, len2 = formatsAvailable.length; j < len2; j++) {\n            if (texturesSupported[i] === formatsAvailable[j].toLowerCase()) {\n                this._transformTextureUrl = transformTextureUrl.bind(this);\n                return (this._textureFormatInUse = texturesSupported[i]);\n            }\n        }\n    }\n    // actively set format to nothing, to allow this to be called more than once\n    // and possibly fail the 2nd time\n    this._textureFormatInUse = \"\";\n    this._transformTextureUrl = null;\n    return null;\n};\n//# sourceMappingURL=engine.textureSelector.js.map","import { ThinEngine } from \"../../Engines/thinEngine.js\";\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nThinEngine.prototype.createStorageBuffer = function (data, creationFlags) {\n    throw new Error(\"createStorageBuffer: Unsupported method in this engine!\");\n};\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nThinEngine.prototype.updateStorageBuffer = function (buffer, data, byteOffset, byteLength) { };\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nThinEngine.prototype.readFromStorageBuffer = function (storageBuffer, offset, size, buffer) {\n    throw new Error(\"readFromStorageBuffer: Unsupported method in this engine!\");\n};\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nThinEngine.prototype.setStorageBuffer = function (name, buffer) {\n    throw new Error(\"setStorageBuffer: Unsupported method in this engine!\");\n};\n//# sourceMappingURL=engine.storageBuffer.js.map","import { __extends } from \"tslib\";\nimport { NativeEngine } from \"../nativeEngine.js\";\nimport { NativeDataStream } from \"./nativeDataStream.js\";\nNativeEngine._createNativeDataStream = function () {\n    if (_native.NativeDataStream.VALIDATION_ENABLED) {\n        return new ValidatedNativeDataStream();\n    }\n    else {\n        return new NativeDataStream();\n    }\n};\nvar ValidatedNativeDataStream = /** @class */ (function (_super) {\n    __extends(ValidatedNativeDataStream, _super);\n    function ValidatedNativeDataStream() {\n        return _super.call(this) || this;\n    }\n    ValidatedNativeDataStream.prototype.writeUint32 = function (value) {\n        _super.prototype.writeUint32.call(this, _native.NativeDataStream.VALIDATION_UINT_32);\n        _super.prototype.writeUint32.call(this, value);\n    };\n    ValidatedNativeDataStream.prototype.writeInt32 = function (value) {\n        _super.prototype.writeUint32.call(this, _native.NativeDataStream.VALIDATION_INT_32);\n        _super.prototype.writeInt32.call(this, value);\n    };\n    ValidatedNativeDataStream.prototype.writeFloat32 = function (value) {\n        _super.prototype.writeUint32.call(this, _native.NativeDataStream.VALIDATION_FLOAT_32);\n        _super.prototype.writeFloat32.call(this, value);\n    };\n    ValidatedNativeDataStream.prototype.writeUint32Array = function (values) {\n        _super.prototype.writeUint32.call(this, _native.NativeDataStream.VALIDATION_UINT_32_ARRAY);\n        _super.prototype.writeUint32Array.call(this, values);\n    };\n    ValidatedNativeDataStream.prototype.writeInt32Array = function (values) {\n        _super.prototype.writeUint32.call(this, _native.NativeDataStream.VALIDATION_INT_32_ARRAY);\n        _super.prototype.writeInt32Array.call(this, values);\n    };\n    ValidatedNativeDataStream.prototype.writeFloat32Array = function (values) {\n        _super.prototype.writeUint32.call(this, _native.NativeDataStream.VALIDATION_FLOAT_32_ARRAY);\n        _super.prototype.writeFloat32Array.call(this, values);\n    };\n    ValidatedNativeDataStream.prototype.writeNativeData = function (handle) {\n        _super.prototype.writeUint32.call(this, _native.NativeDataStream.VALIDATION_NATIVE_DATA);\n        _super.prototype.writeNativeData.call(this, handle);\n    };\n    ValidatedNativeDataStream.prototype.writeBoolean = function (value) {\n        _super.prototype.writeUint32.call(this, _native.NativeDataStream.VALIDATION_BOOLEAN);\n        _super.prototype.writeBoolean.call(this, value);\n    };\n    return ValidatedNativeDataStream;\n}(NativeDataStream));\nexport { ValidatedNativeDataStream };\n//# sourceMappingURL=validatedNativeDataStream.js.map","\nimport { Engine } from \"../../engine.js\";\nimport { WebGPUEngine } from \"../../webgpuEngine.js\";\nWebGPUEngine.prototype.setAlphaMode = function (mode, noDepthWriteChange) {\n    if (noDepthWriteChange === void 0) { noDepthWriteChange = false; }\n    if (this._alphaMode === mode && ((mode === 0 && !this._alphaState.alphaBlend) || (mode !== 0 && this._alphaState.alphaBlend))) {\n        return;\n    }\n    switch (mode) {\n        case 0:\n            this._alphaState.alphaBlend = false;\n            break;\n        case 7:\n            this._alphaState.setAlphaBlendFunctionParameters(1, 771, 1, 1);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 8:\n            this._alphaState.setAlphaBlendFunctionParameters(1, 771, 1, 771);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 2:\n            this._alphaState.setAlphaBlendFunctionParameters(770, 771, 1, 1);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 6:\n            this._alphaState.setAlphaBlendFunctionParameters(1, 1, 0, 1);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 1:\n            this._alphaState.setAlphaBlendFunctionParameters(770, 1, 0, 1);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 3:\n            this._alphaState.setAlphaBlendFunctionParameters(0, 769, 1, 1);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 4:\n            this._alphaState.setAlphaBlendFunctionParameters(774, 0, 1, 1);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 5:\n            this._alphaState.setAlphaBlendFunctionParameters(770, 769, 1, 1);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 9:\n            this._alphaState.setAlphaBlendFunctionParameters(32769, 32770, 32771, 32772);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 10:\n            this._alphaState.setAlphaBlendFunctionParameters(1, 769, 1, 771);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 11:\n            this._alphaState.setAlphaBlendFunctionParameters(1, 1, 1, 1);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 12:\n            this._alphaState.setAlphaBlendFunctionParameters(772, 1, 0, 0);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 13:\n            this._alphaState.setAlphaBlendFunctionParameters(775, 769, 773, 771);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 14:\n            this._alphaState.setAlphaBlendFunctionParameters(1, 771, 1, 771);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 15:\n            this._alphaState.setAlphaBlendFunctionParameters(1, 1, 1, 0);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 16:\n            this._alphaState.setAlphaBlendFunctionParameters(775, 769, 0, 1);\n            this._alphaState.alphaBlend = true;\n            break;\n        case 17:\n            // Same as ALPHA_COMBINE but accumulates (1 - alpha) values in the alpha channel for a later readout in order independant transparency\n            this._alphaState.setAlphaBlendFunctionParameters(770, 771, 1, 771);\n            this._alphaState.alphaBlend = true;\n            break;\n    }\n    if (!noDepthWriteChange) {\n        this.setDepthWrite(mode === Engine.ALPHA_DISABLE);\n        this._cacheRenderPipeline.setDepthWriteEnabled(mode === Engine.ALPHA_DISABLE);\n    }\n    this._alphaMode = mode;\n    this._cacheRenderPipeline.setAlphaBlendEnabled(this._alphaState.alphaBlend);\n    this._cacheRenderPipeline.setAlphaBlendFactors(this._alphaState._blendFunctionParameters, this._alphaState._blendEquationParameters);\n};\nWebGPUEngine.prototype.setAlphaEquation = function (equation) {\n    Engine.prototype.setAlphaEquation.call(this, equation);\n    this._cacheRenderPipeline.setAlphaBlendFactors(this._alphaState._blendFunctionParameters, this._alphaState._blendEquationParameters);\n};\n//# sourceMappingURL=engine.alpha.js.map","import { Logger } from \"../../Misc/logger.js\";\nimport { ComputeBindingType } from \"../Extensions/engine.computeShader.js\";\nimport * as WebGPUConstants from \"./webgpuConstants.js\";\n/** @hidden */\nvar WebGPUComputeContext = /** @class */ (function () {\n    function WebGPUComputeContext(device, cacheSampler) {\n        this._device = device;\n        this._cacheSampler = cacheSampler;\n        this.uniqueId = WebGPUComputeContext._Counter++;\n        this._bindGroupEntries = [];\n        this.clear();\n    }\n    WebGPUComputeContext.prototype.getBindGroups = function (bindings, computePipeline, bindingsMapping) {\n        if (!bindingsMapping) {\n            throw new Error(\"WebGPUComputeContext.getBindGroups: bindingsMapping is required until browsers support reflection for wgsl shaders!\");\n        }\n        if (this._bindGroups.length === 0) {\n            var bindGroupEntriesExist = this._bindGroupEntries.length > 0;\n            for (var key in bindings) {\n                var binding = bindings[key], location_1 = bindingsMapping[key], group = location_1.group, index = location_1.binding, type = binding.type, object = binding.object;\n                var indexInGroupEntries = binding.indexInGroupEntries;\n                var entries = this._bindGroupEntries[group];\n                if (!entries) {\n                    entries = this._bindGroupEntries[group] = [];\n                }\n                switch (type) {\n                    case ComputeBindingType.Sampler: {\n                        var sampler = object;\n                        if (indexInGroupEntries !== undefined && bindGroupEntriesExist) {\n                            entries[indexInGroupEntries].resource = this._cacheSampler.getSampler(sampler);\n                        }\n                        else {\n                            binding.indexInGroupEntries = entries.length;\n                            entries.push({\n                                binding: index,\n                                resource: this._cacheSampler.getSampler(sampler),\n                            });\n                        }\n                        break;\n                    }\n                    case ComputeBindingType.Texture:\n                    case ComputeBindingType.TextureWithoutSampler: {\n                        var texture = object;\n                        var hardwareTexture = texture._texture._hardwareTexture;\n                        if (indexInGroupEntries !== undefined && bindGroupEntriesExist) {\n                            if (type === ComputeBindingType.Texture) {\n                                entries[indexInGroupEntries++].resource = this._cacheSampler.getSampler(texture._texture);\n                            }\n                            entries[indexInGroupEntries].resource = hardwareTexture.view;\n                        }\n                        else {\n                            binding.indexInGroupEntries = entries.length;\n                            if (type === ComputeBindingType.Texture) {\n                                entries.push({\n                                    binding: index - 1,\n                                    resource: this._cacheSampler.getSampler(texture._texture),\n                                });\n                            }\n                            entries.push({\n                                binding: index,\n                                resource: hardwareTexture.view,\n                            });\n                        }\n                        break;\n                    }\n                    case ComputeBindingType.StorageTexture: {\n                        var texture = object;\n                        var hardwareTexture = texture._texture._hardwareTexture;\n                        if ((hardwareTexture.textureAdditionalUsages & WebGPUConstants.TextureUsage.StorageBinding) === 0) {\n                            Logger.Error(\"computeDispatch: The texture (name=\".concat(texture.name, \", uniqueId=\").concat(texture.uniqueId, \") is not a storage texture!\"), 50);\n                        }\n                        if (indexInGroupEntries !== undefined && bindGroupEntriesExist) {\n                            entries[indexInGroupEntries].resource = hardwareTexture.viewForWriting;\n                        }\n                        else {\n                            binding.indexInGroupEntries = entries.length;\n                            entries.push({\n                                binding: index,\n                                resource: hardwareTexture.viewForWriting,\n                            });\n                        }\n                        break;\n                    }\n                    case ComputeBindingType.UniformBuffer:\n                    case ComputeBindingType.StorageBuffer: {\n                        var buffer = type === ComputeBindingType.UniformBuffer ? object : object;\n                        var dataBuffer = buffer.getBuffer();\n                        var webgpuBuffer = dataBuffer.underlyingResource;\n                        if (indexInGroupEntries !== undefined && bindGroupEntriesExist) {\n                            entries[indexInGroupEntries].resource.buffer = webgpuBuffer;\n                            entries[indexInGroupEntries].resource.size = dataBuffer.capacity;\n                        }\n                        else {\n                            binding.indexInGroupEntries = entries.length;\n                            entries.push({\n                                binding: index,\n                                resource: {\n                                    buffer: webgpuBuffer,\n                                    offset: 0,\n                                    size: dataBuffer.capacity,\n                                },\n                            });\n                        }\n                        break;\n                    }\n                }\n            }\n            for (var i = 0; i < this._bindGroupEntries.length; ++i) {\n                var entries = this._bindGroupEntries[i];\n                if (!entries) {\n                    this._bindGroups[i] = undefined;\n                    continue;\n                }\n                this._bindGroups[i] = this._device.createBindGroup({\n                    layout: computePipeline.getBindGroupLayout(i),\n                    entries: entries,\n                });\n            }\n            this._bindGroups.length = this._bindGroupEntries.length;\n        }\n        return this._bindGroups;\n    };\n    WebGPUComputeContext.prototype.clear = function () {\n        this._bindGroups = [];\n        // Don't reset _bindGroupEntries if they have already been created, they are still ok even if we have to clear _bindGroups (the layout of the compute shader can't change once created)\n    };\n    WebGPUComputeContext._Counter = 0;\n    return WebGPUComputeContext;\n}());\nexport { WebGPUComputeContext };\n//# sourceMappingURL=webgpuComputeContext.js.map","/** @hidden */\nvar WebGPUComputePipelineContext = /** @class */ (function () {\n    function WebGPUComputePipelineContext(engine) {\n        this._name = \"unnamed\";\n        this.engine = engine;\n    }\n    Object.defineProperty(WebGPUComputePipelineContext.prototype, \"isAsync\", {\n        get: function () {\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebGPUComputePipelineContext.prototype, \"isReady\", {\n        get: function () {\n            if (this.stage) {\n                return true;\n            }\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebGPUComputePipelineContext.prototype._getComputeShaderCode = function () {\n        var _a;\n        return (_a = this.sources) === null || _a === void 0 ? void 0 : _a.compute;\n    };\n    WebGPUComputePipelineContext.prototype.dispose = function () { };\n    return WebGPUComputePipelineContext;\n}());\nexport { WebGPUComputePipelineContext };\n//# sourceMappingURL=webgpuComputePipelineContext.js.map","import { ComputeEffect } from \"../../../Compute/computeEffect.js\";\nimport { WebGPUEngine } from \"../../webgpuEngine.js\";\nimport { WebGPUComputeContext } from \"../webgpuComputeContext.js\";\nimport { WebGPUComputePipelineContext } from \"../webgpuComputePipelineContext.js\";\nimport * as WebGPUConstants from \"../webgpuConstants.js\";\nWebGPUEngine.prototype.createComputeContext = function () {\n    return new WebGPUComputeContext(this._device, this._cacheSampler);\n};\nWebGPUEngine.prototype.createComputeEffect = function (baseName, options) {\n    var compute = baseName.computeElement || baseName.compute || baseName.computeToken || baseName.computeSource || baseName;\n    var name = compute + \"@\" + options.defines;\n    if (this._compiledComputeEffects[name]) {\n        var compiledEffect = this._compiledComputeEffects[name];\n        if (options.onCompiled && compiledEffect.isReady()) {\n            options.onCompiled(compiledEffect);\n        }\n        return compiledEffect;\n    }\n    var effect = new ComputeEffect(baseName, options, this, name);\n    this._compiledComputeEffects[name] = effect;\n    return effect;\n};\nWebGPUEngine.prototype.createComputePipelineContext = function () {\n    return new WebGPUComputePipelineContext(this);\n};\nWebGPUEngine.prototype.areAllComputeEffectsReady = function () {\n    for (var key in this._compiledComputeEffects) {\n        var effect = this._compiledComputeEffects[key];\n        if (!effect.isReady()) {\n            return false;\n        }\n    }\n    return true;\n};\nWebGPUEngine.prototype.computeDispatch = function (effect, context, bindings, x, y, z, bindingsMapping) {\n    var _this = this;\n    if (this._currentRenderTarget) {\n        // A render target pass is currently in effect (meaning beingRenderPass has been called on the command encoder this._renderTargetEncoder): we are not allowed to open\n        // another pass on this command encoder (even if it's a compute pass) until endPass has been called, so we need to defer the compute pass for after the current render target pass is closed\n        this._onAfterUnbindFrameBufferObservable.addOnce(function () {\n            _this.computeDispatch(effect, context, bindings, x, y, z, bindingsMapping);\n        });\n        return;\n    }\n    var contextPipeline = effect._pipelineContext;\n    var computeContext = context;\n    if (!contextPipeline.computePipeline) {\n        contextPipeline.computePipeline = this._device.createComputePipeline({\n            layout: WebGPUConstants.AutoLayoutMode.Auto,\n            compute: contextPipeline.stage,\n        });\n    }\n    var commandEncoder = this._renderTargetEncoder;\n    var computePass = commandEncoder.beginComputePass();\n    computePass.setPipeline(contextPipeline.computePipeline);\n    var bindGroups = computeContext.getBindGroups(bindings, contextPipeline.computePipeline, bindingsMapping);\n    for (var i = 0; i < bindGroups.length; ++i) {\n        var bindGroup = bindGroups[i];\n        if (!bindGroup) {\n            continue;\n        }\n        computePass.setBindGroup(i, bindGroup);\n    }\n    computePass.dispatchWorkgroups(x, y, z);\n    computePass.end();\n};\nWebGPUEngine.prototype.releaseComputeEffects = function () {\n    for (var name_1 in this._compiledComputeEffects) {\n        var webGPUPipelineContextCompute = this._compiledComputeEffects[name_1].getPipelineContext();\n        this._deleteComputePipelineContext(webGPUPipelineContextCompute);\n    }\n    this._compiledComputeEffects = {};\n};\nWebGPUEngine.prototype._prepareComputePipelineContext = function (pipelineContext, computeSourceCode, rawComputeSourceCode, defines, entryPoint) {\n    var webGpuContext = pipelineContext;\n    if (this.dbgShowShaderCode) {\n        console.log(defines);\n        console.log(computeSourceCode);\n    }\n    webGpuContext.sources = {\n        compute: computeSourceCode,\n        rawCompute: rawComputeSourceCode,\n    };\n    webGpuContext.stage = this._createComputePipelineStageDescriptor(computeSourceCode, defines, entryPoint);\n};\nWebGPUEngine.prototype._releaseComputeEffect = function (effect) {\n    if (this._compiledComputeEffects[effect._key]) {\n        delete this._compiledComputeEffects[effect._key];\n        this._deleteComputePipelineContext(effect.getPipelineContext());\n    }\n};\nWebGPUEngine.prototype._rebuildComputeEffects = function () {\n    for (var key in this._compiledComputeEffects) {\n        var effect = this._compiledComputeEffects[key];\n        effect._pipelineContext = null;\n        effect._wasPreviouslyReady = false;\n        effect._prepareEffect();\n    }\n};\nWebGPUEngine.prototype._deleteComputePipelineContext = function (pipelineContext) {\n    var webgpuPipelineContext = pipelineContext;\n    if (webgpuPipelineContext) {\n        pipelineContext.dispose();\n    }\n};\nWebGPUEngine.prototype._createComputePipelineStageDescriptor = function (computeShader, defines, entryPoint) {\n    if (defines) {\n        defines = \"//\" + defines.split(\"\\n\").join(\"\\n//\") + \"\\n\";\n    }\n    else {\n        defines = \"\";\n    }\n    return {\n        module: this._device.createShaderModule({\n            code: defines + computeShader,\n        }),\n        entryPoint: entryPoint,\n    };\n};\n//# sourceMappingURL=engine.computeShader.js.map","import { __assign } from \"tslib\";\nimport { InternalTexture, InternalTextureSource } from \"../../../Materials/Textures/internalTexture.js\";\n\nimport { WebGPUEngine } from \"../../webgpuEngine.js\";\nWebGPUEngine.prototype._createDepthStencilCubeTexture = function (size, options) {\n    var internalTexture = new InternalTexture(this, InternalTextureSource.DepthStencil);\n    internalTexture.isCube = true;\n    var internalOptions = __assign({ bilinearFiltering: false, comparisonFunction: 0, generateStencil: false, samples: 1 }, options);\n    // TODO WEBGPU allow to choose the format?\n    internalTexture.format = internalOptions.generateStencil ? 13 : 14;\n    this._setupDepthStencilTexture(internalTexture, size, internalOptions.generateStencil, internalOptions.bilinearFiltering, internalOptions.comparisonFunction, internalOptions.samples);\n    this._textureHelper.createGPUTextureForInternalTexture(internalTexture);\n    this._internalTexturesCache.push(internalTexture);\n    return internalTexture;\n};\nWebGPUEngine.prototype.createCubeTexture = function (rootUrl, scene, files, noMipmap, onLoad, onError, format, forcedExtension, createPolynomials, lodScale, lodOffset, fallback, useSRGBBuffer) {\n    var _this = this;\n    if (onLoad === void 0) { onLoad = null; }\n    if (onError === void 0) { onError = null; }\n    if (forcedExtension === void 0) { forcedExtension = null; }\n    if (createPolynomials === void 0) { createPolynomials = false; }\n    if (lodScale === void 0) { lodScale = 0; }\n    if (lodOffset === void 0) { lodOffset = 0; }\n    if (fallback === void 0) { fallback = null; }\n    if (useSRGBBuffer === void 0) { useSRGBBuffer = false; }\n    return this.createCubeTextureBase(rootUrl, scene, files, !!noMipmap, onLoad, onError, format, forcedExtension, createPolynomials, lodScale, lodOffset, fallback, null, function (texture, imgs) {\n        var imageBitmaps = imgs; // we will always get an ImageBitmap array in WebGPU\n        var width = imageBitmaps[0].width;\n        var height = width;\n        _this._setCubeMapTextureParams(texture, !noMipmap);\n        texture.format = format !== null && format !== void 0 ? format : -1;\n        var gpuTextureWrapper = _this._textureHelper.createGPUTextureForInternalTexture(texture, width, height);\n        _this._textureHelper.updateCubeTextures(imageBitmaps, gpuTextureWrapper.underlyingResource, width, height, gpuTextureWrapper.format, false, false, 0, 0);\n        if (!noMipmap) {\n            _this._generateMipmaps(texture, _this._uploadEncoder);\n        }\n        texture.isReady = true;\n        texture.onLoadedObservable.notifyObservers(texture);\n        texture.onLoadedObservable.clear();\n        if (onLoad) {\n            onLoad();\n        }\n    }, !!useSRGBBuffer);\n};\nWebGPUEngine.prototype._setCubeMapTextureParams = function (texture, loadMipmap, maxLevel) {\n    texture.samplingMode = loadMipmap ? 3 : 2;\n    texture._cachedWrapU = 0;\n    texture._cachedWrapV = 0;\n    if (maxLevel) {\n        texture._maxLodLevel = maxLevel;\n    }\n};\n//# sourceMappingURL=engine.cubeTexture.js.map","import { WebGPUEngine } from \"../../webgpuEngine.js\";\nWebGPUEngine.prototype._debugPushGroup = function (groupName, targetObject) {\n    if (!this._options.enableGPUDebugMarkers) {\n        return;\n    }\n    if (targetObject === 0 || targetObject === 1) {\n        var encoder = targetObject === 0 ? this._renderEncoder : this._renderTargetEncoder;\n        encoder.pushDebugGroup(groupName);\n    }\n    else if (this._currentRenderPass) {\n        this._currentRenderPass.pushDebugGroup(groupName);\n    }\n    else {\n        this._pendingDebugCommands.push([\"push\", groupName]);\n    }\n};\nWebGPUEngine.prototype._debugPopGroup = function (targetObject) {\n    if (!this._options.enableGPUDebugMarkers) {\n        return;\n    }\n    if (targetObject === 0 || targetObject === 1) {\n        var encoder = targetObject === 0 ? this._renderEncoder : this._renderTargetEncoder;\n        encoder.popDebugGroup();\n    }\n    else if (this._currentRenderPass) {\n        this._currentRenderPass.popDebugGroup();\n    }\n    else {\n        this._pendingDebugCommands.push([\"pop\", null]);\n    }\n};\nWebGPUEngine.prototype._debugInsertMarker = function (text, targetObject) {\n    if (!this._options.enableGPUDebugMarkers) {\n        return;\n    }\n    if (targetObject === 0 || targetObject === 1) {\n        var encoder = targetObject === 0 ? this._renderEncoder : this._renderTargetEncoder;\n        encoder.insertDebugMarker(text);\n    }\n    else if (this._currentRenderPass) {\n        this._currentRenderPass.insertDebugMarker(text);\n    }\n    else {\n        this._pendingDebugCommands.push([\"insert\", text]);\n    }\n};\nWebGPUEngine.prototype._debugFlushPendingCommands = function () {\n    for (var i = 0; i < this._pendingDebugCommands.length; ++i) {\n        var _a = this._pendingDebugCommands[i], name_1 = _a[0], param = _a[1];\n        switch (name_1) {\n            case \"push\":\n                this._debugPushGroup(param);\n                break;\n            case \"pop\":\n                this._debugPopGroup();\n                break;\n            case \"insert\":\n                this._debugInsertMarker(param);\n                break;\n        }\n    }\n    this._pendingDebugCommands.length = 0;\n};\n//# sourceMappingURL=engine.debugging.js.map","import { WebGPUEngine } from \"../../webgpuEngine.js\";\nWebGPUEngine.prototype.updateDynamicIndexBuffer = function (indexBuffer, indices, offset) {\n    if (offset === void 0) { offset = 0; }\n    var gpuBuffer = indexBuffer;\n    var view;\n    if (indexBuffer.is32Bits) {\n        view = indices instanceof Uint32Array ? indices : new Uint32Array(indices);\n    }\n    else {\n        view = indices instanceof Uint16Array ? indices : new Uint16Array(indices);\n    }\n    this._bufferManager.setSubData(gpuBuffer, offset, view);\n};\nWebGPUEngine.prototype.updateDynamicVertexBuffer = function (vertexBuffer, data, byteOffset, byteLength) {\n    var dataBuffer = vertexBuffer;\n    if (byteOffset === undefined) {\n        byteOffset = 0;\n    }\n    var view;\n    if (byteLength === undefined) {\n        if (data instanceof Array) {\n            view = new Float32Array(data);\n        }\n        else if (data instanceof ArrayBuffer) {\n            view = new Uint8Array(data);\n        }\n        else {\n            view = data;\n        }\n        byteLength = view.byteLength;\n    }\n    else {\n        if (data instanceof Array) {\n            view = new Float32Array(data);\n        }\n        else if (data instanceof ArrayBuffer) {\n            view = new Uint8Array(data);\n        }\n        else {\n            view = data;\n        }\n    }\n    this._bufferManager.setSubData(dataBuffer, byteOffset, view, 0, byteLength);\n};\n//# sourceMappingURL=engine.dynamicBuffer.js.map","import { WebGPUEngine } from \"../../webgpuEngine.js\";\nWebGPUEngine.prototype.updateDynamicTexture = function (texture, canvas, invertY, premulAlpha, format, forceBindTexture, allowGPUOptimization) {\n    var _a;\n    if (premulAlpha === void 0) { premulAlpha = false; }\n    if (!texture) {\n        return;\n    }\n    var width = canvas.width, height = canvas.height;\n    var gpuTextureWrapper = texture._hardwareTexture;\n    if (!((_a = texture._hardwareTexture) === null || _a === void 0 ? void 0 : _a.underlyingResource)) {\n        gpuTextureWrapper = this._textureHelper.createGPUTextureForInternalTexture(texture, width, height);\n    }\n    this._textureHelper.updateTexture(canvas, texture, width, height, texture.depth, gpuTextureWrapper.format, 0, 0, invertY, premulAlpha, 0, 0, allowGPUOptimization);\n    if (texture.generateMipMaps) {\n        this._generateMipmaps(texture, this._uploadEncoder);\n    }\n    texture.isReady = true;\n};\n//# sourceMappingURL=engine.dynamicTexture.js.map","import { __extends } from \"tslib\";\nimport { ExternalTexture } from \"../../Materials/Textures/externalTexture.js\";\n/**\n * Nothing specific to WebGPU in this class, but the spec is not final yet so let's remove it later on\n * if it is not needed\n * @hidden\n **/\nvar WebGPUExternalTexture = /** @class */ (function (_super) {\n    __extends(WebGPUExternalTexture, _super);\n    function WebGPUExternalTexture(video) {\n        return _super.call(this, video) || this;\n    }\n    return WebGPUExternalTexture;\n}(ExternalTexture));\nexport { WebGPUExternalTexture };\n//# sourceMappingURL=webgpuExternalTexture.js.map","import { WebGPUEngine } from \"../../webgpuEngine.js\";\nimport { WebGPUExternalTexture } from \"../webgpuExternalTexture.js\";\nimport { Effect } from \"../../../Materials/effect.js\";\nEffect.prototype.setExternalTexture = function (name, texture) {\n    this._engine.setExternalTexture(name, texture);\n};\nWebGPUEngine.prototype.createExternalTexture = function (video) {\n    var texture = new WebGPUExternalTexture(video);\n    return texture;\n};\nWebGPUEngine.prototype.setExternalTexture = function (name, texture) {\n    if (!texture) {\n        this._currentMaterialContext.setTexture(name, null);\n        return;\n    }\n    this._setInternalTexture(name, texture);\n};\n//# sourceMappingURL=engine.externalTexture.js.map","import { InternalTexture, InternalTextureSource } from \"../../../Materials/Textures/internalTexture.js\";\nimport { Logger } from \"../../../Misc/logger.js\";\n\nimport { WebGPUEngine } from \"../../webgpuEngine.js\";\nWebGPUEngine.prototype.unBindMultiColorAttachmentFramebuffer = function (rtWrapper, disableGenerateMipMaps, onBeforeUnbind) {\n    if (disableGenerateMipMaps === void 0) { disableGenerateMipMaps = false; }\n    if (onBeforeUnbind) {\n        onBeforeUnbind();\n    }\n    var attachments = rtWrapper._attachments;\n    var count = attachments.length;\n    if (this._currentRenderPass && this._currentRenderPass !== this._mainRenderPassWrapper.renderPass) {\n        this._endRenderTargetRenderPass();\n    }\n    for (var i = 0; i < count; i++) {\n        var texture = rtWrapper.textures[i];\n        if (texture.generateMipMaps && !disableGenerateMipMaps && !texture.isCube) {\n            this._generateMipmaps(texture);\n        }\n    }\n    this._currentRenderTarget = null;\n    this._mrtAttachments = [];\n    this._cacheRenderPipeline.setMRT([]);\n    this._cacheRenderPipeline.setMRTAttachments(this._mrtAttachments);\n    this._currentRenderPass = this._mainRenderPassWrapper.renderPass;\n    this._setDepthTextureFormat(this._mainRenderPassWrapper);\n    this._setColorFormat(this._mainRenderPassWrapper);\n};\nWebGPUEngine.prototype.createMultipleRenderTarget = function (size, options, initializeBuffers) {\n    var _a;\n    var generateMipMaps = false;\n    var generateDepthBuffer = true;\n    var generateStencilBuffer = false;\n    var generateDepthTexture = false;\n    var depthTextureFormat = 15;\n    var textureCount = 1;\n    var defaultType = 0;\n    var defaultSamplingMode = 3;\n    var defaultUseSRGBBuffer = false;\n    var types = new Array();\n    var samplingModes = new Array();\n    var useSRGBBuffers = new Array();\n    var rtWrapper = this._createHardwareRenderTargetWrapper(true, false, size);\n    if (options !== undefined) {\n        generateMipMaps = options.generateMipMaps === undefined ? false : options.generateMipMaps;\n        generateDepthBuffer = options.generateDepthBuffer === undefined ? true : options.generateDepthBuffer;\n        generateStencilBuffer = options.generateStencilBuffer === undefined ? false : options.generateStencilBuffer;\n        generateDepthTexture = options.generateDepthTexture === undefined ? false : options.generateDepthTexture;\n        textureCount = options.textureCount || 1;\n        depthTextureFormat = (_a = options.depthTextureFormat) !== null && _a !== void 0 ? _a : 15;\n        if (options.types) {\n            types = options.types;\n        }\n        if (options.samplingModes) {\n            samplingModes = options.samplingModes;\n        }\n        if (options.useSRGBBuffers) {\n            useSRGBBuffers = options.useSRGBBuffers;\n        }\n    }\n    var width = size.width || size;\n    var height = size.height || size;\n    var depthStencilTexture = null;\n    if (generateDepthBuffer || generateStencilBuffer || generateDepthTexture) {\n        depthStencilTexture = rtWrapper.createDepthStencilTexture(0, false, generateStencilBuffer, 1, depthTextureFormat);\n    }\n    var textures = [];\n    var attachments = [];\n    var defaultAttachments = [];\n    rtWrapper._generateDepthBuffer = generateDepthBuffer;\n    rtWrapper._generateStencilBuffer = generateStencilBuffer;\n    rtWrapper._attachments = attachments;\n    rtWrapper._defaultAttachments = defaultAttachments;\n    for (var i = 0; i < textureCount; i++) {\n        var samplingMode = samplingModes[i] || defaultSamplingMode;\n        var type = types[i] || defaultType;\n        var useSRGBBuffer = useSRGBBuffers[i] || defaultUseSRGBBuffer;\n        if (type === 1 && !this._caps.textureFloatLinearFiltering) {\n            // if floating point linear (gl.FLOAT) then force to NEAREST_SAMPLINGMODE\n            samplingMode = 1;\n        }\n        else if (type === 2 && !this._caps.textureHalfFloatLinearFiltering) {\n            // if floating point linear (HALF_FLOAT) then force to NEAREST_SAMPLINGMODE\n            samplingMode = 1;\n        }\n        if (type === 1 && !this._caps.textureFloat) {\n            type = 0;\n            Logger.Warn(\"Float textures are not supported. Render target forced to TEXTURETYPE_UNSIGNED_BYTE type\");\n        }\n        var texture = new InternalTexture(this, InternalTextureSource.MultiRenderTarget);\n        textures.push(texture);\n        attachments.push(i + 1);\n        defaultAttachments.push(initializeBuffers ? i + 1 : i === 0 ? 1 : 0);\n        texture.baseWidth = width;\n        texture.baseHeight = height;\n        texture.width = width;\n        texture.height = height;\n        texture.isReady = true;\n        texture.samples = 1;\n        texture.generateMipMaps = generateMipMaps;\n        texture.samplingMode = samplingMode;\n        texture.type = type;\n        texture._cachedWrapU = 0;\n        texture._cachedWrapV = 0;\n        texture._useSRGBBuffer = useSRGBBuffer;\n        this._internalTexturesCache.push(texture);\n        this._textureHelper.createGPUTextureForInternalTexture(texture);\n    }\n    if (depthStencilTexture) {\n        depthStencilTexture.incrementReferences();\n        textures.push(depthStencilTexture);\n        this._internalTexturesCache.push(depthStencilTexture);\n    }\n    rtWrapper.setTextures(textures);\n    return rtWrapper;\n};\nWebGPUEngine.prototype.updateMultipleRenderTargetTextureSampleCount = function (rtWrapper, samples) {\n    if (!rtWrapper || !rtWrapper.textures || rtWrapper.textures[0].samples === samples) {\n        return samples;\n    }\n    var count = rtWrapper.textures.length;\n    if (count === 0) {\n        return 1;\n    }\n    samples = Math.min(samples, this.getCaps().maxMSAASamples);\n    for (var i = 0; i < count; ++i) {\n        var texture = rtWrapper.textures[i];\n        this._textureHelper.createMSAATexture(texture, samples);\n        texture.samples = samples;\n    }\n    // Note that the last texture of textures is the depth texture if the depth texture has been generated by the MRT class and so the MSAA texture\n    // will be recreated for this texture by the loop above: in that case, there's no need to create the MSAA texture for rtWrapper._depthStencilTexture\n    // because rtWrapper._depthStencilTexture is the same texture than the depth texture\n    if (rtWrapper._depthStencilTexture && rtWrapper._depthStencilTexture !== rtWrapper.textures[rtWrapper.textures.length - 1]) {\n        this._textureHelper.createMSAATexture(rtWrapper._depthStencilTexture, samples);\n        rtWrapper._depthStencilTexture.samples = samples;\n    }\n    return samples;\n};\nWebGPUEngine.prototype.bindAttachments = function (attachments) {\n    if (attachments.length === 0 || !this._currentRenderTarget) {\n        return;\n    }\n    this._mrtAttachments = attachments;\n    if (this._currentRenderPass) {\n        // the render pass has already been created, we need to call setMRTAttachments to update the state of the attachments\n        this._cacheRenderPipeline.setMRTAttachments(attachments);\n    }\n    else {\n        // the render pass is not created yet so we don't need to call setMRTAttachments: it will be called as part of the render pass creation (see WebGPUEngine._startRenderTargetRenderPass)\n    }\n};\nWebGPUEngine.prototype.buildTextureLayout = function (textureStatus) {\n    var result = [];\n    for (var i = 0; i < textureStatus.length; i++) {\n        if (textureStatus[i]) {\n            result.push(i + 1);\n        }\n        else {\n            result.push(0);\n        }\n    }\n    return result;\n};\nWebGPUEngine.prototype.restoreSingleAttachment = function () {\n    // not sure what to do, probably nothing... This function and restoreSingleAttachmentForRenderTarget are not called in Babylon.js so it's hard to know the use case\n};\nWebGPUEngine.prototype.restoreSingleAttachmentForRenderTarget = function () {\n    // not sure what to do, probably nothing... This function and restoreSingleAttachment are not called in Babylon.js so it's hard to know the use case\n};\n//# sourceMappingURL=engine.multiRender.js.map","import { InternalTexture, InternalTextureSource } from \"../../../Materials/Textures/internalTexture.js\";\n\nimport { WebGPUEngine } from \"../../webgpuEngine.js\";\nimport { Logger } from \"../../../Misc/logger.js\";\nWebGPUEngine.prototype.createRawTexture = function (data, width, height, format, generateMipMaps, invertY, samplingMode, compression, type, creationFlags, useSRGBBuffer) {\n    if (compression === void 0) { compression = null; }\n    if (type === void 0) { type = 0; }\n    if (creationFlags === void 0) { creationFlags = 0; }\n    if (useSRGBBuffer === void 0) { useSRGBBuffer = false; }\n    var texture = new InternalTexture(this, InternalTextureSource.Raw);\n    texture.baseWidth = width;\n    texture.baseHeight = height;\n    texture.width = width;\n    texture.height = height;\n    texture.format = format;\n    texture.generateMipMaps = generateMipMaps;\n    texture.samplingMode = samplingMode;\n    texture.invertY = invertY;\n    texture._compression = compression;\n    texture.type = type;\n    texture._useSRGBBuffer = useSRGBBuffer;\n    if (!this._doNotHandleContextLost) {\n        texture._bufferView = data;\n    }\n    this._textureHelper.createGPUTextureForInternalTexture(texture, width, height, undefined, creationFlags);\n    this.updateRawTexture(texture, data, format, invertY, compression, type, useSRGBBuffer);\n    this._internalTexturesCache.push(texture);\n    return texture;\n};\nWebGPUEngine.prototype.updateRawTexture = function (texture, bufferView, format, invertY, compression, type, useSRGBBuffer) {\n    if (compression === void 0) { compression = null; }\n    if (type === void 0) { type = 0; }\n    if (useSRGBBuffer === void 0) { useSRGBBuffer = false; }\n    if (!texture) {\n        return;\n    }\n    if (!this._doNotHandleContextLost) {\n        texture._bufferView = bufferView;\n        texture.invertY = invertY;\n        texture._compression = compression;\n        texture._useSRGBBuffer = useSRGBBuffer;\n    }\n    if (bufferView) {\n        var gpuTextureWrapper = texture._hardwareTexture;\n        var needConversion = format === 4;\n        if (needConversion) {\n            bufferView = _convertRGBtoRGBATextureData(bufferView, texture.width, texture.height, type);\n        }\n        var data = new Uint8Array(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n        this._textureHelper.updateTexture(data, texture, texture.width, texture.height, texture.depth, gpuTextureWrapper.format, 0, 0, invertY, false, 0, 0);\n        if (texture.generateMipMaps) {\n            this._generateMipmaps(texture, this._uploadEncoder);\n        }\n    }\n    texture.isReady = true;\n};\nWebGPUEngine.prototype.createRawCubeTexture = function (data, size, format, type, generateMipMaps, invertY, samplingMode, compression) {\n    if (compression === void 0) { compression = null; }\n    var texture = new InternalTexture(this, InternalTextureSource.CubeRaw);\n    if (type === 1 && !this._caps.textureFloatLinearFiltering) {\n        generateMipMaps = false;\n        samplingMode = 1;\n        Logger.Warn(\"Float texture filtering is not supported. Mipmap generation and sampling mode are forced to false and TEXTURE_NEAREST_SAMPLINGMODE, respectively.\");\n    }\n    else if (type === 2 && !this._caps.textureHalfFloatLinearFiltering) {\n        generateMipMaps = false;\n        samplingMode = 1;\n        Logger.Warn(\"Half float texture filtering is not supported. Mipmap generation and sampling mode are forced to false and TEXTURE_NEAREST_SAMPLINGMODE, respectively.\");\n    }\n    else if (type === 1 && !this._caps.textureFloatRender) {\n        generateMipMaps = false;\n        Logger.Warn(\"Render to float textures is not supported. Mipmap generation forced to false.\");\n    }\n    else if (type === 2 && !this._caps.colorBufferFloat) {\n        generateMipMaps = false;\n        Logger.Warn(\"Render to half float textures is not supported. Mipmap generation forced to false.\");\n    }\n    texture.isCube = true;\n    texture.format = format === 4 ? 5 : format;\n    texture.type = type;\n    texture.generateMipMaps = generateMipMaps;\n    texture.width = size;\n    texture.height = size;\n    texture.samplingMode = samplingMode;\n    if (!this._doNotHandleContextLost) {\n        texture._bufferViewArray = data;\n    }\n    texture._cachedWrapU = 0;\n    texture._cachedWrapV = 0;\n    this._textureHelper.createGPUTextureForInternalTexture(texture);\n    if (data) {\n        this.updateRawCubeTexture(texture, data, format, type, invertY, compression);\n    }\n    return texture;\n};\nWebGPUEngine.prototype.updateRawCubeTexture = function (texture, bufferView, format, type, invertY, compression) {\n    if (compression === void 0) { compression = null; }\n    texture._bufferViewArray = bufferView;\n    texture.invertY = invertY;\n    texture._compression = compression;\n    var gpuTextureWrapper = texture._hardwareTexture;\n    var needConversion = format === 4;\n    var data = [];\n    for (var i = 0; i < bufferView.length; ++i) {\n        var faceData = bufferView[i];\n        if (needConversion) {\n            faceData = _convertRGBtoRGBATextureData(bufferView[i], texture.width, texture.height, type);\n        }\n        data.push(new Uint8Array(faceData.buffer, faceData.byteOffset, faceData.byteLength));\n    }\n    this._textureHelper.updateCubeTextures(data, gpuTextureWrapper.underlyingResource, texture.width, texture.height, gpuTextureWrapper.format, invertY, false, 0, 0);\n    if (texture.generateMipMaps) {\n        this._generateMipmaps(texture, this._uploadEncoder);\n    }\n    texture.isReady = true;\n};\nWebGPUEngine.prototype.createRawCubeTextureFromUrl = function (url, scene, size, format, type, noMipmap, callback, mipmapGenerator, onLoad, onError, samplingMode, invertY) {\n    var _this = this;\n    if (onLoad === void 0) { onLoad = null; }\n    if (onError === void 0) { onError = null; }\n    if (samplingMode === void 0) { samplingMode = 3; }\n    if (invertY === void 0) { invertY = false; }\n    var texture = this.createRawCubeTexture(null, size, format, type, !noMipmap, invertY, samplingMode, null);\n    scene === null || scene === void 0 ? void 0 : scene._addPendingData(texture);\n    texture.url = url;\n    this._internalTexturesCache.push(texture);\n    var onerror = function (request, exception) {\n        scene === null || scene === void 0 ? void 0 : scene._removePendingData(texture);\n        if (onError && request) {\n            onError(request.status + \" \" + request.statusText, exception);\n        }\n    };\n    var internalCallback = function (data) {\n        var width = texture.width;\n        var faceDataArrays = callback(data);\n        if (!faceDataArrays) {\n            return;\n        }\n        var faces = [0, 2, 4, 1, 3, 5];\n        if (mipmapGenerator) {\n            var needConversion = format === 4;\n            var mipData = mipmapGenerator(faceDataArrays);\n            var gpuTextureWrapper = texture._hardwareTexture;\n            var faces_1 = [0, 1, 2, 3, 4, 5];\n            for (var level = 0; level < mipData.length; level++) {\n                var mipSize = width >> level;\n                var allFaces = [];\n                for (var faceIndex = 0; faceIndex < 6; faceIndex++) {\n                    var mipFaceData = mipData[level][faces_1[faceIndex]];\n                    if (needConversion) {\n                        mipFaceData = _convertRGBtoRGBATextureData(mipFaceData, mipSize, mipSize, type);\n                    }\n                    allFaces.push(new Uint8Array(mipFaceData.buffer, mipFaceData.byteOffset, mipFaceData.byteLength));\n                }\n                _this._textureHelper.updateCubeTextures(allFaces, gpuTextureWrapper.underlyingResource, mipSize, mipSize, gpuTextureWrapper.format, invertY, false, 0, 0);\n            }\n        }\n        else {\n            var allFaces = [];\n            for (var faceIndex = 0; faceIndex < 6; faceIndex++) {\n                allFaces.push(faceDataArrays[faces[faceIndex]]);\n            }\n            _this.updateRawCubeTexture(texture, allFaces, format, type, invertY);\n        }\n        texture.isReady = true;\n        scene === null || scene === void 0 ? void 0 : scene._removePendingData(texture);\n        if (onLoad) {\n            onLoad();\n        }\n    };\n    this._loadFile(url, function (data) {\n        internalCallback(data);\n    }, undefined, scene === null || scene === void 0 ? void 0 : scene.offlineProvider, true, onerror);\n    return texture;\n};\nWebGPUEngine.prototype.createRawTexture3D = function (data, width, height, depth, format, generateMipMaps, invertY, samplingMode, compression, textureType, creationFlags) {\n    if (compression === void 0) { compression = null; }\n    if (textureType === void 0) { textureType = 0; }\n    if (creationFlags === void 0) { creationFlags = 0; }\n    var source = InternalTextureSource.Raw3D;\n    var texture = new InternalTexture(this, source);\n    texture.baseWidth = width;\n    texture.baseHeight = height;\n    texture.baseDepth = depth;\n    texture.width = width;\n    texture.height = height;\n    texture.depth = depth;\n    texture.format = format;\n    texture.type = textureType;\n    texture.generateMipMaps = generateMipMaps;\n    texture.samplingMode = samplingMode;\n    texture.is3D = true;\n    if (!this._doNotHandleContextLost) {\n        texture._bufferView = data;\n    }\n    this._textureHelper.createGPUTextureForInternalTexture(texture, width, height, undefined, creationFlags);\n    this.updateRawTexture3D(texture, data, format, invertY, compression, textureType);\n    this._internalTexturesCache.push(texture);\n    return texture;\n};\nWebGPUEngine.prototype.updateRawTexture3D = function (texture, bufferView, format, invertY, compression, textureType) {\n    if (compression === void 0) { compression = null; }\n    if (textureType === void 0) { textureType = 0; }\n    if (!this._doNotHandleContextLost) {\n        texture._bufferView = bufferView;\n        texture.format = format;\n        texture.invertY = invertY;\n        texture._compression = compression;\n    }\n    if (bufferView) {\n        var gpuTextureWrapper = texture._hardwareTexture;\n        var needConversion = format === 4;\n        if (needConversion) {\n            bufferView = _convertRGBtoRGBATextureData(bufferView, texture.width, texture.height, textureType);\n        }\n        var data = new Uint8Array(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n        this._textureHelper.updateTexture(data, texture, texture.width, texture.height, texture.depth, gpuTextureWrapper.format, 0, 0, invertY, false, 0, 0);\n        if (texture.generateMipMaps) {\n            this._generateMipmaps(texture, this._uploadEncoder);\n        }\n    }\n    texture.isReady = true;\n};\nWebGPUEngine.prototype.createRawTexture2DArray = function (data, width, height, depth, format, generateMipMaps, invertY, samplingMode, compression, textureType, creationFlags) {\n    if (compression === void 0) { compression = null; }\n    if (textureType === void 0) { textureType = 0; }\n    if (creationFlags === void 0) { creationFlags = 0; }\n    var source = InternalTextureSource.Raw2DArray;\n    var texture = new InternalTexture(this, source);\n    texture.baseWidth = width;\n    texture.baseHeight = height;\n    texture.baseDepth = depth;\n    texture.width = width;\n    texture.height = height;\n    texture.depth = depth;\n    texture.format = format;\n    texture.type = textureType;\n    texture.generateMipMaps = generateMipMaps;\n    texture.samplingMode = samplingMode;\n    texture.is2DArray = true;\n    if (!this._doNotHandleContextLost) {\n        texture._bufferView = data;\n    }\n    this._textureHelper.createGPUTextureForInternalTexture(texture, width, height, depth, creationFlags);\n    this.updateRawTexture2DArray(texture, data, format, invertY, compression, textureType);\n    this._internalTexturesCache.push(texture);\n    return texture;\n};\nWebGPUEngine.prototype.updateRawTexture2DArray = function (texture, bufferView, format, invertY, compression, textureType) {\n    if (compression === void 0) { compression = null; }\n    if (textureType === void 0) { textureType = 0; }\n    if (!this._doNotHandleContextLost) {\n        texture._bufferView = bufferView;\n        texture.format = format;\n        texture.invertY = invertY;\n        texture._compression = compression;\n    }\n    if (bufferView) {\n        var gpuTextureWrapper = texture._hardwareTexture;\n        var needConversion = format === 4;\n        if (needConversion) {\n            bufferView = _convertRGBtoRGBATextureData(bufferView, texture.width, texture.height, textureType);\n        }\n        var data = new Uint8Array(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n        this._textureHelper.updateTexture(data, texture, texture.width, texture.height, texture.depth, gpuTextureWrapper.format, 0, 0, invertY, false, 0, 0);\n        if (texture.generateMipMaps) {\n            this._generateMipmaps(texture, this._uploadEncoder);\n        }\n    }\n    texture.isReady = true;\n};\n/**\n * @param rgbData\n * @param width\n * @param height\n * @param textureType\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction _convertRGBtoRGBATextureData(rgbData, width, height, textureType) {\n    // Create new RGBA data container.\n    var rgbaData;\n    var val1 = 1;\n    if (textureType === 1) {\n        rgbaData = new Float32Array(width * height * 4);\n    }\n    else if (textureType === 2) {\n        rgbaData = new Uint16Array(width * height * 4);\n        val1 = 15360; // 15360 is the encoding of 1 in half float\n    }\n    else if (textureType === 7) {\n        rgbaData = new Uint32Array(width * height * 4);\n    }\n    else {\n        rgbaData = new Uint8Array(width * height * 4);\n    }\n    // Convert each pixel.\n    for (var x = 0; x < width; x++) {\n        for (var y = 0; y < height; y++) {\n            var index = (y * width + x) * 3;\n            var newIndex = (y * width + x) * 4;\n            // Map Old Value to new value.\n            rgbaData[newIndex + 0] = rgbData[index + 0];\n            rgbaData[newIndex + 1] = rgbData[index + 1];\n            rgbaData[newIndex + 2] = rgbData[index + 2];\n            // Add fully opaque alpha channel.\n            rgbaData[newIndex + 3] = val1;\n        }\n    }\n    return rgbaData;\n}\n//# sourceMappingURL=engine.rawTexture.js.map","import { WebGPUEngine } from \"../../webgpuEngine.js\";\nimport { WebGPURenderItemBeginOcclusionQuery, WebGPURenderItemEndOcclusionQuery } from \"../webgpuBundleList.js\";\nWebGPUEngine.prototype.getGPUFrameTimeCounter = function () {\n    return this._timestampQuery.gpuFrameTimeCounter;\n};\nWebGPUEngine.prototype.captureGPUFrameTime = function (value) {\n    this._timestampQuery.enable = value && !!this._caps.timerQuery;\n};\nWebGPUEngine.prototype.createQuery = function () {\n    return this._occlusionQuery.createQuery();\n};\nWebGPUEngine.prototype.deleteQuery = function (query) {\n    this._occlusionQuery.deleteQuery(query);\n    return this;\n};\nWebGPUEngine.prototype.isQueryResultAvailable = function (query) {\n    return this._occlusionQuery.isQueryResultAvailable(query);\n};\nWebGPUEngine.prototype.getQueryResult = function (query) {\n    return this._occlusionQuery.getQueryResult(query);\n};\nWebGPUEngine.prototype.beginOcclusionQuery = function (algorithmType, query) {\n    var _a;\n    if (this.compatibilityMode) {\n        if (this._occlusionQuery.canBeginQuery) {\n            (_a = this._currentRenderPass) === null || _a === void 0 ? void 0 : _a.beginOcclusionQuery(query);\n            return true;\n        }\n    }\n    else {\n        var renderPassIndex = this._getCurrentRenderPassIndex();\n        var bundleList = renderPassIndex === 0 ? this._bundleList : this._bundleListRenderTarget;\n        bundleList.addItem(new WebGPURenderItemBeginOcclusionQuery(query));\n        return true;\n    }\n    return false;\n};\nWebGPUEngine.prototype.endOcclusionQuery = function () {\n    var _a;\n    if (this.compatibilityMode) {\n        (_a = this._currentRenderPass) === null || _a === void 0 ? void 0 : _a.endOcclusionQuery();\n    }\n    else {\n        var renderPassIndex = this._getCurrentRenderPassIndex();\n        var bundleList = renderPassIndex === 0 ? this._bundleList : this._bundleListRenderTarget;\n        bundleList.addItem(new WebGPURenderItemEndOcclusionQuery());\n    }\n    return this;\n};\n//# sourceMappingURL=engine.query.js.map","import { WebGPUEngine } from \"../../webgpuEngine.js\";\nWebGPUEngine.prototype._readTexturePixels = function (texture, width, height, faceIndex, level, buffer, flushRenderer, noDataConversion, x, y) {\n    if (faceIndex === void 0) { faceIndex = -1; }\n    if (level === void 0) { level = 0; }\n    if (buffer === void 0) { buffer = null; }\n    if (flushRenderer === void 0) { flushRenderer = true; }\n    if (noDataConversion === void 0) { noDataConversion = false; }\n    if (x === void 0) { x = 0; }\n    if (y === void 0) { y = 0; }\n    var gpuTextureWrapper = texture._hardwareTexture;\n    if (flushRenderer) {\n        this.flushFramebuffer();\n    }\n    return this._textureHelper.readPixels(gpuTextureWrapper.underlyingResource, x, y, width, height, gpuTextureWrapper.format, faceIndex, level, buffer, noDataConversion);\n};\nWebGPUEngine.prototype._readTexturePixelsSync = function () {\n    throw \"_readTexturePixelsSync is unsupported in WebGPU!\";\n};\n//# sourceMappingURL=engine.readTexture.js.map","import { __extends } from \"tslib\";\nimport { RenderTargetWrapper } from \"../renderTargetWrapper.js\";\n/** @hidden */\nvar WebGPURenderTargetWrapper = /** @class */ (function (_super) {\n    __extends(WebGPURenderTargetWrapper, _super);\n    function WebGPURenderTargetWrapper() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return WebGPURenderTargetWrapper;\n}(RenderTargetWrapper));\nexport { WebGPURenderTargetWrapper };\n//# sourceMappingURL=webgpuRenderTargetWrapper.js.map","import { __assign } from \"tslib\";\nimport { InternalTexture, InternalTextureSource } from \"../../../Materials/Textures/internalTexture.js\";\n\nimport { WebGPUEngine } from \"../../webgpuEngine.js\";\nimport { WebGPURenderTargetWrapper } from \"../webgpuRenderTargetWrapper.js\";\nWebGPUEngine.prototype._createHardwareRenderTargetWrapper = function (isMulti, isCube, size) {\n    var rtWrapper = new WebGPURenderTargetWrapper(isMulti, isCube, size, this);\n    this._renderTargetWrapperCache.push(rtWrapper);\n    return rtWrapper;\n};\nWebGPUEngine.prototype.createRenderTargetTexture = function (size, options) {\n    var _a;\n    var rtWrapper = this._createHardwareRenderTargetWrapper(false, false, size);\n    var fullOptions = {};\n    if (options !== undefined && typeof options === \"object\") {\n        fullOptions.generateMipMaps = options.generateMipMaps;\n        fullOptions.generateDepthBuffer = options.generateDepthBuffer === undefined ? true : options.generateDepthBuffer;\n        fullOptions.generateStencilBuffer = fullOptions.generateDepthBuffer && options.generateStencilBuffer;\n        fullOptions.samplingMode = options.samplingMode === undefined ? 3 : options.samplingMode;\n        fullOptions.creationFlags = (_a = options.creationFlags) !== null && _a !== void 0 ? _a : 0;\n        fullOptions.noColorTarget = !!options.noColorTarget;\n    }\n    else {\n        fullOptions.generateMipMaps = options;\n        fullOptions.generateDepthBuffer = true;\n        fullOptions.generateStencilBuffer = false;\n        fullOptions.samplingMode = 3;\n        fullOptions.creationFlags = 0;\n        fullOptions.noColorTarget = false;\n    }\n    var texture = fullOptions.noColorTarget ? null : this._createInternalTexture(size, options, true, InternalTextureSource.RenderTarget);\n    rtWrapper._generateDepthBuffer = fullOptions.generateDepthBuffer;\n    rtWrapper._generateStencilBuffer = fullOptions.generateStencilBuffer ? true : false;\n    rtWrapper.setTextures(texture);\n    if (rtWrapper._generateDepthBuffer || rtWrapper._generateStencilBuffer) {\n        rtWrapper.createDepthStencilTexture(0, fullOptions.samplingMode === undefined ||\n            fullOptions.samplingMode === 2 ||\n            fullOptions.samplingMode === 2 ||\n            fullOptions.samplingMode === 3 ||\n            fullOptions.samplingMode === 3 ||\n            fullOptions.samplingMode === 5 ||\n            fullOptions.samplingMode === 6 ||\n            fullOptions.samplingMode === 7 ||\n            fullOptions.samplingMode === 11, rtWrapper._generateStencilBuffer, rtWrapper.samples);\n    }\n    if (texture) {\n        if (options !== undefined && typeof options === \"object\" && options.createMipMaps && !fullOptions.generateMipMaps) {\n            texture.generateMipMaps = true;\n        }\n        this._textureHelper.createGPUTextureForInternalTexture(texture, undefined, undefined, undefined, fullOptions.creationFlags);\n        if (options !== undefined && typeof options === \"object\" && options.createMipMaps && !fullOptions.generateMipMaps) {\n            texture.generateMipMaps = false;\n        }\n    }\n    return rtWrapper;\n};\nWebGPUEngine.prototype._createDepthStencilTexture = function (size, options) {\n    var internalTexture = new InternalTexture(this, InternalTextureSource.DepthStencil);\n    var internalOptions = __assign({ bilinearFiltering: false, comparisonFunction: 0, generateStencil: false, samples: 1, depthTextureFormat: options.generateStencil ? 13 : 14 }, options);\n    internalTexture.format = internalOptions.depthTextureFormat;\n    this._setupDepthStencilTexture(internalTexture, size, internalOptions.generateStencil, internalOptions.bilinearFiltering, internalOptions.comparisonFunction, internalOptions.samples);\n    this._textureHelper.createGPUTextureForInternalTexture(internalTexture);\n    this._internalTexturesCache.push(internalTexture);\n    return internalTexture;\n};\nWebGPUEngine.prototype._setupDepthStencilTexture = function (internalTexture, size, generateStencil, bilinearFiltering, comparisonFunction, samples) {\n    if (samples === void 0) { samples = 1; }\n    var width = size.width || size;\n    var height = size.height || size;\n    var layers = size.layers || 0;\n    internalTexture.baseWidth = width;\n    internalTexture.baseHeight = height;\n    internalTexture.width = width;\n    internalTexture.height = height;\n    internalTexture.is2DArray = layers > 0;\n    internalTexture.depth = layers;\n    internalTexture.isReady = true;\n    internalTexture.samples = samples;\n    internalTexture.generateMipMaps = false;\n    internalTexture.samplingMode = bilinearFiltering ? 2 : 1;\n    internalTexture.type = 1;\n    internalTexture._comparisonFunction = comparisonFunction;\n    internalTexture._cachedWrapU = 0;\n    internalTexture._cachedWrapV = 0;\n};\nWebGPUEngine.prototype.updateRenderTargetTextureSampleCount = function (rtWrapper, samples) {\n    if (!rtWrapper || !rtWrapper.texture || rtWrapper.samples === samples) {\n        return samples;\n    }\n    samples = Math.min(samples, this.getCaps().maxMSAASamples);\n    this._textureHelper.createMSAATexture(rtWrapper.texture, samples);\n    if (rtWrapper._depthStencilTexture) {\n        this._textureHelper.createMSAATexture(rtWrapper._depthStencilTexture, samples);\n        rtWrapper._depthStencilTexture.samples = samples;\n    }\n    rtWrapper.texture.samples = samples;\n    return samples;\n};\n//# sourceMappingURL=engine.renderTarget.js.map","import { __assign } from \"tslib\";\nimport { InternalTexture, InternalTextureSource } from \"../../../Materials/Textures/internalTexture.js\";\n\nimport { WebGPUEngine } from \"../../webgpuEngine.js\";\nWebGPUEngine.prototype.createRenderTargetCubeTexture = function (size, options) {\n    var rtWrapper = this._createHardwareRenderTargetWrapper(false, true, size);\n    var fullOptions = __assign({ generateMipMaps: true, generateDepthBuffer: true, generateStencilBuffer: false, type: 0, samplingMode: 3, format: 5, samples: 1 }, options);\n    fullOptions.generateStencilBuffer = fullOptions.generateDepthBuffer && fullOptions.generateStencilBuffer;\n    rtWrapper._generateDepthBuffer = fullOptions.generateDepthBuffer;\n    rtWrapper._generateStencilBuffer = fullOptions.generateStencilBuffer;\n    var texture = new InternalTexture(this, InternalTextureSource.RenderTarget);\n    texture.width = size;\n    texture.height = size;\n    texture.depth = 0;\n    texture.isReady = true;\n    texture.isCube = true;\n    texture.samples = fullOptions.samples;\n    texture.generateMipMaps = fullOptions.generateMipMaps;\n    texture.samplingMode = fullOptions.samplingMode;\n    texture.type = fullOptions.type;\n    texture.format = fullOptions.format;\n    this._internalTexturesCache.push(texture);\n    rtWrapper.setTextures(texture);\n    if (rtWrapper._generateDepthBuffer || rtWrapper._generateStencilBuffer) {\n        rtWrapper.createDepthStencilTexture(0, fullOptions.samplingMode === undefined ||\n            fullOptions.samplingMode === 2 ||\n            fullOptions.samplingMode === 2 ||\n            fullOptions.samplingMode === 3 ||\n            fullOptions.samplingMode === 3 ||\n            fullOptions.samplingMode === 5 ||\n            fullOptions.samplingMode === 6 ||\n            fullOptions.samplingMode === 7 ||\n            fullOptions.samplingMode === 11, rtWrapper._generateStencilBuffer, rtWrapper.samples);\n    }\n    if (options && options.createMipMaps && !fullOptions.generateMipMaps) {\n        texture.generateMipMaps = true;\n    }\n    this._textureHelper.createGPUTextureForInternalTexture(texture);\n    if (options && options.createMipMaps && !fullOptions.generateMipMaps) {\n        texture.generateMipMaps = false;\n    }\n    return rtWrapper;\n};\n//# sourceMappingURL=engine.renderTargetCube.js.map","import { WebGPUEngine } from \"../../webgpuEngine.js\";\nimport { Effect } from \"../../../Materials/effect.js\";\nEffect.prototype.setTextureSampler = function (name, sampler) {\n    this._engine.setTextureSampler(name, sampler);\n};\nWebGPUEngine.prototype.setTextureSampler = function (name, sampler) {\n    var _a;\n    (_a = this._currentMaterialContext) === null || _a === void 0 ? void 0 : _a.setSampler(name, sampler);\n};\n//# sourceMappingURL=engine.textureSampler.js.map","\nimport { WebGPUEngine } from \"../../webgpuEngine.js\";\nimport * as WebGPUConstants from \"../webgpuConstants.js\";\nimport { Effect } from \"../../../Materials/effect.js\";\nEffect.prototype.setStorageBuffer = function (name, buffer) {\n    this._engine.setStorageBuffer(name, buffer);\n};\nWebGPUEngine.prototype.createStorageBuffer = function (data, creationFlags) {\n    return this._createBuffer(data, creationFlags | 32);\n};\nWebGPUEngine.prototype.updateStorageBuffer = function (buffer, data, byteOffset, byteLength) {\n    var dataBuffer = buffer;\n    if (byteOffset === undefined) {\n        byteOffset = 0;\n    }\n    var view;\n    if (byteLength === undefined) {\n        if (data instanceof Array) {\n            view = new Float32Array(data);\n        }\n        else if (data instanceof ArrayBuffer) {\n            view = new Uint8Array(data);\n        }\n        else {\n            view = data;\n        }\n        byteLength = view.byteLength;\n    }\n    else {\n        if (data instanceof Array) {\n            view = new Float32Array(data);\n        }\n        else if (data instanceof ArrayBuffer) {\n            view = new Uint8Array(data);\n        }\n        else {\n            view = data;\n        }\n    }\n    this._bufferManager.setSubData(dataBuffer, byteOffset, view, 0, byteLength);\n};\nWebGPUEngine.prototype.readFromStorageBuffer = function (storageBuffer, offset, size, buffer) {\n    var _this = this;\n    size = size || storageBuffer.capacity;\n    var gpuBuffer = this._bufferManager.createRawBuffer(size, WebGPUConstants.BufferUsage.MapRead | WebGPUConstants.BufferUsage.CopyDst);\n    this._renderTargetEncoder.copyBufferToBuffer(storageBuffer.underlyingResource, offset !== null && offset !== void 0 ? offset : 0, gpuBuffer, 0, size);\n    return new Promise(function (resolve, reject) {\n        // we are using onEndFrameObservable because we need to map the gpuBuffer AFTER the command buffers\n        // have been submitted, else we get the error: \"Buffer used in a submit while mapped\"\n        _this.onEndFrameObservable.addOnce(function () {\n            gpuBuffer.mapAsync(WebGPUConstants.MapMode.Read, 0, size).then(function () {\n                var copyArrayBuffer = gpuBuffer.getMappedRange(0, size);\n                var data = buffer;\n                if (data === undefined) {\n                    data = new Uint8Array(size);\n                    data.set(new Uint8Array(copyArrayBuffer));\n                }\n                else {\n                    var ctor = data.constructor; // we want to create result data with the same type as buffer (Uint8Array, Float32Array, ...)\n                    data = new ctor(data.buffer);\n                    data.set(new ctor(copyArrayBuffer));\n                }\n                gpuBuffer.unmap();\n                _this._bufferManager.releaseBuffer(gpuBuffer);\n                resolve(data);\n            }, function (reason) { return reject(reason); });\n        });\n    });\n};\nWebGPUEngine.prototype.setStorageBuffer = function (name, buffer) {\n    var _a, _b;\n    (_a = this._currentDrawContext) === null || _a === void 0 ? void 0 : _a.setBuffer(name, (_b = buffer === null || buffer === void 0 ? void 0 : buffer.getBuffer()) !== null && _b !== void 0 ? _b : null);\n};\n//# sourceMappingURL=engine.storageBuffer.js.map","import { WebGPUEngine } from \"../../webgpuEngine.js\";\nimport * as WebGPUConstants from \"../webgpuConstants.js\";\nWebGPUEngine.prototype.createUniformBuffer = function (elements) {\n    var view;\n    if (elements instanceof Array) {\n        view = new Float32Array(elements);\n    }\n    else {\n        view = elements;\n    }\n    var dataBuffer = this._bufferManager.createBuffer(view, WebGPUConstants.BufferUsage.Uniform | WebGPUConstants.BufferUsage.CopyDst);\n    return dataBuffer;\n};\nWebGPUEngine.prototype.createDynamicUniformBuffer = function (elements) {\n    return this.createUniformBuffer(elements);\n};\nWebGPUEngine.prototype.updateUniformBuffer = function (uniformBuffer, elements, offset, count) {\n    if (offset === undefined) {\n        offset = 0;\n    }\n    var dataBuffer = uniformBuffer;\n    var view;\n    if (count === undefined) {\n        if (elements instanceof Float32Array) {\n            view = elements;\n        }\n        else {\n            view = new Float32Array(elements);\n        }\n        count = view.byteLength;\n    }\n    else {\n        if (elements instanceof Float32Array) {\n            view = elements;\n        }\n        else {\n            view = new Float32Array(elements);\n        }\n    }\n    this._bufferManager.setSubData(dataBuffer, offset, view, 0, count);\n};\nWebGPUEngine.prototype.bindUniformBufferBase = function (buffer, location, name) {\n    this._currentDrawContext.setBuffer(name, buffer);\n};\nWebGPUEngine.prototype.bindUniformBlock = function () { };\n//# sourceMappingURL=engine.uniformBuffer.js.map","import { WebGPUEngine } from \"../../webgpuEngine.js\";\nWebGPUEngine.prototype.updateVideoTexture = function (texture, video, invertY) {\n    var _this = this;\n    var _a;\n    if (!texture || texture._isDisabled) {\n        return;\n    }\n    if (this._videoTextureSupported === undefined) {\n        this._videoTextureSupported = true;\n    }\n    var gpuTextureWrapper = texture._hardwareTexture;\n    if (!((_a = texture._hardwareTexture) === null || _a === void 0 ? void 0 : _a.underlyingResource)) {\n        gpuTextureWrapper = this._textureHelper.createGPUTextureForInternalTexture(texture);\n    }\n    this.createImageBitmap(video)\n        .then(function (bitmap) {\n        _this._textureHelper.updateTexture(bitmap, texture, texture.width, texture.height, texture.depth, gpuTextureWrapper.format, 0, 0, !invertY, false, 0, 0);\n        if (texture.generateMipMaps) {\n            _this._generateMipmaps(texture, _this._uploadEncoder);\n        }\n        texture.isReady = true;\n    })\n        .catch(function () {\n        // Sometimes createImageBitmap(video) fails with \"Failed to execute 'createImageBitmap' on 'Window': The provided element's player has no current data.\"\n        // Just keep going on\n        texture.isReady = true;\n    });\n};\n//# sourceMappingURL=engine.videoTexture.js.map","import { Engine } from \"./engine.js\";\nimport { NullEngine } from \"./nullEngine.js\";\nimport { WebGPUEngine } from \"./webgpuEngine.js\";\n/**\n * Helper class to create the best engine depending on the current hardware\n */\nvar EngineFactory = /** @class */ (function () {\n    function EngineFactory() {\n    }\n    /**\n     * Creates an engine based on the capabilities of the underlying hardware\n     * @param canvas Defines the canvas to use to display the result\n     * @param options Defines the options passed to the engine to create the context dependencies\n     * @returns a promise that resolves with the created engine\n     */\n    EngineFactory.CreateAsync = function (canvas, options) {\n        return WebGPUEngine.IsSupportedAsync.then(function (supported) {\n            if (supported) {\n                return WebGPUEngine.CreateAsync(canvas, options);\n            }\n            else if (Engine.IsSupported) {\n                return new Promise(function (resolve) {\n                    resolve(new Engine(canvas, undefined, options));\n                });\n            }\n            return new Promise(function (resolve) {\n                resolve(new NullEngine(options));\n            });\n        });\n    };\n    return EngineFactory;\n}());\nexport { EngineFactory };\n//# sourceMappingURL=engineFactory.js.map"],"names":["DebugLayerTab","AxesViewer","scene","scaleLines","renderingGroupId","xAxis","yAxis","zAxis","lineThickness","this","_scaleLinesFactor","_instanced","redColoredMaterial","disableLighting","emissiveColor","scale","greenColoredMaterial","blueColoredMaterial","_xAxis","scaling","setAll","_yAxis","_zAxis","_SetRenderingGroupId","update","Object","defineProperty","prototype","get","enumerable","configurable","position","xaxis","yaxis","zaxis","copyFrom","setDirection","createInstance","axesViewer","dispose","node","id","getChildMeshes","forEach","mesh","BoneAxesViewer","_super","bone","_this","call","pos","_markAsDirtyAndCompose","getAbsolutePositionToRef","getDirectionToRef","_debugLayer","DebugLayer","BJSINSPECTOR","_getGlobalInspector","_scene","onDisposeObservable","add","hide","Inspector","OnPropertyChangedObservable","_onPropertyChangedObservable","OnSelectionChangeObservable","_onSelectionChangedObservable","_createInspector","config","isVisible","_i","_a","observers","length","observer","clear","undefined","_b","_c","OnSelectionChangedObservable","userOptions","overlay","showExplorer","showInspector","embedMode","handleResize","enablePopup","Show","select","entity","lineContainerTitles","toString","MarkLineContainerTitleForHighlighting","MarkMultipleLineContainerTitlesForHighlighting","notifyObservers","INSPECTOR","BABYLON","IsVisible","Hide","setAsActiveScene","_SetNewScene","show","Promise","resolve","inspectorUrl","inspectorURL","InspectorURL","concat","PhysicsViewer","_impostors","_meshes","_numMeshes","_debugMeshMeshes","Array","physicEngine","getPhysicsEngine","_physicsEnginePlugin","getPhysicsPlugin","_utilityLayer","pickUtilitySceneFirst","utilityLayerScene","autoClearDepthAndStencil","_updateDebugMeshes","plugin","i","impostor","isDisposed","hideImpostor","type","syncMeshWithImpostor","showImpostor","targetMesh","debugMesh","_getDebugMesh","_renderFunction","bind","registerBeforeRender","removed","removeMesh","index","indexOf","splice","unregisterBeforeRender","_getDebugMaterial","_debugMaterial","wireframe","_getDebugBoxMesh","_debugBoxMesh","size","rotationQuaternion","material","setEnabled","_getDebugSphereMesh","_debugSphereMesh","diameter","_getDebugCapsuleMesh","_debugCapsuleMesh","height","_getDebugCylinderMesh","_debugCylinderMesh","diameterTop","diameterBottom","_getDebugMeshMesh","wireframeOver","name","setParent","push","parent","physicsImpostor","physicsBody","getBoxSizeToRef","radius","getRadius","x","y","z","bi","object","getBoundingInfo","boundingBox","maximum","minimum","filter","c","m","getClassName","boundingInfo","min","max","addInPlace","scaleInPlace","count","RayHelper","ray","CreateAndShow","color","helper","_render","_renderPoints","origin","direction","_renderLine","points","updatable","isPickable","point","len","Math","instance","refreshBoundingInfo","attachToMesh","meshSpaceDirection","meshSpaceOrigin","_attachedToMesh","getScene","_meshSpaceDirection","_meshSpaceOrigin","clone","_onAfterRenderObserver","onBeforeRenderObservable","_updateToMesh","_onAfterStepObserver","onAfterStepObservable","computeWorldMatrix","detachFromMesh","remove","getWorldMatrix","SkeletonViewer","skeleton","autoUpdateBonesMatrices","options","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_debugLines","_localAxes","_isEnabled","_obs","_ready","pauseAnimations","returnToRest","displayMode","DISPLAY_LINES","displayOptions","midStep","midStepFactor","sphereBaseSize","sphereScaleUnit","sphereFactor","spurFollowsChild","showLocalAxes","localAxesSize","computeBonesUsingShaders","useAllBones","initialMeshBoneIndices","getVerticesData","initialMeshBoneWeights","_boneIndices","Set","DISPLAY_SPHERE_AND_SPURS","_bindObs","CreateBoneWeightShader","colorBase","colorZero","colorQuarter","colorHalf","colorFull","targetBoneIndex","shader","vertex","fragment","attributes","uniforms","setColor3","setFloat","transparencyMode","CreateSkeletonMapShader","colorMap","location","bufferWidth","bones","colorMapBuffer","_CreateBoneMapColorBuffer","vertexSource","fragmentSource","setFloats","tempGrad","width","ctx","getContext","grad","createLinearGradient","stop","addColorStop","toHexString","fillStyle","fillRect","buffer","data","getImageData","set","value","_debugMesh","_displayLinesUpdate","DISPLAY_SPHERES","_buildSpheresAndSpurs","_buildLocalAxes","isEnabled","_getBonePosition","meshMat","tmat","parentBone","getParent","getLocalMatrix","tmat2","setTranslationFromFloats","multiplyToRef","getAbsoluteTransform","_getLinesForBonesWithLength","meshPos","idx","_index","has","getIndex","subtractInPlace","_getLinesForBonesNoLength","boneNum","childBone","_revert","animationState","animationsEnabled","utilityLayer","_getAbsoluteBindPoseToRef","matrix","getBaseMatrix","spheresOnly","ready","spheres","spurs","computeAbsoluteTransforms","longestBoneLength_1","Number","NEGATIVE_INFINITY","displayOptions_1","_loop_1","this_1","boneAbsoluteBindPoseTransform","anchorPoint","decompose","children","bc","childAbsoluteBindPoseTransform","childPoint","distanceFromParent","dir","subtract","h","up","normalize","up0","spur","shape","path","scaleFunction","sideOrientation","numVertices","getTotalVertices","mwk","mik","i_1","setVerticesData","convertToFlatShadedMesh","sphere","segments","i_2","meshes","_stepsOut","pow","alwaysSelectAsActiveMesh","_getSharedGizmoLight","intensity","err","targetScene","lines","colors","red","green","blue","boneOrigin","boneAxisX","boneAxisY","boneAxisZ","linePoints","lineColors","apply","j","changeDisplayMode","mode","wasEnabled","changeDisplayOptions","option","DirectionalLightFrustumViewer","light","camera","_oldPosition","NaN","_oldDirection","_transparency","_showLines","_showPlanes","_light","_camera","_inverseViewMatrix","_lightHelperFrustumMeshes","_createGeometry","alpha","_visible","equals","_oldAutoCalc","autoCalcShadowZBounds","_oldMinZ","shadowMinZ","_oldMaxZ","shadowMaxZ","orthoLeft","orthoBottom","minZ","orthoRight","orthoTop","maxZ","invLightView","_getInvertViewMatrix","_nearLinesPoints","_farLinesPoints","_trLinesPoints","_brLinesPoints","_tlLinesPoints","_blLinesPoints","_nearPlaneVertices","geometry","updateVerticesDataDirectly","_farPlaneVertices","_rightPlaneVertices","_leftPlaneVertices","_topPlaneVertices","_bottomPlaneVertices","_rootNode","nearLines","farLines","trLines","brLines","tlLines","blLines","makePlane","positions","plane","mat","transparency","backFaceCulling","vertexData","indices","applyToMesh","invertToRef","DeviceType","PointerInput","NativePointerInput","DualShockInput","DualSenseInput","XboxInput","SwitchInput","DeviceSource","deviceInputSystem","deviceType","deviceSlot","onInputChangedObservable","_deviceInputSystem","getInput","inputIndex","pollInput","DeviceEventFactory","CreateDeviceEvent","currentState","elementToAttachTo","_CreateKeyboardEvent","_CreateWheelEvent","_CreatePointerEvent","evt","_CreateMouseEvent","pointerId","pointerType","button","deltaMode","deltaX","deltaY","deltaZ","_CreateEvent","pointerX","pointerY","movementX","movementY","offsetX","getBoundingClientRect","offsetY","_CheckNonCharacterKeys","clientX","clientY","key","String","fromCharCode","keyCode","isKeyboardActive","isDeviceAvailable","altKey","ctrlKey","metaKey","shiftKey","target","NativeDeviceInputSystem","onDeviceConnected","onDeviceDisconnected","onInputChanged","_nativeInput","_native","DeviceInputSystem","_createDummyNativeInput","MAX_POINTER_INPUTS","keys","WebDeviceInputSystem","engine","_inputs","_keyboardActive","_pointerActive","_usingSafari","_keyboardDownEvent","_keyboardUpEvent","_keyboardBlurEvent","_pointerMoveEvent","_pointerDownEvent","_pointerUpEvent","_pointerCancelEvent","_pointerWheelEvent","_pointerBlurEvent","_eventsAttached","_mouseId","_isUsingFirefox","navigator","userAgent","_maxTouchPoints","_pointerInputClearObserver","_gamepadConnectedEvent","_gamepadDisconnectedEvent","_eventPrefix","_engine","_onDeviceConnected","_onDeviceDisconnected","_onInputChanged","_enableEvents","_onEngineViewChanged","device","getGamepads","_updateDevice","currentValue","_elementToAttachTo","_disableEvents","inputElement","getInputElement","inputs","deviceSlotKey","tabIndex","canvasTabIndex","_handleKeyActions","_handlePointerActions","_handleGamepadActions","_checkForConnectedDevices","removeEventListener","_wheelEventName","window","onEndFrameObservable","gamepads_1","gamepad","_addGamePad","matchMedia","matches","_addPointerDevice","_getGamepadDeviceType","_gamepads","_registerDevice","buttons","axes","currentX","currentY","pointer","numberOfInputs","_unregisterDevice","kbKey","deviceEvent","addEventListener","maxTouchPoints","_activeTouchIds","_getPointerType","previousHorizontal","previousVertical","document","pointerLockElement","hasPointerCapture","setPointerCapture","e","releasePointerCapture","createElement","onmousewheel","passiveSupported","noop","passive","wheelDelta","gp","valueOf","deviceName","search","touches","InternalDeviceSourceManager","_registeredManagers","_refCount","registerManager","manager","_devices","_addDevice","unregisterManager","numberOfDeviceTypes","deviceSource","_removeDevice","eventData","DeviceSourceManager","_firstDevice","_deviceSourceManager","onDeviceConnectedObservable","devices","devices_1","notifyObserver","onDeviceDisconnectedObservable","_onDisposeObserver","getDeviceSource","getDeviceSources","source","_updateFirstDevices","r","g","b","a","_alphaState","setAlphaBlendConstants","noDepthWriteChange","_alphaMode","alphaBlend","setAlphaBlendFunctionParameters","_gl","ONE","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","ZERO","ONE_MINUS_SRC_COLOR","DST_COLOR","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","DST_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","depthCullingState","depthMask","equation","_alphaEquation","setAlphaEquationParameters","ComputeBindingType","baseName","Error","effect","context","bindings","bindingsMapping","pipelineContext","computeSourceCode","rawComputeSourceCode","defines","entryPoint","action","rtWrapper","internalTexture","isCube","webGLVersion","internalOptions","bilinearFiltering","comparisonFunction","generateStencil","gl","_bindTextureDirectly","TEXTURE_CUBE_MAP","_setupDepthStencilTexture","_depthStencilTexture","_depthStencilTextureWithStencil","face","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","DEPTH24_STENCIL8","DEPTH_STENCIL","UNSIGNED_INT_24_8","DEPTH_COMPONENT24","DEPTH_COMPONENT","UNSIGNED_INT","_internalTexturesCache","url","loadedFiles","onfinish","onErrorCallBack","_loadFile","_internalCount","request","exception","status","statusText","files","onError","_partialLoadFile","texture","mimeType","loadedImages","_partialLoadImg","tokenPendingData","img","_removePendingData","message","offlineProvider","_addPendingData","loadMipmap","maxLevel","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","LINEAR_MIPMAP_LINEAR","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","samplingMode","getCaps","textureMaxLevel","TEXTURE_MAX_LEVEL","_maxLodLevel","rootUrl","noMipmap","onLoad","format","forcedExtension","createPolynomials","lodScale","lodOffset","fallback","beforeLoadCubeDataCallback","imageHandler","useSRGBBuffer","generateMipMaps","_lodGenerationScale","_lodGenerationOffset","_useSRGBBuffer","_caps","supportSRGBBuffers","isWebGPU","_doNotHandleContextLost","_extension","_files","originalRootUrl","_transformTextureUrl","lastDot","lastIndexOf","extension","substring","toLowerCase","loader","availableLoader","canLoad","onloaddata_1","loadCubeData","supportCascades","_cascadeLoadFiles","images","map","image","Uint8Array","createCubeTextureBase","_cascadeLoadImgs","imgs","loaderOptions","needPOTTextures","maxCubemapTextureSize","faces","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Z","_unpackFlipY","internalFormat","_getInternalFormat","SRGB8_ALPHA8","RGBA","texelFormat","_prepareWorkingCanvas","_workingCanvas","_workingContext","drawImage","UNSIGNED_BYTE","generateMipmap","_setCubeMapTextureParams","isReady","onLoadedObservable","indexBuffer","offset","view","_currentBoundBuffer","ELEMENT_ARRAY_BUFFER","bindIndexBuffer","is32Bits","Uint32Array","Uint16Array","bufferData","DYNAMIC_DRAW","_resetIndexBufferBinding","vertexBuffer","byteOffset","byteLength","bindArrayBuffer","dataLength","bufferSubData","ARRAY_BUFFER","Float32Array","subarray","ArrayBuffer","_resetVertexBufferBinding","baseWidth","baseHeight","maxTextureSize","updateTextureSamplingMode","invertY","premulAlpha","forceBindTexture","allowGPUOptimization","TEXTURE_2D","wasPreviouslyBound","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","textureType","_getWebGLTextureType","glformat","_getRGBABufferInternalSizedFormat","bindAttachments","BACK","COLOR_ATTACHMENT0","textureStatus","result","NONE","attachments","drawBuffers","disableGenerateMipMaps","onBeforeUnbind","_currentRenderTarget","_attachments","_MSAAFramebuffer","bindFramebuffer","READ_FRAMEBUFFER","DRAW_FRAMEBUFFER","_framebuffer","textures","readBuffer","blitFramebuffer","COLOR_BUFFER_BIT","NEAREST","_bindUnboundFramebuffer","initializeBuffers","generateDepthBuffer","generateStencilBuffer","generateDepthTexture","depthTextureFormat","textureCount","types","samplingModes","useSRGBBuffers","_createHardwareRenderTargetWrapper","framebuffer","createFramebuffer","useStencilTexture","depthStencilBuffer","_setupFramebufferDepthAttachments","_depthStencilBuffer","_generateDepthBuffer","_generateStencilBuffer","textureFloatLinearFiltering","textureHalfFloatLinearFiltering","filters","_getSamplingParameters","textureFloat","attachment","activeTexture","bindTexture","_hardwareTexture","underlyingResource","mag","internalSizedFormat","framebufferTexture2D","samples","depthTextureExtension","depthTexture","depthTextureType","glDepthTextureInternalFormat","DEPTH_COMPONENT16","glDepthTextureFormat","glDepthTextureType","UNSIGNED_SHORT","glDepthTextureAttachment","DEPTH_ATTACHMENT","FLOAT","DEPTH_COMPONENT32F","DEPTH_STENCIL_ATTACHMENT","TEXTURE0","FRAMEBUFFER","setTextures","resetTextureCache","maxMSAASamples","deleteRenderbuffer","deleteFramebuffer","hardwareTexture","_MSAARenderBuffer","renderbufferStorageMultisample","colorRenderbuffer","_createRenderBuffer","_getRGBAMultiSampleBufferFormat","createMultiviewUbo","ubo","addUniform","multiview","isMultiview","_colorTextureArray","createTexture","TEXTURE_2D_ARRAY","texStorage3D","RGBA8","_depthStencilTextureArray","_multiviewTexture","multiviewTexture","ext","oculusMultiview","framebufferTextureMultisampleMultiviewOVR","framebufferTextureMultiviewOVR","getRenderWidth","getRenderHeight","currentCreateSceneUniformBuffer","_multiviewSceneUbo","getEngine","viewR","projectionR","_transformMatrixR","_frustumPlanes","updateMatrix","getTransformMatrix","_viewMatrix","_projectionMatrix","_resizeOrCreateMultiviewTexture","_rigPostProcess","_createMultiviewUbo","outputRenderTarget","_renderForCamera","_rigCameras","_activeCamera","setViewport","viewport","postProcessManager","_prepareFrame","_finalizeFrame","isIntermediate","_convertRGBtoRGBATextureData","rgbData","rgbaData","val1","newIndex","_makeCreateRawTextureFunction","is3D","depth","compression","TEXTURE_3D","baseDepth","is2DArray","_bufferView","updateRawTexture3D","updateRawTexture2DArray","_makeUpdateRawTextureFunction","internalType","internalSizedFomat","_compression","UNPACK_ALIGNMENT","compressedTexImage3D","s3tc","texImage3D","compressedTexImage2D","creationFlags","_getUseSRGBBuffer","updateRawTexture","_bufferViewArray","RGB","HALF_FLOAT_OES","textureFloatRender","HALF_FLOAT","colorBufferFloat","updateRawCubeTexture","level","needConversion","faceIndex","faceData","callback","mipmapGenerator","createRawCubeTexture","faceDataArrays","mipData","mipSize","mipFaceData","internalCallback","allocateAndCopyTypedBuffer","sizeOrDstBuffer","sizeInBytes","copyBuffer","buffer_1","Int8Array","buffer_2","buffer_3","Int16Array","buffer_4","buffer_5","Int32Array","buffer_6","buffer_7","flushRenderer","noDataConversion","_dummyFramebuffer","dummy","readType","flushFramebuffer","readPixels","_currentFramebuffer","_readTexturePixelsSync","WebGLRenderTargetWrapper","isMulti","_context","_cloneRenderTargetWrapper","rtw","createMultiviewRenderTargetTexture","_swapRenderTargetWrapper","_shareDepth","renderTarget","depthbuffer","framebufferRenderbuffer","RENDERBUFFER","_bindTextureRenderTarget","attachmentIndex","lodLevel","currentFB","setTexture","disposePrevious","disposeOnlyFramebuffers","deleteTexture","_renderTargetWrapperCache","fullOptions","noColorTarget","_createInternalTexture","currentFrameBuffer","_createDepthStencilCubeTexture","_createDepthStencilTexture","layers","sizedFormat","elements","createBuffer","bindUniformBuffer","UNIFORM_BUFFER","STATIC_DRAW","references","uniformBuffer","bindBuffer","bindBufferBase","blockName","program","uniformLocation","getUniformBlockIndex","uniformBlockBinding","video","_isDisabled","_videoTextureSupported","getError","createCanvas","context_1","clearRect","videoWidth","videoHeight","ex","_vrExclusivePointerMode","_vrSupported","onVRDisplayChangedObservable","onVRRequestPresentComplete","onVRRequestPresentStart","_vrDisplay","initWebVRAsync","eventArgs","vrDisplay","vrSupported","_webVRInitPromise","res","_onVrDisplayConnect","event","display","_onVrDisplayDisconnect","cancelAnimationFrame","_frameHandler","_boundRenderFunction","_onVrDisplayPresentChange","isPresenting","hostWindow","getHostWindow","_getVRDisplaysAsync","then","getVRDisplays","presentationAttributes","highRefreshRate","vrPresentationAttributes","foveationLevel","useMultiview","requestPresent","getRenderingCanvas","_onVRFullScreenTriggered","catch","_oldSize","_oldHardwareScaleFactor","getHardwareScalingLevel","leftEye","getEyeParameters","setHardwareScalingLevel","setSize","renderWidth","renderHeight","exitPresent","_onVRDisplayPointerRestricted","_onVRDisplayPointerUnrestricted","canvas","requestPointerLock","exitPointerLock","submitFrame","NativeDataStream","DEFAULT_BUFFER_SIZE","_uint32s","_int32s","_float32s","_length","_position","_nativeDataStream","_flush","writeUint32","_flushIfNecessary","writeInt32","writeFloat32","writeUint32Array","values","writeInt32Array","writeFloat32Array","writeNativeData","handle","writeBoolean","required","writeBuffer","ShaderCodeInliner","sourceCode","numMaxIterations","debug","_sourceCode","_numMaxIterations","_functionDescr","inlineToken","processCode","_collectFunctions","_processInlining","startIndex","inlineTokenIndex","funcParamsStartIndex","funcNameMatch","_RegexpFindFunctionNameAndType","exec","funcType","funcName","funcParamsEndIndex","funcParams","funcBodyStartIndex","funcBodyEndIndex","funcBody","params","split","paramNames","p","param","trim","parameters","body","callIndex","partBefore","partAfter","_replaceFunctionCallsByCode","doAgain","func","name_1","functionCallIndex","charAt","callParamsStartIndex","callParamsEndIndex","callParams","s","curIdx","startParamIdx","idx2","splitParameterCall","retParamName","_replaceNames","injectDeclarationIndex","partBetween","code","sources","destinations","RegExp","sourceLen","destination","replace","match","args","arguments","ShaderCodeNode","isValid","preprocessors","process","line","processor","lineProcessor","isFragment","processingContext","attributeProcessor","startsWith","varyingProcessor","uniformProcessor","uniformRegexp","test","lookForClosingBracketForUniformBuffer","uniformBufferProcessor","uniformBufferRegexp","textureProcessor","textureRegexp","endOfUniformBufferProcessor","child","additionalDefineKey","additionalDefineValue","ShaderCodeCursor","_lines","lineIndex","value_1","subLine","ShaderCodeConditionNode","ShaderCodeTestNode","testExpression","isTrue","ShaderDefineExpression","postfixToInfix","postfix","stack","postfix_1","_OperatorPriority","v1","v2","infixToPostfix","infix","stackIdx","pushOperand","operand","_Stack","peek","pop","token","substr","ShaderDefineIsDefinedOperator","define","not","condition","ShaderDefineOrOperator","leftOperand","rightOperand","ShaderDefineAndOperator","ShaderDefineArithmeticOperator","testValue","left","parseInt","right","regexSE","regexSERevert","regexShaderInclude","ShaderProcessor","Initialize","initializeShaders","Process","preProcessShaderCode","_ProcessIncludes","codeWithIncludes","processCodeAfterIncludes","migratedCode","_ProcessShaderConversion","PreProcess","_ApplyPreProcessing","Finalize","vertexCode","fragmentCode","finalizeShaders","_ProcessPrecision","noPrecision","shouldUseHighPrecisionShader","_ExtractOperation","expression","operator","indexOperator","operators_1","_BuildSubExpression","_BuildExpression","start","command","_MoveCursorWithinIf","cursor","rootNode","ifNode","currentLine","_MoveCursor","first5","elseNode","elifNode","canRead","newRootNode","newNode","_EvaluatePreProcessors","_PreparePreProcessors","defines_1","shaderLanguage","version","platformName","_getGlobalDefines","preparedSourceCode","preProcessor","postProcessor","_features","needShaderCodeInlining","inlineShaderCode","returnValue","keepProcessing","includeFile","supportsUniformBuffers","includesShadersStore","includeShaderUrl","shadersRepository","_FileToolsLoadFile","fileContent","includeContent","splits","dest","indexString","indexSplits","minIndex","maxIndex","sourceIncludeContent","slice","isNaN","indexParameters","str","p1","state_1","onSuccess","onProgress","useArrayBuffer","WebGL2ShaderProcessor","attribute","varying","hasDrawBuffersExtension","WebGLHardwareTexture","existingTexture","_webGLTexture","setUsage","reset","release","WebGLPipelineContext","_valueCache","vertexCompilationError","fragmentCompilationError","programLinkError","programValidationError","isParallelCompiled","_isRenderingStateCompiled","_handlesSpectorRebuildCallback","onCompiled","_fillEffectInformation","uniformBuffersNames","uniformsNames","samplerList","samplers","attributesNames","bindUniformBlock","getUniforms","uniform","_uniforms","getUniform","getAttributes","attr","_cacheMatrix","uniformName","cache","flag","updateFlag","_cacheFloat2","changed","_cacheFloat3","_cacheFloat4","w","setInt","setInt2","setInt3","setInt4","setIntArray","array","setIntArray2","setIntArray3","setIntArray4","setArray","setArray2","setArray3","setArray4","setMatrices","matrices","setMatrix","toArray","setMatrix3x3","setMatrix2x2","setVector2","vector2","setFloat2","setVector3","vector3","setFloat3","setVector4","vector4","setFloat4","setQuaternion","quaternion","color3","setColor4","setDirectColor4","color4","_getVertexShaderCode","vertexShader","_getShaderSource","_getFragmentShaderCode","fragmentShader","WebGLShaderProcessor","drawBuffersExtension","WebGPUBufferManager","_deferredReleaseBuffers","_device","_IsGPUBuffer","createRawBuffer","viewOrSize","flags","mappedAtCreation","verticesBufferDescriptor","usage","isView","dataBuffer","capacity","setSubData","setRawData","dstByteOffset","src","srcByteOffset","queue","chunkStart","chunkEnd","alignedLength","tempView","maxChunk","_getHalfFloatAsFloatRGBAArrayBuffer","arrayBuffer","destArray","srcData","readDataFromBuffer","gpuBuffer","bytesPerRow","bytesPerRowAligned","destroyBuffer","floatFormat","reject","mapAsync","copyArrayBuffer","getMappedRange","data2","offset_1","offset2","unmap","releaseBuffer","reason","destroyDeferredBuffers","destroy","WebGPURenderItemViewport","floor","run","renderPass","WebGPURenderItemScissor","setScissorRect","WebGPURenderItemStencilRef","ref","setStencilReference","WebGPURenderItemBlendColor","setBlendConstant","WebGPURenderItemBeginOcclusionQuery","query","beginOcclusionQuery","WebGPURenderItemEndOcclusionQuery","endOcclusionQuery","WebGPURenderItemBundles","bundles","executeBundles","cloned","WebGPUBundleList","numDrawCalls","_list","_listLength","addBundle","bundle","_currentItemIsBundle","item","_currentBundleList","_finishBundle","_bundleEncoder","finish","addItem","getBundleEncoder","colorFormats","depthStencilFormat","sampleCount","createRenderBundleEncoder","close","WebGPUBindGroupCacheNode","WebGPUCacheBindGroups","cacheSampler","disabled","_cacheSampler","totalCreated","NumBindGroupsCreatedTotal","lastFrameCreated","NumBindGroupsCreatedLastFrame","lookupLastFrame","NumBindGroupsLookupLastFrame","noLookupLastFrame","NumBindGroupsNoLookupLastFrame","endFrame","_NumBindGroupsCreatedCurrentFrame","_NumBindGroupsLookupCurrentFrame","_NumBindGroupsNoLookupCurrentFrame","getBindGroups","webgpuPipelineContext","drawContext","materialContext","bindGroups","_Cache","cacheIsDisabled","forceBindGroupCreation","isDirty","updateId","shaderProcessingContext","bufferNames","bufferName","uboId","buffers","uniqueId","nextNode","samplerNames","samplerName","samplerHashCode","hashCode","textureNames","textureName","textureId","resetIsDirty","bindGroupLayouts","bindGroupLayoutEntries","setDefinition","entries","bindGroupEntries","entry","entryInfo","bindGroupLayoutEntryInfo","binding","nameInArrayOfTexture","sampler","bindingInfo","dbgSanityChecks","JSON","stringify","resource","getSampler","storageTexture","viewForWriting","externalTexture","importExternalTexture","webgpuBuffer","groupLayout","createBindGroup","layout","StatePosition","alphaBlendFactorToIndex","stencilOpToIndex","WebGPUCacheRenderPipeline","emptyVertexBuffer","useTextureStage","mrtTextureCount","_useTextureStage","_states","_statesLength","_stateDirtyLowestIndex","_emptyVertexBuffer","_mrtFormats","_parameter","pipeline","vertexBuffers","_kMaxVertexBufferStride","limits","maxVertexBufferArrayStride","_isDirty","setAlphaToCoverage","resetDepthCullingState","setClampDepth","setDepthBias","_webgpuColorFormat","setColorFormat","setMRT","setAlphaBlendEnabled","setAlphaBlendFactors","setWriteMask","setDepthStencilFormat","setStencilEnabled","resetStencilState","setBuffers","_setTextureState","_mrtAttachments1","getRenderPipeline","fillMode","textureState","topology_1","_GetTopology","_setVertexState","_createRenderPipeline","NumCacheMiss","_NumPipelineCreationCurrentFrame","_setShaderStage","_setRasterizationState","_setColorStates","_setDepthStencilState","lastStateDirtyLowestIndex","NumCacheHitWithoutHash","_getRenderPipeline","NumCacheHitWithHash","topology","_setRenderPipeline","NumPipelineCreationLastFrame","enabled","_alphaToCoverageEnabled","setFrontFace","frontFace","_frontFace","setCullEnabled","_cullEnabled","setCullFace","cullFace","_cullFace","clampDepth","_clampDepth","setDepthCullingState","cullEnabled","zOffset","zOffsetUnits","depthTestEnabled","depthWriteEnabled","depthCompare","_depthWriteEnabled","_depthTestEnabled","_depthCompare","setDepthBiasSlopeScale","depthBias","_depthBias","DepthBias","depthBiasSlopeScale","_depthBiasSlopeScale","DepthBiasSlopeScale","_colorFormat","setMRTAttachments","mrtAttachments","mask","_mrtEnabledMask","MRTAttachments1","textureArray","mrtTextureArray","bits","indexBits","numRT","gpuWrapper","_mrtAttachments2","MRTAttachments2","_alphaBlendEnabled","factors","operations","_alphaBlendFuncParams","_alphaBlendEqParams","_writeMask","_webgpuDepthStencilFormat","_depthStencilFormat","setDepthTestEnabled","setDepthWriteEnabled","setDepthCompare","_stencilEnabled","setStencilCompare","_stencilFrontCompare","setStencilDepthFailOp","op","_stencilFrontDepthFailOp","setStencilPassOp","_stencilFrontPassOp","setStencilFailOp","_stencilFrontFailOp","setStencilReadMask","_stencilReadMask","StencilReadMask","setStencilWriteMask","_stencilWriteMask","StencilWriteMask","setStencilState","stencilEnabled","compare","depthFailOp","passOp","failOp","readMask","writeMask","overrideVertexBuffers","_vertexBuffers","_overrideVertexBuffers","_indexBuffer","_GetAphaBlendOperation","operation","_GetAphaBlendFactor","factor","_GetCompareFunction","compareFunction","_GetStencilOpFunction","_GetVertexInputDescriptorFormat","normalized","getSize","getKind","_getAphaBlendState","srcFactor","dstFactor","_getColorBlendState","_shaderId","ShaderStage","rasterizationState","_rasterizationState","RasterizationState","colorStates","_colorStates","ColorStates","stencilState","depthStencilState","_depthStencilState","DepthStencilState","currentGPUBuffer","currStateLen","newNumStates","VertexState","_pipelineContext","attributeNamesFromEffect","locations","attributeLocationsFromEffect","numVertexBuffers","location_1","getBuffer","_validOffsetRange","formatSize","byteStride","vid","_textureState","TextureStage","_createPipelineLayout","_createPipelineLayoutWithTextureStage","createBindGroupLayout","createPipelineLayout","bitVal","textureInfo","availableTextures","samplerInfo","autoBindSampler","availableSamplers","sampleType","samplerType","groupIndex","bindingIndex","_getVertexInputDescriptor","currentGPUAttributes","descriptors","location_2","invalidOffsetRange","vertexBufferDescriptor","arrayStride","stepMode","getIsInstanced","shaderLocation","inputStateDescriptor","pipelineLayout","colorBlend","descr","blend","stencilFrontBack","stripIndexFormat","depthStencilFormatHasStencil","createRenderPipeline","module","stages","vertexStage","primitive","cullMode","fragmentStage","targets","multisample","depthStencil","stencilFront","stencilBack","stencilReadMask","stencilWriteMask","depthBiasClamp","_depthBiasClamp","NodeState","countNode","countPipeline","WebGPUCacheRenderPipelineTree","_nodeStack","GetNodeCounts","counts","nodeCount","pipelineCount","_GetPipelines","pipelines","curPath","curPathLen","nnode","GetPipelines","nn","filterToBits","comparisonFunctionToBits","filterNoMipToBits","WebGPUCacheSampler","_samplers","GetSamplerHashCode","anisotropy","_cachedAnisotropicFilteringLevel","_comparisonFunction","_cachedWrapU","_cachedWrapV","_cachedWrapR","useMipMaps","_GetSamplerFilterDescriptor","magFilter","minFilter","mipmapFilter","lodMinClamp","lodMaxClamp","anisotropyEnabled","_GetWrappingMode","_GetSamplerWrappingDescriptor","addressModeU","addressModeV","addressModeW","_GetSamplerDescriptor","filterDescriptor","GetCompareFunction","maxAnisotropy","bypassCache","hash","createSampler","gpuSampler","WebGPUClearQuad","_bindGroups","_bundleCache","_keyTemp","_cacheRenderPipeline","_effect","createEffect","_depthTextureFormat","clearColor","clearDepth","clearStencil","renderPass2","bundleKey","isRTTPass","depthStencilFormatIndex","useReverseDepthBuffer","join","_clearReverseDepthValue","_clearDepthValue","bufferInternals","_ubInvertY","_ubDontInvertY","bufferLeftOver","setPipeline","setBindGroup","draw","PredefinedColorSpace","PowerPreference","FeatureName","BufferUsage","MapMode","TextureDimension","TextureUsage","TextureViewDimension","TextureAspect","TextureFormat","AddressMode","FilterMode","CompareFunction","BufferBindingType","SamplerBindingType","TextureSampleType","StorageTextureAccess","CompilationMessageType","AutoLayoutMode","PrimitiveTopology","FrontFace","CullMode","ColorWriteFlags","BlendFactor","BlendOperation","StencilOperation","IndexFormat","VertexFormat","InputStepMode","ComputePassTimestampLocation","RenderPassTimestampLocation","LoadOp","StoreOp","QueryType","CanvasCompositingAlphaMode","DeviceLostReason","ErrorFilter","WebGPUDepthCullingState","_cache","_zOffset","_isZOffsetDirty","_zOffsetUnits","_isCullFaceDirty","_cull","_isCullDirty","_depthFunc","_isDepthFuncDirty","_depthMask","_isDepthMaskDirty","_depthTest","_isDepthTestDirty","_isFrontFaceDirty","WebGPUDrawContext","bufferManager","_bufferManager","_Counter","_useInstancing","_currentInstanceCount","materialContextUpdateId","_materialContextUpdateId","use","indirectDrawBuffer","_indirectDrawData","fastBundle","setBuffer","setIndirectData","indexOrVertexCount","instanceCount","firstIndexOrVertex","WebGPUHardwareTexture","textureUsages","textureAdditionalUsages","_webgpuTexture","_webgpuMSAATexture","textureSource","createView","dimension","mipLevelCount","baseArrayLayer","baseMipLevel","arrayLayerCount","aspect","descriptor","createViewForWriting","saveNumMipMaps","_copyInvertYTempTexture","WebGPUMaterialContext","_numExternalTextures","_numFloatTextures","setSampler","samplerCache","currentHashCode","W","textureCache","currentTextureId","isFloatTexture","isExternalTexture","WebGPUOcclusionQuery","startCount","incrementCount","_availableIndices","_frameLastBuffer","_currentTotalIndices","_countIncrement","_allocateNewIndices","_querySet","querySet","_getCurrentRenderPassIndex","_mainRenderPassWrapper","renderPassDescriptor","occlusionQuerySet","_rttRenderPassWrapper","createQuery","deleteQuery","isQueryResultAvailable","_retrieveQueryBuffer","_lastBuffer","getQueryResult","frameId","readValues","numIndices","_delayQuerySetDispose","setTimeout","WebGPUPipelineContext","_name","_leftOverUniformsByName","_fragmentSourceCode","_vertexSourceCode","foundSamplers","buildUniformLayout","leftOverUniforms","leftOverUniform","create","updateInt","updateInt2","updateInt3","updateInt4","updateIntArray","updateArray","updateMatrices","updateMatrix3x3","updateMatrix2x2","updateFloat","updateFloat2","updateFloat3","updateFloat4","WebGPUQuerySet","canUseMultipleBuffers","_dstBuffers","_count","_canUseMultipleBuffers","createQuerySet","_queryBuffer","_getBuffer","firstQuery","queryCount","encoderResult","createCommandEncoder","resolveQuerySet","copyBufferToBuffer","submit","arrayBuf","label","sent","BigUint64Array","readValue","readTwoValuesAndSubtract","WebGPURenderPassWrapper","colorAttachmentGPUTextures","fullReset","colorAttachmentViewDescriptor","depthAttachmentViewDescriptor","_typeToLocationSize","mat2","mat3","mat4","mat2x2","mat3x3","mat4x4","WebGPUShaderProcessingContext","_attributeNextLocation","_varyingNextLocation","freeGroupIndex","freeBindingIndex","availableVaryings","availableAttributes","availableBuffers","orderedAttributes","_findStartingGroupBinding","_SimplifiedKnownBindings","_SimplifiedKnownUBOs","_KnownUBOs","knownUBOs","KnownUBOs","groups","getAttributeNextLocation","dataType","arrayLength","getVaryingNextLocation","getNextFreeUBOBinding","_getNextFreeBinding","bindingCount","Scene","Light0","Light1","Light2","Light3","Light4","Light5","Light6","Light7","Light8","Light9","Light10","Light11","Light12","Light13","Light14","Light15","Light16","Light17","Light18","Light19","Light20","Light21","Light22","Light23","Light24","Light25","Light26","Light27","Light28","Light29","Light30","Light31","Material","Mesh","Internals","WebGPUShaderProcessor","_addUniformToLeftOverUBO","uniformType","preProcessors","_getArraySize","_webgpuProcessingContext","_buildLeftOverUBO","LeftOvertUBOName","availableUBO","_addBufferBindingDescription","_generateLeftOverUBOCode","_collectBindingNames","_preCreateBindGroupEntries","_addTextureBindingDescription","textureIndex","isVertex","visibility","access","viewDimension","multisampled","isTextureArray","_addSamplerBindingDescription","uniformBufferInfo","bufferType","_injectStartingAndEndingCode","mainFuncDecl","startingCode","endingCode","part1","part2","lastClosingCurly","AutoSamplerSuffix","InternalsUBOName","UniformSizes","bool","int","float","vec2","ivec2","vec3","ivec3","vec4","ivec4","i32","u32","f32","_SamplerFunctionByWebGLSamplerType","sampler2D","sampler2DArray","sampler2DShadow","sampler2DArrayShadow","samplerCube","sampler3D","_TextureTypeByWebGLSamplerType","samplerCubeArray","_GpuTextureViewDimensionByWebGPUTextureType","textureCube","textureCubeArray","texture2D","texture2DArray","texture3D","_SamplerTypeByWebGLSamplerType","_IsComparisonSamplerByWebGPUSamplerType","samplerShadow","samplerArrayShadow","WebGPUShaderProcessorGLSL","_missingVaryings","_textureArrayProcessing","startArray","endArray","lengthInString","ubDeclaration","_preProcessors","varyingType","attributeType","name_2","name_3","arraySize","isStorageTexture","isComparisonSampler","samplerBindingType","componentType","samplerGroupIndex","samplerBindingIndex","samplerFunction","textureDimension","layouts","textureSetIndex","textureBindingIndex","name_4","knownUBO","hasFragCoord","injectCode","isNDCHalfZRange","_applyTextureArrayProcessing","regex","iindex","uniformBufferDescription","name_5","decl","leftOverUBO","builtInName_vertex_index","builtInName_instance_index","builtInName_position","builtInName_position_frag","builtInName_front_facing","builtInName_frag_depth","builtInName_FragColor","gpuTextureViewDimensionByWebGPUTextureFunction","texture_1d","texture_2d","texture_2d_array","texture_3d","texture_cube","texture_cube_array","texture_multisampled_2d","texture_depth_2d","texture_depth_2d_array","texture_depth_cube","texture_depth_cube_array","texture_depth_multisampled_2d","texture_storage_1d","texture_storage_2d","texture_storage_2d_array","texture_storage_3d","texture_external","WebGPUShaderProcessorWGSL","_attributesWGSL","_attributesDeclWGSL","_attributeNamesWGSL","_varyingsWGSL","_varyingsDeclWGSL","_varyingNamesWGSL","_stridedUniformArrays","isArrayOfTexture","textureFunc","storageTextureFormat","isDepthTexture","fragCoordCode","_processSamplers","_processCustomBuffers","_processStridedUniformArrays","varyingsDecl","vertexBuiltinDecl","vertexAttributesDecl","vertexInputs","vertexFragmentInputs","vertexStartingCode","vertexEndingCode","name_6","fragmentBuiltinDecl","fragmentFragmentInputs","fragmentOutputs","hasFragDepth","saveIndex","fragmentStartingCode","name_7","fragmentEndingCode","stridedArrays","stridedArrayType","samplerRegexp","name_8","insertPart","lastIndex","instantiateBufferRegexp","decoration","name_9","structName","bufferInfo","uniformArrayName","WebGPUSnapshotRendering","renderingMode","bundleList","bundleListRenderTarget","_record","_play","_mainPassBundleList","_enabled","_mode","_bundleList","_bundleListRenderTarget","activate","_modeSaved","endMainRenderPass","endRenderTargetPass","currentRenderPass","_bundleLists","_currentLayer","_reportDrawCall","mainRenderPass","WebGPUStencilStateComposer","_func","_funcMask","_opStencilFail","_opDepthFail","_opStencilDepthPass","_mask","stencilMaterialEnabled","stencilMaterial","stencilGlobal","funcRef","funcMask","opStencilFail","opDepthFail","opStencilDepthPass","PipelineType","invertYPreMultiplyAlphaVertexSource","shadersForPipelineType","renderableTextureFormatToIndex","r8unorm","r8uint","r8sint","r16uint","r16sint","r16float","rg8unorm","rg8uint","rg8sint","r32uint","r32sint","r32float","rg16uint","rg16sint","rg16float","rgba8unorm","rgba8uint","rgba8sint","bgra8unorm","rgb10a2unorm","rg32uint","rg32sint","rg32float","rgba16uint","rgba16sint","rgba16float","rgba32uint","rgba32sint","rgba32float","stencil8","depth16unorm","depth24plus","depth32float","WebGPUTextureHelper","glslang","tintWASM","_pipelines","_compiledShaders","_deferredReleaseTextures","_glslang","_tintWASM","_mipmapSampler","_ubCopyWithOfst","_getPipeline","ComputeNumMipmapLevels","MipMap","InvertYPremultiplyAlpha","premultiplyAlpha","Clear","InvertYPremultiplyAlphaWithOfst","pipelineAndBGL","modules","compileGLSL","convertSpirV2WGSL","vertexModule","createShaderModule","fragmentModule","getBindGroupLayout","_GetTextureTypeFromFormat","_GetBlockInformationFromFormat","_IsHardwareTexture","_IsInternalTexture","IsImageBitmap","imageBitmap","IsImageBitmapArray","isArray","setCommandEncoder","encoder","_commandEncoderForCreation","IsCompressedFormat","GetWebGPUTextureFormat","GetNumChannelsFromWebGPUTextureFormat","HasStencilAspect","HasDepthAndStencilAspects","invertYPreMultiplyAlpha","gpuOrHdwTexture","mipLevel","ofstX","ofstY","rectWidth","rectHeight","commandEncoder","gpuTexture","useRect","useOwnCommandEncoder","bindGroupLayout","pushDebugGroup","webgpuHardwareTexture","outputTexture","_copyInvertYRenderPassDescr","colorAttachments","loadOp","storeOp","passEncoder","beginRenderPass","bindGroup","_copyInvertYBindGroupWithOfst","_copyInvertYBindGroup","end","copyTextureToTexture","depthOrArrayLayers","popDebugGroup","copyWithInvertY","srcTextureView","hasMipmaps","generateMipmaps","additionalUsages","layerCount","textureSize","isCompressedFormat","usages","updateTexture","createCubeTexture","imageBitmaps","updateCubeTextures","generateCubeMipmaps","f","_mipmapGenRenderPassDescr","_mipmapGenBindGroup","createGPUTextureForInternalTexture","gpuTextureWrapper","_source","mipmapCount","hasMipMaps","createMSAATexture","msaaTexture","releaseTexture","gpuMSAATexture","blockInformation","textureCopyView","premultipliedAlpha","textureExtent","ceil","copyBufferToTexture","rowsPerImage","writeTexture","dontUseRect","copyExternalImageToTexture","srcTexture","copyTextureToBuffer","irradianceTexture","_irradianceTexture","destroyDeferredTextures","WebGPUTimestampQuery","_gpuFrameTimeCounter","_measureDurationState","_measureDuration","WebGPUDurationMeasure","startFrame","duration","fetchNewFrame","addCount","writeTimestamp","WebGPUTintWASM","_twgsl","initTwgsl","twgslOptions","_TWgslDefaultOptions","twgsl","jsPath","wasmPath","importScripts","self","Constants","ALPHA_DISABLE","ALPHA_ADD","ALPHA_COMBINE","ALPHA_SUBTRACT","ALPHA_MULTIPLY","ALPHA_MAXIMIZED","ALPHA_ONEONE","ALPHA_PREMULTIPLIED","ALPHA_PREMULTIPLIED_PORTERDUFF","ALPHA_INTERPOLATE","ALPHA_SCREENMODE","ALPHA_ONEONE_ONEONE","ALPHA_ALPHATOCOLOR","ALPHA_REVERSEONEMINUS","ALPHA_SRC_DSTONEMINUSSRCALPHA","ALPHA_ONEONE_ONEZERO","ALPHA_EXCLUSION","ALPHA_LAYER_ACCUMULATE","ALPHA_EQUATION_ADD","ALPHA_EQUATION_SUBSTRACT","ALPHA_EQUATION_REVERSE_SUBTRACT","ALPHA_EQUATION_MAX","ALPHA_EQUATION_MIN","ALPHA_EQUATION_DARKEN","DELAYLOADSTATE_NONE","DELAYLOADSTATE_LOADED","DELAYLOADSTATE_LOADING","DELAYLOADSTATE_NOTLOADED","NEVER","ALWAYS","LESS","EQUAL","LEQUAL","GREATER","GEQUAL","NOTEQUAL","KEEP","REPLACE","INCR","DECR","INVERT","INCR_WRAP","DECR_WRAP","TEXTURE_CLAMP_ADDRESSMODE","TEXTURE_WRAP_ADDRESSMODE","TEXTURE_MIRROR_ADDRESSMODE","TEXTURE_CREATIONFLAG_STORAGE","TEXTUREFORMAT_ALPHA","TEXTUREFORMAT_LUMINANCE","TEXTUREFORMAT_LUMINANCE_ALPHA","TEXTUREFORMAT_RGB","TEXTUREFORMAT_RGBA","TEXTUREFORMAT_RED","TEXTUREFORMAT_R","TEXTUREFORMAT_RG","TEXTUREFORMAT_RED_INTEGER","TEXTUREFORMAT_R_INTEGER","TEXTUREFORMAT_RG_INTEGER","TEXTUREFORMAT_RGB_INTEGER","TEXTUREFORMAT_RGBA_INTEGER","TEXTUREFORMAT_BGRA","TEXTUREFORMAT_DEPTH24_STENCIL8","TEXTUREFORMAT_DEPTH32_FLOAT","TEXTUREFORMAT_DEPTH16","TEXTUREFORMAT_DEPTH24","TEXTUREFORMAT_DEPTH24UNORM_STENCIL8","TEXTUREFORMAT_DEPTH32FLOAT_STENCIL8","TEXTUREFORMAT_COMPRESSED_RGBA_BPTC_UNORM","TEXTUREFORMAT_COMPRESSED_SRGB_ALPHA_BPTC_UNORM","TEXTUREFORMAT_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT","TEXTUREFORMAT_COMPRESSED_RGB_BPTC_SIGNED_FLOAT","TEXTUREFORMAT_COMPRESSED_RGBA_S3TC_DXT5","TEXTUREFORMAT_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","TEXTUREFORMAT_COMPRESSED_RGBA_S3TC_DXT3","TEXTUREFORMAT_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","TEXTUREFORMAT_COMPRESSED_RGBA_S3TC_DXT1","TEXTUREFORMAT_COMPRESSED_RGB_S3TC_DXT1","TEXTUREFORMAT_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","TEXTUREFORMAT_COMPRESSED_SRGB_S3TC_DXT1_EXT","TEXTUREFORMAT_COMPRESSED_RGBA_ASTC_4x4","TEXTUREFORMAT_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","TEXTUREFORMAT_COMPRESSED_RGB_ETC1_WEBGL","TEXTUREFORMAT_COMPRESSED_RGB8_ETC2","TEXTUREFORMAT_COMPRESSED_SRGB8_ETC2","TEXTUREFORMAT_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2","TEXTUREFORMAT_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2","TEXTUREFORMAT_COMPRESSED_RGBA8_ETC2_EAC","TEXTUREFORMAT_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","TEXTURETYPE_UNSIGNED_BYTE","TEXTURETYPE_UNSIGNED_INT","TEXTURETYPE_FLOAT","TEXTURETYPE_HALF_FLOAT","TEXTURETYPE_BYTE","TEXTURETYPE_SHORT","TEXTURETYPE_UNSIGNED_SHORT","TEXTURETYPE_INT","TEXTURETYPE_UNSIGNED_INTEGER","TEXTURETYPE_UNSIGNED_SHORT_4_4_4_4","TEXTURETYPE_UNSIGNED_SHORT_5_5_5_1","TEXTURETYPE_UNSIGNED_SHORT_5_6_5","TEXTURETYPE_UNSIGNED_INT_2_10_10_10_REV","TEXTURETYPE_UNSIGNED_INT_24_8","TEXTURETYPE_UNSIGNED_INT_10F_11F_11F_REV","TEXTURETYPE_UNSIGNED_INT_5_9_9_9_REV","TEXTURETYPE_FLOAT_32_UNSIGNED_INT_24_8_REV","TEXTURETYPE_UNDEFINED","TEXTURE_NEAREST_SAMPLINGMODE","TEXTURE_NEAREST_NEAREST","TEXTURE_BILINEAR_SAMPLINGMODE","TEXTURE_LINEAR_LINEAR","TEXTURE_TRILINEAR_SAMPLINGMODE","TEXTURE_LINEAR_LINEAR_MIPLINEAR","TEXTURE_NEAREST_NEAREST_MIPNEAREST","TEXTURE_NEAREST_LINEAR_MIPNEAREST","TEXTURE_NEAREST_LINEAR_MIPLINEAR","TEXTURE_NEAREST_LINEAR","TEXTURE_NEAREST_NEAREST_MIPLINEAR","TEXTURE_LINEAR_NEAREST_MIPNEAREST","TEXTURE_LINEAR_NEAREST_MIPLINEAR","TEXTURE_LINEAR_LINEAR_MIPNEAREST","TEXTURE_LINEAR_NEAREST","TEXTURE_EXPLICIT_MODE","TEXTURE_SPHERICAL_MODE","TEXTURE_PLANAR_MODE","TEXTURE_CUBIC_MODE","TEXTURE_PROJECTION_MODE","TEXTURE_SKYBOX_MODE","TEXTURE_INVCUBIC_MODE","TEXTURE_EQUIRECTANGULAR_MODE","TEXTURE_FIXED_EQUIRECTANGULAR_MODE","TEXTURE_FIXED_EQUIRECTANGULAR_MIRRORED_MODE","TEXTURE_FILTERING_QUALITY_OFFLINE","TEXTURE_FILTERING_QUALITY_HIGH","TEXTURE_FILTERING_QUALITY_MEDIUM","TEXTURE_FILTERING_QUALITY_LOW","SCALEMODE_FLOOR","SCALEMODE_NEAREST","SCALEMODE_CEILING","MATERIAL_TextureDirtyFlag","MATERIAL_LightDirtyFlag","MATERIAL_FresnelDirtyFlag","MATERIAL_AttributesDirtyFlag","MATERIAL_MiscDirtyFlag","MATERIAL_PrePassDirtyFlag","MATERIAL_AllDirtyFlag","MATERIAL_TriangleFillMode","MATERIAL_WireFrameFillMode","MATERIAL_PointFillMode","MATERIAL_PointListDrawMode","MATERIAL_LineListDrawMode","MATERIAL_LineLoopDrawMode","MATERIAL_LineStripDrawMode","MATERIAL_TriangleStripDrawMode","MATERIAL_TriangleFanDrawMode","MATERIAL_ClockWiseSideOrientation","MATERIAL_CounterClockWiseSideOrientation","ACTION_NothingTrigger","ACTION_OnPickTrigger","ACTION_OnLeftPickTrigger","ACTION_OnRightPickTrigger","ACTION_OnCenterPickTrigger","ACTION_OnPickDownTrigger","ACTION_OnDoublePickTrigger","ACTION_OnPickUpTrigger","ACTION_OnPickOutTrigger","ACTION_OnLongPressTrigger","ACTION_OnPointerOverTrigger","ACTION_OnPointerOutTrigger","ACTION_OnEveryFrameTrigger","ACTION_OnIntersectionEnterTrigger","ACTION_OnIntersectionExitTrigger","ACTION_OnKeyDownTrigger","ACTION_OnKeyUpTrigger","PARTICLES_BILLBOARDMODE_Y","PARTICLES_BILLBOARDMODE_ALL","PARTICLES_BILLBOARDMODE_STRETCHED","MESHES_CULLINGSTRATEGY_STANDARD","MESHES_CULLINGSTRATEGY_BOUNDINGSPHERE_ONLY","MESHES_CULLINGSTRATEGY_OPTIMISTIC_INCLUSION","MESHES_CULLINGSTRATEGY_OPTIMISTIC_INCLUSION_THEN_BSPHERE_ONLY","SCENELOADER_NO_LOGGING","SCENELOADER_MINIMAL_LOGGING","SCENELOADER_SUMMARY_LOGGING","SCENELOADER_DETAILED_LOGGING","PREPASS_IRRADIANCE_TEXTURE_TYPE","PREPASS_POSITION_TEXTURE_TYPE","PREPASS_VELOCITY_TEXTURE_TYPE","PREPASS_REFLECTIVITY_TEXTURE_TYPE","PREPASS_COLOR_TEXTURE_TYPE","PREPASS_DEPTH_TEXTURE_TYPE","PREPASS_NORMAL_TEXTURE_TYPE","PREPASS_ALBEDO_SQRT_TEXTURE_TYPE","BUFFER_CREATIONFLAG_READ","BUFFER_CREATIONFLAG_WRITE","BUFFER_CREATIONFLAG_READWRITE","BUFFER_CREATIONFLAG_UNIFORM","BUFFER_CREATIONFLAG_VERTEX","BUFFER_CREATIONFLAG_INDEX","BUFFER_CREATIONFLAG_STORAGE","RENDERPASS_MAIN","INPUT_ALT_KEY","INPUT_CTRL_KEY","INPUT_META_KEY1","INPUT_META_KEY2","INPUT_META_KEY3","INPUT_SHIFT_KEY","SNAPSHOTRENDERING_STANDARD","SNAPSHOTRENDERING_FAST","PERSPECTIVE_CAMERA","ORTHOGRAPHIC_CAMERA","FOVMODE_VERTICAL_FIXED","FOVMODE_HORIZONTAL_FIXED","RIG_MODE_NONE","RIG_MODE_STEREOSCOPIC_ANAGLYPH","RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_PARALLEL","RIG_MODE_STEREOSCOPIC_SIDEBYSIDE_CROSSEYED","RIG_MODE_STEREOSCOPIC_OVERUNDER","RIG_MODE_STEREOSCOPIC_INTERLACED","RIG_MODE_VR","RIG_MODE_WEBVR","RIG_MODE_CUSTOM","MAX_SUPPORTED_UV_SETS","GL_ALPHA_EQUATION_ADD","GL_ALPHA_EQUATION_MIN","GL_ALPHA_EQUATION_MAX","GL_ALPHA_EQUATION_SUBTRACT","GL_ALPHA_EQUATION_REVERSE_SUBTRACT","GL_ALPHA_FUNCTION_SRC","GL_ALPHA_FUNCTION_ONE_MINUS_SRC_COLOR","GL_ALPHA_FUNCTION_SRC_ALPHA","GL_ALPHA_FUNCTION_ONE_MINUS_SRC_ALPHA","GL_ALPHA_FUNCTION_DST_ALPHA","GL_ALPHA_FUNCTION_ONE_MINUS_DST_ALPHA","GL_ALPHA_FUNCTION_DST_COLOR","GL_ALPHA_FUNCTION_ONE_MINUS_DST_COLOR","GL_ALPHA_FUNCTION_SRC_ALPHA_SATURATED","GL_ALPHA_FUNCTION_CONSTANT_COLOR","GL_ALPHA_FUNCTION_ONE_MINUS_CONSTANT_COLOR","GL_ALPHA_FUNCTION_CONSTANT_ALPHA","GL_ALPHA_FUNCTION_ONE_MINUS_CONSTANT_ALPHA","SnippetUrl","Engine","canvasOrContext","antialias","adaptToDeviceRatio","enableOfflineSupport","disableManifestCheck","scenes","_virtualScenes","onNewSceneAddedObservable","postProcesses","isPointerLock","onResizeObservable","onCanvasBlurObservable","onCanvasFocusObservable","onCanvasPointerOutObservable","onBeginFrameObservable","customAnimationFrameRequester","onBeforeShaderCompilationObservable","onAfterShaderCompilationObservable","_deterministicLockstep","_lockstepMaxSteps","_timeStep","_fps","_deltaTime","_drawCalls","disablePerformanceMonitorInBackground","_performanceMonitor","_compatibilityMode","currentRenderPassId","_renderPassNames","Instances","supportRenderPasses","_creationOptions","canvas_1","_sharedInit","doNotHandleTouchAction","audioEngine","anyDoc_1","_onFullscreenChange","fullscreen","isFullscreen","mozFullScreen","webkitIsFullScreen","msIsFullScreen","_pointerLockRequested","_RequestPointerlock","_onPointerLockChange","mozPointerLockElement","webkitPointerLockElement","msPointerLockElement","AudioEngineFactory","getAudioContext","getAudioDestination","_connectVREvents","OfflineProviderFactory","deterministicLockstep","lockstepMaxSteps","timeStep","_prepareVRComponent","autoEnableWebVR","initWebVR","_createImageBitmapFromSource","imageSource","Image","onload","decode","createImageBitmap","onerror","resizeImageBitmap","bufferHeight","MarkAllMaterialsAsDirty","predicate","engineIndex","sceneIndex","markAllMaterialsAsDirty","DefaultLoadingScreenFactory","_RescalePostProcessFactory","_renderingCanvas","_onCanvasFocus","_onCanvasBlur","_onBlur","disable","_windowIsBackground","_onFocus","enable","_onCanvasPointerOut","ev","elementFromPoint","_disableTouchAction","getAspectRatio","viewportOwner","useScreen","getScreenAspectRatio","getRenderingCanvasClientRect","getInputElementClientRect","isDeterministicLockStep","getLockstepMaxSteps","getTimeStep","generateMipMapsForCubemap","unbind","getDepthBuffer","_depthCullingState","depthTest","setDepthBuffer","getDepthWrite","setDepthWrite","getStencilBuffer","_stencilState","stencilTest","setStencilBuffer","getStencilMask","stencilMask","setStencilMask","getStencilFunction","stencilFunc","getStencilFunctionReference","stencilFuncRef","getStencilFunctionMask","stencilFuncMask","setStencilFunction","setStencilFunctionReference","reference","setStencilFunctionMask","getStencilOperationFail","stencilOpStencilFail","getStencilOperationDepthFail","stencilOpDepthFail","getStencilOperationPass","stencilOpStencilDepthPass","setStencilOperationFail","setStencilOperationDepthFail","setStencilOperationPass","setDitheringState","DITHER","setRasterizerState","RASTERIZER_DISCARD","getDepthFunction","depthFunc","setDepthFunction","setDepthFunctionToGreater","setDepthFunctionToGreaterOrEqual","setDepthFunctionToLess","setDepthFunctionToLessOrEqual","cacheStencilState","_cachedStencilBuffer","_cachedStencilFunction","_cachedStencilMask","_cachedStencilOperationPass","_cachedStencilOperationFail","_cachedStencilOperationDepthFail","_cachedStencilReference","restoreStencilState","setDirectViewport","currentViewport","_cachedViewport","_viewport","scissorClear","enableScissor","disableScissor","SCISSOR_TEST","scissor","_submitVRFrame","disableVR","isVRPresenting","_requestVRFrame","_loadFileAsync","getVertexShaderSource","shaders","getAttachedShaders","getShaderSource","getFragmentShaderSource","setDepthStencilTexture","channel","_boundUniforms","depthStencilTexture","_setTexture","setTextureFromPostProcess","postProcess","postProcessInput","_textures","_currentRenderTextureInd","_forcedOutputTexture","_bindTexture","setTextureFromPostProcessOutput","_outputTexture","_rebuildBuffers","resetCachedMaterial","_rebuildGeometries","_rebuildTextures","_renderFrame","_activeRenderLoops","renderFunction","_renderLoop","_contextWasLost","shouldRender","renderEvenInBackground","beginFrame","_renderViews","requestID","_queueNewFrame","_renderingQueueLaunched","switchFullscreen","exitFullscreen","enterFullscreen","_RequestFullscreen","_ExitFullscreen","enterPointerlock","exitPointerlock","_ExitPointerlock","_measureFps","resize","forceSetSize","camIndex","cameras","_currentRenderId","hasObservers","_deletePipelineContext","webGLPipelineContext","transformFeedback","deleteTransformFeedback","createShaderProgram","transformFeedbackVaryings","_createShaderProgram","shaderProgram","createProgram","attachShader","createTransformFeedback","bindTransformFeedback","setTranformFeedbackVaryings","linkProgram","_finalizePipelineContext","_releaseTexture","_releaseRenderTargetWrapper","_postProcesses","getRenderPassNames","getCurrentRenderPassName","createRenderPassId","_RenderPassIdCounter","releaseRenderPassId","subMeshes","_removeDrawWrapper","_rescaleTexture","onComplete","rtt","createRenderTargetTexture","_rescalePostProcess","externalTextureSamplerBinding","getEffect","executeWhenCompiled","onApply","hostingScene","directRender","copyTexImage2D","unBindFramebuffer","getFps","getDeltaTime","sampleFrame","averageFPS","instantaneousFrameTime","wrapWebGLTexture","_uploadImageToTexture","lod","bindTarget","updateTextureComparisonFunction","TEXTURE_COMPARE_FUNC","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","createInstancesBuffer","deleteInstancesBuffer","deleteBuffer","_clientWaitAsync","sync","intervalms","check","clientWaitSync","WAIT_FAILED","TIMEOUT_EXPIRED","_readPixelsAsync","outputBuffer","_webGLVersion","buf","PIXEL_PACK_BUFFER","STREAM_READ","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","deleteSync","getBufferSubData","hideLoadingUI","setAttribute","style","touchAction","msTouchAction","webkitTapHighlightColor","displayLoadingUI","loadingScreen","_loadingScreen","text","loadingUIText","loadingUIBackgroundColor","createVideoElement","constraints","element","msRequestPointerLock","mozRequestPointerLock","webkitRequestPointerLock","focus","anyDoc","msExitPointerLock","mozExitPointerLock","webkitExitPointerLock","requestFunction","requestFullscreen","msRequestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","mozCancelFullScreen","webkitCancelFullScreen","msCancelFullScreen","getFontOffset","font","innerHTML","block","verticalAlign","div","whiteSpace","appendChild","fontAscent","fontHeight","top","removeChild","ascent","descent","EngineStore","_LastCreatedScene","UseFallbackTexture","FallbackTexture","groupName","targetObject","_OcclusionDataStorage","occlusionInternalRetryCounter","isOcclusionQueryInProgress","isOccluded","occlusionRetryCount","occlusionType","occlusionQueryAlgorithmType","forceRenderingWhenOccluded","getQueryParameter","QUERY_RESULT_AVAILABLE","QUERY_RESULT","algorithmType","glAlgorithm","_getGlAlgorithmType","beginQuery","endQuery","timerQuery","createQueryEXT","deleteQueryEXT","getQueryObjectEXT","QUERY_RESULT_EXT","QUERY_RESULT_AVAILABLE_EXT","caps","getParameter","GPU_DISJOINT_EXT","canUseTimestampForTimerQuery","_startTimeQuery","_createTimeQuery","queryCounterEXT","TIMESTAMP_EXT","_currentNonTimestampToken","_timeElapsedQuery","beginQueryEXT","TIME_ELAPSED_EXT","_endTimeQuery","_timeElapsedQueryEnded","endQueryEXT","disjoint","available","_getTimeQueryAvailability","timeStart","_getTimeQueryResult","_deleteTimeQuery","_gpuFrameTime","_captureGPUFrameTime","_onBeginFrameObserver","_gpuFrameTimeToken","startTimeQuery","_onEndFrameObserver","time","endTimeQuery","ANY_SAMPLES_PASSED_CONSERVATIVE","ANY_SAMPLES_PASSED","_occlusionDataStorage","__occlusionDataStorage","dataStorage","supportOcclusionQuery","_occlusionQuery","occlusionQueryResult","getBoundingBoxRenderer","occlusionBoundingBoxRenderer","renderOcclusionBoundingBox","_forceTransformFeedbackToBundle","TRANSFORM_FEEDBACK","usePoints","beginTransformFeedback","POINTS","TRIANGLES","endTransformFeedback","INTERLEAVED_ATTRIBS","TRANSFORM_FEEDBACK_BUFFER","EngineView","_inputElement","clearBeforeCopy","views","masterCanvas","newView","unRegisterView","previewCamera","activeCameras","activeView","activeCamera","customResize","clientWidth","_hardwareScalingLevel","clientHeight","dimsChanged","transformTextureUrl","_excludedCompressedTextures","some","strRegExPattern","lastQuestionMark","querystring","_textureFormatInUse","storageBuffer","texturesSupported","astc","pvrtc","etc2","etc1","skippedFiles","formatsAvailable","len1","len2","VALIDATION_ENABLED","ValidatedNativeDataStream","VALIDATION_UINT_32","VALIDATION_INT_32","VALIDATION_FLOAT_32","VALIDATION_UINT_32_ARRAY","VALIDATION_INT_32_ARRAY","VALIDATION_FLOAT_32_ARRAY","VALIDATION_NATIVE_DATA","VALIDATION_BOOLEAN","_blendFunctionParameters","_blendEquationParameters","WebGPUComputeContext","_bindGroupEntries","computePipeline","bindGroupEntriesExist","group","indexInGroupEntries","_texture","WebGPUComputePipelineContext","stage","_getComputeShaderCode","compute","computeElement","computeToken","computeSource","_compiledComputeEffects","compiledEffect","_onAfterUnbindFrameBufferObservable","addOnce","computeDispatch","contextPipeline","computeContext","createComputePipeline","computePass","_renderTargetEncoder","beginComputePass","dispatchWorkgroups","webGPUPipelineContextCompute","getPipelineContext","_deleteComputePipelineContext","webGpuContext","dbgShowShaderCode","rawCompute","_createComputePipelineStageDescriptor","_key","_wasPreviouslyReady","_prepareEffect","computeShader","_textureHelper","_generateMipmaps","_uploadEncoder","_options","enableGPUDebugMarkers","_renderEncoder","_currentRenderPass","_pendingDebugCommands","insertDebugMarker","_debugPushGroup","_debugPopGroup","_debugInsertMarker","WebGPUExternalTexture","setExternalTexture","_setInternalTexture","_currentMaterialContext","_endRenderTargetRenderPass","_mrtAttachments","_setDepthTextureFormat","_setColorFormat","createDepthStencilTexture","defaultAttachments","_defaultAttachments","incrementReferences","_timestampQuery","gpuFrameTimeCounter","compatibilityMode","canBeginQuery","bufferView","faces_1","allFaces","WebGPURenderTargetWrapper","createMipMaps","setTextureSampler","setStorageBuffer","_createBuffer","ctor","constructor","_currentDrawContext","createUniformBuffer","bitmap","EngineFactory","CreateAsync","supported"],"sourceRoot":""}