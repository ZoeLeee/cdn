{"version":3,"file":"js/4584.a968ed1d.js","mappings":"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","sources":["webpack:///./components/QueryPane/index.tsx","webpack:///./components/SModal/index.tsx","webpack:///./components/SPagination/index.tsx","webpack:///./components/CardList/Items/Bought.tsx","webpack:///./components/CardList/Bought.tsx","webpack:///./views/list/modules/UseMaterial.tsx","webpack:///./views/list/Purchased.tsx","webpack:///./views/list/modules/Preview.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { Paper, InputBase } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nconst SelfPaper = styled(Paper)(({ theme }) => ({\r\n  border: \"1px solid #E2E2E2\",\r\n  p: \"0 0 0 4px\",\r\n  display: \"inline-flex\",\r\n  alignItems: \"center\",\r\n  width: 400,\r\n  height: 36,\r\n  boxShadow: \"none\",\r\n  borderRadius: \"5px\",\r\n}));\r\n\r\nconst SearchPane = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  padding: \"0 3px\",\r\n  background: \"#075FB8\",\r\n  height: \"100%\",\r\n  width: 36,\r\n  color: \"#fff\",\r\n  borderRadius: \"0 5px 5px 0\",\r\n  cursor: \"pointer\",\r\n}));\r\n\r\nexport default function QueryPane(props) {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleClick = () => {\r\n    const { search } = props;\r\n    search && search(value);\r\n  };\r\n\r\n  const changeVal = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const keyEvent = (e) => {\r\n    if (e.keyCode !== 13) {\r\n      return;\r\n    }\r\n    handleClick();\r\n  };\r\n\r\n  return (\r\n    <SelfPaper>\r\n      <InputBase\r\n        sx={{ ml: 1, flex: 1 }}\r\n        placeholder=\"搜索\"\r\n        value={value}\r\n        onChange={changeVal}\r\n        onKeyUp={keyEvent}\r\n      />\r\n      <SearchPane onClick={handleClick}>\r\n        <SearchIcon />\r\n      </SearchPane>\r\n    </SelfPaper>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Paper, { PaperProps } from \"@mui/material/Paper\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Draggable from \"react-draggable\";\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  \"& .MuiDialogContent-root\": {\r\n    padding: theme.spacing(2),\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n  id: string;\r\n  children?: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst BootstrapDialogTitle = (props: DialogTitleProps) => {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 2, cursor: \"move\" }} {...other}>\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n};\r\n\r\nconst PaperComponent = (props: PaperProps) => {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n};\r\n\r\ninterface SModalProps {\r\n  visible?: boolean;\r\n  title?: string;\r\n  size?: any;\r\n  width?: number;\r\n  children?: any;\r\n  header?: any;\r\n  footer?: any;\r\n  fullWidth?: boolean;\r\n  sx?: object;\r\n  height?: string | number;\r\n  hideFooter?: boolean;\r\n  handleClose?: Function;\r\n  handleOk?: Function;\r\n}\r\n\r\nconst SModal: React.FC<SModalProps> = ({\r\n  title,\r\n  visible,\r\n  size,\r\n  children,\r\n  header,\r\n  footer,\r\n  fullWidth,\r\n  sx,\r\n  height,\r\n  hideFooter,\r\n  handleOk,\r\n  handleClose,\r\n}) => {\r\n  const closeMethod = () => {\r\n    handleClose && handleClose();\r\n  };\r\n\r\n  const okMethod = () => {\r\n    handleOk && handleOk();\r\n  };\r\n  return (\r\n    <BootstrapDialog\r\n      // onClose={closeMethod}\r\n      open={visible}\r\n      maxWidth={size}\r\n      fullWidth={fullWidth}\r\n      PaperComponent={PaperComponent}\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n    >\r\n      {header ? (\r\n        header\r\n      ) : (\r\n        <BootstrapDialogTitle id=\"draggable-dialog-title\" onClose={closeMethod}>\r\n          {title}\r\n        </BootstrapDialogTitle>\r\n      )}\r\n      <DialogContent\r\n        sx={{\r\n          // minHeight: `${minHeight}px`,\r\n          height: `${height ? height + \"px\" : \"auto\"}`,\r\n        }}\r\n        dividers\r\n      >\r\n        {children}\r\n      </DialogContent>\r\n      {hideFooter ? null : (\r\n        <DialogActions>\r\n          {footer ? (\r\n            footer\r\n          ) : (\r\n            <>\r\n              <Button onClick={closeMethod}>取消</Button>\r\n              <Button onClick={okMethod}>确定</Button>\r\n            </>\r\n          )}\r\n        </DialogActions>\r\n      )}\r\n    </BootstrapDialog>\r\n  );\r\n};\r\n\r\nexport default SModal;\r\n","import React from \"react\";\r\n\r\nimport { TablePagination } from \"@mui/material\";\r\n\r\ninterface STableProp {\r\n  total?: number;\r\n  pagenation?: {\r\n    pageNum?: number;\r\n    pageSize?: number;\r\n    pageSizeOptions?: Array<number>;\r\n  };\r\n  onPageChange?: (pageNum: number) => void;\r\n  onRowsPerPageChange?: (pageSize: number) => void;\r\n}\r\n\r\nconst STable: React.FC<STableProp> = ({\r\n  total,\r\n  pagenation,\r\n  onPageChange,\r\n  onRowsPerPageChange,\r\n}) => {\r\n  const { pageNum, pageSize, pageSizeOptions } = pagenation;\r\n\r\n  const changePage = (event: unknown, newPage: number) => {\r\n    onPageChange && onPageChange(newPage + 1);\r\n  };\r\n\r\n  const changeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    onRowsPerPageChange &&\r\n      onRowsPerPageChange(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  return (\r\n    <TablePagination\r\n      rowsPerPageOptions={pageSizeOptions || []}\r\n      component=\"div\"\r\n      count={total}\r\n      rowsPerPage={pageSize}\r\n      page={pageNum > 0 ? pageNum - 1 : 0}\r\n      onPageChange={changePage}\r\n      onRowsPerPageChange={changeRowsPerPage}\r\n      labelRowsPerPage=\"每页条数：\"\r\n      labelDisplayedRows={({ from, to }) => {\r\n        return `${from}–${to} 共 ${Math.ceil(total / pageSize)}页, ${total}条`;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default STable;\r\n","import * as React from \"react\";\r\n\r\nimport { Card, CardContent, Typography, IconButton } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport { validateImage } from \"~/utils/utils\";\r\nimport { commonStore } from \"~/stores/commonStore\";\r\nimport SIcon from \"~/components/SIcon\";\r\n\r\nconst SelfCard = styled(Card)(({ theme }) => ({\r\n  position: \"relative\",\r\n  \"&:hover .footer\": {\r\n    display: \"flex\",\r\n    position: \"absolute\",\r\n    zIndex: 100,\r\n    bottom: 0,\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    height: \"20%\",\r\n    fontSize: \"12px\",\r\n    left: 0,\r\n    padding: \"0 16px\",\r\n    background: \"rgba(0,0,0,.3)\",\r\n    \"& p\": {\r\n      fontSize: \"12px\",\r\n      fontFamily: \"Source Han Sans CN\",\r\n      fontWeight: 500,\r\n      color: \"#fff\",\r\n      margin: \"5px 0 0 0\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst CardIcon = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  width: \"100%\",\r\n  height: \"85%\",\r\n  \"& i\": {\r\n    fontSize: \"10em\",\r\n    color: \"rgb(255, 208, 129)\",\r\n  },\r\n}));\r\n\r\nconst FooterMenu = styled(\"div\")(({ theme }) => ({\r\n  display: \"none\",\r\n}));\r\n\r\nconst ActionMenu = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"flex-end\",\r\n  alignItems: \"center\",\r\n  width: \"calc((100% - 32px) / 2)\",\r\n  height: \"9%\",\r\n  position: \"absolute\",\r\n  zIndex: 100,\r\n  right: \"16px\",\r\n  \"& .action-menu-item\": {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: 30,\r\n    height: 30,\r\n    margin: \"0 5px\",\r\n    borderRadius: \"50%\",\r\n  },\r\n}));\r\n\r\nconst ButtonPane = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  height: \"100%\",\r\n  width: \"calc(100% / 3)\",\r\n}));\r\n\r\nconst SelfIconButton = styled(IconButton)(({ theme }) => ({\r\n  width: 40,\r\n  height: 40,\r\n}));\r\n\r\ntype MenuObj = {\r\n  key: string | number;\r\n  title: string;\r\n  icon?: string;\r\n  type?: string;\r\n};\r\n\r\ntype DataItemObj = {\r\n  record_id?: string;\r\n  record_status?: string | number;\r\n  create_id?: string;\r\n  create_at?: string;\r\n  update_id?: string;\r\n  update_at?: string;\r\n  product_code?: string;\r\n  product_sn?: string;\r\n  product_name?: string;\r\n  product_type?: string;\r\n  possessor_code?: string;\r\n  pic?: string;\r\n  publish_status?: string | number;\r\n  new_status?: string | number;\r\n  recommand_status?: string | number;\r\n  verify_status?: string | number;\r\n  sort_order?: string | number;\r\n  price?: string | number;\r\n  score?: string | number;\r\n  description: null;\r\n  stock?: string | number;\r\n  sale?: string | number;\r\n  product_views?: string | number;\r\n  product_cites?: string | number;\r\n  real_code?: string;\r\n  real_type?: string;\r\n  id?: string | number;\r\n  user_name?: string;\r\n  source_type?: string;\r\n  is_bought: true;\r\n};\r\n\r\ntype FormatObj = {\r\n  id?: string;\r\n  name?: string;\r\n  count?: string;\r\n  createdTime?: string;\r\n  updatedTime?: string;\r\n  img?: string;\r\n  key?: string;\r\n};\r\n\r\ninterface CardListProps {\r\n  dataItem?: DataItemObj;\r\n  dataIndex?: number;\r\n  ipagenation?: {\r\n    pageNum: number;\r\n    pageSize: number;\r\n    pageSizeOptions?: Array<number>;\r\n  };\r\n  menuList?: Array<MenuObj>;\r\n  sx?: object;\r\n  total?: number;\r\n  keyFormat?: FormatObj;\r\n  moreList?: Array<MenuObj>;\r\n  doubleClick?: Function;\r\n  handleClick?: Function;\r\n  handleChangePage?: (pageNum: number) => void;\r\n  handleChangeRowsPerPage?: (pageSize: number) => void;\r\n  menuClick?: (key: string | number, dataItem: DataItemObj) => void;\r\n}\r\n\r\nconst defaultFormat = {\r\n  id: \"id\",\r\n  name: \"name\",\r\n  count: \"count\",\r\n  createdTime: \"createdTime\",\r\n  updatedTime: \"updatedTime\",\r\n  img: \"img\",\r\n  key: \"key\",\r\n};\r\n\r\nlet count = 0;\r\nconst CardItem: React.FC<CardListProps> = ({\r\n  dataItem,\r\n  dataIndex,\r\n  keyFormat,\r\n  menuList,\r\n  moreList,\r\n  handleClick,\r\n  doubleClick,\r\n  menuClick,\r\n}) => {\r\n  const clickCard = (item, index) => {\r\n    count += 1;\r\n    setTimeout(() => {\r\n      if (count === 1) {\r\n        handleClick && handleClick(item, index);\r\n      } else if (count === 2) {\r\n        doubleClick && doubleClick(item, index);\r\n      }\r\n      count = 0;\r\n    }, 300);\r\n  };\r\n\r\n  const getTitle = (menuItem: MenuObj, type: string) => {\r\n    let { key, title } = menuItem;\r\n    if (key === \"created\") {\r\n      let name = \"\";\r\n      if (type === \"M0001\") {\r\n        name = \"创建副本\";\r\n      } else if (type === \"M0002\") {\r\n        name = \"应用到场景\";\r\n      } else if (type === \"M0003\" || type === \"M0004\") {\r\n        name = \"应用到项目\";\r\n      }\r\n      return name;\r\n    } else {\r\n      return title;\r\n    }\r\n  };\r\n\r\n  const renderItem = () => {\r\n    let format = Object.assign(defaultFormat, keyFormat || {});\r\n    return (\r\n      <SelfCard className=\"projectCardItem\">\r\n        <CardContent\r\n          sx={{ width: \"100%\", height: \"300px\", userSelect: \"none\" }}\r\n          onClick={() => clickCard(dataItem, dataIndex)}\r\n        >\r\n          <ActionMenu>\r\n            {menuList &&\r\n              menuList.map((item, index) => (\r\n                <ButtonPane key={index}>\r\n                  <SelfIconButton\r\n                    title={getTitle(item, dataItem.real_type)}\r\n                    color=\"primary\"\r\n                    onClick={(e) => menuClick && menuClick(item.key, dataItem)}\r\n                  >\r\n                    <SIcon type={item.icon}></SIcon>\r\n                  </SelfIconButton>\r\n                </ButtonPane>\r\n              ))}\r\n          </ActionMenu>\r\n          <Typography\r\n            align=\"left\"\r\n            variant=\"body2\"\r\n            color=\"text.secondary\"\r\n            sx={{\r\n              color: \"#222\",\r\n              fontSize: \"15px\",\r\n              fontWeight: \"bold\",\r\n              width: \"50%\",\r\n              overflow: \"hidden\",\r\n              textOverflow: \"ellipsis\",\r\n              whiteSpace: \"nowrap\",\r\n            }}\r\n            title={dataItem[format.name]}\r\n          >\r\n            <span style={{ marginRight: \"10px\" }}>名称：</span>\r\n            {dataItem.product_name}\r\n          </Typography>\r\n          <Typography\r\n            align=\"left\"\r\n            variant=\"body2\"\r\n            color=\"text.secondary\"\r\n            sx={{\r\n              color: \"#424B54\",\r\n              fontSize: \"13px\",\r\n              marginTop: \"5px\",\r\n            }}\r\n          >\r\n            <span style={{ marginRight: \"10px\" }}>积分：</span>\r\n            {dataItem.score || 0}\r\n          </Typography>\r\n          <CardIcon>\r\n            {dataItem[format.img] &&\r\n            validateImage(\r\n              commonStore.prefix +\r\n                dataItem[format.key] +\r\n                \"/\" +\r\n                dataItem[format.img]\r\n            ) ? (\r\n              <img\r\n                src={`${commonStore.prefix}${dataItem[format.key]}/${\r\n                  dataItem[format.img]\r\n                }?t=${new Date().getTime()}`}\r\n                style={{ height: \"100%\" }}\r\n              />\r\n            ) : (\r\n              <img src=\"/static/images/bg.png\" />\r\n            )}\r\n          </CardIcon>\r\n          <FooterMenu className=\"footer\">\r\n            {/* <div>{dataItem.product_name}</div>\r\n            {dataItem.real_type === \"M0001\" && (\r\n              <div\r\n                onClick={(event) => menuClick && menuClick(\"created\", dataItem)}\r\n              >\r\n                <SIcon type=\"icon-3Dfuzhi\"></SIcon>创建副本\r\n              </div>\r\n            )} */}\r\n            <div>\r\n              <p>购买时间</p>\r\n              <p>{dataItem.create_at}</p>\r\n            </div>\r\n          </FooterMenu>\r\n        </CardContent>\r\n      </SelfCard>\r\n    );\r\n  };\r\n\r\n  return renderItem();\r\n};\r\n\r\nexport default CardItem;\r\n","import * as React from \"react\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport CardItem from \"./Items/Bought\";\r\nimport SPagination from \"~/components/SPagination\";\r\n\r\nconst CardPane = styled(\"div\")(({ theme }) => ({\r\n  padding: \"20px\",\r\n  display: \"grid\",\r\n  flexWrap: \"wrap\",\r\n  gridTemplateColumns: \"repeat(auto-fill, calc((100% - 25px * 4) / 5))\",\r\n  gridGap: \"25px 25px\",\r\n  \"& .projectCardItem\": {\r\n    width: \"100%\",\r\n    maxHeight: 300,\r\n    boxShadow: \"0px 0px 8px 0px rgba(0, 0, 0, 0.08)\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  \"& .activePane\": {\r\n    boxShadow: \"0px 0px 8px 0px rgba(7, 95, 184, 0.46)\",\r\n  },\r\n  \"& .activeIcon\": {\r\n    color: \"#1890ff\",\r\n  },\r\n  \"& .projectCardItem:hover\": {\r\n    boxShadow: \"0px 0px 8px 0px rgba(7, 95, 184, 0.46)\",\r\n    \"& .hover-icon\": {\r\n      color: \"#1890ff\",\r\n    },\r\n  },\r\n  \"& .MuiCardContent-root:last-child\": {\r\n    paddingBottom: \"16px\",\r\n  },\r\n}));\r\n\r\nconst NoData = styled(\"div\")(({ theme }) => ({\r\n  textAlign: \"center\",\r\n  fontSize: \"14px\",\r\n  padding: \"20px 0\",\r\n  \"& img\": {\r\n    width: 300,\r\n    height: 300,\r\n  },\r\n  \"& p\": {\r\n    margin: 0,\r\n  },\r\n}));\r\n\r\ntype MenuObj = {\r\n  key: string | number;\r\n  title: string;\r\n  icon?: string;\r\n  type?: string;\r\n};\r\n\r\ninterface CardListProps {\r\n  dataSource: Array<any>;\r\n  ipagenation?: {\r\n    pageNum: number;\r\n    pageSize: number;\r\n    pageSizeOptions?: Array<number>;\r\n  };\r\n  menuList?: Array<MenuObj>;\r\n  sx?: object;\r\n  total?: number;\r\n  keyFormat?: object;\r\n  moreList?: Array<MenuObj>;\r\n  doubleClick?: Function;\r\n  handleClick?: Function;\r\n  handleChangePage?: (pageNum: number) => void;\r\n  handleChangeRowsPerPage?: (pageSize: number) => void;\r\n  menuClick?: (type: string, dataSourceItem: object) => void;\r\n  add?: () => void;\r\n}\r\n\r\nconst CardList: React.FC<CardListProps> = ({\r\n  dataSource,\r\n  ipagenation,\r\n  sx,\r\n  total,\r\n  keyFormat,\r\n  doubleClick,\r\n  handleClick,\r\n  menuList,\r\n  handleChangePage,\r\n  handleChangeRowsPerPage,\r\n  menuClick,\r\n}) => {\r\n  return (\r\n    <>\r\n      <CardPane sx={sx}>\r\n        {dataSource.map((dataItem, dataIndex) => (\r\n          <CardItem\r\n            key={dataIndex}\r\n            dataIndex={dataIndex}\r\n            dataItem={dataItem}\r\n            keyFormat={keyFormat}\r\n            handleClick={handleClick}\r\n            doubleClick={doubleClick}\r\n            menuList={menuList}\r\n            menuClick={menuClick}\r\n          ></CardItem>\r\n        ))}\r\n      </CardPane>\r\n      {ipagenation && total > 0 ? (\r\n        <SPagination\r\n          pagenation={ipagenation}\r\n          total={total}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      ) : null}\r\n      {!dataSource || dataSource.length === 0 ? (\r\n        <NoData>\r\n          <img src=\"/static/images/nodata.svg\" />\r\n          <p>暂无数据</p>\r\n        </NoData>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React, { useImperativeHandle, useState, useEffect } from \"react\";\r\n\r\nimport { Box, Grid, Button, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport { postAction } from \"~/apis/manage\";\r\nimport SModal from \"~/components/SModal\";\r\nimport { message } from \"~/utils/message\";\r\nimport { formatDate } from \"~/utils/utils\";\r\n\r\nconst Label = styled(\"div\")(({ theme }) => ({\r\n  display: \"inline-block\",\r\n  width: \"80px\",\r\n  fontSize: \"14px\",\r\n  textAlign: \"right\",\r\n}));\r\n\r\nconst Input = styled(TextField)(({ theme }) => ({\r\n  \"& input\": {\r\n    height: \"1em\",\r\n    width: \"300px\",\r\n  },\r\n}));\r\n\r\ninterface FileTreeProps {\r\n  materialRef?: any;\r\n  onOk?: Function;\r\n  onClose?: Function;\r\n  projectCode?: string | number;\r\n}\r\n\r\ntype projectForm = {\r\n  id?: string | number;\r\n  name?: string | number;\r\n  // expiration?: string;\r\n  // hardware_info?: string;\r\n};\r\n\r\nconst UseMaterial: React.FC<FileTreeProps> = ({\r\n  materialRef,\r\n  onOk,\r\n  onClose,\r\n}) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [name, setName] = useState(\"\");\r\n  const [currentObj, setCurrentObj] = useState<projectForm>({});\r\n\r\n  useImperativeHandle(materialRef, () => ({\r\n    open,\r\n  }));\r\n\r\n  const handleOk = () => {\r\n    let formData = {\r\n      id: currentObj.id,\r\n      name,\r\n    };\r\n    postAction(\"editor/opus/pull\", formData).then((res) => {\r\n      if (res[\"code\"] === 0) {\r\n        message.success(\"操作成功\");\r\n        setVisible(false);\r\n        onOk && onOk();\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setVisible(false);\r\n    onClose && onClose();\r\n  };\r\n\r\n  const open = (record) => {\r\n    console.log(record);\r\n    setVisible(true);\r\n    setCurrentObj({\r\n      id: record.real_code,\r\n    });\r\n    setName(record.product_name);\r\n  };\r\n\r\n  const changeValue = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <SModal\r\n      size=\"sm\"\r\n      title=\"创建副本\"\r\n      visible={visible}\r\n      handleOk={handleOk}\r\n      handleClose={handleClose}\r\n      fullWidth={true}\r\n      height=\"auto\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sx={{\r\n            display: \"inline-flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            height: \"80px\",\r\n          }}\r\n        >\r\n          <Label>名称：</Label>\r\n          <Input size=\"small\" value={name} onChange={changeValue}></Input>\r\n        </Grid>\r\n      </Grid>\r\n    </SModal>\r\n  );\r\n};\r\n\r\nexport default UseMaterial;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { TextField, Tabs, Tab, Box } from \"@mui/material\";\r\n\r\nimport CardList from \"~/components/CardList/Bought\";\r\nimport QueryPane from \"~/components/QueryPane\";\r\nimport { getAction } from \"~/apis/manage\";\r\nimport Preview from \"./modules/Preview\";\r\nimport UseMaterial from \"./modules/UseMaterial\";\r\n\r\nconst SlefBox = styled(Box)(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  padding: \"0 20px\",\r\n}));\r\n\r\nconst menuList = [\r\n  {\r\n    key: \"preview\",\r\n    title: \"预览\",\r\n    icon: \"icon-3Dsousuo\",\r\n  },\r\n  {\r\n    key: \"created\",\r\n    title: \"创建\",\r\n    icon: \"icon-3Dfuzhi\",\r\n  },\r\n];\r\n\r\nexport default function Purchased() {\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [categoryList, setCategoryList] = useState([\r\n    {\r\n      label: \"项目\",\r\n      value: \"M0001\",\r\n    },\r\n    {\r\n      label: \"场景\",\r\n      value: \"M0002\",\r\n    },\r\n    {\r\n      label: \"组件\",\r\n      value: \"M0003,M0004\",\r\n    },\r\n  ]);\r\n  const [tabValue, setTabValue] = useState(\"M0001\");\r\n  const [ipagenation, setIpagenation] = useState({\r\n    pageNum: 1,\r\n    pageSize: 10,\r\n    pageSizeOptions: [],\r\n  });\r\n  const [total, setTotal] = useState(0);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [previewURL, setPreviewURL] = useState(\"\");\r\n\r\n  const previewRef = useRef(null);\r\n  const materialRef = useRef(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const url = {\r\n    list: \"trade/boughten/list\",\r\n    add: \"\",\r\n    edit: \"\",\r\n    delete: \"\",\r\n    project: \"\",\r\n  };\r\n\r\n  /* start */\r\n  // 获取列表\r\n  const getList = (formData?: {}) => {\r\n    let params = {\r\n      Current: ipagenation.pageNum,\r\n      Size: ipagenation.pageSize,\r\n      category: tabValue,\r\n      name: inputValue,\r\n      ...formData,\r\n      // category: tabValue,\r\n    };\r\n    getAction(url.list, params)\r\n      .then((res) => {\r\n        if (res[\"code\"] === 0) {\r\n          let { list, total } = res.data;\r\n          if (list && list.length > 0) {\r\n            setDataSource(list);\r\n            setTotal(total);\r\n          } else {\r\n            setDataSource([]);\r\n            setTotal(0);\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // }\r\n  };\r\n  /* --end */\r\n\r\n  const getCategoryList = () => {\r\n    getAction(\"portal/market/category\", {})\r\n      .then((res) => {\r\n        if (res[\"code\"] === 0) {\r\n          let { list } = res.data;\r\n          if (list && list.length > 0) {\r\n            setCategoryList(list);\r\n            setTabValue(list[0][\"value\"]);\r\n            getList({ category: list[0][\"value\"] });\r\n          } else {\r\n            setCategoryList([]);\r\n            setTabValue(null);\r\n            getList();\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleChangePage = (page) => {\r\n    setIpagenation({\r\n      pageNum: page,\r\n      pageSize: ipagenation.pageSize,\r\n      pageSizeOptions: ipagenation.pageSizeOptions,\r\n    });\r\n    getList({ Current: page });\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    setIpagenation({\r\n      pageNum: 1,\r\n      pageSize: rowsPerPage,\r\n      pageSizeOptions: ipagenation.pageSizeOptions,\r\n    });\r\n    getList({ Size: rowsPerPage });\r\n  };\r\n\r\n  const search = (val) => {\r\n    setInputValue(val);\r\n    getList({ name: val });\r\n  };\r\n\r\n  const changeTab = (obj, value) => {\r\n    setTabValue(value);\r\n    getList({ category: value });\r\n  };\r\n\r\n  const doubleClick = (record, index) => {\r\n    // window.open(`/preview.html?code=${record.product_code}`, \"_blank\");\r\n    previewMethod(record);\r\n  };\r\n\r\n  const previewMethod = (item) => {\r\n    previewRef.current.open(item.product_code);\r\n    setPreviewURL(`/shop.html?code=${item.product_code}&frame=1`);\r\n  };\r\n\r\n  const menuClick = (type, record) => {\r\n    if (type === \"created\") {\r\n      if (record.real_type === \"M0001\") {\r\n        materialRef.current.open(record);\r\n      } else {\r\n        navigate(\"/editor?code=\" + record.product_code);\r\n      }\r\n    } else if (type === \"preview\") {\r\n      previewMethod(record);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getList();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SlefBox>\r\n        <Tabs value={tabValue} onChange={changeTab}>\r\n          {categoryList &&\r\n            categoryList.map((item, index) => (\r\n              <Tab key={index} label={item.label} value={item.value} />\r\n            ))}\r\n        </Tabs>\r\n        <QueryPane search={search}></QueryPane>\r\n      </SlefBox>\r\n      <CardList\r\n        dataSource={dataSource}\r\n        ipagenation={ipagenation}\r\n        keyFormat={{ img: \"pic\", key: \"real_code\" }}\r\n        total={total}\r\n        menuList={menuList}\r\n        menuClick={menuClick}\r\n        doubleClick={doubleClick}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n      ></CardList>\r\n      <Preview previewRef={previewRef} url={previewURL}></Preview>\r\n      <UseMaterial materialRef={materialRef}></UseMaterial>\r\n    </>\r\n  );\r\n}\r\n","import React, { useImperativeHandle, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport SModal from \"~/components/SModal\";\r\nimport { previewChannel } from \"~/utils/previewChannel\";\r\n\r\ninterface FileTreeProps {\r\n  url?: string;\r\n  previewRef?: any;\r\n  code?: string | number;\r\n}\r\n\r\nconst SelfIframe = styled(\"iframe\")(({ theme }) => ({\r\n  width: \"100%\",\r\n  height: \"calc(100% - 32px)\",\r\n  border: \"none\",\r\n  margin: \"0\",\r\n  padding: \"0\",\r\n}));\r\n\r\nconst Preview: React.FC<FileTreeProps> = ({ url, previewRef }) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useImperativeHandle(previewRef, () => ({\r\n    open,\r\n  }));\r\n\r\n  const handleOk = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const open = (code?: null) => {\r\n    setVisible(true);\r\n    respFuc(code);\r\n  };\r\n\r\n  const respFuc = (code?: null) => {\r\n    console.log(\"code1: \", code);\r\n    previewChannel.addEventListener(\"message\", (e) => {\r\n      console.log(e);\r\n      const { type } = e.data;\r\n      if (type === \"close_preview\") {\r\n        setVisible(false);\r\n      } else if (type === \"apply-shop\") {\r\n        // setTimeout(() => {\r\n        navigate(\"/editor?code=\" + code);\r\n        handleClose();\r\n        //   console.log(\"code2: \", code);\r\n        // }, 10);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <SModal\r\n      size=\"xl\"\r\n      title=\"预览\"\r\n      visible={visible}\r\n      handleOk={handleOk}\r\n      handleClose={handleClose}\r\n      fullWidth={true}\r\n      height={800}\r\n      hideFooter={true}\r\n    >\r\n      <SelfIframe src={url}></SelfIframe>\r\n    </SModal>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n"],"names":["SelfPaper","styled","Paper","theme","border","p","display","alignItems","width","height","boxShadow","borderRadius","SearchPane","justifyContent","padding","background","color","cursor","QueryPane","props","value","setValue","useState","handleClick","search","sx","ml","flex","placeholder","onChange","e","target","onKeyUp","keyCode","onClick","BootstrapDialog","Dialog","spacing","BootstrapDialogTitle","children","onClose","other","m","position","right","top","palette","grey","PaperComponent","handle","cancel","title","visible","size","header","footer","fullWidth","hideFooter","handleOk","handleClose","closeMethod","open","maxWidth","id","dividers","total","pagenation","onPageChange","onRowsPerPageChange","pageNum","pageSize","pageSizeOptions","rowsPerPageOptions","component","count","rowsPerPage","page","event","newPage","labelRowsPerPage","labelDisplayedRows","from","to","Math","ceil","SelfCard","Card","zIndex","bottom","fontSize","left","fontFamily","fontWeight","margin","CardIcon","FooterMenu","ActionMenu","ButtonPane","SelfIconButton","IconButton","defaultFormat","name","createdTime","updatedTime","img","key","dataItem","dataIndex","keyFormat","menuList","moreList","doubleClick","menuClick","getTitle","menuItem","type","format","className","CardContent","userSelect","clickCard","item","index","real_type","SIcon","icon","Typography","align","variant","overflow","textOverflow","whiteSpace","style","marginRight","product_name","marginTop","score","validateImage","commonStore","src","Date","getTime","create_at","renderItem","CardPane","flexWrap","gridTemplateColumns","gridGap","maxHeight","paddingBottom","NoData","textAlign","dataSource","ipagenation","handleChangePage","handleChangeRowsPerPage","SPagination","length","Label","Input","TextField","materialRef","onOk","setVisible","setName","currentObj","setCurrentObj","useImperativeHandle","record","real_code","useEffect","SModal","formData","postAction","then","res","message","Grid","container","xs","SlefBox","Box","Purchased","setDataSource","categoryList","setCategoryList","label","tabValue","setTabValue","setIpagenation","setTotal","inputValue","setInputValue","previewURL","setPreviewURL","previewRef","useRef","navigate","useNavigate","url","getList","params","Current","Size","category","getAction","list","data","catch","err","previewMethod","current","product_code","Tabs","obj","Tab","val","Preview","SelfIframe","code","respFuc","previewChannel"],"sourceRoot":""}