{"version":3,"file":"js/vender~5c5cea4e.028a5410.js","mappings":"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,EAAsBztB,EAAOsB,UAAUksB,UAAUptB,KAAKC,MAE1D,OADAotB,EAAoBC,WAAa,gCAC1BD,GAEXif,EAAsBprC,UAAU0R,aAAe,WAC3C,MAAO,yBAGX05B,EAAsB/e,MAAQ,SAAUxa,EAAQqP,EAAOoL,GACnD,OAAO,YAA0B,WAAc,OAAO,IAAI8e,EAAsBv5B,EAAOlT,KAAMuiB,KAAWrP,EAAQqP,EAAOoL,IAK3H8e,EAAsB4D,0BAA4B,6EAClD,QAAW,EACP,WACD5D,EAAsBprC,UAAW,cAAU,IAC9C,QAAW,EACP,WACDorC,EAAsBprC,UAAW,kBAAc,IAClD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,yBAAqB,IACzD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,iBAAa,IACjD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,wBAAoB,IACxD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,qBAAiB,IACrD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,sBAAkB,IACtD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,wBAAoB,IACxD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,yBAAqB,IACzD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,oBAAgB,IACpD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,mBAAe,IACnD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,mBAAe,IACnD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,oBAAgB,IACpD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,gBAAY,IAChD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,cAAU,IAC9C,QAAW,EACP,WACDorC,EAAsBprC,UAAW,uBAAmB,IACvD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,cAAU,IAC9C,QAAW,EACP,WACDorC,EAAsBprC,UAAW,gBAAY,IAChD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,iBAAa,IACjD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,iBAAa,IACjD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,kBAAc,IAClD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,yBAAqB,IACzD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,0BAAsB,IAC1D,QAAW,EACP,WACDorC,EAAsBprC,UAAW,kBAAc,IAClD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,oBAAgB,IACpD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,mBAAe,IACnD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,aAAS,IAC7C,QAAW,EACP,WACDorC,EAAsBprC,UAAW,gBAAY,IAChD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,oBAAgB,IACpD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,mBAAe,IACnD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,oBAAgB,IACpD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,aAAS,IAC7C,QAAW,EACP,WACDorC,EAAsBprC,UAAW,YAAQ,IAC5C,QAAW,EACP,WACDorC,EAAsBprC,UAAW,eAAW,IAC/C,QAAW,EACP,WACDorC,EAAsBprC,UAAW,gBAAY,IAChD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,gBAAY,IAChD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,uBAAmB,IACvD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,kBAAc,IAClD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,oBAAgB,IACpD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,qBAAiB,IACrD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,oBAAgB,IACpD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,mBAAe,IACnD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,wBAAoB,IACxD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,uBAAmB,IACvD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,sBAAkB,IACtD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,iBAAa,IACjD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,gBAAY,IAChD,QAAW,EACP,WACDorC,EAAsBprC,UAAW,qBAAiB,IACrD,QAAW,EACP,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","sources":["webpack:///../../../node_modules/@babylonjs/gui/2D/controls/textBlock.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/textWrapper.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/toggleButton.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/virtualKeyboard.js","webpack:///../../../node_modules/@babylonjs/gui/2D/math2D.js","webpack:///../../../node_modules/@babylonjs/gui/2D/measure.js","webpack:///../../../node_modules/@babylonjs/gui/2D/multiLinePoint.js","webpack:///../../../node_modules/@babylonjs/gui/2D/style.js","webpack:///../../../node_modules/@babylonjs/gui/2D/valueAndUnit.js","webpack:///../../../node_modules/@babylonjs/gui/2D/xmlLoader.js","webpack:///../../../node_modules/@babylonjs/gui/3D/vector3WithInfo.js","webpack:///../../../node_modules/@babylonjs/gui/3D/controls/control3D.js","webpack:///../../../node_modules/@babylonjs/gui/3D/controls/contentDisplay3D.js","webpack:///../../../node_modules/@babylonjs/gui/3D/controls/abstractButton3D.js","webpack:///../../../node_modules/@babylonjs/gui/3D/controls/button3D.js","webpack:///../../../node_modules/@babylonjs/gui/3D/controls/container3D.js","webpack:///../../../node_modules/@babylonjs/gui/3D/controls/volumeBasedPanel.js","webpack:///../../../node_modules/@babylonjs/gui/3D/controls/cylinderPanel.js","webpack:///../../../node_modules/@babylonjs/gui/3D/materials/fluent/shaders/fluent.vertex.js","webpack:///../../../node_modules/@babylonjs/gui/3D/materials/fluent/shaders/fluent.fragment.js","webpack:///../../../node_modules/@babylonjs/gui/3D/materials/fluent/fluentMaterial.js","webpack:///../../../node_modules/@babylonjs/gui/3D/controls/holographicButton.js","webpack:///../../../node_modules/@babylonjs/gui/3D/materials/fluentButton/shaders/fluentButton.fragment.js","webpack:///../../../node_modules/@babylonjs/gui/3D/materials/fluentButton/shaders/fluentButton.vertex.js","webpack:///../../../node_modules/@babylonjs/gui/3D/materials/fluentButton/fluentButtonMaterial.js","webpack:///../../../node_modules/@babylonjs/gui/3D/controls/touchButton3D.js","webpack:///../../../node_modules/@babylonjs/gui/3D/controls/touchHolographicButton.js","webpack:///../../../node_modules/@babylonjs/gui/3D/behaviors/defaultBehavior.js","webpack:///../../../node_modules/@babylonjs/gui/3D/materials/handle/shaders/handle.vertex.js","webpack:///../../../node_modules/@babylonjs/gui/3D/materials/handle/shaders/handle.fragment.js","webpack:///../../../node_modules/@babylonjs/gui/3D/gizmos/gizmoHandle.js","webpack:///../../../node_modules/@babylonjs/gui/3D/materials/handle/handleMaterial.js","webpack:///../../../node_modules/@babylonjs/gui/3D/gizmos/slateGizmo.js","webpack:///../../../node_modules/@babylonjs/gui/3D/materials/fluentBackplate/shaders/fluentBackplate.fragment.js","webpack:///../../../node_modules/@babylonjs/gui/3D/materials/fluentBackplate/shaders/fluentBackplate.vertex.js","webpack:///../../../node_modules/@babylonjs/gui/3D/materials/fluentBackplate/fluentBackplateMaterial.js","webpack:///../../../node_modules/@babylonjs/gui/3D/controls/holographicSlate.js","webpack:///../../../node_modules/@babylonjs/gui/3D/controls/touchHolographicMenu.js","webpack:///../../../node_modules/@babylonjs/gui/3D/controls/handMenu.js","webpack:///../../../node_modules/@babylonjs/gui/3D/controls/meshButton3D.js","webpack:///../../../node_modules/@babylonjs/gui/3D/controls/nearMenu.js","webpack:///../../../node_modules/@babylonjs/gui/3D/controls/planePanel.js","webpack:///../../../node_modules/@babylonjs/gui/3D/controls/scatterPanel.js","webpack:///../../../node_modules/@babylonjs/gui/3D/materials/mrdl/shaders/mrdlSliderBar.fragment.js","webpack:///../../../node_modules/@babylonjs/gui/3D/materials/mrdl/shaders/mrdlSliderBar.vertex.js","webpack:///../../../node_modules/@babylonjs/gui/3D/materials/mrdl/mrdlSliderBarMaterial.js","webpack:///../../../node_modules/@babylonjs/gui/3D/materials/mrdl/shaders/mrdlSliderThumb.fragment.js","webpack:///../../../node_modules/@babylonjs/gui/3D/materials/mrdl/shaders/mrdlSliderThumb.vertex.js","webpack:///../../../node_modules/@babylonjs/gui/3D/materials/mrdl/mrdlSliderThumbMaterial.js","webpack:///../../../node_modules/@babylonjs/gui/3D/materials/mrdl/shaders/mrdlBackplate.fragment.js","webpack:///../../../node_modules/@babylonjs/gui/3D/materials/mrdl/shaders/mrdlBackplate.vertex.js","webpack:///../../../node_modules/@babylonjs/gui/3D/materials/mrdl/mrdlBackplateMaterial.js","webpack:///../../../node_modules/@babylonjs/gui/3D/controls/slider3D.js","webpack:///../../../node_modules/@babylonjs/gui/3D/controls/spherePanel.js","webpack:///../../../node_modules/@babylonjs/gui/3D/controls/stackPanel3D.js","webpack:///../../../node_modules/@babylonjs/gui/3D/controls/touchMeshButton3D.js","webpack:///../../../node_modules/@babylonjs/gui/3D/controls/holographicBackplate.js","webpack:///../../../node_modules/@babylonjs/gui/3D/gui3DManager.js"],"sourcesContent":["import { __decorate, __extends } from \"tslib\";\nimport { Observable } from \"@babylonjs/core/Misc/observable.js\";\nimport { ValueAndUnit } from \"../valueAndUnit.js\";\nimport { Control } from \"./control.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { serialize } from \"@babylonjs/core/Misc/decorators.js\";\nimport { EngineStore } from \"@babylonjs/core/Engines/engineStore.js\";\n/**\n * Enum that determines the text-wrapping mode to use.\n */\nexport var TextWrapping;\n(function (TextWrapping) {\n    /**\n     * Clip the text when it's larger than Control.width; this is the default mode.\n     */\n    TextWrapping[TextWrapping[\"Clip\"] = 0] = \"Clip\";\n    /**\n     * Wrap the text word-wise, i.e. try to add line-breaks at word boundary to fit within Control.width.\n     */\n    TextWrapping[TextWrapping[\"WordWrap\"] = 1] = \"WordWrap\";\n    /**\n     * Ellipsize the text, i.e. shrink with trailing … when text is larger than Control.width.\n     */\n    TextWrapping[TextWrapping[\"Ellipsis\"] = 2] = \"Ellipsis\";\n    /**\n     * Wrap the text word-wise and clip the text when the text's height is larger than the Control.height, and shrink the last line with trailing … .\n     */\n    TextWrapping[TextWrapping[\"WordWrapEllipsis\"] = 3] = \"WordWrapEllipsis\";\n})(TextWrapping || (TextWrapping = {}));\n/**\n * Class used to create text block control\n */\nvar TextBlock = /** @class */ (function (_super) {\n    __extends(TextBlock, _super);\n    /**\n     * Creates a new TextBlock object\n     * @param name defines the name of the control\n     * @param text defines the text to display (empty string by default)\n     */\n    function TextBlock(\n    /**\n     * Defines the name of the control\n     */\n    name, text) {\n        if (text === void 0) { text = \"\"; }\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        _this._text = \"\";\n        _this._textWrapping = TextWrapping.Clip;\n        _this._textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\n        _this._textVerticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\n        _this._resizeToFit = false;\n        _this._lineSpacing = new ValueAndUnit(0);\n        _this._outlineWidth = 0;\n        _this._outlineColor = \"white\";\n        _this._underline = false;\n        _this._lineThrough = false;\n        _this._wordDivider = \" \";\n        /**\n         * An event triggered after the text is changed\n         */\n        _this.onTextChangedObservable = new Observable();\n        /**\n         * An event triggered after the text was broken up into lines\n         */\n        _this.onLinesReadyObservable = new Observable();\n        _this.text = text;\n        return _this;\n    }\n    Object.defineProperty(TextBlock.prototype, \"lines\", {\n        /**\n         * Return the line list (you may need to use the onLinesReadyObservable to make sure the list is ready)\n         */\n        get: function () {\n            return this._lines;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextBlock.prototype, \"resizeToFit\", {\n        /**\n         * Gets or sets an boolean indicating that the TextBlock will be resized to fit container\n         */\n        get: function () {\n            return this._resizeToFit;\n        },\n        /**\n         * Gets or sets an boolean indicating that the TextBlock will be resized to fit container\n         */\n        set: function (value) {\n            if (this._resizeToFit === value) {\n                return;\n            }\n            this._resizeToFit = value;\n            if (this._resizeToFit) {\n                this._width.ignoreAdaptiveScaling = true;\n                this._height.ignoreAdaptiveScaling = true;\n            }\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextBlock.prototype, \"textWrapping\", {\n        /**\n         * Gets or sets a boolean indicating if text must be wrapped\n         */\n        get: function () {\n            return this._textWrapping;\n        },\n        /**\n         * Gets or sets a boolean indicating if text must be wrapped\n         */\n        set: function (value) {\n            if (this._textWrapping === value) {\n                return;\n            }\n            this._textWrapping = +value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextBlock.prototype, \"text\", {\n        /**\n         * Gets or sets text to display\n         */\n        get: function () {\n            return this._text;\n        },\n        /**\n         * Gets or sets text to display\n         */\n        set: function (value) {\n            if (this._text === value) {\n                return;\n            }\n            this._text = value + \"\"; // Making sure it is a text\n            this._markAsDirty();\n            this.onTextChangedObservable.notifyObservers(this);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextBlock.prototype, \"textHorizontalAlignment\", {\n        /**\n         * Gets or sets text horizontal alignment (BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_CENTER by default)\n         */\n        get: function () {\n            return this._textHorizontalAlignment;\n        },\n        /**\n         * Gets or sets text horizontal alignment (BABYLON.GUI.Control.HORIZONTAL_ALIGNMENT_CENTER by default)\n         */\n        set: function (value) {\n            if (this._textHorizontalAlignment === value) {\n                return;\n            }\n            this._textHorizontalAlignment = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextBlock.prototype, \"textVerticalAlignment\", {\n        /**\n         * Gets or sets text vertical alignment (BABYLON.GUI.Control.VERTICAL_ALIGNMENT_CENTER by default)\n         */\n        get: function () {\n            return this._textVerticalAlignment;\n        },\n        /**\n         * Gets or sets text vertical alignment (BABYLON.GUI.Control.VERTICAL_ALIGNMENT_CENTER by default)\n         */\n        set: function (value) {\n            if (this._textVerticalAlignment === value) {\n                return;\n            }\n            this._textVerticalAlignment = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextBlock.prototype, \"lineSpacing\", {\n        /**\n         * Gets or sets line spacing value\n         */\n        get: function () {\n            return this._lineSpacing.toString(this._host);\n        },\n        /**\n         * Gets or sets line spacing value\n         */\n        set: function (value) {\n            if (this._lineSpacing.fromString(value)) {\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextBlock.prototype, \"outlineWidth\", {\n        /**\n         * Gets or sets outlineWidth of the text to display\n         */\n        get: function () {\n            return this._outlineWidth;\n        },\n        /**\n         * Gets or sets outlineWidth of the text to display\n         */\n        set: function (value) {\n            if (this._outlineWidth === value) {\n                return;\n            }\n            this._outlineWidth = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextBlock.prototype, \"underline\", {\n        /**\n         * Gets or sets a boolean indicating that text must have underline\n         */\n        get: function () {\n            return this._underline;\n        },\n        /**\n         * Gets or sets a boolean indicating that text must have underline\n         */\n        set: function (value) {\n            if (this._underline === value) {\n                return;\n            }\n            this._underline = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextBlock.prototype, \"lineThrough\", {\n        /**\n         * Gets or sets an boolean indicating that text must be crossed out\n         */\n        get: function () {\n            return this._lineThrough;\n        },\n        /**\n         * Gets or sets an boolean indicating that text must be crossed out\n         */\n        set: function (value) {\n            if (this._lineThrough === value) {\n                return;\n            }\n            this._lineThrough = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextBlock.prototype, \"outlineColor\", {\n        /**\n         * Gets or sets outlineColor of the text to display\n         */\n        get: function () {\n            return this._outlineColor;\n        },\n        /**\n         * Gets or sets outlineColor of the text to display\n         */\n        set: function (value) {\n            if (this._outlineColor === value) {\n                return;\n            }\n            this._outlineColor = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextBlock.prototype, \"wordDivider\", {\n        /**\n         * Gets or sets word divider\n         */\n        get: function () {\n            return this._wordDivider;\n        },\n        /**\n         * Gets or sets word divider\n         */\n        set: function (value) {\n            if (this._wordDivider === value) {\n                return;\n            }\n            this._wordDivider = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TextBlock.prototype._getTypeName = function () {\n        return \"TextBlock\";\n    };\n    TextBlock.prototype._processMeasures = function (parentMeasure, context) {\n        if (!this._fontOffset || this.isDirty) {\n            this._fontOffset = Control._GetFontOffset(context.font);\n        }\n        _super.prototype._processMeasures.call(this, parentMeasure, context);\n        // Prepare lines\n        this._lines = this._breakLines(this._currentMeasure.width, this._currentMeasure.height, context);\n        this.onLinesReadyObservable.notifyObservers(this);\n        var maxLineWidth = 0;\n        for (var i = 0; i < this._lines.length; i++) {\n            var line = this._lines[i];\n            if (line.width > maxLineWidth) {\n                maxLineWidth = line.width;\n            }\n        }\n        if (this._resizeToFit) {\n            if (this._textWrapping === TextWrapping.Clip) {\n                var newWidth = (this._paddingLeftInPixels + this._paddingRightInPixels + maxLineWidth) | 0;\n                if (newWidth !== this._width.internalValue) {\n                    this._width.updateInPlace(newWidth, ValueAndUnit.UNITMODE_PIXEL);\n                    this._rebuildLayout = true;\n                }\n            }\n            var newHeight = (this._paddingTopInPixels + this._paddingBottomInPixels + this._fontOffset.height * this._lines.length) | 0;\n            if (this._lines.length > 0 && this._lineSpacing.internalValue !== 0) {\n                var lineSpacing = 0;\n                if (this._lineSpacing.isPixel) {\n                    lineSpacing = this._lineSpacing.getValue(this._host);\n                }\n                else {\n                    lineSpacing = this._lineSpacing.getValue(this._host) * this._height.getValueInPixel(this._host, this._cachedParentMeasure.height);\n                }\n                newHeight += (this._lines.length - 1) * lineSpacing;\n            }\n            if (newHeight !== this._height.internalValue) {\n                this._height.updateInPlace(newHeight, ValueAndUnit.UNITMODE_PIXEL);\n                this._rebuildLayout = true;\n            }\n        }\n    };\n    TextBlock.prototype._drawText = function (text, textWidth, y, context) {\n        var width = this._currentMeasure.width;\n        var x = 0;\n        switch (this._textHorizontalAlignment) {\n            case Control.HORIZONTAL_ALIGNMENT_LEFT:\n                x = 0;\n                break;\n            case Control.HORIZONTAL_ALIGNMENT_RIGHT:\n                x = width - textWidth;\n                break;\n            case Control.HORIZONTAL_ALIGNMENT_CENTER:\n                x = (width - textWidth) / 2;\n                break;\n        }\n        if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n            context.shadowColor = this.shadowColor;\n            context.shadowBlur = this.shadowBlur;\n            context.shadowOffsetX = this.shadowOffsetX;\n            context.shadowOffsetY = this.shadowOffsetY;\n        }\n        if (this.outlineWidth) {\n            context.strokeText(text, this._currentMeasure.left + x, y);\n        }\n        context.fillText(text, this._currentMeasure.left + x, y);\n        if (this._underline) {\n            context.beginPath();\n            context.lineWidth = Math.round(this.fontSizeInPixels * 0.05);\n            context.moveTo(this._currentMeasure.left + x, y + 3);\n            context.lineTo(this._currentMeasure.left + x + textWidth, y + 3);\n            context.stroke();\n            context.closePath();\n        }\n        if (this._lineThrough) {\n            context.beginPath();\n            context.lineWidth = Math.round(this.fontSizeInPixels * 0.05);\n            context.moveTo(this._currentMeasure.left + x, y - this.fontSizeInPixels / 3);\n            context.lineTo(this._currentMeasure.left + x + textWidth, y - this.fontSizeInPixels / 3);\n            context.stroke();\n            context.closePath();\n        }\n    };\n    /**\n     * @param context\n     * @hidden\n     */\n    TextBlock.prototype._draw = function (context) {\n        context.save();\n        this._applyStates(context);\n        // Render lines\n        this._renderLines(context);\n        context.restore();\n    };\n    TextBlock.prototype._applyStates = function (context) {\n        _super.prototype._applyStates.call(this, context);\n        if (this.outlineWidth) {\n            context.lineWidth = this.outlineWidth;\n            context.strokeStyle = this.outlineColor;\n            context.lineJoin = \"miter\";\n            context.miterLimit = 2;\n        }\n    };\n    TextBlock.prototype._breakLines = function (refWidth, refHeight, context) {\n        var lines = [];\n        var _lines = this.text.split(\"\\n\");\n        if (this._textWrapping === TextWrapping.Ellipsis) {\n            for (var _i = 0, _lines_1 = _lines; _i < _lines_1.length; _i++) {\n                var _line = _lines_1[_i];\n                lines.push(this._parseLineEllipsis(_line, refWidth, context));\n            }\n        }\n        else if (this._textWrapping === TextWrapping.WordWrap) {\n            for (var _a = 0, _lines_2 = _lines; _a < _lines_2.length; _a++) {\n                var _line = _lines_2[_a];\n                lines.push.apply(lines, this._parseLineWordWrap(_line, refWidth, context));\n            }\n        }\n        else if (this._textWrapping === TextWrapping.WordWrapEllipsis) {\n            for (var _b = 0, _lines_3 = _lines; _b < _lines_3.length; _b++) {\n                var _line = _lines_3[_b];\n                lines.push.apply(lines, this._parseLineWordWrapEllipsis(_line, refWidth, refHeight, context));\n            }\n        }\n        else {\n            for (var _c = 0, _lines_4 = _lines; _c < _lines_4.length; _c++) {\n                var _line = _lines_4[_c];\n                lines.push(this._parseLine(_line, context));\n            }\n        }\n        return lines;\n    };\n    TextBlock.prototype._parseLine = function (line, context) {\n        if (line === void 0) { line = \"\"; }\n        return { text: line, width: this._getTextMetricsWidth(context.measureText(line)) };\n    };\n    //Calculate how many characters approximately we need to remove\n    TextBlock.prototype._getCharsToRemove = function (lineWidth, width, lineLength) {\n        var diff = lineWidth > width ? lineWidth - width : 0;\n        // This isn't exact unless the font is monospaced\n        var charWidth = lineWidth / lineLength;\n        var removeChars = Math.max(Math.floor(diff / charWidth), 1);\n        return removeChars;\n    };\n    TextBlock.prototype._parseLineEllipsis = function (line, width, context) {\n        if (line === void 0) { line = \"\"; }\n        var lineWidth = this._getTextMetricsWidth(context.measureText(line));\n        var removeChars = this._getCharsToRemove(lineWidth, width, line.length);\n        // unicode support. split('') does not work with unicode!\n        // make sure Array.from is available\n        var characters = Array.from && Array.from(line);\n        if (!characters) {\n            // no array.from, use the old method\n            while (line.length > 2 && lineWidth > width) {\n                line = line.slice(0, -removeChars);\n                lineWidth = this._getTextMetricsWidth(context.measureText(line + \"…\"));\n                removeChars = this._getCharsToRemove(lineWidth, width, line.length);\n            }\n            // Add on the end\n            line += \"…\";\n        }\n        else {\n            while (characters.length && lineWidth > width) {\n                characters.splice(characters.length - removeChars, removeChars);\n                line = \"\".concat(characters.join(\"\"), \"\\u2026\");\n                lineWidth = this._getTextMetricsWidth(context.measureText(line));\n                removeChars = this._getCharsToRemove(lineWidth, width, line.length);\n            }\n        }\n        return { text: line, width: lineWidth };\n    };\n    TextBlock.prototype._getTextMetricsWidth = function (textMetrics) {\n        if (textMetrics.actualBoundingBoxLeft !== undefined) {\n            return Math.abs(textMetrics.actualBoundingBoxLeft) + Math.abs(textMetrics.actualBoundingBoxRight);\n        }\n        return textMetrics.width;\n    };\n    TextBlock.prototype._parseLineWordWrap = function (line, width, context) {\n        if (line === void 0) { line = \"\"; }\n        var lines = [];\n        var words = this.wordSplittingFunction ? this.wordSplittingFunction(line) : line.split(this._wordDivider);\n        var lineWidth = this._getTextMetricsWidth(context.measureText(line));\n        for (var n = 0; n < words.length; n++) {\n            var testLine = n > 0 ? line + this._wordDivider + words[n] : words[0];\n            var testWidth = this._getTextMetricsWidth(context.measureText(testLine));\n            if (testWidth > width && n > 0) {\n                lines.push({ text: line, width: lineWidth });\n                line = words[n];\n                lineWidth = this._getTextMetricsWidth(context.measureText(line));\n            }\n            else {\n                lineWidth = testWidth;\n                line = testLine;\n            }\n        }\n        lines.push({ text: line, width: lineWidth });\n        return lines;\n    };\n    TextBlock.prototype._parseLineWordWrapEllipsis = function (line, width, height, context) {\n        if (line === void 0) { line = \"\"; }\n        var lines = this._parseLineWordWrap(line, width, context);\n        for (var n = 1; n <= lines.length; n++) {\n            var currentHeight = this._computeHeightForLinesOf(n);\n            if (currentHeight > height && n > 1) {\n                var lastLine = lines[n - 2];\n                var currentLine = lines[n - 1];\n                lines[n - 2] = this._parseLineEllipsis(\"\".concat(lastLine.text + currentLine.text), width, context);\n                var linesToRemove = lines.length - n + 1;\n                for (var i = 0; i < linesToRemove; i++) {\n                    lines.pop();\n                }\n                return lines;\n            }\n        }\n        return lines;\n    };\n    TextBlock.prototype._renderLines = function (context) {\n        if (!this._fontOffset) {\n            return;\n        }\n        var height = this._currentMeasure.height;\n        var rootY = 0;\n        switch (this._textVerticalAlignment) {\n            case Control.VERTICAL_ALIGNMENT_TOP:\n                rootY = this._fontOffset.ascent;\n                break;\n            case Control.VERTICAL_ALIGNMENT_BOTTOM:\n                rootY = height - this._fontOffset.height * (this._lines.length - 1) - this._fontOffset.descent;\n                break;\n            case Control.VERTICAL_ALIGNMENT_CENTER:\n                rootY = this._fontOffset.ascent + (height - this._fontOffset.height * this._lines.length) / 2;\n                break;\n        }\n        rootY += this._currentMeasure.top;\n        for (var i = 0; i < this._lines.length; i++) {\n            var line = this._lines[i];\n            if (i !== 0 && this._lineSpacing.internalValue !== 0) {\n                if (this._lineSpacing.isPixel) {\n                    rootY += this._lineSpacing.getValue(this._host);\n                }\n                else {\n                    rootY = rootY + this._lineSpacing.getValue(this._host) * this._height.getValueInPixel(this._host, this._cachedParentMeasure.height);\n                }\n            }\n            this._drawText(line.text, line.width, rootY, context);\n            rootY += this._fontOffset.height;\n        }\n    };\n    TextBlock.prototype._computeHeightForLinesOf = function (lineCount) {\n        var newHeight = this._paddingTopInPixels + this._paddingBottomInPixels + this._fontOffset.height * lineCount;\n        if (lineCount > 0 && this._lineSpacing.internalValue !== 0) {\n            var lineSpacing = 0;\n            if (this._lineSpacing.isPixel) {\n                lineSpacing = this._lineSpacing.getValue(this._host);\n            }\n            else {\n                lineSpacing = this._lineSpacing.getValue(this._host) * this._height.getValueInPixel(this._host, this._cachedParentMeasure.height);\n            }\n            newHeight += (lineCount - 1) * lineSpacing;\n        }\n        return newHeight;\n    };\n    /**\n     * Given a width constraint applied on the text block, find the expected height\n     * @returns expected height\n     */\n    TextBlock.prototype.computeExpectedHeight = function () {\n        var _a;\n        if (this.text && this.widthInPixels) {\n            // Should abstract platform instead of using LastCreatedEngine\n            var context_1 = (_a = EngineStore.LastCreatedEngine) === null || _a === void 0 ? void 0 : _a.createCanvas(0, 0).getContext(\"2d\");\n            if (context_1) {\n                this._applyStates(context_1);\n                if (!this._fontOffset) {\n                    this._fontOffset = Control._GetFontOffset(context_1.font);\n                }\n                var lines = this._lines\n                    ? this._lines\n                    : this._breakLines(this.widthInPixels - this._paddingLeftInPixels - this._paddingRightInPixels, this.heightInPixels - this._paddingTopInPixels - this._paddingBottomInPixels, context_1);\n                return this._computeHeightForLinesOf(lines.length);\n            }\n        }\n        return 0;\n    };\n    TextBlock.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.onTextChangedObservable.clear();\n    };\n    __decorate([\n        serialize()\n    ], TextBlock.prototype, \"resizeToFit\", null);\n    __decorate([\n        serialize()\n    ], TextBlock.prototype, \"textWrapping\", null);\n    __decorate([\n        serialize()\n    ], TextBlock.prototype, \"text\", null);\n    __decorate([\n        serialize()\n    ], TextBlock.prototype, \"textHorizontalAlignment\", null);\n    __decorate([\n        serialize()\n    ], TextBlock.prototype, \"textVerticalAlignment\", null);\n    __decorate([\n        serialize()\n    ], TextBlock.prototype, \"lineSpacing\", null);\n    __decorate([\n        serialize()\n    ], TextBlock.prototype, \"outlineWidth\", null);\n    __decorate([\n        serialize()\n    ], TextBlock.prototype, \"underline\", null);\n    __decorate([\n        serialize()\n    ], TextBlock.prototype, \"lineThrough\", null);\n    __decorate([\n        serialize()\n    ], TextBlock.prototype, \"outlineColor\", null);\n    __decorate([\n        serialize()\n    ], TextBlock.prototype, \"wordDivider\", null);\n    return TextBlock;\n}(Control));\nexport { TextBlock };\nRegisterClass(\"BABYLON.GUI.TextBlock\", TextBlock);\n//# sourceMappingURL=textBlock.js.map","import { __spreadArray } from \"tslib\";\n/** @hidden */\nvar TextWrapper = /** @class */ (function () {\n    function TextWrapper() {\n    }\n    Object.defineProperty(TextWrapper.prototype, \"text\", {\n        get: function () {\n            return this._characters ? this._characters.join(\"\") : this._text;\n        },\n        set: function (txt) {\n            this._text = txt;\n            this._characters = Array.from && Array.from(txt);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextWrapper.prototype, \"length\", {\n        get: function () {\n            return this._characters ? this._characters.length : this._text.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TextWrapper.prototype.removePart = function (idxStart, idxEnd, insertTxt) {\n        var _a;\n        this._text = this._text.slice(0, idxStart) + (insertTxt ? insertTxt : \"\") + this._text.slice(idxEnd);\n        if (this._characters) {\n            var newCharacters = insertTxt ? Array.from(insertTxt) : [];\n            (_a = this._characters).splice.apply(_a, __spreadArray([idxStart, idxEnd - idxStart], newCharacters, false));\n        }\n    };\n    TextWrapper.prototype.charAt = function (idx) {\n        return this._characters ? this._characters[idx] : this._text.charAt(idx);\n    };\n    TextWrapper.prototype.substr = function (from, length) {\n        if (this._characters) {\n            if (isNaN(from)) {\n                from = 0;\n            }\n            else if (from >= 0) {\n                from = Math.min(from, this._characters.length);\n            }\n            else {\n                from = this._characters.length + Math.max(from, -this._characters.length);\n            }\n            if (length === undefined) {\n                length = this._characters.length - from;\n            }\n            else if (isNaN(length)) {\n                length = 0;\n            }\n            else if (length < 0) {\n                length = 0;\n            }\n            var temp = [];\n            while (--length >= 0) {\n                temp[length] = this._characters[from + length];\n            }\n            return temp.join(\"\");\n        }\n        return this._text.substr(from, length);\n    };\n    TextWrapper.prototype.substring = function (from, to) {\n        if (this._characters) {\n            if (isNaN(from)) {\n                from = 0;\n            }\n            else if (from > this._characters.length) {\n                from = this._characters.length;\n            }\n            else if (from < 0) {\n                from = 0;\n            }\n            if (to === undefined) {\n                to = this._characters.length;\n            }\n            else if (isNaN(to)) {\n                to = 0;\n            }\n            else if (to > this._characters.length) {\n                to = this._characters.length;\n            }\n            else if (to < 0) {\n                to = 0;\n            }\n            var temp = [];\n            var idx = 0;\n            while (from < to) {\n                temp[idx++] = this._characters[from++];\n            }\n            return temp.join(\"\");\n        }\n        return this._text.substring(from, to);\n    };\n    TextWrapper.prototype.isWord = function (index) {\n        var rWord = /\\w/g;\n        return this._characters ? this._characters[index].search(rWord) !== -1 : this._text.search(rWord) !== -1;\n    };\n    return TextWrapper;\n}());\nexport { TextWrapper };\n//# sourceMappingURL=textWrapper.js.map","import { __extends } from \"tslib\";\nimport { Observable } from \"@babylonjs/core/Misc/observable.js\";\nimport { Rectangle } from \"./rectangle.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\n/**\n * Class used to create toggle buttons\n * @since 5.0.0\n */\nvar ToggleButton = /** @class */ (function (_super) {\n    __extends(ToggleButton, _super);\n    /**\n     * Creates a new ToggleButton\n     * @param name defines the control name\n     * @param group defines the toggle group this toggle belongs to\n     */\n    function ToggleButton(name, group) {\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        /** Observable raised when isActive is changed */\n        _this.onIsActiveChangedObservable = new Observable();\n        /**\n         * Gets or sets a boolean indicating that the toggle button will let internal controls handle picking instead of doing it directly using its bounding info\n         */\n        _this.delegatePickingToChildren = false;\n        _this._isActive = false;\n        _this.group = group !== null && group !== void 0 ? group : \"\";\n        _this.thickness = 0;\n        _this.isPointerBlocker = true;\n        var alphaStore = null;\n        _this.toActiveAnimation = function () {\n            _this.thickness = 1;\n        };\n        _this.toInactiveAnimation = function () {\n            _this.thickness = 0;\n        };\n        _this.pointerEnterActiveAnimation = function () {\n            alphaStore = _this.alpha;\n            _this.alpha -= 0.1;\n        };\n        _this.pointerOutActiveAnimation = function () {\n            if (alphaStore !== null) {\n                _this.alpha = alphaStore;\n            }\n        };\n        _this.pointerDownActiveAnimation = function () {\n            _this.scaleX -= 0.05;\n            _this.scaleY -= 0.05;\n        };\n        _this.pointerUpActiveAnimation = function () {\n            _this.scaleX += 0.05;\n            _this.scaleY += 0.05;\n        };\n        _this.pointerEnterInactiveAnimation = function () {\n            alphaStore = _this.alpha;\n            _this.alpha -= 0.1;\n        };\n        _this.pointerOutInactiveAnimation = function () {\n            if (alphaStore !== null) {\n                _this.alpha = alphaStore;\n            }\n        };\n        _this.pointerDownInactiveAnimation = function () {\n            _this.scaleX -= 0.05;\n            _this.scaleY -= 0.05;\n        };\n        _this.pointerUpInactiveAnimation = function () {\n            _this.scaleX += 0.05;\n            _this.scaleY += 0.05;\n        };\n        return _this;\n    }\n    Object.defineProperty(ToggleButton.prototype, \"group\", {\n        /** Gets or sets group name this toggle button belongs to */\n        get: function () {\n            return this._group;\n        },\n        set: function (value) {\n            if (this._group === value) {\n                return;\n            }\n            this._group = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ToggleButton.prototype, \"isActive\", {\n        /** Gets or sets a boolean indicating if the toggle button is active or not */\n        get: function () {\n            return this._isActive;\n        },\n        set: function (value) {\n            var _this = this;\n            var _a, _b;\n            // Function modeled after radioButton.ts\n            if (this._isActive === value) {\n                return;\n            }\n            this._isActive = value;\n            // Update the visual state based on the new value\n            if (this._isActive) {\n                (_a = this.toActiveAnimation) === null || _a === void 0 ? void 0 : _a.call(this);\n            }\n            else {\n                (_b = this.toInactiveAnimation) === null || _b === void 0 ? void 0 : _b.call(this);\n            }\n            this._markAsDirty();\n            this.onIsActiveChangedObservable.notifyObservers(value);\n            if (this._isActive && this._host && this._group) {\n                // A toggle button in a group can only have 1 active element at a given time.\n                // If this toggle button has a group, set other toggle buttons in the group to inactive.\n                this._host.executeOnAllControls(function (control) {\n                    // Check for control type ToggleButton\n                    if (control.typeName === \"ToggleButton\") {\n                        // Don't do anything to this toggle button\n                        if (control === _this) {\n                            return;\n                        }\n                        var childToggle = control;\n                        // If toggle button is in same group, set isActive to false\n                        if (childToggle.group === _this.group) {\n                            childToggle.isActive = false;\n                        }\n                    }\n                });\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ToggleButton.prototype._getTypeName = function () {\n        return \"ToggleButton\";\n    };\n    // While being a container, the toggle button behaves like a control.\n    /**\n     * @param x\n     * @param y\n     * @param pi\n     * @param type\n     * @param pointerId\n     * @param buttonIndex\n     * @param deltaX\n     * @param deltaY\n     * @hidden\n     */\n    ToggleButton.prototype._processPicking = function (x, y, pi, type, pointerId, buttonIndex, deltaX, deltaY) {\n        if (!this._isEnabled || !this.isHitTestVisible || !this.isVisible || this.notRenderable) {\n            return false;\n        }\n        if (!_super.prototype.contains.call(this, x, y)) {\n            return false;\n        }\n        if (this.delegatePickingToChildren) {\n            var contains = false;\n            for (var index = this._children.length - 1; index >= 0; index--) {\n                var child = this._children[index];\n                if (child.isEnabled && child.isHitTestVisible && child.isVisible && !child.notRenderable && child.contains(x, y)) {\n                    contains = true;\n                    break;\n                }\n            }\n            if (!contains) {\n                return false;\n            }\n        }\n        this._processObservables(type, x, y, pi, pointerId, buttonIndex, deltaX, deltaY);\n        return true;\n    };\n    /**\n     * @param target\n     * @param pi\n     * @hidden\n     */\n    ToggleButton.prototype._onPointerEnter = function (target, pi) {\n        if (!_super.prototype._onPointerEnter.call(this, target, pi)) {\n            return false;\n        }\n        if (this.isReadOnly) {\n            return true;\n        }\n        if (this._isActive) {\n            if (this.pointerEnterActiveAnimation) {\n                this.pointerEnterActiveAnimation();\n            }\n        }\n        else {\n            if (this.pointerEnterInactiveAnimation) {\n                this.pointerEnterInactiveAnimation();\n            }\n        }\n        return true;\n    };\n    /**\n     * @param target\n     * @param pi\n     * @param force\n     * @hidden\n     */\n    ToggleButton.prototype._onPointerOut = function (target, pi, force) {\n        if (force === void 0) { force = false; }\n        if (!this.isReadOnly) {\n            if (this._isActive) {\n                if (this.pointerOutActiveAnimation) {\n                    this.pointerOutActiveAnimation();\n                }\n            }\n            else {\n                if (this.pointerOutInactiveAnimation) {\n                    this.pointerOutInactiveAnimation();\n                }\n            }\n        }\n        _super.prototype._onPointerOut.call(this, target, pi, force);\n    };\n    /**\n     * @param target\n     * @param coordinates\n     * @param pointerId\n     * @param buttonIndex\n     * @param pi\n     * @hidden\n     */\n    ToggleButton.prototype._onPointerDown = function (target, coordinates, pointerId, buttonIndex, pi) {\n        if (!_super.prototype._onPointerDown.call(this, target, coordinates, pointerId, buttonIndex, pi)) {\n            return false;\n        }\n        if (this.isReadOnly) {\n            return true;\n        }\n        if (this._isActive) {\n            if (this.pointerDownActiveAnimation) {\n                this.pointerDownActiveAnimation();\n            }\n        }\n        else {\n            if (this.pointerDownInactiveAnimation) {\n                this.pointerDownInactiveAnimation();\n            }\n        }\n        return true;\n    };\n    /**\n     * @param target\n     * @param coordinates\n     * @param pointerId\n     * @param buttonIndex\n     * @param notifyClick\n     * @param pi\n     * @hidden\n     */\n    ToggleButton.prototype._onPointerUp = function (target, coordinates, pointerId, buttonIndex, notifyClick, pi) {\n        if (!this.isReadOnly) {\n            if (this._isActive) {\n                if (this.pointerUpActiveAnimation) {\n                    this.pointerUpActiveAnimation();\n                }\n            }\n            else {\n                if (this.pointerUpInactiveAnimation) {\n                    this.pointerUpInactiveAnimation();\n                }\n            }\n        }\n        _super.prototype._onPointerUp.call(this, target, coordinates, pointerId, buttonIndex, notifyClick, pi);\n    };\n    return ToggleButton;\n}(Rectangle));\nexport { ToggleButton };\nRegisterClass(\"BABYLON.GUI.ToggleButton\", ToggleButton);\n//# sourceMappingURL=toggleButton.js.map","import { __extends } from \"tslib\";\nimport { Observable } from \"@babylonjs/core/Misc/observable.js\";\nimport { StackPanel } from \"./stackPanel.js\";\nimport { Button } from \"./button.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\n/**\n * Class used to store key control properties\n */\nvar KeyPropertySet = /** @class */ (function () {\n    function KeyPropertySet() {\n    }\n    return KeyPropertySet;\n}());\nexport { KeyPropertySet };\n/**\n * Class used to create virtual keyboard\n */\nvar VirtualKeyboard = /** @class */ (function (_super) {\n    __extends(VirtualKeyboard, _super);\n    function VirtualKeyboard() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        /** Observable raised when a key is pressed */\n        _this.onKeyPressObservable = new Observable();\n        /** Gets or sets default key button width */\n        _this.defaultButtonWidth = \"40px\";\n        /** Gets or sets default key button height */\n        _this.defaultButtonHeight = \"40px\";\n        /** Gets or sets default key button left padding */\n        _this.defaultButtonPaddingLeft = \"2px\";\n        /** Gets or sets default key button right padding */\n        _this.defaultButtonPaddingRight = \"2px\";\n        /** Gets or sets default key button top padding */\n        _this.defaultButtonPaddingTop = \"2px\";\n        /** Gets or sets default key button bottom padding */\n        _this.defaultButtonPaddingBottom = \"2px\";\n        /** Gets or sets default key button foreground color */\n        _this.defaultButtonColor = \"#DDD\";\n        /** Gets or sets default key button background color */\n        _this.defaultButtonBackground = \"#070707\";\n        /** Gets or sets shift button foreground color */\n        _this.shiftButtonColor = \"#7799FF\";\n        /** Gets or sets shift button thickness*/\n        _this.selectedShiftThickness = 1;\n        /** Gets shift key state */\n        _this.shiftState = 0;\n        _this._currentlyConnectedInputText = null;\n        _this._connectedInputTexts = [];\n        _this._onKeyPressObserver = null;\n        return _this;\n    }\n    VirtualKeyboard.prototype._getTypeName = function () {\n        return \"VirtualKeyboard\";\n    };\n    VirtualKeyboard.prototype._createKey = function (key, propertySet) {\n        var _this = this;\n        var button = Button.CreateSimpleButton(key, key);\n        button.width = propertySet && propertySet.width ? propertySet.width : this.defaultButtonWidth;\n        button.height = propertySet && propertySet.height ? propertySet.height : this.defaultButtonHeight;\n        button.color = propertySet && propertySet.color ? propertySet.color : this.defaultButtonColor;\n        button.background = propertySet && propertySet.background ? propertySet.background : this.defaultButtonBackground;\n        button.paddingLeft = propertySet && propertySet.paddingLeft ? propertySet.paddingLeft : this.defaultButtonPaddingLeft;\n        button.paddingRight = propertySet && propertySet.paddingRight ? propertySet.paddingRight : this.defaultButtonPaddingRight;\n        button.paddingTop = propertySet && propertySet.paddingTop ? propertySet.paddingTop : this.defaultButtonPaddingTop;\n        button.paddingBottom = propertySet && propertySet.paddingBottom ? propertySet.paddingBottom : this.defaultButtonPaddingBottom;\n        button.thickness = 0;\n        button.isFocusInvisible = true;\n        button.shadowColor = this.shadowColor;\n        button.shadowBlur = this.shadowBlur;\n        button.shadowOffsetX = this.shadowOffsetX;\n        button.shadowOffsetY = this.shadowOffsetY;\n        button.onPointerUpObservable.add(function () {\n            _this.onKeyPressObservable.notifyObservers(key);\n        });\n        return button;\n    };\n    /**\n     * Adds a new row of keys\n     * @param keys defines the list of keys to add\n     * @param propertySets defines the associated property sets\n     */\n    VirtualKeyboard.prototype.addKeysRow = function (keys, propertySets) {\n        var panel = new StackPanel();\n        panel.isVertical = false;\n        panel.isFocusInvisible = true;\n        var maxKey = null;\n        for (var i = 0; i < keys.length; i++) {\n            var properties = null;\n            if (propertySets && propertySets.length === keys.length) {\n                properties = propertySets[i];\n            }\n            var key = this._createKey(keys[i], properties);\n            if (!maxKey || key.heightInPixels > maxKey.heightInPixels) {\n                maxKey = key;\n            }\n            panel.addControl(key);\n        }\n        panel.height = maxKey ? maxKey.height : this.defaultButtonHeight;\n        this.addControl(panel);\n    };\n    /**\n     * Set the shift key to a specific state\n     * @param shiftState defines the new shift state\n     */\n    VirtualKeyboard.prototype.applyShiftState = function (shiftState) {\n        if (!this.children) {\n            return;\n        }\n        for (var i = 0; i < this.children.length; i++) {\n            var row = this.children[i];\n            if (!row || !row.children) {\n                continue;\n            }\n            var rowContainer = row;\n            for (var j = 0; j < rowContainer.children.length; j++) {\n                var button = rowContainer.children[j];\n                if (!button || !button.children[0]) {\n                    continue;\n                }\n                var button_tblock = button.children[0];\n                if (button_tblock.text === \"\\u21E7\") {\n                    button.color = shiftState ? this.shiftButtonColor : this.defaultButtonColor;\n                    button.thickness = shiftState > 1 ? this.selectedShiftThickness : 0;\n                }\n                button_tblock.text = shiftState > 0 ? button_tblock.text.toUpperCase() : button_tblock.text.toLowerCase();\n            }\n        }\n    };\n    Object.defineProperty(VirtualKeyboard.prototype, \"connectedInputText\", {\n        /** Gets the input text control currently attached to the keyboard */\n        get: function () {\n            return this._currentlyConnectedInputText;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Connects the keyboard with an input text control\n     *\n     * @param input defines the target control\n     */\n    VirtualKeyboard.prototype.connect = function (input) {\n        var _this = this;\n        var inputTextAlreadyConnected = this._connectedInputTexts.some(function (a) { return a.input === input; });\n        if (inputTextAlreadyConnected) {\n            return;\n        }\n        if (this._onKeyPressObserver === null) {\n            this._onKeyPressObserver = this.onKeyPressObservable.add(function (key) {\n                if (!_this._currentlyConnectedInputText) {\n                    return;\n                }\n                _this._currentlyConnectedInputText._host.focusedControl = _this._currentlyConnectedInputText;\n                switch (key) {\n                    case \"\\u21E7\":\n                        _this.shiftState++;\n                        if (_this.shiftState > 2) {\n                            _this.shiftState = 0;\n                        }\n                        _this.applyShiftState(_this.shiftState);\n                        return;\n                    case \"\\u2190\":\n                        _this._currentlyConnectedInputText.processKey(8);\n                        return;\n                    case \"\\u21B5\":\n                        _this._currentlyConnectedInputText.processKey(13);\n                        return;\n                }\n                _this._currentlyConnectedInputText.processKey(-1, _this.shiftState ? key.toUpperCase() : key);\n                if (_this.shiftState === 1) {\n                    _this.shiftState = 0;\n                    _this.applyShiftState(_this.shiftState);\n                }\n            });\n        }\n        this.isVisible = false;\n        this._currentlyConnectedInputText = input;\n        input._connectedVirtualKeyboard = this;\n        // Events hooking\n        var onFocusObserver = input.onFocusObservable.add(function () {\n            _this._currentlyConnectedInputText = input;\n            input._connectedVirtualKeyboard = _this;\n            _this.isVisible = true;\n        });\n        var onBlurObserver = input.onBlurObservable.add(function () {\n            input._connectedVirtualKeyboard = null;\n            _this._currentlyConnectedInputText = null;\n            _this.isVisible = false;\n        });\n        this._connectedInputTexts.push({\n            input: input,\n            onBlurObserver: onBlurObserver,\n            onFocusObserver: onFocusObserver,\n        });\n    };\n    /**\n     * Disconnects the keyboard from connected InputText controls\n     *\n     * @param input optionally defines a target control, otherwise all are disconnected\n     */\n    VirtualKeyboard.prototype.disconnect = function (input) {\n        var _this = this;\n        if (input) {\n            // .find not available on IE\n            var filtered = this._connectedInputTexts.filter(function (a) { return a.input === input; });\n            if (filtered.length === 1) {\n                this._removeConnectedInputObservables(filtered[0]);\n                this._connectedInputTexts = this._connectedInputTexts.filter(function (a) { return a.input !== input; });\n                if (this._currentlyConnectedInputText === input) {\n                    this._currentlyConnectedInputText = null;\n                }\n            }\n        }\n        else {\n            this._connectedInputTexts.forEach(function (connectedInputText) {\n                _this._removeConnectedInputObservables(connectedInputText);\n            });\n            this._connectedInputTexts = [];\n        }\n        if (this._connectedInputTexts.length === 0) {\n            this._currentlyConnectedInputText = null;\n            this.onKeyPressObservable.remove(this._onKeyPressObserver);\n            this._onKeyPressObserver = null;\n        }\n    };\n    VirtualKeyboard.prototype._removeConnectedInputObservables = function (connectedInputText) {\n        connectedInputText.input._connectedVirtualKeyboard = null;\n        connectedInputText.input.onFocusObservable.remove(connectedInputText.onFocusObserver);\n        connectedInputText.input.onBlurObservable.remove(connectedInputText.onBlurObserver);\n    };\n    /**\n     * Release all resources\n     */\n    VirtualKeyboard.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.disconnect();\n    };\n    // Statics\n    /**\n     * Creates a new keyboard using a default layout\n     *\n     * @param name defines control name\n     * @returns a new VirtualKeyboard\n     */\n    VirtualKeyboard.CreateDefaultLayout = function (name) {\n        var returnValue = new VirtualKeyboard(name);\n        returnValue.addKeysRow([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"0\", \"\\u2190\"]);\n        returnValue.addKeysRow([\"q\", \"w\", \"e\", \"r\", \"t\", \"y\", \"u\", \"i\", \"o\", \"p\"]);\n        returnValue.addKeysRow([\"a\", \"s\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \";\", \"'\", \"\\u21B5\"]);\n        returnValue.addKeysRow([\"\\u21E7\", \"z\", \"x\", \"c\", \"v\", \"b\", \"n\", \"m\", \",\", \".\", \"/\"]);\n        returnValue.addKeysRow([\" \"], [{ width: \"200px\" }]);\n        return returnValue;\n    };\n    /**\n     * @param serializedObject\n     * @param host\n     * @hidden\n     */\n    VirtualKeyboard.prototype._parseFromContent = function (serializedObject, host) {\n        var _this = this;\n        _super.prototype._parseFromContent.call(this, serializedObject, host);\n        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n            var row = _a[_i];\n            if (row.getClassName() === \"StackPanel\") {\n                var stackPanel = row;\n                var _loop_1 = function (key) {\n                    if (key.getClassName() === \"Button\" && key.name) {\n                        key.onPointerUpObservable.add(function () {\n                            _this.onKeyPressObservable.notifyObservers(key.name);\n                        });\n                    }\n                };\n                for (var _b = 0, _c = stackPanel.children; _b < _c.length; _b++) {\n                    var key = _c[_b];\n                    _loop_1(key);\n                }\n            }\n        }\n    };\n    return VirtualKeyboard;\n}(StackPanel));\nexport { VirtualKeyboard };\nRegisterClass(\"BABYLON.GUI.VirtualKeyboard\", VirtualKeyboard);\n//# sourceMappingURL=virtualKeyboard.js.map","import { __extends } from \"tslib\";\nimport { Vector2 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { Epsilon } from \"@babylonjs/core/Maths/math.constants.js\";\n/**\n * Class used to transport Vector2 information for pointer events\n */\nvar Vector2WithInfo = /** @class */ (function (_super) {\n    __extends(Vector2WithInfo, _super);\n    /**\n     * Creates a new Vector2WithInfo\n     * @param source defines the vector2 data to transport\n     * @param buttonIndex defines the current mouse button index\n     */\n    function Vector2WithInfo(source, \n    /** defines the current mouse button index */\n    buttonIndex) {\n        if (buttonIndex === void 0) { buttonIndex = 0; }\n        var _this = _super.call(this, source.x, source.y) || this;\n        _this.buttonIndex = buttonIndex;\n        return _this;\n    }\n    return Vector2WithInfo;\n}(Vector2));\nexport { Vector2WithInfo };\n/** Class used to provide 2D matrix features */\nvar Matrix2D = /** @class */ (function () {\n    /**\n     * Creates a new matrix\n     * @param m00 defines value for (0, 0)\n     * @param m01 defines value for (0, 1)\n     * @param m10 defines value for (1, 0)\n     * @param m11 defines value for (1, 1)\n     * @param m20 defines value for (2, 0)\n     * @param m21 defines value for (2, 1)\n     */\n    function Matrix2D(m00, m01, m10, m11, m20, m21) {\n        /** Gets the internal array of 6 floats used to store matrix data */\n        this.m = new Float32Array(6);\n        this.fromValues(m00, m01, m10, m11, m20, m21);\n    }\n    /**\n     * Fills the matrix from direct values\n     * @param m00 defines value for (0, 0)\n     * @param m01 defines value for (0, 1)\n     * @param m10 defines value for (1, 0)\n     * @param m11 defines value for (1, 1)\n     * @param m20 defines value for (2, 0)\n     * @param m21 defines value for (2, 1)\n     * @returns the current modified matrix\n     */\n    Matrix2D.prototype.fromValues = function (m00, m01, m10, m11, m20, m21) {\n        this.m[0] = m00;\n        this.m[1] = m01;\n        this.m[2] = m10;\n        this.m[3] = m11;\n        this.m[4] = m20;\n        this.m[5] = m21;\n        return this;\n    };\n    /**\n     * Gets matrix determinant\n     * @returns the determinant\n     */\n    Matrix2D.prototype.determinant = function () {\n        return this.m[0] * this.m[3] - this.m[1] * this.m[2];\n    };\n    /**\n     * Inverses the matrix and stores it in a target matrix\n     * @param result defines the target matrix\n     * @returns the current matrix\n     */\n    Matrix2D.prototype.invertToRef = function (result) {\n        var l0 = this.m[0];\n        var l1 = this.m[1];\n        var l2 = this.m[2];\n        var l3 = this.m[3];\n        var l4 = this.m[4];\n        var l5 = this.m[5];\n        var det = this.determinant();\n        if (det < Epsilon * Epsilon) {\n            result.m[0] = 0;\n            result.m[1] = 0;\n            result.m[2] = 0;\n            result.m[3] = 0;\n            result.m[4] = 0;\n            result.m[5] = 0;\n            return this;\n        }\n        var detDiv = 1 / det;\n        var det4 = l2 * l5 - l3 * l4;\n        var det5 = l1 * l4 - l0 * l5;\n        result.m[0] = l3 * detDiv;\n        result.m[1] = -l1 * detDiv;\n        result.m[2] = -l2 * detDiv;\n        result.m[3] = l0 * detDiv;\n        result.m[4] = det4 * detDiv;\n        result.m[5] = det5 * detDiv;\n        return this;\n    };\n    /**\n     * Multiplies the current matrix with another one\n     * @param other defines the second operand\n     * @param result defines the target matrix\n     * @returns the current matrix\n     */\n    Matrix2D.prototype.multiplyToRef = function (other, result) {\n        var l0 = this.m[0];\n        var l1 = this.m[1];\n        var l2 = this.m[2];\n        var l3 = this.m[3];\n        var l4 = this.m[4];\n        var l5 = this.m[5];\n        var r0 = other.m[0];\n        var r1 = other.m[1];\n        var r2 = other.m[2];\n        var r3 = other.m[3];\n        var r4 = other.m[4];\n        var r5 = other.m[5];\n        result.m[0] = l0 * r0 + l1 * r2;\n        result.m[1] = l0 * r1 + l1 * r3;\n        result.m[2] = l2 * r0 + l3 * r2;\n        result.m[3] = l2 * r1 + l3 * r3;\n        result.m[4] = l4 * r0 + l5 * r2 + r4;\n        result.m[5] = l4 * r1 + l5 * r3 + r5;\n        return this;\n    };\n    /**\n     * Applies the current matrix to a set of 2 floats and stores the result in a vector2\n     * @param x defines the x coordinate to transform\n     * @param y defines the x coordinate to transform\n     * @param result defines the target vector2\n     * @returns the current matrix\n     */\n    Matrix2D.prototype.transformCoordinates = function (x, y, result) {\n        result.x = x * this.m[0] + y * this.m[2] + this.m[4];\n        result.y = x * this.m[1] + y * this.m[3] + this.m[5];\n        return this;\n    };\n    // Statics\n    /**\n     * Creates an identity matrix\n     * @returns a new matrix\n     */\n    Matrix2D.Identity = function () {\n        return new Matrix2D(1, 0, 0, 1, 0, 0);\n    };\n    /**\n     * Creates an identity matrix and stores it in a target matrix\n     * @param result defines the target matrix\n     */\n    Matrix2D.IdentityToRef = function (result) {\n        result.m[0] = 1;\n        result.m[1] = 0;\n        result.m[2] = 0;\n        result.m[3] = 1;\n        result.m[4] = 0;\n        result.m[5] = 0;\n    };\n    /**\n     * Creates a translation matrix and stores it in a target matrix\n     * @param x defines the x coordinate of the translation\n     * @param y defines the y coordinate of the translation\n     * @param result defines the target matrix\n     */\n    Matrix2D.TranslationToRef = function (x, y, result) {\n        result.fromValues(1, 0, 0, 1, x, y);\n    };\n    /**\n     * Creates a scaling matrix and stores it in a target matrix\n     * @param x defines the x coordinate of the scaling\n     * @param y defines the y coordinate of the scaling\n     * @param result defines the target matrix\n     */\n    Matrix2D.ScalingToRef = function (x, y, result) {\n        result.fromValues(x, 0, 0, y, 0, 0);\n    };\n    /**\n     * Creates a rotation matrix and stores it in a target matrix\n     * @param angle defines the rotation angle\n     * @param result defines the target matrix\n     */\n    Matrix2D.RotationToRef = function (angle, result) {\n        var s = Math.sin(angle);\n        var c = Math.cos(angle);\n        result.fromValues(c, s, -s, c, 0, 0);\n    };\n    /**\n     * Composes a matrix from translation, rotation, scaling and parent matrix and stores it in a target matrix\n     * @param tx defines the x coordinate of the translation\n     * @param ty defines the y coordinate of the translation\n     * @param angle defines the rotation angle\n     * @param scaleX defines the x coordinate of the scaling\n     * @param scaleY defines the y coordinate of the scaling\n     * @param parentMatrix defines the parent matrix to multiply by (can be null)\n     * @param result defines the target matrix\n     */\n    Matrix2D.ComposeToRef = function (tx, ty, angle, scaleX, scaleY, parentMatrix, result) {\n        Matrix2D.TranslationToRef(tx, ty, Matrix2D._TempPreTranslationMatrix);\n        Matrix2D.ScalingToRef(scaleX, scaleY, Matrix2D._TempScalingMatrix);\n        Matrix2D.RotationToRef(angle, Matrix2D._TempRotationMatrix);\n        Matrix2D.TranslationToRef(-tx, -ty, Matrix2D._TempPostTranslationMatrix);\n        Matrix2D._TempPreTranslationMatrix.multiplyToRef(Matrix2D._TempScalingMatrix, Matrix2D._TempCompose0);\n        Matrix2D._TempCompose0.multiplyToRef(Matrix2D._TempRotationMatrix, Matrix2D._TempCompose1);\n        if (parentMatrix) {\n            Matrix2D._TempCompose1.multiplyToRef(Matrix2D._TempPostTranslationMatrix, Matrix2D._TempCompose2);\n            Matrix2D._TempCompose2.multiplyToRef(parentMatrix, result);\n        }\n        else {\n            Matrix2D._TempCompose1.multiplyToRef(Matrix2D._TempPostTranslationMatrix, result);\n        }\n    };\n    Matrix2D._TempPreTranslationMatrix = Matrix2D.Identity();\n    Matrix2D._TempPostTranslationMatrix = Matrix2D.Identity();\n    Matrix2D._TempRotationMatrix = Matrix2D.Identity();\n    Matrix2D._TempScalingMatrix = Matrix2D.Identity();\n    Matrix2D._TempCompose0 = Matrix2D.Identity();\n    Matrix2D._TempCompose1 = Matrix2D.Identity();\n    Matrix2D._TempCompose2 = Matrix2D.Identity();\n    return Matrix2D;\n}());\nexport { Matrix2D };\n//# sourceMappingURL=math2D.js.map","import { Vector2 } from \"@babylonjs/core/Maths/math.vector.js\";\nvar tmpRect = [new Vector2(0, 0), new Vector2(0, 0), new Vector2(0, 0), new Vector2(0, 0)];\nvar tmpRect2 = [new Vector2(0, 0), new Vector2(0, 0), new Vector2(0, 0), new Vector2(0, 0)];\nvar tmpV1 = new Vector2(0, 0);\nvar tmpV2 = new Vector2(0, 0);\n/**\n * Class used to store 2D control sizes\n */\nvar Measure = /** @class */ (function () {\n    /**\n     * Creates a new measure\n     * @param left defines left coordinate\n     * @param top defines top coordinate\n     * @param width defines width dimension\n     * @param height defines height dimension\n     */\n    function Measure(\n    /** defines left coordinate */\n    left, \n    /** defines top coordinate  */\n    top, \n    /** defines width dimension  */\n    width, \n    /** defines height dimension */\n    height) {\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n    }\n    /**\n     * Copy from another measure\n     * @param other defines the other measure to copy from\n     */\n    Measure.prototype.copyFrom = function (other) {\n        this.left = other.left;\n        this.top = other.top;\n        this.width = other.width;\n        this.height = other.height;\n    };\n    /**\n     * Copy from a group of 4 floats\n     * @param left defines left coordinate\n     * @param top defines top coordinate\n     * @param width defines width dimension\n     * @param height defines height dimension\n     */\n    Measure.prototype.copyFromFloats = function (left, top, width, height) {\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n    };\n    /**\n     * Computes the axis aligned bounding box measure for two given measures\n     * @param a Input measure\n     * @param b Input measure\n     * @param result the resulting bounding measure\n     */\n    Measure.CombineToRef = function (a, b, result) {\n        var left = Math.min(a.left, b.left);\n        var top = Math.min(a.top, b.top);\n        var right = Math.max(a.left + a.width, b.left + b.width);\n        var bottom = Math.max(a.top + a.height, b.top + b.height);\n        result.left = left;\n        result.top = top;\n        result.width = right - left;\n        result.height = bottom - top;\n    };\n    /**\n     * Computes the axis aligned bounding box of the measure after it is modified by a given transform\n     * @param transform the matrix to transform the measure before computing the AABB\n     * @param addX number to add to left\n     * @param addY number to add to top\n     * @param addWidth number to add to width\n     * @param addHeight number to add to height\n     * @param result the resulting AABB\n     */\n    Measure.prototype.addAndTransformToRef = function (transform, addX, addY, addWidth, addHeight, result) {\n        var left = this.left + addX;\n        var top = this.top + addY;\n        var width = this.width + addWidth;\n        var height = this.height + addHeight;\n        tmpRect[0].copyFromFloats(left, top);\n        tmpRect[1].copyFromFloats(left + width, top);\n        tmpRect[2].copyFromFloats(left + width, top + height);\n        tmpRect[3].copyFromFloats(left, top + height);\n        tmpV1.copyFromFloats(Number.MAX_VALUE, Number.MAX_VALUE);\n        tmpV2.copyFromFloats(0, 0);\n        for (var i = 0; i < 4; i++) {\n            transform.transformCoordinates(tmpRect[i].x, tmpRect[i].y, tmpRect2[i]);\n            tmpV1.x = Math.floor(Math.min(tmpV1.x, tmpRect2[i].x));\n            tmpV1.y = Math.floor(Math.min(tmpV1.y, tmpRect2[i].y));\n            tmpV2.x = Math.ceil(Math.max(tmpV2.x, tmpRect2[i].x));\n            tmpV2.y = Math.ceil(Math.max(tmpV2.y, tmpRect2[i].y));\n        }\n        result.left = tmpV1.x;\n        result.top = tmpV1.y;\n        result.width = tmpV2.x - tmpV1.x;\n        result.height = tmpV2.y - tmpV1.y;\n    };\n    /**\n     * Computes the axis aligned bounding box of the measure after it is modified by a given transform\n     * @param transform the matrix to transform the measure before computing the AABB\n     * @param result the resulting AABB\n     */\n    Measure.prototype.transformToRef = function (transform, result) {\n        this.addAndTransformToRef(transform, 0, 0, 0, 0, result);\n    };\n    /**\n     * Check equality between this measure and another one\n     * @param other defines the other measures\n     * @returns true if both measures are equals\n     */\n    Measure.prototype.isEqualsTo = function (other) {\n        if (this.left !== other.left) {\n            return false;\n        }\n        if (this.top !== other.top) {\n            return false;\n        }\n        if (this.width !== other.width) {\n            return false;\n        }\n        if (this.height !== other.height) {\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Creates an empty measure\n     * @returns a new measure\n     */\n    Measure.Empty = function () {\n        return new Measure(0, 0, 0, 0);\n    };\n    return Measure;\n}());\nexport { Measure };\n//# sourceMappingURL=measure.js.map","import { Vector3 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { Epsilon } from \"@babylonjs/core/Maths/math.constants.js\";\nimport { ValueAndUnit } from \"./valueAndUnit.js\";\n/**\n * Class used to store a point for a MultiLine object.\n * The point can be pure 2D coordinates, a mesh or a control\n */\nvar MultiLinePoint = /** @class */ (function () {\n    /**\n     * Creates a new MultiLinePoint\n     * @param multiLine defines the source MultiLine object\n     */\n    function MultiLinePoint(multiLine) {\n        this._multiLine = multiLine;\n        this._x = new ValueAndUnit(0);\n        this._y = new ValueAndUnit(0);\n        this._point = new Vector3(0, 0, 0);\n    }\n    Object.defineProperty(MultiLinePoint.prototype, \"x\", {\n        /** Gets or sets x coordinate */\n        get: function () {\n            return this._x.toString(this._multiLine._host);\n        },\n        set: function (value) {\n            if (this._x.toString(this._multiLine._host) === value) {\n                return;\n            }\n            if (this._x.fromString(value)) {\n                this._multiLine._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MultiLinePoint.prototype, \"y\", {\n        /** Gets or sets y coordinate */\n        get: function () {\n            return this._y.toString(this._multiLine._host);\n        },\n        set: function (value) {\n            if (this._y.toString(this._multiLine._host) === value) {\n                return;\n            }\n            if (this._y.fromString(value)) {\n                this._multiLine._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MultiLinePoint.prototype, \"control\", {\n        /** Gets or sets the control associated with this point */\n        get: function () {\n            return this._control;\n        },\n        set: function (value) {\n            if (this._control === value) {\n                return;\n            }\n            if (this._control && this._controlObserver) {\n                this._control.onDirtyObservable.remove(this._controlObserver);\n                this._controlObserver = null;\n            }\n            this._control = value;\n            if (this._control) {\n                this._controlObserver = this._control.onDirtyObservable.add(this._multiLine.onPointUpdate);\n            }\n            this._multiLine._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MultiLinePoint.prototype, \"mesh\", {\n        /** Gets or sets the mesh associated with this point */\n        get: function () {\n            return this._mesh;\n        },\n        set: function (value) {\n            if (this._mesh === value) {\n                return;\n            }\n            if (this._mesh && this._meshObserver) {\n                this._mesh.getScene().onAfterCameraRenderObservable.remove(this._meshObserver);\n            }\n            this._mesh = value;\n            if (this._mesh) {\n                this._meshObserver = this._mesh.getScene().onAfterCameraRenderObservable.add(this._multiLine.onPointUpdate);\n            }\n            this._multiLine._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /** Resets links */\n    MultiLinePoint.prototype.resetLinks = function () {\n        this.control = null;\n        this.mesh = null;\n    };\n    /**\n     * Gets a translation vector with Z component\n     * @returns the translation vector\n     */\n    MultiLinePoint.prototype.translate = function () {\n        this._point = this._translatePoint();\n        return this._point;\n    };\n    MultiLinePoint.prototype._translatePoint = function () {\n        if (this._mesh != null) {\n            return this._multiLine._host.getProjectedPositionWithZ(this._mesh.getBoundingInfo().boundingSphere.center, this._mesh.getWorldMatrix());\n        }\n        else if (this._control != null) {\n            return new Vector3(this._control.centerX, this._control.centerY, 1 - Epsilon);\n        }\n        else {\n            var host = this._multiLine._host;\n            var xValue = this._x.getValueInPixel(host, Number(host._canvas.width));\n            var yValue = this._y.getValueInPixel(host, Number(host._canvas.height));\n            return new Vector3(xValue, yValue, 1 - Epsilon);\n        }\n    };\n    /** Release associated resources */\n    MultiLinePoint.prototype.dispose = function () {\n        this.resetLinks();\n    };\n    return MultiLinePoint;\n}());\nexport { MultiLinePoint };\n//# sourceMappingURL=multiLinePoint.js.map","import { Observable } from \"@babylonjs/core/Misc/observable.js\";\nimport { ValueAndUnit } from \"./valueAndUnit.js\";\n/**\n * Define a style used by control to automatically setup properties based on a template.\n * Only support font related properties so far\n */\nvar Style = /** @class */ (function () {\n    /**\n     * Creates a new style object\n     * @param host defines the AdvancedDynamicTexture which hosts this style\n     */\n    function Style(host) {\n        this._fontFamily = \"Arial\";\n        this._fontStyle = \"\";\n        this._fontWeight = \"\";\n        /** @hidden */\n        this._fontSize = new ValueAndUnit(18, ValueAndUnit.UNITMODE_PIXEL, false);\n        /**\n         * Observable raised when the style values are changed\n         */\n        this.onChangedObservable = new Observable();\n        this._host = host;\n    }\n    Object.defineProperty(Style.prototype, \"fontSize\", {\n        /**\n         * Gets or sets the font size\n         */\n        get: function () {\n            return this._fontSize.toString(this._host);\n        },\n        set: function (value) {\n            if (this._fontSize.toString(this._host) === value) {\n                return;\n            }\n            if (this._fontSize.fromString(value)) {\n                this.onChangedObservable.notifyObservers(this);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Style.prototype, \"fontFamily\", {\n        /**\n         * Gets or sets the font family\n         */\n        get: function () {\n            return this._fontFamily;\n        },\n        set: function (value) {\n            if (this._fontFamily === value) {\n                return;\n            }\n            this._fontFamily = value;\n            this.onChangedObservable.notifyObservers(this);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Style.prototype, \"fontStyle\", {\n        /**\n         * Gets or sets the font style\n         */\n        get: function () {\n            return this._fontStyle;\n        },\n        set: function (value) {\n            if (this._fontStyle === value) {\n                return;\n            }\n            this._fontStyle = value;\n            this.onChangedObservable.notifyObservers(this);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Style.prototype, \"fontWeight\", {\n        /** Gets or sets font weight */\n        get: function () {\n            return this._fontWeight;\n        },\n        set: function (value) {\n            if (this._fontWeight === value) {\n                return;\n            }\n            this._fontWeight = value;\n            this.onChangedObservable.notifyObservers(this);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /** Dispose all associated resources */\n    Style.prototype.dispose = function () {\n        this.onChangedObservable.clear();\n    };\n    return Style;\n}());\nexport { Style };\n//# sourceMappingURL=style.js.map","import { Observable } from \"@babylonjs/core/Misc/observable.js\";\n/**\n * Class used to specific a value and its associated unit\n */\nvar ValueAndUnit = /** @class */ (function () {\n    /**\n     * Creates a new ValueAndUnit\n     * @param value defines the value to store\n     * @param unit defines the unit to store - defaults to ValueAndUnit.UNITMODE_PIXEL\n     * @param negativeValueAllowed defines a boolean indicating if the value can be negative\n     */\n    function ValueAndUnit(value, \n    /** defines the unit to store */\n    unit, \n    /** defines a boolean indicating if the value can be negative */\n    negativeValueAllowed) {\n        if (unit === void 0) { unit = ValueAndUnit.UNITMODE_PIXEL; }\n        if (negativeValueAllowed === void 0) { negativeValueAllowed = true; }\n        this.negativeValueAllowed = negativeValueAllowed;\n        this._value = 1;\n        this._unit = ValueAndUnit.UNITMODE_PIXEL;\n        /**\n         * Gets or sets a value indicating that this value will not scale accordingly with adaptive scaling property\n         * @see https://doc.babylonjs.com/how_to/gui#adaptive-scaling\n         */\n        this.ignoreAdaptiveScaling = false;\n        /**\n         * Observable event triggered each time the value or unit changes\n         */\n        this.onChangedObservable = new Observable();\n        this._value = value;\n        this._unit = unit;\n        this._originalUnit = unit;\n    }\n    Object.defineProperty(ValueAndUnit.prototype, \"isPercentage\", {\n        /** Gets a boolean indicating if the value is a percentage */\n        get: function () {\n            return this._unit === ValueAndUnit.UNITMODE_PERCENTAGE;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ValueAndUnit.prototype, \"isPixel\", {\n        /** Gets a boolean indicating if the value is store as pixel */\n        get: function () {\n            return this._unit === ValueAndUnit.UNITMODE_PIXEL;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ValueAndUnit.prototype, \"internalValue\", {\n        /**\n         * Gets value (without units)\n         * @deprecated use value property instead\n         */\n        get: function () {\n            return this._value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ValueAndUnit.prototype, \"value\", {\n        /** Gets value (without units) */\n        get: function () {\n            return this._value;\n        },\n        /** Sets value (without units) */\n        set: function (value) {\n            if (value !== this._value) {\n                this._value = value;\n                this.onChangedObservable.notifyObservers();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ValueAndUnit.prototype, \"unit\", {\n        /** Gets units (without value) */\n        get: function () {\n            return this._unit;\n        },\n        /** Sets units (without value) */\n        set: function (value) {\n            if (value !== this._unit) {\n                this._unit = value;\n                this.onChangedObservable.notifyObservers();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Gets value as pixel\n     * @param host defines the root host\n     * @param refValue defines the reference value for percentages\n     * @returns the value as pixel\n     */\n    ValueAndUnit.prototype.getValueInPixel = function (host, refValue) {\n        if (this.isPixel) {\n            return this.getValue(host);\n        }\n        return this.getValue(host) * refValue;\n    };\n    /**\n     * Update the current value and unit.\n     * @param value defines the value to store\n     * @param unit defines the unit to store\n     * @returns the current ValueAndUnit\n     */\n    ValueAndUnit.prototype.updateInPlace = function (value, unit) {\n        if (unit === void 0) { unit = ValueAndUnit.UNITMODE_PIXEL; }\n        if (this.value !== value || this.unit !== unit) {\n            // set member variables to notify only once\n            this._value = value;\n            this._unit = unit;\n            this.onChangedObservable.notifyObservers();\n        }\n        return this;\n    };\n    /**\n     * Gets the value accordingly to its unit\n     * @param host  defines the root host\n     * @returns the value\n     */\n    ValueAndUnit.prototype.getValue = function (host) {\n        if (host && !this.ignoreAdaptiveScaling && this.unit !== ValueAndUnit.UNITMODE_PERCENTAGE) {\n            var width = 0;\n            var height = 0;\n            if (host.idealWidth) {\n                width = (this._value * host.getSize().width) / host.idealWidth;\n            }\n            if (host.idealHeight) {\n                height = (this._value * host.getSize().height) / host.idealHeight;\n            }\n            if (host.useSmallestIdeal && host.idealWidth && host.idealHeight) {\n                return window.innerWidth < window.innerHeight ? width : height;\n            }\n            if (host.idealWidth) {\n                // horizontal\n                return width;\n            }\n            if (host.idealHeight) {\n                // vertical\n                return height;\n            }\n        }\n        return this._value;\n    };\n    /**\n     * Gets a string representation of the value\n     * @param host defines the root host\n     * @param decimals defines an optional number of decimals to display\n     * @returns a string\n     */\n    ValueAndUnit.prototype.toString = function (host, decimals) {\n        switch (this._unit) {\n            case ValueAndUnit.UNITMODE_PERCENTAGE: {\n                var percentage = this.getValue(host) * 100;\n                return (decimals ? percentage.toFixed(decimals) : percentage) + \"%\";\n            }\n            case ValueAndUnit.UNITMODE_PIXEL: {\n                var pixels = this.getValue(host);\n                return (decimals ? pixels.toFixed(decimals) : pixels) + \"px\";\n            }\n        }\n        return this._unit.toString();\n    };\n    /**\n     * Store a value parsed from a string\n     * @param source defines the source string\n     * @returns true if the value was successfully parsed and updated\n     */\n    ValueAndUnit.prototype.fromString = function (source) {\n        var match = ValueAndUnit._Regex.exec(source.toString());\n        if (!match || match.length === 0) {\n            return false;\n        }\n        var sourceValue = parseFloat(match[1]);\n        var sourceUnit = this._originalUnit;\n        if (!this.negativeValueAllowed) {\n            if (sourceValue < 0) {\n                sourceValue = 0;\n            }\n        }\n        if (match.length === 4) {\n            switch (match[3]) {\n                case \"px\":\n                    sourceUnit = ValueAndUnit.UNITMODE_PIXEL;\n                    break;\n                case \"%\":\n                    sourceUnit = ValueAndUnit.UNITMODE_PERCENTAGE;\n                    sourceValue /= 100.0;\n                    break;\n            }\n        }\n        if (sourceValue === this._value && sourceUnit === this._unit) {\n            return false;\n        }\n        this._value = sourceValue;\n        this._unit = sourceUnit;\n        this.onChangedObservable.notifyObservers();\n        return true;\n    };\n    Object.defineProperty(ValueAndUnit, \"UNITMODE_PERCENTAGE\", {\n        /** UNITMODE_PERCENTAGE */\n        get: function () {\n            return ValueAndUnit._UNITMODE_PERCENTAGE;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ValueAndUnit, \"UNITMODE_PIXEL\", {\n        /** UNITMODE_PIXEL */\n        get: function () {\n            return ValueAndUnit._UNITMODE_PIXEL;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // Static\n    ValueAndUnit._Regex = /(^-?\\d*(\\.\\d+)?)(%|px)?/;\n    ValueAndUnit._UNITMODE_PERCENTAGE = 0;\n    ValueAndUnit._UNITMODE_PIXEL = 1;\n    return ValueAndUnit;\n}());\nexport { ValueAndUnit };\n//# sourceMappingURL=valueAndUnit.js.map","import { __awaiter, __generator } from \"tslib\";\nimport { GetClass } from \"@babylonjs/core/Misc/typeStore.js\";\nvar XmlLoaderError = \"XmlLoader Exception : XML file is malformed or corrupted.\";\n/**\n * Class used to load GUI via XML.\n */\nvar XmlLoader = /** @class */ (function () {\n    /**\n     * Create a new xml loader\n     * @param parentClass Sets the class context. Used when the loader is instanced inside a class and not in a global context\n     */\n    function XmlLoader(parentClass) {\n        if (parentClass === void 0) { parentClass = null; }\n        this._nodes = {};\n        this._nodeTypes = {\n            element: 1,\n            attribute: 2,\n            text: 3,\n        };\n        this._isLoaded = false;\n        this._objectAttributes = {\n            textHorizontalAlignment: 1,\n            textVerticalAlignment: 2,\n            horizontalAlignment: 3,\n            verticalAlignment: 4,\n            stretch: 5,\n        };\n        if (parentClass) {\n            this._parentClass = parentClass;\n        }\n    }\n    XmlLoader.prototype._getChainElement = function (attributeValue) {\n        var element = window;\n        if (this._parentClass) {\n            element = this._parentClass;\n        }\n        var value = attributeValue;\n        value = value.split(\".\");\n        for (var i = 0; i < value.length; i++) {\n            element = element[value[i]];\n        }\n        return element;\n    };\n    XmlLoader.prototype._getClassAttribute = function (attributeName) {\n        var attribute = attributeName.split(\".\");\n        var className = GetClass(\"BABYLON.GUI.\" + attribute[0]);\n        return className[attribute[1]];\n    };\n    XmlLoader.prototype._createGuiElement = function (node, parent, linkParent) {\n        if (linkParent === void 0) { linkParent = true; }\n        try {\n            var className = GetClass(\"BABYLON.GUI.\" + node.nodeName);\n            var guiNode = new className();\n            if (parent && linkParent) {\n                parent.addControl(guiNode);\n            }\n            for (var i = 0; i < node.attributes.length; i++) {\n                if (node.attributes[i].name.toLowerCase().includes(\"datasource\")) {\n                    continue;\n                }\n                if (node.attributes[i].name.toLowerCase().includes(\"observable\")) {\n                    var element = this._getChainElement(node.attributes[i].value);\n                    guiNode[node.attributes[i].name].add(element);\n                    continue;\n                }\n                else if (node.attributes[i].name == \"linkWithMesh\") {\n                    if (this._parentClass) {\n                        guiNode.linkWithMesh(this._parentClass[node.attributes[i].value]);\n                    }\n                    else {\n                        guiNode.linkWithMesh(window[node.attributes[i].value]);\n                    }\n                }\n                else if (node.attributes[i].value.startsWith(\"{{\") && node.attributes[i].value.endsWith(\"}}\")) {\n                    var element = this._getChainElement(node.attributes[i].value.substring(2, node.attributes[i].value.length - 2));\n                    guiNode[node.attributes[i].name] = element;\n                }\n                else if (!this._objectAttributes[node.attributes[i].name]) {\n                    if (node.attributes[i].value == \"true\" || node.attributes[i].value == \"false\") {\n                        guiNode[node.attributes[i].name] = node.attributes[i].value == \"true\";\n                    }\n                    else {\n                        guiNode[node.attributes[i].name] = !isNaN(Number(node.attributes[i].value)) ? Number(node.attributes[i].value) : node.attributes[i].value;\n                    }\n                }\n                else {\n                    guiNode[node.attributes[i].name] = this._getClassAttribute(node.attributes[i].value);\n                }\n            }\n            if (!node.attributes.getNamedItem(\"id\")) {\n                this._nodes[node.nodeName + Object.keys(this._nodes).length + \"_gen\"] = guiNode;\n                return guiNode;\n            }\n            var id = node.attributes.getNamedItem(\"id\").value;\n            if (id.startsWith(\"{{\") && id.endsWith(\"}}\")) {\n                id = this._getChainElement(id.substring(2, id.length - 2));\n            }\n            if (!this._nodes[id]) {\n                this._nodes[id] = guiNode;\n            }\n            else {\n                throw \"XmlLoader Exception : Duplicate ID, every element should have an unique ID attribute\";\n            }\n            return guiNode;\n        }\n        catch (exception) {\n            throw \"XmlLoader Exception : Error parsing Control \" + node.nodeName + \",\" + exception + \".\";\n        }\n    };\n    XmlLoader.prototype._parseGrid = function (node, guiNode, parent) {\n        var width;\n        var height;\n        var columns;\n        var rows = node.children;\n        var cells;\n        var isPixel = false;\n        var cellNode;\n        var rowNumber = -1;\n        var columnNumber = -1;\n        var totalColumnsNumber = 0;\n        for (var i = 0; i < rows.length; i++) {\n            if (rows[i].nodeType != this._nodeTypes.element) {\n                continue;\n            }\n            if (rows[i].nodeName != \"Row\") {\n                throw \"XmlLoader Exception : Expecting Row node, received \" + rows[i].nodeName;\n            }\n            rowNumber += 1;\n            columns = rows[i].children;\n            if (!rows[i].attributes.getNamedItem(\"height\")) {\n                throw \"XmlLoader Exception : Height must be defined for grid rows\";\n            }\n            height = Number(rows[i].attributes.getNamedItem(\"height\").nodeValue);\n            isPixel = rows[i].attributes.getNamedItem(\"isPixel\") ? JSON.parse(rows[i].attributes.getNamedItem(\"isPixel\").nodeValue) : false;\n            guiNode.addRowDefinition(height, isPixel);\n            for (var j = 0; j < columns.length; j++) {\n                if (columns[j].nodeType != this._nodeTypes.element) {\n                    continue;\n                }\n                if (columns[j].nodeName != \"Column\") {\n                    throw \"XmlLoader Exception : Expecting Column node, received \" + columns[j].nodeName;\n                }\n                columnNumber += 1;\n                if (rowNumber > 0 && columnNumber > totalColumnsNumber) {\n                    throw \"XmlLoader Exception : In the Grid element, the number of columns is defined in the first row, do not add more columns in the subsequent rows.\";\n                }\n                if (rowNumber == 0) {\n                    if (!columns[j].attributes.getNamedItem(\"width\")) {\n                        throw \"XmlLoader Exception : Width must be defined for all the grid columns in the first row\";\n                    }\n                    width = Number(columns[j].attributes.getNamedItem(\"width\").nodeValue);\n                    isPixel = columns[j].attributes.getNamedItem(\"isPixel\") ? JSON.parse(columns[j].attributes.getNamedItem(\"isPixel\").nodeValue) : false;\n                    guiNode.addColumnDefinition(width, isPixel);\n                }\n                cells = columns[j].children;\n                for (var k = 0; k < cells.length; k++) {\n                    if (cells[k].nodeType != this._nodeTypes.element) {\n                        continue;\n                    }\n                    cellNode = this._createGuiElement(cells[k], guiNode, false);\n                    guiNode.addControl(cellNode, rowNumber, columnNumber);\n                    if (cells[k].firstChild) {\n                        this._parseXml(cells[k].firstChild, cellNode);\n                    }\n                }\n            }\n            if (rowNumber == 0) {\n                totalColumnsNumber = columnNumber;\n            }\n            columnNumber = -1;\n        }\n        if (node.nextSibling) {\n            this._parseXml(node.nextSibling, parent);\n        }\n    };\n    XmlLoader.prototype._parseElement = function (node, guiNode, parent) {\n        if (node.firstChild) {\n            this._parseXml(node.firstChild, guiNode);\n        }\n        if (node.nextSibling) {\n            this._parseXml(node.nextSibling, parent);\n        }\n    };\n    XmlLoader.prototype._prepareSourceElement = function (node, guiNode, variable, source, iterator) {\n        if (this._parentClass) {\n            this._parentClass[variable] = source[iterator];\n        }\n        else {\n            window[variable] = source[iterator];\n        }\n        if (node.firstChild) {\n            this._parseXml(node.firstChild, guiNode, true);\n        }\n    };\n    XmlLoader.prototype._parseElementsFromSource = function (node, guiNode, parent) {\n        var dataSource = node.attributes.getNamedItem(\"dataSource\").value;\n        if (!dataSource.includes(\" in \")) {\n            throw \"XmlLoader Exception : Malformed XML, Data Source must include an in\";\n        }\n        else {\n            var isArray = true;\n            var splittedSource = dataSource.split(\" in \");\n            if (splittedSource.length < 2) {\n                throw \"XmlLoader Exception : Malformed XML, Data Source must have an iterator and a source\";\n            }\n            var source = splittedSource[1];\n            if (source.startsWith(\"{\") && source.endsWith(\"}\")) {\n                isArray = false;\n            }\n            if (!isArray || (source.startsWith(\"[\") && source.endsWith(\"]\"))) {\n                source = source.substring(1, source.length - 1);\n            }\n            if (this._parentClass) {\n                source = this._parentClass[source];\n            }\n            else {\n                source = window[source];\n            }\n            if (isArray) {\n                for (var i = 0; i < source.length; i++) {\n                    this._prepareSourceElement(node, guiNode, splittedSource[0], source, i);\n                }\n            }\n            else {\n                for (var i in source) {\n                    this._prepareSourceElement(node, guiNode, splittedSource[0], source, i);\n                }\n            }\n            if (node.nextSibling) {\n                this._parseXml(node.nextSibling, parent);\n            }\n        }\n    };\n    XmlLoader.prototype._parseXml = function (node, parent, generated) {\n        if (generated === void 0) { generated = false; }\n        if (node.nodeType != this._nodeTypes.element) {\n            if (node.nextSibling) {\n                this._parseXml(node.nextSibling, parent, generated);\n            }\n            return;\n        }\n        if (generated) {\n            node.setAttribute(\"id\", parent.id + (parent._children.length + 1));\n        }\n        var guiNode = this._createGuiElement(node, parent);\n        if (!this._rootNode) {\n            this._rootNode = guiNode;\n        }\n        if (node.nodeName == \"Grid\") {\n            this._parseGrid(node, guiNode, parent);\n        }\n        else if (!node.attributes.getNamedItem(\"dataSource\")) {\n            this._parseElement(node, guiNode, parent);\n        }\n        else {\n            this._parseElementsFromSource(node, guiNode, parent);\n        }\n    };\n    /**\n     * Gets if the loading has finished.\n     * @returns whether the loading has finished or not\n     */\n    XmlLoader.prototype.isLoaded = function () {\n        return this._isLoaded;\n    };\n    /**\n     * Gets a loaded node / control by id.\n     * @param id the Controls id set in the xml\n     * @returns element of type Control\n     */\n    XmlLoader.prototype.getNodeById = function (id) {\n        return this._nodes[id];\n    };\n    /**\n     * Gets all loaded nodes / controls\n     * @returns Array of controls\n     */\n    XmlLoader.prototype.getNodes = function () {\n        return this._nodes;\n    };\n    /**\n     * Disposes the loaded layout\n     */\n    XmlLoader.prototype.dispose = function () {\n        if (this._rootNode) {\n            this._rootNode.dispose();\n            this._rootNode = null;\n            this._nodes = {};\n        }\n    };\n    /**\n     * Initiates the xml layout loading\n     * @param xmlFile defines the xml layout to load\n     * @param rootNode defines the node / control to use as a parent for the loaded layout controls.\n     * @param onSuccess defines the callback called on layout load successfully.\n     * @param onError defines the callback called on layout load failure.\n     */\n    XmlLoader.prototype.loadLayout = function (xmlFile, rootNode, onSuccess, onError) {\n        var _this = this;\n        if (onSuccess === void 0) { onSuccess = null; }\n        if (onError === void 0) { onError = null; }\n        var xhttp = new XMLHttpRequest();\n        xhttp.onload = function () {\n            if (xhttp.readyState === 4 && xhttp.status === 200) {\n                if (!xhttp.responseXML) {\n                    if (onError) {\n                        onError(XmlLoaderError);\n                        return;\n                    }\n                    else {\n                        throw XmlLoaderError;\n                    }\n                }\n                var xmlDoc = xhttp.responseXML.documentElement;\n                _this._parseXml(xmlDoc.firstChild, rootNode);\n                _this._isLoaded = true;\n                if (onSuccess) {\n                    onSuccess();\n                }\n            }\n        };\n        xhttp.onerror = function () {\n            if (onError) {\n                onError(\"an error occurred during loading the layout\");\n            }\n        };\n        xhttp.open(\"GET\", xmlFile, true);\n        xhttp.send();\n    };\n    /**\n     * Initiates the xml layout loading asynchronously\n     * @param xmlFile defines the xml layout to load\n     * @param rootNode defines the node / control to use as a parent for the loaded layout controls.\n     * @returns Promise\n     */\n    XmlLoader.prototype.loadLayoutAsync = function (xmlFile, rootNode) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        _this.loadLayout(xmlFile, rootNode, resolve, reject);\n                    })];\n            });\n        });\n    };\n    return XmlLoader;\n}());\nexport { XmlLoader };\n//# sourceMappingURL=xmlLoader.js.map","import { __extends } from \"tslib\";\nimport { Vector3 } from \"@babylonjs/core/Maths/math.vector.js\";\n/**\n * Class used to transport Vector3 information for pointer events\n */\nvar Vector3WithInfo = /** @class */ (function (_super) {\n    __extends(Vector3WithInfo, _super);\n    /**\n     * Creates a new Vector3WithInfo\n     * @param source defines the vector3 data to transport\n     * @param buttonIndex defines the current mouse button index\n     */\n    function Vector3WithInfo(source, \n    /** defines the current mouse button index */\n    buttonIndex) {\n        if (buttonIndex === void 0) { buttonIndex = 0; }\n        var _this = _super.call(this, source.x, source.y, source.z) || this;\n        _this.buttonIndex = buttonIndex;\n        return _this;\n    }\n    return Vector3WithInfo;\n}(Vector3));\nexport { Vector3WithInfo };\n//# sourceMappingURL=vector3WithInfo.js.map","import { Observable } from \"@babylonjs/core/Misc/observable.js\";\nimport { Vector3 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { PointerEventTypes } from \"@babylonjs/core/Events/pointerEvents.js\";\nimport { AbstractMesh } from \"@babylonjs/core/Meshes/abstractMesh.js\";\nimport { Vector3WithInfo } from \"../vector3WithInfo.js\";\n/**\n * Class used as base class for controls\n */\nvar Control3D = /** @class */ (function () {\n    /**\n     * Creates a new control\n     * @param name defines the control name\n     */\n    function Control3D(\n    /** Defines the control name */\n    name) {\n        this.name = name;\n        this._downCount = 0;\n        this._enterCount = -1;\n        this._downPointerIds = {}; // Store number of pointer downs per ID, from near and far interactions\n        this._isVisible = true;\n        /** @hidden */\n        this._isScaledByManager = false;\n        /**\n         * An event triggered when the pointer moves over the control\n         */\n        this.onPointerMoveObservable = new Observable();\n        /**\n         * An event triggered when the pointer moves out of the control\n         */\n        this.onPointerOutObservable = new Observable();\n        /**\n         * An event triggered when the pointer taps the control\n         */\n        this.onPointerDownObservable = new Observable();\n        /**\n         * An event triggered when pointer is up\n         */\n        this.onPointerUpObservable = new Observable();\n        /**\n         * An event triggered when a control is clicked on (with a mouse)\n         */\n        this.onPointerClickObservable = new Observable();\n        /**\n         * An event triggered when pointer enters the control\n         */\n        this.onPointerEnterObservable = new Observable();\n        // Behaviors\n        this._behaviors = new Array();\n    }\n    Object.defineProperty(Control3D.prototype, \"position\", {\n        /** Gets or sets the control position in world space */\n        get: function () {\n            if (!this._node) {\n                return Vector3.Zero();\n            }\n            return this._node.position;\n        },\n        set: function (value) {\n            if (!this._node) {\n                return;\n            }\n            this._node.position = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control3D.prototype, \"scaling\", {\n        /** Gets or sets the control scaling in world space */\n        get: function () {\n            if (!this._node) {\n                return new Vector3(1, 1, 1);\n            }\n            return this._node.scaling;\n        },\n        set: function (value) {\n            if (!this._node) {\n                return;\n            }\n            this._isScaledByManager = false;\n            this._node.scaling = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control3D.prototype, \"behaviors\", {\n        /**\n         * Gets the list of attached behaviors\n         * @see https://doc.babylonjs.com/features/behaviour\n         */\n        get: function () {\n            return this._behaviors;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Attach a behavior to the control\n     * @see https://doc.babylonjs.com/features/behaviour\n     * @param behavior defines the behavior to attach\n     * @returns the current control\n     */\n    Control3D.prototype.addBehavior = function (behavior) {\n        var _this = this;\n        var index = this._behaviors.indexOf(behavior);\n        if (index !== -1) {\n            return this;\n        }\n        behavior.init();\n        var scene = this._host.scene;\n        if (scene.isLoading) {\n            // We defer the attach when the scene will be loaded\n            scene.onDataLoadedObservable.addOnce(function () {\n                behavior.attach(_this);\n            });\n        }\n        else {\n            behavior.attach(this);\n        }\n        this._behaviors.push(behavior);\n        return this;\n    };\n    /**\n     * Remove an attached behavior\n     * @see https://doc.babylonjs.com/features/behaviour\n     * @param behavior defines the behavior to attach\n     * @returns the current control\n     */\n    Control3D.prototype.removeBehavior = function (behavior) {\n        var index = this._behaviors.indexOf(behavior);\n        if (index === -1) {\n            return this;\n        }\n        this._behaviors[index].detach();\n        this._behaviors.splice(index, 1);\n        return this;\n    };\n    /**\n     * Gets an attached behavior by name\n     * @param name defines the name of the behavior to look for\n     * @see https://doc.babylonjs.com/features/behaviour\n     * @returns null if behavior was not found else the requested behavior\n     */\n    Control3D.prototype.getBehaviorByName = function (name) {\n        for (var _i = 0, _a = this._behaviors; _i < _a.length; _i++) {\n            var behavior = _a[_i];\n            if (behavior.name === name) {\n                return behavior;\n            }\n        }\n        return null;\n    };\n    Object.defineProperty(Control3D.prototype, \"isVisible\", {\n        /** Gets or sets a boolean indicating if the control is visible */\n        get: function () {\n            return this._isVisible;\n        },\n        set: function (value) {\n            if (this._isVisible === value) {\n                return;\n            }\n            this._isVisible = value;\n            var mesh = this.mesh;\n            if (mesh) {\n                mesh.setEnabled(value);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control3D.prototype, \"typeName\", {\n        /**\n         * Gets a string representing the class name\n         */\n        get: function () {\n            return this._getTypeName();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Get the current class name of the control.\n     * @returns current class name\n     */\n    Control3D.prototype.getClassName = function () {\n        return this._getTypeName();\n    };\n    Control3D.prototype._getTypeName = function () {\n        return \"Control3D\";\n    };\n    Object.defineProperty(Control3D.prototype, \"node\", {\n        /**\n         * Gets the transform node used by this control\n         */\n        get: function () {\n            return this._node;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control3D.prototype, \"mesh\", {\n        /**\n         * Gets the mesh used to render this control\n         */\n        get: function () {\n            if (this._node instanceof AbstractMesh) {\n                return this._node;\n            }\n            return null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Link the control as child of the given node\n     * @param node defines the node to link to. Use null to unlink the control\n     * @returns the current control\n     */\n    Control3D.prototype.linkToTransformNode = function (node) {\n        if (this._node) {\n            this._node.parent = node;\n        }\n        return this;\n    };\n    /**\n     * @param scene\n     * @hidden*\n     */\n    Control3D.prototype._prepareNode = function (scene) {\n        if (!this._node) {\n            this._node = this._createNode(scene);\n            if (!this.node) {\n                return;\n            }\n            this._injectGUI3DReservedDataStore(this.node).control = this; // Store the control on the reservedDataStore field in order to get it when picking\n            var mesh = this.mesh;\n            if (mesh) {\n                mesh.isPickable = true;\n                this._affectMaterial(mesh);\n            }\n        }\n    };\n    Control3D.prototype._injectGUI3DReservedDataStore = function (node) {\n        var _a, _b;\n        node.reservedDataStore = (_a = node.reservedDataStore) !== null && _a !== void 0 ? _a : {};\n        node.reservedDataStore.GUI3D = (_b = node.reservedDataStore.GUI3D) !== null && _b !== void 0 ? _b : {};\n        return node.reservedDataStore.GUI3D;\n    };\n    /**\n     * Node creation.\n     * Can be overriden by children\n     * @param scene defines the scene where the node must be attached\n     * @returns the attached node or null if none. Must return a Mesh or AbstractMesh if there is an attached visible object\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Control3D.prototype._createNode = function (scene) {\n        // Do nothing by default\n        return null;\n    };\n    /**\n     * Affect a material to the given mesh\n     * @param mesh defines the mesh which will represent the control\n     */\n    Control3D.prototype._affectMaterial = function (mesh) {\n        mesh.material = null;\n    };\n    Control3D.prototype._isTouchButton3D = function (control) {\n        return control._generatePointerEventType !== undefined;\n    };\n    // Pointers\n    /**\n     * @param target\n     * @param coordinates\n     * @hidden\n     */\n    Control3D.prototype._onPointerMove = function (target, coordinates) {\n        this.onPointerMoveObservable.notifyObservers(coordinates, -1, target, this);\n    };\n    /**\n     * @param target\n     * @hidden\n     */\n    Control3D.prototype._onPointerEnter = function (target) {\n        if (this._enterCount === -1) {\n            // -1 is for touch input, we are now sure we are with a mouse or pencil\n            this._enterCount = 0;\n        }\n        this._enterCount++;\n        if (this._enterCount > 1) {\n            return false;\n        }\n        this.onPointerEnterObservable.notifyObservers(this, -1, target, this);\n        if (this.pointerEnterAnimation) {\n            this.pointerEnterAnimation();\n        }\n        return true;\n    };\n    /**\n     * @param target\n     * @hidden\n     */\n    Control3D.prototype._onPointerOut = function (target) {\n        this._enterCount--;\n        if (this._enterCount > 0) {\n            return;\n        }\n        this._enterCount = 0;\n        this.onPointerOutObservable.notifyObservers(this, -1, target, this);\n        if (this.pointerOutAnimation) {\n            this.pointerOutAnimation();\n        }\n    };\n    /**\n     * @param target\n     * @param coordinates\n     * @param pointerId\n     * @param buttonIndex\n     * @hidden\n     */\n    Control3D.prototype._onPointerDown = function (target, coordinates, pointerId, buttonIndex) {\n        this._downCount++;\n        this._downPointerIds[pointerId] = this._downPointerIds[pointerId] + 1 || 1;\n        if (this._downCount !== 1) {\n            return false;\n        }\n        this.onPointerDownObservable.notifyObservers(new Vector3WithInfo(coordinates, buttonIndex), -1, target, this);\n        if (this.pointerDownAnimation) {\n            this.pointerDownAnimation();\n        }\n        return true;\n    };\n    /**\n     * @param target\n     * @param coordinates\n     * @param pointerId\n     * @param buttonIndex\n     * @param notifyClick\n     * @hidden\n     */\n    Control3D.prototype._onPointerUp = function (target, coordinates, pointerId, buttonIndex, notifyClick) {\n        this._downCount--;\n        this._downPointerIds[pointerId]--;\n        if (this._downPointerIds[pointerId] <= 0) {\n            delete this._downPointerIds[pointerId];\n        }\n        if (this._downCount < 0) {\n            // Handle if forcePointerUp was called prior to this\n            this._downCount = 0;\n            return;\n        }\n        if (this._downCount == 0) {\n            if (notifyClick && (this._enterCount > 0 || this._enterCount === -1)) {\n                this.onPointerClickObservable.notifyObservers(new Vector3WithInfo(coordinates, buttonIndex), -1, target, this);\n            }\n            this.onPointerUpObservable.notifyObservers(new Vector3WithInfo(coordinates, buttonIndex), -1, target, this);\n            if (this.pointerUpAnimation) {\n                this.pointerUpAnimation();\n            }\n        }\n    };\n    /**\n     * @param pointerId\n     * @hidden\n     */\n    Control3D.prototype.forcePointerUp = function (pointerId) {\n        if (pointerId === void 0) { pointerId = null; }\n        if (pointerId !== null) {\n            this._onPointerUp(this, Vector3.Zero(), pointerId, 0, true);\n        }\n        else {\n            for (var key in this._downPointerIds) {\n                this._onPointerUp(this, Vector3.Zero(), +key, 0, true);\n            }\n            if (this._downCount > 0) {\n                this._downCount = 1;\n                this._onPointerUp(this, Vector3.Zero(), 0, 0, true);\n            }\n        }\n    };\n    /**\n     * @param type\n     * @param pickedPoint\n     * @param originMeshPosition\n     * @param pointerId\n     * @param buttonIndex\n     * @hidden\n     */\n    Control3D.prototype._processObservables = function (type, pickedPoint, originMeshPosition, pointerId, buttonIndex) {\n        if (this._isTouchButton3D(this) && originMeshPosition) {\n            type = this._generatePointerEventType(type, originMeshPosition, this._downCount);\n        }\n        if (type === PointerEventTypes.POINTERMOVE) {\n            this._onPointerMove(this, pickedPoint);\n            var previousControlOver = this._host._lastControlOver[pointerId];\n            if (previousControlOver && previousControlOver !== this) {\n                previousControlOver._onPointerOut(this);\n            }\n            if (previousControlOver !== this) {\n                this._onPointerEnter(this);\n            }\n            this._host._lastControlOver[pointerId] = this;\n            return true;\n        }\n        if (type === PointerEventTypes.POINTERDOWN) {\n            this._onPointerDown(this, pickedPoint, pointerId, buttonIndex);\n            this._host._lastControlDown[pointerId] = this;\n            this._host._lastPickedControl = this;\n            return true;\n        }\n        if (type === PointerEventTypes.POINTERUP || type === PointerEventTypes.POINTERDOUBLETAP) {\n            if (this._host._lastControlDown[pointerId]) {\n                this._host._lastControlDown[pointerId]._onPointerUp(this, pickedPoint, pointerId, buttonIndex, true);\n            }\n            delete this._host._lastControlDown[pointerId];\n            return true;\n        }\n        return false;\n    };\n    /** @hidden */\n    Control3D.prototype._disposeNode = function () {\n        if (this._node) {\n            this._node.dispose();\n            this._node = null;\n        }\n    };\n    /**\n     * Releases all associated resources\n     */\n    Control3D.prototype.dispose = function () {\n        this.onPointerDownObservable.clear();\n        this.onPointerEnterObservable.clear();\n        this.onPointerMoveObservable.clear();\n        this.onPointerOutObservable.clear();\n        this.onPointerUpObservable.clear();\n        this.onPointerClickObservable.clear();\n        this._disposeNode();\n        // Behaviors\n        for (var _i = 0, _a = this._behaviors; _i < _a.length; _i++) {\n            var behavior = _a[_i];\n            behavior.detach();\n        }\n    };\n    return Control3D;\n}());\nexport { Control3D };\n//# sourceMappingURL=control3D.js.map","import { __extends } from \"tslib\";\nimport { AdvancedDynamicTexture } from \"../../2D/advancedDynamicTexture.js\";\nimport { Control3D } from \"./control3D.js\";\nimport { Texture } from \"@babylonjs/core/Materials/Textures/texture.js\";\n/**\n * The base class for controls that display content\n */\nvar ContentDisplay3D = /** @class */ (function (_super) {\n    __extends(ContentDisplay3D, _super);\n    function ContentDisplay3D() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._contentResolution = 512;\n        _this._contentScaleRatio = 2;\n        return _this;\n    }\n    Object.defineProperty(ContentDisplay3D.prototype, \"content\", {\n        /**\n         * Gets or sets the GUI 2D content used to display the button's facade\n         */\n        get: function () {\n            return this._content;\n        },\n        set: function (value) {\n            this._content = value;\n            if (!value || !this._host || !this._host.utilityLayer) {\n                return;\n            }\n            if (!this._facadeTexture) {\n                this._facadeTexture = new AdvancedDynamicTexture(\"Facade\", this._contentResolution, this._contentResolution, this._host.utilityLayer.utilityLayerScene, true, Texture.TRILINEAR_SAMPLINGMODE);\n                this._facadeTexture.rootContainer.scaleX = this._contentScaleRatio;\n                this._facadeTexture.rootContainer.scaleY = this._contentScaleRatio;\n                this._facadeTexture.premulAlpha = true;\n            }\n            else {\n                this._facadeTexture.rootContainer.clearControls();\n            }\n            this._facadeTexture.addControl(value);\n            this._applyFacade(this._facadeTexture);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ContentDisplay3D.prototype, \"contentResolution\", {\n        /**\n         * Gets or sets the texture resolution used to render content (512 by default)\n         */\n        get: function () {\n            return this._contentResolution;\n        },\n        set: function (value) {\n            if (this._contentResolution === value) {\n                return;\n            }\n            this._contentResolution = value;\n            this._resetContent();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ContentDisplay3D.prototype._disposeFacadeTexture = function () {\n        if (this._facadeTexture) {\n            this._facadeTexture.dispose();\n            this._facadeTexture = null;\n        }\n    };\n    ContentDisplay3D.prototype._resetContent = function () {\n        this._disposeFacadeTexture();\n        this.content = this._content;\n    };\n    /**\n     * Apply the facade texture (created from the content property).\n     * This function can be overloaded by child classes\n     * @param facadeTexture defines the AdvancedDynamicTexture to use\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ContentDisplay3D.prototype._applyFacade = function (facadeTexture) { };\n    return ContentDisplay3D;\n}(Control3D));\nexport { ContentDisplay3D };\n//# sourceMappingURL=contentDisplay3D.js.map","import { __extends } from \"tslib\";\nimport { TransformNode } from \"@babylonjs/core/Meshes/transformNode.js\";\nimport { ContentDisplay3D } from \"./contentDisplay3D.js\";\n/**\n * Class used as a root to all buttons\n */\nvar AbstractButton3D = /** @class */ (function (_super) {\n    __extends(AbstractButton3D, _super);\n    /**\n     * Creates a new button\n     * @param name defines the control name\n     */\n    function AbstractButton3D(name) {\n        return _super.call(this, name) || this;\n    }\n    AbstractButton3D.prototype._getTypeName = function () {\n        return \"AbstractButton3D\";\n    };\n    // Mesh association\n    AbstractButton3D.prototype._createNode = function (scene) {\n        return new TransformNode(\"button\" + this.name, scene);\n    };\n    return AbstractButton3D;\n}(ContentDisplay3D));\nexport { AbstractButton3D };\n//# sourceMappingURL=abstractButton3D.js.map","import { __extends } from \"tslib\";\nimport { Vector4 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { CreateBox } from \"@babylonjs/core/Meshes/Builders/boxBuilder.js\";\nimport { StandardMaterial } from \"@babylonjs/core/Materials/standardMaterial.js\";\nimport { AbstractButton3D } from \"./abstractButton3D.js\";\nimport { Color3 } from \"@babylonjs/core/Maths/math.color.js\";\n/**\n * Class used to create a button in 3D\n */\nvar Button3D = /** @class */ (function (_super) {\n    __extends(Button3D, _super);\n    /**\n     * Creates a new button\n     * @param name defines the control name\n     */\n    function Button3D(name) {\n        var _this = _super.call(this, name) || this;\n        // Default animations\n        _this.pointerEnterAnimation = function () {\n            if (!_this.mesh) {\n                return;\n            }\n            _this._currentMaterial.emissiveColor = Color3.Red();\n        };\n        _this.pointerOutAnimation = function () {\n            _this._currentMaterial.emissiveColor = Color3.Black();\n        };\n        _this.pointerDownAnimation = function () {\n            if (!_this.mesh) {\n                return;\n            }\n            _this.mesh.scaling.scaleInPlace(0.95);\n        };\n        _this.pointerUpAnimation = function () {\n            if (!_this.mesh) {\n                return;\n            }\n            _this.mesh.scaling.scaleInPlace(1.0 / 0.95);\n        };\n        return _this;\n    }\n    /**\n     * Apply the facade texture (created from the content property).\n     * @param facadeTexture defines the AdvancedDynamicTexture to use\n     */\n    Button3D.prototype._applyFacade = function (facadeTexture) {\n        this._currentMaterial.emissiveTexture = facadeTexture;\n    };\n    Button3D.prototype._getTypeName = function () {\n        return \"Button3D\";\n    };\n    // Mesh association\n    Button3D.prototype._createNode = function (scene) {\n        var faceUV = new Array(6);\n        for (var i = 0; i < 6; i++) {\n            faceUV[i] = new Vector4(0, 0, 0, 0);\n        }\n        if (scene.useRightHandedSystem) {\n            // Flip the u on the texture\n            faceUV[0].copyFromFloats(1, 0, 0, 1);\n        }\n        else {\n            faceUV[1].copyFromFloats(0, 0, 1, 1);\n        }\n        var mesh = CreateBox(this.name + \"_rootMesh\", {\n            width: 1.0,\n            height: 1.0,\n            depth: 0.08,\n            faceUV: faceUV,\n            wrap: true,\n        }, scene);\n        return mesh;\n    };\n    Button3D.prototype._affectMaterial = function (mesh) {\n        var material = new StandardMaterial(this.name + \"Material\", mesh.getScene());\n        material.specularColor = Color3.Black();\n        mesh.material = material;\n        this._currentMaterial = material;\n        this._resetContent();\n    };\n    /**\n     * Releases all associated resources\n     */\n    Button3D.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._disposeFacadeTexture();\n        if (this._currentMaterial) {\n            this._currentMaterial.dispose();\n        }\n    };\n    return Button3D;\n}(AbstractButton3D));\nexport { Button3D };\n//# sourceMappingURL=button3D.js.map","import { __extends } from \"tslib\";\nimport { TransformNode } from \"@babylonjs/core/Meshes/transformNode.js\";\nimport { Control3D } from \"./control3D.js\";\n/**\n * Class used to create containers for controls\n */\nvar Container3D = /** @class */ (function (_super) {\n    __extends(Container3D, _super);\n    /**\n     * Creates a new container\n     * @param name defines the container name\n     */\n    function Container3D(name) {\n        var _this = _super.call(this, name) || this;\n        _this._blockLayout = false;\n        /**\n         * Gets the list of child controls\n         */\n        _this._children = new Array();\n        return _this;\n    }\n    Object.defineProperty(Container3D.prototype, \"children\", {\n        /**\n         * Gets the list of child controls\n         */\n        get: function () {\n            return this._children;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Container3D.prototype, \"blockLayout\", {\n        /**\n         * Gets or sets a boolean indicating if the layout must be blocked (default is false).\n         * This is helpful to optimize layout operation when adding multiple children in a row\n         */\n        get: function () {\n            return this._blockLayout;\n        },\n        set: function (value) {\n            if (this._blockLayout === value) {\n                return;\n            }\n            this._blockLayout = value;\n            if (!this._blockLayout) {\n                this._arrangeChildren();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Force the container to update the layout. Please note that it will not take blockLayout property in account\n     * @returns the current container\n     */\n    Container3D.prototype.updateLayout = function () {\n        this._arrangeChildren();\n        return this;\n    };\n    /**\n     * Gets a boolean indicating if the given control is in the children of this control\n     * @param control defines the control to check\n     * @returns true if the control is in the child list\n     */\n    Container3D.prototype.containsControl = function (control) {\n        return this._children.indexOf(control) !== -1;\n    };\n    /**\n     * Adds a control to the children of this control\n     * @param control defines the control to add\n     * @returns the current container\n     */\n    Container3D.prototype.addControl = function (control) {\n        var index = this._children.indexOf(control);\n        if (index !== -1) {\n            return this;\n        }\n        control.parent = this;\n        control._host = this._host;\n        this._children.push(control);\n        if (this._host.utilityLayer) {\n            control._prepareNode(this._host.utilityLayer.utilityLayerScene);\n            if (control.node) {\n                control.node.parent = this.node;\n            }\n            if (!this.blockLayout) {\n                this._arrangeChildren();\n            }\n        }\n        return this;\n    };\n    /**\n     * This function will be called everytime a new control is added\n     */\n    Container3D.prototype._arrangeChildren = function () { };\n    Container3D.prototype._createNode = function (scene) {\n        return new TransformNode(\"ContainerNode\", scene);\n    };\n    /**\n     * Removes a control from the children of this control\n     * @param control defines the control to remove\n     * @returns the current container\n     */\n    Container3D.prototype.removeControl = function (control) {\n        var index = this._children.indexOf(control);\n        if (index !== -1) {\n            this._children.splice(index, 1);\n            control.parent = null;\n            control._disposeNode();\n        }\n        return this;\n    };\n    Container3D.prototype._getTypeName = function () {\n        return \"Container3D\";\n    };\n    /**\n     * Releases all associated resources\n     */\n    Container3D.prototype.dispose = function () {\n        for (var _i = 0, _a = this._children; _i < _a.length; _i++) {\n            var control = _a[_i];\n            control.dispose();\n        }\n        this._children = [];\n        _super.prototype.dispose.call(this);\n    };\n    /** Control rotation will remain unchanged  */\n    Container3D.UNSET_ORIENTATION = 0;\n    /** Control will rotate to make it look at sphere central axis */\n    Container3D.FACEORIGIN_ORIENTATION = 1;\n    /** Control will rotate to make it look back at sphere central axis */\n    Container3D.FACEORIGINREVERSED_ORIENTATION = 2;\n    /** Control will rotate to look at z axis (0, 0, 1) */\n    Container3D.FACEFORWARD_ORIENTATION = 3;\n    /** Control will rotate to look at negative z axis (0, 0, -1) */\n    Container3D.FACEFORWARDREVERSED_ORIENTATION = 4;\n    return Container3D;\n}(Control3D));\nexport { Container3D };\n//# sourceMappingURL=container3D.js.map","import { __extends } from \"tslib\";\nimport { Tools } from \"@babylonjs/core/Misc/tools.js\";\nimport { Matrix, Vector3, TmpVectors } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { Container3D } from \"./container3D.js\";\n/**\n * Abstract class used to create a container panel deployed on the surface of a volume\n */\nvar VolumeBasedPanel = /** @class */ (function (_super) {\n    __extends(VolumeBasedPanel, _super);\n    /**\n     * Creates new VolumeBasedPanel\n     * @param name\n     */\n    function VolumeBasedPanel(name) {\n        var _this = _super.call(this, name) || this;\n        _this._columns = 10;\n        _this._rows = 0;\n        _this._rowThenColum = true;\n        _this._orientation = Container3D.FACEORIGIN_ORIENTATION;\n        /**\n         * Gets or sets the distance between elements\n         */\n        _this.margin = 0;\n        return _this;\n    }\n    Object.defineProperty(VolumeBasedPanel.prototype, \"orientation\", {\n        /**\n         * Gets or sets the orientation to apply to all controls (BABYLON.Container3D.FaceOriginReversedOrientation by default)\n         * | Value | Type                                | Description |\n         * | ----- | ----------------------------------- | ----------- |\n         * | 0     | UNSET_ORIENTATION                   |  Control rotation will remain unchanged |\n         * | 1     | FACEORIGIN_ORIENTATION              |  Control will rotate to make it look at sphere central axis |\n         * | 2     | FACEORIGINREVERSED_ORIENTATION      |  Control will rotate to make it look back at sphere central axis |\n         * | 3     | FACEFORWARD_ORIENTATION             |  Control will rotate to look at z axis (0, 0, 1) |\n         * | 4     | FACEFORWARDREVERSED_ORIENTATION     |  Control will rotate to look at negative z axis (0, 0, -1) |\n         */\n        get: function () {\n            return this._orientation;\n        },\n        set: function (value) {\n            var _this = this;\n            if (this._orientation === value) {\n                return;\n            }\n            this._orientation = value;\n            Tools.SetImmediate(function () {\n                _this._arrangeChildren();\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VolumeBasedPanel.prototype, \"columns\", {\n        /**\n         * Gets or sets the number of columns requested (10 by default).\n         * The panel will automatically compute the number of rows based on number of child controls.\n         */\n        get: function () {\n            return this._columns;\n        },\n        set: function (value) {\n            var _this = this;\n            if (this._columns === value) {\n                return;\n            }\n            this._columns = value;\n            this._rowThenColum = true;\n            Tools.SetImmediate(function () {\n                _this._arrangeChildren();\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VolumeBasedPanel.prototype, \"rows\", {\n        /**\n         * Gets or sets a the number of rows requested.\n         * The panel will automatically compute the number of columns based on number of child controls.\n         */\n        get: function () {\n            return this._rows;\n        },\n        set: function (value) {\n            var _this = this;\n            if (this._rows === value) {\n                return;\n            }\n            this._rows = value;\n            this._rowThenColum = false;\n            Tools.SetImmediate(function () {\n                _this._arrangeChildren();\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    VolumeBasedPanel.prototype._arrangeChildren = function () {\n        this._cellWidth = 0;\n        this._cellHeight = 0;\n        var rows = 0;\n        var columns = 0;\n        var controlCount = 0;\n        var currentInverseWorld = Matrix.Invert(this.node.computeWorldMatrix(true));\n        // Measure\n        for (var _i = 0, _a = this._children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            if (!child.mesh) {\n                continue;\n            }\n            controlCount++;\n            child.mesh.computeWorldMatrix(true);\n            //   child.mesh.getWorldMatrix().multiplyToRef(currentInverseWorld, Tmp.Matrix[0]);\n            var boundingBox = child.mesh.getHierarchyBoundingVectors();\n            var extendSize = TmpVectors.Vector3[0];\n            var diff = TmpVectors.Vector3[1];\n            boundingBox.max.subtractToRef(boundingBox.min, diff);\n            diff.scaleInPlace(0.5);\n            Vector3.TransformNormalToRef(diff, currentInverseWorld, extendSize);\n            this._cellWidth = Math.max(this._cellWidth, extendSize.x * 2);\n            this._cellHeight = Math.max(this._cellHeight, extendSize.y * 2);\n        }\n        this._cellWidth += this.margin * 2;\n        this._cellHeight += this.margin * 2;\n        // Arrange\n        if (this._rowThenColum) {\n            columns = this._columns;\n            rows = Math.ceil(controlCount / this._columns);\n        }\n        else {\n            rows = this._rows;\n            columns = Math.ceil(controlCount / this._rows);\n        }\n        var startOffsetX = columns * 0.5 * this._cellWidth;\n        var startOffsetY = rows * 0.5 * this._cellHeight;\n        var nodeGrid = [];\n        var cellCounter = 0;\n        if (this._rowThenColum) {\n            for (var r = 0; r < rows; r++) {\n                for (var c = 0; c < columns; c++) {\n                    nodeGrid.push(new Vector3(c * this._cellWidth - startOffsetX + this._cellWidth / 2, r * this._cellHeight - startOffsetY + this._cellHeight / 2, 0));\n                    cellCounter++;\n                    if (cellCounter > controlCount) {\n                        break;\n                    }\n                }\n            }\n        }\n        else {\n            for (var c = 0; c < columns; c++) {\n                for (var r = 0; r < rows; r++) {\n                    nodeGrid.push(new Vector3(c * this._cellWidth - startOffsetX + this._cellWidth / 2, r * this._cellHeight - startOffsetY + this._cellHeight / 2, 0));\n                    cellCounter++;\n                    if (cellCounter > controlCount) {\n                        break;\n                    }\n                }\n            }\n        }\n        cellCounter = 0;\n        for (var _b = 0, _c = this._children; _b < _c.length; _b++) {\n            var child = _c[_b];\n            if (!child.mesh) {\n                continue;\n            }\n            this._mapGridNode(child, nodeGrid[cellCounter]);\n            cellCounter++;\n        }\n        this._finalProcessing();\n    };\n    /** Child classes can implement this function to provide additional processing */\n    VolumeBasedPanel.prototype._finalProcessing = function () { };\n    return VolumeBasedPanel;\n}(Container3D));\nexport { VolumeBasedPanel };\n//# sourceMappingURL=volumeBasedPanel.js.map","import { __extends } from \"tslib\";\nimport { Tools } from \"@babylonjs/core/Misc/tools.js\";\nimport { Matrix, TmpVectors, Vector3 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { VolumeBasedPanel } from \"./volumeBasedPanel.js\";\nimport { Container3D } from \"./container3D.js\";\nimport { Axis, Space } from \"@babylonjs/core/Maths/math.axis.js\";\n/**\n * Class used to create a container panel deployed on the surface of a cylinder\n */\nvar CylinderPanel = /** @class */ (function (_super) {\n    __extends(CylinderPanel, _super);\n    function CylinderPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._radius = 5.0;\n        return _this;\n    }\n    Object.defineProperty(CylinderPanel.prototype, \"radius\", {\n        /**\n         * Gets or sets the radius of the cylinder where to project controls (5 by default)\n         */\n        get: function () {\n            return this._radius;\n        },\n        set: function (value) {\n            var _this = this;\n            if (this._radius === value) {\n                return;\n            }\n            this._radius = value;\n            Tools.SetImmediate(function () {\n                _this._arrangeChildren();\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CylinderPanel.prototype._mapGridNode = function (control, nodePosition) {\n        var mesh = control.mesh;\n        if (!mesh) {\n            return;\n        }\n        var newPos = this._cylindricalMapping(nodePosition);\n        control.position = newPos;\n        switch (this.orientation) {\n            case Container3D.FACEORIGIN_ORIENTATION:\n                mesh.lookAt(new Vector3(2 * newPos.x, newPos.y, 2 * newPos.z));\n                break;\n            case Container3D.FACEORIGINREVERSED_ORIENTATION:\n                mesh.lookAt(new Vector3(-newPos.x, newPos.y, -newPos.z));\n                break;\n            case Container3D.FACEFORWARD_ORIENTATION:\n                break;\n            case Container3D.FACEFORWARDREVERSED_ORIENTATION:\n                mesh.rotate(Axis.Y, Math.PI, Space.LOCAL);\n                break;\n        }\n    };\n    CylinderPanel.prototype._cylindricalMapping = function (source) {\n        var newPos = new Vector3(0, source.y, this._radius);\n        var yAngle = source.x / this._radius;\n        Matrix.RotationYawPitchRollToRef(yAngle, 0, 0, TmpVectors.Matrix[0]);\n        return Vector3.TransformNormal(newPos, TmpVectors.Matrix[0]);\n    };\n    return CylinderPanel;\n}(VolumeBasedPanel));\nexport { CylinderPanel };\n//# sourceMappingURL=cylinderPanel.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nvar name = \"fluentVertexShader\";\nvar shader = \"precision highp float;\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec2 uv;\\nuniform mat4 world;\\nuniform mat4 viewProjection;\\nvarying vec2 vUV;\\n#ifdef BORDER\\nvarying vec2 scaleInfo;\\nuniform float borderWidth;\\nuniform vec3 scaleFactor;\\n#endif\\n#ifdef HOVERLIGHT\\nvarying vec3 worldPosition;\\n#endif\\nvoid main(void) {\\nvUV=uv;\\n#ifdef BORDER\\nvec3 scale=scaleFactor;\\nfloat minScale=min(min(scale.x,scale.y),scale.z);\\nfloat maxScale=max(max(scale.x,scale.y),scale.z);\\nfloat minOverMiddleScale=minScale/(scale.x+scale.y+scale.z-minScale-maxScale);\\nfloat areaYZ=scale.y*scale.z;\\nfloat areaXZ=scale.x*scale.z;\\nfloat areaXY=scale.x*scale.y;\\nfloat scaledBorderWidth=borderWidth; \\nif (abs(normal.x)==1.0) \\n{\\nscale.x=scale.y;\\nscale.y=scale.z;\\nif (areaYZ>areaXZ && areaYZ>areaXY)\\n{\\nscaledBorderWidth*=minOverMiddleScale;\\n}\\n}\\nelse if (abs(normal.y)==1.0) \\n{\\nscale.x=scale.z;\\nif (areaXZ>areaXY && areaXZ>areaYZ)\\n{\\nscaledBorderWidth*=minOverMiddleScale;\\n}\\n}\\nelse \\n{\\nif (areaXY>areaYZ && areaXY>areaXZ)\\n{\\nscaledBorderWidth*=minOverMiddleScale;\\n}\\n}\\nfloat scaleRatio=min(scale.x,scale.y)/max(scale.x,scale.y);\\nif (scale.x>scale.y)\\n{\\nscaleInfo.x=1.0-(scaledBorderWidth*scaleRatio);\\nscaleInfo.y=1.0-scaledBorderWidth;\\n}\\nelse\\n{\\nscaleInfo.x=1.0-scaledBorderWidth;\\nscaleInfo.y=1.0-(scaledBorderWidth*scaleRatio);\\n} \\n#endif \\nvec4 worldPos=world*vec4(position,1.0);\\n#ifdef HOVERLIGHT\\nworldPosition=worldPos.xyz;\\n#endif\\ngl_Position=viewProjection*worldPos;\\n}\\n\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var fluentVertexShader = { name: name, shader: shader };\n//# sourceMappingURL=fluent.vertex.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nvar name = \"fluentPixelShader\";\nvar shader = \"precision highp float;\\nvarying vec2 vUV;\\nuniform vec4 albedoColor;\\n#ifdef INNERGLOW\\nuniform vec4 innerGlowColor;\\n#endif\\n#ifdef BORDER\\nvarying vec2 scaleInfo;\\nuniform float edgeSmoothingValue;\\nuniform float borderMinValue;\\n#endif\\n#ifdef HOVERLIGHT\\nvarying vec3 worldPosition;\\nuniform vec3 hoverPosition;\\nuniform vec4 hoverColor;\\nuniform float hoverRadius;\\n#endif\\n#ifdef TEXTURE\\nuniform sampler2D albedoSampler;\\nuniform mat4 textureMatrix;\\nvec2 finalUV;\\n#endif\\nvoid main(void) {\\nvec3 albedo=albedoColor.rgb;\\nfloat alpha=albedoColor.a;\\n#ifdef TEXTURE\\nfinalUV=vec2(textureMatrix*vec4(vUV,1.0,0.0));\\nalbedo=texture2D(albedoSampler,finalUV).rgb;\\n#endif\\n#ifdef HOVERLIGHT\\nfloat pointToHover=(1.0-clamp(length(hoverPosition-worldPosition)/hoverRadius,0.,1.))*hoverColor.a;\\nalbedo=clamp(albedo+hoverColor.rgb*pointToHover,0.,1.);\\n#else\\nfloat pointToHover=1.0;\\n#endif\\n#ifdef BORDER \\nfloat borderPower=10.0;\\nfloat inverseBorderPower=1.0/borderPower;\\nvec3 borderColor=albedo*borderPower;\\nvec2 distanceToEdge;\\ndistanceToEdge.x=abs(vUV.x-0.5)*2.0;\\ndistanceToEdge.y=abs(vUV.y-0.5)*2.0;\\nfloat borderValue=max(smoothstep(scaleInfo.x-edgeSmoothingValue,scaleInfo.x+edgeSmoothingValue,distanceToEdge.x),\\nsmoothstep(scaleInfo.y-edgeSmoothingValue,scaleInfo.y+edgeSmoothingValue,distanceToEdge.y));\\nborderColor=borderColor*borderValue*max(borderMinValue*inverseBorderPower,pointToHover); \\nalbedo+=borderColor;\\nalpha=max(alpha,borderValue);\\n#endif\\n#ifdef INNERGLOW\\nvec2 uvGlow=(vUV-vec2(0.5,0.5))*(innerGlowColor.a*2.0);\\nuvGlow=uvGlow*uvGlow;\\nuvGlow=uvGlow*uvGlow;\\nalbedo+=mix(vec3(0.0,0.0,0.0),innerGlowColor.rgb,uvGlow.x+uvGlow.y); \\n#endif\\ngl_FragColor=vec4(albedo,alpha);\\n}\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var fluentPixelShader = { name: name, shader: shader };\n//# sourceMappingURL=fluent.fragment.js.map","import { __decorate, __extends } from \"tslib\";\nimport { serializeAsColor4, serializeAsVector3, serializeAsTexture, serialize, expandToProperty, serializeAsColor3, SerializationHelper } from \"@babylonjs/core/Misc/decorators.js\";\nimport { Vector3, TmpVectors } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { MaterialDefines } from \"@babylonjs/core/Materials/materialDefines.js\";\nimport { MaterialHelper } from \"@babylonjs/core/Materials/materialHelper.js\";\nimport { PushMaterial } from \"@babylonjs/core/Materials/pushMaterial.js\";\nimport { VertexBuffer } from \"@babylonjs/core/Buffers/buffer.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { Color3, Color4 } from \"@babylonjs/core/Maths/math.color.js\";\nimport \"./shaders/fluent.vertex.js\";\nimport \"./shaders/fluent.fragment.js\";\n/** @hidden */\nvar FluentMaterialDefines = /** @class */ (function (_super) {\n    __extends(FluentMaterialDefines, _super);\n    function FluentMaterialDefines() {\n        var _this = _super.call(this) || this;\n        _this.INNERGLOW = false;\n        _this.BORDER = false;\n        _this.HOVERLIGHT = false;\n        _this.TEXTURE = false;\n        _this.rebuild();\n        return _this;\n    }\n    return FluentMaterialDefines;\n}(MaterialDefines));\nexport { FluentMaterialDefines };\n/**\n * Class used to render controls with fluent design\n */\nvar FluentMaterial = /** @class */ (function (_super) {\n    __extends(FluentMaterial, _super);\n    /**\n     * Creates a new Fluent material\n     * @param name defines the name of the material\n     * @param scene defines the hosting scene\n     */\n    function FluentMaterial(name, scene) {\n        var _this = _super.call(this, name, scene) || this;\n        /**\n         * Gets or sets inner glow intensity. A value of 0 means no glow (default is 0.5)\n         */\n        _this.innerGlowColorIntensity = 0.5;\n        /**\n         * Gets or sets the inner glow color (white by default)\n         */\n        _this.innerGlowColor = new Color3(1.0, 1.0, 1.0);\n        /**\n         * Gets or sets the albedo color (Default is Color3(0.3, 0.35, 0.4))\n         */\n        _this.albedoColor = new Color3(0.3, 0.35, 0.4);\n        /**\n         * Gets or sets a boolean indicating if borders must be rendered (default is false)\n         */\n        _this.renderBorders = false;\n        /**\n         * Gets or sets border width (default is 0.5)\n         */\n        _this.borderWidth = 0.5;\n        /**\n         * Gets or sets a value indicating the smoothing value applied to border edges (0.02 by default)\n         */\n        _this.edgeSmoothingValue = 0.02;\n        /**\n         * Gets or sets the minimum value that can be applied to border width (default is 0.1)\n         */\n        _this.borderMinValue = 0.1;\n        /**\n         * Gets or sets a boolean indicating if hover light must be rendered (default is false)\n         */\n        _this.renderHoverLight = false;\n        /**\n         * Gets or sets the radius used to render the hover light (default is 1.0)\n         */\n        _this.hoverRadius = 0.01;\n        /**\n         * Gets or sets the color used to render the hover light (default is Color4(0.3, 0.3, 0.3, 1.0))\n         */\n        _this.hoverColor = new Color4(0.3, 0.3, 0.3, 1.0);\n        /**\n         * Gets or sets the hover light position in world space (default is Vector3.Zero())\n         */\n        _this.hoverPosition = Vector3.Zero();\n        return _this;\n    }\n    FluentMaterial.prototype.needAlphaBlending = function () {\n        return this.alpha !== 1.0;\n    };\n    FluentMaterial.prototype.needAlphaTesting = function () {\n        return false;\n    };\n    FluentMaterial.prototype.getAlphaTestTexture = function () {\n        return null;\n    };\n    FluentMaterial.prototype.isReadyForSubMesh = function (mesh, subMesh) {\n        if (this.isFrozen) {\n            if (subMesh.effect && subMesh.effect._wasPreviouslyReady) {\n                return true;\n            }\n        }\n        if (!subMesh.materialDefines) {\n            subMesh.materialDefines = new FluentMaterialDefines();\n        }\n        var scene = this.getScene();\n        var defines = subMesh.materialDefines;\n        if (!this.checkReadyOnEveryCall && subMesh.effect) {\n            if (defines._renderId === scene.getRenderId()) {\n                return true;\n            }\n        }\n        if (defines._areTexturesDirty) {\n            defines.INNERGLOW = this.innerGlowColorIntensity > 0;\n            defines.BORDER = this.renderBorders;\n            defines.HOVERLIGHT = this.renderHoverLight;\n            if (this._albedoTexture) {\n                if (!this._albedoTexture.isReadyOrNotBlocking()) {\n                    return false;\n                }\n                else {\n                    defines.TEXTURE = true;\n                }\n            }\n            else {\n                defines.TEXTURE = false;\n            }\n        }\n        var engine = scene.getEngine();\n        // Get correct effect\n        if (defines.isDirty) {\n            defines.markAsProcessed();\n            scene.resetCachedMaterial();\n            //Attributes\n            var attribs = [VertexBuffer.PositionKind];\n            attribs.push(VertexBuffer.NormalKind);\n            attribs.push(VertexBuffer.UVKind);\n            var shaderName = \"fluent\";\n            var uniforms = [\n                \"world\",\n                \"viewProjection\",\n                \"innerGlowColor\",\n                \"albedoColor\",\n                \"borderWidth\",\n                \"edgeSmoothingValue\",\n                \"scaleFactor\",\n                \"borderMinValue\",\n                \"hoverColor\",\n                \"hoverPosition\",\n                \"hoverRadius\",\n                \"textureMatrix\",\n            ];\n            var samplers = [\"albedoSampler\"];\n            var uniformBuffers = new Array();\n            MaterialHelper.PrepareUniformsAndSamplersList({\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: defines,\n                maxSimultaneousLights: 4,\n            });\n            var join = defines.toString();\n            subMesh.setEffect(scene.getEngine().createEffect(shaderName, {\n                attributes: attribs,\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: join,\n                fallbacks: null,\n                onCompiled: this.onCompiled,\n                onError: this.onError,\n                indexParameters: { maxSimultaneousLights: 4 },\n            }, engine), defines, this._materialContext);\n        }\n        if (!subMesh.effect || !subMesh.effect.isReady()) {\n            return false;\n        }\n        defines._renderId = scene.getRenderId();\n        subMesh.effect._wasPreviouslyReady = true;\n        return true;\n    };\n    FluentMaterial.prototype.bindForSubMesh = function (world, mesh, subMesh) {\n        var scene = this.getScene();\n        var defines = subMesh.materialDefines;\n        if (!defines) {\n            return;\n        }\n        var effect = subMesh.effect;\n        if (!effect) {\n            return;\n        }\n        this._activeEffect = effect;\n        // Matrices\n        this.bindOnlyWorldMatrix(world);\n        this._activeEffect.setMatrix(\"viewProjection\", scene.getTransformMatrix());\n        if (this._mustRebind(scene, effect)) {\n            this._activeEffect.setColor4(\"albedoColor\", this.albedoColor, this.alpha);\n            if (defines.INNERGLOW) {\n                this._activeEffect.setColor4(\"innerGlowColor\", this.innerGlowColor, this.innerGlowColorIntensity);\n            }\n            if (defines.BORDER) {\n                this._activeEffect.setFloat(\"borderWidth\", this.borderWidth);\n                this._activeEffect.setFloat(\"edgeSmoothingValue\", this.edgeSmoothingValue);\n                this._activeEffect.setFloat(\"borderMinValue\", this.borderMinValue);\n                mesh.getBoundingInfo().boundingBox.extendSize.multiplyToRef(mesh.scaling, TmpVectors.Vector3[0]);\n                this._activeEffect.setVector3(\"scaleFactor\", TmpVectors.Vector3[0]);\n            }\n            if (defines.HOVERLIGHT) {\n                this._activeEffect.setDirectColor4(\"hoverColor\", this.hoverColor);\n                this._activeEffect.setFloat(\"hoverRadius\", this.hoverRadius);\n                this._activeEffect.setVector3(\"hoverPosition\", this.hoverPosition);\n            }\n            if (defines.TEXTURE && this._albedoTexture) {\n                this._activeEffect.setTexture(\"albedoSampler\", this._albedoTexture);\n                var matrix = this._albedoTexture.getTextureMatrix();\n                this._activeEffect.setMatrix(\"textureMatrix\", matrix);\n            }\n        }\n        this._afterBind(mesh, this._activeEffect);\n    };\n    FluentMaterial.prototype.getActiveTextures = function () {\n        var activeTextures = _super.prototype.getActiveTextures.call(this);\n        return activeTextures;\n    };\n    FluentMaterial.prototype.hasTexture = function (texture) {\n        if (_super.prototype.hasTexture.call(this, texture)) {\n            return true;\n        }\n        return false;\n    };\n    FluentMaterial.prototype.dispose = function (forceDisposeEffect) {\n        _super.prototype.dispose.call(this, forceDisposeEffect);\n    };\n    FluentMaterial.prototype.clone = function (name) {\n        var _this = this;\n        return SerializationHelper.Clone(function () { return new FluentMaterial(name, _this.getScene()); }, this);\n    };\n    FluentMaterial.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.customType = \"BABYLON.GUI.FluentMaterial\";\n        return serializationObject;\n    };\n    FluentMaterial.prototype.getClassName = function () {\n        return \"FluentMaterial\";\n    };\n    // Statics\n    FluentMaterial.Parse = function (source, scene, rootUrl) {\n        return SerializationHelper.Parse(function () { return new FluentMaterial(source.name, scene); }, source, scene, rootUrl);\n    };\n    __decorate([\n        serialize(),\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], FluentMaterial.prototype, \"innerGlowColorIntensity\", void 0);\n    __decorate([\n        serializeAsColor3()\n    ], FluentMaterial.prototype, \"innerGlowColor\", void 0);\n    __decorate([\n        serializeAsColor3()\n    ], FluentMaterial.prototype, \"albedoColor\", void 0);\n    __decorate([\n        serialize(),\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], FluentMaterial.prototype, \"renderBorders\", void 0);\n    __decorate([\n        serialize()\n    ], FluentMaterial.prototype, \"borderWidth\", void 0);\n    __decorate([\n        serialize()\n    ], FluentMaterial.prototype, \"edgeSmoothingValue\", void 0);\n    __decorate([\n        serialize()\n    ], FluentMaterial.prototype, \"borderMinValue\", void 0);\n    __decorate([\n        serialize(),\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], FluentMaterial.prototype, \"renderHoverLight\", void 0);\n    __decorate([\n        serialize()\n    ], FluentMaterial.prototype, \"hoverRadius\", void 0);\n    __decorate([\n        serializeAsColor4()\n    ], FluentMaterial.prototype, \"hoverColor\", void 0);\n    __decorate([\n        serializeAsVector3()\n    ], FluentMaterial.prototype, \"hoverPosition\", void 0);\n    __decorate([\n        serializeAsTexture(\"albedoTexture\")\n    ], FluentMaterial.prototype, \"_albedoTexture\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesAndMiscDirty\")\n    ], FluentMaterial.prototype, \"albedoTexture\", void 0);\n    return FluentMaterial;\n}(PushMaterial));\nexport { FluentMaterial };\nRegisterClass(\"BABYLON.GUI.FluentMaterial\", FluentMaterial);\n//# sourceMappingURL=fluentMaterial.js.map","import { __extends } from \"tslib\";\nimport { Button3D } from \"./button3D.js\";\nimport { Vector3 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { StandardMaterial } from \"@babylonjs/core/Materials/standardMaterial.js\";\nimport { Mesh } from \"@babylonjs/core/Meshes/mesh.js\";\nimport { CreatePlane } from \"@babylonjs/core/Meshes/Builders/planeBuilder.js\";\nimport { CreateBox } from \"@babylonjs/core/Meshes/Builders/boxBuilder.js\";\nimport { FadeInOutBehavior } from \"@babylonjs/core/Behaviors/Meshes/fadeInOutBehavior.js\";\nimport { FluentMaterial } from \"../materials/fluent/fluentMaterial.js\";\nimport { StackPanel } from \"../../2D/controls/stackPanel.js\";\nimport { Image } from \"../../2D/controls/image.js\";\nimport { TextBlock } from \"../../2D/controls/textBlock.js\";\nimport { AdvancedDynamicTexture } from \"../../2D/advancedDynamicTexture.js\";\nimport { Color3 } from \"@babylonjs/core/Maths/math.color.js\";\nimport { DomManagement } from \"@babylonjs/core/Misc/domManagement.js\";\n/**\n * Class used to create a holographic button in 3D\n */\nvar HolographicButton = /** @class */ (function (_super) {\n    __extends(HolographicButton, _super);\n    /**\n     * Creates a new button\n     * @param name defines the control name\n     * @param shareMaterials\n     */\n    function HolographicButton(name, shareMaterials) {\n        if (shareMaterials === void 0) { shareMaterials = true; }\n        var _this = _super.call(this, name) || this;\n        _this._shareMaterials = true;\n        _this._shareMaterials = shareMaterials;\n        // Default animations\n        _this.pointerEnterAnimation = function () {\n            if (!_this.mesh) {\n                return;\n            }\n            _this._frontPlate.setEnabled(true);\n        };\n        _this.pointerOutAnimation = function () {\n            if (!_this.mesh) {\n                return;\n            }\n            _this._frontPlate.setEnabled(false);\n        };\n        return _this;\n    }\n    HolographicButton.prototype._disposeTooltip = function () {\n        this._tooltipFade = null;\n        if (this._tooltipTextBlock) {\n            this._tooltipTextBlock.dispose();\n        }\n        if (this._tooltipTexture) {\n            this._tooltipTexture.dispose();\n        }\n        if (this._tooltipMesh) {\n            this._tooltipMesh.dispose();\n        }\n        this.onPointerEnterObservable.remove(this._tooltipHoverObserver);\n        this.onPointerOutObservable.remove(this._tooltipOutObserver);\n    };\n    Object.defineProperty(HolographicButton.prototype, \"renderingGroupId\", {\n        get: function () {\n            return this._backPlate.renderingGroupId;\n        },\n        /**\n         * Rendering ground id of all the mesh in the button\n         */\n        set: function (id) {\n            this._backPlate.renderingGroupId = id;\n            this._textPlate.renderingGroupId = id;\n            this._frontPlate.renderingGroupId = id;\n            if (this._tooltipMesh) {\n                this._tooltipMesh.renderingGroupId = id;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HolographicButton.prototype, \"tooltipText\", {\n        get: function () {\n            if (this._tooltipTextBlock) {\n                return this._tooltipTextBlock.text;\n            }\n            return null;\n        },\n        /**\n         * Text to be displayed on the tooltip shown when hovering on the button. When set to null tooltip is disabled. (Default: null)\n         */\n        set: function (text) {\n            var _this = this;\n            if (!text) {\n                this._disposeTooltip();\n                return;\n            }\n            if (!this._tooltipFade) {\n                var rightHandedScene = this._backPlate._scene.useRightHandedSystem;\n                // Create tooltip with mesh and text\n                this._tooltipMesh = CreatePlane(\"\", { size: 1 }, this._backPlate._scene);\n                var tooltipBackground = CreatePlane(\"\", { size: 1, sideOrientation: Mesh.DOUBLESIDE }, this._backPlate._scene);\n                var mat = new StandardMaterial(\"\", this._backPlate._scene);\n                mat.diffuseColor = Color3.FromHexString(\"#212121\");\n                tooltipBackground.material = mat;\n                tooltipBackground.isPickable = false;\n                this._tooltipMesh.addChild(tooltipBackground);\n                tooltipBackground.position = Vector3.Forward(rightHandedScene).scale(0.05);\n                this._tooltipMesh.scaling.y = 1 / 3;\n                this._tooltipMesh.position = Vector3.Up().scale(0.7).add(Vector3.Forward(rightHandedScene).scale(-0.15));\n                this._tooltipMesh.isPickable = false;\n                this._tooltipMesh.parent = this._backPlate;\n                // Create text texture for the tooltip\n                this._tooltipTexture = AdvancedDynamicTexture.CreateForMesh(this._tooltipMesh);\n                this._tooltipTextBlock = new TextBlock();\n                this._tooltipTextBlock.scaleY = 3;\n                this._tooltipTextBlock.color = \"white\";\n                this._tooltipTextBlock.fontSize = 130;\n                this._tooltipTexture.addControl(this._tooltipTextBlock);\n                // Add hover action to tooltip\n                this._tooltipFade = new FadeInOutBehavior();\n                this._tooltipFade.delay = 500;\n                this._tooltipMesh.addBehavior(this._tooltipFade);\n                this._tooltipHoverObserver = this.onPointerEnterObservable.add(function () {\n                    if (_this._tooltipFade) {\n                        _this._tooltipFade.fadeIn(true);\n                    }\n                });\n                this._tooltipOutObserver = this.onPointerOutObservable.add(function () {\n                    if (_this._tooltipFade) {\n                        _this._tooltipFade.fadeIn(false);\n                    }\n                });\n            }\n            if (this._tooltipTextBlock) {\n                this._tooltipTextBlock.text = text;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HolographicButton.prototype, \"text\", {\n        /**\n         * Gets or sets text for the button\n         */\n        get: function () {\n            return this._text;\n        },\n        set: function (value) {\n            if (this._text === value) {\n                return;\n            }\n            this._text = value;\n            this._rebuildContent();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HolographicButton.prototype, \"imageUrl\", {\n        /**\n         * Gets or sets the image url for the button\n         */\n        get: function () {\n            return this._imageUrl;\n        },\n        set: function (value) {\n            if (this._imageUrl === value) {\n                return;\n            }\n            this._imageUrl = value;\n            this._rebuildContent();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HolographicButton.prototype, \"backMaterial\", {\n        /**\n         * Gets the back material used by this button\n         */\n        get: function () {\n            return this._backMaterial;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HolographicButton.prototype, \"frontMaterial\", {\n        /**\n         * Gets the front material used by this button\n         */\n        get: function () {\n            return this._frontMaterial;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HolographicButton.prototype, \"plateMaterial\", {\n        /**\n         * Gets the plate material used by this button\n         */\n        get: function () {\n            return this._plateMaterial;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HolographicButton.prototype, \"shareMaterials\", {\n        /**\n         * Gets a boolean indicating if this button shares its material with other HolographicButtons\n         */\n        get: function () {\n            return this._shareMaterials;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    HolographicButton.prototype._getTypeName = function () {\n        return \"HolographicButton\";\n    };\n    HolographicButton.prototype._rebuildContent = function () {\n        this._disposeFacadeTexture();\n        var panel = new StackPanel();\n        panel.isVertical = true;\n        if (DomManagement.IsDocumentAvailable() && !!document.createElement) {\n            if (this._imageUrl) {\n                var image = new Image();\n                image.source = this._imageUrl;\n                image.paddingTop = \"40px\";\n                image.height = \"180px\";\n                image.width = \"100px\";\n                image.paddingBottom = \"40px\";\n                panel.addControl(image);\n            }\n        }\n        if (this._text) {\n            var text = new TextBlock();\n            text.text = this._text;\n            text.color = \"white\";\n            text.height = \"30px\";\n            text.fontSize = 24;\n            panel.addControl(text);\n        }\n        if (this._frontPlate) {\n            this.content = panel;\n        }\n    };\n    // Mesh association\n    HolographicButton.prototype._createNode = function (scene) {\n        this._backPlate = CreateBox(this.name + \"BackMesh\", {\n            width: 1.0,\n            height: 1.0,\n            depth: 0.08,\n        }, scene);\n        this._frontPlate = CreateBox(this.name + \"FrontMesh\", {\n            width: 1.0,\n            height: 1.0,\n            depth: 0.08,\n        }, scene);\n        this._frontPlate.parent = this._backPlate;\n        this._frontPlate.position = Vector3.Forward(scene.useRightHandedSystem).scale(-0.08);\n        this._frontPlate.isPickable = false;\n        this._frontPlate.setEnabled(false);\n        this._textPlate = _super.prototype._createNode.call(this, scene);\n        this._textPlate.parent = this._backPlate;\n        this._textPlate.position = Vector3.Forward(scene.useRightHandedSystem).scale(-0.08);\n        this._textPlate.isPickable = false;\n        return this._backPlate;\n    };\n    HolographicButton.prototype._applyFacade = function (facadeTexture) {\n        this._plateMaterial.emissiveTexture = facadeTexture;\n        this._plateMaterial.opacityTexture = facadeTexture;\n    };\n    HolographicButton.prototype._createBackMaterial = function (mesh) {\n        var _this = this;\n        this._backMaterial = new FluentMaterial(this.name + \"Back Material\", mesh.getScene());\n        this._backMaterial.renderHoverLight = true;\n        this._pickedPointObserver = this._host.onPickedPointChangedObservable.add(function (pickedPoint) {\n            if (pickedPoint) {\n                _this._backMaterial.hoverPosition = pickedPoint;\n                _this._backMaterial.hoverColor.a = 1.0;\n            }\n            else {\n                _this._backMaterial.hoverColor.a = 0;\n            }\n        });\n    };\n    HolographicButton.prototype._createFrontMaterial = function (mesh) {\n        this._frontMaterial = new FluentMaterial(this.name + \"Front Material\", mesh.getScene());\n        this._frontMaterial.innerGlowColorIntensity = 0; // No inner glow\n        this._frontMaterial.alpha = 0.5; // Additive\n        this._frontMaterial.renderBorders = true;\n    };\n    HolographicButton.prototype._createPlateMaterial = function (mesh) {\n        this._plateMaterial = new StandardMaterial(this.name + \"Plate Material\", mesh.getScene());\n        this._plateMaterial.specularColor = Color3.Black();\n    };\n    HolographicButton.prototype._affectMaterial = function (mesh) {\n        // Back\n        if (this._shareMaterials) {\n            if (!this._host._sharedMaterials[\"backFluentMaterial\"]) {\n                this._createBackMaterial(mesh);\n                this._host._sharedMaterials[\"backFluentMaterial\"] = this._backMaterial;\n            }\n            else {\n                this._backMaterial = this._host._sharedMaterials[\"backFluentMaterial\"];\n            }\n            // Front\n            if (!this._host._sharedMaterials[\"frontFluentMaterial\"]) {\n                this._createFrontMaterial(mesh);\n                this._host._sharedMaterials[\"frontFluentMaterial\"] = this._frontMaterial;\n            }\n            else {\n                this._frontMaterial = this._host._sharedMaterials[\"frontFluentMaterial\"];\n            }\n        }\n        else {\n            this._createBackMaterial(mesh);\n            this._createFrontMaterial(mesh);\n        }\n        this._createPlateMaterial(mesh);\n        this._backPlate.material = this._backMaterial;\n        this._frontPlate.material = this._frontMaterial;\n        this._textPlate.material = this._plateMaterial;\n        this._rebuildContent();\n    };\n    /**\n     * Releases all associated resources\n     */\n    HolographicButton.prototype.dispose = function () {\n        _super.prototype.dispose.call(this); // will dispose main mesh ie. back plate\n        this._disposeTooltip();\n        if (!this.shareMaterials) {\n            this._backMaterial.dispose();\n            this._frontMaterial.dispose();\n            this._plateMaterial.dispose();\n            if (this._pickedPointObserver) {\n                this._host.onPickedPointChangedObservable.remove(this._pickedPointObserver);\n                this._pickedPointObserver = null;\n            }\n        }\n    };\n    return HolographicButton;\n}(Button3D));\nexport { HolographicButton };\n//# sourceMappingURL=holographicButton.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nvar name = \"fluentButtonPixelShader\";\nvar shader = \"uniform vec3 cameraPosition;\\nvarying vec3 vPosition;\\nvarying vec3 vNormal;\\nvarying vec2 vUV;\\nvarying vec3 vTangent;\\nvarying vec3 vBinormal;\\nvarying vec4 vColor;\\nvarying vec4 vExtra1;\\nuniform float _Edge_Width_;\\nuniform vec4 _Edge_Color_;\\nuniform bool _Relative_Width_;\\nuniform float _Proximity_Max_Intensity_;\\nuniform float _Proximity_Far_Distance_;\\nuniform float _Proximity_Near_Radius_;\\nuniform float _Proximity_Anisotropy_;\\nuniform float _Selection_Fuzz_;\\nuniform float _Selected_;\\nuniform float _Selection_Fade_;\\nuniform float _Selection_Fade_Size_;\\nuniform float _Selected_Distance_;\\nuniform float _Selected_Fade_Length_;\\nuniform bool _Blob_Enable_;\\nuniform vec3 _Blob_Position_;\\nuniform float _Blob_Intensity_;\\nuniform float _Blob_Near_Size_;\\nuniform float _Blob_Far_Size_;\\nuniform float _Blob_Near_Distance_;\\nuniform float _Blob_Far_Distance_;\\nuniform float _Blob_Fade_Length_;\\nuniform float _Blob_Inner_Fade_;\\nuniform float _Blob_Pulse_;\\nuniform float _Blob_Fade_;\\nuniform sampler2D _Blob_Texture_;\\nuniform bool _Blob_Enable_2_;\\nuniform vec3 _Blob_Position_2_;\\nuniform float _Blob_Near_Size_2_;\\nuniform float _Blob_Inner_Fade_2_;\\nuniform float _Blob_Pulse_2_;\\nuniform float _Blob_Fade_2_;\\nuniform vec3 _Active_Face_Dir_;\\nuniform vec3 _Active_Face_Up_;\\nuniform bool Enable_Fade;\\nuniform float _Fade_Width_;\\nuniform bool _Smooth_Active_Face_;\\nuniform bool _Show_Frame_;\\nuniform bool _Use_Blob_Texture_;\\nuniform bool Use_Global_Left_Index;\\nuniform bool Use_Global_Right_Index;\\nuniform vec4 Global_Left_Index_Tip_Position;\\nuniform vec4 Global_Right_Index_Tip_Position;\\nuniform vec4 Global_Left_Thumb_Tip_Position;\\nuniform vec4 Global_Right_Thumb_Tip_Position;\\nuniform float Global_Left_Index_Tip_Proximity;\\nuniform float Global_Right_Index_Tip_Proximity;\\nvoid Holo_Edge_Fragment_B35(\\nvec4 Edges,\\nfloat Edge_Width,\\nout float NotEdge)\\n{\\nvec2 c=vec2(min(Edges.r,Edges.g),min(Edges.b,Edges.a));\\nvec2 df=fwidth(c)*Edge_Width;\\nvec2 g=clamp(c/df,0.0,1.0);\\nNotEdge=g.x*g.y;\\n}\\nvoid Blob_Fragment_B39(\\nvec2 UV,\\nvec3 Blob_Info,\\nsampler2D Blob_Texture,\\nout vec4 Blob_Color)\\n{\\nfloat k=dot(UV,UV);\\nBlob_Color=Blob_Info.y*texture(Blob_Texture,vec2(vec2(sqrt(k),Blob_Info.x).x,1.0-vec2(sqrt(k),Blob_Info.x).y))*(1.0-clamp(k,0.0,1.0));\\n}\\nvec2 FilterStep(vec2 Edge,vec2 X)\\n{\\nvec2 dX=max(fwidth(X),vec2(0.00001,0.00001));\\nreturn clamp( (X+dX-max(Edge,X-dX))/(dX*2.0),0.0,1.0);\\n}\\nvoid Wireframe_Fragment_B59(\\nvec3 Widths,\\nvec2 UV,\\nfloat Proximity,\\nvec4 Edge_Color,\\nout vec4 Wireframe)\\n{\\nvec2 c=min(UV,vec2(1.0,1.0)-UV);\\nvec2 g=FilterStep(Widths.xy*0.5,c); \\nWireframe=(1.0-min(g.x,g.y))*Proximity*Edge_Color;\\n}\\nvoid Proximity_B53(\\nvec3 Proximity_Center,\\nvec3 Proximity_Center_2,\\nfloat Proximity_Max_Intensity,\\nfloat Proximity_Near_Radius,\\nvec3 Position,\\nvec3 Show_Selection,\\nvec4 Extra1,\\nfloat Dist_To_Face,\\nfloat Intensity,\\nout float Proximity)\\n{\\nvec2 delta1=Extra1.xy;\\nvec2 delta2=Extra1.zw;\\nfloat d2=sqrt(min(dot(delta1,delta1),dot(delta2,delta2))+Dist_To_Face*Dist_To_Face);\\nProximity=Intensity*Proximity_Max_Intensity*(1.0-clamp(d2/Proximity_Near_Radius,0.0,1.0))*(1.0-Show_Selection.x)+Show_Selection.x;\\n}\\nvoid To_XYZ_B46(\\nvec3 Vec3,\\nout float X,\\nout float Y,\\nout float Z)\\n{\\nX=Vec3.x;\\nY=Vec3.y;\\nZ=Vec3.z;\\n}\\nvoid main()\\n{\\nfloat NotEdge_Q35;\\n#if ENABLE_FADE\\nHolo_Edge_Fragment_B35(vColor,_Fade_Width_,NotEdge_Q35);\\n#else\\nNotEdge_Q35=1.0;\\n#endif\\nvec4 Blob_Color_Q39;\\nfloat k=dot(vUV,vUV);\\nvec2 blobTextureCoord=vec2(vec2(sqrt(k),vTangent.x).x,1.0-vec2(sqrt(k),vTangent.x).y);\\nvec4 blobColor=mix(vec4(1.0,1.0,1.0,1.0)*step(1.0-vTangent.x,clamp(sqrt(k)+0.1,0.0,1.0)),texture(_Blob_Texture_,blobTextureCoord),float(_Use_Blob_Texture_));\\nBlob_Color_Q39=vTangent.y*blobColor*(1.0-clamp(k,0.0,1.0));\\nfloat Is_Quad_Q24;\\nIs_Quad_Q24=vNormal.z;\\nvec3 Blob_Position_Q41= mix(_Blob_Position_,Global_Left_Index_Tip_Position.xyz,float(Use_Global_Left_Index));\\nvec3 Blob_Position_Q42= mix(_Blob_Position_2_,Global_Right_Index_Tip_Position.xyz,float(Use_Global_Right_Index));\\nfloat X_Q46;\\nfloat Y_Q46;\\nfloat Z_Q46;\\nTo_XYZ_B46(vBinormal,X_Q46,Y_Q46,Z_Q46);\\nfloat Proximity_Q53;\\nProximity_B53(Blob_Position_Q41,Blob_Position_Q42,_Proximity_Max_Intensity_,_Proximity_Near_Radius_,vPosition,vBinormal,vExtra1,Y_Q46,Z_Q46,Proximity_Q53);\\nvec4 Wireframe_Q59;\\nWireframe_Fragment_B59(vNormal,vUV,Proximity_Q53,_Edge_Color_,Wireframe_Q59);\\nvec4 Wire_Or_Blob_Q23=mix(Wireframe_Q59,Blob_Color_Q39,Is_Quad_Q24);\\nvec4 Result_Q22;\\nResult_Q22=mix(Wire_Or_Blob_Q23,vec4(0.3,0.3,0.3,0.3),float(_Show_Frame_));\\nvec4 Final_Color_Q37=NotEdge_Q35*Result_Q22;\\nvec4 Out_Color=Final_Color_Q37;\\nfloat Clip_Threshold=0.0;\\nbool To_sRGB=false;\\ngl_FragColor=Out_Color;\\n}\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var fluentButtonPixelShader = { name: name, shader: shader };\n//# sourceMappingURL=fluentButton.fragment.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nvar name = \"fluentButtonVertexShader\";\nvar shader = \"uniform mat4 world;\\nuniform mat4 viewProjection;\\nuniform vec3 cameraPosition;\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec2 uv;\\nattribute vec3 tangent;\\nattribute vec4 color;\\nuniform float _Edge_Width_;\\nuniform vec4 _Edge_Color_;\\nuniform float _Proximity_Max_Intensity_;\\nuniform float _Proximity_Far_Distance_;\\nuniform float _Proximity_Near_Radius_;\\nuniform float _Proximity_Anisotropy_;\\nuniform float _Selection_Fuzz_;\\nuniform float _Selected_;\\nuniform float _Selection_Fade_;\\nuniform float _Selection_Fade_Size_;\\nuniform float _Selected_Distance_;\\nuniform float _Selected_Fade_Length_;\\nuniform bool _Blob_Enable_;\\nuniform vec3 _Blob_Position_;\\nuniform float _Blob_Intensity_;\\nuniform float _Blob_Near_Size_;\\nuniform float _Blob_Far_Size_;\\nuniform float _Blob_Near_Distance_;\\nuniform float _Blob_Far_Distance_;\\nuniform float _Blob_Fade_Length_;\\nuniform float _Blob_Inner_Fade_;\\nuniform float _Blob_Pulse_;\\nuniform float _Blob_Fade_;\\nuniform sampler2D _Blob_Texture_;\\nuniform bool _Blob_Enable_2_;\\nuniform vec3 _Blob_Position_2_;\\nuniform float _Blob_Near_Size_2_;\\nuniform float _Blob_Inner_Fade_2_;\\nuniform float _Blob_Pulse_2_;\\nuniform float _Blob_Fade_2_;\\nuniform vec3 _Active_Face_Dir_;\\nuniform vec3 _Active_Face_Up_;\\nuniform bool _Enable_Fade_;\\nuniform float _Fade_Width_;\\nuniform bool _Smooth_Active_Face_;\\nuniform bool _Show_Frame_;\\nuniform bool Use_Global_Left_Index;\\nuniform bool Use_Global_Right_Index;\\nuniform vec4 Global_Left_Index_Tip_Position;\\nuniform vec4 Global_Right_Index_Tip_Position;\\nuniform vec4 Global_Left_Thumb_Tip_Position;\\nuniform vec4 Global_Right_Thumb_Tip_Position;\\nuniform float Global_Left_Index_Tip_Proximity;\\nuniform float Global_Right_Index_Tip_Proximity;\\nvarying vec3 vPosition;\\nvarying vec3 vNormal;\\nvarying vec2 vUV;\\nvarying vec3 vTangent;\\nvarying vec3 vBinormal;\\nvarying vec4 vColor;\\nvarying vec4 vExtra1;\\nvoid Blob_Vertex_B47(\\nvec3 Position,\\nvec3 Normal,\\nvec3 Tangent,\\nvec3 Bitangent,\\nvec3 Blob_Position,\\nfloat Intensity,\\nfloat Blob_Near_Size,\\nfloat Blob_Far_Size,\\nfloat Blob_Near_Distance,\\nfloat Blob_Far_Distance,\\nvec4 Vx_Color,\\nvec2 UV,\\nvec3 Face_Center,\\nvec2 Face_Size,\\nvec2 In_UV,\\nfloat Blob_Fade_Length,\\nfloat Selection_Fade,\\nfloat Selection_Fade_Size,\\nfloat Inner_Fade,\\nvec3 Active_Face_Center,\\nfloat Blob_Pulse,\\nfloat Blob_Fade,\\nfloat Blob_Enabled,\\nout vec3 Out_Position,\\nout vec2 Out_UV,\\nout vec3 Blob_Info)\\n{\\nfloat blobSize,fadeIn;\\nvec3 Hit_Position;\\nBlob_Info=vec3(0.0,0.0,0.0);\\nfloat Hit_Distance=dot(Blob_Position-Face_Center,Normal);\\nHit_Position=Blob_Position-Hit_Distance*Normal;\\nfloat absD=abs(Hit_Distance);\\nfloat lerpVal=clamp((absD-Blob_Near_Distance)/(Blob_Far_Distance-Blob_Near_Distance),0.0,1.0);\\nfadeIn=1.0-clamp((absD-Blob_Far_Distance)/Blob_Fade_Length,0.0,1.0);\\nfloat innerFade=1.0-clamp(-Hit_Distance/Inner_Fade,0.0,1.0);\\nfloat farClip=clamp(1.0-step(Blob_Far_Distance+Blob_Fade_Length,absD),0.0,1.0);\\nfloat size=mix(Blob_Near_Size,Blob_Far_Size,lerpVal)*farClip;\\nblobSize=mix(size,Selection_Fade_Size,Selection_Fade)*innerFade*Blob_Enabled;\\nBlob_Info.x=lerpVal*0.5+0.5;\\nBlob_Info.y=fadeIn*Intensity*(1.0-Selection_Fade)*Blob_Fade;\\nBlob_Info.x*=(1.0-Blob_Pulse);\\nvec3 delta=Hit_Position-Face_Center;\\nvec2 blobCenterXY=vec2(dot(delta,Tangent),dot(delta,Bitangent));\\nvec2 quadUVin=2.0*UV-1.0; \\nvec2 blobXY=blobCenterXY+quadUVin*blobSize;\\nvec2 blobClipped=clamp(blobXY,-Face_Size*0.5,Face_Size*0.5);\\nvec2 blobUV=(blobClipped-blobCenterXY)/max(blobSize,0.0001)*2.0;\\nvec3 blobCorner=Face_Center+blobClipped.x*Tangent+blobClipped.y*Bitangent;\\nOut_Position=mix(Position,blobCorner,Vx_Color.rrr);\\nOut_UV=mix(In_UV,blobUV,Vx_Color.rr);\\n}\\nvec2 ProjectProximity(\\nvec3 blobPosition,\\nvec3 position,\\nvec3 center,\\nvec3 dir,\\nvec3 xdir,\\nvec3 ydir,\\nout float vdistance\\n)\\n{\\nvec3 delta=blobPosition-position;\\nvec2 xy=vec2(dot(delta,xdir),dot(delta,ydir));\\nvdistance=abs(dot(delta,dir));\\nreturn xy;\\n}\\nvoid Proximity_Vertex_B66(\\nvec3 Blob_Position,\\nvec3 Blob_Position_2,\\nvec3 Active_Face_Center,\\nvec3 Active_Face_Dir,\\nvec3 Position,\\nfloat Proximity_Far_Distance,\\nfloat Relative_Scale,\\nfloat Proximity_Anisotropy,\\nvec3 Up,\\nout vec4 Extra1,\\nout float Distance_To_Face,\\nout float Intensity)\\n{\\nvec3 Active_Face_Dir_X=normalize(cross(Active_Face_Dir,Up));\\nvec3 Active_Face_Dir_Y=cross(Active_Face_Dir,Active_Face_Dir_X);\\nfloat distz1,distz2;\\nExtra1.xy=ProjectProximity(Blob_Position,Position,Active_Face_Center,Active_Face_Dir,Active_Face_Dir_X*Proximity_Anisotropy,Active_Face_Dir_Y,distz1)/Relative_Scale;\\nExtra1.zw=ProjectProximity(Blob_Position_2,Position,Active_Face_Center,Active_Face_Dir,Active_Face_Dir_X*Proximity_Anisotropy,Active_Face_Dir_Y,distz2)/Relative_Scale;\\nDistance_To_Face=dot(Active_Face_Dir,Position-Active_Face_Center);\\nIntensity=1.0-clamp(min(distz1,distz2)/Proximity_Far_Distance,0.0,1.0);\\n}\\nvoid Holo_Edge_Vertex_B44(\\nvec3 Incident,\\nvec3 Normal,\\nvec2 UV,\\nvec3 Tangent,\\nvec3 Bitangent,\\nbool Smooth_Active_Face,\\nfloat Active,\\nout vec4 Holo_Edges)\\n{\\nfloat NdotI=dot(Incident,Normal);\\nvec2 flip=(UV-vec2(0.5,0.5));\\nfloat udot=dot(Incident,Tangent)*flip.x*NdotI;\\nfloat uval=1.0-float(udot>0.0);\\nfloat vdot=-dot(Incident,Bitangent)*flip.y*NdotI;\\nfloat vval=1.0-float(vdot>0.0);\\nfloat Smooth_And_Active=step(1.0,float(Smooth_Active_Face && Active>0.0));\\nuval=mix(uval,max(1.0,uval),Smooth_And_Active); \\nvval=mix(vval,max(1.0,vval),Smooth_And_Active);\\nHolo_Edges=vec4(1.0,1.0,1.0,1.0)-vec4(uval*UV.x,uval*(1.0-UV.x),vval*UV.y,vval*(1.0-UV.y));\\n}\\nvoid Object_To_World_Pos_B13(\\nvec3 Pos_Object,\\nout vec3 Pos_World)\\n{\\nPos_World=(world*vec4(Pos_Object,1.0)).xyz;\\n}\\nvoid Choose_Blob_B38(\\nvec4 Vx_Color,\\nvec3 Position1,\\nvec3 Position2,\\nbool Blob_Enable_1,\\nbool Blob_Enable_2,\\nfloat Near_Size_1,\\nfloat Near_Size_2,\\nfloat Blob_Inner_Fade_1,\\nfloat Blob_Inner_Fade_2,\\nfloat Blob_Pulse_1,\\nfloat Blob_Pulse_2,\\nfloat Blob_Fade_1,\\nfloat Blob_Fade_2,\\nout vec3 Position,\\nout float Near_Size,\\nout float Inner_Fade,\\nout float Blob_Enable,\\nout float Fade,\\nout float Pulse)\\n{\\nPosition=Position1*(1.0-Vx_Color.g)+Vx_Color.g*Position2;\\nfloat b1=float(Blob_Enable_1);\\nfloat b2=float(Blob_Enable_2);\\nBlob_Enable=b1+(b2-b1)*Vx_Color.g;\\nPulse=Blob_Pulse_1*(1.0-Vx_Color.g)+Vx_Color.g*Blob_Pulse_2;\\nFade=Blob_Fade_1*(1.0-Vx_Color.g)+Vx_Color.g*Blob_Fade_2;\\nNear_Size=Near_Size_1*(1.0-Vx_Color.g)+Vx_Color.g*Near_Size_2;\\nInner_Fade=Blob_Inner_Fade_1*(1.0-Vx_Color.g)+Vx_Color.g*Blob_Inner_Fade_2;\\n}\\nvoid Wireframe_Vertex_B51(\\nvec3 Position,\\nvec3 Normal,\\nvec3 Tangent,\\nvec3 Bitangent,\\nfloat Edge_Width,\\nvec2 Face_Size,\\nout vec3 Wire_Vx_Pos,\\nout vec2 UV,\\nout vec2 Widths)\\n{\\nWidths.xy=Edge_Width/Face_Size;\\nfloat x=dot(Position,Tangent);\\nfloat y=dot(Position,Bitangent);\\nfloat dx=0.5-abs(x);\\nfloat newx=(0.5-dx*Widths.x*2.0)*sign(x);\\nfloat dy=0.5-abs(y);\\nfloat newy=(0.5-dy*Widths.y*2.0)*sign(y);\\nWire_Vx_Pos=Normal*0.5+newx*Tangent+newy*Bitangent;\\nUV.x=dot(Wire_Vx_Pos,Tangent)+0.5;\\nUV.y=dot(Wire_Vx_Pos,Bitangent)+0.5;\\n}\\nvec2 ramp2(vec2 start,vec2 end,vec2 x)\\n{\\nreturn clamp((x-start)/(end-start),vec2(0.0,0.0),vec2(1.0,1.0));\\n}\\nfloat computeSelection(\\nvec3 blobPosition,\\nvec3 normal,\\nvec3 tangent,\\nvec3 bitangent,\\nvec3 faceCenter,\\nvec2 faceSize,\\nfloat selectionFuzz,\\nfloat farDistance,\\nfloat fadeLength\\n)\\n{\\nvec3 delta=blobPosition-faceCenter;\\nfloat absD=abs(dot(delta,normal));\\nfloat fadeIn=1.0-clamp((absD-farDistance)/fadeLength,0.0,1.0);\\nvec2 blobCenterXY=vec2(dot(delta,tangent),dot(delta,bitangent));\\nvec2 innerFace=faceSize*(1.0-selectionFuzz)*0.5;\\nvec2 selectPulse=ramp2(-faceSize*0.5,-innerFace,blobCenterXY)-ramp2(innerFace,faceSize*0.5,blobCenterXY);\\nreturn selectPulse.x*selectPulse.y*fadeIn;\\n}\\nvoid Selection_Vertex_B48(\\nvec3 Blob_Position,\\nvec3 Blob_Position_2,\\nvec3 Face_Center,\\nvec2 Face_Size,\\nvec3 Normal,\\nvec3 Tangent,\\nvec3 Bitangent,\\nfloat Selection_Fuzz,\\nfloat Selected,\\nfloat Far_Distance,\\nfloat Fade_Length,\\nvec3 Active_Face_Dir,\\nout float Show_Selection)\\n{\\nfloat select1=computeSelection(Blob_Position,Normal,Tangent,Bitangent,Face_Center,Face_Size,Selection_Fuzz,Far_Distance,Fade_Length);\\nfloat select2=computeSelection(Blob_Position_2,Normal,Tangent,Bitangent,Face_Center,Face_Size,Selection_Fuzz,Far_Distance,Fade_Length);\\nfloat Active=max(0.0,dot(Active_Face_Dir,Normal));\\nShow_Selection=mix(max(select1,select2),1.0,Selected)*Active;\\n}\\nvoid Proximity_Visibility_B54(\\nfloat Selection,\\nvec3 Proximity_Center,\\nvec3 Proximity_Center_2,\\nfloat Input_Width,\\nfloat Proximity_Far_Distance,\\nfloat Proximity_Radius,\\nvec3 Active_Face_Center,\\nvec3 Active_Face_Dir,\\nout float Width)\\n{\\nvec3 boxEdges=(world*vec4(vec3(0.5,0.5,0.5),0.0)).xyz;\\nfloat boxMaxSize=length(boxEdges);\\nfloat d1=dot(Proximity_Center-Active_Face_Center,Active_Face_Dir);\\nvec3 blob1=Proximity_Center-d1*Active_Face_Dir;\\nfloat d2=dot(Proximity_Center_2-Active_Face_Center,Active_Face_Dir);\\nvec3 blob2=Proximity_Center_2-d2*Active_Face_Dir;\\nvec3 delta1=blob1-Active_Face_Center;\\nvec3 delta2=blob2-Active_Face_Center;\\nfloat dist1=dot(delta1,delta1);\\nfloat dist2=dot(delta2,delta2);\\nfloat nearestProxDist=sqrt(min(dist1,dist2));\\nWidth=Input_Width*(1.0-step(boxMaxSize+Proximity_Radius,nearestProxDist))*(1.0-step(Proximity_Far_Distance,min(d1,d2))*(1.0-step(0.0001,Selection)));\\n}\\nvoid Object_To_World_Dir_B67(\\nvec3 Dir_Object,\\nout vec3 Dir_World)\\n{\\nDir_World=(world*vec4(Dir_Object,0.0)).xyz;\\n}\\nvoid main()\\n{\\nvec3 Active_Face_Center_Q49;\\nActive_Face_Center_Q49=(world*vec4(_Active_Face_Dir_*0.5,1.0)).xyz;\\nvec3 Blob_Position_Q41= mix(_Blob_Position_,Global_Left_Index_Tip_Position.xyz,float(Use_Global_Left_Index));\\nvec3 Blob_Position_Q42= mix(_Blob_Position_2_,Global_Right_Index_Tip_Position.xyz,float(Use_Global_Right_Index));\\nvec3 Active_Face_Dir_Q64=normalize((world*vec4(_Active_Face_Dir_,0.0)).xyz);\\nfloat Relative_Scale_Q57;\\n#if RELATIVE_WIDTH\\nRelative_Scale_Q57=length((world*vec4(vec3(0,1,0),0.0)).xyz);\\n#else\\nRelative_Scale_Q57=1.0;\\n#endif\\nvec3 Tangent_World_Q30;\\nTangent_World_Q30=(world*vec4(tangent,0.0)).xyz;\\nvec3 Binormal_World_Q31;\\nBinormal_World_Q31=(world*vec4((cross(normal,tangent)),0.0)).xyz;\\nvec3 Normal_World_Q60;\\nNormal_World_Q60=(world*vec4(normal,0.0)).xyz;\\nvec3 Result_Q18=0.5*normal;\\nvec3 Dir_World_Q67;\\nObject_To_World_Dir_B67(_Active_Face_Up_,Dir_World_Q67);\\nfloat Product_Q56=_Edge_Width_*Relative_Scale_Q57;\\nvec3 Normal_World_N_Q29=normalize(Normal_World_Q60);\\nvec3 Tangent_World_N_Q28=normalize(Tangent_World_Q30);\\nvec3 Binormal_World_N_Q32=normalize(Binormal_World_Q31);\\nvec3 Position_Q38;\\nfloat Near_Size_Q38;\\nfloat Inner_Fade_Q38;\\nfloat Blob_Enable_Q38;\\nfloat Fade_Q38;\\nfloat Pulse_Q38;\\nChoose_Blob_B38(color,Blob_Position_Q41,Blob_Position_Q42,_Blob_Enable_,_Blob_Enable_2_,_Blob_Near_Size_,_Blob_Near_Size_2_,_Blob_Inner_Fade_,_Blob_Inner_Fade_2_,_Blob_Pulse_,_Blob_Pulse_2_,_Blob_Fade_,_Blob_Fade_2_,Position_Q38,Near_Size_Q38,Inner_Fade_Q38,Blob_Enable_Q38,Fade_Q38,Pulse_Q38);\\nvec3 Face_Center_Q33;\\nFace_Center_Q33=(world*vec4(Result_Q18,1.0)).xyz;\\nvec2 Face_Size_Q50=vec2(length(Tangent_World_Q30),length(Binormal_World_Q31));\\nfloat Show_Selection_Q48;\\nSelection_Vertex_B48(Blob_Position_Q41,Blob_Position_Q42,Face_Center_Q33,Face_Size_Q50,Normal_World_N_Q29,Tangent_World_N_Q28,Binormal_World_N_Q32,_Selection_Fuzz_,_Selected_,_Selected_Distance_,_Selected_Fade_Length_,Active_Face_Dir_Q64,Show_Selection_Q48);\\nvec3 Normalized_Q72=normalize(Dir_World_Q67);\\nfloat Active_Q34=max(0.0,dot(Active_Face_Dir_Q64,Normal_World_N_Q29));\\nfloat Width_Q54;\\nProximity_Visibility_B54(Show_Selection_Q48,Blob_Position_Q41,Blob_Position_Q42,Product_Q56,_Proximity_Far_Distance_,_Proximity_Near_Radius_,Active_Face_Center_Q49,Active_Face_Dir_Q64,Width_Q54);\\nvec3 Wire_Vx_Pos_Q51;\\nvec2 UV_Q51;\\nvec2 Widths_Q51;\\nWireframe_Vertex_B51(position,normal,tangent,(cross(normal,tangent)),Width_Q54,Face_Size_Q50,Wire_Vx_Pos_Q51,UV_Q51,Widths_Q51);\\nvec3 Vec3_Q27=vec3(Widths_Q51.x,Widths_Q51.y,color.r);\\nvec3 Pos_World_Q13;\\nObject_To_World_Pos_B13(Wire_Vx_Pos_Q51,Pos_World_Q13);\\nvec3 Incident_Q36=normalize(Pos_World_Q13-cameraPosition);\\nvec3 Out_Position_Q47;\\nvec2 Out_UV_Q47;\\nvec3 Blob_Info_Q47;\\nBlob_Vertex_B47(Pos_World_Q13,Normal_World_N_Q29,Tangent_World_N_Q28,Binormal_World_N_Q32,Position_Q38,_Blob_Intensity_,Near_Size_Q38,_Blob_Far_Size_,_Blob_Near_Distance_,_Blob_Far_Distance_,color,uv,Face_Center_Q33,Face_Size_Q50,UV_Q51,_Blob_Fade_Length_,_Selection_Fade_,_Selection_Fade_Size_,Inner_Fade_Q38,Active_Face_Center_Q49,Pulse_Q38,Fade_Q38,Blob_Enable_Q38,Out_Position_Q47,Out_UV_Q47,Blob_Info_Q47);\\nvec4 Extra1_Q66;\\nfloat Distance_To_Face_Q66;\\nfloat Intensity_Q66;\\nProximity_Vertex_B66(Blob_Position_Q41,Blob_Position_Q42,Active_Face_Center_Q49,Active_Face_Dir_Q64,Pos_World_Q13,_Proximity_Far_Distance_,Relative_Scale_Q57,_Proximity_Anisotropy_,Normalized_Q72,Extra1_Q66,Distance_To_Face_Q66,Intensity_Q66);\\nvec4 Holo_Edges_Q44;\\nHolo_Edge_Vertex_B44(Incident_Q36,Normal_World_N_Q29,uv,Tangent_World_Q30,Binormal_World_Q31,_Smooth_Active_Face_,Active_Q34,Holo_Edges_Q44);\\nvec3 Vec3_Q19=vec3(Show_Selection_Q48,Distance_To_Face_Q66,Intensity_Q66);\\nvec3 Position=Out_Position_Q47;\\nvec2 UV=Out_UV_Q47;\\nvec3 Tangent=Blob_Info_Q47;\\nvec3 Binormal=Vec3_Q19;\\nvec3 Normal=Vec3_Q27;\\nvec4 Extra1=Extra1_Q66;\\nvec4 Color=Holo_Edges_Q44;\\ngl_Position=viewProjection*vec4(Position,1);\\nvPosition=Position;\\nvNormal=Normal;\\nvUV=UV;\\nvTangent=Tangent;\\nvBinormal=Binormal;\\nvColor=Color;\\nvExtra1=Extra1;\\n}\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var fluentButtonVertexShader = { name: name, shader: shader };\n//# sourceMappingURL=fluentButton.vertex.js.map","import { __decorate, __extends } from \"tslib\";\nimport { serializeAsColor4, serializeAsVector3, serialize, SerializationHelper } from \"@babylonjs/core/Misc/decorators.js\";\nimport { Vector3, Vector4 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { Texture } from \"@babylonjs/core/Materials/Textures/texture.js\";\nimport { MaterialDefines } from \"@babylonjs/core/Materials/materialDefines.js\";\nimport { MaterialHelper } from \"@babylonjs/core/Materials/materialHelper.js\";\nimport { PushMaterial } from \"@babylonjs/core/Materials/pushMaterial.js\";\nimport { VertexBuffer } from \"@babylonjs/core/Buffers/buffer.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { Color3, Color4 } from \"@babylonjs/core/Maths/math.color.js\";\nimport { EffectFallbacks } from \"@babylonjs/core/Materials/effectFallbacks.js\";\nimport { Constants } from \"@babylonjs/core/Engines/constants.js\";\nimport \"./shaders/fluentButton.fragment.js\";\nimport \"./shaders/fluentButton.vertex.js\";\n/** @hidden */\nvar FluentButtonMaterialDefines = /** @class */ (function (_super) {\n    __extends(FluentButtonMaterialDefines, _super);\n    function FluentButtonMaterialDefines() {\n        var _this = _super.call(this) || this;\n        _this.RELATIVE_WIDTH = true;\n        _this.ENABLE_FADE = true;\n        _this._needNormals = true;\n        _this._needUVs = true;\n        _this.rebuild();\n        return _this;\n    }\n    return FluentButtonMaterialDefines;\n}(MaterialDefines));\n/**\n * Class used to render square buttons with fluent design\n * @since 5.0.0\n */\nvar FluentButtonMaterial = /** @class */ (function (_super) {\n    __extends(FluentButtonMaterial, _super);\n    function FluentButtonMaterial(name, scene) {\n        var _this = _super.call(this, name, scene) || this;\n        /**\n         * Gets or sets the width of the glowing edge, relative to the scale of the button.\n         * (Default is 4% of the height).\n         */\n        _this.edgeWidth = 0.04;\n        /**\n         * Gets or sets the color of the glowing edge.\n         */\n        _this.edgeColor = new Color4(0.592157, 0.592157, 0.592157, 1.0);\n        /**\n         * Gets or sets the maximum intensity of the proximity light.\n         */\n        _this.proximityMaxIntensity = 0.45;\n        /**\n         * Gets or sets the maximum distance for the proximity light (Default is 16mm).\n         */\n        _this.proximityFarDistance = 0.16;\n        /**\n         * Gets or sets the radius of the proximity light when near to the surface.\n         */\n        _this.proximityNearRadius = 1.5;\n        /**\n         * Gets or sets the anisotropy of the proximity light.\n         */\n        _this.proximityAnisotropy = 1;\n        /**\n         * Gets or sets the amount of fuzzing in the selection focus.\n         */\n        _this.selectionFuzz = 0.5;\n        /**\n         * Gets or sets an override value to display the button as selected.\n         */\n        _this.selected = 0;\n        /**\n         * Gets or sets a value to manually fade the blob size.\n         */\n        _this.selectionFade = 0;\n        /**\n         * Gets or sets a value to manually shrink the blob size as it fades (see selectionFade).\n         */\n        _this.selectionFadeSize = 0.3;\n        /**\n         * Gets or sets the distance from the button the cursor should be for the button\n         * to appear selected (Default is 8cm).\n         */\n        _this.selectedDistance = 0.08;\n        /**\n         * Gets or sets the fall-off distance for the selection fade (Default is 8cm).\n         */\n        _this.selectedFadeLength = 0.08;\n        /**\n         * Gets or sets the intensity of the luminous blob (Ranges 0-1, default is 0.5).\n         */\n        _this.blobIntensity = 0.5;\n        /**\n         * The size of the blob when the pointer is at the blobFarDistance (Default is 5cm).\n         */\n        _this.blobFarSize = 0.05;\n        /**\n         * The distance at which the pointer is considered near. See [left|right]BlobNearSize. (Default is 0cm).\n         */\n        _this.blobNearDistance = 0;\n        /**\n         * The distance at which the pointer is considered far. See [left|right]BlobFarSize. (Default is 8cm).\n         */\n        _this.blobFarDistance = 0.08;\n        /**\n         * The distance over which the blob intensity fades from full to none (Default is 8cm).\n         */\n        _this.blobFadeLength = 0.08;\n        /**\n         * Gets or sets whether the blob corresponding to the left index finger is enabled.\n         */\n        _this.leftBlobEnable = true;\n        /**\n         * Gets or sets the size of the left blob when the left pointer is considered near. See blobNearDistance. (Default is 2.5cm).\n         */\n        _this.leftBlobNearSize = 0.025;\n        /**\n         * Gets or sets the progress of the pulse animation on the left blob (Ranges 0-1).\n         */\n        _this.leftBlobPulse = 0;\n        /**\n         * Gets or sets the fade factor on the left blob.\n         */\n        _this.leftBlobFade = 1;\n        /**\n         * Gets or sets the inner fade on the left blob;\n         */\n        _this.leftBlobInnerFade = 0.01;\n        /**\n         * Gets or sets whether the blob corresponding to the right index finger is enabled.\n         */\n        _this.rightBlobEnable = true;\n        /**\n         * Gets or sets the size of the right blob when the right pointer is considered near. See blobNearDistance. (Default is 2.5cm).\n         */\n        _this.rightBlobNearSize = 0.025;\n        /**\n         * Gets or sets the progress of the pulse animation on the right blob (Ranges 0-1).\n         */\n        _this.rightBlobPulse = 0;\n        /**\n         * Gets or sets the fade factor on the right blob.\n         */\n        _this.rightBlobFade = 1;\n        /**\n         * Gets or sets the inner fade on the right blob;\n         */\n        _this.rightBlobInnerFade = 0.01;\n        /**\n         * Gets or sets the direction of the active face before the world transform is applied.\n         * This should almost always be set to -z.\n         */\n        _this.activeFaceDir = new Vector3(0, 0, -1);\n        /**\n         * Gets or sets the button's up direction before the world transform is applied.\n         * This should almost always be set to +y.\n         */\n        _this.activeFaceUp = new Vector3(0, 1, 0);\n        /**\n         * Gets or sets whether the edge fade effect is enabled.\n         */\n        _this.enableFade = true;\n        /**\n         * Gets or sets a value corresponding to the width of the edge fade effect (Default 1.5).\n         */\n        _this.fadeWidth = 1.5;\n        /**\n         * Gets or sets whether the active face is smoothly interpolated.\n         */\n        _this.smoothActiveFace = true;\n        /**\n         * Gets or sets whether the frame of the fluent button model is visible.\n         * This is usually only enabled for debugging purposes.\n         */\n        _this.showFrame = false;\n        /**\n         * Gets or sets whether the blob color texture is used for the proximity\n         * light effect. This is usually only disabled for debugging purposes.\n         */\n        _this.useBlobTexture = true;\n        /**\n         * Gets or sets the world-space position of the tip of the left index finger.\n         */\n        _this.globalLeftIndexTipPosition = Vector3.Zero();\n        /**\n         * Gets or sets the world-space position of the tip of the right index finger.\n         */\n        _this.globalRightIndexTipPosition = Vector3.Zero();\n        _this.alphaMode = Constants.ALPHA_ADD;\n        _this.disableDepthWrite = true;\n        _this.backFaceCulling = false;\n        _this._blobTexture = new Texture(FluentButtonMaterial.BLOB_TEXTURE_URL, _this.getScene(), true, false, Texture.NEAREST_SAMPLINGMODE);\n        return _this;\n    }\n    FluentButtonMaterial.prototype.needAlphaBlending = function () {\n        return true;\n    };\n    FluentButtonMaterial.prototype.needAlphaTesting = function () {\n        return true;\n    };\n    FluentButtonMaterial.prototype.getAlphaTestTexture = function () {\n        return null;\n    };\n    // Methods\n    FluentButtonMaterial.prototype.isReadyForSubMesh = function (mesh, subMesh) {\n        if (this.isFrozen) {\n            if (subMesh.effect && subMesh.effect._wasPreviouslyReady) {\n                return true;\n            }\n        }\n        if (!subMesh.materialDefines) {\n            subMesh.materialDefines = new FluentButtonMaterialDefines();\n        }\n        var defines = subMesh.materialDefines;\n        var scene = this.getScene();\n        if (this._isReadyForSubMesh(subMesh)) {\n            return true;\n        }\n        var engine = scene.getEngine();\n        // Attribs\n        MaterialHelper.PrepareDefinesForAttributes(mesh, defines, true, false);\n        // Get correct effect\n        if (defines.isDirty) {\n            defines.markAsProcessed();\n            scene.resetCachedMaterial();\n            // Fallbacks\n            var fallbacks = new EffectFallbacks();\n            if (defines.FOG) {\n                fallbacks.addFallback(1, \"FOG\");\n            }\n            MaterialHelper.HandleFallbacksForShadows(defines, fallbacks);\n            defines.IMAGEPROCESSINGPOSTPROCESS = scene.imageProcessingConfiguration.applyByPostProcess;\n            //Attributes\n            var attribs = [VertexBuffer.PositionKind];\n            if (defines.NORMAL) {\n                attribs.push(VertexBuffer.NormalKind);\n            }\n            if (defines.UV1) {\n                attribs.push(VertexBuffer.UVKind);\n            }\n            if (defines.UV2) {\n                attribs.push(VertexBuffer.UV2Kind);\n            }\n            if (defines.VERTEXCOLOR) {\n                attribs.push(VertexBuffer.ColorKind);\n            }\n            if (defines.TANGENT) {\n                attribs.push(VertexBuffer.TangentKind);\n            }\n            MaterialHelper.PrepareAttributesForInstances(attribs, defines);\n            // Legacy browser patch\n            var shaderName = \"fluentButton\";\n            var join = defines.toString();\n            var uniforms = [\n                \"world\",\n                \"viewProjection\",\n                \"cameraPosition\",\n                \"_Edge_Width_\",\n                \"_Edge_Color_\",\n                \"_Relative_Width_\",\n                \"_Proximity_Max_Intensity_\",\n                \"_Proximity_Far_Distance_\",\n                \"_Proximity_Near_Radius_\",\n                \"_Proximity_Anisotropy_\",\n                \"_Selection_Fuzz_\",\n                \"_Selected_\",\n                \"_Selection_Fade_\",\n                \"_Selection_Fade_Size_\",\n                \"_Selected_Distance_\",\n                \"_Selected_Fade_Length_\",\n                \"_Blob_Enable_\",\n                \"_Blob_Position_\",\n                \"_Blob_Intensity_\",\n                \"_Blob_Near_Size_\",\n                \"_Blob_Far_Size_\",\n                \"_Blob_Near_Distance_\",\n                \"_Blob_Far_Distance_\",\n                \"_Blob_Fade_Length_\",\n                \"_Blob_Inner_Fade_\",\n                \"_Blob_Pulse_\",\n                \"_Blob_Fade_\",\n                \"_Blob_Texture_\",\n                \"_Blob_Enable_2_\",\n                \"_Blob_Position_2_\",\n                \"_Blob_Near_Size_2_\",\n                \"_Blob_Inner_Fade_2_\",\n                \"_Blob_Pulse_2_\",\n                \"_Blob_Fade_2_\",\n                \"_Active_Face_Dir_\",\n                \"_Active_Face_Up_\",\n                \"_Enable_Fade_\",\n                \"_Fade_Width_\",\n                \"_Smooth_Active_Face_\",\n                \"_Show_Frame_\",\n                \"_Use_Blob_Texture_\",\n                \"Use_Global_Left_Index\",\n                \"Use_Global_Right_Index\",\n                \"Global_Left_Index_Tip_Position\",\n                \"Global_Right_Index_Tip_Position\",\n                \"Global_Left_Thumb_Tip_Position\",\n                \"Global_Right_Thumb_Tip_Position\",\n                \"Global_Left_Index_Tip_Proximity\",\n                \"Global_Right_Index_Tip_Proximity\",\n            ];\n            var samplers = [\"_Blob_Texture_\"];\n            var uniformBuffers = new Array();\n            MaterialHelper.PrepareUniformsAndSamplersList({\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: defines,\n                maxSimultaneousLights: 4,\n            });\n            subMesh.setEffect(scene.getEngine().createEffect(shaderName, {\n                attributes: attribs,\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: join,\n                fallbacks: fallbacks,\n                onCompiled: this.onCompiled,\n                onError: this.onError,\n                indexParameters: { maxSimultaneousLights: 4 },\n            }, engine), defines, this._materialContext);\n        }\n        if (!subMesh.effect || !subMesh.effect.isReady()) {\n            return false;\n        }\n        defines._renderId = scene.getRenderId();\n        subMesh.effect._wasPreviouslyReady = true;\n        return true;\n    };\n    FluentButtonMaterial.prototype.bindForSubMesh = function (world, mesh, subMesh) {\n        var scene = this.getScene();\n        var defines = subMesh.materialDefines;\n        if (!defines) {\n            return;\n        }\n        var effect = subMesh.effect;\n        if (!effect) {\n            return;\n        }\n        this._activeEffect = effect;\n        // Matrices\n        this.bindOnlyWorldMatrix(world);\n        this._activeEffect.setMatrix(\"viewProjection\", scene.getTransformMatrix());\n        this._activeEffect.setVector3(\"cameraPosition\", scene.activeCamera.position);\n        // \"Blob Texture\"\n        this._activeEffect.setTexture(\"_Blob_Texture_\", this._blobTexture);\n        // \"Wireframe\"\n        this._activeEffect.setFloat(\"_Edge_Width_\", this.edgeWidth);\n        this._activeEffect.setColor4(\"_Edge_Color_\", new Color3(this.edgeColor.r, this.edgeColor.g, this.edgeColor.b), this.edgeColor.a);\n        //define _Relative_Width_ true;\n        // \"Proximity\"\n        this._activeEffect.setFloat(\"_Proximity_Max_Intensity_\", this.proximityMaxIntensity);\n        this._activeEffect.setFloat(\"_Proximity_Far_Distance_\", this.proximityFarDistance);\n        this._activeEffect.setFloat(\"_Proximity_Near_Radius_\", this.proximityNearRadius);\n        this._activeEffect.setFloat(\"_Proximity_Anisotropy_\", this.proximityAnisotropy);\n        // \"Selection\"\n        this._activeEffect.setFloat(\"_Selection_Fuzz_\", this.selectionFuzz);\n        this._activeEffect.setFloat(\"_Selected_\", this.selected);\n        this._activeEffect.setFloat(\"_Selection_Fade_\", this.selectionFade);\n        this._activeEffect.setFloat(\"_Selection_Fade_Size_\", this.selectionFadeSize);\n        this._activeEffect.setFloat(\"_Selected_Distance_\", this.selectedDistance);\n        this._activeEffect.setFloat(\"_Selected_Fade_Length_\", this.selectedFadeLength);\n        // \"Blob\"\n        this._activeEffect.setFloat(\"_Blob_Enable_\", this.leftBlobEnable ? 1.0 : 0.0);\n        this._activeEffect.setFloat(\"_Blob_Intensity_\", this.blobIntensity);\n        this._activeEffect.setFloat(\"_Blob_Near_Size_\", this.leftBlobNearSize);\n        this._activeEffect.setFloat(\"_Blob_Far_Size_\", this.blobFarSize);\n        this._activeEffect.setFloat(\"_Blob_Near_Distance_\", this.blobNearDistance);\n        this._activeEffect.setFloat(\"_Blob_Far_Distance_\", this.blobFarDistance);\n        this._activeEffect.setFloat(\"_Blob_Fade_Length_\", this.blobFadeLength);\n        this._activeEffect.setFloat(\"_Blob_Inner_Fade_\", this.leftBlobInnerFade);\n        this._activeEffect.setFloat(\"_Blob_Pulse_\", this.leftBlobPulse);\n        this._activeEffect.setFloat(\"_Blob_Fade_\", this.leftBlobFade);\n        // \"Blob 2\"\n        this._activeEffect.setFloat(\"_Blob_Enable_2_\", this.rightBlobEnable ? 1.0 : 0.0);\n        this._activeEffect.setFloat(\"_Blob_Near_Size_2_\", this.rightBlobNearSize);\n        this._activeEffect.setFloat(\"_Blob_Inner_Fade_2_\", this.rightBlobInnerFade);\n        this._activeEffect.setFloat(\"_Blob_Pulse_2_\", this.rightBlobPulse);\n        this._activeEffect.setFloat(\"_Blob_Fade_2_\", this.rightBlobFade);\n        // \"Active Face\"\n        this._activeEffect.setVector3(\"_Active_Face_Dir_\", this.activeFaceDir);\n        this._activeEffect.setVector3(\"_Active_Face_Up_\", this.activeFaceUp);\n        // \"Hololens Edge Fade\"\n        //define _Enable_Fade_ true;\n        this._activeEffect.setFloat(\"_Fade_Width_\", this.fadeWidth);\n        this._activeEffect.setFloat(\"_Smooth_Active_Face_\", this.smoothActiveFace ? 1.0 : 0.0);\n        // \"Debug\"\n        this._activeEffect.setFloat(\"_Show_Frame_\", this.showFrame ? 1.0 : 0.0);\n        this._activeEffect.setFloat(\"_Use_Blob_Texture_\", this.useBlobTexture ? 1.0 : 0.0);\n        // Global inputs\n        this._activeEffect.setFloat(\"Use_Global_Left_Index\", 1.0);\n        this._activeEffect.setFloat(\"Use_Global_Right_Index\", 1.0);\n        this._activeEffect.setVector4(\"Global_Left_Index_Tip_Position\", new Vector4(this.globalLeftIndexTipPosition.x, this.globalLeftIndexTipPosition.y, this.globalLeftIndexTipPosition.z, 1.0));\n        this._activeEffect.setVector4(\"Global_Right_Index_Tip_Position\", new Vector4(this.globalRightIndexTipPosition.x, this.globalRightIndexTipPosition.y, this.globalRightIndexTipPosition.z, 1.0));\n        this._afterBind(mesh, this._activeEffect);\n    };\n    /**\n     * Get the list of animatables in the material.\n     * @returns the list of animatables object used in the material\n     */\n    FluentButtonMaterial.prototype.getAnimatables = function () {\n        return [];\n    };\n    FluentButtonMaterial.prototype.dispose = function (forceDisposeEffect) {\n        _super.prototype.dispose.call(this, forceDisposeEffect);\n    };\n    FluentButtonMaterial.prototype.clone = function (name) {\n        var _this = this;\n        return SerializationHelper.Clone(function () { return new FluentButtonMaterial(name, _this.getScene()); }, this);\n    };\n    FluentButtonMaterial.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.customType = \"BABYLON.FluentButtonMaterial\";\n        return serializationObject;\n    };\n    FluentButtonMaterial.prototype.getClassName = function () {\n        return \"FluentButtonMaterial\";\n    };\n    // Statics\n    FluentButtonMaterial.Parse = function (source, scene, rootUrl) {\n        return SerializationHelper.Parse(function () { return new FluentButtonMaterial(source.name, scene); }, source, scene, rootUrl);\n    };\n    /**\n     * URL pointing to the texture used to define the coloring for the fluent blob effect.\n     */\n    FluentButtonMaterial.BLOB_TEXTURE_URL = \"https://assets.babylonjs.com/meshes/MRTK/mrtk-fluent-button-blob.png\";\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"edgeWidth\", void 0);\n    __decorate([\n        serializeAsColor4()\n    ], FluentButtonMaterial.prototype, \"edgeColor\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"proximityMaxIntensity\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"proximityFarDistance\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"proximityNearRadius\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"proximityAnisotropy\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"selectionFuzz\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"selected\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"selectionFade\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"selectionFadeSize\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"selectedDistance\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"selectedFadeLength\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"blobIntensity\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"blobFarSize\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"blobNearDistance\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"blobFarDistance\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"blobFadeLength\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"leftBlobEnable\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"leftBlobNearSize\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"leftBlobPulse\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"leftBlobFade\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"leftBlobInnerFade\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"rightBlobEnable\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"rightBlobNearSize\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"rightBlobPulse\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"rightBlobFade\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"rightBlobInnerFade\", void 0);\n    __decorate([\n        serializeAsVector3()\n    ], FluentButtonMaterial.prototype, \"activeFaceDir\", void 0);\n    __decorate([\n        serializeAsVector3()\n    ], FluentButtonMaterial.prototype, \"activeFaceUp\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"enableFade\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"fadeWidth\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"smoothActiveFace\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"showFrame\", void 0);\n    __decorate([\n        serialize()\n    ], FluentButtonMaterial.prototype, \"useBlobTexture\", void 0);\n    __decorate([\n        serializeAsVector3()\n    ], FluentButtonMaterial.prototype, \"globalLeftIndexTipPosition\", void 0);\n    __decorate([\n        serializeAsVector3()\n    ], FluentButtonMaterial.prototype, \"globalRightIndexTipPosition\", void 0);\n    return FluentButtonMaterial;\n}(PushMaterial));\nexport { FluentButtonMaterial };\nRegisterClass(\"BABYLON.GUI.FluentButtonMaterial\", FluentButtonMaterial);\n//# sourceMappingURL=fluentButtonMaterial.js.map","// Assumptions: absolute position of button mesh is inside the mesh\nimport { __extends } from \"tslib\";\nimport { Vector3, TmpVectors } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { PointerEventTypes } from \"@babylonjs/core/Events/pointerEvents.js\";\nimport { Observable } from \"@babylonjs/core/Misc/observable.js\";\nimport { Button3D } from \"./button3D.js\";\n/**\n * Class used to create a touchable button in 3D\n */\nvar TouchButton3D = /** @class */ (function (_super) {\n    __extends(TouchButton3D, _super);\n    /**\n     * Creates a new touchable button\n     * @param name defines the control name\n     * @param collisionMesh mesh to track collisions with\n     */\n    function TouchButton3D(name, collisionMesh) {\n        var _this = _super.call(this, name) || this;\n        _this._isNearPressed = false;\n        _this._interactionSurfaceHeight = 0;\n        _this._isToggleButton = false;\n        _this._toggleState = false;\n        _this._toggleButtonCallback = function () {\n            _this._onToggle(!_this._toggleState);\n        };\n        /**\n         * An event triggered when the button is toggled. Only fired if 'isToggleButton' is true\n         */\n        _this.onToggleObservable = new Observable();\n        _this.collidableFrontDirection = Vector3.Zero();\n        if (collisionMesh) {\n            _this.collisionMesh = collisionMesh;\n        }\n        return _this;\n    }\n    Object.defineProperty(TouchButton3D.prototype, \"isActiveNearInteraction\", {\n        /**\n         * Whether the current interaction is caused by near interaction or not\n         */\n        get: function () {\n            return this._isNearPressed;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TouchButton3D.prototype, \"collidableFrontDirection\", {\n        /**\n         * Returns the front-facing direction of the button, or Vector3.Zero if there is no 'front'\n         */\n        get: function () {\n            if (this._collisionMesh) {\n                // Update the front direction to reflect any rotations of the collision mesh\n                var transformedDirection = TmpVectors.Vector3[0];\n                Vector3.TransformNormalToRef(this._collidableFrontDirection, this._collisionMesh.getWorldMatrix(), transformedDirection);\n                return transformedDirection.normalize();\n            }\n            return this._collidableFrontDirection;\n        },\n        /**\n         * Sets the front-facing direction of the button. Pass in Vector3.Zero to allow interactions from any direction\n         * @param frontWorldDir the forward direction of the button\n         */\n        set: function (frontWorldDir) {\n            this._collidableFrontDirection = frontWorldDir.normalize();\n            if (this._collisionMesh) {\n                var invert = TmpVectors.Matrix[0];\n                invert.copyFrom(this._collisionMesh.getWorldMatrix());\n                invert.invert();\n                Vector3.TransformNormalToRef(this._collidableFrontDirection, invert, this._collidableFrontDirection);\n                this._collidableFrontDirection.normalize();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TouchButton3D.prototype, \"collisionMesh\", {\n        /**\n         * Sets the mesh used for testing input collision\n         * @param collisionMesh the new collision mesh for the button\n         */\n        set: function (collisionMesh) {\n            var _this = this;\n            var _a;\n            // Remove the GUI3DManager's data from the previous collision mesh's reserved data store, and reset interactability\n            if (this._collisionMesh) {\n                this._collisionMesh.isNearPickable = false;\n                if ((_a = this._collisionMesh.reservedDataStore) === null || _a === void 0 ? void 0 : _a.GUI3D) {\n                    this._collisionMesh.reservedDataStore.GUI3D = {};\n                }\n                this._collisionMesh.getChildMeshes().forEach(function (mesh) {\n                    var _a;\n                    mesh.isNearPickable = false;\n                    if ((_a = mesh.reservedDataStore) === null || _a === void 0 ? void 0 : _a.GUI3D) {\n                        mesh.reservedDataStore.GUI3D = {};\n                    }\n                });\n            }\n            this._collisionMesh = collisionMesh;\n            this._injectGUI3DReservedDataStore(this._collisionMesh).control = this;\n            this._collisionMesh.isNearPickable = true;\n            this._collisionMesh.getChildMeshes().forEach(function (mesh) {\n                _this._injectGUI3DReservedDataStore(mesh).control = _this;\n                mesh.isNearPickable = true;\n            });\n            this.collidableFrontDirection = collisionMesh.forward;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TouchButton3D.prototype, \"isToggleButton\", {\n        get: function () {\n            return this._isToggleButton;\n        },\n        /**\n         * Setter for if this TouchButton3D should be treated as a toggle button\n         * @param value If this TouchHolographicButton should act like a toggle button\n         */\n        set: function (value) {\n            if (value === this._isToggleButton) {\n                return;\n            }\n            this._isToggleButton = value;\n            if (value) {\n                this.onPointerUpObservable.add(this._toggleButtonCallback);\n            }\n            else {\n                this.onPointerUpObservable.removeCallback(this._toggleButtonCallback);\n                // Safety check, reset the button if it's toggled on but no longer a toggle button\n                if (this._toggleState) {\n                    this._onToggle(false);\n                }\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TouchButton3D.prototype, \"isToggled\", {\n        get: function () {\n            return this._toggleState;\n        },\n        /**\n         * A public entrypoint to set the toggle state of the TouchHolographicButton. Only works if 'isToggleButton' is true\n         * @param newState The new state to set the TouchHolographicButton's toggle state to\n         */\n        set: function (newState) {\n            if (this._isToggleButton && this._toggleState !== newState) {\n                this._onToggle(newState);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TouchButton3D.prototype._onToggle = function (newState) {\n        this._toggleState = newState;\n        this.onToggleObservable.notifyObservers(newState);\n    };\n    // Returns true if the collidable is in front of the button, or if the button has no front direction\n    TouchButton3D.prototype._isInteractionInFrontOfButton = function (collidablePos) {\n        return this._getInteractionHeight(collidablePos, this._collisionMesh.getAbsolutePosition()) > 0;\n    };\n    /**\n     * Get the height of the touchPoint from the collidable part of the button\n     * @param touchPoint the point to compare to the button, in absolute position\n     * @returns the depth of the touch point into the front of the button\n     */\n    TouchButton3D.prototype.getPressDepth = function (touchPoint) {\n        if (!this._isNearPressed) {\n            return 0;\n        }\n        var interactionHeight = this._getInteractionHeight(touchPoint, this._collisionMesh.getAbsolutePosition());\n        return this._interactionSurfaceHeight - interactionHeight;\n    };\n    // Returns true if the collidable is in front of the button, or if the button has no front direction\n    TouchButton3D.prototype._getInteractionHeight = function (interactionPos, basePos) {\n        var frontDir = this.collidableFrontDirection;\n        if (frontDir.length() === 0) {\n            // The button has no front, just return the distance to the base\n            return Vector3.Distance(interactionPos, basePos);\n        }\n        var d = Vector3.Dot(basePos, frontDir);\n        var abc = Vector3.Dot(interactionPos, frontDir);\n        return abc - d;\n    };\n    /**\n     * @param providedType\n     * @param nearMeshPosition\n     * @param activeInteractionCount\n     * @hidden\n     */\n    TouchButton3D.prototype._generatePointerEventType = function (providedType, nearMeshPosition, activeInteractionCount) {\n        if (providedType === PointerEventTypes.POINTERDOWN) {\n            if (!this._isInteractionInFrontOfButton(nearMeshPosition)) {\n                // Near interaction mesh is behind the button, don't send a pointer down\n                return PointerEventTypes.POINTERMOVE;\n            }\n            else {\n                this._isNearPressed = true;\n                this._interactionSurfaceHeight = this._getInteractionHeight(nearMeshPosition, this._collisionMesh.getAbsolutePosition());\n            }\n        }\n        if (providedType === PointerEventTypes.POINTERUP) {\n            if (activeInteractionCount == 0) {\n                // We get the release for the down we swallowed earlier, swallow as well\n                return PointerEventTypes.POINTERMOVE;\n            }\n            else {\n                this._isNearPressed = false;\n            }\n        }\n        return providedType;\n    };\n    TouchButton3D.prototype._getTypeName = function () {\n        return \"TouchButton3D\";\n    };\n    // Mesh association\n    TouchButton3D.prototype._createNode = function (scene) {\n        return _super.prototype._createNode.call(this, scene);\n    };\n    /**\n     * Releases all associated resources\n     */\n    TouchButton3D.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        // Clean up toggle observables\n        this.onPointerUpObservable.removeCallback(this._toggleButtonCallback);\n        this.onToggleObservable.clear();\n        if (this._collisionMesh) {\n            this._collisionMesh.dispose();\n        }\n    };\n    return TouchButton3D;\n}(Button3D));\nexport { TouchButton3D };\n//# sourceMappingURL=touchButton3D.js.map","import { __extends } from \"tslib\";\nimport { Vector3 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { StandardMaterial } from \"@babylonjs/core/Materials/standardMaterial.js\";\nimport { TransformNode } from \"@babylonjs/core/Meshes/transformNode.js\";\nimport { Mesh } from \"@babylonjs/core/Meshes/mesh.js\";\nimport { CreatePlane } from \"@babylonjs/core/Meshes/Builders/planeBuilder.js\";\nimport { CreateBox } from \"@babylonjs/core/Meshes/Builders/boxBuilder.js\";\nimport { FadeInOutBehavior } from \"@babylonjs/core/Behaviors/Meshes/fadeInOutBehavior.js\";\nimport { FluentMaterial } from \"../materials/fluent/fluentMaterial.js\";\nimport { FluentButtonMaterial } from \"../materials/fluentButton/fluentButtonMaterial.js\";\nimport { StackPanel } from \"../../2D/controls/stackPanel.js\";\nimport { Image } from \"../../2D/controls/image.js\";\nimport { TextBlock } from \"../../2D/controls/textBlock.js\";\nimport { AdvancedDynamicTexture } from \"../../2D/advancedDynamicTexture.js\";\nimport { Color3 } from \"@babylonjs/core/Maths/math.color.js\";\nimport { TouchButton3D } from \"./touchButton3D.js\";\nimport { SceneLoader } from \"@babylonjs/core/Loading/sceneLoader.js\";\nimport { DomManagement } from \"@babylonjs/core/Misc/domManagement.js\";\nimport { Scalar } from \"@babylonjs/core/Maths/math.scalar.js\";\n/**\n * Class used to create a holographic button in 3D\n * @since 5.0.0\n */\nvar TouchHolographicButton = /** @class */ (function (_super) {\n    __extends(TouchHolographicButton, _super);\n    /**\n     * Creates a new button\n     * @param name defines the control name\n     * @param shareMaterials\n     */\n    function TouchHolographicButton(name, shareMaterials) {\n        if (shareMaterials === void 0) { shareMaterials = true; }\n        var _this = _super.call(this, name) || this;\n        _this._shareMaterials = true;\n        _this._isBackplateVisible = true;\n        _this._frontPlateDepth = 0.5;\n        _this._backPlateDepth = 0.04;\n        _this._backplateColor = new Color3(0.08, 0.15, 0.55);\n        _this._backplateToggledColor = new Color3(0.25, 0.4, 0.95);\n        _this._shareMaterials = shareMaterials;\n        _this.pointerEnterAnimation = function () {\n            _this._frontMaterial.leftBlobEnable = true;\n            _this._frontMaterial.rightBlobEnable = true;\n        };\n        _this.pointerOutAnimation = function () {\n            _this._frontMaterial.leftBlobEnable = false;\n            _this._frontMaterial.rightBlobEnable = false;\n        };\n        _this.pointerDownAnimation = function () {\n            if (_this._frontPlate && !_this.isActiveNearInteraction) {\n                _this._frontPlate.scaling.z = _this._frontPlateDepth * 0.2;\n                _this._frontPlate.position = Vector3.Forward(_this._frontPlate._scene.useRightHandedSystem).scale((_this._frontPlateDepth - 0.2 * _this._frontPlateDepth) / 2);\n                _this._textPlate.position = Vector3.Forward(_this._textPlate._scene.useRightHandedSystem).scale(-(_this._backPlateDepth + 0.2 * _this._frontPlateDepth) / 2);\n            }\n        };\n        _this.pointerUpAnimation = function () {\n            if (_this._frontPlate) {\n                _this._frontPlate.scaling.z = _this._frontPlateDepth;\n                _this._frontPlate.position = Vector3.Forward(_this._frontPlate._scene.useRightHandedSystem).scale((_this._frontPlateDepth - _this._frontPlateDepth) / 2);\n                _this._textPlate.position = Vector3.Forward(_this._textPlate._scene.useRightHandedSystem).scale(-(_this._backPlateDepth + _this._frontPlateDepth) / 2);\n            }\n        };\n        _this.onPointerMoveObservable.add(function (position) {\n            if (_this._frontPlate && _this.isActiveNearInteraction) {\n                var scale = Vector3.Zero();\n                if (_this._backPlate.getWorldMatrix().decompose(scale, undefined, undefined)) {\n                    var interactionHeight = _this._getInteractionHeight(position, _this._backPlate.getAbsolutePosition()) / scale.z;\n                    interactionHeight = Scalar.Clamp(interactionHeight - _this._backPlateDepth / 2, 0.2 * _this._frontPlateDepth, _this._frontPlateDepth);\n                    _this._frontPlate.scaling.z = interactionHeight;\n                    _this._frontPlate.position = Vector3.Forward(_this._frontPlate._scene.useRightHandedSystem).scale((_this._frontPlateDepth - interactionHeight) / 2);\n                    _this._textPlate.position = Vector3.Forward(_this._textPlate._scene.useRightHandedSystem).scale(-(_this._backPlateDepth + interactionHeight) / 2);\n                }\n            }\n        });\n        _this._pointerHoverObserver = _this.onPointerMoveObservable.add(function (hoverPosition) {\n            _this._frontMaterial.globalLeftIndexTipPosition = hoverPosition;\n        });\n        return _this;\n    }\n    TouchHolographicButton.prototype._disposeTooltip = function () {\n        this._tooltipFade = null;\n        if (this._tooltipTextBlock) {\n            this._tooltipTextBlock.dispose();\n        }\n        if (this._tooltipTexture) {\n            this._tooltipTexture.dispose();\n        }\n        if (this._tooltipMesh) {\n            this._tooltipMesh.dispose();\n        }\n        this.onPointerEnterObservable.remove(this._tooltipHoverObserver);\n        this.onPointerOutObservable.remove(this._tooltipOutObserver);\n    };\n    Object.defineProperty(TouchHolographicButton.prototype, \"renderingGroupId\", {\n        get: function () {\n            return this._backPlate.renderingGroupId;\n        },\n        /**\n         * Rendering ground id of all the mesh in the button\n         */\n        set: function (id) {\n            this._backPlate.renderingGroupId = id;\n            this._textPlate.renderingGroupId = id;\n            this._frontPlate.renderingGroupId = id;\n            if (this._tooltipMesh) {\n                this._tooltipMesh.renderingGroupId = id;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TouchHolographicButton.prototype, \"mesh\", {\n        /**\n         * Gets the mesh used to render this control\n         */\n        get: function () {\n            return this._backPlate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TouchHolographicButton.prototype, \"tooltipText\", {\n        get: function () {\n            if (this._tooltipTextBlock) {\n                return this._tooltipTextBlock.text;\n            }\n            return null;\n        },\n        /**\n         * Text to be displayed on the tooltip shown when hovering on the button. When set to null tooltip is disabled. (Default: null)\n         */\n        set: function (text) {\n            var _this = this;\n            if (!text) {\n                this._disposeTooltip();\n                return;\n            }\n            if (!this._tooltipFade) {\n                var rightHandedScene = this._backPlate._scene.useRightHandedSystem;\n                // Create tooltip with mesh and text\n                this._tooltipMesh = CreatePlane(\"\", { size: 1 }, this._backPlate._scene);\n                var tooltipBackground = CreatePlane(\"\", { size: 1, sideOrientation: Mesh.DOUBLESIDE }, this._backPlate._scene);\n                var mat = new StandardMaterial(\"\", this._backPlate._scene);\n                mat.diffuseColor = Color3.FromHexString(\"#212121\");\n                tooltipBackground.material = mat;\n                tooltipBackground.isPickable = false;\n                this._tooltipMesh.addChild(tooltipBackground);\n                tooltipBackground.position = Vector3.Forward(rightHandedScene).scale(0.05);\n                this._tooltipMesh.scaling.y = 1 / 3;\n                this._tooltipMesh.position = Vector3.Up().scale(0.7).add(Vector3.Forward(rightHandedScene).scale(-0.15));\n                this._tooltipMesh.isPickable = false;\n                this._tooltipMesh.parent = this._backPlate;\n                // Create text texture for the tooltip\n                this._tooltipTexture = AdvancedDynamicTexture.CreateForMesh(this._tooltipMesh);\n                this._tooltipTextBlock = new TextBlock();\n                this._tooltipTextBlock.scaleY = 3;\n                this._tooltipTextBlock.color = \"white\";\n                this._tooltipTextBlock.fontSize = 130;\n                this._tooltipTexture.addControl(this._tooltipTextBlock);\n                // Add hover action to tooltip\n                this._tooltipFade = new FadeInOutBehavior();\n                this._tooltipFade.delay = 500;\n                this._tooltipMesh.addBehavior(this._tooltipFade);\n                this._tooltipHoverObserver = this.onPointerEnterObservable.add(function () {\n                    if (_this._tooltipFade) {\n                        _this._tooltipFade.fadeIn(true);\n                    }\n                });\n                this._tooltipOutObserver = this.onPointerOutObservable.add(function () {\n                    if (_this._tooltipFade) {\n                        _this._tooltipFade.fadeIn(false);\n                    }\n                });\n            }\n            if (this._tooltipTextBlock) {\n                this._tooltipTextBlock.text = text;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TouchHolographicButton.prototype, \"text\", {\n        /**\n         * Gets or sets text for the button\n         */\n        get: function () {\n            return this._text;\n        },\n        set: function (value) {\n            if (this._text === value) {\n                return;\n            }\n            this._text = value;\n            this._rebuildContent();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TouchHolographicButton.prototype, \"imageUrl\", {\n        /**\n         * Gets or sets the image url for the button\n         */\n        get: function () {\n            return this._imageUrl;\n        },\n        set: function (value) {\n            if (this._imageUrl === value) {\n                return;\n            }\n            this._imageUrl = value;\n            this._rebuildContent();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TouchHolographicButton.prototype, \"backMaterial\", {\n        /**\n         * Gets the back material used by this button\n         */\n        get: function () {\n            return this._backMaterial;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TouchHolographicButton.prototype, \"frontMaterial\", {\n        /**\n         * Gets the front material used by this button\n         */\n        get: function () {\n            return this._frontMaterial;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TouchHolographicButton.prototype, \"plateMaterial\", {\n        /**\n         * Gets the plate material used by this button\n         */\n        get: function () {\n            return this._plateMaterial;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TouchHolographicButton.prototype, \"shareMaterials\", {\n        /**\n         * Gets a boolean indicating if this button shares its material with other HolographicButtons\n         */\n        get: function () {\n            return this._shareMaterials;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TouchHolographicButton.prototype, \"isBackplateVisible\", {\n        /**\n         * Sets whether the backplate is visible or hidden. Hiding the backplate is not recommended without some sort of replacement\n         */\n        set: function (isVisible) {\n            if (this.mesh && !!this._backMaterial) {\n                if (isVisible && !this._isBackplateVisible) {\n                    this._backPlate.visibility = 1;\n                }\n                else if (!isVisible && this._isBackplateVisible) {\n                    this._backPlate.visibility = 0;\n                }\n            }\n            this._isBackplateVisible = isVisible;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TouchHolographicButton.prototype._getTypeName = function () {\n        return \"TouchHolographicButton\";\n    };\n    TouchHolographicButton.prototype._rebuildContent = function () {\n        this._disposeFacadeTexture();\n        var panel = new StackPanel();\n        panel.isVertical = true;\n        if (DomManagement.IsDocumentAvailable() && !!document.createElement) {\n            if (this._imageUrl) {\n                var image = new Image();\n                image.source = this._imageUrl;\n                image.paddingTop = \"40px\";\n                image.height = \"180px\";\n                image.width = \"100px\";\n                image.paddingBottom = \"40px\";\n                panel.addControl(image);\n            }\n        }\n        if (this._text) {\n            var text = new TextBlock();\n            text.text = this._text;\n            text.color = \"white\";\n            text.height = \"30px\";\n            text.fontSize = 24;\n            panel.addControl(text);\n        }\n        this.content = panel;\n    };\n    // Mesh association\n    TouchHolographicButton.prototype._createNode = function (scene) {\n        var _this = this;\n        var _a;\n        this.name = (_a = this.name) !== null && _a !== void 0 ? _a : \"TouchHolographicButton\";\n        var collisionMesh = CreateBox(\"\".concat(this.name, \"_collisionMesh\"), {\n            width: 1.0,\n            height: 1.0,\n            depth: this._frontPlateDepth,\n        }, scene);\n        collisionMesh.isPickable = true;\n        collisionMesh.isNearPickable = true;\n        collisionMesh.visibility = 0;\n        collisionMesh.position = Vector3.Forward(scene.useRightHandedSystem).scale(-this._frontPlateDepth / 2);\n        SceneLoader.ImportMeshAsync(undefined, TouchHolographicButton.MODEL_BASE_URL, TouchHolographicButton.MODEL_FILENAME, scene).then(function (result) {\n            var alphaMesh = CreateBox(\"${this.name}_alphaMesh\", {\n                width: 1.0,\n                height: 1.0,\n                depth: 1.0,\n            }, scene);\n            alphaMesh.isPickable = false;\n            alphaMesh.material = new StandardMaterial(\"${this.name}_alphaMesh_material\", scene);\n            alphaMesh.material.alpha = 0.15;\n            var importedFrontPlate = result.meshes[1];\n            importedFrontPlate.name = \"\".concat(_this.name, \"_frontPlate\");\n            importedFrontPlate.isPickable = false;\n            importedFrontPlate.scaling.z = _this._frontPlateDepth;\n            alphaMesh.parent = importedFrontPlate;\n            importedFrontPlate.parent = collisionMesh;\n            if (_this._frontMaterial) {\n                importedFrontPlate.material = _this._frontMaterial;\n            }\n            _this._frontPlate = importedFrontPlate;\n        });\n        this._backPlate = CreateBox(\"\".concat(this.name, \"_backPlate\"), {\n            width: 1.0,\n            height: 1.0,\n            depth: this._backPlateDepth,\n        }, scene);\n        this._backPlate.position = Vector3.Forward(scene.useRightHandedSystem).scale(this._backPlateDepth / 2);\n        this._backPlate.isPickable = false;\n        this._textPlate = _super.prototype._createNode.call(this, scene);\n        this._textPlate.name = \"\".concat(this.name, \"_textPlate\");\n        this._textPlate.isPickable = false;\n        this._textPlate.position = Vector3.Forward(scene.useRightHandedSystem).scale(-this._frontPlateDepth / 2);\n        this._backPlate.addChild(collisionMesh);\n        this._backPlate.addChild(this._textPlate);\n        var tn = new TransformNode(\"{this.name}_root\", scene);\n        this._backPlate.setParent(tn);\n        this.collisionMesh = collisionMesh;\n        this.collidableFrontDirection = this._backPlate.forward.negate(); // Mesh is facing the wrong way\n        return tn;\n    };\n    TouchHolographicButton.prototype._applyFacade = function (facadeTexture) {\n        this._plateMaterial.emissiveTexture = facadeTexture;\n        this._plateMaterial.opacityTexture = facadeTexture;\n        this._plateMaterial.diffuseColor = new Color3(0.4, 0.4, 0.4);\n    };\n    TouchHolographicButton.prototype._createBackMaterial = function (mesh) {\n        this._backMaterial = new FluentMaterial(this.name + \"backPlateMaterial\", mesh.getScene());\n        this._backMaterial.albedoColor = this._backplateColor;\n        this._backMaterial.renderBorders = true;\n        this._backMaterial.renderHoverLight = false;\n    };\n    TouchHolographicButton.prototype._createFrontMaterial = function (mesh) {\n        this._frontMaterial = new FluentButtonMaterial(this.name + \"Front Material\", mesh.getScene());\n    };\n    TouchHolographicButton.prototype._createPlateMaterial = function (mesh) {\n        this._plateMaterial = new StandardMaterial(this.name + \"Plate Material\", mesh.getScene());\n        this._plateMaterial.specularColor = Color3.Black();\n    };\n    TouchHolographicButton.prototype._onToggle = function (newState) {\n        if (this._backMaterial) {\n            if (newState) {\n                this._backMaterial.albedoColor = this._backplateToggledColor;\n            }\n            else {\n                this._backMaterial.albedoColor = this._backplateColor;\n            }\n        }\n        _super.prototype._onToggle.call(this, newState);\n    };\n    TouchHolographicButton.prototype._affectMaterial = function (mesh) {\n        if (this._shareMaterials) {\n            // Back\n            if (!this._host._touchSharedMaterials[\"backFluentMaterial\"]) {\n                this._createBackMaterial(mesh);\n                this._host._touchSharedMaterials[\"backFluentMaterial\"] = this._backMaterial;\n            }\n            else {\n                this._backMaterial = this._host._touchSharedMaterials[\"backFluentMaterial\"];\n            }\n            // Front\n            if (!this._host._touchSharedMaterials[\"frontFluentMaterial\"]) {\n                this._createFrontMaterial(mesh);\n                this._host._touchSharedMaterials[\"frontFluentMaterial\"] = this._frontMaterial;\n            }\n            else {\n                this._frontMaterial = this._host._touchSharedMaterials[\"frontFluentMaterial\"];\n            }\n        }\n        else {\n            this._createBackMaterial(mesh);\n            this._createFrontMaterial(mesh);\n        }\n        this._createPlateMaterial(mesh);\n        this._backPlate.material = this._backMaterial;\n        this._textPlate.material = this._plateMaterial;\n        if (!this._isBackplateVisible) {\n            this._backPlate.visibility = 0;\n        }\n        if (this._frontPlate) {\n            this._frontPlate.material = this._frontMaterial;\n        }\n        this._rebuildContent();\n    };\n    /**\n     * Releases all associated resources\n     */\n    TouchHolographicButton.prototype.dispose = function () {\n        _super.prototype.dispose.call(this); // will dispose main mesh ie. back plate\n        this._disposeTooltip();\n        this.onPointerMoveObservable.remove(this._pointerHoverObserver);\n        if (!this.shareMaterials) {\n            this._backMaterial.dispose();\n            this._frontMaterial.dispose();\n            this._plateMaterial.dispose();\n            if (this._pickedPointObserver) {\n                this._host.onPickedPointChangedObservable.remove(this._pickedPointObserver);\n                this._pickedPointObserver = null;\n            }\n        }\n    };\n    /**\n     * Base Url for the button model.\n     */\n    TouchHolographicButton.MODEL_BASE_URL = \"https://assets.babylonjs.com/meshes/MRTK/\";\n    /**\n     * File name for the button model.\n     */\n    TouchHolographicButton.MODEL_FILENAME = \"mrtk-fluent-button.glb\";\n    return TouchHolographicButton;\n}(TouchButton3D));\nexport { TouchHolographicButton };\n//# sourceMappingURL=touchHolographicButton.js.map","import { FollowBehavior } from \"@babylonjs/core/Behaviors/Meshes/followBehavior.js\";\nimport { SixDofDragBehavior } from \"@babylonjs/core/Behaviors/Meshes/sixDofDragBehavior.js\";\nimport { SurfaceMagnetismBehavior } from \"@babylonjs/core/Behaviors/Meshes/surfaceMagnetismBehavior.js\";\n/**\n * Default behavior for 3D UI elements.\n * Handles a FollowBehavior, SixDofBehavior and SurfaceMagnetismBehavior\n * @since 5.0.0\n */\nvar DefaultBehavior = /** @class */ (function () {\n    /**\n     * Instantiates the default behavior\n     */\n    function DefaultBehavior() {\n        /**\n         * Enables the follow behavior\n         */\n        this.followBehaviorEnabled = false;\n        /**\n         * Enables the six DoF drag behavior\n         */\n        this.sixDofDragBehaviorEnabled = true;\n        /**\n         * Enables the surface magnetism behavior\n         */\n        this.surfaceMagnetismBehaviorEnabled = true;\n        this._followBehavior = new FollowBehavior();\n        this._sixDofDragBehavior = new SixDofDragBehavior();\n        this._surfaceMagnetismBehavior = new SurfaceMagnetismBehavior();\n    }\n    Object.defineProperty(DefaultBehavior.prototype, \"name\", {\n        /**\n         *  The name of the behavior\n         */\n        get: function () {\n            return \"Default\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DefaultBehavior.prototype, \"followBehavior\", {\n        /**\n         *  The follow behavior\n         */\n        get: function () {\n            return this._followBehavior;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DefaultBehavior.prototype, \"sixDofDragBehavior\", {\n        /**\n         *  The six DoF drag behavior\n         */\n        get: function () {\n            return this._sixDofDragBehavior;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DefaultBehavior.prototype, \"surfaceMagnetismBehavior\", {\n        /**\n         * The surface magnetism behavior\n         */\n        get: function () {\n            return this._surfaceMagnetismBehavior;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     *  Initializes the behavior\n     */\n    DefaultBehavior.prototype.init = function () { };\n    /**\n     * Attaches the default behavior\n     * @param ownerMesh The top level mesh\n     * @param draggablesMeshes Descendant meshes that can be used for dragging the owner mesh\n     * @param sceneUnderstandingMeshes Meshes from the scene understanding that will be used for surface magnetism\n     */\n    DefaultBehavior.prototype.attach = function (ownerMesh, draggablesMeshes, sceneUnderstandingMeshes) {\n        this._scene = ownerMesh.getScene();\n        this.attachedNode = ownerMesh;\n        this._addObservables();\n        // Since our observables are bound before the child behaviors', ours are called first\n        this._followBehavior.attach(ownerMesh);\n        this._sixDofDragBehavior.attach(ownerMesh);\n        this._sixDofDragBehavior.draggableMeshes = draggablesMeshes || null;\n        this._sixDofDragBehavior.faceCameraOnDragStart = true;\n        this._surfaceMagnetismBehavior.attach(ownerMesh, this._scene);\n        if (sceneUnderstandingMeshes) {\n            this._surfaceMagnetismBehavior.meshes = sceneUnderstandingMeshes;\n        }\n        // We disable this behavior because we will handle pose changing event manually with sixDofDragBehavior\n        this._surfaceMagnetismBehavior.enabled = false;\n    };\n    /**\n     *  Detaches the behavior from the mesh\n     */\n    DefaultBehavior.prototype.detach = function () {\n        this.attachedNode = null;\n        this._removeObservables();\n        this._followBehavior.detach();\n        this._sixDofDragBehavior.detach();\n        this._surfaceMagnetismBehavior.detach();\n    };\n    DefaultBehavior.prototype._addObservables = function () {\n        var _this = this;\n        this._onBeforeRenderObserver = this._scene.onBeforeRenderObservable.add(function () {\n            _this._followBehavior._enabled = !_this._sixDofDragBehavior.isMoving && _this.followBehaviorEnabled;\n        });\n        this._onDragObserver = this._sixDofDragBehavior.onDragObservable.add(function (event) {\n            _this._sixDofDragBehavior.disableMovement = _this._surfaceMagnetismBehavior.findAndUpdateTarget(event.pickInfo);\n        });\n    };\n    DefaultBehavior.prototype._removeObservables = function () {\n        this._scene.onBeforeRenderObservable.remove(this._onBeforeRenderObserver);\n        this._sixDofDragBehavior.onDragObservable.remove(this._onDragObserver);\n    };\n    return DefaultBehavior;\n}());\nexport { DefaultBehavior };\n//# sourceMappingURL=defaultBehavior.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nvar name = \"handleVertexShader\";\nvar shader = \"precision highp float;\\nattribute vec3 position;\\nuniform vec3 positionOffset;\\nuniform mat4 worldViewProjection;\\nuniform float scale;\\nvoid main(void) {\\nvec4 vPos=vec4((vec3(position)+positionOffset)*scale,1.0);\\ngl_Position=worldViewProjection*vPos;\\n}\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var handleVertexShader = { name: name, shader: shader };\n//# sourceMappingURL=handle.vertex.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nvar name = \"handlePixelShader\";\nvar shader = \"uniform vec3 color;\\nvoid main(void) {\\ngl_FragColor=vec4(color,1.0);\\n}\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var handlePixelShader = { name: name, shader: shader };\n//# sourceMappingURL=handle.fragment.js.map","import { __extends } from \"tslib\";\nimport { CreateBox } from \"@babylonjs/core/Meshes/Builders/boxBuilder.js\";\nimport { TransformNode } from \"@babylonjs/core/Meshes/transformNode.js\";\nimport { Vector3 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { HandleMaterial } from \"../materials/handle/handleMaterial.js\";\nimport { BaseSixDofDragBehavior } from \"@babylonjs/core/Behaviors/Meshes/baseSixDofDragBehavior.js\";\n/**\n * State of the handle regarding user interaction\n */\nexport var HandleState;\n(function (HandleState) {\n    /**\n     * Handle is idle\n     */\n    HandleState[HandleState[\"IDLE\"] = 0] = \"IDLE\";\n    /**\n     * Handle is hovered\n     */\n    HandleState[HandleState[\"HOVER\"] = 1] = \"HOVER\";\n    /**\n     * Handle is dragged\n     */\n    HandleState[HandleState[\"DRAG\"] = 2] = \"DRAG\";\n})(HandleState || (HandleState = {}));\n/**\n * Base class for SlateGizmo handles\n */\nvar GizmoHandle = /** @class */ (function () {\n    /**\n     * Creates a handle for a SlateGizmo\n     * @param gizmo associated SlateGizmo\n     * @param scene scene\n     */\n    function GizmoHandle(gizmo, scene) {\n        this._state = HandleState.IDLE;\n        this._materials = [];\n        this._scene = scene;\n        this._gizmo = gizmo;\n        this.node = this.createNode();\n        this.node.reservedDataStore = {\n            handle: this,\n        };\n    }\n    Object.defineProperty(GizmoHandle.prototype, \"state\", {\n        /**\n         * The current state of the handle\n         */\n        get: function () {\n            return this._state;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(GizmoHandle.prototype, \"gizmo\", {\n        /**\n         * Returns the gizmo carrying this handle\n         */\n        get: function () {\n            return this._gizmo;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(GizmoHandle.prototype, \"hover\", {\n        /**\n         * Sets hover state\n         */\n        set: function (value) {\n            if (value) {\n                this._state |= HandleState.HOVER;\n            }\n            else {\n                this._state &= ~HandleState.HOVER;\n            }\n            this._updateMaterial();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(GizmoHandle.prototype, \"drag\", {\n        /**\n         * Sets drag state\n         */\n        set: function (value) {\n            if (value) {\n                this._state |= HandleState.DRAG;\n            }\n            else {\n                this._state &= ~HandleState.DRAG;\n            }\n            this._updateMaterial();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    GizmoHandle.prototype._createMaterial = function (positionOffset) {\n        var mat = new HandleMaterial(\"handle\", this._scene);\n        if (positionOffset) {\n            mat._positionOffset = positionOffset;\n        }\n        return mat;\n    };\n    GizmoHandle.prototype._updateMaterial = function () {\n        var state = this._state;\n        for (var _i = 0, _a = this._materials; _i < _a.length; _i++) {\n            var mat = _a[_i];\n            mat.hover = false;\n            mat.drag = false;\n        }\n        if (state & HandleState.DRAG) {\n            for (var _b = 0, _c = this._materials; _b < _c.length; _b++) {\n                var mat = _c[_b];\n                mat.drag = true;\n            }\n        }\n        else if (state & HandleState.HOVER) {\n            for (var _d = 0, _e = this._materials; _d < _e.length; _d++) {\n                var mat = _e[_d];\n                mat.hover = true;\n            }\n        }\n    };\n    /**\n     * Binds callbacks from dragging interaction\n     * @param dragStartFn Function to call on drag start\n     * @param dragFn Function to call on drag\n     * @param dragEndFn Function to call on drag end\n     */\n    GizmoHandle.prototype.setDragBehavior = function (dragStartFn, dragFn, dragEndFn) {\n        var dragBehavior = new BaseSixDofDragBehavior();\n        this._dragBehavior = dragBehavior;\n        this._dragStartObserver = dragBehavior.onDragStartObservable.add(dragStartFn);\n        this._draggingObserver = dragBehavior.onDragObservable.add(dragFn);\n        this._dragEndObserver = dragBehavior.onDragEndObservable.add(dragEndFn);\n        this._dragBehavior.attach(this.node);\n    };\n    /**\n     * Disposes the handle\n     */\n    GizmoHandle.prototype.dispose = function () {\n        this._dragBehavior.onDragStartObservable.remove(this._dragStartObserver);\n        this._dragBehavior.onDragObservable.remove(this._draggingObserver);\n        this._dragBehavior.onDragEndObservable.remove(this._dragEndObserver);\n        this._dragBehavior.detach();\n        for (var _i = 0, _a = this._materials; _i < _a.length; _i++) {\n            var material = _a[_i];\n            material.dispose();\n        }\n        this.node.dispose();\n    };\n    return GizmoHandle;\n}());\nexport { GizmoHandle };\n/**\n * Side handle class that rotates the slate\n */\nvar SideHandle = /** @class */ (function (_super) {\n    __extends(SideHandle, _super);\n    function SideHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Creates the meshes and parent node of the handle\n     * @returns created node\n     */\n    SideHandle.prototype.createNode = function () {\n        // Create a simple vertical rectangle\n        var verticalBox = CreateBox(\"sideVert\", { width: 1, height: 10, depth: 0.1 }, this._scene);\n        var sideNode = new TransformNode(\"side\", this._scene);\n        verticalBox.parent = sideNode;\n        var mat = this._createMaterial();\n        verticalBox.material = mat;\n        verticalBox.isNearGrabbable = true;\n        this._materials.push(mat);\n        return sideNode;\n    };\n    return SideHandle;\n}(GizmoHandle));\nexport { SideHandle };\n/**\n * Corner handle that resizes the slate\n */\nvar CornerHandle = /** @class */ (function (_super) {\n    __extends(CornerHandle, _super);\n    function CornerHandle() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Creates the meshes and parent node of the handle\n     * @returns created node\n     */\n    CornerHandle.prototype.createNode = function () {\n        // Create 2 boxes making a bottom left corner\n        var horizontalBox = CreateBox(\"angleHor\", { width: 3, height: 1, depth: 0.1 }, this._scene);\n        var verticalBox = CreateBox(\"angleVert\", { width: 1, height: 3, depth: 0.1 }, this._scene);\n        var angleNode = new TransformNode(\"angle\", this._scene);\n        horizontalBox.parent = angleNode;\n        verticalBox.parent = angleNode;\n        horizontalBox.material = this._createMaterial(new Vector3(1, 0, 0));\n        verticalBox.material = this._createMaterial(new Vector3(0, 1, 0));\n        verticalBox.isNearGrabbable = true;\n        horizontalBox.isNearGrabbable = true;\n        this._materials.push(horizontalBox.material);\n        this._materials.push(verticalBox.material);\n        return angleNode;\n    };\n    return CornerHandle;\n}(GizmoHandle));\nexport { CornerHandle };\n//# sourceMappingURL=gizmoHandle.js.map","import { __extends } from \"tslib\";\nimport { ShaderMaterial } from \"@babylonjs/core/Materials/shaderMaterial.js\";\nimport { Color3, TmpColors } from \"@babylonjs/core/Maths/math.color.js\";\nimport { Vector3 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport \"./shaders/handle.vertex.js\";\nimport \"./shaders/handle.fragment.js\";\n/**\n * Class used to render gizmo handles with fluent design\n */\nvar HandleMaterial = /** @class */ (function (_super) {\n    __extends(HandleMaterial, _super);\n    /**\n     * Creates a handle material\n     * @param name Name of the material\n     * @param scene Scene\n     */\n    function HandleMaterial(name, scene) {\n        var _this = _super.call(this, name, scene, \"handle\", {\n            attributes: [\"position\"],\n            uniforms: [\"worldViewProjection\", \"color\", \"scale\", \"positionOffset\"],\n            needAlphaBlending: false,\n            needAlphaTesting: false,\n        }) || this;\n        _this._hover = false;\n        _this._drag = false;\n        _this._color = new Color3();\n        _this._scale = 1;\n        _this._lastTick = -1;\n        /**\n         * Length of animation\n         */\n        _this.animationLength = 100;\n        /**\n         * Color of the handle when hovered\n         */\n        _this.hoverColor = new Color3(0, 0.467, 0.84);\n        /**\n         * Color of the handle when idle\n         */\n        _this.baseColor = new Color3(1, 1, 1);\n        /**\n         * Scale of the handle when hovered\n         */\n        _this.hoverScale = 0.75;\n        /**\n         * Scale of the handle when idle\n         */\n        _this.baseScale = 0.35;\n        /**\n         * Scale of the handle when dragged\n         */\n        _this.dragScale = 0.55;\n        /**\n         * @hidden\n         */\n        _this._positionOffset = Vector3.Zero();\n        _this._updateInterpolationTarget();\n        // Register callback for scene after render\n        _this._lastTick = Date.now();\n        _this._onBeforeRender = _this.getScene().onBeforeRenderObservable.add(function () {\n            var tick = Date.now();\n            var delta = tick - _this._lastTick;\n            var scaleDiff = _this._targetScale - _this._scale;\n            var colorDiff = TmpColors.Color3[0].copyFrom(_this._targetColor).subtractToRef(_this._color, TmpColors.Color3[0]);\n            _this._scale = _this._scale + (scaleDiff * delta) / _this.animationLength;\n            colorDiff.scaleToRef(delta / _this.animationLength, colorDiff);\n            _this._color.addToRef(colorDiff, _this._color);\n            _this.setColor3(\"color\", _this._color);\n            _this.setFloat(\"scale\", _this._scale);\n            _this.setVector3(\"positionOffset\", _this._positionOffset);\n            _this._lastTick = tick;\n        });\n        return _this;\n    }\n    Object.defineProperty(HandleMaterial.prototype, \"hover\", {\n        /**\n         * Is the material indicating hovering state\n         */\n        get: function () {\n            return this._hover;\n        },\n        set: function (b) {\n            this._hover = b;\n            this._updateInterpolationTarget();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HandleMaterial.prototype, \"drag\", {\n        /**\n         * Is the material indicating drag state\n         */\n        get: function () {\n            return this._drag;\n        },\n        set: function (b) {\n            this._drag = b;\n            this._updateInterpolationTarget();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    HandleMaterial.prototype._updateInterpolationTarget = function () {\n        if (this.drag) {\n            this._targetColor = this.hoverColor;\n            this._targetScale = this.dragScale;\n        }\n        else if (this.hover) {\n            this._targetColor = this.hoverColor;\n            this._targetScale = this.hoverScale;\n        }\n        else {\n            this._targetColor = this.baseColor;\n            this._targetScale = this.baseScale;\n        }\n    };\n    /**\n     * Disposes the handle material\n     */\n    HandleMaterial.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.getScene().onBeforeRenderObservable.remove(this._onBeforeRender);\n    };\n    return HandleMaterial;\n}(ShaderMaterial));\nexport { HandleMaterial };\n//# sourceMappingURL=handleMaterial.js.map","import { __extends } from \"tslib\";\nimport { Gizmo } from \"@babylonjs/core/Gizmos/gizmo.js\";\nimport { Epsilon } from \"@babylonjs/core/Maths/math.constants.js\";\nimport { Matrix, Quaternion, TmpVectors, Vector3 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { TransformNode } from \"@babylonjs/core/Meshes/transformNode.js\";\nimport { PivotTools } from \"@babylonjs/core/Misc/pivotTools.js\";\nimport { CornerHandle, SideHandle } from \"./gizmoHandle.js\";\n/**\n * Gizmo to resize 2D slates\n */\nvar SlateGizmo = /** @class */ (function (_super) {\n    __extends(SlateGizmo, _super);\n    function SlateGizmo(utilityLayer) {\n        var _this = _super.call(this, utilityLayer) || this;\n        _this._boundingDimensions = new Vector3(0, 0, 0);\n        _this._renderObserver = null;\n        _this._tmpQuaternion = new Quaternion();\n        _this._tmpVector = new Vector3(0, 0, 0);\n        // Ordered bl, br, tr, tl\n        _this._corners = [];\n        // Ordered left, bottom, right, top\n        _this._sides = [];\n        _this._boundingBoxGizmo = {\n            min: new Vector3(),\n            max: new Vector3(),\n        };\n        /**\n         * Value we use to offset handles from mesh\n         */\n        _this._margin = 0.35;\n        _this._handleSize = 0.075;\n        _this._attachedSlate = null;\n        _this._existingSlateScale = new Vector3();\n        /**\n         * If set, the handles will increase in size based on the distance away from the camera to have a consistent screen size (Default: true)\n         */\n        _this.fixedScreenSize = false;\n        /**\n         * The distance away from the object which the draggable meshes should appear world sized when fixedScreenSize is set to true (default: 10)\n         */\n        _this.fixedScreenSizeDistanceFactor = 10;\n        _this._createNode();\n        _this.updateScale = false;\n        _this._renderObserver = _this.gizmoLayer.originalScene.onBeforeRenderObservable.add(function () {\n            // Only update the bounding box if scaling has changed\n            if (_this.attachedMesh && !_this._existingSlateScale.equals(_this.attachedMesh.scaling)) {\n                _this.updateBoundingBox();\n            }\n        });\n        return _this;\n    }\n    Object.defineProperty(SlateGizmo.prototype, \"attachedSlate\", {\n        get: function () {\n            return this._attachedSlate;\n        },\n        /**\n         * The slate attached to this gizmo\n         */\n        set: function (control) {\n            var _this = this;\n            if (control) {\n                this.attachedMesh = control.mesh;\n                this.updateBoundingBox();\n                this._pickedPointObserver = control._host.onPickingObservable.add(function (pickedMesh) {\n                    if (_this._handleHovered && (!pickedMesh || pickedMesh.parent !== _this._handleHovered.node)) {\n                        _this._handleHovered.hover = false;\n                        _this._handleHovered = null;\n                    }\n                    if (pickedMesh && pickedMesh.parent && pickedMesh.parent.reservedDataStore && pickedMesh.parent.reservedDataStore.handle) {\n                        var handle = pickedMesh.parent.reservedDataStore.handle;\n                        if (handle.gizmo === _this) {\n                            _this._handleHovered = handle;\n                            _this._handleHovered.hover = true;\n                        }\n                    }\n                });\n            }\n            else if (this._attachedSlate) {\n                this._attachedSlate._host.onPickingObservable.remove(this._pickedPointObserver);\n            }\n            this._attachedSlate = control;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SlateGizmo.prototype._createNode = function () {\n        var _this = this;\n        this._handlesParent = new TransformNode(\"handlesParent\", this.gizmoLayer.utilityLayerScene);\n        this._handlesParent.rotationQuaternion = Quaternion.Identity();\n        var masksCorners = [\n            {\n                dimensions: new Vector3(-1, -1, 0),\n                origin: new Vector3(1, 0, 0),\n            },\n            {\n                dimensions: new Vector3(1, -1, 0),\n                origin: new Vector3(0, 0, 0),\n            },\n            {\n                dimensions: new Vector3(1, 1, 0),\n                origin: new Vector3(0, 1, 0),\n            },\n            {\n                dimensions: new Vector3(-1, 1, 0),\n                origin: new Vector3(1, 1, 0),\n            },\n        ];\n        for (var i = 0; i < 4; i++) {\n            var corner = new CornerHandle(this, this.gizmoLayer.utilityLayerScene);\n            this._corners.push(corner);\n            corner.node.rotation.z = (Math.PI / 2) * i;\n            corner.node.parent = this._handlesParent;\n            this._assignDragBehaviorCorners(corner, function (originStart, dimensionsStart, offset, masks) { return _this._moveHandle(originStart, dimensionsStart, offset, masks, true); }, masksCorners[i]);\n        }\n        for (var i = 0; i < 4; i++) {\n            var side = new SideHandle(this, this.gizmoLayer.utilityLayerScene);\n            this._sides.push(side);\n            side.node.rotation.z = (Math.PI / 2) * i;\n            side.node.parent = this._handlesParent;\n            this._assignDragBehaviorSides(side, i % 2 === 0 ? new Vector3(0, 1, 0) : new Vector3(1, 0, 0));\n        }\n        this._handlesParent.parent = this._rootMesh;\n    };\n    SlateGizmo.prototype._keepAspectRatio = function (vector, aspectRatio, invertDiagonal) {\n        if (invertDiagonal === void 0) { invertDiagonal = false; }\n        var axis = TmpVectors.Vector3[0];\n        axis.copyFromFloats(aspectRatio, 1, 0).normalize();\n        if (invertDiagonal) {\n            axis.y *= -1;\n        }\n        var dot = Vector3.Dot(vector, axis);\n        vector.copyFrom(axis).scaleInPlace(dot);\n    };\n    SlateGizmo.prototype._clampDimensions = function (vector, dimensions, mask, keepAspectRatio) {\n        if (keepAspectRatio === void 0) { keepAspectRatio = false; }\n        var impact = TmpVectors.Vector3[0];\n        impact.copyFrom(vector).multiplyInPlace(mask);\n        var clampedDimensions = TmpVectors.Vector3[1];\n        clampedDimensions.copyFromFloats(Math.max(this._attachedSlate.minDimensions.x, impact.x + dimensions.x), Math.max(this._attachedSlate.minDimensions.y, impact.y + dimensions.y), 0);\n        if (keepAspectRatio) {\n            // Extra logic to ensure the ratio is maintained when the vector has been clamped\n            var ratio = dimensions.x / dimensions.y;\n            clampedDimensions.x = Math.max(clampedDimensions.x, clampedDimensions.y * ratio);\n            clampedDimensions.y = Math.max(clampedDimensions.y, clampedDimensions.x / ratio);\n        }\n        // Calculating the real impact of vector on clamped dimensions\n        impact.copyFrom(clampedDimensions).subtractInPlace(dimensions);\n        vector.x = Math.sign(vector.x) * Math.abs(impact.x);\n        vector.y = Math.sign(vector.y) * Math.abs(impact.y);\n    };\n    SlateGizmo.prototype._moveHandle = function (originStart, dimensionsStart, offset, masks, isCorner) {\n        if (!this._attachedSlate) {\n            return;\n        }\n        if (isCorner) {\n            var aspectRatio = dimensionsStart.x / dimensionsStart.y;\n            this._keepAspectRatio(offset, aspectRatio, masks.dimensions.x * masks.dimensions.y < 0);\n        }\n        this._clampDimensions(offset, dimensionsStart, masks.dimensions, isCorner);\n        var offsetOriginMasked = TmpVectors.Vector3[0];\n        var offsetDimensionsMasked = TmpVectors.Vector3[1];\n        offsetOriginMasked.copyFrom(offset).multiplyInPlace(masks.origin);\n        offsetDimensionsMasked.copyFrom(offset).multiplyInPlace(masks.dimensions);\n        this._attachedSlate.origin.copyFrom(originStart).addInPlace(offsetOriginMasked);\n        this._attachedSlate.dimensions.set(dimensionsStart.x + offsetDimensionsMasked.x, dimensionsStart.y + offsetDimensionsMasked.y);\n    };\n    SlateGizmo.prototype._assignDragBehaviorCorners = function (handle, moveFn, masks) {\n        var _this = this;\n        var dimensionsStart = new Vector3();\n        var originStart = new Vector3();\n        var dragOrigin = new Vector3();\n        var toObjectFrame = new Matrix();\n        var dragPlaneNormal = new Vector3();\n        var projectToRef = function (position, normal, origin, ref) {\n            // Projects on the plane with its normal and origin\n            position.subtractToRef(origin, TmpVectors.Vector3[0]);\n            var dot = Vector3.Dot(TmpVectors.Vector3[0], normal);\n            TmpVectors.Vector3[1].copyFrom(normal).scaleInPlace(dot);\n            TmpVectors.Vector3[0].subtractInPlace(TmpVectors.Vector3[1]);\n            TmpVectors.Vector3[0].addToRef(origin, ref);\n        };\n        var dragStart = function (event) {\n            if (_this.attachedSlate && _this.attachedMesh) {\n                dimensionsStart.set(_this.attachedSlate.dimensions.x, _this.attachedSlate.dimensions.y, Epsilon);\n                originStart.copyFrom(_this.attachedSlate.origin);\n                dragOrigin.copyFrom(event.position);\n                toObjectFrame.copyFrom(_this.attachedMesh.computeWorldMatrix(true));\n                toObjectFrame.invert();\n                _this.attachedSlate._followButton.isToggled = false;\n                Vector3.TransformNormalToRef(Vector3.Forward(), _this.attachedMesh.getWorldMatrix(), dragPlaneNormal);\n                dragPlaneNormal.normalize();\n                if (_this._handleHovered) {\n                    _this._handleDragged = _this._handleHovered;\n                    _this._handleDragged.drag = true;\n                }\n            }\n        };\n        var dragging = function (event) {\n            if (_this.attachedSlate && _this.attachedMesh) {\n                projectToRef(event.position, dragPlaneNormal, dragOrigin, _this._tmpVector);\n                _this._tmpVector.subtractInPlace(dragOrigin);\n                Vector3.TransformNormalToRef(_this._tmpVector, toObjectFrame, _this._tmpVector);\n                moveFn(originStart, dimensionsStart, _this._tmpVector, masks);\n                _this.attachedSlate._positionElements();\n                _this.updateBoundingBox();\n            }\n        };\n        var dragEnd = function () {\n            if (_this.attachedSlate && _this.attachedNode) {\n                _this.attachedSlate._updatePivot();\n                if (_this._handleDragged) {\n                    _this._handleDragged.drag = false;\n                    _this._handleDragged = null;\n                }\n            }\n        };\n        handle.setDragBehavior(dragStart, dragging, dragEnd);\n    };\n    SlateGizmo.prototype._assignDragBehaviorSides = function (handle, dragPlaneNormal) {\n        var _this = this;\n        var quaternionOrigin = new Quaternion();\n        var dragOrigin = new Vector3();\n        var directionOrigin = new Vector3();\n        var worldPivot = new Vector3();\n        var worldPlaneNormal = new Vector3();\n        var dragStart = function (event) {\n            if (_this.attachedSlate && _this.attachedMesh) {\n                quaternionOrigin.copyFrom(_this.attachedMesh.rotationQuaternion);\n                dragOrigin.copyFrom(event.position);\n                worldPivot.copyFrom(_this.attachedMesh.getAbsolutePivotPoint());\n                directionOrigin.copyFrom(dragOrigin).subtractInPlace(worldPivot).normalize();\n                _this.attachedSlate._followButton.isToggled = false;\n                Vector3.TransformNormalToRef(dragPlaneNormal, _this.attachedMesh.getWorldMatrix(), worldPlaneNormal);\n                worldPlaneNormal.normalize();\n                if (_this._handleHovered) {\n                    _this._handleDragged = _this._handleHovered;\n                    _this._handleDragged.drag = true;\n                }\n            }\n        };\n        var dragging = function (event) {\n            if (_this.attachedSlate && _this.attachedMesh) {\n                _this._tmpVector.copyFrom(event.position);\n                _this._tmpVector.subtractInPlace(worldPivot);\n                _this._tmpVector.normalize();\n                var angle = -Vector3.GetAngleBetweenVectorsOnPlane(_this._tmpVector, directionOrigin, worldPlaneNormal);\n                Quaternion.RotationAxisToRef(dragPlaneNormal, angle, _this._tmpQuaternion);\n                quaternionOrigin.multiplyToRef(_this._tmpQuaternion, _this.attachedMesh.rotationQuaternion);\n            }\n        };\n        var dragEnd = function () {\n            if (_this.attachedSlate && _this.attachedNode) {\n                _this.attachedSlate._updatePivot();\n                if (_this._handleDragged) {\n                    _this._handleDragged.drag = false;\n                    _this._handleDragged = null;\n                }\n            }\n        };\n        handle.setDragBehavior(dragStart, dragging, dragEnd);\n    };\n    SlateGizmo.prototype._attachedNodeChanged = function (value) {\n        if (value) {\n            this.updateBoundingBox();\n        }\n    };\n    /**\n     * Updates the bounding box information for the gizmo\n     */\n    SlateGizmo.prototype.updateBoundingBox = function () {\n        if (this.attachedMesh) {\n            PivotTools._RemoveAndStorePivotPoint(this.attachedMesh);\n            // Store original parent\n            var originalParent = this.attachedMesh.parent;\n            this.attachedMesh.setParent(null);\n            this._update();\n            // Rotate based on axis\n            if (!this.attachedMesh.rotationQuaternion) {\n                this.attachedMesh.rotationQuaternion = Quaternion.RotationYawPitchRoll(this.attachedMesh.rotation.y, this.attachedMesh.rotation.x, this.attachedMesh.rotation.z);\n            }\n            // Store original position and reset mesh to origin before computing the bounding box\n            this._tmpQuaternion.copyFrom(this.attachedMesh.rotationQuaternion);\n            this._tmpVector.copyFrom(this.attachedMesh.position);\n            this.attachedMesh.rotationQuaternion.set(0, 0, 0, 1);\n            this.attachedMesh.position.set(0, 0, 0);\n            // Update bounding dimensions/positions\n            var boundingMinMax = this.attachedMesh.getHierarchyBoundingVectors();\n            boundingMinMax.max.subtractToRef(boundingMinMax.min, this._boundingDimensions);\n            this._boundingBoxGizmo.min = boundingMinMax.min;\n            this._boundingBoxGizmo.max = boundingMinMax.max;\n            // Update handles of the gizmo\n            this._updateHandlesPosition();\n            this._updateHandlesScaling();\n            // Restore position/rotation values\n            this.attachedMesh.rotationQuaternion.copyFrom(this._tmpQuaternion);\n            this.attachedMesh.position.copyFrom(this._tmpVector);\n            PivotTools._RestorePivotPoint(this.attachedMesh);\n            // Restore original parent\n            this.attachedMesh.setParent(originalParent);\n            this.attachedMesh.computeWorldMatrix(true);\n            this._existingSlateScale.copyFrom(this.attachedMesh.scaling);\n        }\n    };\n    SlateGizmo.prototype._updateHandlesPosition = function () {\n        var min = this._boundingBoxGizmo.min.clone();\n        var max = this._boundingBoxGizmo.max.clone();\n        var handleScaling = this._corners[0].node.scaling.length();\n        min.x -= this._margin * handleScaling;\n        min.y -= this._margin * handleScaling;\n        max.x += this._margin * handleScaling;\n        max.y += this._margin * handleScaling;\n        var center = min.add(max).scaleInPlace(0.5);\n        this._corners[0].node.position.copyFromFloats(min.x, min.y, 0);\n        this._corners[1].node.position.copyFromFloats(max.x, min.y, 0);\n        this._corners[2].node.position.copyFromFloats(max.x, max.y, 0);\n        this._corners[3].node.position.copyFromFloats(min.x, max.y, 0);\n        this._sides[0].node.position.copyFromFloats(min.x, center.y, 0);\n        this._sides[1].node.position.copyFromFloats(center.x, min.y, 0);\n        this._sides[2].node.position.copyFromFloats(max.x, center.y, 0);\n        this._sides[3].node.position.copyFromFloats(center.x, max.y, 0);\n    };\n    SlateGizmo.prototype._updateHandlesScaling = function () {\n        if (this._attachedSlate && this._attachedSlate.mesh) {\n            var scaledWidth = this._attachedSlate.mesh.scaling.x * this._attachedSlate.dimensions.x;\n            var scaledHeight = this._attachedSlate.mesh.scaling.y * this._attachedSlate.dimensions.y;\n            var scale = Math.min(scaledWidth, scaledHeight) * this._handleSize;\n            for (var index = 0; index < this._corners.length; index++) {\n                this._corners[index].node.scaling.setAll(scale);\n            }\n            for (var index = 0; index < this._sides.length; index++) {\n                this._sides[index].node.scaling.setAll(scale);\n            }\n        }\n    };\n    SlateGizmo.prototype._update = function () {\n        _super.prototype._update.call(this);\n        if (!this.gizmoLayer.utilityLayerScene.activeCamera) {\n            return;\n        }\n        if (this._attachedSlate && this._attachedSlate.mesh) {\n            if (this.fixedScreenSize) {\n                this._attachedSlate.mesh.absolutePosition.subtractToRef(this.gizmoLayer.utilityLayerScene.activeCamera.position, this._tmpVector);\n                var distanceFromCamera = (this._handleSize * this._tmpVector.length()) / this.fixedScreenSizeDistanceFactor;\n                for (var i = 0; i < this._corners.length; i++) {\n                    this._corners[i].node.scaling.set(distanceFromCamera, distanceFromCamera, distanceFromCamera);\n                }\n                for (var i = 0; i < this._sides.length; i++) {\n                    this._sides[i].node.scaling.set(distanceFromCamera, distanceFromCamera, distanceFromCamera);\n                }\n            }\n            this._updateHandlesPosition();\n        }\n    };\n    SlateGizmo.prototype.dispose = function () {\n        this.gizmoLayer.originalScene.onBeforeRenderObservable.remove(this._renderObserver);\n        // Will dispose rootMesh and all descendants\n        _super.prototype.dispose.call(this);\n        for (var _i = 0, _a = this._corners; _i < _a.length; _i++) {\n            var corner = _a[_i];\n            corner.dispose();\n        }\n        for (var _b = 0, _c = this._sides; _b < _c.length; _b++) {\n            var side = _c[_b];\n            side.dispose();\n        }\n    };\n    return SlateGizmo;\n}(Gizmo));\nexport { SlateGizmo };\n//# sourceMappingURL=slateGizmo.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nvar name = \"fluentBackplatePixelShader\";\nvar shader = \"uniform vec3 cameraPosition;\\nvarying vec3 vPosition;\\nvarying vec3 vNormal;\\nvarying vec2 vUV;\\nvarying vec3 vTangent;\\nvarying vec3 vBinormal;\\nvarying vec4 vColor;\\nvarying vec4 vExtra1;\\nvarying vec4 vExtra2;\\nvarying vec4 vExtra3;\\nuniform float _Radius_;\\nuniform float _Line_Width_;\\nuniform bool _Absolute_Sizes_;\\nuniform float _Filter_Width_;\\nuniform vec4 _Base_Color_;\\nuniform vec4 _Line_Color_;\\nuniform float _Radius_Top_Left_;\\nuniform float _Radius_Top_Right_;\\nuniform float _Radius_Bottom_Left_;\\nuniform float _Radius_Bottom_Right_;\\nuniform vec3 _Blob_Position_;\\nuniform float _Blob_Intensity_;\\nuniform float _Blob_Near_Size_;\\nuniform float _Blob_Far_Size_;\\nuniform float _Blob_Near_Distance_;\\nuniform float _Blob_Far_Distance_;\\nuniform float _Blob_Fade_Length_;\\nuniform float _Blob_Pulse_;\\nuniform float _Blob_Fade_;\\nuniform sampler2D _Blob_Texture_;\\nuniform vec3 _Blob_Position_2_;\\nuniform float _Blob_Near_Size_2_;\\nuniform float _Blob_Pulse_2_;\\nuniform float _Blob_Fade_2_;\\nuniform float _Rate_;\\nuniform vec4 _Highlight_Color_;\\nuniform float _Highlight_Width_;\\nuniform vec4 _Highlight_Transform_;\\nuniform float _Highlight_;\\nuniform float _Iridescence_Intensity_;\\nuniform float _Iridescence_Edge_Intensity_;\\nuniform float _Angle_;\\nuniform float _Fade_Out_;\\nuniform bool _Reflected_;\\nuniform float _Frequency_;\\nuniform float _Vertical_Offset_;\\nuniform sampler2D _Iridescent_Map_;\\nuniform bool _Use_Global_Left_Index_;\\nuniform bool _Use_Global_Right_Index_;\\nuniform vec4 Global_Left_Index_Tip_Position;\\nuniform vec4 Global_Right_Index_Tip_Position;\\nvoid Round_Rect_Fragment_B31(\\nfloat Radius,\\nfloat Line_Width,\\nvec4 Line_Color,\\nfloat Filter_Width,\\nvec2 UV,\\nfloat Line_Visibility,\\nvec4 Rect_Parms,\\nvec4 Fill_Color,\\nout vec4 Color)\\n{\\nfloat d=length(max(abs(UV)-Rect_Parms.xy,0.0));\\nfloat dx=max(fwidth(d)*Filter_Width,0.00001);\\nfloat g=min(Rect_Parms.z,Rect_Parms.w);\\nfloat dgrad=max(fwidth(g)*Filter_Width,0.00001);\\nfloat Inside_Rect=clamp(g/dgrad,0.0,1.0);\\nfloat inner=clamp((d+dx*0.5-max(Radius-Line_Width,d-dx*0.5))/dx,0.0,1.0);\\nColor=clamp(mix(Fill_Color,Line_Color,inner),0.0,1.0)*Inside_Rect;\\n}\\nvoid Blob_Fragment_B71(\\nsampler2D Blob_Texture,\\nvec4 Blob_Info1,\\nvec4 Blob_Info2,\\nout vec4 Blob_Color)\\n{\\nfloat k1=dot(Blob_Info1.xy,Blob_Info1.xy);\\nfloat k2=dot(Blob_Info2.xy,Blob_Info2.xy);\\nvec3 closer=k1<k2 ? vec3(k1,Blob_Info1.z,Blob_Info1.w) : vec3(k2,Blob_Info2.z,Blob_Info2.w);\\nBlob_Color=closer.z*texture(Blob_Texture,vec2(vec2(sqrt(closer.x),closer.y).x,1.0-vec2(sqrt(closer.x),closer.y).y))*clamp(1.0-closer.x,0.0,1.0);\\n}\\nvoid Line_Fragment_B48(\\nvec4 Base_Color,\\nvec4 Highlight_Color,\\nfloat Highlight_Width,\\nvec3 Line_Vertex,\\nfloat Highlight,\\nout vec4 Line_Color)\\n{\\nfloat k2=1.0-clamp(abs(Line_Vertex.y/Highlight_Width),0.0,1.0);\\nLine_Color=mix(Base_Color,Highlight_Color,Highlight*k2);\\n}\\nvoid Scale_RGB_B54(\\nvec4 Color,\\nfloat Scalar,\\nout vec4 Result)\\n{\\nResult=vec4(Scalar,Scalar,Scalar,1)*Color;\\n}\\nvoid Conditional_Float_B38(\\nbool Which,\\nfloat If_True,\\nfloat If_False,\\nout float Result)\\n{\\nResult=Which ? If_True : If_False;\\n}\\nvoid main()\\n{\\nfloat R_Q72;\\nfloat G_Q72;\\nfloat B_Q72;\\nfloat A_Q72;\\nR_Q72=vColor.r; G_Q72=vColor.g; B_Q72=vColor.b; A_Q72=vColor.a;\\nvec4 Blob_Color_Q71;\\n#if BLOB_ENABLE\\nfloat k1=dot(vExtra2.xy,vExtra2.xy);\\nfloat k2=dot(vExtra3.xy,vExtra3.xy);\\nvec3 closer=k1<k2 ? vec3(k1,vExtra2.z,vExtra2.w) : vec3(k2,vExtra3.z,vExtra3.w);\\nBlob_Color_Q71=closer.z*texture(_Blob_Texture_,vec2(vec2(sqrt(closer.x),closer.y).x,1.0-vec2(sqrt(closer.x),closer.y).y))*clamp(1.0-closer.x,0.0,1.0);\\n#else\\nBlob_Color_Q71=vec4(0,0,0,0);\\n#endif\\nvec4 Line_Color_Q48;\\nLine_Fragment_B48(_Line_Color_,_Highlight_Color_,_Highlight_Width_,vTangent,_Highlight_,Line_Color_Q48);\\nfloat X_Q67;\\nfloat Y_Q67;\\nX_Q67=vUV.x;\\nY_Q67=vUV.y;\\nvec3 Incident_Q66=normalize(vPosition-cameraPosition);\\nvec3 Reflected_Q60=reflect(Incident_Q66,vBinormal);\\nfloat Product_Q63=Y_Q67*_Vertical_Offset_;\\nfloat Dot_Q68=dot(Incident_Q66, Reflected_Q60);\\nfloat Dot_Q57=dot(vNormal, Incident_Q66);\\nfloat Result_Q38;\\nConditional_Float_B38(_Reflected_,Dot_Q68,Dot_Q57,Result_Q38);\\nfloat Product_Q64=Result_Q38*_Frequency_;\\nfloat Sum_Q69=Product_Q64+1.0;\\nfloat Product_Q70=Sum_Q69*0.5;\\nfloat Sum_Q62=Product_Q63+Product_Q70;\\nfloat FractF_Q59=fract(Sum_Q62);\\nvec2 Vec2_Q65=vec2(FractF_Q59,0.5);\\nvec4 Color_Q58;\\n#if IRIDESCENT_MAP_ENABLE\\nColor_Q58=texture(_Iridescent_Map_,Vec2_Q65);\\n#else\\nColor_Q58=vec4(0,0,0,0);\\n#endif\\nvec4 Result_Q54;\\nScale_RGB_B54(Color_Q58,_Iridescence_Edge_Intensity_,Result_Q54);\\nvec4 Result_Q55;\\nScale_RGB_B54(Color_Q58,_Iridescence_Intensity_,Result_Q55);\\nvec4 Base_And_Iridescent_Q53;\\nBase_And_Iridescent_Q53=Line_Color_Q48+vec4(Result_Q54.rgb,0.0);\\nvec4 Base_And_Iridescent_Q56;\\nBase_And_Iridescent_Q56=_Base_Color_+vec4(Result_Q55.rgb,0.0);\\nvec4 Result_Q52=Base_And_Iridescent_Q53; Result_Q52.a=1.0;\\nvec4 Result_Q35=Blob_Color_Q71+(1.0-Blob_Color_Q71.a)*Base_And_Iridescent_Q56;\\nvec4 Color_Q31;\\nRound_Rect_Fragment_B31(R_Q72,G_Q72,Result_Q52,_Filter_Width_,vUV,1.0,vExtra1,Result_Q35,Color_Q31);\\nvec4 Result_Q47=_Fade_Out_*Color_Q31;\\nvec4 Out_Color=Result_Q47;\\nfloat Clip_Threshold=0.001;\\nbool To_sRGB=false;\\ngl_FragColor=Out_Color;\\n}\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var fluentBackplatePixelShader = { name: name, shader: shader };\n//# sourceMappingURL=fluentBackplate.fragment.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nvar name = \"fluentBackplateVertexShader\";\nvar shader = \"uniform mat4 world;\\nuniform mat4 viewProjection;\\nuniform vec3 cameraPosition;\\nattribute vec3 position;\\nattribute vec3 normal;\\n#ifdef TANGENT\\nattribute vec3 tangent;\\n#else\\nconst vec3 tangent=vec3(0.);\\n#endif\\nuniform float _Radius_;\\nuniform float _Line_Width_;\\nuniform bool _Absolute_Sizes_;\\nuniform float _Filter_Width_;\\nuniform vec4 _Base_Color_;\\nuniform vec4 _Line_Color_;\\nuniform float _Radius_Top_Left_;\\nuniform float _Radius_Top_Right_;\\nuniform float _Radius_Bottom_Left_;\\nuniform float _Radius_Bottom_Right_;\\nuniform vec3 _Blob_Position_;\\nuniform float _Blob_Intensity_;\\nuniform float _Blob_Near_Size_;\\nuniform float _Blob_Far_Size_;\\nuniform float _Blob_Near_Distance_;\\nuniform float _Blob_Far_Distance_;\\nuniform float _Blob_Fade_Length_;\\nuniform float _Blob_Pulse_;\\nuniform float _Blob_Fade_;\\nuniform sampler2D _Blob_Texture_;\\nuniform vec3 _Blob_Position_2_;\\nuniform float _Blob_Near_Size_2_;\\nuniform float _Blob_Pulse_2_;\\nuniform float _Blob_Fade_2_;\\nuniform float _Rate_;\\nuniform vec4 _Highlight_Color_;\\nuniform float _Highlight_Width_;\\nuniform vec4 _Highlight_Transform_;\\nuniform float _Highlight_;\\nuniform float _Iridescence_Intensity_;\\nuniform float _Iridescence_Edge_Intensity_;\\nuniform float _Angle_;\\nuniform float _Fade_Out_;\\nuniform bool _Reflected_;\\nuniform float _Frequency_;\\nuniform float _Vertical_Offset_;\\nuniform sampler2D _Iridescent_Map_;\\nuniform bool _Use_Global_Left_Index_;\\nuniform bool _Use_Global_Right_Index_;\\nuniform vec4 Global_Left_Index_Tip_Position;\\nuniform vec4 Global_Right_Index_Tip_Position;\\nvarying vec3 vPosition;\\nvarying vec3 vNormal;\\nvarying vec2 vUV;\\nvarying vec3 vTangent;\\nvarying vec3 vBinormal;\\nvarying vec4 vColor;\\nvarying vec4 vExtra1;\\nvarying vec4 vExtra2;\\nvarying vec4 vExtra3;\\nvoid Object_To_World_Pos_B115(\\nvec3 Pos_Object,\\nout vec3 Pos_World)\\n{\\nPos_World=(world*vec4(Pos_Object,1.0)).xyz;\\n}\\nvoid PickDir_B140(\\nfloat Degrees,\\nvec3 DirX,\\nvec3 DirY,\\nout vec3 Dir)\\n{\\nfloat a=Degrees*3.14159/180.0;\\nDir=cos(a)*DirX+sin(a)*DirY;\\n}\\nvoid Round_Rect_Vertex_B139(\\nvec2 UV,\\nfloat Radius,\\nfloat Margin,\\nfloat Anisotropy,\\nfloat Gradient1,\\nfloat Gradient2,\\nout vec2 Rect_UV,\\nout vec4 Rect_Parms,\\nout vec2 Scale_XY,\\nout vec2 Line_UV)\\n{\\nScale_XY=vec2(Anisotropy,1.0);\\nLine_UV=(UV-vec2(0.5,0.5));\\nRect_UV=Line_UV*Scale_XY;\\nRect_Parms.xy=Scale_XY*0.5-vec2(Radius,Radius)-vec2(Margin,Margin);\\nRect_Parms.z=Gradient1; \\nRect_Parms.w=Gradient2;\\n}\\nvoid Line_Vertex_B135(\\nvec2 Scale_XY,\\nvec2 UV,\\nfloat Time,\\nfloat Rate,\\nvec4 Highlight_Transform,\\nout vec3 Line_Vertex)\\n{\\nfloat angle2=(Rate*Time)*2.0*3.1416;\\nfloat sinAngle2=sin(angle2);\\nfloat cosAngle2=cos(angle2);\\nvec2 xformUV=UV*Highlight_Transform.xy+Highlight_Transform.zw;\\nLine_Vertex.x=0.0;\\nLine_Vertex.y=cosAngle2*xformUV.x-sinAngle2*xformUV.y;\\nLine_Vertex.z=0.0; \\n}\\nvoid Blob_Vertex_B180(\\nvec3 Position,\\nvec3 Normal,\\nvec3 Tangent,\\nvec3 Bitangent,\\nvec3 Blob_Position,\\nfloat Intensity,\\nfloat Blob_Near_Size,\\nfloat Blob_Far_Size,\\nfloat Blob_Near_Distance,\\nfloat Blob_Far_Distance,\\nfloat Blob_Fade_Length,\\nfloat Blob_Pulse,\\nfloat Blob_Fade,\\nout vec4 Blob_Info)\\n{\\nvec3 blob=Blob_Position;\\nvec3 delta=blob-Position;\\nfloat dist=dot(Normal,delta);\\nfloat lerpValue=clamp((abs(dist)-Blob_Near_Distance)/(Blob_Far_Distance-Blob_Near_Distance),0.0,1.0);\\nfloat fadeValue=1.0-clamp((abs(dist)-Blob_Far_Distance)/Blob_Fade_Length,0.0,1.0);\\nfloat size=Blob_Near_Size+(Blob_Far_Size-Blob_Near_Size)*lerpValue;\\nvec2 blobXY=vec2(dot(delta,Tangent),dot(delta,Bitangent))/(0.0001+size);\\nfloat Fade=fadeValue*Intensity*Blob_Fade;\\nfloat Distance=(lerpValue*0.5+0.5)*(1.0-Blob_Pulse);\\nBlob_Info=vec4(blobXY.x,blobXY.y,Distance,Fade);\\n}\\nvoid Move_Verts_B129(\\nfloat Anisotropy,\\nvec3 P,\\nfloat Radius,\\nout vec3 New_P,\\nout vec2 New_UV,\\nout float Radial_Gradient,\\nout vec3 Radial_Dir)\\n{\\nvec2 UV=P.xy*2.0+0.5;\\nvec2 center=clamp(UV,0.0,1.0);\\nvec2 delta=UV-center;\\nvec2 r2=2.0*vec2(Radius/Anisotropy,Radius);\\nNew_UV=center+r2*(UV-2.0*center+0.5);\\nNew_P=vec3(New_UV-0.5,P.z);\\nRadial_Gradient=1.0-length(delta)*2.0;\\nRadial_Dir=vec3(delta*r2,0.0);\\n}\\nvoid Object_To_World_Dir_B132(\\nvec3 Dir_Object,\\nout vec3 Binormal_World,\\nout vec3 Binormal_World_N,\\nout float Binormal_Length)\\n{\\nBinormal_World=(world*vec4(Dir_Object,0.0)).xyz;\\nBinormal_Length=length(Binormal_World);\\nBinormal_World_N=Binormal_World/Binormal_Length;\\n}\\nvoid RelativeOrAbsoluteDetail_B147(\\nfloat Nominal_Radius,\\nfloat Nominal_LineWidth,\\nbool Absolute_Measurements,\\nfloat Height,\\nout float Radius,\\nout float Line_Width)\\n{\\nfloat scale=Absolute_Measurements ? 1.0/Height : 1.0;\\nRadius=Nominal_Radius*scale;\\nLine_Width=Nominal_LineWidth*scale;\\n}\\nvoid Edge_AA_Vertex_B130(\\nvec3 Position_World,\\nvec3 Position_Object,\\nvec3 Normal_Object,\\nvec3 Eye,\\nfloat Radial_Gradient,\\nvec3 Radial_Dir,\\nvec3 Tangent,\\nout float Gradient1,\\nout float Gradient2)\\n{\\nvec3 I=(Eye-Position_World);\\nvec3 T=(world* vec4(Tangent,0.0)).xyz;\\nfloat g=(dot(T,I)<0.0) ? 0.0 : 1.0;\\nif (Normal_Object.z==0.0) { \\nGradient1=Position_Object.z>0.0 ? g : 1.0;\\nGradient2=Position_Object.z>0.0 ? 1.0 : g;\\n} else {\\nGradient1=g+(1.0-g)*(Radial_Gradient);\\nGradient2=1.0;\\n}\\n}\\nvoid Pick_Radius_B144(\\nfloat Radius,\\nfloat Radius_Top_Left,\\nfloat Radius_Top_Right,\\nfloat Radius_Bottom_Left,\\nfloat Radius_Bottom_Right,\\nvec3 Position,\\nout float Result)\\n{\\nbool whichY=Position.y>0.0;\\nResult=Position.x<0.0 ? (whichY ? Radius_Top_Left : Radius_Bottom_Left) : (whichY ? Radius_Top_Right : Radius_Bottom_Right);\\nResult*=Radius;\\n}\\nvoid main()\\n{\\nvec3 Nrm_World_Q128;\\nNrm_World_Q128=normalize((world*vec4(normal,0.0)).xyz);\\nvec3 Tangent_World_Q131;\\nvec3 Tangent_World_N_Q131;\\nfloat Tangent_Length_Q131;\\nTangent_World_Q131=(world*vec4(vec3(1,0,0),0.0)).xyz;\\nTangent_Length_Q131=length(Tangent_World_Q131);\\nTangent_World_N_Q131=Tangent_World_Q131/Tangent_Length_Q131;\\nvec3 Binormal_World_Q132;\\nvec3 Binormal_World_N_Q132;\\nfloat Binormal_Length_Q132;\\nObject_To_World_Dir_B132(vec3(0,1,0),Binormal_World_Q132,Binormal_World_N_Q132,Binormal_Length_Q132);\\nfloat Anisotropy_Q133=Tangent_Length_Q131/Binormal_Length_Q132;\\nvec3 Result_Q177;\\nResult_Q177=mix(_Blob_Position_,Global_Left_Index_Tip_Position.xyz,float(_Use_Global_Left_Index_));\\nvec3 Result_Q178;\\nResult_Q178=mix(_Blob_Position_2_,Global_Right_Index_Tip_Position.xyz,float(_Use_Global_Right_Index_));\\nfloat Result_Q144;\\nPick_Radius_B144(_Radius_,_Radius_Top_Left_,_Radius_Top_Right_,_Radius_Bottom_Left_,_Radius_Bottom_Right_,position,Result_Q144);\\nvec3 Dir_Q140;\\nPickDir_B140(_Angle_,Tangent_World_N_Q131,Binormal_World_N_Q132,Dir_Q140);\\nfloat Radius_Q147;\\nfloat Line_Width_Q147;\\nRelativeOrAbsoluteDetail_B147(Result_Q144,_Line_Width_,_Absolute_Sizes_,Binormal_Length_Q132,Radius_Q147,Line_Width_Q147);\\nvec4 Out_Color_Q145=vec4(Radius_Q147,Line_Width_Q147,0,1);\\nvec3 New_P_Q129;\\nvec2 New_UV_Q129;\\nfloat Radial_Gradient_Q129;\\nvec3 Radial_Dir_Q129;\\nMove_Verts_B129(Anisotropy_Q133,position,Radius_Q147,New_P_Q129,New_UV_Q129,Radial_Gradient_Q129,Radial_Dir_Q129);\\nvec3 Pos_World_Q115;\\nObject_To_World_Pos_B115(New_P_Q129,Pos_World_Q115);\\nvec4 Blob_Info_Q180;\\n#if BLOB_ENABLE\\nBlob_Vertex_B180(Pos_World_Q115,Nrm_World_Q128,Tangent_World_N_Q131,Binormal_World_N_Q132,Result_Q177,_Blob_Intensity_,_Blob_Near_Size_,_Blob_Far_Size_,_Blob_Near_Distance_,_Blob_Far_Distance_,_Blob_Fade_Length_,_Blob_Pulse_,_Blob_Fade_,Blob_Info_Q180);\\n#else\\nBlob_Info_Q180=vec4(0,0,0,0);\\n#endif\\nvec4 Blob_Info_Q181;\\n#if BLOB_ENABLE_2\\nBlob_Vertex_B180(Pos_World_Q115,Nrm_World_Q128,Tangent_World_N_Q131,Binormal_World_N_Q132,Result_Q178,_Blob_Intensity_,_Blob_Near_Size_2_,_Blob_Far_Size_,_Blob_Near_Distance_,_Blob_Far_Distance_,_Blob_Fade_Length_,_Blob_Pulse_2_,_Blob_Fade_2_,Blob_Info_Q181);\\n#else\\nBlob_Info_Q181=vec4(0,0,0,0);\\n#endif\\nfloat Gradient1_Q130;\\nfloat Gradient2_Q130;\\n#if SMOOTH_EDGES\\nEdge_AA_Vertex_B130(Pos_World_Q115,position,normal,cameraPosition,Radial_Gradient_Q129,Radial_Dir_Q129,tangent,Gradient1_Q130,Gradient2_Q130);\\n#else\\nGradient1_Q130=1.0;\\nGradient2_Q130=1.0;\\n#endif\\nvec2 Rect_UV_Q139;\\nvec4 Rect_Parms_Q139;\\nvec2 Scale_XY_Q139;\\nvec2 Line_UV_Q139;\\nRound_Rect_Vertex_B139(New_UV_Q129,Radius_Q147,0.0,Anisotropy_Q133,Gradient1_Q130,Gradient2_Q130,Rect_UV_Q139,Rect_Parms_Q139,Scale_XY_Q139,Line_UV_Q139);\\nvec3 Line_Vertex_Q135;\\nLine_Vertex_B135(Scale_XY_Q139,Line_UV_Q139,0.0,_Rate_,_Highlight_Transform_,Line_Vertex_Q135);\\nvec3 Position=Pos_World_Q115;\\nvec3 Normal=Dir_Q140;\\nvec2 UV=Rect_UV_Q139;\\nvec3 Tangent=Line_Vertex_Q135;\\nvec3 Binormal=Nrm_World_Q128;\\nvec4 Color=Out_Color_Q145;\\nvec4 Extra1=Rect_Parms_Q139;\\nvec4 Extra2=Blob_Info_Q180;\\nvec4 Extra3=Blob_Info_Q181;\\ngl_Position=viewProjection*vec4(Position,1);\\nvPosition=Position;\\nvNormal=Normal;\\nvUV=UV;\\nvTangent=Tangent;\\nvBinormal=Binormal;\\nvColor=Color;\\nvExtra1=Extra1;\\nvExtra2=Extra2;\\nvExtra3=Extra3;\\n}\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var fluentBackplateVertexShader = { name: name, shader: shader };\n//# sourceMappingURL=fluentBackplate.vertex.js.map","import { __decorate, __extends } from \"tslib\";\nimport { SerializationHelper, serialize, serializeAsVector3 } from \"@babylonjs/core/Misc/decorators.js\";\nimport { Vector3, Vector4 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { Texture } from \"@babylonjs/core/Materials/Textures/texture.js\";\nimport { MaterialDefines } from \"@babylonjs/core/Materials/materialDefines.js\";\nimport { MaterialHelper } from \"@babylonjs/core/Materials/materialHelper.js\";\nimport { PushMaterial } from \"@babylonjs/core/Materials/pushMaterial.js\";\nimport { VertexBuffer } from \"@babylonjs/core/Buffers/buffer.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { Color4 } from \"@babylonjs/core/Maths/math.color.js\";\nimport { EffectFallbacks } from \"@babylonjs/core/Materials/effectFallbacks.js\";\nimport { Constants } from \"@babylonjs/core/Engines/constants.js\";\nimport \"./shaders/fluentBackplate.fragment.js\";\nimport \"./shaders/fluentBackplate.vertex.js\";\n/** @hidden */\nvar FluentBackplateMaterialDefines = /** @class */ (function (_super) {\n    __extends(FluentBackplateMaterialDefines, _super);\n    function FluentBackplateMaterialDefines() {\n        var _this = _super.call(this) || this;\n        _this.BLOB_ENABLE = true;\n        _this.BLOB_ENABLE_2 = true;\n        _this.SMOOTH_EDGES = true;\n        _this.IRIDESCENT_MAP_ENABLE = true;\n        _this._needNormals = true;\n        _this.rebuild();\n        return _this;\n    }\n    return FluentBackplateMaterialDefines;\n}(MaterialDefines));\n/**\n * Class used to render square buttons with fluent design\n */\nvar FluentBackplateMaterial = /** @class */ (function (_super) {\n    __extends(FluentBackplateMaterial, _super);\n    function FluentBackplateMaterial(name, scene) {\n        var _this = _super.call(this, name, scene) || this;\n        /**\n         * Gets or sets the corner radius on the backplate. Best to keep this value between 0.01 and 0.5. Default is 0.03.\n         */\n        _this.radius = 0.03;\n        /**\n         * Gets or sets the line width of the backplate.\n         */\n        _this.lineWidth = 0.01;\n        /**\n         * Gets or sets whether to use absolute sizes when calculating effects on the backplate.\n         * Since desktop and VR/AR have different relative sizes, it's usually best to keep this false.\n         */\n        _this.absoluteSizes = false;\n        /** @hidden */\n        _this._filterWidth = 1;\n        /**\n         * Gets or sets the base color of the backplate.\n         */\n        _this.baseColor = new Color4(0.0392157, 0.0666667, 0.207843, 1);\n        /**\n         * Gets or sets the line color of the backplate.\n         */\n        _this.lineColor = new Color4(0.14902, 0.133333, 0.384314, 1);\n        /**\n         * Gets or sets the intensity of the fluent hover glow effect.\n         */\n        _this.blobIntensity = 0.98;\n        /**\n         * Gets or sets the far size of the fluent hover glow effect.\n         */\n        _this.blobFarSize = 0.04;\n        /**\n         * Gets or sets the distance considered \"near\" to the backplate, which controls the size of the fluent hover glow effect (see blobNearSize).\n         */\n        _this.blobNearDistance = 0;\n        /**\n         * Gets or sets the distance considered \"far\" from the backplate, which controls the size of the fluent hover glow effect (see blobFarSize).\n         */\n        _this.blobFarDistance = 0.08;\n        /**\n         * Gets or sets the length of the fluent hover glow effect fade.\n         */\n        _this.blobFadeLength = 0.08;\n        /**\n         * Gets or sets the size of the fluent hover glow effect when the left pointer is considered \"near\" to the backplate (see blobNearDistance).\n         */\n        _this.blobNearSize = 0.22;\n        /**\n         * Gets or sets the progress of the fluent hover glow effect selection animation corresponding to the left pointer (0.0 - 1.0).\n         */\n        _this.blobPulse = 0;\n        /**\n         * Gets or sets the opacity of the fluent hover glow effect corresponding to the left pointer (0.0 - 1.0). Default is 0.\n         */\n        _this.blobFade = 0;\n        /**\n         * Gets or sets the size of the fluent hover glow effect when the right pointer is considered \"near\" to the backplate (see blobNearDistance).\n         */\n        _this.blobNearSize2 = 0.22;\n        /**\n         * Gets or sets the progress of the fluent hover glow effect selection animation corresponding to the right pointer (0.0 - 1.0).\n         */\n        _this.blobPulse2 = 0;\n        /**\n         * Gets or sets the opacity of the fluent hover glow effect corresponding to the right pointer (0.0 - 1.0). Default is 0.\n         */\n        _this.blobFade2 = 0;\n        /** @hidden */\n        _this._rate = 0.135;\n        /**\n         * Gets or sets the color of the highlights on the backplate line.\n         */\n        _this.highlightColor = new Color4(0.98, 0.98, 0.98, 1);\n        /**\n         * Gets or sets the width of the highlights on the backplate line.\n         */\n        _this.highlightWidth = 0.25;\n        /** @hidden */\n        _this._highlightTransform = new Vector4(1, 1, 0, 0);\n        /** @hidden */\n        _this._highlight = 1;\n        /**\n         * Gets or sets the intensity of the iridescence effect.\n         */\n        _this.iridescenceIntensity = 0;\n        /**\n         * Gets or sets the intensity of the iridescence effect on the backplate edges.\n         */\n        _this.iridescenceEdgeIntensity = 1;\n        /** @hidden */\n        _this._angle = -45;\n        /**\n         * Gets or sets the opacity of the backplate (0.0 - 1.0).\n         */\n        _this.fadeOut = 1;\n        /** @hidden */\n        _this._reflected = true;\n        /** @hidden */\n        _this._frequency = 1;\n        /** @hidden */\n        _this._verticalOffset = 0;\n        /**\n         * Gets or sets the world-space position of the tip of the left index finger.\n         */\n        _this.globalLeftIndexTipPosition = Vector3.Zero();\n        _this._globalLeftIndexTipPosition4 = Vector4.Zero();\n        /**\n         * Gets or sets the world-space position of the tip of the right index finger.\n         */\n        _this.globalRightIndexTipPosition = Vector3.Zero();\n        _this._globalRightIndexTipPosition4 = Vector4.Zero();\n        _this.alphaMode = Constants.ALPHA_DISABLE;\n        _this.backFaceCulling = false;\n        _this._blobTexture = new Texture(FluentBackplateMaterial.BLOB_TEXTURE_URL, _this.getScene(), true, false, Texture.NEAREST_SAMPLINGMODE);\n        _this._iridescentMap = new Texture(FluentBackplateMaterial.IM_TEXTURE_URL, _this.getScene(), true, false, Texture.NEAREST_SAMPLINGMODE);\n        return _this;\n    }\n    FluentBackplateMaterial.prototype.needAlphaBlending = function () {\n        return false;\n    };\n    FluentBackplateMaterial.prototype.needAlphaTesting = function () {\n        return false;\n    };\n    FluentBackplateMaterial.prototype.getAlphaTestTexture = function () {\n        return null;\n    };\n    FluentBackplateMaterial.prototype.isReadyForSubMesh = function (mesh, subMesh) {\n        if (this.isFrozen) {\n            if (subMesh.effect && subMesh.effect._wasPreviouslyReady) {\n                return true;\n            }\n        }\n        if (!subMesh.materialDefines) {\n            subMesh.materialDefines = new FluentBackplateMaterialDefines();\n        }\n        var defines = subMesh.materialDefines;\n        var scene = this.getScene();\n        if (this._isReadyForSubMesh(subMesh)) {\n            return true;\n        }\n        var engine = scene.getEngine();\n        // Attribs\n        MaterialHelper.PrepareDefinesForAttributes(mesh, defines, false, false);\n        // Get correct effect\n        if (defines.isDirty) {\n            defines.markAsProcessed();\n            scene.resetCachedMaterial();\n            // Fallbacks\n            var fallbacks = new EffectFallbacks();\n            if (defines.FOG) {\n                fallbacks.addFallback(1, \"FOG\");\n            }\n            MaterialHelper.HandleFallbacksForShadows(defines, fallbacks);\n            defines.IMAGEPROCESSINGPOSTPROCESS = scene.imageProcessingConfiguration.applyByPostProcess;\n            //Attributes\n            var attribs = [VertexBuffer.PositionKind];\n            if (defines.NORMAL) {\n                attribs.push(VertexBuffer.NormalKind);\n            }\n            if (defines.UV1) {\n                attribs.push(VertexBuffer.UVKind);\n            }\n            if (defines.UV2) {\n                attribs.push(VertexBuffer.UV2Kind);\n            }\n            if (defines.VERTEXCOLOR) {\n                attribs.push(VertexBuffer.ColorKind);\n            }\n            if (defines.TANGENT) {\n                attribs.push(VertexBuffer.TangentKind);\n            }\n            MaterialHelper.PrepareAttributesForInstances(attribs, defines);\n            // Legacy browser patch\n            var shaderName = \"fluentBackplate\";\n            var join = defines.toString();\n            var uniforms = [\n                \"world\",\n                \"viewProjection\",\n                \"cameraPosition\",\n                \"_Radius_\",\n                \"_Line_Width_\",\n                \"_Absolute_Sizes_\",\n                \"_Filter_Width_\",\n                \"_Base_Color_\",\n                \"_Line_Color_\",\n                \"_Radius_Top_Left_\",\n                \"_Radius_Top_Right_\",\n                \"_Radius_Bottom_Left_\",\n                \"_Radius_Bottom_Right_\",\n                \"_Blob_Position_\",\n                \"_Blob_Intensity_\",\n                \"_Blob_Near_Size_\",\n                \"_Blob_Far_Size_\",\n                \"_Blob_Near_Distance_\",\n                \"_Blob_Far_Distance_\",\n                \"_Blob_Fade_Length_\",\n                \"_Blob_Pulse_\",\n                \"_Blob_Fade_\",\n                \"_Blob_Texture_\",\n                \"_Blob_Position_2_\",\n                \"_Blob_Near_Size_2_\",\n                \"_Blob_Pulse_2_\",\n                \"_Blob_Fade_2_\",\n                \"_Rate_\",\n                \"_Highlight_Color_\",\n                \"_Highlight_Width_\",\n                \"_Highlight_Transform_\",\n                \"_Highlight_\",\n                \"_Iridescence_Intensity_\",\n                \"_Iridescence_Edge_Intensity_\",\n                \"_Angle_\",\n                \"_Fade_Out_\",\n                \"_Reflected_\",\n                \"_Frequency_\",\n                \"_Vertical_Offset_\",\n                \"_Iridescent_Map_\",\n                \"_Use_Global_Left_Index_\",\n                \"_Use_Global_Right_Index_\",\n                \"Global_Left_Index_Tip_Position\",\n                \"Global_Right_Index_Tip_Position\",\n            ];\n            var samplers = [\"_Blob_Texture_\", \"_Iridescent_Map_\"];\n            var uniformBuffers = new Array();\n            MaterialHelper.PrepareUniformsAndSamplersList({\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: defines,\n                maxSimultaneousLights: 4,\n            });\n            subMesh.setEffect(scene.getEngine().createEffect(shaderName, {\n                attributes: attribs,\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: join,\n                fallbacks: fallbacks,\n                onCompiled: this.onCompiled,\n                onError: this.onError,\n                indexParameters: { maxSimultaneousLights: 4 },\n            }, engine), defines, this._materialContext);\n        }\n        if (!subMesh.effect || !subMesh.effect.isReady()) {\n            return false;\n        }\n        defines._renderId = scene.getRenderId();\n        subMesh.effect._wasPreviouslyReady = true;\n        return true;\n    };\n    FluentBackplateMaterial.prototype.bindForSubMesh = function (world, mesh, subMesh) {\n        var _a, _b;\n        var defines = subMesh.materialDefines;\n        if (!defines) {\n            return;\n        }\n        var effect = subMesh.effect;\n        if (!effect) {\n            return;\n        }\n        this._activeEffect = effect;\n        // Matrices\n        this.bindOnlyWorldMatrix(world);\n        this._activeEffect.setMatrix(\"viewProjection\", this.getScene().getTransformMatrix());\n        this._activeEffect.setVector3(\"cameraPosition\", (_b = (_a = this.getScene().activeCamera) === null || _a === void 0 ? void 0 : _a.position) !== null && _b !== void 0 ? _b : Vector3.ZeroReadOnly);\n        // \"Round Rect\"\n        this._activeEffect.setFloat(\"_Radius_\", this.radius);\n        this._activeEffect.setFloat(\"_Line_Width_\", this.lineWidth);\n        this._activeEffect.setFloat(\"_Absolute_Sizes_\", this.absoluteSizes ? 1.0 : 0.0);\n        this._activeEffect.setFloat(\"_Filter_Width_\", this._filterWidth);\n        this._activeEffect.setDirectColor4(\"_Base_Color_\", this.baseColor);\n        this._activeEffect.setDirectColor4(\"_Line_Color_\", this.lineColor);\n        // \"Radii Multipliers\"\n        this._activeEffect.setFloat(\"_Radius_Top_Left_\", 1);\n        this._activeEffect.setFloat(\"_Radius_Top_Right_\", 1.0);\n        this._activeEffect.setFloat(\"_Radius_Bottom_Left_\", 1.0);\n        this._activeEffect.setFloat(\"_Radius_Bottom_Right_\", 1.0);\n        // \"Blob\"\n        //define BLOB_ENABLE true;\n        this._activeEffect.setFloat(\"_Blob_Intensity_\", this.blobIntensity);\n        this._activeEffect.setFloat(\"_Blob_Near_Size_\", this.blobNearSize);\n        this._activeEffect.setFloat(\"_Blob_Far_Size_\", this.blobFarSize);\n        this._activeEffect.setFloat(\"_Blob_Near_Distance_\", this.blobNearDistance);\n        this._activeEffect.setFloat(\"_Blob_Far_Distance_\", this.blobFarDistance);\n        this._activeEffect.setFloat(\"_Blob_Fade_Length_\", this.blobFadeLength);\n        this._activeEffect.setFloat(\"_Blob_Pulse_\", this.blobPulse);\n        this._activeEffect.setFloat(\"_Blob_Fade_\", this.blobFade);\n        // \"Blob Texture\"\n        this._activeEffect.setTexture(\"_Blob_Texture_\", this._blobTexture);\n        // \"Blob 2\"\n        //define BLOB_ENABLE_2 true;\n        this._activeEffect.setFloat(\"_Blob_Near_Size_2_\", this.blobNearSize2);\n        this._activeEffect.setFloat(\"_Blob_Pulse_2_\", this.blobPulse2);\n        this._activeEffect.setFloat(\"_Blob_Fade_2_\", this.blobFade2);\n        // \"Line Highlight\"\n        this._activeEffect.setFloat(\"_Rate_\", this._rate);\n        this._activeEffect.setDirectColor4(\"_Highlight_Color_\", this.highlightColor);\n        this._activeEffect.setFloat(\"_Highlight_Width_\", this.highlightWidth);\n        this._activeEffect.setVector4(\"_Highlight_Transform_\", this._highlightTransform);\n        this._activeEffect.setFloat(\"_Highlight_\", this._highlight);\n        // \"Iridescence\"\n        this._activeEffect.setFloat(\"_Iridescence_Intensity_\", this.iridescenceIntensity);\n        this._activeEffect.setFloat(\"_Iridescence_Edge_Intensity_\", this.iridescenceEdgeIntensity);\n        this._activeEffect.setFloat(\"_Angle_\", this._angle);\n        // \"Fade\"\n        this._activeEffect.setFloat(\"_Fade_Out_\", this.fadeOut);\n        // \"Antialiasing\"\n        //define SMOOTH_EDGES true;\n        // \"ChooseAngle\"\n        this._activeEffect.setFloat(\"_Reflected_\", this._reflected ? 1.0 : 0.0);\n        // \"Multiply\"\n        this._activeEffect.setFloat(\"_Frequency_\", this._frequency);\n        this._activeEffect.setFloat(\"_Vertical_Offset_\", this._verticalOffset);\n        // \"Color Texture\"\n        //define IRIDESCENT_MAP_ENABLE true;\n        this._activeEffect.setTexture(\"_Iridescent_Map_\", this._iridescentMap);\n        // \"Global\"\n        this._activeEffect.setFloat(\"_Use_Global_Left_Index_\", 1.0);\n        this._activeEffect.setFloat(\"_Use_Global_Right_Index_\", 1.0);\n        this._globalLeftIndexTipPosition4.set(this.globalLeftIndexTipPosition.x, this.globalLeftIndexTipPosition.y, this.globalLeftIndexTipPosition.z, 1.0);\n        this._activeEffect.setVector4(\"Global_Left_Index_Tip_Position\", this._globalLeftIndexTipPosition4);\n        this._globalRightIndexTipPosition4.set(this.globalRightIndexTipPosition.x, this.globalRightIndexTipPosition.y, this.globalRightIndexTipPosition.z, 1.0);\n        this._activeEffect.setVector4(\"Global_Right_Index_Tip_Position\", this._globalRightIndexTipPosition4);\n        this._afterBind(mesh, this._activeEffect);\n    };\n    /**\n     * Get the list of animatables in the material.\n     * @returns the list of animatables object used in the material\n     */\n    FluentBackplateMaterial.prototype.getAnimatables = function () {\n        return [];\n    };\n    FluentBackplateMaterial.prototype.dispose = function (forceDisposeEffect) {\n        _super.prototype.dispose.call(this, forceDisposeEffect);\n        this._blobTexture.dispose();\n        this._iridescentMap.dispose();\n    };\n    FluentBackplateMaterial.prototype.clone = function (name) {\n        var _this = this;\n        return SerializationHelper.Clone(function () { return new FluentBackplateMaterial(name, _this.getScene()); }, this);\n    };\n    FluentBackplateMaterial.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.customType = \"BABYLON.FluentBackplateMaterial\";\n        return serializationObject;\n    };\n    FluentBackplateMaterial.prototype.getClassName = function () {\n        return \"FluentBackplateMaterial\";\n    };\n    // Statics\n    FluentBackplateMaterial.Parse = function (source, scene, rootUrl) {\n        return SerializationHelper.Parse(function () { return new FluentBackplateMaterial(source.name, scene); }, source, scene, rootUrl);\n    };\n    /**\n     * URL pointing to the texture used to define the coloring for the fluent blob effect.\n     */\n    FluentBackplateMaterial.BLOB_TEXTURE_URL = \"https://assets.babylonjs.com/meshes/MRTK/mrtk-fluent-backplate-blob.png\";\n    /**\n     * URL pointing to the texture used to define iridescent map.\n     */\n    FluentBackplateMaterial.IM_TEXTURE_URL = \"https://assets.babylonjs.com/meshes/MRTK/mrtk-fluent-backplate-iridescence.png\";\n    __decorate([\n        serialize()\n    ], FluentBackplateMaterial.prototype, \"radius\", void 0);\n    __decorate([\n        serialize()\n    ], FluentBackplateMaterial.prototype, \"lineWidth\", void 0);\n    __decorate([\n        serialize()\n    ], FluentBackplateMaterial.prototype, \"absoluteSizes\", void 0);\n    __decorate([\n        serialize()\n    ], FluentBackplateMaterial.prototype, \"baseColor\", void 0);\n    __decorate([\n        serialize()\n    ], FluentBackplateMaterial.prototype, \"lineColor\", void 0);\n    __decorate([\n        serialize()\n    ], FluentBackplateMaterial.prototype, \"blobIntensity\", void 0);\n    __decorate([\n        serialize()\n    ], FluentBackplateMaterial.prototype, \"blobFarSize\", void 0);\n    __decorate([\n        serialize()\n    ], FluentBackplateMaterial.prototype, \"blobNearDistance\", void 0);\n    __decorate([\n        serialize()\n    ], FluentBackplateMaterial.prototype, \"blobFarDistance\", void 0);\n    __decorate([\n        serialize()\n    ], FluentBackplateMaterial.prototype, \"blobFadeLength\", void 0);\n    __decorate([\n        serialize()\n    ], FluentBackplateMaterial.prototype, \"blobNearSize\", void 0);\n    __decorate([\n        serialize()\n    ], FluentBackplateMaterial.prototype, \"blobPulse\", void 0);\n    __decorate([\n        serialize()\n    ], FluentBackplateMaterial.prototype, \"blobFade\", void 0);\n    __decorate([\n        serialize()\n    ], FluentBackplateMaterial.prototype, \"blobNearSize2\", void 0);\n    __decorate([\n        serialize()\n    ], FluentBackplateMaterial.prototype, \"blobPulse2\", void 0);\n    __decorate([\n        serialize()\n    ], FluentBackplateMaterial.prototype, \"blobFade2\", void 0);\n    __decorate([\n        serialize()\n    ], FluentBackplateMaterial.prototype, \"highlightColor\", void 0);\n    __decorate([\n        serialize()\n    ], FluentBackplateMaterial.prototype, \"highlightWidth\", void 0);\n    __decorate([\n        serialize()\n    ], FluentBackplateMaterial.prototype, \"iridescenceIntensity\", void 0);\n    __decorate([\n        serialize()\n    ], FluentBackplateMaterial.prototype, \"iridescenceEdgeIntensity\", void 0);\n    __decorate([\n        serialize()\n    ], FluentBackplateMaterial.prototype, \"fadeOut\", void 0);\n    __decorate([\n        serializeAsVector3()\n    ], FluentBackplateMaterial.prototype, \"globalLeftIndexTipPosition\", void 0);\n    __decorate([\n        serializeAsVector3()\n    ], FluentBackplateMaterial.prototype, \"globalRightIndexTipPosition\", void 0);\n    return FluentBackplateMaterial;\n}(PushMaterial));\nexport { FluentBackplateMaterial };\nRegisterClass(\"BABYLON.GUI.FluentBackplateMaterial\", FluentBackplateMaterial);\n//# sourceMappingURL=fluentBackplateMaterial.js.map","import { __extends } from \"tslib\";\nimport { ContentDisplay3D } from \"./contentDisplay3D.js\";\nimport { TouchHolographicButton } from \"./touchHolographicButton.js\";\nimport { AdvancedDynamicTexture } from \"../../2D/advancedDynamicTexture.js\";\nimport { Control } from \"../../2D/controls/control.js\";\nimport { TextBlock, TextWrapping } from \"../../2D/controls/textBlock.js\";\nimport { DefaultBehavior } from \"../behaviors/defaultBehavior.js\";\nimport { SlateGizmo } from \"../gizmos/slateGizmo.js\";\nimport { FluentMaterial } from \"../materials/fluent/fluentMaterial.js\";\nimport { FluentBackplateMaterial } from \"../materials/fluentBackplate/fluentBackplateMaterial.js\";\nimport { PointerDragBehavior } from \"@babylonjs/core/Behaviors/Meshes/pointerDragBehavior.js\";\nimport { Vector4 } from \"@babylonjs/core/Maths/math.js\";\nimport { Epsilon } from \"@babylonjs/core/Maths/math.constants.js\";\nimport { Scalar } from \"@babylonjs/core/Maths/math.scalar.js\";\nimport { Quaternion, Vector2, Vector3 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { Viewport } from \"@babylonjs/core/Maths/math.viewport.js\";\nimport { CreateBox } from \"@babylonjs/core/Meshes/Builders/boxBuilder.js\";\nimport { CreatePlane } from \"@babylonjs/core/Meshes/Builders/planeBuilder.js\";\nimport { Mesh } from \"@babylonjs/core/Meshes/mesh.js\";\nimport { VertexData } from \"@babylonjs/core/Meshes/mesh.vertexData.js\";\n/**\n * Class used to create a holographic slate\n * @since 5.0.0\n */\nvar HolographicSlate = /** @class */ (function (_super) {\n    __extends(HolographicSlate, _super);\n    /**\n     * Creates a new slate\n     * @param name defines the control name\n     */\n    function HolographicSlate(name) {\n        var _this = _super.call(this, name) || this;\n        /**\n         * Margin between title bar and contentplate\n         */\n        _this.titleBarMargin = 0.005;\n        /**\n         * Origin in local coordinates (top left corner)\n         */\n        _this.origin = new Vector3(0, 0, 0);\n        _this._dimensions = new Vector2(21.875, 12.5);\n        _this._titleBarHeight = 0.625;\n        _this._titleText = \"\";\n        _this._contentScaleRatio = 1;\n        /**\n         * Minimum dimensions of the slate\n         */\n        _this.minDimensions = new Vector2(15.625, 6.25);\n        /**\n         * Default dimensions of the slate\n         */\n        _this.defaultDimensions = _this._dimensions.clone();\n        _this._followButton = new TouchHolographicButton(\"followButton\" + _this.name);\n        _this._followButton.isToggleButton = true;\n        _this._closeButton = new TouchHolographicButton(\"closeButton\" + _this.name);\n        _this._contentViewport = new Viewport(0, 0, 1, 1);\n        _this._contentDragBehavior = new PointerDragBehavior({\n            dragPlaneNormal: new Vector3(0, 0, -1),\n        });\n        return _this;\n    }\n    Object.defineProperty(HolographicSlate.prototype, \"defaultBehavior\", {\n        /**\n         * Regroups all mesh behaviors for the slate\n         */\n        get: function () {\n            return this._defaultBehavior;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HolographicSlate.prototype, \"dimensions\", {\n        /**\n         * 2D dimensions of the slate\n         */\n        get: function () {\n            return this._dimensions;\n        },\n        set: function (value) {\n            //clamp, respecting ratios\n            var scale = 1.0;\n            if (value.x < this.minDimensions.x || value.y < this.minDimensions.y) {\n                var newRatio = value.x / value.y;\n                var minRatio = this.minDimensions.x / this.minDimensions.y;\n                if (minRatio > newRatio) {\n                    // We just need to make sure the x-val is greater than the min\n                    scale = this.minDimensions.x / value.x;\n                }\n                else {\n                    // We just need to make sure the y-val is greater than the min\n                    scale = this.minDimensions.y / value.y;\n                }\n            }\n            this._dimensions.copyFrom(value).scaleInPlace(scale);\n            this._updatePivot();\n            this._positionElements();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HolographicSlate.prototype, \"titleBarHeight\", {\n        /**\n         * Height of the title bar component\n         */\n        get: function () {\n            return this._titleBarHeight;\n        },\n        set: function (value) {\n            this._titleBarHeight = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HolographicSlate.prototype, \"renderingGroupId\", {\n        get: function () {\n            return this._titleBar.renderingGroupId;\n        },\n        /**\n         * Rendering ground id of all the meshes\n         */\n        set: function (id) {\n            this._titleBar.renderingGroupId = id;\n            this._titleBarTitle.renderingGroupId = id;\n            this._contentPlate.renderingGroupId = id;\n            this._backPlate.renderingGroupId = id;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HolographicSlate.prototype, \"title\", {\n        get: function () {\n            return this._titleText;\n        },\n        /**\n         * The title text displayed at the top of the slate\n         */\n        set: function (title) {\n            this._titleText = title;\n            if (this._titleTextComponent) {\n                this._titleTextComponent.text = title;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Apply the facade texture (created from the content property).\n     * This function can be overloaded by child classes\n     * @param facadeTexture defines the AdvancedDynamicTexture to use\n     */\n    HolographicSlate.prototype._applyFacade = function (facadeTexture) {\n        this._contentMaterial.albedoTexture = facadeTexture;\n        this._resetContentPositionAndZoom();\n        this._applyContentViewport();\n        facadeTexture.attachToMesh(this._contentPlate, true);\n    };\n    HolographicSlate.prototype._addControl = function (control) {\n        control._host = this._host;\n        if (this._host.utilityLayer) {\n            control._prepareNode(this._host.utilityLayer.utilityLayerScene);\n        }\n    };\n    HolographicSlate.prototype._getTypeName = function () {\n        return \"HolographicSlate\";\n    };\n    /**\n     * @hidden\n     */\n    HolographicSlate.prototype._positionElements = function () {\n        var followButton = this._followButton;\n        var closeButton = this._closeButton;\n        var titleBar = this._titleBar;\n        var titleBarTitle = this._titleBarTitle;\n        var contentPlate = this._contentPlate;\n        var backPlate = this._backPlate;\n        if (followButton && closeButton && titleBar) {\n            closeButton.scaling.setAll(this.titleBarHeight);\n            followButton.scaling.setAll(this.titleBarHeight);\n            closeButton.position.copyFromFloats(this.dimensions.x - this.titleBarHeight / 2, -this.titleBarHeight / 2, 0).addInPlace(this.origin);\n            followButton.position.copyFromFloats(this.dimensions.x - (3 * this.titleBarHeight) / 2, -this.titleBarHeight / 2, 0).addInPlace(this.origin);\n            var contentPlateHeight = this.dimensions.y - this.titleBarHeight - this.titleBarMargin;\n            var rightHandScene = contentPlate.getScene().useRightHandedSystem;\n            titleBar.scaling.set(this.dimensions.x, this.titleBarHeight, Epsilon);\n            titleBarTitle.scaling.set(this.dimensions.x - 2 * this.titleBarHeight, this.titleBarHeight, Epsilon);\n            contentPlate.scaling.copyFromFloats(this.dimensions.x, contentPlateHeight, Epsilon);\n            backPlate.scaling.copyFromFloats(this.dimensions.x, contentPlateHeight, Epsilon);\n            titleBar.position.copyFromFloats(this.dimensions.x / 2, -(this.titleBarHeight / 2), 0).addInPlace(this.origin);\n            titleBarTitle.position\n                .copyFromFloats(this.dimensions.x / 2 - this.titleBarHeight, -(this.titleBarHeight / 2), rightHandScene ? Epsilon : -Epsilon)\n                .addInPlace(this.origin);\n            contentPlate.position.copyFromFloats(this.dimensions.x / 2, -(this.titleBarHeight + this.titleBarMargin + contentPlateHeight / 2), 0).addInPlace(this.origin);\n            backPlate.position\n                .copyFromFloats(this.dimensions.x / 2, -(this.titleBarHeight + this.titleBarMargin + contentPlateHeight / 2), rightHandScene ? -Epsilon : Epsilon)\n                .addInPlace(this.origin);\n            // Update the title's AdvancedDynamicTexture scale to avoid visual stretching\n            this._titleTextComponent.host.scaleTo((HolographicSlate._DEFAULT_TEXT_RESOLUTION_Y * titleBarTitle.scaling.x) / titleBarTitle.scaling.y, HolographicSlate._DEFAULT_TEXT_RESOLUTION_Y);\n            var aspectRatio = this.dimensions.x / contentPlateHeight;\n            this._contentViewport.width = this._contentScaleRatio;\n            this._contentViewport.height = this._contentScaleRatio / aspectRatio;\n            this._applyContentViewport();\n            if (this._gizmo) {\n                this._gizmo.updateBoundingBox();\n            }\n        }\n    };\n    HolographicSlate.prototype._applyContentViewport = function () {\n        var _a;\n        if (((_a = this._contentPlate) === null || _a === void 0 ? void 0 : _a.material) && this._contentPlate.material.albedoTexture) {\n            var tex = this._contentPlate.material.albedoTexture;\n            tex.uScale = this._contentScaleRatio;\n            tex.vScale = (this._contentScaleRatio / this._contentViewport.width) * this._contentViewport.height;\n            tex.uOffset = this._contentViewport.x;\n            tex.vOffset = this._contentViewport.y;\n        }\n    };\n    HolographicSlate.prototype._resetContentPositionAndZoom = function () {\n        this._contentViewport.x = 0;\n        this._contentViewport.y = 1 - this._contentViewport.height / this._contentViewport.width;\n        this._contentScaleRatio = 1;\n    };\n    /**\n     * @hidden\n     */\n    HolographicSlate.prototype._updatePivot = function () {\n        if (!this.mesh) {\n            return;\n        }\n        // Update pivot point so it is at the center of geometry\n        // As origin is topleft corner in 2D, dimensions are calculated towards bottom right corner, thus y axis is downwards\n        var center = new Vector3(this.dimensions.x * 0.5, -this.dimensions.y * 0.5, Epsilon);\n        center.addInPlace(this.origin);\n        center.z = 0;\n        var origin = new Vector3(0, 0, 0);\n        Vector3.TransformCoordinatesToRef(origin, this.mesh.computeWorldMatrix(true), origin);\n        this.mesh.setPivotPoint(center);\n        var origin2 = new Vector3(0, 0, 0);\n        Vector3.TransformCoordinatesToRef(origin2, this.mesh.computeWorldMatrix(true), origin2);\n        this.mesh.position.addInPlace(origin).subtractInPlace(origin2);\n    };\n    // Mesh association\n    HolographicSlate.prototype._createNode = function (scene) {\n        var _this = this;\n        var node = new Mesh(\"slate_\" + this.name, scene);\n        this._titleBar = CreateBox(\"titleBar_\" + this.name, { size: 1 }, scene);\n        this._titleBarTitle = CreatePlane(\"titleText_\" + this.name, { size: 1 }, scene);\n        this._titleBarTitle.parent = node;\n        this._titleBarTitle.isPickable = false;\n        var adt = AdvancedDynamicTexture.CreateForMesh(this._titleBarTitle);\n        this._titleTextComponent = new TextBlock(\"titleText_\" + this.name, this._titleText);\n        this._titleTextComponent.textWrapping = TextWrapping.Ellipsis;\n        this._titleTextComponent.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        this._titleTextComponent.color = \"white\";\n        this._titleTextComponent.fontSize = HolographicSlate._DEFAULT_TEXT_RESOLUTION_Y / 2;\n        this._titleTextComponent.paddingLeft = HolographicSlate._DEFAULT_TEXT_RESOLUTION_Y / 4;\n        adt.addControl(this._titleTextComponent);\n        if (scene.useRightHandedSystem) {\n            var faceUV = new Vector4(0, 0, 1, 1);\n            this._contentPlate = CreatePlane(\"contentPlate_\" + this.name, { size: 1, sideOrientation: VertexData.BACKSIDE, frontUVs: faceUV }, scene);\n            this._backPlate = CreatePlane(\"backPlate_\" + this.name, { size: 1, sideOrientation: VertexData.FRONTSIDE }, scene);\n        }\n        else {\n            var faceUV = new Vector4(0, 0, 1, 1);\n            this._contentPlate = CreatePlane(\"contentPlate_\" + this.name, { size: 1, sideOrientation: VertexData.FRONTSIDE, frontUVs: faceUV }, scene);\n            this._backPlate = CreatePlane(\"backPlate_\" + this.name, { size: 1, sideOrientation: VertexData.BACKSIDE }, scene);\n        }\n        this._titleBar.parent = node;\n        this._titleBar.isNearGrabbable = true;\n        this._contentPlate.parent = node;\n        this._backPlate.parent = node;\n        this._attachContentPlateBehavior();\n        this._addControl(this._followButton);\n        this._addControl(this._closeButton);\n        var followButton = this._followButton;\n        var closeButton = this._closeButton;\n        followButton.node.parent = node;\n        closeButton.node.parent = node;\n        this._positionElements();\n        this._followButton.imageUrl = HolographicSlate.ASSETS_BASE_URL + HolographicSlate.FOLLOW_ICON_FILENAME;\n        this._closeButton.imageUrl = HolographicSlate.ASSETS_BASE_URL + HolographicSlate.CLOSE_ICON_FILENAME;\n        this._followButton.isBackplateVisible = false;\n        this._closeButton.isBackplateVisible = false;\n        this._followButton.onToggleObservable.add(function (isToggled) {\n            _this._defaultBehavior.followBehaviorEnabled = isToggled;\n            if (_this._defaultBehavior.followBehaviorEnabled) {\n                _this._defaultBehavior.followBehavior.recenter();\n            }\n        });\n        this._closeButton.onPointerClickObservable.add(function () {\n            _this.dispose();\n        });\n        node.rotationQuaternion = Quaternion.Identity();\n        node.isVisible = false;\n        return node;\n    };\n    HolographicSlate.prototype._attachContentPlateBehavior = function () {\n        var _this = this;\n        this._contentDragBehavior.attach(this._contentPlate);\n        this._contentDragBehavior.moveAttached = false;\n        this._contentDragBehavior.useObjectOrientationForDragging = true;\n        this._contentDragBehavior.updateDragPlane = false;\n        var origin = new Vector3();\n        var worldDimensions = new Vector3();\n        var upWorld = new Vector3();\n        var rightWorld = new Vector3();\n        var projectedOffset = new Vector2();\n        var startViewport;\n        var worldMatrix;\n        this._contentDragBehavior.onDragStartObservable.add(function (event) {\n            if (!_this.node) {\n                return;\n            }\n            startViewport = _this._contentViewport.clone();\n            worldMatrix = _this.node.computeWorldMatrix(true);\n            origin.copyFrom(event.dragPlanePoint);\n            worldDimensions.set(_this.dimensions.x, _this.dimensions.y, Epsilon);\n            worldDimensions.y -= _this.titleBarHeight + _this.titleBarMargin;\n            Vector3.TransformNormalToRef(worldDimensions, worldMatrix, worldDimensions);\n            upWorld.copyFromFloats(0, 1, 0);\n            Vector3.TransformNormalToRef(upWorld, worldMatrix, upWorld);\n            rightWorld.copyFromFloats(1, 0, 0);\n            Vector3.TransformNormalToRef(rightWorld, worldMatrix, rightWorld);\n            upWorld.normalize();\n            upWorld.scaleInPlace(1 / Vector3.Dot(upWorld, worldDimensions));\n            rightWorld.normalize();\n            rightWorld.scaleInPlace(1 / Vector3.Dot(rightWorld, worldDimensions));\n        });\n        var offset = new Vector3();\n        this._contentDragBehavior.onDragObservable.add(function (event) {\n            offset.copyFrom(event.dragPlanePoint);\n            offset.subtractInPlace(origin);\n            projectedOffset.copyFromFloats(Vector3.Dot(offset, rightWorld), Vector3.Dot(offset, upWorld));\n            // By default, content takes full width available and height is cropped to keep aspect ratio\n            _this._contentViewport.x = Scalar.Clamp(startViewport.x - offset.x, 0, 1 - _this._contentViewport.width * _this._contentScaleRatio);\n            _this._contentViewport.y = Scalar.Clamp(startViewport.y - offset.y, 0, 1 - _this._contentViewport.height * _this._contentScaleRatio);\n            _this._applyContentViewport();\n        });\n    };\n    HolographicSlate.prototype._affectMaterial = function (mesh) {\n        // TODO share materials\n        this._titleBarMaterial = new FluentBackplateMaterial(\"\".concat(this.name, \" plateMaterial\"), mesh.getScene());\n        this._contentMaterial = new FluentMaterial(\"\".concat(this.name, \" contentMaterial\"), mesh.getScene());\n        this._contentMaterial.renderBorders = true;\n        this._backMaterial = new FluentBackplateMaterial(\"\".concat(this.name, \" backPlate\"), mesh.getScene());\n        this._backMaterial.lineWidth = Epsilon;\n        this._backMaterial.radius = 0.005;\n        this._backMaterial.backFaceCulling = true;\n        this._titleBar.material = this._titleBarMaterial;\n        this._contentPlate.material = this._contentMaterial;\n        this._backPlate.material = this._backMaterial;\n        this._resetContent();\n        this._applyContentViewport();\n    };\n    /**\n     * @param scene\n     * @hidden*\n     */\n    HolographicSlate.prototype._prepareNode = function (scene) {\n        var _this = this;\n        _super.prototype._prepareNode.call(this, scene);\n        this._gizmo = new SlateGizmo(this._host.utilityLayer);\n        this._gizmo.attachedSlate = this;\n        this._defaultBehavior = new DefaultBehavior();\n        this._defaultBehavior.attach(this.node, [this._titleBar]);\n        this._defaultBehavior.sixDofDragBehavior.onDragStartObservable.add(function () {\n            _this._followButton.isToggled = false;\n        });\n        this._positionChangedObserver = this._defaultBehavior.sixDofDragBehavior.onPositionChangedObservable.add(function () {\n            _this._gizmo.updateBoundingBox();\n        });\n        this._updatePivot();\n        this.resetDefaultAspectAndPose(false);\n    };\n    /**\n     * Resets the aspect and pose of the slate so it is right in front of the active camera, facing towards it.\n     * @param resetAspect Should the slate's dimensions/aspect ratio be reset as well\n     */\n    HolographicSlate.prototype.resetDefaultAspectAndPose = function (resetAspect) {\n        if (resetAspect === void 0) { resetAspect = true; }\n        if (!this._host || !this._host.utilityLayer || !this.node) {\n            return;\n        }\n        var scene = this._host.utilityLayer.utilityLayerScene;\n        var camera = scene.activeCamera;\n        if (camera) {\n            var worldMatrix = camera.getWorldMatrix();\n            var backward = Vector3.TransformNormal(Vector3.Backward(scene.useRightHandedSystem), worldMatrix);\n            this.origin.setAll(0);\n            this._gizmo.updateBoundingBox();\n            var pivot = this.node.getAbsolutePivotPoint();\n            this.node.position.copyFrom(camera.position).subtractInPlace(backward).subtractInPlace(pivot);\n            this.node.rotationQuaternion = Quaternion.FromLookDirectionLH(backward, new Vector3(0, 1, 0));\n            if (resetAspect) {\n                this.dimensions = this.defaultDimensions;\n            }\n        }\n    };\n    /**\n     * Releases all associated resources\n     */\n    HolographicSlate.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._titleBarMaterial.dispose();\n        this._contentMaterial.dispose();\n        this._titleBar.dispose();\n        this._titleBarTitle.dispose();\n        this._contentPlate.dispose();\n        this._backPlate.dispose();\n        this._followButton.dispose();\n        this._closeButton.dispose();\n        this._host.onPickedPointChangedObservable.remove(this._pickedPointObserver);\n        this._defaultBehavior.sixDofDragBehavior.onPositionChangedObservable.remove(this._positionChangedObserver);\n        this._defaultBehavior.detach();\n        this._gizmo.dispose();\n        this._contentDragBehavior.detach();\n    };\n    /**\n     * Base Url for the assets.\n     */\n    HolographicSlate.ASSETS_BASE_URL = \"https://assets.babylonjs.com/meshes/MRTK/\";\n    /**\n     * File name for the close icon.\n     */\n    HolographicSlate.CLOSE_ICON_FILENAME = \"IconClose.png\";\n    /**\n     * File name for the close icon.\n     */\n    HolographicSlate.FOLLOW_ICON_FILENAME = \"IconFollowMe.png\";\n    HolographicSlate._DEFAULT_TEXT_RESOLUTION_Y = 102.4;\n    return HolographicSlate;\n}(ContentDisplay3D));\nexport { HolographicSlate };\n//# sourceMappingURL=holographicSlate.js.map","import { __extends } from \"tslib\";\nimport { VolumeBasedPanel } from \"./volumeBasedPanel.js\";\nimport { Mesh } from \"@babylonjs/core/Meshes/mesh.js\";\nimport { CreateBox } from \"@babylonjs/core/Meshes/Builders/boxBuilder.js\";\nimport { FluentMaterial } from \"../materials/fluent/fluentMaterial.js\";\nimport { Color3 } from \"@babylonjs/core/Maths/math.color.js\";\nimport { Logger } from \"@babylonjs/core/Misc/logger.js\";\n/**\n * Simple menu that can contain holographic buttons\n */\nvar TouchHolographicMenu = /** @class */ (function (_super) {\n    __extends(TouchHolographicMenu, _super);\n    /**\n     * Creates a holographic menu GUI 3D control\n     * @param name name of the menu\n     */\n    function TouchHolographicMenu(name) {\n        var _this = _super.call(this, name) || this;\n        _this._backPlateMargin = 1.25;\n        return _this;\n    }\n    Object.defineProperty(TouchHolographicMenu.prototype, \"backPlateMargin\", {\n        /**\n         * Gets or sets the margin size of the backplate in button size units.\n         * Setting this to 1, will make the backPlate margin the size of 1 button\n         */\n        get: function () {\n            return this._backPlateMargin;\n        },\n        set: function (value) {\n            var _this = this;\n            this._backPlateMargin = value;\n            if (this._children.length >= 1) {\n                this.children.forEach(function (control) {\n                    _this._updateCurrentMinMax(control.position);\n                });\n                this._updateMargins();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TouchHolographicMenu.prototype._createNode = function (scene) {\n        var node = new Mesh(\"menu_\".concat(this.name), scene);\n        this._backPlate = CreateBox(\"backPlate\" + this.name, { size: 1 }, scene);\n        this._backPlate.parent = node;\n        return node;\n    };\n    TouchHolographicMenu.prototype._affectMaterial = function (mesh) {\n        var _this = this;\n        this._backPlateMaterial = new FluentMaterial(this.name + \"backPlateMaterial\", mesh.getScene());\n        this._backPlateMaterial.albedoColor = new Color3(0.08, 0.15, 0.55);\n        this._backPlateMaterial.renderBorders = true;\n        this._backPlateMaterial.renderHoverLight = true;\n        this._pickedPointObserver = this._host.onPickedPointChangedObservable.add(function (pickedPoint) {\n            if (pickedPoint) {\n                _this._backPlateMaterial.hoverPosition = pickedPoint;\n                _this._backPlateMaterial.hoverColor.a = 1.0;\n            }\n            else {\n                _this._backPlateMaterial.hoverColor.a = 0;\n            }\n        });\n        this._backPlate.material = this._backPlateMaterial;\n    };\n    TouchHolographicMenu.prototype._mapGridNode = function (control, nodePosition) {\n        // Simple plane mapping for the menu\n        var mesh = control.mesh;\n        if (!mesh) {\n            return;\n        }\n        control.position = nodePosition.clone();\n        this._updateCurrentMinMax(nodePosition);\n    };\n    TouchHolographicMenu.prototype._finalProcessing = function () {\n        this._updateMargins();\n    };\n    TouchHolographicMenu.prototype._updateCurrentMinMax = function (nodePosition) {\n        if (!this._currentMin) {\n            this._currentMin = nodePosition.clone();\n            this._currentMax = nodePosition.clone();\n        }\n        this._currentMin.minimizeInPlace(nodePosition);\n        this._currentMax.maximizeInPlace(nodePosition);\n    };\n    TouchHolographicMenu.prototype._updateMargins = function () {\n        if (this._children.length > 0) {\n            this._currentMin.addInPlaceFromFloats(-this._cellWidth / 2, -this._cellHeight / 2, 0);\n            this._currentMax.addInPlaceFromFloats(this._cellWidth / 2, this._cellHeight / 2, 0);\n            var extendSize = this._currentMax.subtract(this._currentMin);\n            // Also add a % margin\n            this._backPlate.scaling.x = extendSize.x + this._cellWidth * this.backPlateMargin;\n            this._backPlate.scaling.y = extendSize.y + this._cellHeight * this.backPlateMargin;\n            this._backPlate.scaling.z = 0.001;\n            for (var i = 0; i < this._children.length; i++) {\n                this._children[i].position.subtractInPlace(this._currentMin).subtractInPlace(extendSize.scale(0.5));\n                this._children[i].position.z -= 0.01;\n            }\n        }\n        this._currentMin = null;\n        this._currentMax = null;\n    };\n    /**\n     * Adds a button to the menu.\n     * Please note that the back material of the button will be set to transparent as it is attached to the menu.\n     *\n     * @param button Button to add\n     * @returns This menu\n     */\n    TouchHolographicMenu.prototype.addButton = function (button) {\n        // Block updating the layout until the button is resized (which has to happen after node creation)\n        var wasLayoutBlocked = this.blockLayout;\n        if (!wasLayoutBlocked) {\n            this.blockLayout = true;\n        }\n        _super.prototype.addControl.call(this, button);\n        button.isBackplateVisible = false;\n        button.scaling.scaleInPlace(TouchHolographicMenu.MENU_BUTTON_SCALE);\n        // Unblocking the layout triggers the pending layout update that uses the size of the buttons to determine the size of the backing mesh\n        if (!wasLayoutBlocked) {\n            this.blockLayout = false;\n        }\n        return this;\n    };\n    /**\n     * This method should not be used directly. It is inherited from `Container3D`.\n     * Please use `addButton` instead.\n     * @param _control\n     * @returns\n     */\n    TouchHolographicMenu.prototype.addControl = function (_control) {\n        Logger.Warn(\"TouchHolographicMenu can only contain buttons. Please use the method `addButton` instead.\");\n        return this;\n    };\n    /**\n     * Disposes the menu\n     */\n    TouchHolographicMenu.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._host.onPickedPointChangedObservable.remove(this._pickedPointObserver);\n    };\n    /**\n     * Scale for the buttons added to the menu\n     */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    TouchHolographicMenu.MENU_BUTTON_SCALE = 1;\n    return TouchHolographicMenu;\n}(VolumeBasedPanel));\nexport { TouchHolographicMenu };\n//# sourceMappingURL=touchHolographicMenu.js.map","import { __extends } from \"tslib\";\nimport { TouchHolographicMenu } from \"./touchHolographicMenu.js\";\nimport { HandConstraintBehavior } from \"@babylonjs/core/Behaviors/Meshes/handConstraintBehavior.js\";\n/**\n * Hand menu that displays buttons and floats around the hand.\n * @since 5.0.0\n */\nvar HandMenu = /** @class */ (function (_super) {\n    __extends(HandMenu, _super);\n    /**\n     * Creates a hand menu GUI 3D control\n     * @param xr the WebXRExperienceHelper used to link this control to the enabled WebXRHandTracking feature\n     * @param name name of the hand menu\n     */\n    function HandMenu(xr, name) {\n        var _this = _super.call(this, name) || this;\n        _this._handConstraintBehavior = new HandConstraintBehavior();\n        _this._handConstraintBehavior.linkToXRExperience(xr);\n        _this.backPlateMargin = 0.15;\n        _this.rows = 3;\n        return _this;\n    }\n    Object.defineProperty(HandMenu.prototype, \"handConstraintBehavior\", {\n        /**\n         * The hand constraint behavior setting the transformation of this node\n         */\n        get: function () {\n            return this._handConstraintBehavior;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    HandMenu.prototype._createNode = function (scene) {\n        var node = _super.prototype._createNode.call(this, scene);\n        this._handConstraintBehavior.attach(node);\n        return node;\n    };\n    /**\n     * Disposes the hand menu\n     */\n    HandMenu.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._handConstraintBehavior.detach();\n    };\n    return HandMenu;\n}(TouchHolographicMenu));\nexport { HandMenu };\n//# sourceMappingURL=handMenu.js.map","import { __extends } from \"tslib\";\nimport { Button3D } from \"./button3D.js\";\n/**\n * Class used to create an interactable object. It's a 3D button using a mesh coming from the current scene\n */\nvar MeshButton3D = /** @class */ (function (_super) {\n    __extends(MeshButton3D, _super);\n    /**\n     * Creates a new 3D button based on a mesh\n     * @param mesh mesh to become a 3D button\n     * @param name defines the control name\n     */\n    function MeshButton3D(mesh, name) {\n        var _this = _super.call(this, name) || this;\n        _this._currentMesh = mesh;\n        /**\n         * Provides a default behavior on hover/out & up/down\n         * Override those function to create your own desired behavior specific to your mesh\n         */\n        _this.pointerEnterAnimation = function () {\n            if (!_this.mesh) {\n                return;\n            }\n            _this.mesh.scaling.scaleInPlace(1.1);\n        };\n        _this.pointerOutAnimation = function () {\n            if (!_this.mesh) {\n                return;\n            }\n            _this.mesh.scaling.scaleInPlace(1.0 / 1.1);\n        };\n        _this.pointerDownAnimation = function () {\n            if (!_this.mesh) {\n                return;\n            }\n            _this.mesh.scaling.scaleInPlace(0.95);\n        };\n        _this.pointerUpAnimation = function () {\n            if (!_this.mesh) {\n                return;\n            }\n            _this.mesh.scaling.scaleInPlace(1.0 / 0.95);\n        };\n        return _this;\n    }\n    MeshButton3D.prototype._getTypeName = function () {\n        return \"MeshButton3D\";\n    };\n    // Mesh association\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    MeshButton3D.prototype._createNode = function (scene) {\n        var _this = this;\n        this._currentMesh.getChildMeshes().forEach(function (mesh) {\n            _this._injectGUI3DReservedDataStore(mesh).control = _this;\n        });\n        return this._currentMesh;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    MeshButton3D.prototype._affectMaterial = function (mesh) { };\n    return MeshButton3D;\n}(Button3D));\nexport { MeshButton3D };\n//# sourceMappingURL=meshButton3D.js.map","import { __extends } from \"tslib\";\nimport { TouchHolographicButton } from \"./touchHolographicButton.js\";\nimport { DefaultBehavior } from \"../behaviors/defaultBehavior.js\";\nimport { TouchHolographicMenu } from \"./touchHolographicMenu.js\";\n/**\n * NearMenu that displays buttons and follows the camera\n * @since 5.0.0\n */\nvar NearMenu = /** @class */ (function (_super) {\n    __extends(NearMenu, _super);\n    /**\n     * Creates a near menu GUI 3D control\n     * @param name name of the near menu\n     */\n    function NearMenu(name) {\n        var _this = _super.call(this, name) || this;\n        _this._isPinned = false;\n        _this._defaultBehavior = new DefaultBehavior();\n        _this._dragObserver = _this._defaultBehavior.sixDofDragBehavior.onDragObservable.add(function () {\n            _this.isPinned = true;\n        });\n        _this.backPlateMargin = 1;\n        return _this;\n    }\n    Object.defineProperty(NearMenu.prototype, \"defaultBehavior\", {\n        /**\n         * Regroups all mesh behaviors for the near menu\n         */\n        get: function () {\n            return this._defaultBehavior;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NearMenu.prototype, \"isPinned\", {\n        /**\n         * Indicates if the near menu is world-pinned\n         */\n        get: function () {\n            return this._isPinned;\n        },\n        set: function (value) {\n            // Tell the pin button to toggle if this was called manually, for clean state control\n            if (this._pinButton.isToggled !== value) {\n                this._pinButton.isToggled = value;\n                return;\n            }\n            this._isPinned = value;\n            if (value) {\n                this._defaultBehavior.followBehaviorEnabled = false;\n            }\n            else {\n                this._defaultBehavior.followBehaviorEnabled = true;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    NearMenu.prototype._createPinButton = function (parent) {\n        var _this = this;\n        var control = new TouchHolographicButton(\"pin\" + this.name, false);\n        control.imageUrl = NearMenu._ASSETS_BASE_URL + NearMenu._PIN_ICON_FILENAME;\n        control.parent = this;\n        control._host = this._host;\n        control.isToggleButton = true;\n        control.onToggleObservable.add(function (newState) {\n            _this.isPinned = newState;\n        });\n        if (this._host.utilityLayer) {\n            control._prepareNode(this._host.utilityLayer.utilityLayerScene);\n            control.scaling.scaleInPlace(TouchHolographicMenu.MENU_BUTTON_SCALE);\n            if (control.node) {\n                control.node.parent = parent;\n            }\n        }\n        return control;\n    };\n    NearMenu.prototype._createNode = function (scene) {\n        var node = _super.prototype._createNode.call(this, scene);\n        this._pinButton = this._createPinButton(node);\n        this.isPinned = false;\n        this._defaultBehavior.attach(node, [this._backPlate]);\n        this._defaultBehavior.followBehavior.ignoreCameraPitchAndRoll = true;\n        this._defaultBehavior.followBehavior.pitchOffset = -15;\n        this._defaultBehavior.followBehavior.minimumDistance = 0.3;\n        this._defaultBehavior.followBehavior.defaultDistance = 0.4;\n        this._defaultBehavior.followBehavior.maximumDistance = 0.6;\n        this._backPlate.isNearGrabbable = true;\n        node.isVisible = false;\n        return node;\n    };\n    NearMenu.prototype._finalProcessing = function () {\n        _super.prototype._finalProcessing.call(this);\n        this._pinButton.position.copyFromFloats((this._backPlate.scaling.x + TouchHolographicMenu.MENU_BUTTON_SCALE) / 2, this._backPlate.scaling.y / 2, 0);\n    };\n    /**\n     * Disposes the near menu\n     */\n    NearMenu.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._defaultBehavior.sixDofDragBehavior.onDragObservable.remove(this._dragObserver);\n        this._defaultBehavior.detach();\n    };\n    /**\n     * Base Url for the assets.\n     */\n    NearMenu._ASSETS_BASE_URL = \"https://assets.babylonjs.com/meshes/MRTK/\";\n    /**\n     * File name for the close icon.\n     */\n    NearMenu._PIN_ICON_FILENAME = \"IconPin.png\";\n    return NearMenu;\n}(TouchHolographicMenu));\nexport { NearMenu };\n//# sourceMappingURL=nearMenu.js.map","import { __extends } from \"tslib\";\nimport { TmpVectors, Vector3 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { Container3D } from \"./container3D.js\";\nimport { VolumeBasedPanel } from \"./volumeBasedPanel.js\";\n/**\n * Class used to create a container panel deployed on the surface of a plane\n */\nvar PlanePanel = /** @class */ (function (_super) {\n    __extends(PlanePanel, _super);\n    function PlanePanel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PlanePanel.prototype._mapGridNode = function (control, nodePosition) {\n        var mesh = control.mesh;\n        if (!mesh) {\n            return;\n        }\n        control.position = nodePosition.clone();\n        var target = TmpVectors.Vector3[0];\n        target.copyFrom(nodePosition);\n        switch (this.orientation) {\n            case Container3D.FACEORIGIN_ORIENTATION:\n            case Container3D.FACEFORWARD_ORIENTATION:\n                target.addInPlace(new Vector3(0, 0, 1));\n                mesh.lookAt(target);\n                break;\n            case Container3D.FACEFORWARDREVERSED_ORIENTATION:\n            case Container3D.FACEORIGINREVERSED_ORIENTATION:\n                target.addInPlace(new Vector3(0, 0, -1));\n                mesh.lookAt(target);\n                break;\n        }\n    };\n    return PlanePanel;\n}(VolumeBasedPanel));\nexport { PlanePanel };\n//# sourceMappingURL=planePanel.js.map","import { __extends } from \"tslib\";\nimport { Tools } from \"@babylonjs/core/Misc/tools.js\";\nimport { TmpVectors, Vector3 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { VolumeBasedPanel } from \"./volumeBasedPanel.js\";\nimport { Container3D } from \"./container3D.js\";\n/**\n * Class used to create a container panel where items get randomized planar mapping\n */\nvar ScatterPanel = /** @class */ (function (_super) {\n    __extends(ScatterPanel, _super);\n    function ScatterPanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._iteration = 100.0;\n        return _this;\n    }\n    Object.defineProperty(ScatterPanel.prototype, \"iteration\", {\n        /**\n         * Gets or sets the number of iteration to use to scatter the controls (100 by default)\n         */\n        get: function () {\n            return this._iteration;\n        },\n        set: function (value) {\n            var _this = this;\n            if (this._iteration === value) {\n                return;\n            }\n            this._iteration = value;\n            Tools.SetImmediate(function () {\n                _this._arrangeChildren();\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ScatterPanel.prototype._mapGridNode = function (control, nodePosition) {\n        var mesh = control.mesh;\n        var newPos = this._scatterMapping(nodePosition);\n        if (!mesh) {\n            return;\n        }\n        switch (this.orientation) {\n            case Container3D.FACEORIGIN_ORIENTATION:\n            case Container3D.FACEFORWARD_ORIENTATION:\n                mesh.lookAt(new Vector3(0, 0, 1));\n                break;\n            case Container3D.FACEFORWARDREVERSED_ORIENTATION:\n            case Container3D.FACEORIGINREVERSED_ORIENTATION:\n                mesh.lookAt(new Vector3(0, 0, -1));\n                break;\n        }\n        control.position = newPos;\n    };\n    ScatterPanel.prototype._scatterMapping = function (source) {\n        source.x = (1.0 - Math.random() * 2.0) * this._cellWidth;\n        source.y = (1.0 - Math.random() * 2.0) * this._cellHeight;\n        return source;\n    };\n    ScatterPanel.prototype._finalProcessing = function () {\n        var meshes = [];\n        for (var _i = 0, _a = this._children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            if (!child.mesh) {\n                continue;\n            }\n            meshes.push(child.mesh);\n        }\n        for (var count = 0; count < this._iteration; count++) {\n            meshes.sort(function (a, b) {\n                var distance1 = a.position.lengthSquared();\n                var distance2 = b.position.lengthSquared();\n                if (distance1 < distance2) {\n                    return 1;\n                }\n                else if (distance1 > distance2) {\n                    return -1;\n                }\n                return 0;\n            });\n            var radiusPaddingSquared = Math.pow(this.margin, 2.0);\n            var cellSize = Math.max(this._cellWidth, this._cellHeight);\n            var difference2D = TmpVectors.Vector2[0];\n            var difference = TmpVectors.Vector3[0];\n            for (var i = 0; i < meshes.length - 1; i++) {\n                for (var j = i + 1; j < meshes.length; j++) {\n                    if (i != j) {\n                        meshes[j].position.subtractToRef(meshes[i].position, difference);\n                        // Ignore Z axis\n                        difference2D.x = difference.x;\n                        difference2D.y = difference.y;\n                        var combinedRadius = cellSize;\n                        var distance = difference2D.lengthSquared() - radiusPaddingSquared;\n                        var minSeparation = Math.min(distance, radiusPaddingSquared);\n                        distance -= minSeparation;\n                        if (distance < Math.pow(combinedRadius, 2.0)) {\n                            difference2D.normalize();\n                            difference.scaleInPlace((combinedRadius - Math.sqrt(distance)) * 0.5);\n                            meshes[j].position.addInPlace(difference);\n                            meshes[i].position.subtractInPlace(difference);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    return ScatterPanel;\n}(VolumeBasedPanel));\nexport { ScatterPanel };\n//# sourceMappingURL=scatterPanel.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nvar name = \"mrdlSliderBarPixelShader\";\nvar shader = \"uniform vec3 cameraPosition;\\nvarying vec3 vPosition;\\nvarying vec3 vNormal;\\nvarying vec2 vUV;\\nvarying vec3 vTangent;\\nvarying vec3 vBinormal;\\nvarying vec4 vColor;\\nvarying vec4 vExtra1;\\nvarying vec4 vExtra2;\\nvarying vec4 vExtra3;\\nuniform float _Radius_;\\nuniform float _Bevel_Front_;\\nuniform float _Bevel_Front_Stretch_;\\nuniform float _Bevel_Back_;\\nuniform float _Bevel_Back_Stretch_;\\nuniform float _Radius_Top_Left_;\\nuniform float _Radius_Top_Right_;\\nuniform float _Radius_Bottom_Left_;\\nuniform float _Radius_Bottom_Right_;\\nuniform bool _Bulge_Enabled_;\\nuniform float _Bulge_Height_;\\nuniform float _Bulge_Radius_;\\nuniform float _Sun_Intensity_;\\nuniform float _Sun_Theta_;\\nuniform float _Sun_Phi_;\\nuniform float _Indirect_Diffuse_;\\nuniform vec4 _Albedo_;\\nuniform float _Specular_;\\nuniform float _Shininess_;\\nuniform float _Sharpness_;\\nuniform float _Subsurface_;\\nuniform vec4 _Left_Color_;\\nuniform vec4 _Right_Color_;\\nuniform float _Reflection_;\\nuniform float _Front_Reflect_;\\nuniform float _Edge_Reflect_;\\nuniform float _Power_;\\nuniform vec4 _Sky_Color_;\\nuniform vec4 _Horizon_Color_;\\nuniform vec4 _Ground_Color_;\\nuniform float _Horizon_Power_;\\nuniform sampler2D _Reflection_Map_;\\nuniform sampler2D _Indirect_Environment_;\\nuniform float _Width_;\\nuniform float _Fuzz_;\\nuniform float _Min_Fuzz_;\\nuniform float _Clip_Fade_;\\nuniform float _Hue_Shift_;\\nuniform float _Saturation_Shift_;\\nuniform float _Value_Shift_;\\nuniform vec3 _Blob_Position_;\\nuniform float _Blob_Intensity_;\\nuniform float _Blob_Near_Size_;\\nuniform float _Blob_Far_Size_;\\nuniform float _Blob_Near_Distance_;\\nuniform float _Blob_Far_Distance_;\\nuniform float _Blob_Fade_Length_;\\nuniform float _Blob_Pulse_;\\nuniform float _Blob_Fade_;\\nuniform sampler2D _Blob_Texture_;\\nuniform vec3 _Blob_Position_2_;\\nuniform float _Blob_Near_Size_2_;\\nuniform float _Blob_Pulse_2_;\\nuniform float _Blob_Fade_2_;\\nuniform vec3 _Left_Index_Pos_;\\nuniform vec3 _Right_Index_Pos_;\\nuniform vec3 _Left_Index_Middle_Pos_;\\nuniform vec3 _Right_Index_Middle_Pos_;\\nuniform sampler2D _Decal_;\\nuniform vec2 _Decal_Scale_XY_;\\nuniform bool _Decal_Front_Only_;\\nuniform float _Rim_Intensity_;\\nuniform sampler2D _Rim_Texture_;\\nuniform float _Rim_Hue_Shift_;\\nuniform float _Rim_Saturation_Shift_;\\nuniform float _Rim_Value_Shift_;\\nuniform float _Iridescence_Intensity_;\\nuniform sampler2D _Iridescence_Texture_;\\nuniform bool Use_Global_Left_Index;\\nuniform bool Use_Global_Right_Index;\\nuniform vec4 Global_Left_Index_Tip_Position;\\nuniform vec4 Global_Right_Index_Tip_Position;\\nuniform vec4 Global_Left_Thumb_Tip_Position;\\nuniform vec4 Global_Right_Thumb_Tip_Position;\\nuniform vec4 Global_Left_Index_Middle_Position;\\nuniform vec4 Global_Right_Index_Middle_Position;\\nuniform float Global_Left_Index_Tip_Proximity;\\nuniform float Global_Right_Index_Tip_Proximity;\\nvoid Blob_Fragment_B30(\\nsampler2D Blob_Texture,\\nvec4 Blob_Info1,\\nvec4 Blob_Info2,\\nout vec4 Blob_Color)\\n{\\nfloat k1=dot(Blob_Info1.xy,Blob_Info1.xy);\\nfloat k2=dot(Blob_Info2.xy,Blob_Info2.xy);\\nvec3 closer=k1<k2 ? vec3(k1,Blob_Info1.z,Blob_Info1.w) : vec3(k2,Blob_Info2.z,Blob_Info2.w);\\nBlob_Color=closer.z*texture(Blob_Texture,vec2(vec2(sqrt(closer.x),closer.y).x,1.0-vec2(sqrt(closer.x),closer.y).y))*clamp(1.0-closer.x,0.0,1.0);\\n}\\nvoid FastLinearTosRGB_B42(\\nvec4 Linear,\\nout vec4 sRGB)\\n{\\nsRGB.rgb=sqrt(clamp(Linear.rgb,0.0,1.0));\\nsRGB.a=Linear.a;\\n}\\nvoid Scale_RGB_B59(\\nvec4 Color,\\nfloat Scalar,\\nout vec4 Result)\\n{\\nResult=vec4(Scalar,Scalar,Scalar,1)*Color;\\n}\\nvoid Fragment_Main_B121(\\nfloat Sun_Intensity,\\nfloat Sun_Theta,\\nfloat Sun_Phi,\\nvec3 Normal,\\nvec4 Albedo,\\nfloat Fresnel_Reflect,\\nfloat Shininess,\\nvec3 Incident,\\nvec4 Horizon_Color,\\nvec4 Sky_Color,\\nvec4 Ground_Color,\\nfloat Indirect_Diffuse,\\nfloat Specular,\\nfloat Horizon_Power,\\nfloat Reflection,\\nvec4 Reflection_Sample,\\nvec4 Indirect_Sample,\\nfloat Sharpness,\\nfloat SSS,\\nfloat Subsurface,\\nvec4 Translucence,\\nvec4 Rim_Light,\\nvec4 Iridescence,\\nout vec4 Result)\\n{\\nfloat theta=Sun_Theta*2.0*3.14159;\\nfloat phi=Sun_Phi*3.14159;\\nvec3 lightDir= vec3(cos(phi)*cos(theta),sin(phi),cos(phi)*sin(theta));\\nfloat NdotL=max(dot(lightDir,Normal),0.0);\\nvec3 R=reflect(Incident,Normal);\\nfloat RdotL=max(0.0,dot(R,lightDir));\\nfloat specular=pow(RdotL,Shininess);\\nspecular=mix(specular,smoothstep(0.495*Sharpness,1.0-0.495*Sharpness,specular),Sharpness);\\nvec4 gi=mix(Ground_Color,Sky_Color,Normal.y*0.5+0.5);\\nResult=((Sun_Intensity*NdotL+Indirect_Sample*Indirect_Diffuse+Translucence)*(1.0+SSS*Subsurface))*Albedo*(1.0-Fresnel_Reflect)+(Sun_Intensity*specular*Specular+Fresnel_Reflect*Reflection*Reflection_Sample)+Fresnel_Reflect*Rim_Light+Iridescence;\\n}\\nvoid Bulge_B79(\\nbool Enabled,\\nvec3 Normal,\\nvec3 Tangent,\\nfloat Bulge_Height,\\nvec4 UV,\\nfloat Bulge_Radius,\\nvec3 ButtonN,\\nout vec3 New_Normal)\\n{\\nvec2 xy=clamp(UV.xy*2.0,vec2(-1,-1),vec2(1,1));\\nvec3 B=(cross(Normal,Tangent));\\nfloat k=-clamp(1.0-length(xy)/Bulge_Radius,0.0,1.0)*Bulge_Height;\\nk=sin(k*3.14159*0.5);\\nk*=smoothstep(0.9998,0.9999,abs(dot(ButtonN,Normal)));\\nNew_Normal=Normal*sqrt(1.0-k*k)+(xy.x*Tangent+xy.y*B)*k;\\nNew_Normal=Enabled ? New_Normal : Normal;\\n}\\nvoid SSS_B77(\\nvec3 ButtonN,\\nvec3 Normal,\\nvec3 Incident,\\nout float Result)\\n{\\nfloat NdotI=abs(dot(Normal,Incident));\\nfloat BdotI=abs(dot(ButtonN,Incident));\\nResult=(abs(NdotI-BdotI)); \\n}\\nvoid FingerOcclusion_B67(\\nfloat Width,\\nfloat DistToCenter,\\nfloat Fuzz,\\nfloat Min_Fuzz,\\nvec3 Position,\\nvec3 Forward,\\nvec3 Nearest,\\nfloat Fade_Out,\\nout float NotInShadow)\\n{\\nfloat d=dot((Nearest-Position),Forward);\\nfloat sh=smoothstep(Width*0.5,Width*0.5+Fuzz*max(d,0.0)+Min_Fuzz,DistToCenter);\\nNotInShadow=1.0-(1.0-sh)*smoothstep(-Fade_Out,0.0,d);\\n}\\nvoid FingerOcclusion_B68(\\nfloat Width,\\nfloat DistToCenter,\\nfloat Fuzz,\\nfloat Min_Fuzz,\\nvec3 Position,\\nvec3 Forward,\\nvec3 Nearest,\\nfloat Fade_Out,\\nout float NotInShadow)\\n{\\nfloat d=dot((Nearest-Position),Forward);\\nfloat sh=smoothstep(Width*0.5,Width*0.5+Fuzz*max(d,0.0)+Min_Fuzz,DistToCenter);\\nNotInShadow=1.0-(1.0-sh)*smoothstep(-Fade_Out,0.0,d);\\n}\\nvoid Scale_Color_B91(\\nvec4 Color,\\nfloat Scalar,\\nout vec4 Result)\\n{\\nResult=Scalar*Color;\\n}\\nvoid From_HSV_B73(\\nfloat Hue,\\nfloat Saturation,\\nfloat Value,\\nfloat Alpha,\\nout vec4 Color)\\n{\\nvec4 K=vec4(1.0,2.0/3.0,1.0/3.0,3.0);\\nvec3 p=abs(fract(vec3(Hue,Hue,Hue)+K.xyz)*6.0-K.www);\\nColor.rgb=Value*mix(K.xxx,clamp(p-K.xxx,0.0,1.0),Saturation);\\nColor.a=Alpha;\\n}\\nvoid Fast_Fresnel_B122(\\nfloat Front_Reflect,\\nfloat Edge_Reflect,\\nfloat Power,\\nvec3 Normal,\\nvec3 Incident,\\nout float Transmit,\\nout float Reflect)\\n{\\nfloat d=max(-dot(Incident,Normal),0.0);\\nReflect=Front_Reflect+(Edge_Reflect-Front_Reflect)*pow(.01-d,Power);\\nTransmit=1.0-Reflect;\\n}\\nvoid Mapped_Environment_B51(\\nsampler2D Reflected_Environment,\\nsampler2D Indirect_Environment,\\nvec3 Dir,\\nout vec4 Reflected_Color,\\nout vec4 Indirect_Diffuse)\\n{\\nReflected_Color=texture(Reflected_Environment,vec2(atan(Dir.z,Dir.x)/3.14159*0.5,asin(Dir.y)/3.14159+0.5));\\nIndirect_Diffuse=texture(Indirect_Environment,vec2(atan(Dir.z,Dir.x)/3.14159*0.5,asin(Dir.y)/3.14159+0.5));\\n}\\nvec4 SampleEnv_Bid50(vec3 D,vec4 S,vec4 H,vec4 G,float exponent)\\n{\\nfloat k=pow(abs(D.y),exponent);\\nvec4 C;\\nif (D.y>0.0) {\\nC=mix(H,S,k);\\n} else {\\nC=mix(H,G,k); \\n}\\nreturn C;\\n}\\nvoid Sky_Environment_B50(\\nvec3 Normal,\\nvec3 Reflected,\\nvec4 Sky_Color,\\nvec4 Horizon_Color,\\nvec4 Ground_Color,\\nfloat Horizon_Power,\\nout vec4 Reflected_Color,\\nout vec4 Indirect_Color)\\n{\\nReflected_Color=SampleEnv_Bid50(Reflected,Sky_Color,Horizon_Color,Ground_Color,Horizon_Power);\\nIndirect_Color=mix(Ground_Color,Sky_Color,Normal.y*0.5+0.5);\\n}\\nvoid Min_Segment_Distance_B65(\\nvec3 P0,\\nvec3 P1,\\nvec3 Q0,\\nvec3 Q1,\\nout vec3 NearP,\\nout vec3 NearQ,\\nout float Distance)\\n{\\nvec3 u=P1-P0;\\nvec3 v=Q1-Q0;\\nvec3 w=P0-Q0;\\nfloat a=dot(u,u);\\nfloat b=dot(u,v);\\nfloat c=dot(v,v);\\nfloat d=dot(u,w);\\nfloat e=dot(v,w);\\nfloat D=a*c-b*b;\\nfloat sD=D;\\nfloat tD=D;\\nfloat sc,sN,tc,tN;\\nif (D<0.00001) {\\nsN=0.0;\\nsD=1.0;\\ntN=e;\\ntD=c;\\n} else {\\nsN=(b*e-c*d);\\ntN=(a*e-b*d);\\nif (sN<0.0) {\\nsN=0.0;\\ntN=e;\\ntD=c;\\n} else if (sN>sD) {\\nsN=sD;\\ntN=e+b;\\ntD=c;\\n}\\n}\\nif (tN<0.0) {\\ntN=0.0;\\nif (-d<0.0) {\\nsN=0.0;\\n} else if (-d>a) {\\nsN=sD;\\n} else {\\nsN=-d;\\nsD=a;\\n}\\n} else if (tN>tD) {\\ntN=tD;\\nif ((-d+b)<0.0) {\\nsN=0.0;\\n} else if ((-d+b)>a) {\\nsN=sD;\\n} else {\\nsN=(-d+b);\\nsD=a;\\n}\\n}\\nsc=abs(sN)<0.000001 ? 0.0 : sN/sD;\\ntc=abs(tN)<0.000001 ? 0.0 : tN/tD;\\nNearP=P0+sc*u;\\nNearQ=Q0+tc*v;\\nDistance=distance(NearP,NearQ);\\n}\\nvoid To_XYZ_B74(\\nvec3 Vec3,\\nout float X,\\nout float Y,\\nout float Z)\\n{\\nX=Vec3.x;\\nY=Vec3.y;\\nZ=Vec3.z;\\n}\\nvoid Finger_Positions_B64(\\nvec3 Left_Index_Pos,\\nvec3 Right_Index_Pos,\\nvec3 Left_Index_Middle_Pos,\\nvec3 Right_Index_Middle_Pos,\\nout vec3 Left_Index,\\nout vec3 Right_Index,\\nout vec3 Left_Index_Middle,\\nout vec3 Right_Index_Middle)\\n{\\nLeft_Index= (Use_Global_Left_Index ? Global_Left_Index_Tip_Position.xyz : Left_Index_Pos);\\nRight_Index= (Use_Global_Right_Index ? Global_Right_Index_Tip_Position.xyz : Right_Index_Pos);\\nLeft_Index_Middle= (Use_Global_Left_Index ? Global_Left_Index_Middle_Position.xyz : Left_Index_Middle_Pos);\\nRight_Index_Middle= (Use_Global_Right_Index ? Global_Right_Index_Middle_Position.xyz : Right_Index_Middle_Pos);\\n}\\nvoid VaryHSV_B108(\\nvec3 HSV_In,\\nfloat Hue_Shift,\\nfloat Saturation_Shift,\\nfloat Value_Shift,\\nout vec3 HSV_Out)\\n{\\nHSV_Out=vec3(fract(HSV_In.x+Hue_Shift),clamp(HSV_In.y+Saturation_Shift,0.0,1.0),clamp(HSV_In.z+Value_Shift,0.0,1.0));\\n}\\nvoid Remap_Range_B114(\\nfloat In_Min,\\nfloat In_Max,\\nfloat Out_Min,\\nfloat Out_Max,\\nfloat In,\\nout float Out)\\n{\\nOut=mix(Out_Min,Out_Max,clamp((In-In_Min)/(In_Max-In_Min),0.0,1.0));\\n}\\nvoid To_HSV_B75(\\nvec4 Color,\\nout float Hue,\\nout float Saturation,\\nout float Value,\\nout float Alpha,\\nout vec3 HSV)\\n{\\nvec4 K=vec4(0.0,-1.0/3.0,2.0/3.0,-1.0);\\nvec4 p=Color.g<Color.b ? vec4(Color.bg,K.wz) : vec4(Color.gb,K.xy);\\nvec4 q=Color.r<p.x ? vec4(p.xyw,Color.r) : vec4(Color.r,p.yzx);\\nfloat d=q.x-min(q.w,q.y);\\nfloat e=1.0e-10;\\nHue=abs(q.z+(q.w-q.y)/(6.0*d+e));\\nSaturation=d/(q.x+e);\\nValue=q.x;\\nAlpha=Color.a;\\nHSV=vec3(Hue,Saturation,Value);\\n}\\nvoid Code_B110(\\nfloat X,\\nout float Result)\\n{\\nResult=(acos(X)/3.14159-0.5)*2.0;\\n}\\nvoid Rim_Light_B132(\\nvec3 Front,\\nvec3 Normal,\\nvec3 Incident,\\nfloat Rim_Intensity,\\nsampler2D Texture,\\nout vec4 Result)\\n{\\nvec3 R=reflect(Incident,Normal);\\nfloat RdotF=dot(R,Front);\\nfloat RdotL=sqrt(1.0-RdotF*RdotF);\\nvec2 UV=vec2(R.y*0.5+0.5,0.5);\\nvec4 Color=texture(Texture,UV);\\nResult=Color;\\n}\\nvoid main()\\n{\\nvec4 Blob_Color_Q30;\\n#if BLOB_ENABLE\\nBlob_Fragment_B30(_Blob_Texture_,vExtra2,vExtra3,Blob_Color_Q30);\\n#else\\nBlob_Color_Q30=vec4(0,0,0,0);\\n#endif\\nvec3 Incident_Q39=normalize(vPosition-cameraPosition);\\nvec3 Normalized_Q38=normalize(vNormal);\\nvec3 Normalized_Q71=normalize(vTangent);\\nvec4 Color_Q83;\\n#if DECAL_ENABLE\\nColor_Q83=texture(_Decal_,vUV);\\n#else\\nColor_Q83=vec4(0,0,0,0);\\n#endif\\nfloat X_Q90;\\nfloat Y_Q90;\\nfloat Z_Q90;\\nfloat W_Q90;\\nX_Q90=vExtra1.x;\\nY_Q90=vExtra1.y;\\nZ_Q90=vExtra1.z;\\nW_Q90=vExtra1.w;\\nvec4 Linear_Q43;\\nLinear_Q43.rgb=clamp(_Sky_Color_.rgb*_Sky_Color_.rgb,0.0,1.0);\\nLinear_Q43.a=_Sky_Color_.a;\\nvec4 Linear_Q44;\\nLinear_Q44.rgb=clamp(_Horizon_Color_.rgb*_Horizon_Color_.rgb,0.0,1.0);\\nLinear_Q44.a=_Horizon_Color_.a;\\nvec4 Linear_Q45;\\nLinear_Q45.rgb=clamp(_Ground_Color_.rgb*_Ground_Color_.rgb,0.0,1.0);\\nLinear_Q45.a=_Ground_Color_.a;\\nvec3 Left_Index_Q64;\\nvec3 Right_Index_Q64;\\nvec3 Left_Index_Middle_Q64;\\nvec3 Right_Index_Middle_Q64;\\nFinger_Positions_B64(_Left_Index_Pos_,_Right_Index_Pos_,_Left_Index_Middle_Pos_,_Right_Index_Middle_Pos_,Left_Index_Q64,Right_Index_Q64,Left_Index_Middle_Q64,Right_Index_Middle_Q64);\\nvec4 Linear_Q46;\\nLinear_Q46.rgb=clamp(_Albedo_.rgb*_Albedo_.rgb,0.0,1.0);\\nLinear_Q46.a=_Albedo_.a;\\nvec3 Normalized_Q107=normalize(vBinormal);\\nvec3 Incident_Q70=normalize(vPosition-cameraPosition);\\nvec3 New_Normal_Q79;\\nBulge_B79(_Bulge_Enabled_,Normalized_Q38,Normalized_Q71,_Bulge_Height_,vColor,_Bulge_Radius_,vBinormal,New_Normal_Q79);\\nfloat Result_Q77;\\nSSS_B77(vBinormal,New_Normal_Q79,Incident_Q39,Result_Q77);\\nvec4 Result_Q91;\\nScale_Color_B91(Color_Q83,X_Q90,Result_Q91);\\nfloat Transmit_Q122;\\nfloat Reflect_Q122;\\nFast_Fresnel_B122(_Front_Reflect_,_Edge_Reflect_,_Power_,New_Normal_Q79,Incident_Q39,Transmit_Q122,Reflect_Q122);\\nfloat Product_Q125=Y_Q90*Y_Q90;\\nvec3 NearP_Q65;\\nvec3 NearQ_Q65;\\nfloat Distance_Q65;\\nMin_Segment_Distance_B65(Left_Index_Q64,Left_Index_Middle_Q64,vPosition,cameraPosition,NearP_Q65,NearQ_Q65,Distance_Q65);\\nvec3 NearP_Q63;\\nvec3 NearQ_Q63;\\nfloat Distance_Q63;\\nMin_Segment_Distance_B65(Right_Index_Q64,Right_Index_Middle_Q64,vPosition,cameraPosition,NearP_Q63,NearQ_Q63,Distance_Q63);\\nvec3 Reflected_Q47=reflect(Incident_Q39,New_Normal_Q79);\\nvec4 Product_Q103=Linear_Q46*vec4(1,1,1,1);\\nvec4 Result_Q132;\\nRim_Light_B132(Normalized_Q107,Normalized_Q38,Incident_Q70,_Rim_Intensity_,_Rim_Texture_,Result_Q132);\\nfloat Dot_Q72=dot(Incident_Q70, Normalized_Q71);\\nfloat MaxAB_Q123=max(Reflect_Q122,Product_Q125);\\nfloat NotInShadow_Q67;\\n#if OCCLUSION_ENABLED\\nFingerOcclusion_B67(_Width_,Distance_Q65,_Fuzz_,_Min_Fuzz_,vPosition,vBinormal,NearP_Q65,_Clip_Fade_,NotInShadow_Q67);\\n#else\\nNotInShadow_Q67=1.0;\\n#endif\\nfloat NotInShadow_Q68;\\n#if OCCLUSION_ENABLED\\nFingerOcclusion_B68(_Width_,Distance_Q63,_Fuzz_,_Min_Fuzz_,vPosition,vBinormal,NearP_Q63,_Clip_Fade_,NotInShadow_Q68);\\n#else\\nNotInShadow_Q68=1.0;\\n#endif\\nvec4 Reflected_Color_Q51;\\nvec4 Indirect_Diffuse_Q51;\\n#if ENV_ENABLE\\nMapped_Environment_B51(_Reflection_Map_,_Indirect_Environment_,Reflected_Q47,Reflected_Color_Q51,Indirect_Diffuse_Q51);\\n#else\\nReflected_Color_Q51=vec4(0,0,0,1);\\nIndirect_Diffuse_Q51=vec4(0,0,0,1);\\n#endif\\nvec4 Reflected_Color_Q50;\\nvec4 Indirect_Color_Q50;\\n#if SKY_ENABLED\\nSky_Environment_B50(New_Normal_Q79,Reflected_Q47,Linear_Q43,Linear_Q44,Linear_Q45,_Horizon_Power_,Reflected_Color_Q50,Indirect_Color_Q50);\\n#else\\nReflected_Color_Q50=vec4(0,0,0,1);\\nIndirect_Color_Q50=vec4(0,0,0,1);\\n#endif\\nfloat Hue_Q75;\\nfloat Saturation_Q75;\\nfloat Value_Q75;\\nfloat Alpha_Q75;\\nvec3 HSV_Q75;\\nTo_HSV_B75(Product_Q103,Hue_Q75,Saturation_Q75,Value_Q75,Alpha_Q75,HSV_Q75);\\nfloat Hue_Q127;\\nfloat Saturation_Q127;\\nfloat Value_Q127;\\nfloat Alpha_Q127;\\nvec3 HSV_Q127;\\nTo_HSV_B75(Result_Q132,Hue_Q127,Saturation_Q127,Value_Q127,Alpha_Q127,HSV_Q127);\\nfloat Result_Q110;\\nCode_B110(Dot_Q72,Result_Q110);\\nfloat AbsA_Q76=abs(Result_Q110);\\nfloat MinAB_Q58=min(NotInShadow_Q67,NotInShadow_Q68);\\nvec4 Sum_Q48=Reflected_Color_Q51+Reflected_Color_Q50;\\nvec4 Sum_Q49=Indirect_Diffuse_Q51+Indirect_Color_Q50;\\nvec3 HSV_Out_Q126;\\nVaryHSV_B108(HSV_Q127,_Rim_Hue_Shift_,_Rim_Saturation_Shift_,_Rim_Value_Shift_,HSV_Out_Q126);\\nfloat Out_Q114;\\nRemap_Range_B114(-1.0,1.0,0.0,1.0,Result_Q110,Out_Q114);\\nfloat Product_Q106;\\nProduct_Q106=AbsA_Q76*_Hue_Shift_;\\nfloat X_Q128;\\nfloat Y_Q128;\\nfloat Z_Q128;\\nTo_XYZ_B74(HSV_Out_Q126,X_Q128,Y_Q128,Z_Q128);\\nvec2 Vec2_Q112=vec2(Out_Q114,0.5);\\nvec3 HSV_Out_Q108;\\nVaryHSV_B108(HSV_Q75,Product_Q106,_Saturation_Shift_,_Value_Shift_,HSV_Out_Q108);\\nvec4 Color_Q129;\\nFrom_HSV_B73(X_Q128,Y_Q128,Z_Q128,0.0,Color_Q129);\\nvec4 Color_Q111;\\n#if IRIDESCENCE_ENABLED\\nColor_Q111=texture(_Iridescence_Texture_,Vec2_Q112);\\n#else\\nColor_Q111=vec4(0,0,0,0);\\n#endif\\nfloat X_Q74;\\nfloat Y_Q74;\\nfloat Z_Q74;\\nTo_XYZ_B74(HSV_Out_Q108,X_Q74,Y_Q74,Z_Q74);\\nvec4 Result_Q131=_Rim_Intensity_*Color_Q129;\\nvec4 Result_Q113=_Iridescence_Intensity_*Color_Q111;\\nvec4 Color_Q73;\\nFrom_HSV_B73(X_Q74,Y_Q74,Z_Q74,0.0,Color_Q73);\\nvec4 Result_Q84=Result_Q91+(1.0-Result_Q91.a)*Color_Q73;\\nvec4 Result_Q121;\\nFragment_Main_B121(_Sun_Intensity_,_Sun_Theta_,_Sun_Phi_,New_Normal_Q79,Result_Q84,MaxAB_Q123,_Shininess_,Incident_Q39,_Horizon_Color_,_Sky_Color_,_Ground_Color_,_Indirect_Diffuse_,_Specular_,_Horizon_Power_,_Reflection_,Sum_Q48,Sum_Q49,_Sharpness_,Result_Q77,_Subsurface_,vec4(0,0,0,0),Result_Q131,Result_Q113,Result_Q121);\\nvec4 Result_Q59;\\nScale_RGB_B59(Result_Q121,MinAB_Q58,Result_Q59);\\nvec4 sRGB_Q42;\\nFastLinearTosRGB_B42(Result_Q59,sRGB_Q42);\\nvec4 Result_Q31=Blob_Color_Q30+(1.0-Blob_Color_Q30.a)*sRGB_Q42;\\nvec4 Result_Q40=Result_Q31; Result_Q40.a=1.0;\\nvec4 Out_Color=Result_Q40;\\nfloat Clip_Threshold=0.001;\\nbool To_sRGB=false;\\ngl_FragColor=Out_Color;\\n}\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var mrdlSliderBarPixelShader = { name: name, shader: shader };\n//# sourceMappingURL=mrdlSliderBar.fragment.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nvar name = \"mrdlSliderBarVertexShader\";\nvar shader = \"uniform mat4 world;\\nuniform mat4 viewProjection;\\nuniform vec3 cameraPosition;\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec2 uv;\\n#ifdef TANGENT\\nattribute vec3 tangent;\\n#else\\nconst vec3 tangent=vec3(0.);\\n#endif\\nuniform float _Radius_;\\nuniform float _Bevel_Front_;\\nuniform float _Bevel_Front_Stretch_;\\nuniform float _Bevel_Back_;\\nuniform float _Bevel_Back_Stretch_;\\nuniform float _Radius_Top_Left_;\\nuniform float _Radius_Top_Right_;\\nuniform float _Radius_Bottom_Left_;\\nuniform float _Radius_Bottom_Right_;\\nuniform bool _Bulge_Enabled_;\\nuniform float _Bulge_Height_;\\nuniform float _Bulge_Radius_;\\nuniform float _Sun_Intensity_;\\nuniform float _Sun_Theta_;\\nuniform float _Sun_Phi_;\\nuniform float _Indirect_Diffuse_;\\nuniform vec4 _Albedo_;\\nuniform float _Specular_;\\nuniform float _Shininess_;\\nuniform float _Sharpness_;\\nuniform float _Subsurface_;\\nuniform vec4 _Left_Color_;\\nuniform vec4 _Right_Color_;\\nuniform float _Reflection_;\\nuniform float _Front_Reflect_;\\nuniform float _Edge_Reflect_;\\nuniform float _Power_;\\nuniform vec4 _Sky_Color_;\\nuniform vec4 _Horizon_Color_;\\nuniform vec4 _Ground_Color_;\\nuniform float _Horizon_Power_;\\nuniform sampler2D _Reflection_Map_;\\nuniform sampler2D _Indirect_Environment_;\\nuniform float _Width_;\\nuniform float _Fuzz_;\\nuniform float _Min_Fuzz_;\\nuniform float _Clip_Fade_;\\nuniform float _Hue_Shift_;\\nuniform float _Saturation_Shift_;\\nuniform float _Value_Shift_;\\nuniform vec3 _Blob_Position_;\\nuniform float _Blob_Intensity_;\\nuniform float _Blob_Near_Size_;\\nuniform float _Blob_Far_Size_;\\nuniform float _Blob_Near_Distance_;\\nuniform float _Blob_Far_Distance_;\\nuniform float _Blob_Fade_Length_;\\nuniform float _Blob_Pulse_;\\nuniform float _Blob_Fade_;\\nuniform sampler2D _Blob_Texture_;\\nuniform vec3 _Blob_Position_2_;\\nuniform float _Blob_Near_Size_2_;\\nuniform float _Blob_Pulse_2_;\\nuniform float _Blob_Fade_2_;\\nuniform vec3 _Left_Index_Pos_;\\nuniform vec3 _Right_Index_Pos_;\\nuniform vec3 _Left_Index_Middle_Pos_;\\nuniform vec3 _Right_Index_Middle_Pos_;\\nuniform sampler2D _Decal_;\\nuniform vec2 _Decal_Scale_XY_;\\nuniform bool _Decal_Front_Only_;\\nuniform float _Rim_Intensity_;\\nuniform sampler2D _Rim_Texture_;\\nuniform float _Rim_Hue_Shift_;\\nuniform float _Rim_Saturation_Shift_;\\nuniform float _Rim_Value_Shift_;\\nuniform float _Iridescence_Intensity_;\\nuniform sampler2D _Iridescence_Texture_;\\nuniform bool Use_Global_Left_Index;\\nuniform bool Use_Global_Right_Index;\\nuniform vec4 Global_Left_Index_Tip_Position;\\nuniform vec4 Global_Right_Index_Tip_Position;\\nuniform vec4 Global_Left_Thumb_Tip_Position;\\nuniform vec4 Global_Right_Thumb_Tip_Position;\\nuniform float Global_Left_Index_Tip_Proximity;\\nuniform float Global_Right_Index_Tip_Proximity;\\nvarying vec3 vPosition;\\nvarying vec3 vNormal;\\nvarying vec2 vUV;\\nvarying vec3 vTangent;\\nvarying vec3 vBinormal;\\nvarying vec4 vColor;\\nvarying vec4 vExtra1;\\nvarying vec4 vExtra2;\\nvarying vec4 vExtra3;\\nvoid Object_To_World_Pos_B12(\\nvec3 Pos_Object,\\nout vec3 Pos_World)\\n{\\nPos_World=(world*vec4(Pos_Object,1.0)).xyz;\\n}\\nvoid Object_To_World_Normal_B32(\\nvec3 Nrm_Object,\\nout vec3 Nrm_World)\\n{\\nNrm_World=(vec4(Nrm_Object,0.0)).xyz;\\n}\\nvoid Blob_Vertex_B23(\\nvec3 Position,\\nvec3 Normal,\\nvec3 Tangent,\\nvec3 Bitangent,\\nvec3 Blob_Position,\\nfloat Intensity,\\nfloat Blob_Near_Size,\\nfloat Blob_Far_Size,\\nfloat Blob_Near_Distance,\\nfloat Blob_Far_Distance,\\nfloat Blob_Fade_Length,\\nfloat Blob_Pulse,\\nfloat Blob_Fade,\\nout vec4 Blob_Info)\\n{\\nvec3 blob= (Use_Global_Left_Index ? Global_Left_Index_Tip_Position.xyz : Blob_Position);\\nvec3 delta=blob-Position;\\nfloat dist=dot(Normal,delta);\\nfloat lerpValue=clamp((abs(dist)-Blob_Near_Distance)/(Blob_Far_Distance-Blob_Near_Distance),0.0,1.0);\\nfloat fadeValue=1.0-clamp((abs(dist)-Blob_Far_Distance)/Blob_Fade_Length,0.0,1.0);\\nfloat size=Blob_Near_Size+(Blob_Far_Size-Blob_Near_Size)*lerpValue;\\nvec2 blobXY=vec2(dot(delta,Tangent),dot(delta,Bitangent))/(0.0001+size);\\nfloat Fade=fadeValue*Intensity*Blob_Fade;\\nfloat Distance=(lerpValue*0.5+0.5)*(1.0-Blob_Pulse);\\nBlob_Info=vec4(blobXY.x,blobXY.y,Distance,Fade);\\n}\\nvoid Blob_Vertex_B24(\\nvec3 Position,\\nvec3 Normal,\\nvec3 Tangent,\\nvec3 Bitangent,\\nvec3 Blob_Position,\\nfloat Intensity,\\nfloat Blob_Near_Size,\\nfloat Blob_Far_Size,\\nfloat Blob_Near_Distance,\\nfloat Blob_Far_Distance,\\nfloat Blob_Fade_Length,\\nfloat Blob_Pulse,\\nfloat Blob_Fade,\\nout vec4 Blob_Info)\\n{\\nvec3 blob= (Use_Global_Right_Index ? Global_Right_Index_Tip_Position.xyz : Blob_Position);\\nvec3 delta=blob-Position;\\nfloat dist=dot(Normal,delta);\\nfloat lerpValue=clamp((abs(dist)-Blob_Near_Distance)/(Blob_Far_Distance-Blob_Near_Distance),0.0,1.0);\\nfloat fadeValue=1.0-clamp((abs(dist)-Blob_Far_Distance)/Blob_Fade_Length,0.0,1.0);\\nfloat size=Blob_Near_Size+(Blob_Far_Size-Blob_Near_Size)*lerpValue;\\nvec2 blobXY=vec2(dot(delta,Tangent),dot(delta,Bitangent))/(0.0001+size);\\nfloat Fade=fadeValue*Intensity*Blob_Fade;\\nfloat Distance=(lerpValue*0.5+0.5)*(1.0-Blob_Pulse);\\nBlob_Info=vec4(blobXY.x,blobXY.y,Distance,Fade);\\n}\\nvoid Move_Verts_B130(\\nfloat Anisotropy,\\nvec3 P,\\nfloat Radius,\\nfloat Bevel,\\nvec3 Normal_Object,\\nfloat ScaleZ,\\nfloat Stretch,\\nout vec3 New_P,\\nout vec2 New_UV,\\nout float Radial_Gradient,\\nout vec3 Radial_Dir,\\nout vec3 New_Normal)\\n{\\nvec2 UV=P.xy*2.0+0.5;\\nvec2 center=clamp(UV,0.0,1.0);\\nvec2 delta=UV-center;\\nfloat deltad=(length(delta)*2.0);\\nfloat f=(Bevel+(Radius-Bevel)*Stretch)/Radius;\\nfloat innerd=clamp(deltad*2.0,0.0,1.0);\\nfloat outerd=clamp(deltad*2.0-1.0,0.0,1.0);\\nfloat bevelAngle=outerd*3.14159*0.5;\\nfloat sinb=sin(bevelAngle);\\nfloat cosb=cos(bevelAngle);\\nfloat beveld=(1.0-f)*innerd+f*sinb;\\nfloat br=outerd;\\nvec2 r2=2.0*vec2(Radius/Anisotropy,Radius);\\nfloat dir=P.z<0.0001 ? 1.0 : -1.0;\\nNew_UV=center+r2*((0.5-center)+normalize(delta+vec2(0.0,0.000001))*beveld*0.5);\\nNew_P=vec3(New_UV-0.5,P.z+dir*(1.0-cosb)*Bevel*ScaleZ);\\nRadial_Gradient=clamp((deltad-0.5)*2.0,0.0,1.0);\\nRadial_Dir=vec3(delta*r2,0.0);\\nvec3 beveledNormal=cosb*Normal_Object+sinb*vec3(delta.x,delta.y,0.0);\\nNew_Normal=Normal_Object.z==0.0 ? Normal_Object : beveledNormal;\\n}\\nvoid Object_To_World_Dir_B60(\\nvec3 Dir_Object,\\nout vec3 Normal_World,\\nout vec3 Normal_World_N,\\nout float Normal_Length)\\n{\\nNormal_World=(world*vec4(Dir_Object,0.0)).xyz;\\nNormal_Length=length(Normal_World);\\nNormal_World_N=Normal_World/Normal_Length;\\n}\\nvoid To_XYZ_B78(\\nvec3 Vec3,\\nout float X,\\nout float Y,\\nout float Z)\\n{\\nX=Vec3.x;\\nY=Vec3.y;\\nZ=Vec3.z;\\n}\\nvoid Conditional_Float_B93(\\nbool Which,\\nfloat If_True,\\nfloat If_False,\\nout float Result)\\n{\\nResult=Which ? If_True : If_False;\\n}\\nvoid Object_To_World_Dir_B28(\\nvec3 Dir_Object,\\nout vec3 Binormal_World,\\nout vec3 Binormal_World_N,\\nout float Binormal_Length)\\n{\\nBinormal_World=(world*vec4(Dir_Object,0.0)).xyz;\\nBinormal_Length=length(Binormal_World);\\nBinormal_World_N=Binormal_World/Binormal_Length;\\n}\\nvoid Pick_Radius_B69(\\nfloat Radius,\\nfloat Radius_Top_Left,\\nfloat Radius_Top_Right,\\nfloat Radius_Bottom_Left,\\nfloat Radius_Bottom_Right,\\nvec3 Position,\\nout float Result)\\n{\\nbool whichY=Position.y>0.0;\\nResult=Position.x<0.0 ? (whichY ? Radius_Top_Left : Radius_Bottom_Left) : (whichY ? Radius_Top_Right : Radius_Bottom_Right);\\nResult*=Radius;\\n}\\nvoid Conditional_Float_B36(\\nbool Which,\\nfloat If_True,\\nfloat If_False,\\nout float Result)\\n{\\nResult=Which ? If_True : If_False;\\n}\\nvoid Greater_Than_B37(\\nfloat Left,\\nfloat Right,\\nout bool Not_Greater_Than,\\nout bool Greater_Than)\\n{\\nGreater_Than=Left>Right;\\nNot_Greater_Than=!Greater_Than;\\n}\\nvoid Remap_Range_B105(\\nfloat In_Min,\\nfloat In_Max,\\nfloat Out_Min,\\nfloat Out_Max,\\nfloat In,\\nout float Out)\\n{\\nOut=mix(Out_Min,Out_Max,clamp((In-In_Min)/(In_Max-In_Min),0.0,1.0));\\n}\\nvoid main()\\n{\\nvec2 XY_Q85;\\nXY_Q85=(uv-vec2(0.5,0.5))*_Decal_Scale_XY_+vec2(0.5,0.5);\\nvec3 Tangent_World_Q27;\\nvec3 Tangent_World_N_Q27;\\nfloat Tangent_Length_Q27;\\nTangent_World_Q27=(world*vec4(vec3(1,0,0),0.0)).xyz;\\nTangent_Length_Q27=length(Tangent_World_Q27);\\nTangent_World_N_Q27=Tangent_World_Q27/Tangent_Length_Q27;\\nvec3 Normal_World_Q60;\\nvec3 Normal_World_N_Q60;\\nfloat Normal_Length_Q60;\\nObject_To_World_Dir_B60(vec3(0,0,1),Normal_World_Q60,Normal_World_N_Q60,Normal_Length_Q60);\\nfloat X_Q78;\\nfloat Y_Q78;\\nfloat Z_Q78;\\nTo_XYZ_B78(position,X_Q78,Y_Q78,Z_Q78);\\nvec3 Nrm_World_Q26;\\nNrm_World_Q26=normalize((world*vec4(normal,0.0)).xyz);\\nvec3 Binormal_World_Q28;\\nvec3 Binormal_World_N_Q28;\\nfloat Binormal_Length_Q28;\\nObject_To_World_Dir_B28(vec3(0,1,0),Binormal_World_Q28,Binormal_World_N_Q28,Binormal_Length_Q28);\\nfloat Anisotropy_Q29=Tangent_Length_Q27/Binormal_Length_Q28;\\nfloat Result_Q69;\\nPick_Radius_B69(_Radius_,_Radius_Top_Left_,_Radius_Top_Right_,_Radius_Bottom_Left_,_Radius_Bottom_Right_,position,Result_Q69);\\nfloat Anisotropy_Q53=Binormal_Length_Q28/Normal_Length_Q60;\\nbool Not_Greater_Than_Q37;\\nbool Greater_Than_Q37;\\nGreater_Than_B37(Z_Q78,0.0,Not_Greater_Than_Q37,Greater_Than_Q37);\\nvec4 Linear_Q101;\\nLinear_Q101.rgb=clamp(_Left_Color_.rgb*_Left_Color_.rgb,0.0,1.0);\\nLinear_Q101.a=_Left_Color_.a;\\nvec4 Linear_Q102;\\nLinear_Q102.rgb=clamp(_Right_Color_.rgb*_Right_Color_.rgb,0.0,1.0);\\nLinear_Q102.a=_Right_Color_.a;\\nvec3 Difference_Q61=vec3(0,0,0)-Normal_World_N_Q60;\\nvec4 Out_Color_Q34=vec4(X_Q78,Y_Q78,Z_Q78,1);\\nfloat Result_Q36;\\nConditional_Float_B36(Greater_Than_Q37,_Bevel_Back_,_Bevel_Front_,Result_Q36);\\nfloat Result_Q94;\\nConditional_Float_B36(Greater_Than_Q37,_Bevel_Back_Stretch_,_Bevel_Front_Stretch_,Result_Q94);\\nvec3 New_P_Q130;\\nvec2 New_UV_Q130;\\nfloat Radial_Gradient_Q130;\\nvec3 Radial_Dir_Q130;\\nvec3 New_Normal_Q130;\\nMove_Verts_B130(Anisotropy_Q29,position,Result_Q69,Result_Q36,normal,Anisotropy_Q53,Result_Q94,New_P_Q130,New_UV_Q130,Radial_Gradient_Q130,Radial_Dir_Q130,New_Normal_Q130);\\nfloat X_Q98;\\nfloat Y_Q98;\\nX_Q98=New_UV_Q130.x;\\nY_Q98=New_UV_Q130.y;\\nvec3 Pos_World_Q12;\\nObject_To_World_Pos_B12(New_P_Q130,Pos_World_Q12);\\nvec3 Nrm_World_Q32;\\nObject_To_World_Normal_B32(New_Normal_Q130,Nrm_World_Q32);\\nvec4 Blob_Info_Q23;\\n#if BLOB_ENABLE\\nBlob_Vertex_B23(Pos_World_Q12,Nrm_World_Q26,Tangent_World_N_Q27,Binormal_World_N_Q28,_Blob_Position_,_Blob_Intensity_,_Blob_Near_Size_,_Blob_Far_Size_,_Blob_Near_Distance_,_Blob_Far_Distance_,_Blob_Fade_Length_,_Blob_Pulse_,_Blob_Fade_,Blob_Info_Q23);\\n#else\\nBlob_Info_Q23=vec4(0,0,0,0);\\n#endif\\nvec4 Blob_Info_Q24;\\n#if BLOB_ENABLE_2\\nBlob_Vertex_B24(Pos_World_Q12,Nrm_World_Q26,Tangent_World_N_Q27,Binormal_World_N_Q28,_Blob_Position_2_,_Blob_Intensity_,_Blob_Near_Size_2_,_Blob_Far_Size_,_Blob_Near_Distance_,_Blob_Far_Distance_,_Blob_Fade_Length_,_Blob_Pulse_2_,_Blob_Fade_2_,Blob_Info_Q24);\\n#else\\nBlob_Info_Q24=vec4(0,0,0,0);\\n#endif\\nfloat Out_Q105;\\nRemap_Range_B105(0.0,1.0,0.0,1.0,X_Q98,Out_Q105);\\nfloat X_Q86;\\nfloat Y_Q86;\\nfloat Z_Q86;\\nTo_XYZ_B78(Nrm_World_Q32,X_Q86,Y_Q86,Z_Q86);\\nvec4 Color_At_T_Q97=mix(Linear_Q101,Linear_Q102,Out_Q105);\\nfloat Minus_F_Q87=-Z_Q86;\\nfloat R_Q99;\\nfloat G_Q99;\\nfloat B_Q99;\\nfloat A_Q99;\\nR_Q99=Color_At_T_Q97.r; G_Q99=Color_At_T_Q97.g; B_Q99=Color_At_T_Q97.b; A_Q99=Color_At_T_Q97.a;\\nfloat ClampF_Q88=clamp(0.0,Minus_F_Q87,1.0);\\nfloat Result_Q93;\\nConditional_Float_B93(_Decal_Front_Only_,ClampF_Q88,1.0,Result_Q93);\\nvec4 Vec4_Q89=vec4(Result_Q93,Radial_Gradient_Q130,G_Q99,B_Q99);\\nvec3 Position=Pos_World_Q12;\\nvec3 Normal=Nrm_World_Q32;\\nvec2 UV=XY_Q85;\\nvec3 Tangent=Tangent_World_N_Q27;\\nvec3 Binormal=Difference_Q61;\\nvec4 Color=Out_Color_Q34;\\nvec4 Extra1=Vec4_Q89;\\nvec4 Extra2=Blob_Info_Q23;\\nvec4 Extra3=Blob_Info_Q24;\\ngl_Position=viewProjection*vec4(Position,1);\\nvPosition=Position;\\nvNormal=Normal;\\nvUV=UV;\\nvTangent=Tangent;\\nvBinormal=Binormal;\\nvColor=Color;\\nvExtra1=Extra1;\\nvExtra2=Extra2;\\nvExtra3=Extra3;\\n}\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var mrdlSliderBarVertexShader = { name: name, shader: shader };\n//# sourceMappingURL=mrdlSliderBar.vertex.js.map","import { __decorate, __extends } from \"tslib\";\nimport { SerializationHelper, serialize } from \"@babylonjs/core/Misc/decorators.js\";\nimport { Vector2, Vector3, Vector4 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { Texture } from \"@babylonjs/core/Materials/Textures/texture.js\";\nimport { MaterialDefines } from \"@babylonjs/core/Materials/materialDefines.js\";\nimport { MaterialHelper } from \"@babylonjs/core/Materials/materialHelper.js\";\nimport { PushMaterial } from \"@babylonjs/core/Materials/pushMaterial.js\";\nimport { VertexBuffer } from \"@babylonjs/core/Buffers/buffer.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { Color4 } from \"@babylonjs/core/Maths/math.color.js\";\nimport { EffectFallbacks } from \"@babylonjs/core/Materials/effectFallbacks.js\";\nimport { Constants } from \"@babylonjs/core/Engines/constants.js\";\nimport \"./shaders/mrdlSliderBar.fragment.js\";\nimport \"./shaders/mrdlSliderBar.vertex.js\";\n/** @hidden */\nvar MRDLSliderBarMaterialDefines = /** @class */ (function (_super) {\n    __extends(MRDLSliderBarMaterialDefines, _super);\n    function MRDLSliderBarMaterialDefines() {\n        var _this = _super.call(this) || this;\n        /*\n            \"SKY_ENABLED\", \"BLOB_ENABLE_2\", \"IRIDESCENCE_ENABLED\"\n        */\n        _this.SKY_ENABLED = true;\n        _this.BLOB_ENABLE_2 = true;\n        _this.IRIDESCENCE_ENABLED = true;\n        _this._needNormals = true;\n        _this._needUVs = true;\n        _this.rebuild();\n        return _this;\n    }\n    return MRDLSliderBarMaterialDefines;\n}(MaterialDefines));\n/**\n * Class used to render Slider Bar material with MRDL\n */\nvar MRDLSliderBarMaterial = /** @class */ (function (_super) {\n    __extends(MRDLSliderBarMaterial, _super);\n    function MRDLSliderBarMaterial(name, scene) {\n        var _this = _super.call(this, name, scene) || this;\n        /**\n         * Gets or sets the corner Radius on the slider bar.\n         */\n        _this.radius = 0.6;\n        /**\n         * Gets or sets the Bevel Front on the slider bar.\n         */\n        _this.bevelFront = 0.6;\n        /**\n         * Gets or sets the Bevel Front Stretch on the slider bar.\n         */\n        _this.bevelFrontStretch = 0.077;\n        /**\n         * Gets or sets the Bevel Back on the slider bar.\n         */\n        _this.bevelBack = 0;\n        /**\n         * Gets or sets the Bevel Back Stretch on the slider bar.\n         */\n        _this.bevelBackStretch = 0;\n        /**\n         * Gets or sets the top left Radii Multiplier.\n         */\n        _this.radiusTopLeft = 1.0;\n        /**\n         * Gets or sets the top left Radii Multiplier.\n         */\n        _this.radiusTopRight = 1.0;\n        /**\n         * Gets or sets the top left Radii Multiplier.\n         */\n        _this.radiusBottomLeft = 1.0;\n        /**\n         * Gets or sets the top left Radii Multiplier.\n         */\n        _this.radiusBottomRight = 1.0;\n        /**\n         * Gets or sets whether Bulge is enabled.\n         * Default is false.\n         */\n        _this.bulgeEnabled = false;\n        /**\n         * Gets or sets the Bulge Height.\n         */\n        _this.bulgeHeight = -0.323;\n        /**\n         * Gets or sets the Bulge Radius.\n         */\n        _this.bulgeRadius = 0.73;\n        /**\n         * Gets or sets the Sun Intensity.\n         */\n        _this.sunIntensity = 1.102;\n        /**\n         * Gets or sets the Sun Theta.\n         */\n        _this.sunTheta = 0.76;\n        /**\n         * Gets or sets the Sun Phi.\n         */\n        _this.sunPhi = 0.526;\n        /**\n         * Gets or sets the Indirect Diffuse.\n         */\n        _this.indirectDiffuse = 0.658;\n        /**\n         * Gets or sets the base albedo.\n         */\n        _this.albedo = new Color4(0.0117647, 0.505882, 0.996078, 1);\n        /**\n         * Gets or sets the Specular value.\n         */\n        _this.specular = 0;\n        /**\n         * Gets or sets the Shininess value.\n         */\n        _this.shininess = 10;\n        /**\n         * Gets or sets the Sharpness value.\n         */\n        _this.sharpness = 0;\n        /**\n         * Gets or sets the Subsurface value.\n         */\n        _this.subsurface = 0;\n        /**\n         * Gets or sets the left gradient color.\n         */\n        _this.leftGradientColor = new Color4(0.0117647, 0.505882, 0.996078, 1);\n        /**\n         * Gets or sets the right gradient color.\n         */\n        _this.rightGradientColor = new Color4(0.0117647, 0.505882, 0.996078, 1);\n        /**\n         * Gets or sets the reflection value.\n         */\n        _this.reflection = 0.749;\n        /**\n         * Gets or sets the front reflect value.\n         */\n        _this.frontReflect = 0;\n        /**\n         * Gets or sets the edge reflect value.\n         */\n        _this.edgeReflect = 0.09;\n        /**\n         * Gets or sets the power value.\n         */\n        _this.power = 8.13;\n        /**\n         * Gets or sets the sky color.\n         */\n        _this.skyColor = new Color4(0.0117647, 0.964706, 0.996078, 1);\n        /**\n         * Gets or sets the horizon color.\n         */\n        _this.horizonColor = new Color4(0.0117647, 0.333333, 0.996078, 1);\n        /**\n         * Gets or sets the ground color.\n         */\n        _this.groundColor = new Color4(0, 0.254902, 0.996078, 1);\n        /**\n         * Gets or sets the horizon power value.\n         */\n        _this.horizonPower = 1;\n        /**\n         * Gets or sets the finger occlusion width value.\n         */\n        _this.width = 0.02;\n        /**\n         * Gets or sets the finger occlusion fuzz value.\n         */\n        _this.fuzz = 0.5;\n        /**\n         * Gets or sets the minimum finger occlusion fuzz value.\n         */\n        _this.minFuzz = 0.001;\n        /**\n         * Gets or sets the finger occlusion clip fade value.\n         */\n        _this.clipFade = 0.01;\n        /**\n         * Gets or sets the hue shift value.\n         */\n        _this.hueShift = 0;\n        /**\n         * Gets or sets the saturation shift value.\n         */\n        _this.saturationShift = 0;\n        /**\n         * Gets or sets the value shift.\n         */\n        _this.valueShift = 0;\n        /**\n         * Gets or sets the position of the hover glow effect.\n         */\n        _this.blobPosition = new Vector3(0, 0, 0.1);\n        /**\n         * Gets or sets the intensity of the hover glow effect.\n         */\n        _this.blobIntensity = 0.5;\n        /**\n         * Gets or sets the near size of the hover glow effect.\n         */\n        _this.blobNearSize = 0.01;\n        /**\n         * Gets or sets the far size of the hover glow effect.\n         */\n        _this.blobFarSize = 0.03;\n        /**\n         * Gets or sets the distance considered \"near\" to the mesh, which controls the size of the hover glow effect (see blobNearSize).\n         */\n        _this.blobNearDistance = 0;\n        /**\n         * Gets or sets the distance considered \"far\" from the mesh, which controls the size of the hover glow effect (see blobFarSize).\n         */\n        _this.blobFarDistance = 0.08;\n        /**\n         * Gets or sets the length of the hover glow effect fade.\n         */\n        _this.blobFadeLength = 0.576;\n        /**\n         * Gets or sets the progress of the hover glow effect selection animation corresponding to the left pointer (0.0 - 1.0).\n         */\n        _this.blobPulse = 0;\n        /**\n         * Gets or sets the opacity of the hover glow effect corresponding to the left pointer (0.0 - 1.0). Default is 0.\n         */\n        _this.blobFade = 1;\n        /**\n         * Gets or sets the position of the hover glow effect.\n         */\n        _this.blobPosition2 = new Vector3(0.2, 0, 0.1);\n        /**\n         * Gets or sets the size of the hover glow effect when the right pointer is considered \"near\" to the mesh (see blobNearDistance).\n         */\n        _this.blobNearSize2 = 0.01;\n        /**\n         * Gets or sets the progress of the hover glow effect selection animation corresponding to the right pointer (0.0 - 1.0).\n         */\n        _this.blobPulse2 = 0;\n        /**\n         * Gets or sets the opacity of the hover glow effect corresponding to the right pointer (0.0 - 1.0). Default is 1.\n         */\n        _this.blobFade2 = 1;\n        /**\n         * Gets or sets the texture of the hover glow effect.\n         */\n        _this.blobTexture = new Texture(\"\", _this.getScene());\n        /**\n         * Gets or sets the finger position for left index.\n         */\n        _this.leftIndexPosition = new Vector3(0, 0, 1);\n        /**\n         * Gets or sets the finger position for right index.\n         */\n        _this.rightIndexPosition = new Vector3(-1, -1, -1);\n        /**\n         * Gets or sets the finger position for left index middle position.\n         */\n        _this.leftIndexMiddlePosition = new Vector3(0, 0, 0);\n        /**\n         * Gets or sets the finger position for right index middle position.\n         */\n        _this.rightIndexMiddlePosition = new Vector3(0, 0, 0);\n        /**\n         * Gets or sets the Decal Scle for XY.\n         */\n        _this.decalScaleXY = new Vector2(1.5, 1.5);\n        /**\n         * Gets or sets decalFrontOnly\n         * Default is true\n         */\n        _this.decalFrontOnly = true;\n        /**\n         * Gets or sets the Rim Light intensity.\n         */\n        _this.rimIntensity = 0.287;\n        /**\n         * Gets or sets the Rim Light hue shift value.\n         */\n        _this.rimHueShift = 0;\n        /**\n         * Gets or sets the Rim Light saturation shift value.\n         */\n        _this.rimSaturationShift = 0;\n        /**\n         * Gets or sets the Rim Light value shift.\n         */\n        _this.rimValueShift = -1;\n        /**\n         * Gets or sets the intensity of the iridescence effect.\n         */\n        _this.iridescenceIntensity = 0;\n        /**\n         * @hidden\n         */\n        _this.useGlobalLeftIndex = 1.0;\n        /**\n         * @hidden\n         */\n        _this.useGlobalRightIndex = 1.0;\n        /**\n         * @hidden\n         */\n        _this.globalLeftIndexTipProximity = 0.0;\n        /**\n         * @hidden\n         */\n        _this.globalRightIndexTipProximity = 0.0;\n        /**\n         * @hidden\n         */\n        _this.globalLeftIndexTipPosition = new Vector4(0.5, 0.0, -0.55, 1.0);\n        /**\n         * @hidden\n         */\n        _this.globaRightIndexTipPosition = new Vector4(0.0, 0.0, 0.0, 1.0);\n        /**\n         * @hidden\n         */\n        _this.globalLeftThumbTipPosition = new Vector4(0.5, 0.0, -0.55, 1.0);\n        /**\n         * @hidden\n         */\n        _this.globalRightThumbTipPosition = new Vector4(0.0, 0.0, 0.0, 1.0);\n        /**\n         * @hidden\n         */\n        _this.globalLeftIndexMiddlePosition = new Vector4(0.5, 0.0, -0.55, 1.0);\n        /**\n         * @hidden\n         */\n        _this.globalRightIndexMiddlePosition = new Vector4(0.0, 0.0, 0.0, 1.0);\n        _this.alphaMode = Constants.ALPHA_DISABLE;\n        _this.backFaceCulling = false;\n        _this._blueGradientTexture = new Texture(MRDLSliderBarMaterial.BLUE_GRADIENT_TEXTURE_URL, _this.getScene(), true, false, Texture.NEAREST_SAMPLINGMODE);\n        return _this;\n    }\n    MRDLSliderBarMaterial.prototype.needAlphaBlending = function () {\n        return false;\n    };\n    MRDLSliderBarMaterial.prototype.needAlphaTesting = function () {\n        return false;\n    };\n    MRDLSliderBarMaterial.prototype.getAlphaTestTexture = function () {\n        return null;\n    };\n    // Methods\n    MRDLSliderBarMaterial.prototype.isReadyForSubMesh = function (mesh, subMesh) {\n        if (this.isFrozen) {\n            if (subMesh.effect && subMesh.effect._wasPreviouslyReady) {\n                return true;\n            }\n        }\n        if (!subMesh.materialDefines) {\n            subMesh.materialDefines = new MRDLSliderBarMaterialDefines();\n        }\n        var defines = subMesh.materialDefines;\n        var scene = this.getScene();\n        if (this._isReadyForSubMesh(subMesh)) {\n            return true;\n        }\n        var engine = scene.getEngine();\n        // Attribs\n        MaterialHelper.PrepareDefinesForAttributes(mesh, defines, false, false);\n        // Get correct effect\n        if (defines.isDirty) {\n            defines.markAsProcessed();\n            scene.resetCachedMaterial();\n            // Fallbacks\n            var fallbacks = new EffectFallbacks();\n            if (defines.FOG) {\n                fallbacks.addFallback(1, \"FOG\");\n            }\n            MaterialHelper.HandleFallbacksForShadows(defines, fallbacks);\n            defines.IMAGEPROCESSINGPOSTPROCESS = scene.imageProcessingConfiguration.applyByPostProcess;\n            //Attributes\n            var attribs = [VertexBuffer.PositionKind];\n            if (defines.NORMAL) {\n                attribs.push(VertexBuffer.NormalKind);\n            }\n            if (defines.UV1) {\n                attribs.push(VertexBuffer.UVKind);\n            }\n            if (defines.UV2) {\n                attribs.push(VertexBuffer.UV2Kind);\n            }\n            if (defines.VERTEXCOLOR) {\n                attribs.push(VertexBuffer.ColorKind);\n            }\n            if (defines.TANGENT) {\n                attribs.push(VertexBuffer.TangentKind);\n            }\n            MaterialHelper.PrepareAttributesForInstances(attribs, defines);\n            // Legacy browser patch\n            var shaderName = \"mrdlSliderBar\";\n            var join = defines.toString();\n            var uniforms = [\n                \"world\",\n                \"viewProjection\",\n                \"cameraPosition\",\n                \"_Radius_\",\n                \"_Bevel_Front_\",\n                \"_Bevel_Front_Stretch_\",\n                \"_Bevel_Back_\",\n                \"_Bevel_Back_Stretch_\",\n                \"_Radius_Top_Left_\",\n                \"_Radius_Top_Right_\",\n                \"_Radius_Bottom_Left_\",\n                \"_Radius_Bottom_Right_\",\n                \"_Bulge_Enabled_\",\n                \"_Bulge_Height_\",\n                \"_Bulge_Radius_\",\n                \"_Sun_Intensity_\",\n                \"_Sun_Theta_\",\n                \"_Sun_Phi_\",\n                \"_Indirect_Diffuse_\",\n                \"_Albedo_\",\n                \"_Specular_\",\n                \"_Shininess_\",\n                \"_Sharpness_\",\n                \"_Subsurface_\",\n                \"_Left_Color_\",\n                \"_Right_Color_\",\n                \"_Reflection_\",\n                \"_Front_Reflect_\",\n                \"_Edge_Reflect_\",\n                \"_Power_\",\n                \"_Sky_Color_\",\n                \"_Horizon_Color_\",\n                \"_Ground_Color_\",\n                \"_Horizon_Power_\",\n                \"_Reflection_Map_\",\n                \"_Indirect_Environment_\",\n                \"_Width_\",\n                \"_Fuzz_\",\n                \"_Min_Fuzz_\",\n                \"_Clip_Fade_\",\n                \"_Hue_Shift_\",\n                \"_Saturation_Shift_\",\n                \"_Value_Shift_\",\n                \"_Blob_Position_\",\n                \"_Blob_Intensity_\",\n                \"_Blob_Near_Size_\",\n                \"_Blob_Far_Size_\",\n                \"_Blob_Near_Distance_\",\n                \"_Blob_Far_Distance_\",\n                \"_Blob_Fade_Length_\",\n                \"_Blob_Pulse_\",\n                \"_Blob_Fade_\",\n                \"_Blob_Texture_\",\n                \"_Blob_Position_2_\",\n                \"_Blob_Near_Size_2_\",\n                \"_Blob_Pulse_2_\",\n                \"_Blob_Fade_2_\",\n                \"_Left_Index_Pos_\",\n                \"_Right_Index_Pos_\",\n                \"_Left_Index_Middle_Pos_\",\n                \"_Right_Index_Middle_Pos_\",\n                \"_Decal_\",\n                \"_Decal_Scale_XY_\",\n                \"_Decal_Front_Only_\",\n                \"_Rim_Intensity_\",\n                \"_Rim_Texture_\",\n                \"_Rim_Hue_Shift_\",\n                \"_Rim_Saturation_Shift_\",\n                \"_Rim_Value_Shift_\",\n                \"_Iridescence_Intensity_\",\n                \"_Iridescence_Texture_\",\n                \"Use_Global_Left_Index\",\n                \"Use_Global_Right_Index\",\n                \"Global_Left_Index_Tip_Position\",\n                \"Global_Right_Index_Tip_Position\",\n                \"Global_Left_Thumb_Tip_Position\",\n                \"Global_Right_Thumb_Tip_Position\",\n                \"Global_Left_Index_Middle_Position;\",\n                \"Global_Right_Index_Middle_Position\",\n                \"Global_Left_Index_Tip_Proximity\",\n                \"Global_Right_Index_Tip_Proximity\",\n            ];\n            var samplers = [\"_Rim_Texture_\", \"_Iridescence_Texture_\"];\n            var uniformBuffers = new Array();\n            MaterialHelper.PrepareUniformsAndSamplersList({\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: defines,\n                maxSimultaneousLights: 4,\n            });\n            subMesh.setEffect(scene.getEngine().createEffect(shaderName, {\n                attributes: attribs,\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: join,\n                fallbacks: fallbacks,\n                onCompiled: this.onCompiled,\n                onError: this.onError,\n                indexParameters: { maxSimultaneousLights: 4 },\n            }, engine), defines, this._materialContext);\n        }\n        if (!subMesh.effect || !subMesh.effect.isReady()) {\n            return false;\n        }\n        defines._renderId = scene.getRenderId();\n        subMesh.effect._wasPreviouslyReady = true;\n        return true;\n    };\n    MRDLSliderBarMaterial.prototype.bindForSubMesh = function (world, mesh, subMesh) {\n        var defines = subMesh.materialDefines;\n        if (!defines) {\n            return;\n        }\n        var effect = subMesh.effect;\n        if (!effect) {\n            return;\n        }\n        this._activeEffect = effect;\n        // Matrices\n        this.bindOnlyWorldMatrix(world);\n        this._activeEffect.setMatrix(\"viewProjection\", this.getScene().getTransformMatrix());\n        this._activeEffect.setVector3(\"cameraPosition\", this.getScene().activeCamera.position);\n        // \"Round Rect\"\n        this._activeEffect.setFloat(\"_Radius_\", this.radius);\n        this._activeEffect.setFloat(\"_Bevel_Front_\", this.bevelFront);\n        this._activeEffect.setFloat(\"_Bevel_Front_Stretch_\", this.bevelFrontStretch);\n        this._activeEffect.setFloat(\"_Bevel_Back_\", this.bevelBack);\n        this._activeEffect.setFloat(\"_Bevel_Back_Stretch_\", this.bevelBackStretch);\n        // \"Radii Multipliers\"\n        this._activeEffect.setFloat(\"_Radius_Top_Left_\", this.radiusTopLeft);\n        this._activeEffect.setFloat(\"_Radius_Top_Right_\", this.radiusTopRight);\n        this._activeEffect.setFloat(\"_Radius_Bottom_Left_\", this.radiusBottomLeft);\n        this._activeEffect.setFloat(\"_Radius_Bottom_Right_\", this.radiusBottomRight);\n        // \"Bulge\"\n        this._activeEffect.setFloat(\"_Bulge_Enabled_\", this.bulgeEnabled ? 1.0 : 0.0);\n        this._activeEffect.setFloat(\"_Bulge_Height_\", this.bulgeHeight);\n        this._activeEffect.setFloat(\"_Bulge_Radius_\", this.bulgeRadius);\n        // \"Sun\"\n        this._activeEffect.setFloat(\"_Sun_Intensity_\", this.sunIntensity);\n        this._activeEffect.setFloat(\"_Sun_Theta_\", this.sunTheta);\n        this._activeEffect.setFloat(\"_Sun_Phi_\", this.sunPhi);\n        this._activeEffect.setFloat(\"_Indirect_Diffuse_\", this.indirectDiffuse);\n        // \"Diffuse And Specular\"\n        this._activeEffect.setDirectColor4(\"_Albedo_\", this.albedo);\n        this._activeEffect.setFloat(\"_Specular_\", this.specular);\n        this._activeEffect.setFloat(\"_Shininess_\", this.shininess);\n        this._activeEffect.setFloat(\"_Sharpness_\", this.sharpness);\n        this._activeEffect.setFloat(\"_Subsurface_\", this.subsurface);\n        // \"Gradient\"\n        this._activeEffect.setDirectColor4(\"_Left_Color_\", this.leftGradientColor);\n        this._activeEffect.setDirectColor4(\"_Right_Color_\", this.rightGradientColor);\n        // \"Reflection\"\n        this._activeEffect.setFloat(\"_Reflection_\", this.reflection);\n        this._activeEffect.setFloat(\"_Front_Reflect_\", this.frontReflect);\n        this._activeEffect.setFloat(\"_Edge_Reflect_\", this.edgeReflect);\n        this._activeEffect.setFloat(\"_Power_\", this.power);\n        // \"Sky Environment\"\n        //define SKY_ENABLED true;\n        this._activeEffect.setDirectColor4(\"_Sky_Color_\", this.skyColor);\n        this._activeEffect.setDirectColor4(\"_Horizon_Color_\", this.horizonColor);\n        this._activeEffect.setDirectColor4(\"_Ground_Color_\", this.groundColor);\n        this._activeEffect.setFloat(\"_Horizon_Power_\", this.horizonPower);\n        // \"Mapped Environment\"\n        //define ENV_ENABLE false;\n        this._activeEffect.setTexture(\"_Reflection_Map_\", new Texture(\"\", this.getScene()));\n        this._activeEffect.setTexture(\"_Indirect_Environment_\", new Texture(\"\", this.getScene()));\n        // \"FingerOcclusion\"\n        //define OCCLUSION_ENABLED false;\n        this._activeEffect.setFloat(\"_Width_\", this.width);\n        this._activeEffect.setFloat(\"_Fuzz_\", this.fuzz);\n        this._activeEffect.setFloat(\"_Min_Fuzz_\", this.minFuzz);\n        this._activeEffect.setFloat(\"_Clip_Fade_\", this.clipFade);\n        // \"View Based Color Shift\"\n        this._activeEffect.setFloat(\"_Hue_Shift_\", this.hueShift);\n        this._activeEffect.setFloat(\"_Saturation_Shift_\", this.saturationShift);\n        this._activeEffect.setFloat(\"_Value_Shift_\", this.valueShift);\n        // \"Blob\"\n        //define BLOB_ENABLE false;\n        this._activeEffect.setVector3(\"_Blob_Position_\", this.blobPosition);\n        this._activeEffect.setFloat(\"_Blob_Intensity_\", this.blobIntensity);\n        this._activeEffect.setFloat(\"_Blob_Near_Size_\", this.blobNearSize);\n        this._activeEffect.setFloat(\"_Blob_Far_Size_\", this.blobFarSize);\n        this._activeEffect.setFloat(\"_Blob_Near_Distance_\", this.blobNearDistance);\n        this._activeEffect.setFloat(\"_Blob_Far_Distance_\", this.blobFarDistance);\n        this._activeEffect.setFloat(\"_Blob_Fade_Length_\", this.blobFadeLength);\n        this._activeEffect.setFloat(\"_Blob_Pulse_\", this.blobPulse);\n        this._activeEffect.setFloat(\"_Blob_Fade_\", this.blobFade);\n        // \"Blob Texture\"\n        this._activeEffect.setTexture(\"_Blob_Texture_\", this.blobTexture);\n        // \"Blob 2\"\n        //define BLOB_ENABLE_2 true;\n        this._activeEffect.setVector3(\"_Blob_Position_2_\", this.blobPosition2);\n        this._activeEffect.setFloat(\"_Blob_Near_Size_2_\", this.blobNearSize2);\n        this._activeEffect.setFloat(\"_Blob_Pulse_2_\", this.blobPulse2);\n        this._activeEffect.setFloat(\"_Blob_Fade_2_\", this.blobFade2);\n        // \"Finger Positions\"\n        this._activeEffect.setVector3(\"_Left_Index_Pos_\", this.leftIndexPosition);\n        this._activeEffect.setVector3(\"_Right_Index_Pos_\", this.rightIndexPosition);\n        this._activeEffect.setVector3(\"_Left_Index_Middle_Pos_\", this.leftIndexMiddlePosition);\n        this._activeEffect.setVector3(\"_Right_Index_Middle_Pos_\", this.rightIndexMiddlePosition);\n        // \"Decal Texture\"\n        //define DECAL_ENABLE false;\n        this._activeEffect.setTexture(\"_Decal_\", new Texture(\"\", this.getScene()));\n        this._activeEffect.setVector2(\"_Decal_Scale_XY_\", this.decalScaleXY);\n        this._activeEffect.setFloat(\"_Decal_Front_Only_\", this.decalFrontOnly ? 1.0 : 0.0);\n        // \"Rim Light\"\n        this._activeEffect.setFloat(\"_Rim_Intensity_\", this.rimIntensity);\n        this._activeEffect.setTexture(\"_Rim_Texture_\", this._blueGradientTexture);\n        this._activeEffect.setFloat(\"_Rim_Hue_Shift_\", this.rimHueShift);\n        this._activeEffect.setFloat(\"_Rim_Saturation_Shift_\", this.rimSaturationShift);\n        this._activeEffect.setFloat(\"_Rim_Value_Shift_\", this.rimValueShift);\n        // \"Iridescence\"\n        //define IRIDESCENCE_ENABLED true;\n        this._activeEffect.setFloat(\"_Iridescence_Intensity_\", this.iridescenceIntensity);\n        this._activeEffect.setTexture(\"_Iridescence_Texture_\", this._blueGradientTexture);\n        // Global inputs\n        this._activeEffect.setFloat(\"Use_Global_Left_Index\", this.useGlobalLeftIndex);\n        this._activeEffect.setFloat(\"Use_Global_Right_Index\", this.useGlobalRightIndex);\n        this._activeEffect.setVector4(\"Global_Left_Index_Tip_Position\", this.globalLeftIndexTipPosition);\n        this._activeEffect.setVector4(\"Global_Right_Index_Tip_Position\", this.globaRightIndexTipPosition);\n        this._activeEffect.setVector4(\"Global_Left_Thumb_Tip_Position\", this.globalLeftThumbTipPosition);\n        this._activeEffect.setVector4(\"Global_Right_Thumb_Tip_Position\", this.globalRightThumbTipPosition);\n        this._activeEffect.setVector4(\"Global_Left_Index_Middle_Position\", this.globalLeftIndexMiddlePosition);\n        this._activeEffect.setVector4(\"Global_Right_Index_Middle_Position\", this.globalRightIndexMiddlePosition);\n        this._activeEffect.setFloat(\"Global_Left_Index_Tip_Proximity\", this.globalLeftIndexTipProximity);\n        this._activeEffect.setFloat(\"Global_Right_Index_Tip_Proximity\", this.globalRightIndexTipProximity);\n        this._afterBind(mesh, this._activeEffect);\n    };\n    /**\n     * Get the list of animatables in the material.\n     * @returns the list of animatables object used in the material\n     */\n    MRDLSliderBarMaterial.prototype.getAnimatables = function () {\n        return [];\n    };\n    MRDLSliderBarMaterial.prototype.dispose = function (forceDisposeEffect) {\n        _super.prototype.dispose.call(this, forceDisposeEffect);\n    };\n    MRDLSliderBarMaterial.prototype.clone = function (name) {\n        var _this = this;\n        return SerializationHelper.Clone(function () { return new MRDLSliderBarMaterial(name, _this.getScene()); }, this);\n    };\n    MRDLSliderBarMaterial.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.customType = \"BABYLON.MRDLSliderBarMaterial\";\n        return serializationObject;\n    };\n    MRDLSliderBarMaterial.prototype.getClassName = function () {\n        return \"MRDLSliderBarMaterial\";\n    };\n    // Statics\n    MRDLSliderBarMaterial.Parse = function (source, scene, rootUrl) {\n        return SerializationHelper.Parse(function () { return new MRDLSliderBarMaterial(source.name, scene); }, source, scene, rootUrl);\n    };\n    /**\n     * URL pointing to the texture used to define the coloring for the Iridescent Map effect.\n     */\n    MRDLSliderBarMaterial.BLUE_GRADIENT_TEXTURE_URL = \"https://assets.babylonjs.com/meshes/MRTK/MRDL/mrtk-mrdl-blue-gradient.png\";\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"radius\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"bevelFront\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"bevelFrontStretch\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"bevelBack\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"bevelBackStretch\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"radiusTopLeft\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"radiusTopRight\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"radiusBottomLeft\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"radiusBottomRight\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"bulgeEnabled\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"bulgeHeight\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"bulgeRadius\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"sunIntensity\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"sunTheta\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"sunPhi\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"indirectDiffuse\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"albedo\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"specular\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"shininess\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"sharpness\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"subsurface\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"leftGradientColor\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"rightGradientColor\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"reflection\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"frontReflect\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"edgeReflect\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"power\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"skyColor\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"horizonColor\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"groundColor\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"horizonPower\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"width\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"fuzz\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"minFuzz\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"clipFade\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"hueShift\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"saturationShift\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"valueShift\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"blobPosition\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"blobIntensity\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"blobNearSize\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"blobFarSize\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"blobNearDistance\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"blobFarDistance\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"blobFadeLength\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"blobPulse\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"blobFade\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"blobPosition2\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"blobNearSize2\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"blobPulse2\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"blobFade2\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"blobTexture\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"leftIndexPosition\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"rightIndexPosition\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"leftIndexMiddlePosition\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"rightIndexMiddlePosition\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"decalScaleXY\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"decalFrontOnly\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"rimIntensity\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"rimHueShift\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"rimSaturationShift\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"rimValueShift\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderBarMaterial.prototype, \"iridescenceIntensity\", void 0);\n    return MRDLSliderBarMaterial;\n}(PushMaterial));\nexport { MRDLSliderBarMaterial };\nRegisterClass(\"BABYLON.GUI.MRDLSliderBarMaterial\", MRDLSliderBarMaterial);\n//# sourceMappingURL=mrdlSliderBarMaterial.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nvar name = \"mrdlSliderThumbPixelShader\";\nvar shader = \"uniform vec3 cameraPosition;\\nvarying vec3 vPosition;\\nvarying vec3 vNormal;\\nvarying vec2 vUV;\\nvarying vec3 vTangent;\\nvarying vec3 vBinormal;\\nvarying vec4 vColor;\\nvarying vec4 vExtra1;\\nvarying vec4 vExtra2;\\nvarying vec4 vExtra3;\\nuniform float _Radius_;\\nuniform float _Bevel_Front_;\\nuniform float _Bevel_Front_Stretch_;\\nuniform float _Bevel_Back_;\\nuniform float _Bevel_Back_Stretch_;\\nuniform float _Radius_Top_Left_;\\nuniform float _Radius_Top_Right_;\\nuniform float _Radius_Bottom_Left_;\\nuniform float _Radius_Bottom_Right_;\\nuniform bool _Bulge_Enabled_;\\nuniform float _Bulge_Height_;\\nuniform float _Bulge_Radius_;\\nuniform float _Sun_Intensity_;\\nuniform float _Sun_Theta_;\\nuniform float _Sun_Phi_;\\nuniform float _Indirect_Diffuse_;\\nuniform vec4 _Albedo_;\\nuniform float _Specular_;\\nuniform float _Shininess_;\\nuniform float _Sharpness_;\\nuniform float _Subsurface_;\\nuniform vec4 _Left_Color_;\\nuniform vec4 _Right_Color_;\\nuniform float _Reflection_;\\nuniform float _Front_Reflect_;\\nuniform float _Edge_Reflect_;\\nuniform float _Power_;\\nuniform vec4 _Sky_Color_;\\nuniform vec4 _Horizon_Color_;\\nuniform vec4 _Ground_Color_;\\nuniform float _Horizon_Power_;\\nuniform sampler2D _Reflection_Map_;\\nuniform sampler2D _Indirect_Environment_;\\nuniform float _Width_;\\nuniform float _Fuzz_;\\nuniform float _Min_Fuzz_;\\nuniform float _Clip_Fade_;\\nuniform float _Hue_Shift_;\\nuniform float _Saturation_Shift_;\\nuniform float _Value_Shift_;\\nuniform vec3 _Blob_Position_;\\nuniform float _Blob_Intensity_;\\nuniform float _Blob_Near_Size_;\\nuniform float _Blob_Far_Size_;\\nuniform float _Blob_Near_Distance_;\\nuniform float _Blob_Far_Distance_;\\nuniform float _Blob_Fade_Length_;\\nuniform float _Blob_Pulse_;\\nuniform float _Blob_Fade_;\\nuniform sampler2D _Blob_Texture_;\\nuniform vec3 _Blob_Position_2_;\\nuniform float _Blob_Near_Size_2_;\\nuniform float _Blob_Pulse_2_;\\nuniform float _Blob_Fade_2_;\\nuniform vec3 _Left_Index_Pos_;\\nuniform vec3 _Right_Index_Pos_;\\nuniform vec3 _Left_Index_Middle_Pos_;\\nuniform vec3 _Right_Index_Middle_Pos_;\\nuniform sampler2D _Decal_;\\nuniform vec2 _Decal_Scale_XY_;\\nuniform bool _Decal_Front_Only_;\\nuniform float _Rim_Intensity_;\\nuniform sampler2D _Rim_Texture_;\\nuniform float _Rim_Hue_Shift_;\\nuniform float _Rim_Saturation_Shift_;\\nuniform float _Rim_Value_Shift_;\\nuniform float _Iridescence_Intensity_;\\nuniform sampler2D _Iridescence_Texture_;\\nuniform bool Use_Global_Left_Index;\\nuniform bool Use_Global_Right_Index;\\nuniform vec4 Global_Left_Index_Tip_Position;\\nuniform vec4 Global_Right_Index_Tip_Position;\\nuniform vec4 Global_Left_Thumb_Tip_Position;\\nuniform vec4 Global_Right_Thumb_Tip_Position;\\nuniform vec4 Global_Left_Index_Middle_Position;\\nuniform vec4 Global_Right_Index_Middle_Position;\\nuniform float Global_Left_Index_Tip_Proximity;\\nuniform float Global_Right_Index_Tip_Proximity;\\nvoid Blob_Fragment_B180(\\nsampler2D Blob_Texture,\\nvec4 Blob_Info1,\\nvec4 Blob_Info2,\\nout vec4 Blob_Color)\\n{\\nfloat k1=dot(Blob_Info1.xy,Blob_Info1.xy);\\nfloat k2=dot(Blob_Info2.xy,Blob_Info2.xy);\\nvec3 closer=k1<k2 ? vec3(k1,Blob_Info1.z,Blob_Info1.w) : vec3(k2,Blob_Info2.z,Blob_Info2.w);\\nBlob_Color=closer.z*texture(Blob_Texture,vec2(vec2(sqrt(closer.x),closer.y).x,1.0-vec2(sqrt(closer.x),closer.y).y))*clamp(1.0-closer.x,0.0,1.0);\\n}\\nvoid FastLinearTosRGB_B192(\\nvec4 Linear,\\nout vec4 sRGB)\\n{\\nsRGB.rgb=sqrt(clamp(Linear.rgb,0.0,1.0));\\nsRGB.a=Linear.a;\\n}\\nvoid Scale_RGB_B209(\\nvec4 Color,\\nfloat Scalar,\\nout vec4 Result)\\n{\\nResult=vec4(Scalar,Scalar,Scalar,1)*Color;\\n}\\nvoid Fragment_Main_B271(\\nfloat Sun_Intensity,\\nfloat Sun_Theta,\\nfloat Sun_Phi,\\nvec3 Normal,\\nvec4 Albedo,\\nfloat Fresnel_Reflect,\\nfloat Shininess,\\nvec3 Incident,\\nvec4 Horizon_Color,\\nvec4 Sky_Color,\\nvec4 Ground_Color,\\nfloat Indirect_Diffuse,\\nfloat Specular,\\nfloat Horizon_Power,\\nfloat Reflection,\\nvec4 Reflection_Sample,\\nvec4 Indirect_Sample,\\nfloat Sharpness,\\nfloat SSS,\\nfloat Subsurface,\\nvec4 Translucence,\\nvec4 Rim_Light,\\nvec4 Iridescence,\\nout vec4 Result)\\n{\\nfloat theta=Sun_Theta*2.0*3.14159;\\nfloat phi=Sun_Phi*3.14159;\\nvec3 lightDir= vec3(cos(phi)*cos(theta),sin(phi),cos(phi)*sin(theta));\\nfloat NdotL=max(dot(lightDir,Normal),0.0);\\nvec3 R=reflect(Incident,Normal);\\nfloat RdotL=max(0.0,dot(R,lightDir));\\nfloat specular=pow(RdotL,Shininess);\\nspecular=mix(specular,smoothstep(0.495*Sharpness,1.0-0.495*Sharpness,specular),Sharpness);\\nvec4 gi=mix(Ground_Color,Sky_Color,Normal.y*0.5+0.5);\\nResult=((Sun_Intensity*NdotL+Indirect_Sample*Indirect_Diffuse+Translucence)*(1.0+SSS*Subsurface))*Albedo*(1.0-Fresnel_Reflect)+(Sun_Intensity*specular*Specular+Fresnel_Reflect*Reflection*Reflection_Sample)+Fresnel_Reflect*Rim_Light+Iridescence;\\n}\\nvoid Bulge_B229(\\nbool Enabled,\\nvec3 Normal,\\nvec3 Tangent,\\nfloat Bulge_Height,\\nvec4 UV,\\nfloat Bulge_Radius,\\nvec3 ButtonN,\\nout vec3 New_Normal)\\n{\\nvec2 xy=clamp(UV.xy*2.0,vec2(-1,-1),vec2(1,1));\\nvec3 B=(cross(Normal,Tangent));\\nfloat k=-clamp(1.0-length(xy)/Bulge_Radius,0.0,1.0)*Bulge_Height;\\nk=sin(k*3.14159*0.5);\\nk*=smoothstep(0.9998,0.9999,abs(dot(ButtonN,Normal)));\\nNew_Normal=Normal*sqrt(1.0-k*k)+(xy.x*Tangent+xy.y*B)*k;\\nNew_Normal=Enabled ? New_Normal : Normal;\\n}\\nvoid SSS_B227(\\nvec3 ButtonN,\\nvec3 Normal,\\nvec3 Incident,\\nout float Result)\\n{\\nfloat NdotI=abs(dot(Normal,Incident));\\nfloat BdotI=abs(dot(ButtonN,Incident));\\nResult=(abs(NdotI-BdotI)); \\n}\\nvoid FingerOcclusion_B217(\\nfloat Width,\\nfloat DistToCenter,\\nfloat Fuzz,\\nfloat Min_Fuzz,\\nvec3 Position,\\nvec3 Forward,\\nvec3 Nearest,\\nfloat Fade_Out,\\nout float NotInShadow)\\n{\\nfloat d=dot((Nearest-Position),Forward);\\nfloat sh=smoothstep(Width*0.5,Width*0.5+Fuzz*max(d,0.0)+Min_Fuzz,DistToCenter);\\nNotInShadow=1.0-(1.0-sh)*smoothstep(-Fade_Out,0.0,d);\\n}\\nvoid FingerOcclusion_B218(\\nfloat Width,\\nfloat DistToCenter,\\nfloat Fuzz,\\nfloat Min_Fuzz,\\nvec3 Position,\\nvec3 Forward,\\nvec3 Nearest,\\nfloat Fade_Out,\\nout float NotInShadow)\\n{\\nfloat d=dot((Nearest-Position),Forward);\\nfloat sh=smoothstep(Width*0.5,Width*0.5+Fuzz*max(d,0.0)+Min_Fuzz,DistToCenter);\\nNotInShadow=1.0-(1.0-sh)*smoothstep(-Fade_Out,0.0,d);\\n}\\nvoid Scale_Color_B241(\\nvec4 Color,\\nfloat Scalar,\\nout vec4 Result)\\n{\\nResult=Scalar*Color;\\n}\\nvoid From_HSV_B223(\\nfloat Hue,\\nfloat Saturation,\\nfloat Value,\\nfloat Alpha,\\nout vec4 Color)\\n{\\nvec4 K=vec4(1.0,2.0/3.0,1.0/3.0,3.0);\\nvec3 p=abs(fract(vec3(Hue,Hue,Hue)+K.xyz)*6.0-K.www);\\nColor.rgb=Value*mix(K.xxx,clamp(p-K.xxx,0.0,1.0),Saturation);\\nColor.a=Alpha;\\n}\\nvoid Fast_Fresnel_B272(\\nfloat Front_Reflect,\\nfloat Edge_Reflect,\\nfloat Power,\\nvec3 Normal,\\nvec3 Incident,\\nout float Transmit,\\nout float Reflect)\\n{\\nfloat d=max(-dot(Incident,Normal),0.0);\\nReflect=Front_Reflect+(Edge_Reflect-Front_Reflect)*pow(1.0-d,Power);\\nTransmit=1.0-Reflect;\\n}\\nvoid Mapped_Environment_B201(\\nsampler2D Reflected_Environment,\\nsampler2D Indirect_Environment,\\nvec3 Dir,\\nout vec4 Reflected_Color,\\nout vec4 Indirect_Diffuse)\\n{\\nReflected_Color=texture(Reflected_Environment,vec2(atan(Dir.z,Dir.x)/3.14159*0.5,asin(Dir.y)/3.14159+0.5));\\nIndirect_Diffuse=texture(Indirect_Environment,vec2(atan(Dir.z,Dir.x)/3.14159*0.5,asin(Dir.y)/3.14159+0.5));\\n}\\nvec4 SampleEnv_Bid200(vec3 D,vec4 S,vec4 H,vec4 G,float exponent)\\n{\\nfloat k=pow(abs(D.y),exponent);\\nvec4 C;\\nif (D.y>0.0) {\\nC=mix(H,S,k);\\n} else {\\nC=mix(H,G,k); \\n}\\nreturn C;\\n}\\nvoid Sky_Environment_B200(\\nvec3 Normal,\\nvec3 Reflected,\\nvec4 Sky_Color,\\nvec4 Horizon_Color,\\nvec4 Ground_Color,\\nfloat Horizon_Power,\\nout vec4 Reflected_Color,\\nout vec4 Indirect_Color)\\n{\\nReflected_Color=SampleEnv_Bid200(Reflected,Sky_Color,Horizon_Color,Ground_Color,Horizon_Power);\\nIndirect_Color=mix(Ground_Color,Sky_Color,Normal.y*0.5+0.5);\\n}\\nvoid Min_Segment_Distance_B215(\\nvec3 P0,\\nvec3 P1,\\nvec3 Q0,\\nvec3 Q1,\\nout vec3 NearP,\\nout vec3 NearQ,\\nout float Distance)\\n{\\nvec3 u=P1-P0;\\nvec3 v=Q1-Q0;\\nvec3 w=P0-Q0;\\nfloat a=dot(u,u);\\nfloat b=dot(u,v);\\nfloat c=dot(v,v);\\nfloat d=dot(u,w);\\nfloat e=dot(v,w);\\nfloat D=a*c-b*b;\\nfloat sD=D;\\nfloat tD=D;\\nfloat sc,sN,tc,tN;\\nif (D<0.00001) {\\nsN=0.0;\\nsD=1.0;\\ntN=e;\\ntD=c;\\n} else {\\nsN=(b*e-c*d);\\ntN=(a*e-b*d);\\nif (sN<0.0) {\\nsN=0.0;\\ntN=e;\\ntD=c;\\n} else if (sN>sD) {\\nsN=sD;\\ntN=e+b;\\ntD=c;\\n}\\n}\\nif (tN<0.0) {\\ntN=0.0;\\nif (-d<0.0) {\\nsN=0.0;\\n} else if (-d>a) {\\nsN=sD;\\n} else {\\nsN=-d;\\nsD=a;\\n}\\n} else if (tN>tD) {\\ntN=tD;\\nif ((-d+b)<0.0) {\\nsN=0.0;\\n} else if ((-d+b)>a) {\\nsN=sD;\\n} else {\\nsN=(-d+b);\\nsD=a;\\n}\\n}\\nsc=abs(sN)<0.000001 ? 0.0 : sN/sD;\\ntc=abs(tN)<0.000001 ? 0.0 : tN/tD;\\nNearP=P0+sc*u;\\nNearQ=Q0+tc*v;\\nDistance=distance(NearP,NearQ);\\n}\\nvoid To_XYZ_B224(\\nvec3 Vec3,\\nout float X,\\nout float Y,\\nout float Z)\\n{\\nX=Vec3.x;\\nY=Vec3.y;\\nZ=Vec3.z;\\n}\\nvoid Finger_Positions_B214(\\nvec3 Left_Index_Pos,\\nvec3 Right_Index_Pos,\\nvec3 Left_Index_Middle_Pos,\\nvec3 Right_Index_Middle_Pos,\\nout vec3 Left_Index,\\nout vec3 Right_Index,\\nout vec3 Left_Index_Middle,\\nout vec3 Right_Index_Middle)\\n{\\nLeft_Index= (Use_Global_Left_Index ? Global_Left_Index_Tip_Position.xyz : Left_Index_Pos);\\nRight_Index= (Use_Global_Right_Index ? Global_Right_Index_Tip_Position.xyz : Right_Index_Pos);\\nLeft_Index_Middle= (Use_Global_Left_Index ? Global_Left_Index_Middle_Position.xyz : Left_Index_Middle_Pos);\\nRight_Index_Middle= (Use_Global_Right_Index ? Global_Right_Index_Middle_Position.xyz : Right_Index_Middle_Pos);\\n}\\nvoid VaryHSV_B258(\\nvec3 HSV_In,\\nfloat Hue_Shift,\\nfloat Saturation_Shift,\\nfloat Value_Shift,\\nout vec3 HSV_Out)\\n{\\nHSV_Out=vec3(fract(HSV_In.x+Hue_Shift),clamp(HSV_In.y+Saturation_Shift,0.0,1.0),clamp(HSV_In.z+Value_Shift,0.0,1.0));\\n}\\nvoid Remap_Range_B264(\\nfloat In_Min,\\nfloat In_Max,\\nfloat Out_Min,\\nfloat Out_Max,\\nfloat In,\\nout float Out)\\n{\\nOut=mix(Out_Min,Out_Max,clamp((In-In_Min)/(In_Max-In_Min),0.0,1.0));\\n}\\nvoid To_HSV_B225(\\nvec4 Color,\\nout float Hue,\\nout float Saturation,\\nout float Value,\\nout float Alpha,\\nout vec3 HSV)\\n{\\nvec4 K=vec4(0.0,-1.0/3.0,2.0/3.0,-1.0);\\nvec4 p=Color.g<Color.b ? vec4(Color.bg,K.wz) : vec4(Color.gb,K.xy);\\nvec4 q=Color.r<p.x ? vec4(p.xyw,Color.r) : vec4(Color.r,p.yzx);\\nfloat d=q.x-min(q.w,q.y);\\nfloat e=1.0e-10;\\nHue=abs(q.z+(q.w-q.y)/(6.0*d+e));\\nSaturation=d/(q.x+e);\\nValue=q.x;\\nAlpha=Color.a;\\nHSV=vec3(Hue,Saturation,Value);\\n}\\nvoid Code_B260(\\nfloat X,\\nout float Result)\\n{\\nResult=(acos(X)/3.14159-0.5)*2.0;\\n}\\nvoid Rim_Light_B282(\\nvec3 Front,\\nvec3 Normal,\\nvec3 Incident,\\nfloat Rim_Intensity,\\nsampler2D Texture,\\nout vec4 Result)\\n{\\nvec3 R=reflect(Incident,Normal);\\nfloat RdotF=dot(R,Front);\\nfloat RdotL=sqrt(1.0-RdotF*RdotF);\\nvec2 UV=vec2(R.y*0.5+0.5,0.5);\\nvec4 Color=texture(Texture,UV);\\nResult=Color;\\n}\\nvoid main()\\n{\\nvec4 Blob_Color_Q180;\\n#if BLOB_ENABLE\\nBlob_Fragment_B180(_Blob_Texture_,vExtra2,vExtra3,Blob_Color_Q180);\\n#else\\nBlob_Color_Q180=vec4(0,0,0,0);\\n#endif\\nvec3 Incident_Q189=normalize(vPosition-cameraPosition);\\nvec3 Normalized_Q188=normalize(vNormal);\\nvec3 Normalized_Q221=normalize(vTangent);\\nvec4 Color_Q233;\\n#if DECAL_ENABLE\\nColor_Q233=texture(_Decal_,vUV);\\n#else\\nColor_Q233=vec4(0,0,0,0);\\n#endif\\nfloat X_Q240;\\nfloat Y_Q240;\\nfloat Z_Q240;\\nfloat W_Q240;\\nX_Q240=vExtra1.x;\\nY_Q240=vExtra1.y;\\nZ_Q240=vExtra1.z;\\nW_Q240=vExtra1.w;\\nvec4 Linear_Q193;\\nLinear_Q193.rgb=clamp(_Sky_Color_.rgb*_Sky_Color_.rgb,0.0,1.0);\\nLinear_Q193.a=_Sky_Color_.a;\\nvec4 Linear_Q194;\\nLinear_Q194.rgb=clamp(_Horizon_Color_.rgb*_Horizon_Color_.rgb,0.0,1.0);\\nLinear_Q194.a=_Horizon_Color_.a;\\nvec4 Linear_Q195;\\nLinear_Q195.rgb=clamp(_Ground_Color_.rgb*_Ground_Color_.rgb,0.0,1.0);\\nLinear_Q195.a=_Ground_Color_.a;\\nvec3 Left_Index_Q214;\\nvec3 Right_Index_Q214;\\nvec3 Left_Index_Middle_Q214;\\nvec3 Right_Index_Middle_Q214;\\nFinger_Positions_B214(_Left_Index_Pos_,_Right_Index_Pos_,_Left_Index_Middle_Pos_,_Right_Index_Middle_Pos_,Left_Index_Q214,Right_Index_Q214,Left_Index_Middle_Q214,Right_Index_Middle_Q214);\\nvec4 Linear_Q196;\\nLinear_Q196.rgb=clamp(_Albedo_.rgb*_Albedo_.rgb,0.0,1.0);\\nLinear_Q196.a=_Albedo_.a;\\nvec3 Normalized_Q257=normalize(vBinormal);\\nvec3 Incident_Q220=normalize(vPosition-cameraPosition);\\nvec3 New_Normal_Q229;\\nBulge_B229(_Bulge_Enabled_,Normalized_Q188,Normalized_Q221,_Bulge_Height_,vColor,_Bulge_Radius_,vBinormal,New_Normal_Q229);\\nfloat Result_Q227;\\nSSS_B227(vBinormal,New_Normal_Q229,Incident_Q189,Result_Q227);\\nvec4 Result_Q241;\\nScale_Color_B241(Color_Q233,X_Q240,Result_Q241);\\nfloat Transmit_Q272;\\nfloat Reflect_Q272;\\nFast_Fresnel_B272(_Front_Reflect_,_Edge_Reflect_,_Power_,New_Normal_Q229,Incident_Q189,Transmit_Q272,Reflect_Q272);\\nfloat Product_Q275=Y_Q240*Y_Q240;\\nvec3 NearP_Q215;\\nvec3 NearQ_Q215;\\nfloat Distance_Q215;\\nMin_Segment_Distance_B215(Left_Index_Q214,Left_Index_Middle_Q214,vPosition,cameraPosition,NearP_Q215,NearQ_Q215,Distance_Q215);\\nvec3 NearP_Q213;\\nvec3 NearQ_Q213;\\nfloat Distance_Q213;\\nMin_Segment_Distance_B215(Right_Index_Q214,Right_Index_Middle_Q214,vPosition,cameraPosition,NearP_Q213,NearQ_Q213,Distance_Q213);\\nvec3 Reflected_Q197=reflect(Incident_Q189,New_Normal_Q229);\\nvec4 Product_Q253=Linear_Q196*vec4(1,1,1,1);\\nvec4 Result_Q282;\\nRim_Light_B282(Normalized_Q257,Normalized_Q188,Incident_Q220,_Rim_Intensity_,_Rim_Texture_,Result_Q282);\\nfloat Dot_Q222=dot(Incident_Q220, Normalized_Q221);\\nfloat MaxAB_Q273=max(Reflect_Q272,Product_Q275);\\nfloat NotInShadow_Q217;\\n#if OCCLUSION_ENABLED\\nFingerOcclusion_B217(_Width_,Distance_Q215,_Fuzz_,_Min_Fuzz_,vPosition,vBinormal,NearP_Q215,_Clip_Fade_,NotInShadow_Q217);\\n#else\\nNotInShadow_Q217=1.0;\\n#endif\\nfloat NotInShadow_Q218;\\n#if OCCLUSION_ENABLED\\nFingerOcclusion_B218(_Width_,Distance_Q213,_Fuzz_,_Min_Fuzz_,vPosition,vBinormal,NearP_Q213,_Clip_Fade_,NotInShadow_Q218);\\n#else\\nNotInShadow_Q218=1.0;\\n#endif\\nvec4 Reflected_Color_Q201;\\nvec4 Indirect_Diffuse_Q201;\\n#if ENV_ENABLE\\nMapped_Environment_B201(_Reflection_Map_,_Indirect_Environment_,Reflected_Q197,Reflected_Color_Q201,Indirect_Diffuse_Q201);\\n#else\\nReflected_Color_Q201=vec4(0,0,0,1);\\nIndirect_Diffuse_Q201=vec4(0,0,0,1);\\n#endif\\nvec4 Reflected_Color_Q200;\\nvec4 Indirect_Color_Q200;\\n#if SKY_ENABLED\\nSky_Environment_B200(New_Normal_Q229,Reflected_Q197,Linear_Q193,Linear_Q194,Linear_Q195,_Horizon_Power_,Reflected_Color_Q200,Indirect_Color_Q200);\\n#else\\nReflected_Color_Q200=vec4(0,0,0,1);\\nIndirect_Color_Q200=vec4(0,0,0,1);\\n#endif\\nfloat Hue_Q225;\\nfloat Saturation_Q225;\\nfloat Value_Q225;\\nfloat Alpha_Q225;\\nvec3 HSV_Q225;\\nTo_HSV_B225(Product_Q253,Hue_Q225,Saturation_Q225,Value_Q225,Alpha_Q225,HSV_Q225);\\nfloat Hue_Q277;\\nfloat Saturation_Q277;\\nfloat Value_Q277;\\nfloat Alpha_Q277;\\nvec3 HSV_Q277;\\nTo_HSV_B225(Result_Q282,Hue_Q277,Saturation_Q277,Value_Q277,Alpha_Q277,HSV_Q277);\\nfloat Result_Q260;\\nCode_B260(Dot_Q222,Result_Q260);\\nfloat AbsA_Q226=abs(Result_Q260);\\nfloat MinAB_Q208=min(NotInShadow_Q217,NotInShadow_Q218);\\nvec4 Sum_Q198=Reflected_Color_Q201+Reflected_Color_Q200;\\nvec4 Sum_Q199=Indirect_Diffuse_Q201+Indirect_Color_Q200;\\nvec3 HSV_Out_Q276;\\nVaryHSV_B258(HSV_Q277,_Rim_Hue_Shift_,_Rim_Saturation_Shift_,_Rim_Value_Shift_,HSV_Out_Q276);\\nfloat Out_Q264;\\nRemap_Range_B264(-1.0,1.0,0.0,1.0,Result_Q260,Out_Q264);\\nfloat Product_Q256;\\nProduct_Q256=AbsA_Q226*_Hue_Shift_;\\nfloat X_Q278;\\nfloat Y_Q278;\\nfloat Z_Q278;\\nTo_XYZ_B224(HSV_Out_Q276,X_Q278,Y_Q278,Z_Q278);\\nvec2 Vec2_Q262=vec2(Out_Q264,0.5);\\nvec3 HSV_Out_Q258;\\nVaryHSV_B258(HSV_Q225,Product_Q256,_Saturation_Shift_,_Value_Shift_,HSV_Out_Q258);\\nvec4 Color_Q279;\\nFrom_HSV_B223(X_Q278,Y_Q278,Z_Q278,0.0,Color_Q279);\\nvec4 Color_Q261;\\n#if IRIDESCENCE_ENABLED\\nColor_Q261=texture(_Iridescence_Texture_,Vec2_Q262);\\n#else\\nColor_Q261=vec4(0,0,0,0);\\n#endif\\nfloat X_Q224;\\nfloat Y_Q224;\\nfloat Z_Q224;\\nTo_XYZ_B224(HSV_Out_Q258,X_Q224,Y_Q224,Z_Q224);\\nvec4 Result_Q281=_Rim_Intensity_*Color_Q279;\\nvec4 Result_Q263=_Iridescence_Intensity_*Color_Q261;\\nvec4 Color_Q223;\\nFrom_HSV_B223(X_Q224,Y_Q224,Z_Q224,0.0,Color_Q223);\\nvec4 Result_Q234=Result_Q241+(1.0-Result_Q241.a)*Color_Q223;\\nvec4 Result_Q271;\\nFragment_Main_B271(_Sun_Intensity_,_Sun_Theta_,_Sun_Phi_,New_Normal_Q229,Result_Q234,MaxAB_Q273,_Shininess_,Incident_Q189,_Horizon_Color_,_Sky_Color_,_Ground_Color_,_Indirect_Diffuse_,_Specular_,_Horizon_Power_,_Reflection_,Sum_Q198,Sum_Q199,_Sharpness_,Result_Q227,_Subsurface_,vec4(0,0,0,0),Result_Q281,Result_Q263,Result_Q271);\\nvec4 Result_Q209;\\nScale_RGB_B209(Result_Q271,MinAB_Q208,Result_Q209);\\nvec4 sRGB_Q192;\\nFastLinearTosRGB_B192(Result_Q209,sRGB_Q192);\\nvec4 Result_Q181=Blob_Color_Q180+(1.0-Blob_Color_Q180.a)*sRGB_Q192;\\nvec4 Result_Q190=Result_Q181; Result_Q190.a=1.0;\\nvec4 Out_Color=Result_Q190;\\nfloat Clip_Threshold=0.001;\\nbool To_sRGB=false;\\ngl_FragColor=Out_Color;\\n}\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var mrdlSliderThumbPixelShader = { name: name, shader: shader };\n//# sourceMappingURL=mrdlSliderThumb.fragment.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nvar name = \"mrdlSliderThumbVertexShader\";\nvar shader = \"uniform mat4 world;\\nuniform mat4 viewProjection;\\nuniform vec3 cameraPosition;\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec2 uv;\\n#ifdef TANGENT\\nattribute vec3 tangent;\\n#else\\nconst vec3 tangent=vec3(0.);\\n#endif\\nuniform float _Radius_;\\nuniform float _Bevel_Front_;\\nuniform float _Bevel_Front_Stretch_;\\nuniform float _Bevel_Back_;\\nuniform float _Bevel_Back_Stretch_;\\nuniform float _Radius_Top_Left_;\\nuniform float _Radius_Top_Right_;\\nuniform float _Radius_Bottom_Left_;\\nuniform float _Radius_Bottom_Right_;\\nuniform bool _Bulge_Enabled_;\\nuniform float _Bulge_Height_;\\nuniform float _Bulge_Radius_;\\nuniform float _Sun_Intensity_;\\nuniform float _Sun_Theta_;\\nuniform float _Sun_Phi_;\\nuniform float _Indirect_Diffuse_;\\nuniform vec4 _Albedo_;\\nuniform float _Specular_;\\nuniform float _Shininess_;\\nuniform float _Sharpness_;\\nuniform float _Subsurface_;\\nuniform vec4 _Left_Color_;\\nuniform vec4 _Right_Color_;\\nuniform float _Reflection_;\\nuniform float _Front_Reflect_;\\nuniform float _Edge_Reflect_;\\nuniform float _Power_;\\nuniform vec4 _Sky_Color_;\\nuniform vec4 _Horizon_Color_;\\nuniform vec4 _Ground_Color_;\\nuniform float _Horizon_Power_;\\nuniform sampler2D _Reflection_Map_;\\nuniform sampler2D _Indirect_Environment_;\\nuniform float _Width_;\\nuniform float _Fuzz_;\\nuniform float _Min_Fuzz_;\\nuniform float _Clip_Fade_;\\nuniform float _Hue_Shift_;\\nuniform float _Saturation_Shift_;\\nuniform float _Value_Shift_;\\nuniform vec3 _Blob_Position_;\\nuniform float _Blob_Intensity_;\\nuniform float _Blob_Near_Size_;\\nuniform float _Blob_Far_Size_;\\nuniform float _Blob_Near_Distance_;\\nuniform float _Blob_Far_Distance_;\\nuniform float _Blob_Fade_Length_;\\nuniform float _Blob_Pulse_;\\nuniform float _Blob_Fade_;\\nuniform sampler2D _Blob_Texture_;\\nuniform vec3 _Blob_Position_2_;\\nuniform float _Blob_Near_Size_2_;\\nuniform float _Blob_Pulse_2_;\\nuniform float _Blob_Fade_2_;\\nuniform vec3 _Left_Index_Pos_;\\nuniform vec3 _Right_Index_Pos_;\\nuniform vec3 _Left_Index_Middle_Pos_;\\nuniform vec3 _Right_Index_Middle_Pos_;\\nuniform sampler2D _Decal_;\\nuniform vec2 _Decal_Scale_XY_;\\nuniform bool _Decal_Front_Only_;\\nuniform float _Rim_Intensity_;\\nuniform sampler2D _Rim_Texture_;\\nuniform float _Rim_Hue_Shift_;\\nuniform float _Rim_Saturation_Shift_;\\nuniform float _Rim_Value_Shift_;\\nuniform float _Iridescence_Intensity_;\\nuniform sampler2D _Iridescence_Texture_;\\nuniform bool Use_Global_Left_Index;\\nuniform bool Use_Global_Right_Index;\\nuniform vec4 Global_Left_Index_Tip_Position;\\nuniform vec4 Global_Right_Index_Tip_Position;\\nuniform vec4 Global_Left_Thumb_Tip_Position;\\nuniform vec4 Global_Right_Thumb_Tip_Position;\\nuniform float Global_Left_Index_Tip_Proximity;\\nuniform float Global_Right_Index_Tip_Proximity;\\nvarying vec3 vPosition;\\nvarying vec3 vNormal;\\nvarying vec2 vUV;\\nvarying vec3 vTangent;\\nvarying vec3 vBinormal;\\nvarying vec4 vColor;\\nvarying vec4 vExtra1;\\nvarying vec4 vExtra2;\\nvarying vec4 vExtra3;\\nvoid Object_To_World_Pos_B162(\\nvec3 Pos_Object,\\nout vec3 Pos_World)\\n{\\nPos_World=(world*vec4(Pos_Object,1.0)).xyz;\\n}\\nvoid Object_To_World_Normal_B182(\\nvec3 Nrm_Object,\\nout vec3 Nrm_World)\\n{\\nNrm_World=(vec4(Nrm_Object,0.0)).xyz;\\n}\\nvoid Blob_Vertex_B173(\\nvec3 Position,\\nvec3 Normal,\\nvec3 Tangent,\\nvec3 Bitangent,\\nvec3 Blob_Position,\\nfloat Intensity,\\nfloat Blob_Near_Size,\\nfloat Blob_Far_Size,\\nfloat Blob_Near_Distance,\\nfloat Blob_Far_Distance,\\nfloat Blob_Fade_Length,\\nfloat Blob_Pulse,\\nfloat Blob_Fade,\\nout vec4 Blob_Info)\\n{\\nvec3 blob= (Use_Global_Left_Index ? Global_Left_Index_Tip_Position.xyz : Blob_Position);\\nvec3 delta=blob-Position;\\nfloat dist=dot(Normal,delta);\\nfloat lerpValue=clamp((abs(dist)-Blob_Near_Distance)/(Blob_Far_Distance-Blob_Near_Distance),0.0,1.0);\\nfloat fadeValue=1.0-clamp((abs(dist)-Blob_Far_Distance)/Blob_Fade_Length,0.0,1.0);\\nfloat size=Blob_Near_Size+(Blob_Far_Size-Blob_Near_Size)*lerpValue;\\nvec2 blobXY=vec2(dot(delta,Tangent),dot(delta,Bitangent))/(0.0001+size);\\nfloat Fade=fadeValue*Intensity*Blob_Fade;\\nfloat Distance=(lerpValue*0.5+0.5)*(1.0-Blob_Pulse);\\nBlob_Info=vec4(blobXY.x,blobXY.y,Distance,Fade);\\n}\\nvoid Blob_Vertex_B174(\\nvec3 Position,\\nvec3 Normal,\\nvec3 Tangent,\\nvec3 Bitangent,\\nvec3 Blob_Position,\\nfloat Intensity,\\nfloat Blob_Near_Size,\\nfloat Blob_Far_Size,\\nfloat Blob_Near_Distance,\\nfloat Blob_Far_Distance,\\nfloat Blob_Fade_Length,\\nfloat Blob_Pulse,\\nfloat Blob_Fade,\\nout vec4 Blob_Info)\\n{\\nvec3 blob= (Use_Global_Right_Index ? Global_Right_Index_Tip_Position.xyz : Blob_Position);\\nvec3 delta=blob-Position;\\nfloat dist=dot(Normal,delta);\\nfloat lerpValue=clamp((abs(dist)-Blob_Near_Distance)/(Blob_Far_Distance-Blob_Near_Distance),0.0,1.0);\\nfloat fadeValue=1.0-clamp((abs(dist)-Blob_Far_Distance)/Blob_Fade_Length,0.0,1.0);\\nfloat size=Blob_Near_Size+(Blob_Far_Size-Blob_Near_Size)*lerpValue;\\nvec2 blobXY=vec2(dot(delta,Tangent),dot(delta,Bitangent))/(0.0001+size);\\nfloat Fade=fadeValue*Intensity*Blob_Fade;\\nfloat Distance=(lerpValue*0.5+0.5)*(1.0-Blob_Pulse);\\nBlob_Info=vec4(blobXY.x,blobXY.y,Distance,Fade);\\n}\\nvoid Move_Verts_B280(\\nfloat Anisotropy,\\nvec3 P,\\nfloat Radius,\\nfloat Bevel,\\nvec3 Normal_Object,\\nfloat ScaleZ,\\nfloat Stretch,\\nout vec3 New_P,\\nout vec2 New_UV,\\nout float Radial_Gradient,\\nout vec3 Radial_Dir,\\nout vec3 New_Normal)\\n{\\nvec2 UV=P.xy*2.0+0.5;\\nvec2 center=clamp(UV,0.0,1.0);\\nvec2 delta=UV-center;\\nfloat deltad=(length(delta)*2.0);\\nfloat f=(Bevel+(Radius-Bevel)*Stretch)/Radius;\\nfloat innerd=clamp(deltad*2.0,0.0,1.0);\\nfloat outerd=clamp(deltad*2.0-1.0,0.0,1.0);\\nfloat bevelAngle=outerd*3.14159*0.5;\\nfloat sinb=sin(bevelAngle);\\nfloat cosb=cos(bevelAngle);\\nfloat beveld=(1.0-f)*innerd+f*sinb;\\nfloat br=outerd;\\nvec2 r2=2.0*vec2(Radius/Anisotropy,Radius);\\nfloat dir=P.z<0.0001 ? 1.0 : -1.0;\\nNew_UV=center+r2*((0.5-center)+normalize(delta+vec2(0.0,0.000001))*beveld*0.5);\\nNew_P=vec3(New_UV-0.5,P.z+dir*(1.0-cosb)*Bevel*ScaleZ);\\nRadial_Gradient=clamp((deltad-0.5)*2.0,0.0,1.0);\\nRadial_Dir=vec3(delta*r2,0.0);\\nvec3 beveledNormal=cosb*Normal_Object+sinb*vec3(delta.x,delta.y,0.0);\\nNew_Normal=Normal_Object.z==0.0 ? Normal_Object : beveledNormal;\\n}\\nvoid Object_To_World_Dir_B210(\\nvec3 Dir_Object,\\nout vec3 Normal_World,\\nout vec3 Normal_World_N,\\nout float Normal_Length)\\n{\\nNormal_World=(world*vec4(Dir_Object,0.0)).xyz;\\nNormal_Length=length(Normal_World);\\nNormal_World_N=Normal_World/Normal_Length;\\n}\\nvoid To_XYZ_B228(\\nvec3 Vec3,\\nout float X,\\nout float Y,\\nout float Z)\\n{\\nX=Vec3.x;\\nY=Vec3.y;\\nZ=Vec3.z;\\n}\\nvoid Conditional_Float_B243(\\nbool Which,\\nfloat If_True,\\nfloat If_False,\\nout float Result)\\n{\\nResult=Which ? If_True : If_False;\\n}\\nvoid Object_To_World_Dir_B178(\\nvec3 Dir_Object,\\nout vec3 Binormal_World,\\nout vec3 Binormal_World_N,\\nout float Binormal_Length)\\n{\\nBinormal_World=(world*vec4(Dir_Object,0.0)).xyz;\\nBinormal_Length=length(Binormal_World);\\nBinormal_World_N=Binormal_World/Binormal_Length;\\n}\\nvoid Pick_Radius_B219(\\nfloat Radius,\\nfloat Radius_Top_Left,\\nfloat Radius_Top_Right,\\nfloat Radius_Bottom_Left,\\nfloat Radius_Bottom_Right,\\nvec3 Position,\\nout float Result)\\n{\\nbool whichY=Position.y>0.0;\\nResult=Position.x<0.0 ? (whichY ? Radius_Top_Left : Radius_Bottom_Left) : (whichY ? Radius_Top_Right : Radius_Bottom_Right);\\nResult*=Radius;\\n}\\nvoid Conditional_Float_B186(\\nbool Which,\\nfloat If_True,\\nfloat If_False,\\nout float Result)\\n{\\nResult=Which ? If_True : If_False;\\n}\\nvoid Greater_Than_B187(\\nfloat Left,\\nfloat Right,\\nout bool Not_Greater_Than,\\nout bool Greater_Than)\\n{\\nGreater_Than=Left>Right;\\nNot_Greater_Than=!Greater_Than;\\n}\\nvoid Remap_Range_B255(\\nfloat In_Min,\\nfloat In_Max,\\nfloat Out_Min,\\nfloat Out_Max,\\nfloat In,\\nout float Out)\\n{\\nOut=mix(Out_Min,Out_Max,clamp((In-In_Min)/(In_Max-In_Min),0.0,1.0));\\n}\\nvoid main()\\n{\\nvec2 XY_Q235;\\nXY_Q235=(uv-vec2(0.5,0.5))*_Decal_Scale_XY_+vec2(0.5,0.5);\\nvec3 Tangent_World_Q177;\\nvec3 Tangent_World_N_Q177;\\nfloat Tangent_Length_Q177;\\nTangent_World_Q177=(world*vec4(vec3(1,0,0),0.0)).xyz;\\nTangent_Length_Q177=length(Tangent_World_Q177);\\nTangent_World_N_Q177=Tangent_World_Q177/Tangent_Length_Q177;\\nvec3 Normal_World_Q210;\\nvec3 Normal_World_N_Q210;\\nfloat Normal_Length_Q210;\\nObject_To_World_Dir_B210(vec3(0,0,1),Normal_World_Q210,Normal_World_N_Q210,Normal_Length_Q210);\\nfloat X_Q228;\\nfloat Y_Q228;\\nfloat Z_Q228;\\nTo_XYZ_B228(position,X_Q228,Y_Q228,Z_Q228);\\nvec3 Nrm_World_Q176;\\nNrm_World_Q176=normalize((world*vec4(normal,0.0)).xyz);\\nvec3 Binormal_World_Q178;\\nvec3 Binormal_World_N_Q178;\\nfloat Binormal_Length_Q178;\\nObject_To_World_Dir_B178(vec3(0,1,0),Binormal_World_Q178,Binormal_World_N_Q178,Binormal_Length_Q178);\\nfloat Anisotropy_Q179=Tangent_Length_Q177/Binormal_Length_Q178;\\nfloat Result_Q219;\\nPick_Radius_B219(_Radius_,_Radius_Top_Left_,_Radius_Top_Right_,_Radius_Bottom_Left_,_Radius_Bottom_Right_,position,Result_Q219);\\nfloat Anisotropy_Q203=Binormal_Length_Q178/Normal_Length_Q210;\\nbool Not_Greater_Than_Q187;\\nbool Greater_Than_Q187;\\nGreater_Than_B187(Z_Q228,0.0,Not_Greater_Than_Q187,Greater_Than_Q187);\\nvec4 Linear_Q251;\\nLinear_Q251.rgb=clamp(_Left_Color_.rgb*_Left_Color_.rgb,0.0,1.0);\\nLinear_Q251.a=_Left_Color_.a;\\nvec4 Linear_Q252;\\nLinear_Q252.rgb=clamp(_Right_Color_.rgb*_Right_Color_.rgb,0.0,1.0);\\nLinear_Q252.a=_Right_Color_.a;\\nvec3 Difference_Q211=vec3(0,0,0)-Normal_World_N_Q210;\\nvec4 Out_Color_Q184=vec4(X_Q228,Y_Q228,Z_Q228,1);\\nfloat Result_Q186;\\nConditional_Float_B186(Greater_Than_Q187,_Bevel_Back_,_Bevel_Front_,Result_Q186);\\nfloat Result_Q244;\\nConditional_Float_B186(Greater_Than_Q187,_Bevel_Back_Stretch_,_Bevel_Front_Stretch_,Result_Q244);\\nvec3 New_P_Q280;\\nvec2 New_UV_Q280;\\nfloat Radial_Gradient_Q280;\\nvec3 Radial_Dir_Q280;\\nvec3 New_Normal_Q280;\\nMove_Verts_B280(Anisotropy_Q179,position,Result_Q219,Result_Q186,normal,Anisotropy_Q203,Result_Q244,New_P_Q280,New_UV_Q280,Radial_Gradient_Q280,Radial_Dir_Q280,New_Normal_Q280);\\nfloat X_Q248;\\nfloat Y_Q248;\\nX_Q248=New_UV_Q280.x;\\nY_Q248=New_UV_Q280.y;\\nvec3 Pos_World_Q162;\\nObject_To_World_Pos_B162(New_P_Q280,Pos_World_Q162);\\nvec3 Nrm_World_Q182;\\nObject_To_World_Normal_B182(New_Normal_Q280,Nrm_World_Q182);\\nvec4 Blob_Info_Q173;\\n#if BLOB_ENABLE\\nBlob_Vertex_B173(Pos_World_Q162,Nrm_World_Q176,Tangent_World_N_Q177,Binormal_World_N_Q178,_Blob_Position_,_Blob_Intensity_,_Blob_Near_Size_,_Blob_Far_Size_,_Blob_Near_Distance_,_Blob_Far_Distance_,_Blob_Fade_Length_,_Blob_Pulse_,_Blob_Fade_,Blob_Info_Q173);\\n#else\\nBlob_Info_Q173=vec4(0,0,0,0);\\n#endif\\nvec4 Blob_Info_Q174;\\n#if BLOB_ENABLE_2\\nBlob_Vertex_B174(Pos_World_Q162,Nrm_World_Q176,Tangent_World_N_Q177,Binormal_World_N_Q178,_Blob_Position_2_,_Blob_Intensity_,_Blob_Near_Size_2_,_Blob_Far_Size_,_Blob_Near_Distance_,_Blob_Far_Distance_,_Blob_Fade_Length_,_Blob_Pulse_2_,_Blob_Fade_2_,Blob_Info_Q174);\\n#else\\nBlob_Info_Q174=vec4(0,0,0,0);\\n#endif\\nfloat Out_Q255;\\nRemap_Range_B255(0.0,1.0,0.0,1.0,X_Q248,Out_Q255);\\nfloat X_Q236;\\nfloat Y_Q236;\\nfloat Z_Q236;\\nTo_XYZ_B228(Nrm_World_Q182,X_Q236,Y_Q236,Z_Q236);\\nvec4 Color_At_T_Q247=mix(Linear_Q251,Linear_Q252,Out_Q255);\\nfloat Minus_F_Q237=-Z_Q236;\\nfloat R_Q249;\\nfloat G_Q249;\\nfloat B_Q249;\\nfloat A_Q249;\\nR_Q249=Color_At_T_Q247.r; G_Q249=Color_At_T_Q247.g; B_Q249=Color_At_T_Q247.b; A_Q249=Color_At_T_Q247.a;\\nfloat ClampF_Q238=clamp(0.0,Minus_F_Q237,1.0);\\nfloat Result_Q243;\\nConditional_Float_B243(_Decal_Front_Only_,ClampF_Q238,1.0,Result_Q243);\\nvec4 Vec4_Q239=vec4(Result_Q243,Radial_Gradient_Q280,G_Q249,B_Q249);\\nvec3 Position=Pos_World_Q162;\\nvec3 Normal=Nrm_World_Q182;\\nvec2 UV=XY_Q235;\\nvec3 Tangent=Tangent_World_N_Q177;\\nvec3 Binormal=Difference_Q211;\\nvec4 Color=Out_Color_Q184;\\nvec4 Extra1=Vec4_Q239;\\nvec4 Extra2=Blob_Info_Q173;\\nvec4 Extra3=Blob_Info_Q174;\\ngl_Position=viewProjection*vec4(Position,1);\\nvPosition=Position;\\nvNormal=Normal;\\nvUV=UV;\\nvTangent=Tangent;\\nvBinormal=Binormal;\\nvColor=Color;\\nvExtra1=Extra1;\\nvExtra2=Extra2;\\nvExtra3=Extra3;\\n}\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var mrdlSliderThumbVertexShader = { name: name, shader: shader };\n//# sourceMappingURL=mrdlSliderThumb.vertex.js.map","import { __decorate, __extends } from \"tslib\";\nimport { SerializationHelper, serialize } from \"@babylonjs/core/Misc/decorators.js\";\nimport { Vector2, Vector3, Vector4 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { Texture } from \"@babylonjs/core/Materials/Textures/texture.js\";\nimport { MaterialDefines } from \"@babylonjs/core/Materials/materialDefines.js\";\nimport { MaterialHelper } from \"@babylonjs/core/Materials/materialHelper.js\";\nimport { PushMaterial } from \"@babylonjs/core/Materials/pushMaterial.js\";\nimport { VertexBuffer } from \"@babylonjs/core/Buffers/buffer.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { Color4 } from \"@babylonjs/core/Maths/math.color.js\";\nimport { EffectFallbacks } from \"@babylonjs/core/Materials/effectFallbacks.js\";\nimport { Constants } from \"@babylonjs/core/Engines/constants.js\";\nimport \"./shaders/mrdlSliderThumb.fragment.js\";\nimport \"./shaders/mrdlSliderThumb.vertex.js\";\n/** @hidden */\nvar MRDLSliderThumbMaterialDefines = /** @class */ (function (_super) {\n    __extends(MRDLSliderThumbMaterialDefines, _super);\n    function MRDLSliderThumbMaterialDefines() {\n        var _this = _super.call(this) || this;\n        /*\n            \"SKY_ENABLED\", \"BLOB_ENABLE_2\", \"IRIDESCENCE_ENABLED\"\n        */\n        _this.SKY_ENABLED = true;\n        _this.BLOB_ENABLE_2 = true;\n        _this.IRIDESCENCE_ENABLED = true;\n        _this._needNormals = true;\n        _this._needUVs = true;\n        _this.rebuild();\n        return _this;\n    }\n    return MRDLSliderThumbMaterialDefines;\n}(MaterialDefines));\n/**\n * Class used to render Slider Thumb material with MRDL\n */\nvar MRDLSliderThumbMaterial = /** @class */ (function (_super) {\n    __extends(MRDLSliderThumbMaterial, _super);\n    function MRDLSliderThumbMaterial(name, scene) {\n        var _this = _super.call(this, name, scene) || this;\n        /**\n         * Gets or sets the corner Radius on the slider thumb.\n         */\n        _this.radius = 0.157;\n        /**\n         * Gets or sets the Bevel Front on the slider thumb.\n         */\n        _this.bevelFront = 0.065;\n        /**\n         * Gets or sets the Bevel Front Stretch on the slider thumb.\n         */\n        _this.bevelFrontStretch = 0.077;\n        /**\n         * Gets or sets the Bevel Back on the slider thumb.\n         */\n        _this.bevelBack = 0.031;\n        /**\n         * Gets or sets the Bevel Back Stretch on the slider thumb.\n         */\n        _this.bevelBackStretch = 0;\n        /**\n         * Gets or sets the top left Radii Multiplier.\n         */\n        _this.radiusTopLeft = 1.0;\n        /**\n         * Gets or sets the top left Radii Multiplier.\n         */\n        _this.radiusTopRight = 1.0;\n        /**\n         * Gets or sets the top left Radii Multiplier.\n         */\n        _this.radiusBottomLeft = 1.0;\n        /**\n         * Gets or sets the top left Radii Multiplier.\n         */\n        _this.radiusBottomRight = 1.0;\n        /**\n         * Gets or sets whether Bulge is enabled.\n         * Default is false.\n         */\n        _this.bulgeEnabled = false;\n        /**\n         * Gets or sets the Bulge Height.\n         */\n        _this.bulgeHeight = -0.323;\n        /**\n         * Gets or sets the Bulge Radius.\n         */\n        _this.bulgeRadius = 0.73;\n        /**\n         * Gets or sets the Sun Intensity.\n         */\n        _this.sunIntensity = 2;\n        /**\n         * Gets or sets the Sun Theta.\n         */\n        _this.sunTheta = 0.937;\n        /**\n         * Gets or sets the Sun Phi.\n         */\n        _this.sunPhi = 0.555;\n        /**\n         * Gets or sets the Indirect Diffuse.\n         */\n        _this.indirectDiffuse = 1;\n        /**\n         * Gets or sets the base albedo.\n         */\n        _this.albedo = new Color4(0.0117647, 0.505882, 0.996078, 1);\n        /**\n         * Gets or sets the Specular value.\n         */\n        _this.specular = 0;\n        /**\n         * Gets or sets the Shininess value.\n         */\n        _this.shininess = 10;\n        /**\n         * Gets or sets the Sharpness value.\n         */\n        _this.sharpness = 0;\n        /**\n         * Gets or sets the Subsurface value.\n         */\n        _this.subsurface = 0.31;\n        /**\n         * Gets or sets the left gradient color.\n         */\n        _this.leftGradientColor = new Color4(0.0117647, 0.505882, 0.996078, 1);\n        /**\n         * Gets or sets the right gradient color.\n         */\n        _this.rightGradientColor = new Color4(0.0117647, 0.505882, 0.996078, 1);\n        /**\n         * Gets or sets the reflection value.\n         */\n        _this.reflection = 0.749;\n        /**\n         * Gets or sets the front reflect value.\n         */\n        _this.frontReflect = 0;\n        /**\n         * Gets or sets the edge reflect value.\n         */\n        _this.edgeReflect = 0.09;\n        /**\n         * Gets or sets the power value.\n         */\n        _this.power = 8.1;\n        /**\n         * Gets or sets the sky color.\n         */\n        _this.skyColor = new Color4(0.0117647, 0.960784, 0.996078, 1);\n        /**\n         * Gets or sets the horizon color.\n         */\n        _this.horizonColor = new Color4(0.0117647, 0.333333, 0.996078, 1);\n        /**\n         * Gets or sets the ground color.\n         */\n        _this.groundColor = new Color4(0, 0.254902, 0.996078, 1);\n        /**\n         * Gets or sets the horizon power value.\n         */\n        _this.horizonPower = 1;\n        /**\n         * Gets or sets the finger occlusion width value.\n         */\n        _this.width = 0.02;\n        /**\n         * Gets or sets the finger occlusion fuzz value.\n         */\n        _this.fuzz = 0.5;\n        /**\n         * Gets or sets the minimum finger occlusion fuzz value.\n         */\n        _this.minFuzz = 0.001;\n        /**\n         * Gets or sets the finger occlusion clip fade value.\n         */\n        _this.clipFade = 0.01;\n        /**\n         * Gets or sets the hue shift value.\n         */\n        _this.hueShift = 0;\n        /**\n         * Gets or sets the saturation shift value.\n         */\n        _this.saturationShift = 0;\n        /**\n         * Gets or sets the value shift.\n         */\n        _this.valueShift = 0;\n        /**\n         * Gets or sets the position of the hover glow effect.\n         */\n        _this.blobPosition = new Vector3(0, 0, 0.1);\n        /**\n         * Gets or sets the intensity of the hover glow effect.\n         */\n        _this.blobIntensity = 0.5;\n        /**\n         * Gets or sets the near size of the hover glow effect.\n         */\n        _this.blobNearSize = 0.01;\n        /**\n         * Gets or sets the far size of the hover glow effect.\n         */\n        _this.blobFarSize = 0.03;\n        /**\n         * Gets or sets the distance considered \"near\" to the mesh, which controls the size of the hover glow effect (see blobNearSize).\n         */\n        _this.blobNearDistance = 0;\n        /**\n         * Gets or sets the distance considered \"far\" from the mesh, which controls the size of the hover glow effect (see blobFarSize).\n         */\n        _this.blobFarDistance = 0.08;\n        /**\n         * Gets or sets the length of the hover glow effect fade.\n         */\n        _this.blobFadeLength = 0.576;\n        /**\n         * Gets or sets the progress of the hover glow effect selection animation corresponding to the left pointer (0.0 - 1.0).\n         */\n        _this.blobPulse = 0;\n        /**\n         * Gets or sets the opacity of the hover glow effect corresponding to the left pointer (0.0 - 1.0). Default is 0.\n         */\n        _this.blobFade = 1;\n        /**\n         * Gets or sets the position of the hover glow effect.\n         */\n        _this.blobPosition2 = new Vector3(0.2, 0, 0.1);\n        /**\n         * Gets or sets the size of the hover glow effect when the right pointer is considered \"near\" to the mesh (see blobNearDistance).\n         */\n        _this.blobNearSize2 = 0.01;\n        /**\n         * Gets or sets the progress of the hover glow effect selection animation corresponding to the right pointer (0.0 - 1.0).\n         */\n        _this.blobPulse2 = 0;\n        /**\n         * Gets or sets the opacity of the hover glow effect corresponding to the right pointer (0.0 - 1.0). Default is 1.\n         */\n        _this.blobFade2 = 1;\n        /**\n         * Gets or sets the texture of the hover glow effect.\n         */\n        _this.blobTexture = new Texture(\"\", _this.getScene());\n        /**\n         * Gets or sets the finger position for left index.\n         */\n        _this.leftIndexPosition = new Vector3(0, 0, 1);\n        /**\n         * Gets or sets the finger position for right index.\n         */\n        _this.rightIndexPosition = new Vector3(-1, -1, -1);\n        /**\n         * Gets or sets the finger position for left index middle position.\n         */\n        _this.leftIndexMiddlePosition = new Vector3(0, 0, 0);\n        /**\n         * Gets or sets the finger position for right index middle position.\n         */\n        _this.rightIndexMiddlePosition = new Vector3(0, 0, 0);\n        /**\n         * Gets or sets the Decal Scale for XY.\n         */\n        _this.decalScaleXY = new Vector2(1.5, 1.5);\n        /**\n         * Gets or sets decalFrontOnly\n         * Default is true\n         */\n        _this.decalFrontOnly = true;\n        /**\n         * Gets or sets the Rim Light intensity.\n         */\n        _this.rimIntensity = 0.287;\n        /**\n         * Gets or sets the Rim Light hue shift value.\n         */\n        _this.rimHueShift = 0;\n        /**\n         * Gets or sets the Rim Light saturation shift value.\n         */\n        _this.rimSaturationShift = 0;\n        /**\n         * Gets or sets the Rim Light value shift.\n         */\n        _this.rimValueShift = -1;\n        /**\n         * Gets or sets the intensity of the iridescence effect.\n         */\n        _this.iridescenceIntensity = 0;\n        /**\n         * @hidden\n         */\n        _this.useGlobalLeftIndex = 1.0;\n        /**\n         * @hidden\n         */\n        _this.useGlobalRightIndex = 1.0;\n        /**\n         * @hidden\n         */\n        _this.globalLeftIndexTipProximity = 0.0;\n        /**\n         * @hidden\n         */\n        _this.globalRightIndexTipProximity = 0.0;\n        /**\n         * @hidden\n         */\n        _this.globalLeftIndexTipPosition = new Vector4(0.5, 0.0, -0.55, 1.0);\n        /**\n         * @hidden\n         */\n        _this.globaRightIndexTipPosition = new Vector4(0.0, 0.0, 0.0, 1.0);\n        /**\n         * @hidden\n         */\n        _this.globalLeftThumbTipPosition = new Vector4(0.5, 0.0, -0.55, 1.0);\n        /**\n         * @hidden\n         */\n        _this.globalRightThumbTipPosition = new Vector4(0.0, 0.0, 0.0, 1.0);\n        /**\n         * @hidden\n         */\n        _this.globalLeftIndexMiddlePosition = new Vector4(0.5, 0.0, -0.55, 1.0);\n        /**\n         * @hidden\n         */\n        _this.globalRightIndexMiddlePosition = new Vector4(0.0, 0.0, 0.0, 1.0);\n        _this.alphaMode = Constants.ALPHA_DISABLE;\n        _this.backFaceCulling = false;\n        _this._blueGradientTexture = new Texture(MRDLSliderThumbMaterial.BLUE_GRADIENT_TEXTURE_URL, scene, true, false, Texture.NEAREST_SAMPLINGMODE);\n        return _this;\n    }\n    MRDLSliderThumbMaterial.prototype.needAlphaBlending = function () {\n        return false;\n    };\n    MRDLSliderThumbMaterial.prototype.needAlphaTesting = function () {\n        return false;\n    };\n    MRDLSliderThumbMaterial.prototype.getAlphaTestTexture = function () {\n        return null;\n    };\n    // Methods\n    MRDLSliderThumbMaterial.prototype.isReadyForSubMesh = function (mesh, subMesh) {\n        if (this.isFrozen) {\n            if (subMesh.effect && subMesh.effect._wasPreviouslyReady) {\n                return true;\n            }\n        }\n        if (!subMesh.materialDefines) {\n            subMesh.materialDefines = new MRDLSliderThumbMaterialDefines();\n        }\n        var defines = subMesh.materialDefines;\n        var scene = this.getScene();\n        if (this._isReadyForSubMesh(subMesh)) {\n            return true;\n        }\n        var engine = scene.getEngine();\n        // Attribs\n        MaterialHelper.PrepareDefinesForAttributes(mesh, defines, false, false);\n        // Get correct effect\n        if (defines.isDirty) {\n            defines.markAsProcessed();\n            scene.resetCachedMaterial();\n            // Fallbacks\n            var fallbacks = new EffectFallbacks();\n            if (defines.FOG) {\n                fallbacks.addFallback(1, \"FOG\");\n            }\n            MaterialHelper.HandleFallbacksForShadows(defines, fallbacks);\n            defines.IMAGEPROCESSINGPOSTPROCESS = scene.imageProcessingConfiguration.applyByPostProcess;\n            //Attributes\n            var attribs = [VertexBuffer.PositionKind];\n            if (defines.NORMAL) {\n                attribs.push(VertexBuffer.NormalKind);\n            }\n            if (defines.UV1) {\n                attribs.push(VertexBuffer.UVKind);\n            }\n            if (defines.UV2) {\n                attribs.push(VertexBuffer.UV2Kind);\n            }\n            if (defines.VERTEXCOLOR) {\n                attribs.push(VertexBuffer.ColorKind);\n            }\n            if (defines.TANGENT) {\n                attribs.push(VertexBuffer.TangentKind);\n            }\n            MaterialHelper.PrepareAttributesForInstances(attribs, defines);\n            // Legacy browser patch\n            var shaderName = \"mrdlSliderThumb\";\n            var join = defines.toString();\n            var uniforms = [\n                \"world\",\n                \"viewProjection\",\n                \"cameraPosition\",\n                \"_Radius_\",\n                \"_Bevel_Front_\",\n                \"_Bevel_Front_Stretch_\",\n                \"_Bevel_Back_\",\n                \"_Bevel_Back_Stretch_\",\n                \"_Radius_Top_Left_\",\n                \"_Radius_Top_Right_\",\n                \"_Radius_Bottom_Left_\",\n                \"_Radius_Bottom_Right_\",\n                \"_Bulge_Enabled_\",\n                \"_Bulge_Height_\",\n                \"_Bulge_Radius_\",\n                \"_Sun_Intensity_\",\n                \"_Sun_Theta_\",\n                \"_Sun_Phi_\",\n                \"_Indirect_Diffuse_\",\n                \"_Albedo_\",\n                \"_Specular_\",\n                \"_Shininess_\",\n                \"_Sharpness_\",\n                \"_Subsurface_\",\n                \"_Left_Color_\",\n                \"_Right_Color_\",\n                \"_Reflection_\",\n                \"_Front_Reflect_\",\n                \"_Edge_Reflect_\",\n                \"_Power_\",\n                \"_Sky_Color_\",\n                \"_Horizon_Color_\",\n                \"_Ground_Color_\",\n                \"_Horizon_Power_\",\n                \"_Reflection_Map_\",\n                \"_Indirect_Environment_\",\n                \"_Width_\",\n                \"_Fuzz_\",\n                \"_Min_Fuzz_\",\n                \"_Clip_Fade_\",\n                \"_Hue_Shift_\",\n                \"_Saturation_Shift_\",\n                \"_Value_Shift_\",\n                \"_Blob_Position_\",\n                \"_Blob_Intensity_\",\n                \"_Blob_Near_Size_\",\n                \"_Blob_Far_Size_\",\n                \"_Blob_Near_Distance_\",\n                \"_Blob_Far_Distance_\",\n                \"_Blob_Fade_Length_\",\n                \"_Blob_Pulse_\",\n                \"_Blob_Fade_\",\n                \"_Blob_Texture_\",\n                \"_Blob_Position_2_\",\n                \"_Blob_Near_Size_2_\",\n                \"_Blob_Pulse_2_\",\n                \"_Blob_Fade_2_\",\n                \"_Left_Index_Pos_\",\n                \"_Right_Index_Pos_\",\n                \"_Left_Index_Middle_Pos_\",\n                \"_Right_Index_Middle_Pos_\",\n                \"_Decal_\",\n                \"_Decal_Scale_XY_\",\n                \"_Decal_Front_Only_\",\n                \"_Rim_Intensity_\",\n                \"_Rim_Texture_\",\n                \"_Rim_Hue_Shift_\",\n                \"_Rim_Saturation_Shift_\",\n                \"_Rim_Value_Shift_\",\n                \"_Iridescence_Intensity_\",\n                \"_Iridescence_Texture_\",\n                \"Use_Global_Left_Index\",\n                \"Use_Global_Right_Index\",\n                \"Global_Left_Index_Tip_Position\",\n                \"Global_Right_Index_Tip_Position\",\n                \"Global_Left_Thumb_Tip_Position\",\n                \"Global_Right_Thumb_Tip_Position\",\n                \"Global_Left_Index_Middle_Position;\",\n                \"Global_Right_Index_Middle_Position\",\n                \"Global_Left_Index_Tip_Proximity\",\n                \"Global_Right_Index_Tip_Proximity\",\n            ];\n            var samplers = [\"_Rim_Texture_\", \"_Iridescence_Texture_\"];\n            var uniformBuffers = new Array();\n            MaterialHelper.PrepareUniformsAndSamplersList({\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: defines,\n                maxSimultaneousLights: 4,\n            });\n            subMesh.setEffect(scene.getEngine().createEffect(shaderName, {\n                attributes: attribs,\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: join,\n                fallbacks: fallbacks,\n                onCompiled: this.onCompiled,\n                onError: this.onError,\n                indexParameters: { maxSimultaneousLights: 4 },\n            }, engine), defines);\n        }\n        if (!subMesh.effect || !subMesh.effect.isReady()) {\n            return false;\n        }\n        defines._renderId = scene.getRenderId();\n        subMesh.effect._wasPreviouslyReady = true;\n        return true;\n    };\n    MRDLSliderThumbMaterial.prototype.bindForSubMesh = function (world, mesh, subMesh) {\n        var defines = subMesh.materialDefines;\n        if (!defines) {\n            return;\n        }\n        var effect = subMesh.effect;\n        if (!effect) {\n            return;\n        }\n        this._activeEffect = effect;\n        // Matrices\n        this.bindOnlyWorldMatrix(world);\n        this._activeEffect.setMatrix(\"viewProjection\", this.getScene().getTransformMatrix());\n        this._activeEffect.setVector3(\"cameraPosition\", this.getScene().activeCamera.position);\n        // \"Round Rect\"\n        this._activeEffect.setFloat(\"_Radius_\", this.radius);\n        this._activeEffect.setFloat(\"_Bevel_Front_\", this.bevelFront);\n        this._activeEffect.setFloat(\"_Bevel_Front_Stretch_\", this.bevelFrontStretch);\n        this._activeEffect.setFloat(\"_Bevel_Back_\", this.bevelBack);\n        this._activeEffect.setFloat(\"_Bevel_Back_Stretch_\", this.bevelBackStretch);\n        // \"Radii Multipliers\"\n        this._activeEffect.setFloat(\"_Radius_Top_Left_\", this.radiusTopLeft);\n        this._activeEffect.setFloat(\"_Radius_Top_Right_\", this.radiusTopRight);\n        this._activeEffect.setFloat(\"_Radius_Bottom_Left_\", this.radiusBottomLeft);\n        this._activeEffect.setFloat(\"_Radius_Bottom_Right_\", this.radiusBottomRight);\n        // \"Bulge\"\n        this._activeEffect.setFloat(\"_Bulge_Enabled_\", this.bulgeEnabled ? 1.0 : 0.0);\n        this._activeEffect.setFloat(\"_Bulge_Height_\", this.bulgeHeight);\n        this._activeEffect.setFloat(\"_Bulge_Radius_\", this.bulgeRadius);\n        // \"Sun\"\n        this._activeEffect.setFloat(\"_Sun_Intensity_\", this.sunIntensity);\n        this._activeEffect.setFloat(\"_Sun_Theta_\", this.sunTheta);\n        this._activeEffect.setFloat(\"_Sun_Phi_\", this.sunPhi);\n        this._activeEffect.setFloat(\"_Indirect_Diffuse_\", this.indirectDiffuse);\n        // \"Diffuse And Specular\"\n        this._activeEffect.setDirectColor4(\"_Albedo_\", this.albedo);\n        this._activeEffect.setFloat(\"_Specular_\", this.specular);\n        this._activeEffect.setFloat(\"_Shininess_\", this.shininess);\n        this._activeEffect.setFloat(\"_Sharpness_\", this.sharpness);\n        this._activeEffect.setFloat(\"_Subsurface_\", this.subsurface);\n        // \"Gradient\"\n        this._activeEffect.setDirectColor4(\"_Left_Color_\", this.leftGradientColor);\n        this._activeEffect.setDirectColor4(\"_Right_Color_\", this.rightGradientColor);\n        // \"Reflection\"\n        this._activeEffect.setFloat(\"_Reflection_\", this.reflection);\n        this._activeEffect.setFloat(\"_Front_Reflect_\", this.frontReflect);\n        this._activeEffect.setFloat(\"_Edge_Reflect_\", this.edgeReflect);\n        this._activeEffect.setFloat(\"_Power_\", this.power);\n        // \"Sky Environment\"\n        //define SKY_ENABLED true;\n        this._activeEffect.setDirectColor4(\"_Sky_Color_\", this.skyColor);\n        this._activeEffect.setDirectColor4(\"_Horizon_Color_\", this.horizonColor);\n        this._activeEffect.setDirectColor4(\"_Ground_Color_\", this.groundColor);\n        this._activeEffect.setFloat(\"_Horizon_Power_\", this.horizonPower);\n        // \"Mapped Environment\"\n        //define ENV_ENABLE false;\n        this._activeEffect.setTexture(\"_Reflection_Map_\", new Texture(\"\", this.getScene()));\n        this._activeEffect.setTexture(\"_Indirect_Environment_\", new Texture(\"\", this.getScene()));\n        // \"FingerOcclusion\"\n        //define OCCLUSION_ENABLED false;\n        this._activeEffect.setFloat(\"_Width_\", this.width);\n        this._activeEffect.setFloat(\"_Fuzz_\", this.fuzz);\n        this._activeEffect.setFloat(\"_Min_Fuzz_\", this.minFuzz);\n        this._activeEffect.setFloat(\"_Clip_Fade_\", this.clipFade);\n        // \"View Based Color Shift\"\n        this._activeEffect.setFloat(\"_Hue_Shift_\", this.hueShift);\n        this._activeEffect.setFloat(\"_Saturation_Shift_\", this.saturationShift);\n        this._activeEffect.setFloat(\"_Value_Shift_\", this.valueShift);\n        // \"Blob\"\n        //define BLOB_ENABLE false;\n        this._activeEffect.setVector3(\"_Blob_Position_\", this.blobPosition);\n        this._activeEffect.setFloat(\"_Blob_Intensity_\", this.blobIntensity);\n        this._activeEffect.setFloat(\"_Blob_Near_Size_\", this.blobNearSize);\n        this._activeEffect.setFloat(\"_Blob_Far_Size_\", this.blobFarSize);\n        this._activeEffect.setFloat(\"_Blob_Near_Distance_\", this.blobNearDistance);\n        this._activeEffect.setFloat(\"_Blob_Far_Distance_\", this.blobFarDistance);\n        this._activeEffect.setFloat(\"_Blob_Fade_Length_\", this.blobFadeLength);\n        this._activeEffect.setFloat(\"_Blob_Pulse_\", this.blobPulse);\n        this._activeEffect.setFloat(\"_Blob_Fade_\", this.blobFade);\n        // \"Blob Texture\"\n        this._activeEffect.setTexture(\"_Blob_Texture_\", this.blobTexture);\n        // \"Blob 2\"\n        //define BLOB_ENABLE_2 true;\n        this._activeEffect.setVector3(\"_Blob_Position_2_\", this.blobPosition2);\n        this._activeEffect.setFloat(\"_Blob_Near_Size_2_\", this.blobNearSize2);\n        this._activeEffect.setFloat(\"_Blob_Pulse_2_\", this.blobPulse2);\n        this._activeEffect.setFloat(\"_Blob_Fade_2_\", this.blobFade2);\n        // \"Finger Positions\"\n        this._activeEffect.setVector3(\"_Left_Index_Pos_\", this.leftIndexPosition);\n        this._activeEffect.setVector3(\"_Right_Index_Pos_\", this.rightIndexPosition);\n        this._activeEffect.setVector3(\"_Left_Index_Middle_Pos_\", this.leftIndexMiddlePosition);\n        this._activeEffect.setVector3(\"_Right_Index_Middle_Pos_\", this.rightIndexMiddlePosition);\n        // \"Decal Texture\"\n        //define DECAL_ENABLE false;\n        this._activeEffect.setTexture(\"_Decal_\", new Texture(\"\", this.getScene()));\n        this._activeEffect.setVector2(\"_Decal_Scale_XY_\", this.decalScaleXY);\n        this._activeEffect.setFloat(\"_Decal_Front_Only_\", this.decalFrontOnly ? 1.0 : 0.0);\n        // \"Rim Light\"\n        this._activeEffect.setFloat(\"_Rim_Intensity_\", this.rimIntensity);\n        this._activeEffect.setTexture(\"_Rim_Texture_\", this._blueGradientTexture);\n        this._activeEffect.setFloat(\"_Rim_Hue_Shift_\", this.rimHueShift);\n        this._activeEffect.setFloat(\"_Rim_Saturation_Shift_\", this.rimSaturationShift);\n        this._activeEffect.setFloat(\"_Rim_Value_Shift_\", this.rimValueShift);\n        // \"Iridescence\"\n        //define IRIDESCENCE_ENABLED true;\n        this._activeEffect.setFloat(\"_Iridescence_Intensity_\", this.iridescenceIntensity);\n        this._activeEffect.setTexture(\"_Iridescence_Texture_\", this._blueGradientTexture);\n        // Global inputs\n        this._activeEffect.setFloat(\"Use_Global_Left_Index\", this.useGlobalLeftIndex);\n        this._activeEffect.setFloat(\"Use_Global_Right_Index\", this.useGlobalRightIndex);\n        this._activeEffect.setVector4(\"Global_Left_Index_Tip_Position\", this.globalLeftIndexTipPosition);\n        this._activeEffect.setVector4(\"Global_Right_Index_Tip_Position\", this.globaRightIndexTipPosition);\n        this._activeEffect.setVector4(\"Global_Left_Thumb_Tip_Position\", this.globalLeftThumbTipPosition);\n        this._activeEffect.setVector4(\"Global_Right_Thumb_Tip_Position\", this.globalRightThumbTipPosition);\n        this._activeEffect.setVector4(\"Global_Left_Index_Middle_Position\", this.globalLeftIndexMiddlePosition);\n        this._activeEffect.setVector4(\"Global_Right_Index_Middle_Position\", this.globalRightIndexMiddlePosition);\n        this._activeEffect.setFloat(\"Global_Left_Index_Tip_Proximity\", this.globalLeftIndexTipProximity);\n        this._activeEffect.setFloat(\"Global_Right_Index_Tip_Proximity\", this.globalRightIndexTipProximity);\n        this._afterBind(mesh, this._activeEffect);\n    };\n    /**\n     * Get the list of animatables in the material.\n     * @returns the list of animatables object used in the material\n     */\n    MRDLSliderThumbMaterial.prototype.getAnimatables = function () {\n        return [];\n    };\n    MRDLSliderThumbMaterial.prototype.dispose = function (forceDisposeEffect) {\n        _super.prototype.dispose.call(this, forceDisposeEffect);\n    };\n    MRDLSliderThumbMaterial.prototype.clone = function (name) {\n        var _this = this;\n        return SerializationHelper.Clone(function () { return new MRDLSliderThumbMaterial(name, _this.getScene()); }, this);\n    };\n    MRDLSliderThumbMaterial.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.customType = \"BABYLON.MRDLSliderThumbMaterial\";\n        return serializationObject;\n    };\n    MRDLSliderThumbMaterial.prototype.getClassName = function () {\n        return \"MRDLSliderThumbMaterial\";\n    };\n    // Statics\n    MRDLSliderThumbMaterial.Parse = function (source, scene, rootUrl) {\n        return SerializationHelper.Parse(function () { return new MRDLSliderThumbMaterial(source.name, scene); }, source, scene, rootUrl);\n    };\n    /**\n     * URL pointing to the texture used to define the coloring for the Iridescent Map effect.\n     */\n    MRDLSliderThumbMaterial.BLUE_GRADIENT_TEXTURE_URL = \"https://assets.babylonjs.com/meshes/MRTK/MRDL/mrtk-mrdl-blue-gradient.png\";\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"radius\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"bevelFront\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"bevelFrontStretch\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"bevelBack\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"bevelBackStretch\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"radiusTopLeft\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"radiusTopRight\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"radiusBottomLeft\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"radiusBottomRight\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"bulgeEnabled\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"bulgeHeight\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"bulgeRadius\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"sunIntensity\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"sunTheta\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"sunPhi\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"indirectDiffuse\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"albedo\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"specular\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"shininess\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"sharpness\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"subsurface\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"leftGradientColor\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"rightGradientColor\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"reflection\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"frontReflect\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"edgeReflect\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"power\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"skyColor\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"horizonColor\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"groundColor\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"horizonPower\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"width\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"fuzz\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"minFuzz\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"clipFade\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"hueShift\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"saturationShift\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"valueShift\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"blobPosition\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"blobIntensity\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"blobNearSize\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"blobFarSize\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"blobNearDistance\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"blobFarDistance\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"blobFadeLength\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"blobPulse\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"blobFade\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"blobPosition2\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"blobNearSize2\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"blobPulse2\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"blobFade2\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"blobTexture\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"leftIndexPosition\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"rightIndexPosition\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"leftIndexMiddlePosition\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"rightIndexMiddlePosition\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"decalScaleXY\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"decalFrontOnly\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"rimIntensity\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"rimHueShift\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"rimSaturationShift\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"rimValueShift\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLSliderThumbMaterial.prototype, \"iridescenceIntensity\", void 0);\n    return MRDLSliderThumbMaterial;\n}(PushMaterial));\nexport { MRDLSliderThumbMaterial };\nRegisterClass(\"BABYLON.GUI.MRDLSliderThumbMaterial\", MRDLSliderThumbMaterial);\n//# sourceMappingURL=mrdlSliderThumbMaterial.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nvar name = \"mrdlBackplatePixelShader\";\nvar shader = \"uniform vec3 cameraPosition;\\nvarying vec3 vPosition;\\nvarying vec3 vNormal;\\nvarying vec2 vUV;\\nvarying vec3 vTangent;\\nvarying vec3 vBinormal;\\nvarying vec4 vExtra1;\\nvarying vec4 vExtra2;\\nuniform float _Radius_;\\nuniform float _Line_Width_;\\nuniform bool _Absolute_Sizes_;\\nuniform float _Filter_Width_;\\nuniform vec4 _Base_Color_;\\nuniform vec4 _Line_Color_;\\nuniform float _Radius_Top_Left_;\\nuniform float _Radius_Top_Right_;\\nuniform float _Radius_Bottom_Left_;\\nuniform float _Radius_Bottom_Right_;\\nuniform float _Rate_;\\nuniform vec4 _Highlight_Color_;\\nuniform float _Highlight_Width_;\\nuniform vec4 _Highlight_Transform_;\\nuniform float _Highlight_;\\nuniform float _Iridescence_Intensity_;\\nuniform float _Iridescence_Edge_Intensity_;\\nuniform vec4 _Iridescence_Tint_;\\nuniform sampler2D _Iridescent_Map_;\\nuniform float _Angle_;\\nuniform bool _Reflected_;\\nuniform float _Frequency_;\\nuniform float _Vertical_Offset_;\\nuniform vec4 _Gradient_Color_;\\nuniform vec4 _Top_Left_;\\nuniform vec4 _Top_Right_;\\nuniform vec4 _Bottom_Left_;\\nuniform vec4 _Bottom_Right_;\\nuniform float _Edge_Width_;\\nuniform float _Edge_Power_;\\nuniform float _Line_Gradient_Blend_;\\nuniform float _Fade_Out_;\\nvoid FastLinearTosRGB_B353(\\nvec4 Linear,\\nout vec4 sRGB)\\n{\\nsRGB.rgb=sqrt(clamp(Linear.rgb,0.0,1.0));\\nsRGB.a=Linear.a;\\n}\\nvoid Round_Rect_Fragment_B332(\\nfloat Radius,\\nfloat Line_Width,\\nvec4 Line_Color,\\nfloat Filter_Width,\\nvec2 UV,\\nfloat Line_Visibility,\\nvec4 Rect_Parms,\\nvec4 Fill_Color,\\nout vec4 Color)\\n{\\nfloat d=length(max(abs(UV)-Rect_Parms.xy,0.0));\\nfloat dx=max(fwidth(d)*Filter_Width,0.00001);\\nfloat g=min(Rect_Parms.z,Rect_Parms.w);\\nfloat dgrad=max(fwidth(g)*Filter_Width,0.00001);\\nfloat Inside_Rect=clamp(g/dgrad,0.0,1.0);\\nfloat inner=clamp((d+dx*0.5-max(Radius-Line_Width,d-dx*0.5))/dx,0.0,1.0);\\nColor=clamp(mix(Fill_Color,Line_Color,inner),0.0,1.0)*Inside_Rect;\\n}\\nvoid Iridescence_B343(\\nvec3 Position,\\nvec3 Normal,\\nvec2 UV,\\nvec3 Axis,\\nvec3 Eye,\\nvec4 Tint,\\nsampler2D Texture,\\nbool Reflected,\\nfloat Frequency,\\nfloat Vertical_Offset,\\nout vec4 Color)\\n{\\nvec3 i=normalize(Position-Eye);\\nvec3 r=reflect(i,Normal);\\nfloat idota=dot(i,Axis);\\nfloat idotr=dot(i,r);\\nfloat x=Reflected ? idotr : idota;\\nvec2 xy;\\nxy.x=fract((x*Frequency+1.0)*0.5+UV.y*Vertical_Offset);\\nxy.y=0.5;\\nColor=texture(Texture,xy);\\nColor.rgb*=Tint.rgb;\\n}\\nvoid Scale_RGB_B346(\\nvec4 Color,\\nfloat Scalar,\\nout vec4 Result)\\n{\\nResult=vec4(Scalar,Scalar,Scalar,1)*Color;\\n}\\nvoid Scale_RGB_B344(\\nfloat Scalar,\\nvec4 Color,\\nout vec4 Result)\\n{\\nResult=vec4(Scalar,Scalar,Scalar,1)*Color;\\n}\\nvoid Line_Fragment_B362(\\nvec4 Base_Color,\\nvec4 Highlight_Color,\\nfloat Highlight_Width,\\nvec3 Line_Vertex,\\nfloat Highlight,\\nout vec4 Line_Color)\\n{\\nfloat k2=1.0-clamp(abs(Line_Vertex.y/Highlight_Width),0.0,1.0);\\nLine_Color=mix(Base_Color,Highlight_Color,Highlight*k2);\\n}\\nvoid Edge_B356(\\nvec4 RectParms,\\nfloat Radius,\\nfloat Line_Width,\\nvec2 UV,\\nfloat Edge_Width,\\nfloat Edge_Power,\\nout float Result)\\n{\\nfloat d=length(max(abs(UV)-RectParms.xy,0.0));\\nfloat edge=1.0-clamp((1.0-d/(Radius-Line_Width))/Edge_Width,0.0,1.0);\\nResult=pow(edge,Edge_Power);\\n}\\nvoid Gradient_B355(\\nvec4 Gradient_Color,\\nvec4 Top_Left,\\nvec4 Top_Right,\\nvec4 Bottom_Left,\\nvec4 Bottom_Right,\\nvec2 UV,\\nout vec4 Result)\\n{\\nvec3 top=Top_Left.rgb+(Top_Right.rgb-Top_Left.rgb)*UV.x;\\nvec3 bottom=Bottom_Left.rgb+(Bottom_Right.rgb-Bottom_Left.rgb)*UV.x;\\nResult.rgb=Gradient_Color.rgb*(bottom+(top-bottom)*UV.y);\\nResult.a=1.0;\\n}\\nvoid main()\\n{\\nfloat X_Q338;\\nfloat Y_Q338;\\nfloat Z_Q338;\\nfloat W_Q338;\\nX_Q338=vExtra2.x;\\nY_Q338=vExtra2.y;\\nZ_Q338=vExtra2.z;\\nW_Q338=vExtra2.w;\\nvec4 Color_Q343;\\n#if IRIDESCENCE_ENABLE\\nIridescence_B343(vPosition,vNormal,vUV,vBinormal,cameraPosition,_Iridescence_Tint_,_Iridescent_Map_,_Reflected_,_Frequency_,_Vertical_Offset_,Color_Q343);\\n#else\\nColor_Q343=vec4(0,0,0,0);\\n#endif\\nvec4 Result_Q344;\\nScale_RGB_B344(_Iridescence_Intensity_,Color_Q343,Result_Q344);\\nvec4 Line_Color_Q362;\\nLine_Fragment_B362(_Line_Color_,_Highlight_Color_,_Highlight_Width_,vTangent,_Highlight_,Line_Color_Q362);\\nfloat Result_Q356;\\n#if EDGE_ONLY\\nEdge_B356(vExtra1,Z_Q338,W_Q338,vUV,_Edge_Width_,_Edge_Power_,Result_Q356);\\n#else\\nResult_Q356=1.0;\\n#endif\\nvec2 Vec2_Q339=vec2(X_Q338,Y_Q338);\\nvec4 Result_Q355;\\nGradient_B355(_Gradient_Color_,_Top_Left_,_Top_Right_,_Bottom_Left_,_Bottom_Right_,Vec2_Q339,Result_Q355);\\nvec4 Linear_Q348;\\nLinear_Q348.rgb=clamp(Result_Q355.rgb*Result_Q355.rgb,0.0,1.0);\\nLinear_Q348.a=Result_Q355.a;\\nvec4 Result_Q346;\\nScale_RGB_B346(Linear_Q348,Result_Q356,Result_Q346);\\nvec4 Sum_Q345=Result_Q346+Result_Q344;\\nvec4 Color_At_T_Q347=mix(Line_Color_Q362,Result_Q346,_Line_Gradient_Blend_);\\nvec4 Base_And_Iridescent_Q350;\\nBase_And_Iridescent_Q350=_Base_Color_+vec4(Sum_Q345.rgb,0.0);\\nvec4 Sum_Q349=Color_At_T_Q347+_Iridescence_Edge_Intensity_*Color_Q343;\\nvec4 Result_Q351=Sum_Q349; Result_Q351.a=1.0;\\nvec4 Color_Q332;\\nRound_Rect_Fragment_B332(Z_Q338,W_Q338,Result_Q351,_Filter_Width_,vUV,1.0,vExtra1,Base_And_Iridescent_Q350,Color_Q332);\\nvec4 Result_Q354=_Fade_Out_*Color_Q332;\\nvec4 sRGB_Q353;\\nFastLinearTosRGB_B353(Result_Q354,sRGB_Q353);\\nvec4 Out_Color=sRGB_Q353;\\nfloat Clip_Threshold=0.001;\\nbool To_sRGB=false;\\ngl_FragColor=Out_Color;\\n}\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var mrdlBackplatePixelShader = { name: name, shader: shader };\n//# sourceMappingURL=mrdlBackplate.fragment.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nvar name = \"mrdlBackplateVertexShader\";\nvar shader = \"uniform mat4 world;\\nuniform mat4 viewProjection;\\nuniform vec3 cameraPosition;\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec3 tangent;\\nuniform float _Radius_;\\nuniform float _Line_Width_;\\nuniform bool _Absolute_Sizes_;\\nuniform float _Filter_Width_;\\nuniform vec4 _Base_Color_;\\nuniform vec4 _Line_Color_;\\nuniform float _Radius_Top_Left_;\\nuniform float _Radius_Top_Right_;\\nuniform float _Radius_Bottom_Left_;\\nuniform float _Radius_Bottom_Right_;\\nuniform float _Rate_;\\nuniform vec4 _Highlight_Color_;\\nuniform float _Highlight_Width_;\\nuniform vec4 _Highlight_Transform_;\\nuniform float _Highlight_;\\nuniform float _Iridescence_Intensity_;\\nuniform float _Iridescence_Edge_Intensity_;\\nuniform vec4 _Iridescence_Tint_;\\nuniform sampler2D _Iridescent_Map_;\\nuniform float _Angle_;\\nuniform bool _Reflected_;\\nuniform float _Frequency_;\\nuniform float _Vertical_Offset_;\\nuniform vec4 _Gradient_Color_;\\nuniform vec4 _Top_Left_;\\nuniform vec4 _Top_Right_;\\nuniform vec4 _Bottom_Left_;\\nuniform vec4 _Bottom_Right_;\\nuniform float _Edge_Width_;\\nuniform float _Edge_Power_;\\nuniform float _Line_Gradient_Blend_;\\nuniform float _Fade_Out_;\\nvarying vec3 vPosition;\\nvarying vec3 vNormal;\\nvarying vec2 vUV;\\nvarying vec3 vTangent;\\nvarying vec3 vBinormal;\\nvarying vec4 vExtra1;\\nvarying vec4 vExtra2;\\nvoid Object_To_World_Pos_B314(\\nvec3 Pos_Object,\\nout vec3 Pos_World)\\n{\\nPos_World=(world*vec4(Pos_Object,1.0)).xyz;\\n}\\nvoid Round_Rect_Vertex_B357(\\nvec2 UV,\\nfloat Radius,\\nfloat Margin,\\nfloat Anisotropy,\\nfloat Gradient1,\\nfloat Gradient2,\\nvec3 Normal,\\nvec4 Color_Scale_Translate,\\nout vec2 Rect_UV,\\nout vec4 Rect_Parms,\\nout vec2 Scale_XY,\\nout vec2 Line_UV,\\nout vec2 Color_UV_Info)\\n{\\nScale_XY=vec2(Anisotropy,1.0);\\nLine_UV=(UV-vec2(0.5,0.5));\\nRect_UV=Line_UV*Scale_XY;\\nRect_Parms.xy=Scale_XY*0.5-vec2(Radius,Radius)-vec2(Margin,Margin);\\nRect_Parms.z=Gradient1; \\nRect_Parms.w=Gradient2;\\nColor_UV_Info=(Line_UV+vec2(0.5,0.5))*Color_Scale_Translate.xy+Color_Scale_Translate.zw;\\n}\\nvoid Line_Vertex_B333(\\nvec2 Scale_XY,\\nvec2 UV,\\nfloat Time,\\nfloat Rate,\\nvec4 Highlight_Transform,\\nout vec3 Line_Vertex)\\n{\\nfloat angle2=(Rate*Time)*2.0*3.1416;\\nfloat sinAngle2=sin(angle2);\\nfloat cosAngle2=cos(angle2);\\nvec2 xformUV=UV*Highlight_Transform.xy+Highlight_Transform.zw;\\nLine_Vertex.x=0.0;\\nLine_Vertex.y=cosAngle2*xformUV.x-sinAngle2*xformUV.y;\\nLine_Vertex.z=0.0; \\n}\\nvoid PickDir_B334(\\nfloat Degrees,\\nvec3 DirX,\\nvec3 DirY,\\nout vec3 Dir)\\n{\\nfloat a=Degrees*3.14159/180.0;\\nDir=cos(a)*DirX+sin(a)*DirY;\\n}\\nvoid Move_Verts_B327(\\nfloat Anisotropy,\\nvec3 P,\\nfloat Radius,\\nout vec3 New_P,\\nout vec2 New_UV,\\nout float Radial_Gradient,\\nout vec3 Radial_Dir)\\n{\\nvec2 UV=P.xy*2.0+0.5;\\nvec2 center=clamp(UV,0.0,1.0);\\nvec2 delta=UV-center;\\nvec2 r2=2.0*vec2(Radius/Anisotropy,Radius);\\nNew_UV=center+r2*(UV-2.0*center+0.5);\\nNew_P=vec3(New_UV-0.5,P.z);\\nRadial_Gradient=1.0-length(delta)*2.0;\\nRadial_Dir=vec3(delta*r2,0.0);\\n}\\nvoid Pick_Radius_B336(\\nfloat Radius,\\nfloat Radius_Top_Left,\\nfloat Radius_Top_Right,\\nfloat Radius_Bottom_Left,\\nfloat Radius_Bottom_Right,\\nvec3 Position,\\nout float Result)\\n{\\nbool whichY=Position.y>0.0;\\nResult=Position.x<0.0 ? (whichY ? Radius_Top_Left : Radius_Bottom_Left) : (whichY ? Radius_Top_Right : Radius_Bottom_Right);\\nResult*=Radius;\\n}\\nvoid Edge_AA_Vertex_B328(\\nvec3 Position_World,\\nvec3 Position_Object,\\nvec3 Normal_Object,\\nvec3 Eye,\\nfloat Radial_Gradient,\\nvec3 Radial_Dir,\\nvec3 Tangent,\\nout float Gradient1,\\nout float Gradient2)\\n{\\nvec3 I=(Eye-Position_World);\\nvec3 T=(vec4(Tangent,0.0)).xyz;\\nfloat g=(dot(T,I)<0.0) ? 0.0 : 1.0;\\nif (Normal_Object.z==0.0) { \\nGradient1=Position_Object.z>0.0 ? g : 1.0;\\nGradient2=Position_Object.z>0.0 ? 1.0 : g;\\n} else {\\nGradient1=g+(1.0-g)*(Radial_Gradient);\\nGradient2=1.0;\\n}\\n}\\nvoid Object_To_World_Dir_B330(\\nvec3 Dir_Object,\\nout vec3 Binormal_World,\\nout vec3 Binormal_World_N,\\nout float Binormal_Length)\\n{\\nBinormal_World=(world*vec4(Dir_Object,0.0)).xyz;\\nBinormal_Length=length(Binormal_World);\\nBinormal_World_N=Binormal_World/Binormal_Length;\\n}\\nvoid RelativeOrAbsoluteDetail_B341(\\nfloat Nominal_Radius,\\nfloat Nominal_LineWidth,\\nbool Absolute_Measurements,\\nfloat Height,\\nout float Radius,\\nout float Line_Width)\\n{\\nfloat scale=Absolute_Measurements ? 1.0/Height : 1.0;\\nRadius=Nominal_Radius*scale;\\nLine_Width=Nominal_LineWidth*scale;\\n}\\nvoid main()\\n{\\nvec3 Nrm_World_Q326;\\nNrm_World_Q326=normalize((world*vec4(normal,0.0)).xyz);\\nvec3 Tangent_World_Q329;\\nvec3 Tangent_World_N_Q329;\\nfloat Tangent_Length_Q329;\\nTangent_World_Q329=(world*vec4(vec3(1,0,0),0.0)).xyz;\\nTangent_Length_Q329=length(Tangent_World_Q329);\\nTangent_World_N_Q329=Tangent_World_Q329/Tangent_Length_Q329;\\nvec3 Binormal_World_Q330;\\nvec3 Binormal_World_N_Q330;\\nfloat Binormal_Length_Q330;\\nObject_To_World_Dir_B330(vec3(0,1,0),Binormal_World_Q330,Binormal_World_N_Q330,Binormal_Length_Q330);\\nfloat Radius_Q341;\\nfloat Line_Width_Q341;\\nRelativeOrAbsoluteDetail_B341(_Radius_,_Line_Width_,_Absolute_Sizes_,Binormal_Length_Q330,Radius_Q341,Line_Width_Q341);\\nvec3 Dir_Q334;\\nPickDir_B334(_Angle_,Tangent_World_N_Q329,Binormal_World_N_Q330,Dir_Q334);\\nfloat Result_Q336;\\nPick_Radius_B336(Radius_Q341,_Radius_Top_Left_,_Radius_Top_Right_,_Radius_Bottom_Left_,_Radius_Bottom_Right_,position,Result_Q336);\\nfloat Anisotropy_Q331=Tangent_Length_Q329/Binormal_Length_Q330;\\nvec4 Out_Color_Q337=vec4(Result_Q336,Line_Width_Q341,0,1);\\nvec3 New_P_Q327;\\nvec2 New_UV_Q327;\\nfloat Radial_Gradient_Q327;\\nvec3 Radial_Dir_Q327;\\nMove_Verts_B327(Anisotropy_Q331,position,Result_Q336,New_P_Q327,New_UV_Q327,Radial_Gradient_Q327,Radial_Dir_Q327);\\nvec3 Pos_World_Q314;\\nObject_To_World_Pos_B314(New_P_Q327,Pos_World_Q314);\\nfloat Gradient1_Q328;\\nfloat Gradient2_Q328;\\n#if SMOOTH_EDGES\\nEdge_AA_Vertex_B328(Pos_World_Q314,position,normal,cameraPosition,Radial_Gradient_Q327,Radial_Dir_Q327,tangent,Gradient1_Q328,Gradient2_Q328);\\n#else\\nGradient1_Q328=1.0;\\nGradient2_Q328=1.0;\\n#endif\\nvec2 Rect_UV_Q357;\\nvec4 Rect_Parms_Q357;\\nvec2 Scale_XY_Q357;\\nvec2 Line_UV_Q357;\\nvec2 Color_UV_Info_Q357;\\nRound_Rect_Vertex_B357(New_UV_Q327,Result_Q336,0.0,Anisotropy_Q331,Gradient1_Q328,Gradient2_Q328,normal,vec4(1,1,0,0),Rect_UV_Q357,Rect_Parms_Q357,Scale_XY_Q357,Line_UV_Q357,Color_UV_Info_Q357);\\nvec3 Line_Vertex_Q333;\\nLine_Vertex_B333(Scale_XY_Q357,Line_UV_Q357,(20.0),_Rate_,_Highlight_Transform_,Line_Vertex_Q333);\\nfloat X_Q359;\\nfloat Y_Q359;\\nX_Q359=Color_UV_Info_Q357.x;\\nY_Q359=Color_UV_Info_Q357.y;\\nvec4 Vec4_Q358=vec4(X_Q359,Y_Q359,Result_Q336,Line_Width_Q341);\\nvec3 Position=Pos_World_Q314;\\nvec3 Normal=Nrm_World_Q326;\\nvec2 UV=Rect_UV_Q357;\\nvec3 Tangent=Line_Vertex_Q333;\\nvec3 Binormal=Dir_Q334;\\nvec4 Color=Out_Color_Q337;\\nvec4 Extra1=Rect_Parms_Q357;\\nvec4 Extra2=Vec4_Q358;\\nvec4 Extra3=vec4(0,0,0,0);\\ngl_Position=viewProjection*vec4(Position,1);\\nvPosition=Position;\\nvNormal=Normal;\\nvUV=UV;\\nvTangent=Tangent;\\nvBinormal=Binormal;\\nvExtra1=Extra1;\\nvExtra2=Extra2;\\n}\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var mrdlBackplateVertexShader = { name: name, shader: shader };\n//# sourceMappingURL=mrdlBackplate.vertex.js.map","import { __decorate, __extends } from \"tslib\";\nimport { SerializationHelper, serialize } from \"@babylonjs/core/Misc/decorators.js\";\nimport { Vector4 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { Texture } from \"@babylonjs/core/Materials/Textures/texture.js\";\nimport { MaterialDefines } from \"@babylonjs/core/Materials/materialDefines.js\";\nimport { MaterialHelper } from \"@babylonjs/core/Materials/materialHelper.js\";\nimport { PushMaterial } from \"@babylonjs/core/Materials/pushMaterial.js\";\nimport { VertexBuffer } from \"@babylonjs/core/Buffers/buffer.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { Color4 } from \"@babylonjs/core/Maths/math.color.js\";\nimport { EffectFallbacks } from \"@babylonjs/core/Materials/effectFallbacks.js\";\nimport { Constants } from \"@babylonjs/core/Engines/constants.js\";\nimport \"./shaders/mrdlBackplate.fragment.js\";\nimport \"./shaders/mrdlBackplate.vertex.js\";\n/** @hidden */\nvar MRDLBackplateMaterialDefines = /** @class */ (function (_super) {\n    __extends(MRDLBackplateMaterialDefines, _super);\n    function MRDLBackplateMaterialDefines() {\n        var _this = _super.call(this) || this;\n        /*\n            \"IRIDESCENCE_ENABLE\", \"SMOOTH_EDGES\"\n        */\n        _this.IRIDESCENCE_ENABLE = true;\n        _this.SMOOTH_EDGES = true;\n        _this._needNormals = true;\n        _this.rebuild();\n        return _this;\n    }\n    return MRDLBackplateMaterialDefines;\n}(MaterialDefines));\n/**\n * Class used to render backplate material with MRDL\n */\nvar MRDLBackplateMaterial = /** @class */ (function (_super) {\n    __extends(MRDLBackplateMaterial, _super);\n    function MRDLBackplateMaterial(name, scene) {\n        var _this = _super.call(this, name, scene) || this;\n        /**\n         * Gets or sets the corner radius on the backplate. If this value is changed, update the lineWidth to match.\n         */\n        _this.radius = 0.3;\n        /**\n         * Gets or sets the line width of the backplate.\n         */\n        _this.lineWidth = 0.003;\n        /**\n         * Gets or sets whether to use absolute sizes when calculating effects on the backplate.\n         * Since desktop and VR/AR have different relative sizes, it's usually best to keep this false.\n         */\n        _this.absoluteSizes = false;\n        /** @hidden */\n        _this._filterWidth = 1;\n        /**\n         * Gets or sets the base color of the backplate.\n         */\n        _this.baseColor = new Color4(0, 0, 0, 1);\n        /**\n         * Gets or sets the line color of the backplate.\n         */\n        _this.lineColor = new Color4(0.2, 0.262745, 0.4, 1);\n        /**\n         * Gets or sets the top left Radii Multiplier.\n         */\n        _this.radiusTopLeft = 1.0;\n        /**\n         * Gets or sets the top left Radii Multiplier.\n         */\n        _this.radiusTopRight = 1.0;\n        /**\n         * Gets or sets the top left Radii Multiplier.\n         */\n        _this.radiusBottomLeft = 1.0;\n        /**\n         * Gets or sets the top left Radii Multiplier.\n         */\n        _this.radiusBottomRight = 1.0;\n        /** @hidden */\n        _this._rate = 0;\n        /**\n         * Gets or sets the color of the highlights on the backplate line.\n         */\n        _this.highlightColor = new Color4(0.239216, 0.435294, 0.827451, 1);\n        /**\n         * Gets or sets the width of the highlights on the backplate line.\n         */\n        _this.highlightWidth = 0;\n        /** @hidden */\n        _this._highlightTransform = new Vector4(1, 1, 0, 0);\n        /** @hidden */\n        _this._highlight = 1;\n        /**\n         * Gets or sets the intensity of the iridescence effect.\n         */\n        _this.iridescenceIntensity = 0.45;\n        /**\n         * Gets or sets the intensity of the iridescence effect on the backplate edges.\n         */\n        _this.iridescenceEdgeIntensity = 1;\n        /**\n         * Gets or sets the Tint of the iridescence effect on the backplate.\n         */\n        _this.iridescenceTint = new Color4(1, 1, 1, 1);\n        /** @hidden */\n        _this._angle = -45;\n        /**\n         * Gets or sets the opacity of the backplate (0.0 - 1.0).\n         */\n        _this.fadeOut = 1;\n        /** @hidden */\n        _this._reflected = true;\n        /** @hidden */\n        _this._frequency = 1;\n        /** @hidden */\n        _this._verticalOffset = 0;\n        /**\n         * Gets or sets the gradient color effect on the backplate.\n         */\n        _this.gradientColor = new Color4(0.74902, 0.74902, 0.74902, 1);\n        /**\n         * Gets or sets the top left gradient color effect on the backplate.\n         */\n        _this.topLeftGradientColor = new Color4(0.00784314, 0.294118, 0.580392, 1);\n        /**\n         * Gets or sets the top right gradient color effect on the backplate.\n         */\n        _this.topRightGradientColor = new Color4(0.305882, 0, 1, 1);\n        /**\n         * Gets or sets the bottom left gradient color effect on the backplate.\n         */\n        _this.bottomLeftGradientColor = new Color4(0.133333, 0.258824, 0.992157, 1);\n        /**\n         * Gets or sets the bottom right gradient color effect on the backplate.\n         */\n        _this.bottomRightGradientColor = new Color4(0.176471, 0.176471, 0.619608, 1);\n        /**\n         * Gets or sets the edge width of the backplate.\n         */\n        _this.edgeWidth = 0.5;\n        /**\n         * Gets or sets the edge width of the backplate.\n         */\n        _this.edgePower = 1;\n        /**\n         * Gets or sets the edge width of the backplate.\n         */\n        _this.edgeLineGradientBlend = 0.5;\n        _this.alphaMode = Constants.ALPHA_DISABLE;\n        _this.backFaceCulling = false;\n        _this._iridescentMapTexture = new Texture(MRDLBackplateMaterial.IRIDESCENT_MAP_TEXTURE_URL, _this.getScene(), true, false, Texture.NEAREST_SAMPLINGMODE);\n        return _this;\n    }\n    MRDLBackplateMaterial.prototype.needAlphaBlending = function () {\n        return false;\n    };\n    MRDLBackplateMaterial.prototype.needAlphaTesting = function () {\n        return false;\n    };\n    MRDLBackplateMaterial.prototype.getAlphaTestTexture = function () {\n        return null;\n    };\n    // Methods\n    MRDLBackplateMaterial.prototype.isReadyForSubMesh = function (mesh, subMesh) {\n        if (this.isFrozen) {\n            if (subMesh.effect && subMesh.effect._wasPreviouslyReady) {\n                return true;\n            }\n        }\n        if (!subMesh.materialDefines) {\n            subMesh.materialDefines = new MRDLBackplateMaterialDefines();\n        }\n        var defines = subMesh.materialDefines;\n        var scene = this.getScene();\n        if (this._isReadyForSubMesh(subMesh)) {\n            return true;\n        }\n        var engine = scene.getEngine();\n        // Attribs\n        MaterialHelper.PrepareDefinesForAttributes(mesh, defines, false, false);\n        // Get correct effect\n        if (defines.isDirty) {\n            defines.markAsProcessed();\n            scene.resetCachedMaterial();\n            // Fallbacks\n            var fallbacks = new EffectFallbacks();\n            if (defines.FOG) {\n                fallbacks.addFallback(1, \"FOG\");\n            }\n            MaterialHelper.HandleFallbacksForShadows(defines, fallbacks);\n            defines.IMAGEPROCESSINGPOSTPROCESS = scene.imageProcessingConfiguration.applyByPostProcess;\n            //Attributes\n            var attribs = [VertexBuffer.PositionKind];\n            if (defines.NORMAL) {\n                attribs.push(VertexBuffer.NormalKind);\n            }\n            if (defines.UV1) {\n                attribs.push(VertexBuffer.UVKind);\n            }\n            if (defines.UV2) {\n                attribs.push(VertexBuffer.UV2Kind);\n            }\n            if (defines.VERTEXCOLOR) {\n                attribs.push(VertexBuffer.ColorKind);\n            }\n            if (defines.TANGENT) {\n                attribs.push(VertexBuffer.TangentKind);\n            }\n            MaterialHelper.PrepareAttributesForInstances(attribs, defines);\n            // Legacy browser patch\n            var shaderName = \"mrdlBackplate\";\n            var join = defines.toString();\n            var uniforms = [\n                \"world\",\n                \"viewProjection\",\n                \"cameraPosition\",\n                \"_Radius_\",\n                \"_Line_Width_\",\n                \"_Absolute_Sizes_\",\n                \"_Filter_Width_\",\n                \"_Base_Color_\",\n                \"_Line_Color_\",\n                \"_Radius_Top_Left_\",\n                \"_Radius_Top_Right_\",\n                \"_Radius_Bottom_Left_\",\n                \"_Radius_Bottom_Right_\",\n                \"_Rate_\",\n                \"_Highlight_Color_\",\n                \"_Highlight_Width_\",\n                \"_Highlight_Transform_\",\n                \"_Highlight_\",\n                \"_Iridescence_Intensity_\",\n                \"_Iridescence_Edge_Intensity_\",\n                \"_Iridescence_Tint_\",\n                \"_Iridescent_Map_\",\n                \"_Angle_\",\n                \"_Reflected_\",\n                \"_Frequency_\",\n                \"_Vertical_Offset_\",\n                \"_Gradient_Color_\",\n                \"_Top_Left_\",\n                \"_Top_Right_\",\n                \"_Bottom_Left_\",\n                \"_Bottom_Right_\",\n                \"_Edge_Width_\",\n                \"_Edge_Power_\",\n                \"_Line_Gradient_Blend_\",\n                \"_Fade_Out_\",\n            ];\n            var samplers = [\"_Iridescent_Map_\"];\n            var uniformBuffers = new Array();\n            MaterialHelper.PrepareUniformsAndSamplersList({\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: defines,\n                maxSimultaneousLights: 4,\n            });\n            subMesh.setEffect(scene.getEngine().createEffect(shaderName, {\n                attributes: attribs,\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: join,\n                fallbacks: fallbacks,\n                onCompiled: this.onCompiled,\n                onError: this.onError,\n                indexParameters: { maxSimultaneousLights: 4 },\n            }, engine), defines);\n        }\n        if (!subMesh.effect || !subMesh.effect.isReady()) {\n            return false;\n        }\n        defines._renderId = scene.getRenderId();\n        subMesh.effect._wasPreviouslyReady = true;\n        return true;\n    };\n    MRDLBackplateMaterial.prototype.bindForSubMesh = function (world, mesh, subMesh) {\n        var defines = subMesh.materialDefines;\n        if (!defines) {\n            return;\n        }\n        var effect = subMesh.effect;\n        if (!effect) {\n            return;\n        }\n        this._activeEffect = effect;\n        // Matrices\n        this.bindOnlyWorldMatrix(world);\n        this._activeEffect.setMatrix(\"viewProjection\", this.getScene().getTransformMatrix());\n        this._activeEffect.setVector3(\"cameraPosition\", this.getScene().activeCamera.position);\n        // \"Round Rect\"\n        this._activeEffect.setFloat(\"_Radius_\", this.radius);\n        this._activeEffect.setFloat(\"_Line_Width_\", this.lineWidth);\n        this._activeEffect.setFloat(\"_Absolute_Sizes_\", this.absoluteSizes ? 1.0 : 0.0);\n        this._activeEffect.setFloat(\"_Filter_Width_\", this._filterWidth);\n        this._activeEffect.setDirectColor4(\"_Base_Color_\", this.baseColor);\n        this._activeEffect.setDirectColor4(\"_Line_Color_\", this.lineColor);\n        // \"Radii Multipliers\"\n        this._activeEffect.setFloat(\"_Radius_Top_Left_\", this.radiusTopLeft);\n        this._activeEffect.setFloat(\"_Radius_Top_Right_\", this.radiusTopRight);\n        this._activeEffect.setFloat(\"_Radius_Bottom_Left_\", this.radiusBottomLeft);\n        this._activeEffect.setFloat(\"_Radius_Bottom_Right_\", this.radiusBottomRight);\n        // \"Line Highlight\"\n        this._activeEffect.setFloat(\"_Rate_\", this._rate);\n        this._activeEffect.setDirectColor4(\"_Highlight_Color_\", this.highlightColor);\n        this._activeEffect.setFloat(\"_Highlight_Width_\", this.highlightWidth);\n        this._activeEffect.setVector4(\"_Highlight_Transform_\", this._highlightTransform);\n        this._activeEffect.setFloat(\"_Highlight_\", this._highlight);\n        // \"Iridescence\"\n        //define IRIDESCENCE_ENABLE true;\n        this._activeEffect.setFloat(\"_Iridescence_Intensity_\", this.iridescenceIntensity);\n        this._activeEffect.setFloat(\"_Iridescence_Edge_Intensity_\", this.iridescenceEdgeIntensity);\n        this._activeEffect.setDirectColor4(\"_Iridescence_Tint_\", this.iridescenceTint);\n        this._activeEffect.setTexture(\"_Iridescent_Map_\", this._iridescentMapTexture);\n        this._activeEffect.setFloat(\"_Angle_\", this._angle);\n        this._activeEffect.setFloat(\"_Reflected_\", this._reflected ? 1.0 : 0.0);\n        this._activeEffect.setFloat(\"_Frequency_\", this._frequency);\n        this._activeEffect.setFloat(\"_Vertical_Offset_\", this._verticalOffset);\n        // \"Gradient\"\n        this._activeEffect.setDirectColor4(\"_Gradient_Color_\", this.gradientColor);\n        this._activeEffect.setDirectColor4(\"_Top_Left_\", this.topLeftGradientColor);\n        this._activeEffect.setDirectColor4(\"_Top_Right_\", this.topRightGradientColor);\n        this._activeEffect.setDirectColor4(\"_Bottom_Left_\", this.bottomLeftGradientColor);\n        this._activeEffect.setDirectColor4(\"_Bottom_Right_\", this.bottomRightGradientColor);\n        //define EDGE_ONLY false;\n        this._activeEffect.setFloat(\"_Edge_Width_\", this.edgeWidth);\n        this._activeEffect.setFloat(\"_Edge_Power_\", this.edgePower);\n        this._activeEffect.setFloat(\"_Line_Gradient_Blend_\", this.edgeLineGradientBlend);\n        // \"Fade\"\n        this._activeEffect.setFloat(\"_Fade_Out_\", this.fadeOut);\n        // \"Antialiasing\"\n        //define SMOOTH_EDGES true;\n        this._afterBind(mesh, this._activeEffect);\n    };\n    /**\n     * Get the list of animatables in the material.\n     * @returns the list of animatables object used in the material\n     */\n    MRDLBackplateMaterial.prototype.getAnimatables = function () {\n        return [];\n    };\n    MRDLBackplateMaterial.prototype.dispose = function (forceDisposeEffect) {\n        _super.prototype.dispose.call(this, forceDisposeEffect);\n    };\n    MRDLBackplateMaterial.prototype.clone = function (name) {\n        var _this = this;\n        return SerializationHelper.Clone(function () { return new MRDLBackplateMaterial(name, _this.getScene()); }, this);\n    };\n    MRDLBackplateMaterial.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.customType = \"BABYLON.MRDLBackplateMaterial\";\n        return serializationObject;\n    };\n    MRDLBackplateMaterial.prototype.getClassName = function () {\n        return \"MRDLBackplateMaterial\";\n    };\n    // Statics\n    MRDLBackplateMaterial.Parse = function (source, scene, rootUrl) {\n        return SerializationHelper.Parse(function () { return new MRDLBackplateMaterial(source.name, scene); }, source, scene, rootUrl);\n    };\n    /**\n     * URL pointing to the texture used to define the coloring for the Iridescent Map effect.\n     */\n    MRDLBackplateMaterial.IRIDESCENT_MAP_TEXTURE_URL = \"https://assets.babylonjs.com/meshes/MRTK/MRDL/mrtk-mrdl-backplate-iridescence.png\";\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"radius\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"lineWidth\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"absoluteSizes\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"baseColor\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"lineColor\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"radiusTopLeft\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"radiusTopRight\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"radiusBottomLeft\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"radiusBottomRight\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"highlightColor\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"highlightWidth\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"iridescenceIntensity\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"iridescenceEdgeIntensity\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"iridescenceTint\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"fadeOut\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"gradientColor\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"topLeftGradientColor\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"topRightGradientColor\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"bottomLeftGradientColor\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"bottomRightGradientColor\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"edgeWidth\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"edgePower\", void 0);\n    __decorate([\n        serialize()\n    ], MRDLBackplateMaterial.prototype, \"edgeLineGradientBlend\", void 0);\n    return MRDLBackplateMaterial;\n}(PushMaterial));\nexport { MRDLBackplateMaterial };\nRegisterClass(\"BABYLON.GUI.MRDLBackplateMaterial\", MRDLBackplateMaterial);\n//# sourceMappingURL=mrdlBackplateMaterial.js.map","import { __extends } from \"tslib\";\nimport { Observable } from \"@babylonjs/core/Misc/observable.js\";\nimport { Vector3 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { Control3D } from \"./control3D.js\";\nimport { CreateBox } from \"@babylonjs/core/Meshes/Builders/boxBuilder.js\";\nimport { PointerDragBehavior } from \"@babylonjs/core/Behaviors/Meshes/pointerDragBehavior.js\";\nimport { SceneLoader } from \"@babylonjs/core/Loading/sceneLoader.js\";\nimport { MRDLSliderBarMaterial } from \"../materials/mrdl/mrdlSliderBarMaterial.js\";\nimport { MRDLSliderThumbMaterial } from \"../materials/mrdl/mrdlSliderThumbMaterial.js\";\nimport { MRDLBackplateMaterial } from \"../materials/mrdl/mrdlBackplateMaterial.js\";\nvar SLIDER_MIN = 0;\nvar SLIDER_MAX = 100;\nvar SLIDER_VAL = 50;\nvar SLIDER_STEP = 0;\nvar SLIDER_SCALING = 1.0;\nvar SLIDER_MARGIN = 0.2;\n/**\n * Class used to create a slider in 3D\n */\nvar Slider3D = /** @class */ (function (_super) {\n    __extends(Slider3D, _super);\n    /**\n     * Creates a new slider\n     * @param name defines the control name\n     * @param sliderBackplateVisible defines if the control has a backplate, default is false\n     */\n    function Slider3D(name, sliderBackplateVisible) {\n        var _this = _super.call(this, name) || this;\n        /** Observable raised when the sldier value changes */\n        _this.onValueChangedObservable = new Observable();\n        _this._sliderBackplateVisible = sliderBackplateVisible || false;\n        _this._minimum = SLIDER_MIN;\n        _this._maximum = SLIDER_MAX;\n        _this._step = SLIDER_STEP;\n        _this._value = SLIDER_VAL;\n        return _this;\n    }\n    Object.defineProperty(Slider3D.prototype, \"mesh\", {\n        /**\n         * Gets the mesh used to render this control\n         */\n        get: function () {\n            if (this.node) {\n                return this._sliderThumb;\n            }\n            return null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Slider3D.prototype, \"minimum\", {\n        /** Gets or sets minimum value */\n        get: function () {\n            return this._minimum;\n        },\n        set: function (value) {\n            if (this._minimum === value) {\n                return;\n            }\n            this._minimum = Math.max(value, SLIDER_MIN);\n            this._value = Math.max(Math.min(this._value, this._maximum), this._minimum);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Slider3D.prototype, \"maximum\", {\n        /** Gets or sets maximum value */\n        get: function () {\n            return this._maximum;\n        },\n        set: function (value) {\n            if (this._maximum === value) {\n                return;\n            }\n            this._maximum = Math.max(value, this._minimum);\n            this._value = Math.max(Math.min(this._value, this._maximum), this._minimum);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Slider3D.prototype, \"step\", {\n        /** Gets or sets step value */\n        get: function () {\n            return this._step;\n        },\n        set: function (value) {\n            if (this._step === value) {\n                return;\n            }\n            this._step = Math.max(Math.min(value, this._maximum - this._minimum), SLIDER_STEP);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Slider3D.prototype, \"value\", {\n        /** Gets or sets current value */\n        get: function () {\n            return this._value;\n        },\n        set: function (value) {\n            if (this._value === value) {\n                return;\n            }\n            this._value = Math.max(Math.min(value, this._maximum), this._minimum);\n            if (this._sliderThumb) {\n                this._sliderThumb.position.x = this._convertToPosition(this.value);\n            }\n            this.onValueChangedObservable.notifyObservers(this._value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Slider3D.prototype, \"start\", {\n        get: function () {\n            if (!this.node) {\n                return -SLIDER_SCALING / 2;\n            }\n            return this._sliderBar.position.x - this._sliderBar.scaling.x / 2;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Slider3D.prototype, \"end\", {\n        get: function () {\n            if (!this.node) {\n                return SLIDER_SCALING / 2;\n            }\n            return this._sliderBar.position.x + this._sliderBar.scaling.x / 2;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Slider3D.prototype, \"sliderBarMaterial\", {\n        /**\n         * Gets the slider bar material used by this control\n         */\n        get: function () {\n            return this._sliderBarMaterial;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Slider3D.prototype, \"sliderThumbMaterial\", {\n        /**\n         * Gets the slider thumb material used by this control\n         */\n        get: function () {\n            return this._sliderThumbMaterial;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Slider3D.prototype, \"sliderBackplateMaterial\", {\n        /**\n         * Gets the slider backplate material used by this control\n         */\n        get: function () {\n            return this._sliderBackplateMaterial;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // Mesh association\n    Slider3D.prototype._createNode = function (scene) {\n        var _this = this;\n        var sliderBackplate = CreateBox(\"\".concat(this.name, \"_sliderbackplate\"), {\n            width: 1.0,\n            height: 1.0,\n            depth: 1.0,\n        }, scene);\n        sliderBackplate.isPickable = false;\n        sliderBackplate.visibility = 0;\n        sliderBackplate.scaling = new Vector3(1, 0.5, 0.8);\n        SceneLoader.ImportMeshAsync(undefined, Slider3D.MODEL_BASE_URL, Slider3D.MODEL_FILENAME, scene).then(function (result) {\n            var sliderBackplateModel = result.meshes[1];\n            var sliderBarModel = result.meshes[1].clone(\"\".concat(_this.name, \"_sliderbar\"), sliderBackplate);\n            var sliderThumbModel = result.meshes[1].clone(\"\".concat(_this.name, \"_sliderthumb\"), sliderBackplate);\n            sliderBackplateModel.visibility = 0;\n            if (_this._sliderBackplateVisible) {\n                sliderBackplateModel.visibility = 1;\n                sliderBackplateModel.name = \"\".concat(_this.name, \"_sliderbackplate\");\n                sliderBackplateModel.isPickable = false;\n                sliderBackplateModel.scaling.x = 1;\n                sliderBackplateModel.scaling.z = 0.2;\n                sliderBackplateModel.parent = sliderBackplate;\n                if (_this._sliderBackplateMaterial) {\n                    sliderBackplateModel.material = _this._sliderBackplateMaterial;\n                }\n                _this._sliderBackplate = sliderBackplateModel;\n            }\n            if (sliderBarModel) {\n                sliderBarModel.parent = sliderBackplate;\n                sliderBarModel.position.z = -0.1;\n                sliderBarModel.scaling = new Vector3(SLIDER_SCALING - SLIDER_MARGIN, 0.04, 0.3);\n                sliderBarModel.isPickable = false;\n                if (_this._sliderBarMaterial) {\n                    sliderBarModel.material = _this._sliderBarMaterial;\n                }\n                _this._sliderBar = sliderBarModel;\n            }\n            if (sliderThumbModel) {\n                sliderThumbModel.parent = sliderBackplate;\n                sliderThumbModel.isPickable = true;\n                sliderThumbModel.position.z = -0.115;\n                sliderThumbModel.scaling = new Vector3(0.025, 0.3, 0.6);\n                sliderThumbModel.position.x = _this._convertToPosition(_this.value);\n                sliderThumbModel.addBehavior(_this._createBehavior());\n                if (_this._sliderThumbMaterial) {\n                    sliderThumbModel.material = _this._sliderThumbMaterial;\n                }\n                _this._sliderThumb = sliderThumbModel;\n            }\n        });\n        this._affectMaterial(sliderBackplate);\n        return sliderBackplate;\n    };\n    Slider3D.prototype._affectMaterial = function (mesh) {\n        var _a, _b, _c;\n        this._sliderBackplateMaterial = (_a = this._sliderBackplateMaterial) !== null && _a !== void 0 ? _a : new MRDLBackplateMaterial(\"\".concat(this.name, \"_sliderbackplate_material\"), mesh.getScene());\n        this._sliderBarMaterial = (_b = this._sliderBarMaterial) !== null && _b !== void 0 ? _b : new MRDLSliderBarMaterial(\"\".concat(this.name, \"_sliderbar_material\"), mesh.getScene());\n        this._sliderThumbMaterial = (_c = this._sliderThumbMaterial) !== null && _c !== void 0 ? _c : new MRDLSliderThumbMaterial(\"\".concat(this.name, \"_sliderthumb_material\"), mesh.getScene());\n    };\n    Slider3D.prototype._createBehavior = function () {\n        var _this = this;\n        var pointerDragBehavior = new PointerDragBehavior({ dragAxis: Vector3.Right() });\n        pointerDragBehavior.moveAttached = false;\n        pointerDragBehavior.onDragStartObservable.add(function () {\n            _this._draggedPosition = _this._sliderThumb.position.x;\n        });\n        pointerDragBehavior.onDragObservable.add(function (event) {\n            _this._draggedPosition += event.dragDistance / _this.scaling.x;\n            _this.value = _this._convertToValue(_this._draggedPosition);\n        });\n        return pointerDragBehavior;\n    };\n    Slider3D.prototype._convertToPosition = function (value) {\n        var position = ((value - this.minimum) / (this.maximum - this.minimum)) * (this.end - this.start) + this.start;\n        return Math.min(Math.max(position, this.start), this.end);\n    };\n    Slider3D.prototype._convertToValue = function (position) {\n        var value = ((position - this.start) / (this.end - this.start)) * (this.maximum - this.minimum);\n        value = this.step ? Math.round(value / this.step) * this.step : value;\n        return Math.max(Math.min(this.minimum + value, this._maximum), this._minimum);\n    };\n    /**\n     * Releases all associated resources\n     */\n    Slider3D.prototype.dispose = function () {\n        var _a, _b, _c, _d, _e, _f;\n        _super.prototype.dispose.call(this);\n        (_a = this._sliderBar) === null || _a === void 0 ? void 0 : _a.dispose();\n        (_b = this._sliderThumb) === null || _b === void 0 ? void 0 : _b.dispose();\n        (_c = this._sliderBarMaterial) === null || _c === void 0 ? void 0 : _c.dispose();\n        (_d = this._sliderThumbMaterial) === null || _d === void 0 ? void 0 : _d.dispose();\n        (_e = this._sliderBackplate) === null || _e === void 0 ? void 0 : _e.dispose();\n        (_f = this._sliderBackplateMaterial) === null || _f === void 0 ? void 0 : _f.dispose();\n    };\n    /**\n     * Base Url for the models.\n     */\n    Slider3D.MODEL_BASE_URL = \"https://assets.babylonjs.com/meshes/MRTK/\";\n    /**\n     * File name for the 8x4 model.\n     */\n    Slider3D.MODEL_FILENAME = \"mrtk-fluent-backplate.glb\";\n    return Slider3D;\n}(Control3D));\nexport { Slider3D };\n//# sourceMappingURL=slider3D.js.map","import { __extends } from \"tslib\";\nimport { Tools } from \"@babylonjs/core/Misc/tools.js\";\nimport { Matrix, TmpVectors, Vector3 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { VolumeBasedPanel } from \"./volumeBasedPanel.js\";\nimport { Container3D } from \"./container3D.js\";\nimport { Axis, Space } from \"@babylonjs/core/Maths/math.axis.js\";\n/**\n * Class used to create a container panel deployed on the surface of a sphere\n */\nvar SpherePanel = /** @class */ (function (_super) {\n    __extends(SpherePanel, _super);\n    function SpherePanel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._radius = 5.0;\n        return _this;\n    }\n    Object.defineProperty(SpherePanel.prototype, \"radius\", {\n        /**\n         * Gets or sets the radius of the sphere where to project controls (5 by default)\n         */\n        get: function () {\n            return this._radius;\n        },\n        set: function (value) {\n            var _this = this;\n            if (this._radius === value) {\n                return;\n            }\n            this._radius = value;\n            Tools.SetImmediate(function () {\n                _this._arrangeChildren();\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SpherePanel.prototype._mapGridNode = function (control, nodePosition) {\n        var mesh = control.mesh;\n        if (!mesh) {\n            return;\n        }\n        var newPos = this._sphericalMapping(nodePosition);\n        control.position = newPos;\n        switch (this.orientation) {\n            case Container3D.FACEORIGIN_ORIENTATION:\n                mesh.lookAt(new Vector3(2 * newPos.x, 2 * newPos.y, 2 * newPos.z));\n                break;\n            case Container3D.FACEORIGINREVERSED_ORIENTATION:\n                mesh.lookAt(new Vector3(-newPos.x, -newPos.y, -newPos.z));\n                break;\n            case Container3D.FACEFORWARD_ORIENTATION:\n                break;\n            case Container3D.FACEFORWARDREVERSED_ORIENTATION:\n                mesh.rotate(Axis.Y, Math.PI, Space.LOCAL);\n                break;\n        }\n    };\n    SpherePanel.prototype._sphericalMapping = function (source) {\n        var newPos = new Vector3(0, 0, this._radius);\n        var xAngle = source.y / this._radius;\n        var yAngle = -(source.x / this._radius);\n        Matrix.RotationYawPitchRollToRef(yAngle, xAngle, 0, TmpVectors.Matrix[0]);\n        return Vector3.TransformNormal(newPos, TmpVectors.Matrix[0]);\n    };\n    return SpherePanel;\n}(VolumeBasedPanel));\nexport { SpherePanel };\n//# sourceMappingURL=spherePanel.js.map","import { __extends } from \"tslib\";\nimport { Tools } from \"@babylonjs/core/Misc/tools.js\";\nimport { Matrix, TmpVectors, Vector3 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { Container3D } from \"./container3D.js\";\n/**\n * Class used to create a stack panel in 3D on XY plane\n */\nvar StackPanel3D = /** @class */ (function (_super) {\n    __extends(StackPanel3D, _super);\n    /**\n     * Creates new StackPanel\n     * @param isVertical\n     */\n    function StackPanel3D(isVertical) {\n        if (isVertical === void 0) { isVertical = false; }\n        var _this = _super.call(this) || this;\n        _this._isVertical = false;\n        /**\n         * Gets or sets the distance between elements\n         */\n        _this.margin = 0.1;\n        _this._isVertical = isVertical;\n        return _this;\n    }\n    Object.defineProperty(StackPanel3D.prototype, \"isVertical\", {\n        /**\n         * Gets or sets a boolean indicating if the stack panel is vertical or horizontal (horizontal by default)\n         */\n        get: function () {\n            return this._isVertical;\n        },\n        set: function (value) {\n            var _this = this;\n            if (this._isVertical === value) {\n                return;\n            }\n            this._isVertical = value;\n            Tools.SetImmediate(function () {\n                _this._arrangeChildren();\n            });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    StackPanel3D.prototype._arrangeChildren = function () {\n        var width = 0;\n        var height = 0;\n        var controlCount = 0;\n        var extendSizes = [];\n        var currentInverseWorld = Matrix.Invert(this.node.computeWorldMatrix(true));\n        // Measure\n        for (var _i = 0, _a = this._children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            if (!child.mesh) {\n                continue;\n            }\n            controlCount++;\n            child.mesh.computeWorldMatrix(true);\n            child.mesh.getWorldMatrix().multiplyToRef(currentInverseWorld, TmpVectors.Matrix[0]);\n            var boundingBox = child.mesh.getBoundingInfo().boundingBox;\n            var extendSize = Vector3.TransformNormal(boundingBox.extendSize, TmpVectors.Matrix[0]);\n            extendSizes.push(extendSize);\n            if (this._isVertical) {\n                height += extendSize.y;\n            }\n            else {\n                width += extendSize.x;\n            }\n        }\n        if (this._isVertical) {\n            height += ((controlCount - 1) * this.margin) / 2;\n        }\n        else {\n            width += ((controlCount - 1) * this.margin) / 2;\n        }\n        // Arrange\n        var offset;\n        if (this._isVertical) {\n            offset = -height;\n        }\n        else {\n            offset = -width;\n        }\n        var index = 0;\n        for (var _b = 0, _c = this._children; _b < _c.length; _b++) {\n            var child = _c[_b];\n            if (!child.mesh) {\n                continue;\n            }\n            controlCount--;\n            var extendSize = extendSizes[index++];\n            if (this._isVertical) {\n                child.position.y = offset + extendSize.y;\n                child.position.x = 0;\n                offset += extendSize.y * 2;\n            }\n            else {\n                child.position.x = offset + extendSize.x;\n                child.position.y = 0;\n                offset += extendSize.x * 2;\n            }\n            offset += controlCount > 0 ? this.margin : 0;\n        }\n    };\n    return StackPanel3D;\n}(Container3D));\nexport { StackPanel3D };\n//# sourceMappingURL=stackPanel3D.js.map","import { __extends } from \"tslib\";\nimport { TouchButton3D } from \"./touchButton3D.js\";\n/**\n * Class used to create an interactable object. It's a touchable 3D button using a mesh coming from the current scene\n * @since 5.0.0\n */\nvar TouchMeshButton3D = /** @class */ (function (_super) {\n    __extends(TouchMeshButton3D, _super);\n    /**\n     * Creates a new 3D button based on a mesh\n     * @param mesh mesh to become a 3D button. By default this is also the mesh for near interaction collision checking\n     * @param name defines the control name\n     */\n    function TouchMeshButton3D(mesh, name) {\n        var _this = _super.call(this, name, mesh) || this;\n        _this._currentMesh = mesh;\n        /**\n         * Provides a default behavior on hover/out & up/down\n         * Override those function to create your own desired behavior specific to your mesh\n         */\n        _this.pointerEnterAnimation = function () {\n            if (!_this.mesh) {\n                return;\n            }\n            _this.mesh.scaling.scaleInPlace(1.1);\n        };\n        _this.pointerOutAnimation = function () {\n            if (!_this.mesh) {\n                return;\n            }\n            _this.mesh.scaling.scaleInPlace(1.0 / 1.1);\n        };\n        _this.pointerDownAnimation = function () {\n            if (!_this.mesh) {\n                return;\n            }\n            _this.mesh.scaling.scaleInPlace(0.95);\n        };\n        _this.pointerUpAnimation = function () {\n            if (!_this.mesh) {\n                return;\n            }\n            _this.mesh.scaling.scaleInPlace(1.0 / 0.95);\n        };\n        return _this;\n    }\n    TouchMeshButton3D.prototype._getTypeName = function () {\n        return \"TouchMeshButton3D\";\n    };\n    // Mesh association\n    TouchMeshButton3D.prototype._createNode = function () {\n        var _this = this;\n        this._currentMesh.getChildMeshes().forEach(function (mesh) {\n            _this._injectGUI3DReservedDataStore(mesh).control = _this;\n        });\n        return this._currentMesh;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    TouchMeshButton3D.prototype._affectMaterial = function (mesh) { };\n    return TouchMeshButton3D;\n}(TouchButton3D));\nexport { TouchMeshButton3D };\n//# sourceMappingURL=touchMeshButton3D.js.map","import { __extends } from \"tslib\";\nimport { CreateBox } from \"@babylonjs/core/Meshes/Builders/boxBuilder.js\";\nimport { FluentBackplateMaterial } from \"../materials/fluentBackplate/fluentBackplateMaterial.js\";\nimport { Control3D } from \"./control3D.js\";\nimport { SceneLoader } from \"@babylonjs/core/Loading/sceneLoader.js\";\n/**\n * Class used to create a holographic backplate in 3D\n * @since 5.0.0\n */\nvar HolographicBackplate = /** @class */ (function (_super) {\n    __extends(HolographicBackplate, _super);\n    /**\n     * Creates a new holographic backplate\n     * @param name defines the control name\n     * @param _shareMaterials\n     */\n    function HolographicBackplate(name, _shareMaterials) {\n        if (_shareMaterials === void 0) { _shareMaterials = true; }\n        var _this = _super.call(this, name) || this;\n        _this._shareMaterials = _shareMaterials;\n        return _this;\n    }\n    Object.defineProperty(HolographicBackplate.prototype, \"renderingGroupId\", {\n        get: function () {\n            return this._model.renderingGroupId;\n        },\n        /**\n         * Rendering ground id of the backplate mesh.\n         */\n        set: function (id) {\n            this._model.renderingGroupId = id;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HolographicBackplate.prototype, \"material\", {\n        /**\n         * Gets the material used by the backplate\n         */\n        get: function () {\n            return this._material;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HolographicBackplate.prototype, \"shareMaterials\", {\n        /**\n         * Gets a boolean indicating if this backplate shares its material with other HolographicBackplates\n         */\n        get: function () {\n            return this._shareMaterials;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    HolographicBackplate.prototype._getTypeName = function () {\n        return \"HolographicBackplate\";\n    };\n    // Mesh association\n    HolographicBackplate.prototype._createNode = function (scene) {\n        var _this = this;\n        var _a;\n        var collisionMesh = CreateBox(((_a = this.name) !== null && _a !== void 0 ? _a : \"HolographicBackplate\") + \"_CollisionMesh\", {\n            width: 1.0,\n            height: 1.0,\n            depth: 1.0,\n        }, scene);\n        collisionMesh.isPickable = true;\n        collisionMesh.visibility = 0;\n        SceneLoader.ImportMeshAsync(undefined, HolographicBackplate.MODEL_BASE_URL, HolographicBackplate.MODEL_FILENAME, scene).then(function (result) {\n            var importedModel = result.meshes[1];\n            importedModel.name = \"\".concat(_this.name, \"_frontPlate\");\n            importedModel.isPickable = false;\n            importedModel.parent = collisionMesh;\n            if (_this._material) {\n                importedModel.material = _this._material;\n            }\n            _this._model = importedModel;\n        });\n        return collisionMesh;\n    };\n    HolographicBackplate.prototype._createMaterial = function (mesh) {\n        this._material = new FluentBackplateMaterial(this.name + \" Material\", mesh.getScene());\n    };\n    HolographicBackplate.prototype._affectMaterial = function (mesh) {\n        // Back\n        if (this._shareMaterials) {\n            if (!this._host._touchSharedMaterials[\"fluentBackplateMaterial\"]) {\n                this._createMaterial(mesh);\n                this._host._touchSharedMaterials[\"fluentBackplateMaterial\"] = this._material;\n            }\n            else {\n                this._material = this._host._touchSharedMaterials[\"fluentBackplateMaterial\"];\n            }\n        }\n        else {\n            this._createMaterial(mesh);\n        }\n    };\n    /**\n     * Releases all associated resources\n     */\n    HolographicBackplate.prototype.dispose = function () {\n        _super.prototype.dispose.call(this); // will dispose main mesh ie. back plate\n        if (!this.shareMaterials) {\n            this._material.dispose();\n        }\n        this._model.dispose();\n    };\n    /**\n     * Base Url for the button model.\n     */\n    HolographicBackplate.MODEL_BASE_URL = \"https://assets.babylonjs.com/meshes/MRTK/\";\n    /**\n     * File name for the button model.\n     */\n    HolographicBackplate.MODEL_FILENAME = \"mrtk-fluent-backplate.glb\";\n    return HolographicBackplate;\n}(Control3D));\nexport { HolographicBackplate };\n//# sourceMappingURL=holographicBackplate.js.map","import { Observable } from \"@babylonjs/core/Misc/observable.js\";\nimport { Vector3 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { PointerEventTypes } from \"@babylonjs/core/Events/pointerEvents.js\";\nimport { HemisphericLight } from \"@babylonjs/core/Lights/hemisphericLight.js\";\nimport { UtilityLayerRenderer } from \"@babylonjs/core/Rendering/utilityLayerRenderer.js\";\nimport { EngineStore } from \"@babylonjs/core/Engines/engineStore.js\";\nimport { Container3D } from \"./controls/container3D.js\";\n/**\n * Class used to manage 3D user interface\n * @see https://doc.babylonjs.com/how_to/gui3d\n */\nvar GUI3DManager = /** @class */ (function () {\n    /**\n     * Creates a new GUI3DManager\n     * @param scene\n     */\n    function GUI3DManager(scene) {\n        var _this = this;\n        this._customControlScaling = 1.0;\n        /** @hidden */\n        this._lastControlOver = {};\n        /** @hidden */\n        this._lastControlDown = {};\n        /**\n         * Observable raised when the point picked by the pointer events changed\n         */\n        this.onPickedPointChangedObservable = new Observable();\n        /**\n         * Observable raised when a picking happens\n         */\n        this.onPickingObservable = new Observable();\n        // Shared resources\n        /** @hidden */\n        this._sharedMaterials = {};\n        /** @hidden */\n        this._touchSharedMaterials = {};\n        this._scene = scene || EngineStore.LastCreatedScene;\n        this._sceneDisposeObserver = this._scene.onDisposeObservable.add(function () {\n            _this._sceneDisposeObserver = null;\n            _this._utilityLayer = null;\n            _this.dispose();\n        });\n        this._utilityLayer = UtilityLayerRenderer._CreateDefaultUtilityLayerFromScene(this._scene);\n        this._utilityLayer.onlyCheckPointerDownEvents = false;\n        this._utilityLayer.pickUtilitySceneFirst = false;\n        this._utilityLayer.mainSceneTrackerPredicate = function (mesh) {\n            var _a, _b, _c;\n            return mesh && ((_c = (_b = (_a = mesh.reservedDataStore) === null || _a === void 0 ? void 0 : _a.GUI3D) === null || _b === void 0 ? void 0 : _b.control) === null || _c === void 0 ? void 0 : _c._node);\n        };\n        // Root\n        this._rootContainer = new Container3D(\"RootContainer\");\n        this._rootContainer._host = this;\n        var utilityLayerScene = this._utilityLayer.utilityLayerScene;\n        // Events\n        this._pointerOutObserver = this._utilityLayer.onPointerOutObservable.add(function (pointerId) {\n            _this._handlePointerOut(pointerId, true);\n        });\n        this._pointerObserver = utilityLayerScene.onPointerObservable.add(function (pi) {\n            _this._doPicking(pi);\n        });\n        // Scene\n        this._utilityLayer.utilityLayerScene.autoClear = false;\n        this._utilityLayer.utilityLayerScene.autoClearDepthAndStencil = false;\n        new HemisphericLight(\"hemi\", Vector3.Up(), this._utilityLayer.utilityLayerScene);\n    }\n    Object.defineProperty(GUI3DManager.prototype, \"scene\", {\n        /** Gets the hosting scene */\n        get: function () {\n            return this._scene;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(GUI3DManager.prototype, \"utilityLayer\", {\n        /** Gets associated utility layer */\n        get: function () {\n            return this._utilityLayer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(GUI3DManager.prototype, \"controlScaling\", {\n        /** Gets the scaling for all UI elements owned by this manager */\n        get: function () {\n            return this._customControlScaling;\n        },\n        /** Sets the scaling adjustment for all UI elements owned by this manager */\n        set: function (newScale) {\n            if (this._customControlScaling !== newScale && newScale > 0) {\n                var scaleRatio_1 = newScale / this._customControlScaling;\n                this._customControlScaling = newScale;\n                this._rootContainer.children.forEach(function (control) {\n                    control.scaling.scaleInPlace(scaleRatio_1);\n                    if (newScale !== 1) {\n                        control._isScaledByManager = true;\n                    }\n                });\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(GUI3DManager.prototype, \"useRealisticScaling\", {\n        /** Gets if controls attached to this manager are realistically sized, based on the fact that 1 unit length is 1 meter */\n        get: function () {\n            return this.controlScaling === GUI3DManager.MRTK_REALISTIC_SCALING;\n        },\n        /** Sets if controls attached to this manager are realistically sized, based on the fact that 1 unit length is 1 meter */\n        set: function (newValue) {\n            this.controlScaling = newValue ? GUI3DManager.MRTK_REALISTIC_SCALING : 1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    GUI3DManager.prototype._handlePointerOut = function (pointerId, isPointerUp) {\n        var previousControlOver = this._lastControlOver[pointerId];\n        if (previousControlOver) {\n            previousControlOver._onPointerOut(previousControlOver);\n            delete this._lastControlOver[pointerId];\n        }\n        if (isPointerUp) {\n            if (this._lastControlDown[pointerId]) {\n                this._lastControlDown[pointerId].forcePointerUp();\n                delete this._lastControlDown[pointerId];\n            }\n        }\n        this.onPickedPointChangedObservable.notifyObservers(null);\n    };\n    GUI3DManager.prototype._doPicking = function (pi) {\n        var _a, _b, _c;\n        if (!this._utilityLayer || !this._utilityLayer.shouldRender || !this._utilityLayer.utilityLayerScene.activeCamera) {\n            return false;\n        }\n        var pointerEvent = pi.event;\n        var pointerId = pointerEvent.pointerId || 0;\n        var buttonIndex = pointerEvent.button;\n        var pickingInfo = pi.pickInfo;\n        if (pickingInfo) {\n            this.onPickingObservable.notifyObservers(pickingInfo.pickedMesh);\n        }\n        if (!pickingInfo || !pickingInfo.hit) {\n            this._handlePointerOut(pointerId, pi.type === PointerEventTypes.POINTERUP);\n            return false;\n        }\n        if (pickingInfo.pickedPoint) {\n            this.onPickedPointChangedObservable.notifyObservers(pickingInfo.pickedPoint);\n        }\n        var control = (_b = (_a = pickingInfo.pickedMesh.reservedDataStore) === null || _a === void 0 ? void 0 : _a.GUI3D) === null || _b === void 0 ? void 0 : _b.control;\n        if (!!control && !control._processObservables(pi.type, pickingInfo.pickedPoint, ((_c = pickingInfo.originMesh) === null || _c === void 0 ? void 0 : _c.position) || null, pointerId, buttonIndex)) {\n            if (pi.type === PointerEventTypes.POINTERMOVE) {\n                if (this._lastControlOver[pointerId]) {\n                    this._lastControlOver[pointerId]._onPointerOut(this._lastControlOver[pointerId]);\n                }\n                delete this._lastControlOver[pointerId];\n            }\n        }\n        if (pi.type === PointerEventTypes.POINTERUP) {\n            if (this._lastControlDown[pointerEvent.pointerId]) {\n                this._lastControlDown[pointerEvent.pointerId].forcePointerUp();\n                delete this._lastControlDown[pointerEvent.pointerId];\n            }\n            if (pointerEvent.pointerType === \"touch\") {\n                this._handlePointerOut(pointerId, false);\n            }\n        }\n        return true;\n    };\n    Object.defineProperty(GUI3DManager.prototype, \"rootContainer\", {\n        /**\n         * Gets the root container\n         */\n        get: function () {\n            return this._rootContainer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Gets a boolean indicating if the given control is in the root child list\n     * @param control defines the control to check\n     * @returns true if the control is in the root child list\n     */\n    GUI3DManager.prototype.containsControl = function (control) {\n        return this._rootContainer.containsControl(control);\n    };\n    /**\n     * Adds a control to the root child list\n     * @param control defines the control to add\n     * @returns the current manager\n     */\n    GUI3DManager.prototype.addControl = function (control) {\n        this._rootContainer.addControl(control);\n        if (this._customControlScaling !== 1) {\n            control.scaling.scaleInPlace(this._customControlScaling);\n            control._isScaledByManager = true;\n        }\n        return this;\n    };\n    /**\n     * Removes a control from the root child list\n     * @param control defines the control to remove\n     * @returns the current container\n     */\n    GUI3DManager.prototype.removeControl = function (control) {\n        this._rootContainer.removeControl(control);\n        if (control._isScaledByManager) {\n            control.scaling.scaleInPlace(1 / this._customControlScaling);\n            control._isScaledByManager = false;\n        }\n        return this;\n    };\n    /**\n     * Releases all associated resources\n     */\n    GUI3DManager.prototype.dispose = function () {\n        this._rootContainer.dispose();\n        for (var materialName in this._sharedMaterials) {\n            if (!Object.prototype.hasOwnProperty.call(this._sharedMaterials, materialName)) {\n                continue;\n            }\n            this._sharedMaterials[materialName].dispose();\n        }\n        this._sharedMaterials = {};\n        for (var materialName in this._touchSharedMaterials) {\n            if (!Object.prototype.hasOwnProperty.call(this._touchSharedMaterials, materialName)) {\n                continue;\n            }\n            this._touchSharedMaterials[materialName].dispose();\n        }\n        this._touchSharedMaterials = {};\n        if (this._pointerOutObserver && this._utilityLayer) {\n            this._utilityLayer.onPointerOutObservable.remove(this._pointerOutObserver);\n            this._pointerOutObserver = null;\n        }\n        this.onPickedPointChangedObservable.clear();\n        this.onPickingObservable.clear();\n        var utilityLayerScene = this._utilityLayer ? this._utilityLayer.utilityLayerScene : null;\n        if (utilityLayerScene) {\n            if (this._pointerObserver) {\n                utilityLayerScene.onPointerObservable.remove(this._pointerObserver);\n                this._pointerObserver = null;\n            }\n        }\n        if (this._scene) {\n            if (this._sceneDisposeObserver) {\n                this._scene.onDisposeObservable.remove(this._sceneDisposeObserver);\n                this._sceneDisposeObserver = null;\n            }\n        }\n        if (this._utilityLayer) {\n            this._utilityLayer.dispose();\n        }\n    };\n    GUI3DManager.MRTK_REALISTIC_SCALING = 0.032;\n    return GUI3DManager;\n}());\nexport { GUI3DManager };\n//# sourceMappingURL=gui3DManager.js.map"],"names":["TextWrapping","TextBlock","_super","name","text","_this","call","this","_text","_textWrapping","Clip","_textHorizontalAlignment","_textVerticalAlignment","_resizeToFit","_lineSpacing","_outlineWidth","_outlineColor","_underline","_lineThrough","_wordDivider","onTextChangedObservable","onLinesReadyObservable","Object","defineProperty","prototype","get","_lines","enumerable","configurable","set","value","_width","ignoreAdaptiveScaling","_height","_markAsDirty","notifyObservers","toString","_host","fromString","_getTypeName","_processMeasures","parentMeasure","context","_fontOffset","isDirty","font","_breakLines","_currentMeasure","width","height","maxLineWidth","i","length","line","newWidth","_paddingLeftInPixels","_paddingRightInPixels","internalValue","updateInPlace","_rebuildLayout","newHeight","_paddingTopInPixels","_paddingBottomInPixels","lineSpacing","isPixel","getValue","getValueInPixel","_cachedParentMeasure","_drawText","textWidth","y","x","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","outlineWidth","strokeText","left","fillText","beginPath","lineWidth","Math","round","fontSizeInPixels","moveTo","lineTo","stroke","closePath","_draw","save","_applyStates","_renderLines","restore","strokeStyle","outlineColor","lineJoin","miterLimit","refWidth","refHeight","lines","split","Ellipsis","_i","_lines_1","_line","push","_parseLineEllipsis","WordWrap","_a","_lines_2","apply","_parseLineWordWrap","WordWrapEllipsis","_b","_lines_3","_parseLineWordWrapEllipsis","_c","_lines_4","_parseLine","_getTextMetricsWidth","measureText","_getCharsToRemove","lineLength","diff","charWidth","max","floor","removeChars","characters","Array","from","splice","concat","join","slice","textMetrics","undefined","actualBoundingBoxLeft","abs","actualBoundingBoxRight","words","wordSplittingFunction","n","testLine","testWidth","_computeHeightForLinesOf","lastLine","currentLine","linesToRemove","pop","rootY","ascent","descent","top","lineCount","computeExpectedHeight","widthInPixels","context_1","createCanvas","getContext","heightInPixels","dispose","clear","TextWrapper","_characters","txt","removePart","idxStart","idxEnd","insertTxt","newCharacters","charAt","idx","substr","isNaN","min","temp","substring","to","isWord","index","rWord","search","ToggleButton","group","onIsActiveChangedObservable","delegatePickingToChildren","_isActive","thickness","isPointerBlocker","alphaStore","toActiveAnimation","toInactiveAnimation","pointerEnterActiveAnimation","alpha","pointerOutActiveAnimation","pointerDownActiveAnimation","scaleX","scaleY","pointerUpActiveAnimation","pointerEnterInactiveAnimation","pointerOutInactiveAnimation","pointerDownInactiveAnimation","pointerUpInactiveAnimation","_group","executeOnAllControls","control","typeName","childToggle","isActive","_processPicking","pi","type","pointerId","buttonIndex","deltaX","deltaY","_isEnabled","isHitTestVisible","isVisible","notRenderable","contains","_children","child","isEnabled","_processObservables","_onPointerEnter","target","isReadOnly","_onPointerOut","force","_onPointerDown","coordinates","_onPointerUp","notifyClick","KeyPropertySet","VirtualKeyboard","arguments","onKeyPressObservable","defaultButtonWidth","defaultButtonHeight","defaultButtonPaddingLeft","defaultButtonPaddingRight","defaultButtonPaddingTop","defaultButtonPaddingBottom","defaultButtonColor","defaultButtonBackground","shiftButtonColor","selectedShiftThickness","shiftState","_currentlyConnectedInputText","_connectedInputTexts","_onKeyPressObserver","_createKey","key","propertySet","button","color","background","paddingLeft","paddingRight","paddingTop","paddingBottom","isFocusInvisible","onPointerUpObservable","add","addKeysRow","keys","propertySets","panel","isVertical","maxKey","properties","addControl","applyShiftState","children","row","rowContainer","j","button_tblock","toUpperCase","toLowerCase","connect","input","some","a","focusedControl","processKey","_connectedVirtualKeyboard","onFocusObserver","onFocusObservable","onBlurObserver","onBlurObservable","disconnect","filtered","filter","_removeConnectedInputObservables","forEach","connectedInputText","remove","CreateDefaultLayout","returnValue","_parseFromContent","serializedObject","host","getClassName","_loop_1","Vector2WithInfo","source","Matrix2D","m00","m01","m10","m11","m20","m21","m","Float32Array","fromValues","determinant","invertToRef","result","l0","l1","l2","l3","l4","l5","det","detDiv","det4","det5","multiplyToRef","other","r0","r1","r2","r3","r4","r5","transformCoordinates","Identity","IdentityToRef","TranslationToRef","ScalingToRef","RotationToRef","angle","s","sin","c","cos","ComposeToRef","tx","ty","parentMatrix","_TempPreTranslationMatrix","_TempScalingMatrix","_TempRotationMatrix","_TempPostTranslationMatrix","_TempCompose0","_TempCompose1","_TempCompose2","tmpRect","tmpRect2","tmpV1","tmpV2","Measure","copyFrom","copyFromFloats","CombineToRef","b","right","bottom","addAndTransformToRef","transform","addX","addY","addWidth","addHeight","Number","MAX_VALUE","ceil","transformToRef","isEqualsTo","Empty","MultiLinePoint","multiLine","_multiLine","_x","_y","_point","_control","_controlObserver","onDirtyObservable","onPointUpdate","_mesh","_meshObserver","getScene","onAfterCameraRenderObservable","resetLinks","mesh","translate","_translatePoint","getProjectedPositionWithZ","getBoundingInfo","boundingSphere","center","getWorldMatrix","centerX","centerY","xValue","_canvas","yValue","Style","_fontFamily","_fontStyle","_fontWeight","_fontSize","onChangedObservable","ValueAndUnit","unit","negativeValueAllowed","UNITMODE_PIXEL","_value","_unit","_originalUnit","UNITMODE_PERCENTAGE","refValue","idealWidth","getSize","idealHeight","useSmallestIdeal","window","innerWidth","innerHeight","decimals","percentage","toFixed","pixels","match","_Regex","exec","sourceValue","parseFloat","sourceUnit","_UNITMODE_PERCENTAGE","_UNITMODE_PIXEL","XmlLoaderError","XmlLoader","parentClass","_nodes","_nodeTypes","element","attribute","_isLoaded","_objectAttributes","textHorizontalAlignment","textVerticalAlignment","horizontalAlignment","verticalAlignment","stretch","_parentClass","_getChainElement","attributeValue","_getClassAttribute","attributeName","_createGuiElement","node","parent","linkParent","guiNode","nodeName","attributes","includes","linkWithMesh","startsWith","endsWith","getNamedItem","id","exception","_parseGrid","columns","cells","cellNode","rows","rowNumber","columnNumber","totalColumnsNumber","nodeType","nodeValue","JSON","parse","addRowDefinition","addColumnDefinition","k","firstChild","_parseXml","nextSibling","_parseElement","_prepareSourceElement","variable","iterator","_parseElementsFromSource","dataSource","isArray","splittedSource","generated","setAttribute","_rootNode","isLoaded","getNodeById","getNodes","loadLayout","xmlFile","rootNode","onSuccess","onError","xhttp","XMLHttpRequest","onload","readyState","status","responseXML","xmlDoc","documentElement","onerror","open","send","loadLayoutAsync","Promise","resolve","reject","Vector3WithInfo","z","Control3D","_downCount","_enterCount","_downPointerIds","_isVisible","_isScaledByManager","onPointerMoveObservable","onPointerOutObservable","onPointerDownObservable","onPointerClickObservable","onPointerEnterObservable","_behaviors","_node","position","scaling","addBehavior","behavior","indexOf","init","scene","isLoading","onDataLoadedObservable","addOnce","attach","removeBehavior","detach","getBehaviorByName","setEnabled","linkToTransformNode","_prepareNode","_createNode","_injectGUI3DReservedDataStore","isPickable","_affectMaterial","reservedDataStore","GUI3D","material","_isTouchButton3D","_generatePointerEventType","_onPointerMove","pointerEnterAnimation","pointerOutAnimation","pointerDownAnimation","pointerUpAnimation","forcePointerUp","pickedPoint","originMeshPosition","previousControlOver","_lastControlOver","_lastControlDown","_lastPickedControl","_disposeNode","ContentDisplay3D","_contentResolution","_contentScaleRatio","_content","utilityLayer","_facadeTexture","rootContainer","clearControls","utilityLayerScene","premulAlpha","_applyFacade","_resetContent","_disposeFacadeTexture","content","facadeTexture","AbstractButton3D","Button3D","_currentMaterial","emissiveColor","scaleInPlace","emissiveTexture","faceUV","useRightHandedSystem","depth","wrap","specularColor","Container3D","_blockLayout","_arrangeChildren","updateLayout","containsControl","blockLayout","removeControl","UNSET_ORIENTATION","FACEORIGIN_ORIENTATION","FACEORIGINREVERSED_ORIENTATION","FACEFORWARD_ORIENTATION","FACEFORWARDREVERSED_ORIENTATION","VolumeBasedPanel","_columns","_rows","_rowThenColum","_orientation","margin","_cellWidth","_cellHeight","controlCount","currentInverseWorld","computeWorldMatrix","boundingBox","getHierarchyBoundingVectors","extendSize","subtractToRef","startOffsetX","startOffsetY","nodeGrid","cellCounter","r","_mapGridNode","_finalProcessing","CylinderPanel","_radius","nodePosition","newPos","_cylindricalMapping","orientation","lookAt","rotate","PI","yAngle","shader","FluentMaterialDefines","INNERGLOW","BORDER","HOVERLIGHT","TEXTURE","rebuild","FluentMaterial","innerGlowColorIntensity","innerGlowColor","albedoColor","renderBorders","borderWidth","edgeSmoothingValue","borderMinValue","renderHoverLight","hoverRadius","hoverColor","hoverPosition","needAlphaBlending","needAlphaTesting","getAlphaTestTexture","isReadyForSubMesh","subMesh","isFrozen","effect","_wasPreviouslyReady","materialDefines","defines","checkReadyOnEveryCall","_renderId","getRenderId","_areTexturesDirty","_albedoTexture","isReadyOrNotBlocking","engine","getEngine","markAsProcessed","resetCachedMaterial","attribs","uniforms","samplers","uniformBuffers","uniformsNames","uniformBuffersNames","maxSimultaneousLights","setEffect","createEffect","fallbacks","onCompiled","indexParameters","_materialContext","isReady","bindForSubMesh","world","_activeEffect","bindOnlyWorldMatrix","setMatrix","getTransformMatrix","_mustRebind","setColor4","setFloat","setVector3","setDirectColor4","setTexture","matrix","getTextureMatrix","_afterBind","getActiveTextures","hasTexture","texture","forceDisposeEffect","clone","serialize","serializationObject","customType","Parse","rootUrl","HolographicButton","shareMaterials","_shareMaterials","_frontPlate","_disposeTooltip","_tooltipFade","_tooltipTextBlock","_tooltipTexture","_tooltipMesh","_tooltipHoverObserver","_tooltipOutObserver","_backPlate","renderingGroupId","_textPlate","rightHandedScene","_scene","size","tooltipBackground","sideOrientation","mat","diffuseColor","addChild","scale","fontSize","delay","fadeIn","_rebuildContent","_imageUrl","_backMaterial","_frontMaterial","_plateMaterial","document","createElement","image","opacityTexture","_createBackMaterial","_pickedPointObserver","onPickedPointChangedObservable","_createFrontMaterial","_createPlateMaterial","_sharedMaterials","FluentButtonMaterialDefines","RELATIVE_WIDTH","ENABLE_FADE","_needNormals","_needUVs","FluentButtonMaterial","edgeWidth","edgeColor","proximityMaxIntensity","proximityFarDistance","proximityNearRadius","proximityAnisotropy","selectionFuzz","selected","selectionFade","selectionFadeSize","selectedDistance","selectedFadeLength","blobIntensity","blobFarSize","blobNearDistance","blobFarDistance","blobFadeLength","leftBlobEnable","leftBlobNearSize","leftBlobPulse","leftBlobFade","leftBlobInnerFade","rightBlobEnable","rightBlobNearSize","rightBlobPulse","rightBlobFade","rightBlobInnerFade","activeFaceDir","activeFaceUp","enableFade","fadeWidth","smoothActiveFace","showFrame","useBlobTexture","globalLeftIndexTipPosition","globalRightIndexTipPosition","alphaMode","disableDepthWrite","backFaceCulling","_blobTexture","BLOB_TEXTURE_URL","_isReadyForSubMesh","FOG","addFallback","IMAGEPROCESSINGPOSTPROCESS","imageProcessingConfiguration","applyByPostProcess","NORMAL","UV1","UV2","VERTEXCOLOR","TANGENT","activeCamera","g","setVector4","getAnimatables","TouchButton3D","collisionMesh","_isNearPressed","_interactionSurfaceHeight","_isToggleButton","_toggleState","_toggleButtonCallback","_onToggle","onToggleObservable","collidableFrontDirection","_collisionMesh","transformedDirection","_collidableFrontDirection","normalize","frontWorldDir","invert","isNearPickable","getChildMeshes","forward","removeCallback","newState","_isInteractionInFrontOfButton","collidablePos","_getInteractionHeight","getAbsolutePosition","getPressDepth","touchPoint","interactionHeight","interactionPos","basePos","frontDir","d","providedType","nearMeshPosition","activeInteractionCount","TouchHolographicButton","_isBackplateVisible","_frontPlateDepth","_backPlateDepth","_backplateColor","_backplateToggledColor","isActiveNearInteraction","decompose","_pointerHoverObserver","visibility","MODEL_BASE_URL","MODEL_FILENAME","then","alphaMesh","importedFrontPlate","meshes","tn","setParent","negate","_touchSharedMaterials","DefaultBehavior","followBehaviorEnabled","sixDofDragBehaviorEnabled","surfaceMagnetismBehaviorEnabled","_followBehavior","_sixDofDragBehavior","_surfaceMagnetismBehavior","ownerMesh","draggablesMeshes","sceneUnderstandingMeshes","attachedNode","_addObservables","draggableMeshes","faceCameraOnDragStart","enabled","_removeObservables","_onBeforeRenderObserver","onBeforeRenderObservable","_enabled","isMoving","_onDragObserver","onDragObservable","event","disableMovement","findAndUpdateTarget","pickInfo","HandleState","HandleMaterial","_hover","_drag","_color","_scale","_lastTick","animationLength","baseColor","hoverScale","baseScale","dragScale","_positionOffset","_updateInterpolationTarget","Date","now","_onBeforeRender","tick","delta","scaleDiff","_targetScale","colorDiff","_targetColor","scaleToRef","addToRef","setColor3","drag","hover","GizmoHandle","gizmo","_state","IDLE","_materials","_gizmo","createNode","handle","HOVER","_updateMaterial","DRAG","_createMaterial","positionOffset","state","_d","_e","setDragBehavior","dragStartFn","dragFn","dragEndFn","dragBehavior","_dragBehavior","_dragStartObserver","onDragStartObservable","_draggingObserver","_dragEndObserver","onDragEndObservable","SideHandle","verticalBox","sideNode","isNearGrabbable","CornerHandle","horizontalBox","angleNode","SlateGizmo","_boundingDimensions","_renderObserver","_tmpQuaternion","_tmpVector","_corners","_sides","_boundingBoxGizmo","_margin","_handleSize","_attachedSlate","_existingSlateScale","fixedScreenSize","fixedScreenSizeDistanceFactor","updateScale","gizmoLayer","originalScene","attachedMesh","equals","updateBoundingBox","onPickingObservable","pickedMesh","_handleHovered","_handlesParent","rotationQuaternion","masksCorners","dimensions","origin","corner","rotation","_assignDragBehaviorCorners","originStart","dimensionsStart","offset","masks","_moveHandle","side","_assignDragBehaviorSides","_rootMesh","_keepAspectRatio","vector","aspectRatio","invertDiagonal","axis","dot","_clampDimensions","mask","keepAspectRatio","impact","multiplyInPlace","clampedDimensions","minDimensions","ratio","subtractInPlace","sign","isCorner","offsetOriginMasked","offsetDimensionsMasked","addInPlace","moveFn","dragOrigin","toObjectFrame","dragPlaneNormal","attachedSlate","_followButton","isToggled","_handleDragged","normal","ref","projectToRef","_positionElements","_updatePivot","quaternionOrigin","directionOrigin","worldPivot","worldPlaneNormal","getAbsolutePivotPoint","_attachedNodeChanged","originalParent","_update","boundingMinMax","_updateHandlesPosition","_updateHandlesScaling","handleScaling","scaledWidth","scaledHeight","setAll","absolutePosition","distanceFromCamera","FluentBackplateMaterialDefines","BLOB_ENABLE","BLOB_ENABLE_2","SMOOTH_EDGES","IRIDESCENT_MAP_ENABLE","FluentBackplateMaterial","radius","absoluteSizes","_filterWidth","lineColor","blobNearSize","blobPulse","blobFade","blobNearSize2","blobPulse2","blobFade2","_rate","highlightColor","highlightWidth","_highlightTransform","_highlight","iridescenceIntensity","iridescenceEdgeIntensity","_angle","fadeOut","_reflected","_frequency","_verticalOffset","_globalLeftIndexTipPosition4","_globalRightIndexTipPosition4","_iridescentMap","IM_TEXTURE_URL","HolographicSlate","titleBarMargin","_dimensions","_titleBarHeight","_titleText","defaultDimensions","isToggleButton","_closeButton","_contentViewport","_contentDragBehavior","_defaultBehavior","newRatio","_titleBar","_titleBarTitle","_contentPlate","title","_titleTextComponent","_contentMaterial","albedoTexture","_resetContentPositionAndZoom","_applyContentViewport","attachToMesh","_addControl","followButton","closeButton","titleBar","titleBarTitle","contentPlate","backPlate","titleBarHeight","contentPlateHeight","rightHandScene","scaleTo","_DEFAULT_TEXT_RESOLUTION_Y","tex","uScale","vScale","uOffset","vOffset","setPivotPoint","origin2","adt","textWrapping","frontUVs","_attachContentPlateBehavior","imageUrl","ASSETS_BASE_URL","FOLLOW_ICON_FILENAME","CLOSE_ICON_FILENAME","isBackplateVisible","followBehavior","recenter","moveAttached","useObjectOrientationForDragging","updateDragPlane","startViewport","worldMatrix","worldDimensions","upWorld","rightWorld","projectedOffset","dragPlanePoint","_titleBarMaterial","sixDofDragBehavior","_positionChangedObserver","onPositionChangedObservable","resetDefaultAspectAndPose","resetAspect","camera","backward","pivot","TouchHolographicMenu","_backPlateMargin","_updateCurrentMinMax","_updateMargins","_backPlateMaterial","_currentMin","_currentMax","minimizeInPlace","maximizeInPlace","addInPlaceFromFloats","subtract","backPlateMargin","addButton","wasLayoutBlocked","MENU_BUTTON_SCALE","HandMenu","xr","_handConstraintBehavior","linkToXRExperience","MeshButton3D","_currentMesh","NearMenu","_isPinned","_dragObserver","isPinned","_pinButton","_createPinButton","_ASSETS_BASE_URL","_PIN_ICON_FILENAME","ignoreCameraPitchAndRoll","pitchOffset","minimumDistance","defaultDistance","maximumDistance","PlanePanel","ScatterPanel","_iteration","_scatterMapping","random","count","sort","distance1","lengthSquared","distance2","radiusPaddingSquared","pow","cellSize","difference2D","difference","combinedRadius","distance","sqrt","MRDLSliderBarMaterialDefines","SKY_ENABLED","IRIDESCENCE_ENABLED","MRDLSliderBarMaterial","bevelFront","bevelFrontStretch","bevelBack","bevelBackStretch","radiusTopLeft","radiusTopRight","radiusBottomLeft","radiusBottomRight","bulgeEnabled","bulgeHeight","bulgeRadius","sunIntensity","sunTheta","sunPhi","indirectDiffuse","albedo","specular","shininess","sharpness","subsurface","leftGradientColor","rightGradientColor","reflection","frontReflect","edgeReflect","power","skyColor","horizonColor","groundColor","horizonPower","fuzz","minFuzz","clipFade","hueShift","saturationShift","valueShift","blobPosition","blobPosition2","blobTexture","leftIndexPosition","rightIndexPosition","leftIndexMiddlePosition","rightIndexMiddlePosition","decalScaleXY","decalFrontOnly","rimIntensity","rimHueShift","rimSaturationShift","rimValueShift","useGlobalLeftIndex","useGlobalRightIndex","globalLeftIndexTipProximity","globalRightIndexTipProximity","globaRightIndexTipPosition","globalLeftThumbTipPosition","globalRightThumbTipPosition","globalLeftIndexMiddlePosition","globalRightIndexMiddlePosition","_blueGradientTexture","BLUE_GRADIENT_TEXTURE_URL","setVector2","MRDLSliderThumbMaterialDefines","MRDLSliderThumbMaterial","MRDLBackplateMaterialDefines","IRIDESCENCE_ENABLE","MRDLBackplateMaterial","iridescenceTint","gradientColor","topLeftGradientColor","topRightGradientColor","bottomLeftGradientColor","bottomRightGradientColor","edgePower","edgeLineGradientBlend","_iridescentMapTexture","IRIDESCENT_MAP_TEXTURE_URL","Slider3D","sliderBackplateVisible","onValueChangedObservable","_sliderBackplateVisible","_minimum","_maximum","_step","_sliderThumb","_convertToPosition","_sliderBar","SLIDER_SCALING","_sliderBarMaterial","_sliderThumbMaterial","_sliderBackplateMaterial","sliderBackplate","sliderBackplateModel","sliderBarModel","sliderThumbModel","_sliderBackplate","_createBehavior","pointerDragBehavior","dragAxis","_draggedPosition","dragDistance","_convertToValue","minimum","maximum","end","start","step","_f","SpherePanel","_sphericalMapping","xAngle","StackPanel3D","_isVertical","extendSizes","TouchMeshButton3D","HolographicBackplate","_model","_material","importedModel","GUI3DManager","_customControlScaling","_sceneDisposeObserver","onDisposeObservable","_utilityLayer","onlyCheckPointerDownEvents","pickUtilitySceneFirst","mainSceneTrackerPredicate","_rootContainer","_pointerOutObserver","_handlePointerOut","_pointerObserver","onPointerObservable","_doPicking","autoClear","autoClearDepthAndStencil","newScale","scaleRatio_1","controlScaling","MRTK_REALISTIC_SCALING","newValue","isPointerUp","shouldRender","pointerEvent","pickingInfo","hit","originMesh","pointerType","materialName","hasOwnProperty"],"sourceRoot":""}