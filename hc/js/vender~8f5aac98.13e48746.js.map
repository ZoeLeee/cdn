{"version":3,"file":"js/vender~8f5aac98.13e48746.js","mappings":"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Y,EACZC,cAAc,IAElBL,OAAOC,eAAe6rB,EAAmBnsB,UAAW,SAAU,CAI1DO,IAAK,WACD,OAAOX,KAAKe,SAAS,IAEzBF,YAAY,EACZC,cAAc,IAElBL,OAAOC,eAAe6rB,EAAmBnsB,UAAW,IAAK,CAIrDO,IAAK,WACD,OAAOX,KAAKe,SAAS,IAEzBF,YAAY,EACZC,cAAc,IAElBL,OAAOC,eAAe6rB,EAAmBnsB,UAAW,IAAK,CAIrDO,IAAK,WACD,OAAOX,KAAKe,SAAS,IAEzBF,YAAY,EACZC,cAAc,IAElByrB,EAAmBnsB,UAAUkC,YAAc,SAAUhC,GAEjD,GADAV,EAAOQ,UAAUkC,YAAYvC,KAAKC,KAAMM,GACnCN,KAAKmqB,KAAKjpB,cAGVlB,KAAKqB,OAAO+P,cAAiBpR,KAAK8U,EAAE1D,cAAiBpR,KAAK+U,EAAE3D,cAAjE,CAIkB,mDACA,YACA,kEACA,2FACA,YACA,iEACA,2CACA,gDACA,oDACA,4CACA,mDACA,OACA,0CACA,oCACA,OACA,kDACA,kDACA,kDACA,OACA,yDACA,6CACA,uCACA,6CACA,OACA,+CACA,yCACA,+CACA,OACA,+CACA,yCACA,+CACA,OACA,+CACA,yCACA,+CACA,OACA,yCACA,qDACA,sEACA,OACA,yCACA,qDACA,8CACA,OACA,yCACA,qDACA,8CACA,OACA,yCACA,qDACA,8CACA,OACA,yCACA,qDACA,8CACA,OACA,yCACA,qDACA,8CACA,OACA,yCACA,qDACA,8CACA,OACA,yCACA,qDACA,8CACA,OACA,yCACA,qDACA,8CACA,OACA,yCACA,2CACA,2CACA,OACA,yCACA,2CACA,2CACA,OACA,yCACA,2CACA,2CACA,OACA,yCACA,2CACA,2CACA,OACA,yCACA,2CACA,2CACA,OACA,yCACA,2CACA,2CACA,OACA,yCACA,2CACA,2CACA,OACA,yCACA,2CACA,2CACA,OACA,yCACA,2CACA,2CACA,OACA,gEACA,+DACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,gEACA,OACA,oCACA,+BACA,iEACA,+BACA,8DACA,oCACA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","sources":["webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/PBR/iridescenceBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/PBR/pbrMetallicRoughnessBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/PBR/reflectionBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/PBR/refractionBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/PBR/sheenBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/PBR/subSurfaceBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/Particle/particleBlendMultiplyBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/Particle/particleRampGradientBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/Particle/particleTextureBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/Vertex/vertexOutputBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/colorSplitterBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/multiplyBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/remapBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/transformBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/trigonometryBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/vectorMergerBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Enums/nodeMaterialBlockConnectionPointMode.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Enums/nodeMaterialBlockConnectionPointTypes.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Enums/nodeMaterialBlockTargets.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Enums/nodeMaterialModes.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Enums/nodeMaterialSystemValues.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/Vertex/bonesBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/Vertex/instancesBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/Vertex/morphTargetsBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/Vertex/lightInformationBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/addBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/scaleBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/clampBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/crossBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/customBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/dotBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/normalizeBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/colorMergerBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/vectorSplitterBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/lerpBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/divideBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/subtractBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/stepBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/oneMinusBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/viewDirectionBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/fresnelBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/maxBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/minBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/distanceBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/lengthBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/negateBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/powBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/randomNumberBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/arcTan2Block.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/smoothStepBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/reciprocalBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/replaceColorBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/posterizeBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/waveBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/gradientBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/nLerpBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/worleyNoise3DBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/simplexPerlin3DBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/normalBlendBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/rotate2dBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/reflectBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/refractBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/desaturateBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/modBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/conditionalBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/matrixBuilderBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/cloudBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/voronoiNoiseBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Blocks/elbowBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/Optimizers/nodeMaterialOptimizer.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/nodeMaterialBuildState.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/nodeMaterialBuildStateSharedData.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/nodeMaterial.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/nodeMaterialBlock.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/nodeMaterialBlockConnectionPoint.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/nodeMaterialConnectionPointCustomObject.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Node/nodeMaterialDecorator.js","webpack:///../../../node_modules/@babylonjs/core/Materials/Occlusion/occlusionMaterial.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialConnectionPointDirection } from \"../../nodeMaterialBlockConnectionPoint.js\";\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\nimport { InputBlock } from \"../Input/inputBlock.js\";\nimport { NodeMaterialConnectionPointCustomObject } from \"../../nodeMaterialConnectionPointCustomObject.js\";\nimport { PBRIridescenceConfiguration } from \"../../../../Materials/PBR/pbrIridescenceConfiguration.js\";\n/**\n * Block used to implement the iridescence module of the PBR material\n */\nvar IridescenceBlock = /** @class */ (function (_super) {\n    __extends(IridescenceBlock, _super);\n    /**\n     * Create a new IridescenceBlock\n     * @param name defines the block name\n     */\n    function IridescenceBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Fragment) || this;\n        _this._isUnique = true;\n        _this.registerInput(\"intensity\", NodeMaterialBlockConnectionPointTypes.Float, true, NodeMaterialBlockTargets.Fragment);\n        _this.registerInput(\"indexOfRefraction\", NodeMaterialBlockConnectionPointTypes.Float, true, NodeMaterialBlockTargets.Fragment);\n        _this.registerInput(\"thickness\", NodeMaterialBlockConnectionPointTypes.Float, true, NodeMaterialBlockTargets.Fragment);\n        _this.registerOutput(\"iridescence\", NodeMaterialBlockConnectionPointTypes.Object, NodeMaterialBlockTargets.Fragment, new NodeMaterialConnectionPointCustomObject(\"iridescence\", _this, NodeMaterialConnectionPointDirection.Output, IridescenceBlock, \"IridescenceBlock\"));\n        return _this;\n    }\n    /**\n     * Initialize the block and prepare the context for build\n     * @param state defines the state that will be used for the build\n     */\n    IridescenceBlock.prototype.initialize = function (state) {\n        state._excludeVariableName(\"iridescenceOut\");\n        state._excludeVariableName(\"vIridescenceParams\");\n    };\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    IridescenceBlock.prototype.getClassName = function () {\n        return \"IridescenceBlock\";\n    };\n    Object.defineProperty(IridescenceBlock.prototype, \"intensity\", {\n        /**\n         * Gets the intensity input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IridescenceBlock.prototype, \"indexOfRefraction\", {\n        /**\n         * Gets the indexOfRefraction input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IridescenceBlock.prototype, \"thickness\", {\n        /**\n         * Gets the thickness input component\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IridescenceBlock.prototype, \"iridescence\", {\n        /**\n         * Gets the iridescence object output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IridescenceBlock.prototype.autoConfigure = function () {\n        if (!this.intensity.isConnected) {\n            var intensityInput = new InputBlock(\"Iridescence intensity\", NodeMaterialBlockTargets.Fragment, NodeMaterialBlockConnectionPointTypes.Float);\n            intensityInput.value = 1;\n            intensityInput.output.connectTo(this.intensity);\n            var indexOfRefractionInput = new InputBlock(\"Iridescence ior\", NodeMaterialBlockTargets.Fragment, NodeMaterialBlockConnectionPointTypes.Float);\n            indexOfRefractionInput.value = 1.3;\n            indexOfRefractionInput.output.connectTo(this.indexOfRefraction);\n            var thicknessInput = new InputBlock(\"Iridescence thickness\", NodeMaterialBlockTargets.Fragment, NodeMaterialBlockConnectionPointTypes.Float);\n            thicknessInput.value = 400;\n            thicknessInput.output.connectTo(this.thickness);\n        }\n    };\n    IridescenceBlock.prototype.prepareDefines = function (mesh, nodeMaterial, defines) {\n        _super.prototype.prepareDefines.call(this, mesh, nodeMaterial, defines);\n        defines.setValue(\"IRIDESCENCE\", true, true);\n        defines.setValue(\"IRIDESCENCE_TEXTURE\", false, true);\n        defines.setValue(\"IRIDESCENCE_THICKNESS_TEXTURE\", false, true);\n    };\n    /**\n     * Gets the main code of the block (fragment side)\n     * @param iridescenceBlock instance of a IridescenceBlock or null if the code must be generated without an active iridescence module\n     * @returns the shader code\n     */\n    IridescenceBlock.GetCode = function (iridescenceBlock) {\n        var code = \"\";\n        var intensityName = (iridescenceBlock === null || iridescenceBlock === void 0 ? void 0 : iridescenceBlock.intensity.isConnected) ? iridescenceBlock.intensity.associatedVariableName : \"1.\";\n        var indexOfRefraction = (iridescenceBlock === null || iridescenceBlock === void 0 ? void 0 : iridescenceBlock.indexOfRefraction.isConnected)\n            ? iridescenceBlock.indexOfRefraction.associatedVariableName\n            : PBRIridescenceConfiguration._DefaultIndexOfRefraction;\n        var thickness = (iridescenceBlock === null || iridescenceBlock === void 0 ? void 0 : iridescenceBlock.thickness.isConnected) ? iridescenceBlock.thickness.associatedVariableName : PBRIridescenceConfiguration._DefaultMaximumThickness;\n        code += \"iridescenceOutParams iridescenceOut;\\n\\n        #ifdef IRIDESCENCE\\n            iridescenceBlock(\\n                vec4(\".concat(intensityName, \", \").concat(indexOfRefraction, \", 1., \").concat(thickness, \"),\\n                NdotV,\\n                specularEnvironmentR0,\\n                #ifdef CLEARCOAT\\n                    NdotVUnclamped,\\n                #endif\\n                iridescenceOut\\n            );\\n\\n            float iridescenceIntensity = iridescenceOut.iridescenceIntensity;\\n            specularEnvironmentR0 = iridescenceOut.specularEnvironmentR0;\\n        #endif\\r\\n\");\n        return code;\n    };\n    IridescenceBlock.prototype._buildBlock = function (state) {\n        if (state.target === NodeMaterialBlockTargets.Fragment) {\n            state.sharedData.bindableBlocks.push(this);\n            state.sharedData.blocksWithDefines.push(this);\n        }\n        return this;\n    };\n    IridescenceBlock.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        return serializationObject;\n    };\n    IridescenceBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n        _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n    };\n    return IridescenceBlock;\n}(NodeMaterialBlock));\nexport { IridescenceBlock };\nRegisterClass(\"BABYLON.IridescenceBlock\", IridescenceBlock);\n//# sourceMappingURL=iridescenceBlock.js.map","import { __decorate, __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialConnectionPointDirection } from \"../../nodeMaterialBlockConnectionPoint.js\";\nimport { MaterialHelper } from \"../../../materialHelper.js\";\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets.js\";\nimport { NodeMaterialSystemValues } from \"../../Enums/nodeMaterialSystemValues.js\";\nimport { InputBlock } from \"../Input/inputBlock.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\nimport { PBRBaseMaterial } from \"../../../PBR/pbrBaseMaterial.js\";\nimport { editableInPropertyPage, PropertyTypeForEdition } from \"../../nodeMaterialDecorator.js\";\nimport { NodeMaterialConnectionPointCustomObject } from \"../../nodeMaterialConnectionPointCustomObject.js\";\nimport { SheenBlock } from \"./sheenBlock.js\";\nimport { GetEnvironmentBRDFTexture } from \"../../../../Misc/brdfTextureTools.js\";\nimport { MaterialFlags } from \"../../../materialFlags.js\";\nimport { AnisotropyBlock } from \"./anisotropyBlock.js\";\nimport { ReflectionBlock } from \"./reflectionBlock.js\";\nimport { ClearCoatBlock } from \"./clearCoatBlock.js\";\nimport { IridescenceBlock } from \"./iridescenceBlock.js\";\nimport { SubSurfaceBlock } from \"./subSurfaceBlock.js\";\n\nimport { Color3, TmpColors } from \"../../../../Maths/math.color.js\";\nvar mapOutputToVariable = {\n    ambientClr: [\"finalAmbient\", \"\"],\n    diffuseDir: [\"finalDiffuse\", \"\"],\n    specularDir: [\"finalSpecularScaled\", \"!defined(UNLIT) && defined(SPECULARTERM)\"],\n    clearcoatDir: [\"finalClearCoatScaled\", \"!defined(UNLIT) && defined(CLEARCOAT)\"],\n    sheenDir: [\"finalSheenScaled\", \"!defined(UNLIT) && defined(SHEEN)\"],\n    diffuseInd: [\"finalIrradiance\", \"!defined(UNLIT) && defined(REFLECTION)\"],\n    specularInd: [\"finalRadianceScaled\", \"!defined(UNLIT) && defined(REFLECTION)\"],\n    clearcoatInd: [\"clearcoatOut.finalClearCoatRadianceScaled\", \"!defined(UNLIT) && defined(REFLECTION) && defined(CLEARCOAT)\"],\n    sheenInd: [\"sheenOut.finalSheenRadianceScaled\", \"!defined(UNLIT) && defined(REFLECTION) && defined(SHEEN) && defined(ENVIRONMENTBRDF)\"],\n    refraction: [\"subSurfaceOut.finalRefraction\", \"!defined(UNLIT) && defined(SS_REFRACTION)\"],\n    lighting: [\"finalColor.rgb\", \"\"],\n    shadow: [\"shadow\", \"\"],\n    alpha: [\"alpha\", \"\"],\n};\n/**\n * Block used to implement the PBR metallic/roughness model\n */\nvar PBRMetallicRoughnessBlock = /** @class */ (function (_super) {\n    __extends(PBRMetallicRoughnessBlock, _super);\n    /**\n     * Create a new ReflectionBlock\n     * @param name defines the block name\n     */\n    function PBRMetallicRoughnessBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.VertexAndFragment) || this;\n        _this._environmentBRDFTexture = null;\n        _this._metallicReflectanceColor = Color3.White();\n        _this._metallicF0Factor = 1;\n        /**\n         * Intensity of the direct lights e.g. the four lights available in your scene.\n         * This impacts both the direct diffuse and specular highlights.\n         */\n        _this.directIntensity = 1.0;\n        /**\n         * Intensity of the environment e.g. how much the environment will light the object\n         * either through harmonics for rough material or through the reflection for shiny ones.\n         */\n        _this.environmentIntensity = 1.0;\n        /**\n         * This is a special control allowing the reduction of the specular highlights coming from the\n         * four lights of the scene. Those highlights may not be needed in full environment lighting.\n         */\n        _this.specularIntensity = 1.0;\n        /**\n         * Defines the  falloff type used in this material.\n         * It by default is Physical.\n         */\n        _this.lightFalloff = 0;\n        /**\n         * Specifies that alpha test should be used\n         */\n        _this.useAlphaTest = false;\n        /**\n         * Defines the alpha limits in alpha test mode.\n         */\n        _this.alphaTestCutoff = 0.5;\n        /**\n         * Specifies that alpha blending should be used\n         */\n        _this.useAlphaBlending = false;\n        /**\n         * Specifies that the material will keeps the reflection highlights over a transparent surface (only the most luminous ones).\n         * A car glass is a good example of that. When the street lights reflects on it you can not see what is behind.\n         */\n        _this.useRadianceOverAlpha = true;\n        /**\n         * Specifies that the material will keeps the specular highlights over a transparent surface (only the most luminous ones).\n         * A car glass is a good example of that. When sun reflects on it you can not see what is behind.\n         */\n        _this.useSpecularOverAlpha = true;\n        /**\n         * Enables specular anti aliasing in the PBR shader.\n         * It will both interacts on the Geometry for analytical and IBL lighting.\n         * It also prefilter the roughness map based on the bump values.\n         */\n        _this.enableSpecularAntiAliasing = false;\n        /**\n         * Enables realtime filtering on the texture.\n         */\n        _this.realTimeFiltering = false;\n        /**\n         * Quality switch for realtime filtering\n         */\n        _this.realTimeFilteringQuality = 8;\n        /**\n         * Defines if the material uses energy conservation.\n         */\n        _this.useEnergyConservation = true;\n        /**\n         * This parameters will enable/disable radiance occlusion by preventing the radiance to lit\n         * too much the area relying on ambient texture to define their ambient occlusion.\n         */\n        _this.useRadianceOcclusion = true;\n        /**\n         * This parameters will enable/disable Horizon occlusion to prevent normal maps to look shiny when the normal\n         * makes the reflect vector face the model (under horizon).\n         */\n        _this.useHorizonOcclusion = true;\n        /**\n         * If set to true, no lighting calculations will be applied.\n         */\n        _this.unlit = false;\n        /**\n         * Force normal to face away from face.\n         */\n        _this.forceNormalForward = false;\n        /**\n         * Defines the material debug mode.\n         * It helps seeing only some components of the material while troubleshooting.\n         */\n        _this.debugMode = 0;\n        /**\n         * Specify from where on screen the debug mode should start.\n         * The value goes from -1 (full screen) to 1 (not visible)\n         * It helps with side by side comparison against the final render\n         * This defaults to 0\n         */\n        _this.debugLimit = 0;\n        /**\n         * As the default viewing range might not be enough (if the ambient is really small for instance)\n         * You can use the factor to better multiply the final value.\n         */\n        _this.debugFactor = 1;\n        _this._isUnique = true;\n        _this.registerInput(\"worldPosition\", NodeMaterialBlockConnectionPointTypes.Vector4, false, NodeMaterialBlockTargets.Vertex);\n        _this.registerInput(\"worldNormal\", NodeMaterialBlockConnectionPointTypes.Vector4, false, NodeMaterialBlockTargets.Fragment);\n        _this.registerInput(\"view\", NodeMaterialBlockConnectionPointTypes.Matrix, false);\n        _this.registerInput(\"cameraPosition\", NodeMaterialBlockConnectionPointTypes.Vector3, false, NodeMaterialBlockTargets.Fragment);\n        _this.registerInput(\"perturbedNormal\", NodeMaterialBlockConnectionPointTypes.Vector4, true, NodeMaterialBlockTargets.Fragment);\n        _this.registerInput(\"baseColor\", NodeMaterialBlockConnectionPointTypes.Color3, true, NodeMaterialBlockTargets.Fragment);\n        _this.registerInput(\"metallic\", NodeMaterialBlockConnectionPointTypes.Float, false, NodeMaterialBlockTargets.Fragment);\n        _this.registerInput(\"roughness\", NodeMaterialBlockConnectionPointTypes.Float, false, NodeMaterialBlockTargets.Fragment);\n        _this.registerInput(\"ambientOcc\", NodeMaterialBlockConnectionPointTypes.Float, true, NodeMaterialBlockTargets.Fragment);\n        _this.registerInput(\"opacity\", NodeMaterialBlockConnectionPointTypes.Float, true, NodeMaterialBlockTargets.Fragment);\n        _this.registerInput(\"indexOfRefraction\", NodeMaterialBlockConnectionPointTypes.Float, true, NodeMaterialBlockTargets.Fragment);\n        _this.registerInput(\"ambientColor\", NodeMaterialBlockConnectionPointTypes.Color3, true, NodeMaterialBlockTargets.Fragment);\n        _this.registerInput(\"reflection\", NodeMaterialBlockConnectionPointTypes.Object, true, NodeMaterialBlockTargets.Fragment, new NodeMaterialConnectionPointCustomObject(\"reflection\", _this, NodeMaterialConnectionPointDirection.Input, ReflectionBlock, \"ReflectionBlock\"));\n        _this.registerInput(\"clearcoat\", NodeMaterialBlockConnectionPointTypes.Object, true, NodeMaterialBlockTargets.Fragment, new NodeMaterialConnectionPointCustomObject(\"clearcoat\", _this, NodeMaterialConnectionPointDirection.Input, ClearCoatBlock, \"ClearCoatBlock\"));\n        _this.registerInput(\"sheen\", NodeMaterialBlockConnectionPointTypes.Object, true, NodeMaterialBlockTargets.Fragment, new NodeMaterialConnectionPointCustomObject(\"sheen\", _this, NodeMaterialConnectionPointDirection.Input, SheenBlock, \"SheenBlock\"));\n        _this.registerInput(\"subsurface\", NodeMaterialBlockConnectionPointTypes.Object, true, NodeMaterialBlockTargets.Fragment, new NodeMaterialConnectionPointCustomObject(\"subsurface\", _this, NodeMaterialConnectionPointDirection.Input, SubSurfaceBlock, \"SubSurfaceBlock\"));\n        _this.registerInput(\"anisotropy\", NodeMaterialBlockConnectionPointTypes.Object, true, NodeMaterialBlockTargets.Fragment, new NodeMaterialConnectionPointCustomObject(\"anisotropy\", _this, NodeMaterialConnectionPointDirection.Input, AnisotropyBlock, \"AnisotropyBlock\"));\n        _this.registerInput(\"iridescence\", NodeMaterialBlockConnectionPointTypes.Object, true, NodeMaterialBlockTargets.Fragment, new NodeMaterialConnectionPointCustomObject(\"iridescence\", _this, NodeMaterialConnectionPointDirection.Input, IridescenceBlock, \"IridescenceBlock\"));\n        _this.registerOutput(\"ambientClr\", NodeMaterialBlockConnectionPointTypes.Color3, NodeMaterialBlockTargets.Fragment);\n        _this.registerOutput(\"diffuseDir\", NodeMaterialBlockConnectionPointTypes.Color3, NodeMaterialBlockTargets.Fragment);\n        _this.registerOutput(\"specularDir\", NodeMaterialBlockConnectionPointTypes.Color3, NodeMaterialBlockTargets.Fragment);\n        _this.registerOutput(\"clearcoatDir\", NodeMaterialBlockConnectionPointTypes.Color3, NodeMaterialBlockTargets.Fragment);\n        _this.registerOutput(\"sheenDir\", NodeMaterialBlockConnectionPointTypes.Color3, NodeMaterialBlockTargets.Fragment);\n        _this.registerOutput(\"diffuseInd\", NodeMaterialBlockConnectionPointTypes.Color3, NodeMaterialBlockTargets.Fragment);\n        _this.registerOutput(\"specularInd\", NodeMaterialBlockConnectionPointTypes.Color3, NodeMaterialBlockTargets.Fragment);\n        _this.registerOutput(\"clearcoatInd\", NodeMaterialBlockConnectionPointTypes.Color3, NodeMaterialBlockTargets.Fragment);\n        _this.registerOutput(\"sheenInd\", NodeMaterialBlockConnectionPointTypes.Color3, NodeMaterialBlockTargets.Fragment);\n        _this.registerOutput(\"refraction\", NodeMaterialBlockConnectionPointTypes.Color3, NodeMaterialBlockTargets.Fragment);\n        _this.registerOutput(\"lighting\", NodeMaterialBlockConnectionPointTypes.Color3, NodeMaterialBlockTargets.Fragment);\n        _this.registerOutput(\"shadow\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\n        _this.registerOutput(\"alpha\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Fragment);\n        return _this;\n    }\n    /**\n     * Initialize the block and prepare the context for build\n     * @param state defines the state that will be used for the build\n     */\n    PBRMetallicRoughnessBlock.prototype.initialize = function (state) {\n        state._excludeVariableName(\"vLightingIntensity\");\n        state._excludeVariableName(\"geometricNormalW\");\n        state._excludeVariableName(\"normalW\");\n        state._excludeVariableName(\"faceNormal\");\n        state._excludeVariableName(\"albedoOpacityOut\");\n        state._excludeVariableName(\"surfaceAlbedo\");\n        state._excludeVariableName(\"alpha\");\n        state._excludeVariableName(\"aoOut\");\n        state._excludeVariableName(\"baseColor\");\n        state._excludeVariableName(\"reflectivityOut\");\n        state._excludeVariableName(\"microSurface\");\n        state._excludeVariableName(\"roughness\");\n        state._excludeVariableName(\"NdotVUnclamped\");\n        state._excludeVariableName(\"NdotV\");\n        state._excludeVariableName(\"alphaG\");\n        state._excludeVariableName(\"AARoughnessFactors\");\n        state._excludeVariableName(\"environmentBrdf\");\n        state._excludeVariableName(\"ambientMonochrome\");\n        state._excludeVariableName(\"seo\");\n        state._excludeVariableName(\"eho\");\n        state._excludeVariableName(\"environmentRadiance\");\n        state._excludeVariableName(\"irradianceVector\");\n        state._excludeVariableName(\"environmentIrradiance\");\n        state._excludeVariableName(\"diffuseBase\");\n        state._excludeVariableName(\"specularBase\");\n        state._excludeVariableName(\"preInfo\");\n        state._excludeVariableName(\"info\");\n        state._excludeVariableName(\"shadow\");\n        state._excludeVariableName(\"finalDiffuse\");\n        state._excludeVariableName(\"finalAmbient\");\n        state._excludeVariableName(\"ambientOcclusionForDirectDiffuse\");\n        state._excludeVariableName(\"finalColor\");\n        state._excludeVariableName(\"vClipSpacePosition\");\n        state._excludeVariableName(\"vDebugMode\");\n    };\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    PBRMetallicRoughnessBlock.prototype.getClassName = function () {\n        return \"PBRMetallicRoughnessBlock\";\n    };\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"worldPosition\", {\n        /**\n         * Gets the world position input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"worldNormal\", {\n        /**\n         * Gets the world normal input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"view\", {\n        /**\n         * Gets the view matrix parameter\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"cameraPosition\", {\n        /**\n         * Gets the camera position input component\n         */\n        get: function () {\n            return this._inputs[3];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"perturbedNormal\", {\n        /**\n         * Gets the perturbed normal input component\n         */\n        get: function () {\n            return this._inputs[4];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"baseColor\", {\n        /**\n         * Gets the base color input component\n         */\n        get: function () {\n            return this._inputs[5];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"metallic\", {\n        /**\n         * Gets the metallic input component\n         */\n        get: function () {\n            return this._inputs[6];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"roughness\", {\n        /**\n         * Gets the roughness input component\n         */\n        get: function () {\n            return this._inputs[7];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"ambientOcc\", {\n        /**\n         * Gets the ambient occlusion input component\n         */\n        get: function () {\n            return this._inputs[8];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"opacity\", {\n        /**\n         * Gets the opacity input component\n         */\n        get: function () {\n            return this._inputs[9];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"indexOfRefraction\", {\n        /**\n         * Gets the index of refraction input component\n         */\n        get: function () {\n            return this._inputs[10];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"ambientColor\", {\n        /**\n         * Gets the ambient color input component\n         */\n        get: function () {\n            return this._inputs[11];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"reflection\", {\n        /**\n         * Gets the reflection object parameters\n         */\n        get: function () {\n            return this._inputs[12];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"clearcoat\", {\n        /**\n         * Gets the clear coat object parameters\n         */\n        get: function () {\n            return this._inputs[13];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"sheen\", {\n        /**\n         * Gets the sheen object parameters\n         */\n        get: function () {\n            return this._inputs[14];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"subsurface\", {\n        /**\n         * Gets the sub surface object parameters\n         */\n        get: function () {\n            return this._inputs[15];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"anisotropy\", {\n        /**\n         * Gets the anisotropy object parameters\n         */\n        get: function () {\n            return this._inputs[16];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"iridescence\", {\n        /**\n         * Gets the iridescence object parameters\n         */\n        get: function () {\n            return this._inputs[17];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"ambientClr\", {\n        /**\n         * Gets the ambient output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"diffuseDir\", {\n        /**\n         * Gets the diffuse output component\n         */\n        get: function () {\n            return this._outputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"specularDir\", {\n        /**\n         * Gets the specular output component\n         */\n        get: function () {\n            return this._outputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"clearcoatDir\", {\n        /**\n         * Gets the clear coat output component\n         */\n        get: function () {\n            return this._outputs[3];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"sheenDir\", {\n        /**\n         * Gets the sheen output component\n         */\n        get: function () {\n            return this._outputs[4];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"diffuseInd\", {\n        /**\n         * Gets the indirect diffuse output component\n         */\n        get: function () {\n            return this._outputs[5];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"specularInd\", {\n        /**\n         * Gets the indirect specular output component\n         */\n        get: function () {\n            return this._outputs[6];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"clearcoatInd\", {\n        /**\n         * Gets the indirect clear coat output component\n         */\n        get: function () {\n            return this._outputs[7];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"sheenInd\", {\n        /**\n         * Gets the indirect sheen output component\n         */\n        get: function () {\n            return this._outputs[8];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"refraction\", {\n        /**\n         * Gets the refraction output component\n         */\n        get: function () {\n            return this._outputs[9];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"lighting\", {\n        /**\n         * Gets the global lighting output component\n         */\n        get: function () {\n            return this._outputs[10];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"shadow\", {\n        /**\n         * Gets the shadow output component\n         */\n        get: function () {\n            return this._outputs[11];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PBRMetallicRoughnessBlock.prototype, \"alpha\", {\n        /**\n         * Gets the alpha output component\n         */\n        get: function () {\n            return this._outputs[12];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    PBRMetallicRoughnessBlock.prototype.autoConfigure = function (material) {\n        if (!this.cameraPosition.isConnected) {\n            var cameraPositionInput = material.getInputBlockByPredicate(function (b) { return b.systemValue === NodeMaterialSystemValues.CameraPosition; });\n            if (!cameraPositionInput) {\n                cameraPositionInput = new InputBlock(\"cameraPosition\");\n                cameraPositionInput.setAsSystemValue(NodeMaterialSystemValues.CameraPosition);\n            }\n            cameraPositionInput.output.connectTo(this.cameraPosition);\n        }\n        if (!this.view.isConnected) {\n            var viewInput = material.getInputBlockByPredicate(function (b) { return b.systemValue === NodeMaterialSystemValues.View; });\n            if (!viewInput) {\n                viewInput = new InputBlock(\"view\");\n                viewInput.setAsSystemValue(NodeMaterialSystemValues.View);\n            }\n            viewInput.output.connectTo(this.view);\n        }\n    };\n    PBRMetallicRoughnessBlock.prototype.prepareDefines = function (mesh, nodeMaterial, defines) {\n        // General\n        defines.setValue(\"PBR\", true);\n        defines.setValue(\"METALLICWORKFLOW\", true);\n        defines.setValue(\"DEBUGMODE\", this.debugMode, true);\n        defines.setValue(\"NORMALXYSCALE\", true);\n        defines.setValue(\"BUMP\", this.perturbedNormal.isConnected, true);\n        defines.setValue(\"LODBASEDMICROSFURACE\", this._scene.getEngine().getCaps().textureLOD);\n        // Albedo & Opacity\n        defines.setValue(\"ALBEDO\", false, true);\n        defines.setValue(\"OPACITY\", this.opacity.isConnected, true);\n        // Ambient occlusion\n        defines.setValue(\"AMBIENT\", true, true);\n        defines.setValue(\"AMBIENTINGRAYSCALE\", false, true);\n        // Reflectivity\n        defines.setValue(\"REFLECTIVITY\", false, true);\n        defines.setValue(\"AOSTOREINMETALMAPRED\", false, true);\n        defines.setValue(\"METALLNESSSTOREINMETALMAPBLUE\", false, true);\n        defines.setValue(\"ROUGHNESSSTOREINMETALMAPALPHA\", false, true);\n        defines.setValue(\"ROUGHNESSSTOREINMETALMAPGREEN\", false, true);\n        // Lighting & colors\n        if (this.lightFalloff === PBRBaseMaterial.LIGHTFALLOFF_STANDARD) {\n            defines.setValue(\"USEPHYSICALLIGHTFALLOFF\", false);\n            defines.setValue(\"USEGLTFLIGHTFALLOFF\", false);\n        }\n        else if (this.lightFalloff === PBRBaseMaterial.LIGHTFALLOFF_GLTF) {\n            defines.setValue(\"USEPHYSICALLIGHTFALLOFF\", false);\n            defines.setValue(\"USEGLTFLIGHTFALLOFF\", true);\n        }\n        else {\n            defines.setValue(\"USEPHYSICALLIGHTFALLOFF\", true);\n            defines.setValue(\"USEGLTFLIGHTFALLOFF\", false);\n        }\n        // Transparency\n        var alphaTestCutOffString = this.alphaTestCutoff.toString();\n        defines.setValue(\"ALPHABLEND\", this.useAlphaBlending, true);\n        defines.setValue(\"ALPHAFROMALBEDO\", false, true);\n        defines.setValue(\"ALPHATEST\", this.useAlphaTest, true);\n        defines.setValue(\"ALPHATESTVALUE\", alphaTestCutOffString.indexOf(\".\") < 0 ? alphaTestCutOffString + \".\" : alphaTestCutOffString, true);\n        defines.setValue(\"OPACITYRGB\", false, true);\n        // Rendering\n        defines.setValue(\"RADIANCEOVERALPHA\", this.useRadianceOverAlpha, true);\n        defines.setValue(\"SPECULAROVERALPHA\", this.useSpecularOverAlpha, true);\n        defines.setValue(\"SPECULARAA\", this._scene.getEngine().getCaps().standardDerivatives && this.enableSpecularAntiAliasing, true);\n        defines.setValue(\"REALTIME_FILTERING\", this.realTimeFiltering, true);\n        var scene = mesh.getScene();\n        if (scene.getEngine()._features.needTypeSuffixInShaderConstants) {\n            defines.setValue(\"NUM_SAMPLES\", this.realTimeFilteringQuality + \"u\", true);\n        }\n        else {\n            defines.setValue(\"NUM_SAMPLES\", \"\" + this.realTimeFilteringQuality, true);\n        }\n        // Advanced\n        defines.setValue(\"BRDF_V_HEIGHT_CORRELATED\", true);\n        defines.setValue(\"MS_BRDF_ENERGY_CONSERVATION\", this.useEnergyConservation, true);\n        defines.setValue(\"RADIANCEOCCLUSION\", this.useRadianceOcclusion, true);\n        defines.setValue(\"HORIZONOCCLUSION\", this.useHorizonOcclusion, true);\n        defines.setValue(\"UNLIT\", this.unlit, true);\n        defines.setValue(\"FORCENORMALFORWARD\", this.forceNormalForward, true);\n        if (this._environmentBRDFTexture && MaterialFlags.ReflectionTextureEnabled) {\n            defines.setValue(\"ENVIRONMENTBRDF\", true);\n            defines.setValue(\"ENVIRONMENTBRDF_RGBD\", this._environmentBRDFTexture.isRGBD, true);\n        }\n        else {\n            defines.setValue(\"ENVIRONMENTBRDF\", false);\n            defines.setValue(\"ENVIRONMENTBRDF_RGBD\", false);\n        }\n        if (defines._areImageProcessingDirty && nodeMaterial.imageProcessingConfiguration) {\n            nodeMaterial.imageProcessingConfiguration.prepareDefines(defines);\n        }\n        if (!defines._areLightsDirty) {\n            return;\n        }\n        if (!this.light) {\n            // Lights\n            MaterialHelper.PrepareDefinesForLights(scene, mesh, defines, true, nodeMaterial.maxSimultaneousLights);\n            defines._needNormals = true;\n            // Multiview\n            MaterialHelper.PrepareDefinesForMultiview(scene, defines);\n        }\n        else {\n            var state = {\n                needNormals: false,\n                needRebuild: false,\n                lightmapMode: false,\n                shadowEnabled: false,\n                specularEnabled: false,\n            };\n            MaterialHelper.PrepareDefinesForLight(scene, mesh, this.light, this._lightId, defines, true, state);\n            if (state.needRebuild) {\n                defines.rebuild();\n            }\n        }\n    };\n    PBRMetallicRoughnessBlock.prototype.updateUniformsAndSamples = function (state, nodeMaterial, defines, uniformBuffers) {\n        for (var lightIndex = 0; lightIndex < nodeMaterial.maxSimultaneousLights; lightIndex++) {\n            if (!defines[\"LIGHT\" + lightIndex]) {\n                break;\n            }\n            var onlyUpdateBuffersList = state.uniforms.indexOf(\"vLightData\" + lightIndex) >= 0;\n            MaterialHelper.PrepareUniformsAndSamplersForLight(lightIndex, state.uniforms, state.samplers, defines[\"PROJECTEDLIGHTTEXTURE\" + lightIndex], uniformBuffers, onlyUpdateBuffersList);\n        }\n    };\n    PBRMetallicRoughnessBlock.prototype.isReady = function (mesh, nodeMaterial, defines) {\n        if (this._environmentBRDFTexture && !this._environmentBRDFTexture.isReady()) {\n            return false;\n        }\n        if (defines._areImageProcessingDirty && nodeMaterial.imageProcessingConfiguration) {\n            if (!nodeMaterial.imageProcessingConfiguration.isReady()) {\n                return false;\n            }\n        }\n        return true;\n    };\n    PBRMetallicRoughnessBlock.prototype.bind = function (effect, nodeMaterial, mesh) {\n        var _a, _b;\n        if (!mesh) {\n            return;\n        }\n        var scene = mesh.getScene();\n        if (!this.light) {\n            MaterialHelper.BindLights(scene, mesh, effect, true, nodeMaterial.maxSimultaneousLights);\n        }\n        else {\n            MaterialHelper.BindLight(this.light, this._lightId, scene, effect, true);\n        }\n        effect.setTexture(this._environmentBrdfSamplerName, this._environmentBRDFTexture);\n        effect.setFloat2(\"vDebugMode\", this.debugLimit, this.debugFactor);\n        var ambientScene = this._scene.ambientColor;\n        if (ambientScene) {\n            effect.setColor3(\"ambientFromScene\", ambientScene);\n        }\n        var invertNormal = scene.useRightHandedSystem === (scene._mirroredCameraPosition != null);\n        effect.setFloat(this._invertNormalName, invertNormal ? -1 : 1);\n        effect.setFloat4(\"vLightingIntensity\", this.directIntensity, 1, this.environmentIntensity * this._scene.environmentIntensity, this.specularIntensity);\n        // reflectivity bindings\n        var outsideIOR = 1; // consider air as clear coat and other layers would remap in the shader.\n        var ior = (_b = (_a = this.indexOfRefraction.connectInputBlock) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1.5;\n        // We are here deriving our default reflectance from a common value for none metallic surface.\n        // Based of the schlick fresnel approximation model\n        // for dielectrics.\n        var f0 = Math.pow((ior - outsideIOR) / (ior + outsideIOR), 2);\n        // Tweak the default F0 and F90 based on our given setup\n        this._metallicReflectanceColor.scaleToRef(f0 * this._metallicF0Factor, TmpColors.Color3[0]);\n        var metallicF90 = this._metallicF0Factor;\n        effect.setColor4(this._vMetallicReflectanceFactorsName, TmpColors.Color3[0], metallicF90);\n        if (nodeMaterial.imageProcessingConfiguration) {\n            nodeMaterial.imageProcessingConfiguration.bind(effect);\n        }\n    };\n    PBRMetallicRoughnessBlock.prototype._injectVertexCode = function (state) {\n        var _a, _b;\n        var worldPos = this.worldPosition;\n        var comments = \"//\".concat(this.name);\n        // Declaration\n        if (!this.light) {\n            // Emit for all lights\n            state._emitFunctionFromInclude(state.supportUniformBuffers ? \"lightVxUboDeclaration\" : \"lightVxFragmentDeclaration\", comments, {\n                repeatKey: \"maxSimultaneousLights\",\n            });\n            this._lightId = 0;\n            state.sharedData.dynamicUniformBlocks.push(this);\n        }\n        else {\n            this._lightId = (state.counters[\"lightCounter\"] !== undefined ? state.counters[\"lightCounter\"] : -1) + 1;\n            state.counters[\"lightCounter\"] = this._lightId;\n            state._emitFunctionFromInclude(state.supportUniformBuffers ? \"lightVxUboDeclaration\" : \"lightVxFragmentDeclaration\", comments, {\n                replaceStrings: [{ search: /{X}/g, replace: this._lightId.toString() }],\n            }, this._lightId.toString());\n        }\n        // Inject code in vertex\n        var worldPosVaryingName = \"v_\" + worldPos.associatedVariableName;\n        if (state._emitVaryingFromString(worldPosVaryingName, \"vec4\")) {\n            state.compilationString += \"\".concat(worldPosVaryingName, \" = \").concat(worldPos.associatedVariableName, \";\\r\\n\");\n        }\n        var reflectionBlock = this.reflection.isConnected ? (_a = this.reflection.connectedPoint) === null || _a === void 0 ? void 0 : _a.ownerBlock : null;\n        if (reflectionBlock) {\n            reflectionBlock.viewConnectionPoint = this.view;\n        }\n        state.compilationString += (_b = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock.handleVertexSide(state)) !== null && _b !== void 0 ? _b : \"\";\n        state._emitUniformFromString(\"vDebugMode\", \"vec2\", \"defined(IGNORE) || DEBUGMODE > 0\");\n        state._emitUniformFromString(\"ambientFromScene\", \"vec3\");\n        if (state._emitVaryingFromString(\"vClipSpacePosition\", \"vec4\", \"defined(IGNORE) || DEBUGMODE > 0\")) {\n            state._injectAtEnd += \"#if DEBUGMODE > 0\\r\\n\";\n            state._injectAtEnd += \"vClipSpacePosition = gl_Position;\\r\\n\";\n            state._injectAtEnd += \"#endif\\r\\n\";\n        }\n        if (this.light) {\n            state.compilationString += state._emitCodeFromInclude(\"shadowsVertex\", comments, {\n                replaceStrings: [\n                    { search: /{X}/g, replace: this._lightId.toString() },\n                    { search: /worldPos/g, replace: worldPos.associatedVariableName },\n                ],\n            });\n        }\n        else {\n            state.compilationString += \"vec4 worldPos = \".concat(worldPos.associatedVariableName, \";\\r\\n\");\n            if (this.view.isConnected) {\n                state.compilationString += \"mat4 view = \".concat(this.view.associatedVariableName, \";\\r\\n\");\n            }\n            state.compilationString += state._emitCodeFromInclude(\"shadowsVertex\", comments, {\n                repeatKey: \"maxSimultaneousLights\",\n            });\n        }\n    };\n    PBRMetallicRoughnessBlock.prototype._getAlbedoOpacityCode = function () {\n        var code = \"albedoOpacityOutParams albedoOpacityOut;\\r\\n\";\n        var albedoColor = this.baseColor.isConnected ? this.baseColor.associatedVariableName : \"vec3(1.)\";\n        var opacity = this.opacity.isConnected ? this.opacity.associatedVariableName : \"1.\";\n        code += \"albedoOpacityBlock(\\n                vec4(\".concat(albedoColor, \", 1.),\\n            #ifdef ALBEDO\\n                vec4(1.),\\n                vec2(1., 1.),\\n            #endif\\n            #ifdef OPACITY\\n                vec4(\").concat(opacity, \"),\\n                vec2(1., 1.),\\n            #endif\\n                albedoOpacityOut\\n            );\\n\\n            vec3 surfaceAlbedo = albedoOpacityOut.surfaceAlbedo;\\n            float alpha = albedoOpacityOut.alpha;\\r\\n\");\n        return code;\n    };\n    PBRMetallicRoughnessBlock.prototype._getAmbientOcclusionCode = function () {\n        var code = \"ambientOcclusionOutParams aoOut;\\r\\n\";\n        var ao = this.ambientOcc.isConnected ? this.ambientOcc.associatedVariableName : \"1.\";\n        code += \"ambientOcclusionBlock(\\n            #ifdef AMBIENT\\n                vec3(\".concat(ao, \"),\\n                vec4(0., 1.0, 1.0, 0.),\\n            #endif\\n                aoOut\\n            );\\r\\n\");\n        return code;\n    };\n    PBRMetallicRoughnessBlock.prototype._getReflectivityCode = function (state) {\n        var code = \"reflectivityOutParams reflectivityOut;\\r\\n\";\n        var aoIntensity = \"1.\";\n        this._vMetallicReflectanceFactorsName = state._getFreeVariableName(\"vMetallicReflectanceFactors\");\n        state._emitUniformFromString(this._vMetallicReflectanceFactorsName, \"vec4\");\n        code += \"vec3 baseColor = surfaceAlbedo;\\n\\n            reflectivityBlock(\\n                vec4(\".concat(this.metallic.associatedVariableName, \", \").concat(this.roughness.associatedVariableName, \", 0., 0.),\\n            #ifdef METALLICWORKFLOW\\n                surfaceAlbedo,\\n                \").concat(this._vMetallicReflectanceFactorsName, \",\\n            #endif\\n            #ifdef REFLECTIVITY\\n                vec3(0., 0., \").concat(aoIntensity, \"),\\n                vec4(1.),\\n            #endif\\n            #if defined(METALLICWORKFLOW) && defined(REFLECTIVITY)  && defined(AOSTOREINMETALMAPRED)\\n                aoOut.ambientOcclusionColor,\\n            #endif\\n            #ifdef MICROSURFACEMAP\\n                microSurfaceTexel, <== not handled!\\n            #endif\\n                reflectivityOut\\n            );\\n\\n            float microSurface = reflectivityOut.microSurface;\\n            float roughness = reflectivityOut.roughness;\\n\\n            #ifdef METALLICWORKFLOW\\n                surfaceAlbedo = reflectivityOut.surfaceAlbedo;\\n            #endif\\n            #if defined(METALLICWORKFLOW) && defined(REFLECTIVITY) && defined(AOSTOREINMETALMAPRED)\\n                aoOut.ambientOcclusionColor = reflectivityOut.ambientOcclusionColor;\\n            #endif\\r\\n\");\n        return code;\n    };\n    PBRMetallicRoughnessBlock.prototype._buildBlock = function (state) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16;\n        _super.prototype._buildBlock.call(this, state);\n        this._scene = state.sharedData.scene;\n        if (!this._environmentBRDFTexture) {\n            this._environmentBRDFTexture = GetEnvironmentBRDFTexture(this._scene);\n        }\n        var reflectionBlock = this.reflection.isConnected ? (_a = this.reflection.connectedPoint) === null || _a === void 0 ? void 0 : _a.ownerBlock : null;\n        if (reflectionBlock) {\n            // Need those variables to be setup when calling _injectVertexCode\n            reflectionBlock.worldPositionConnectionPoint = this.worldPosition;\n            reflectionBlock.cameraPositionConnectionPoint = this.cameraPosition;\n            reflectionBlock.worldNormalConnectionPoint = this.worldNormal;\n        }\n        if (state.target !== NodeMaterialBlockTargets.Fragment) {\n            // Vertex\n            this._injectVertexCode(state);\n            return this;\n        }\n        // Fragment\n        state.sharedData.forcedBindableBlocks.push(this);\n        state.sharedData.blocksWithDefines.push(this);\n        state.sharedData.blockingBlocks.push(this);\n        var comments = \"//\".concat(this.name);\n        var worldPosVarName = \"v_\" + this.worldPosition.associatedVariableName;\n        var normalShading = this.perturbedNormal;\n        this._environmentBrdfSamplerName = state._getFreeVariableName(\"environmentBrdfSampler\");\n        state._emit2DSampler(this._environmentBrdfSamplerName);\n        state.sharedData.hints.needAlphaBlending = state.sharedData.hints.needAlphaBlending || this.useAlphaBlending;\n        state.sharedData.hints.needAlphaTesting = state.sharedData.hints.needAlphaTesting || this.useAlphaTest;\n        state._emitExtension(\"lod\", \"#extension GL_EXT_shader_texture_lod : enable\", \"defined(LODBASEDMICROSFURACE)\");\n        state._emitExtension(\"derivatives\", \"#extension GL_OES_standard_derivatives : enable\");\n        // Image processing uniforms\n        state.uniforms.push(\"exposureLinear\");\n        state.uniforms.push(\"contrast\");\n        state.uniforms.push(\"vInverseScreenSize\");\n        state.uniforms.push(\"vignetteSettings1\");\n        state.uniforms.push(\"vignetteSettings2\");\n        state.uniforms.push(\"vCameraColorCurveNegative\");\n        state.uniforms.push(\"vCameraColorCurveNeutral\");\n        state.uniforms.push(\"vCameraColorCurvePositive\");\n        state.uniforms.push(\"txColorTransform\");\n        state.uniforms.push(\"colorTransformSettings\");\n        //\n        // Includes\n        //\n        if (!this.light) {\n            // Emit for all lights\n            state._emitFunctionFromInclude(state.supportUniformBuffers ? \"lightUboDeclaration\" : \"lightFragmentDeclaration\", comments, {\n                repeatKey: \"maxSimultaneousLights\",\n            });\n        }\n        else {\n            state._emitFunctionFromInclude(state.supportUniformBuffers ? \"lightUboDeclaration\" : \"lightFragmentDeclaration\", comments, {\n                replaceStrings: [{ search: /{X}/g, replace: this._lightId.toString() }],\n            }, this._lightId.toString());\n        }\n        state._emitFunctionFromInclude(\"helperFunctions\", comments);\n        state._emitFunctionFromInclude(\"importanceSampling\", comments);\n        state._emitFunctionFromInclude(\"pbrHelperFunctions\", comments);\n        state._emitFunctionFromInclude(\"imageProcessingDeclaration\", comments);\n        state._emitFunctionFromInclude(\"imageProcessingFunctions\", comments);\n        state._emitFunctionFromInclude(\"shadowsFragmentFunctions\", comments, {\n            replaceStrings: [{ search: /vPositionW/g, replace: worldPosVarName + \".xyz\" }],\n        });\n        state._emitFunctionFromInclude(\"pbrDirectLightingSetupFunctions\", comments, {\n            replaceStrings: [{ search: /vPositionW/g, replace: worldPosVarName + \".xyz\" }],\n        });\n        state._emitFunctionFromInclude(\"pbrDirectLightingFalloffFunctions\", comments);\n        state._emitFunctionFromInclude(\"pbrBRDFFunctions\", comments, {\n            replaceStrings: [{ search: /REFLECTIONMAP_SKYBOX/g, replace: (_b = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._defineSkyboxName) !== null && _b !== void 0 ? _b : \"REFLECTIONMAP_SKYBOX\" }],\n        });\n        state._emitFunctionFromInclude(\"hdrFilteringFunctions\", comments);\n        state._emitFunctionFromInclude(\"pbrDirectLightingFunctions\", comments, {\n            replaceStrings: [{ search: /vPositionW/g, replace: worldPosVarName + \".xyz\" }],\n        });\n        state._emitFunctionFromInclude(\"pbrIBLFunctions\", comments);\n        state._emitFunctionFromInclude(\"pbrBlockAlbedoOpacity\", comments);\n        state._emitFunctionFromInclude(\"pbrBlockReflectivity\", comments);\n        state._emitFunctionFromInclude(\"pbrBlockAmbientOcclusion\", comments);\n        state._emitFunctionFromInclude(\"pbrBlockAlphaFresnel\", comments);\n        state._emitFunctionFromInclude(\"pbrBlockAnisotropic\", comments);\n        //\n        // code\n        //\n        state._emitUniformFromString(\"vLightingIntensity\", \"vec4\");\n        // _____________________________ Geometry Information ____________________________\n        this._vNormalWName = state._getFreeVariableName(\"vNormalW\");\n        state.compilationString += \"vec4 \".concat(this._vNormalWName, \" = normalize(\").concat(this.worldNormal.associatedVariableName, \");\\r\\n\");\n        if (state._registerTempVariable(\"viewDirectionW\")) {\n            state.compilationString += \"vec3 viewDirectionW = normalize(\".concat(this.cameraPosition.associatedVariableName, \" - \").concat(worldPosVarName, \".xyz);\\r\\n\");\n        }\n        state.compilationString += \"vec3 geometricNormalW = \".concat(this._vNormalWName, \".xyz;\\r\\n\");\n        state.compilationString += \"vec3 normalW = \".concat(normalShading.isConnected ? \"normalize(\" + normalShading.associatedVariableName + \".xyz)\" : \"geometricNormalW\", \";\\r\\n\");\n        this._invertNormalName = state._getFreeVariableName(\"invertNormal\");\n        state._emitUniformFromString(this._invertNormalName, \"float\");\n        state.compilationString += state._emitCodeFromInclude(\"pbrBlockNormalFinal\", comments, {\n            replaceStrings: [\n                { search: /vPositionW/g, replace: worldPosVarName + \".xyz\" },\n                { search: /vEyePosition.w/g, replace: this._invertNormalName },\n            ],\n        });\n        // _____________________________ Albedo & Opacity ______________________________\n        state.compilationString += this._getAlbedoOpacityCode();\n        state.compilationString += state._emitCodeFromInclude(\"depthPrePass\", comments);\n        // _____________________________ AO  _______________________________\n        state.compilationString += this._getAmbientOcclusionCode();\n        state.compilationString += state._emitCodeFromInclude(\"pbrBlockLightmapInit\", comments);\n        // _____________________________ UNLIT  _______________________________\n        state.compilationString += \"#ifdef UNLIT\\n                vec3 diffuseBase = vec3(1., 1., 1.);\\n            #else\\r\\n\";\n        // _____________________________ Reflectivity _______________________________\n        state.compilationString += this._getReflectivityCode(state);\n        // _____________________________ Geometry info _________________________________\n        state.compilationString += state._emitCodeFromInclude(\"pbrBlockGeometryInfo\", comments, {\n            replaceStrings: [\n                { search: /REFLECTIONMAP_SKYBOX/g, replace: (_c = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._defineSkyboxName) !== null && _c !== void 0 ? _c : \"REFLECTIONMAP_SKYBOX\" },\n                { search: /REFLECTIONMAP_3D/g, replace: (_d = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._define3DName) !== null && _d !== void 0 ? _d : \"REFLECTIONMAP_3D\" },\n            ],\n        });\n        // _____________________________ Anisotropy _______________________________________\n        var anisotropyBlock = this.anisotropy.isConnected ? (_e = this.anisotropy.connectedPoint) === null || _e === void 0 ? void 0 : _e.ownerBlock : null;\n        if (anisotropyBlock) {\n            anisotropyBlock.worldPositionConnectionPoint = this.worldPosition;\n            anisotropyBlock.worldNormalConnectionPoint = this.worldNormal;\n            state.compilationString += anisotropyBlock.getCode(state, !this.perturbedNormal.isConnected);\n        }\n        // _____________________________ Reflection _______________________________________\n        if (reflectionBlock && reflectionBlock.hasTexture) {\n            state.compilationString += reflectionBlock.getCode(state, anisotropyBlock ? \"anisotropicOut.anisotropicNormal\" : \"normalW\");\n        }\n        state._emitFunctionFromInclude(\"pbrBlockReflection\", comments, {\n            replaceStrings: [\n                { search: /computeReflectionCoords/g, replace: \"computeReflectionCoordsPBR\" },\n                { search: /REFLECTIONMAP_3D/g, replace: (_f = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._define3DName) !== null && _f !== void 0 ? _f : \"REFLECTIONMAP_3D\" },\n                { search: /REFLECTIONMAP_OPPOSITEZ/g, replace: (_g = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._defineOppositeZ) !== null && _g !== void 0 ? _g : \"REFLECTIONMAP_OPPOSITEZ\" },\n                { search: /REFLECTIONMAP_PROJECTION/g, replace: (_h = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._defineProjectionName) !== null && _h !== void 0 ? _h : \"REFLECTIONMAP_PROJECTION\" },\n                { search: /REFLECTIONMAP_SKYBOX/g, replace: (_j = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._defineSkyboxName) !== null && _j !== void 0 ? _j : \"REFLECTIONMAP_SKYBOX\" },\n                { search: /LODINREFLECTIONALPHA/g, replace: (_k = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._defineLODReflectionAlpha) !== null && _k !== void 0 ? _k : \"LODINREFLECTIONALPHA\" },\n                { search: /LINEARSPECULARREFLECTION/g, replace: (_l = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._defineLinearSpecularReflection) !== null && _l !== void 0 ? _l : \"LINEARSPECULARREFLECTION\" },\n                { search: /vReflectionFilteringInfo/g, replace: (_m = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._vReflectionFilteringInfoName) !== null && _m !== void 0 ? _m : \"vReflectionFilteringInfo\" },\n            ],\n        });\n        // ___________________ Compute Reflectance aka R0 F0 info _________________________\n        state.compilationString += state._emitCodeFromInclude(\"pbrBlockReflectance0\", comments, {\n            replaceStrings: [{ search: /metallicReflectanceFactors/g, replace: this._vMetallicReflectanceFactorsName }],\n        });\n        // ________________________________ Sheen ______________________________\n        var sheenBlock = this.sheen.isConnected ? (_o = this.sheen.connectedPoint) === null || _o === void 0 ? void 0 : _o.ownerBlock : null;\n        if (sheenBlock) {\n            state.compilationString += sheenBlock.getCode(reflectionBlock);\n        }\n        state._emitFunctionFromInclude(\"pbrBlockSheen\", comments, {\n            replaceStrings: [\n                { search: /REFLECTIONMAP_3D/g, replace: (_p = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._define3DName) !== null && _p !== void 0 ? _p : \"REFLECTIONMAP_3D\" },\n                { search: /REFLECTIONMAP_SKYBOX/g, replace: (_q = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._defineSkyboxName) !== null && _q !== void 0 ? _q : \"REFLECTIONMAP_SKYBOX\" },\n                { search: /LODINREFLECTIONALPHA/g, replace: (_r = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._defineLODReflectionAlpha) !== null && _r !== void 0 ? _r : \"LODINREFLECTIONALPHA\" },\n                { search: /LINEARSPECULARREFLECTION/g, replace: (_s = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._defineLinearSpecularReflection) !== null && _s !== void 0 ? _s : \"LINEARSPECULARREFLECTION\" },\n            ],\n        });\n        // _____________________________ Iridescence _______________________________\n        var iridescenceBlock = this.iridescence.isConnected ? (_t = this.iridescence.connectedPoint) === null || _t === void 0 ? void 0 : _t.ownerBlock : null;\n        state.compilationString += IridescenceBlock.GetCode(iridescenceBlock);\n        state._emitFunctionFromInclude(\"pbrBlockIridescence\", comments, {\n            replaceStrings: [],\n        });\n        // _____________________________ Clear Coat ____________________________\n        var clearcoatBlock = this.clearcoat.isConnected ? (_u = this.clearcoat.connectedPoint) === null || _u === void 0 ? void 0 : _u.ownerBlock : null;\n        var generateTBNSpace = !this.perturbedNormal.isConnected && !this.anisotropy.isConnected;\n        var isTangentConnectedToPerturbNormal = this.perturbedNormal.isConnected && ((_w = ((_v = this.perturbedNormal.connectedPoint) === null || _v === void 0 ? void 0 : _v.ownerBlock).worldTangent) === null || _w === void 0 ? void 0 : _w.isConnected);\n        var isTangentConnectedToAnisotropy = this.anisotropy.isConnected && ((_x = this.anisotropy.connectedPoint) === null || _x === void 0 ? void 0 : _x.ownerBlock).worldTangent.isConnected;\n        var vTBNAvailable = isTangentConnectedToPerturbNormal || (!this.perturbedNormal.isConnected && isTangentConnectedToAnisotropy);\n        state.compilationString += ClearCoatBlock.GetCode(state, clearcoatBlock, reflectionBlock, worldPosVarName, generateTBNSpace, vTBNAvailable, this.worldNormal.associatedVariableName);\n        if (generateTBNSpace) {\n            vTBNAvailable = (_y = clearcoatBlock === null || clearcoatBlock === void 0 ? void 0 : clearcoatBlock.worldTangent.isConnected) !== null && _y !== void 0 ? _y : false;\n        }\n        state._emitFunctionFromInclude(\"pbrBlockClearcoat\", comments, {\n            replaceStrings: [\n                { search: /computeReflectionCoords/g, replace: \"computeReflectionCoordsPBR\" },\n                { search: /REFLECTIONMAP_3D/g, replace: (_z = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._define3DName) !== null && _z !== void 0 ? _z : \"REFLECTIONMAP_3D\" },\n                { search: /REFLECTIONMAP_OPPOSITEZ/g, replace: (_0 = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._defineOppositeZ) !== null && _0 !== void 0 ? _0 : \"REFLECTIONMAP_OPPOSITEZ\" },\n                { search: /REFLECTIONMAP_PROJECTION/g, replace: (_1 = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._defineProjectionName) !== null && _1 !== void 0 ? _1 : \"REFLECTIONMAP_PROJECTION\" },\n                { search: /REFLECTIONMAP_SKYBOX/g, replace: (_2 = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._defineSkyboxName) !== null && _2 !== void 0 ? _2 : \"REFLECTIONMAP_SKYBOX\" },\n                { search: /LODINREFLECTIONALPHA/g, replace: (_3 = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._defineLODReflectionAlpha) !== null && _3 !== void 0 ? _3 : \"LODINREFLECTIONALPHA\" },\n                { search: /LINEARSPECULARREFLECTION/g, replace: (_4 = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._defineLinearSpecularReflection) !== null && _4 !== void 0 ? _4 : \"LINEARSPECULARREFLECTION\" },\n                { search: /defined\\(TANGENT\\)/g, replace: vTBNAvailable ? \"defined(TANGENT)\" : \"defined(IGNORE)\" },\n            ],\n        });\n        // _________________________ Specular Environment Reflectance __________________________\n        state.compilationString += state._emitCodeFromInclude(\"pbrBlockReflectance\", comments, {\n            replaceStrings: [\n                { search: /REFLECTIONMAP_SKYBOX/g, replace: (_5 = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._defineSkyboxName) !== null && _5 !== void 0 ? _5 : \"REFLECTIONMAP_SKYBOX\" },\n                { search: /REFLECTIONMAP_3D/g, replace: (_6 = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._define3DName) !== null && _6 !== void 0 ? _6 : \"REFLECTIONMAP_3D\" },\n            ],\n        });\n        // ___________________________________ SubSurface ______________________________________\n        var subsurfaceBlock = this.subsurface.isConnected ? (_7 = this.subsurface.connectedPoint) === null || _7 === void 0 ? void 0 : _7.ownerBlock : null;\n        var refractionBlock = this.subsurface.isConnected\n            ? (_9 = ((_8 = this.subsurface.connectedPoint) === null || _8 === void 0 ? void 0 : _8.ownerBlock).refraction.connectedPoint) === null || _9 === void 0 ? void 0 : _9.ownerBlock\n            : null;\n        if (refractionBlock) {\n            refractionBlock.viewConnectionPoint = this.view;\n            refractionBlock.indexOfRefractionConnectionPoint = this.indexOfRefraction;\n        }\n        state.compilationString += SubSurfaceBlock.GetCode(state, subsurfaceBlock, reflectionBlock, worldPosVarName);\n        state._emitFunctionFromInclude(\"pbrBlockSubSurface\", comments, {\n            replaceStrings: [\n                { search: /REFLECTIONMAP_3D/g, replace: (_10 = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._define3DName) !== null && _10 !== void 0 ? _10 : \"REFLECTIONMAP_3D\" },\n                { search: /REFLECTIONMAP_OPPOSITEZ/g, replace: (_11 = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._defineOppositeZ) !== null && _11 !== void 0 ? _11 : \"REFLECTIONMAP_OPPOSITEZ\" },\n                { search: /REFLECTIONMAP_PROJECTION/g, replace: (_12 = reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._defineProjectionName) !== null && _12 !== void 0 ? _12 : \"REFLECTIONMAP_PROJECTION\" },\n                { search: /SS_REFRACTIONMAP_3D/g, replace: (_13 = refractionBlock === null || refractionBlock === void 0 ? void 0 : refractionBlock._define3DName) !== null && _13 !== void 0 ? _13 : \"SS_REFRACTIONMAP_3D\" },\n                { search: /SS_LODINREFRACTIONALPHA/g, replace: (_14 = refractionBlock === null || refractionBlock === void 0 ? void 0 : refractionBlock._defineLODRefractionAlpha) !== null && _14 !== void 0 ? _14 : \"SS_LODINREFRACTIONALPHA\" },\n                { search: /SS_LINEARSPECULARREFRACTION/g, replace: (_15 = refractionBlock === null || refractionBlock === void 0 ? void 0 : refractionBlock._defineLinearSpecularRefraction) !== null && _15 !== void 0 ? _15 : \"SS_LINEARSPECULARREFRACTION\" },\n                { search: /SS_REFRACTIONMAP_OPPOSITEZ/g, replace: (_16 = refractionBlock === null || refractionBlock === void 0 ? void 0 : refractionBlock._defineOppositeZ) !== null && _16 !== void 0 ? _16 : \"SS_REFRACTIONMAP_OPPOSITEZ\" },\n            ],\n        });\n        // _____________________________ Direct Lighting Info __________________________________\n        state.compilationString += state._emitCodeFromInclude(\"pbrBlockDirectLighting\", comments);\n        if (this.light) {\n            state.compilationString += state._emitCodeFromInclude(\"lightFragment\", comments, {\n                replaceStrings: [{ search: /{X}/g, replace: this._lightId.toString() }],\n            });\n        }\n        else {\n            state.compilationString += state._emitCodeFromInclude(\"lightFragment\", comments, {\n                repeatKey: \"maxSimultaneousLights\",\n            });\n        }\n        // _____________________________ Compute Final Lit Components ________________________\n        state.compilationString += state._emitCodeFromInclude(\"pbrBlockFinalLitComponents\", comments);\n        // _____________________________ UNLIT (2) ________________________\n        state.compilationString += \"#endif\\r\\n\"; // UNLIT\n        // _____________________________ Compute Final Unlit Components ________________________\n        var aoColor = this.ambientColor.isConnected ? this.ambientColor.associatedVariableName : \"vec3(0., 0., 0.)\";\n        var aoDirectLightIntensity = PBRBaseMaterial.DEFAULT_AO_ON_ANALYTICAL_LIGHTS.toString();\n        if (aoDirectLightIntensity.indexOf(\".\") === -1) {\n            aoDirectLightIntensity += \".\";\n        }\n        state.compilationString += state._emitCodeFromInclude(\"pbrBlockFinalUnlitComponents\", comments, {\n            replaceStrings: [\n                { search: /vec3 finalEmissive[\\s\\S]*?finalEmissive\\*=vLightingIntensity\\.y;/g, replace: \"\" },\n                { search: /vAmbientColor/g, replace: aoColor + \" * ambientFromScene\" },\n                { search: /vAmbientInfos\\.w/g, replace: aoDirectLightIntensity },\n            ],\n        });\n        // _____________________________ Output Final Color Composition ________________________\n        state.compilationString += state._emitCodeFromInclude(\"pbrBlockFinalColorComposition\", comments, {\n            replaceStrings: [{ search: /finalEmissive/g, replace: \"vec3(0.)\" }],\n        });\n        // _____________________________ Apply image processing ________________________\n        state.compilationString += state._emitCodeFromInclude(\"pbrBlockImageProcessing\", comments, {\n            replaceStrings: [{ search: /visibility/g, replace: \"1.\" }],\n        });\n        // _____________________________ Generate debug code ________________________\n        state.compilationString += state._emitCodeFromInclude(\"pbrDebug\", comments, {\n            replaceStrings: [\n                { search: /vNormalW/g, replace: this._vNormalWName },\n                { search: /vPositionW/g, replace: worldPosVarName },\n                { search: /albedoTexture\\.rgb;/g, replace: \"vec3(1.);\\r\\ngl_FragColor.rgb = toGammaSpace(gl_FragColor.rgb);\\r\\n\" },\n            ],\n        });\n        // _____________________________ Generate end points ________________________\n        for (var _i = 0, _17 = this._outputs; _i < _17.length; _i++) {\n            var output = _17[_i];\n            if (output.hasEndpoints) {\n                var remap = mapOutputToVariable[output.name];\n                if (remap) {\n                    var varName = remap[0], conditions = remap[1];\n                    if (conditions) {\n                        state.compilationString += \"#if \".concat(conditions, \"\\r\\n\");\n                    }\n                    state.compilationString += \"\".concat(this._declareOutput(output, state), \" = \").concat(varName, \";\\r\\n\");\n                    if (conditions) {\n                        state.compilationString += \"#else\\r\\n\";\n                        state.compilationString += \"\".concat(this._declareOutput(output, state), \" = vec3(0.);\\r\\n\");\n                        state.compilationString += \"#endif\\r\\n\";\n                    }\n                }\n                else {\n                    console.error(\"There's no remapping for the \".concat(output.name, \" end point! No code generated\"));\n                }\n            }\n        }\n        return this;\n    };\n    PBRMetallicRoughnessBlock.prototype._dumpPropertiesCode = function () {\n        var codeString = _super.prototype._dumpPropertiesCode.call(this);\n        codeString += \"\".concat(this._codeVariableName, \".lightFalloff = \").concat(this.lightFalloff, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".useAlphaTest = \").concat(this.useAlphaTest, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".alphaTestCutoff = \").concat(this.alphaTestCutoff, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".useAlphaBlending = \").concat(this.useAlphaBlending, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".useRadianceOverAlpha = \").concat(this.useRadianceOverAlpha, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".useSpecularOverAlpha = \").concat(this.useSpecularOverAlpha, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".enableSpecularAntiAliasing = \").concat(this.enableSpecularAntiAliasing, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".realTimeFiltering = \").concat(this.realTimeFiltering, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".realTimeFilteringQuality = \").concat(this.realTimeFilteringQuality, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".useEnergyConservation = \").concat(this.useEnergyConservation, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".useRadianceOcclusion = \").concat(this.useRadianceOcclusion, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".useHorizonOcclusion = \").concat(this.useHorizonOcclusion, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".unlit = \").concat(this.unlit, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".forceNormalForward = \").concat(this.forceNormalForward, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".debugMode = \").concat(this.debugMode, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".debugLimit = \").concat(this.debugLimit, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".debugFactor = \").concat(this.debugFactor, \";\\r\\n\");\n        return codeString;\n    };\n    PBRMetallicRoughnessBlock.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        if (this.light) {\n            serializationObject.lightId = this.light.id;\n        }\n        serializationObject.lightFalloff = this.lightFalloff;\n        serializationObject.useAlphaTest = this.useAlphaTest;\n        serializationObject.alphaTestCutoff = this.alphaTestCutoff;\n        serializationObject.useAlphaBlending = this.useAlphaBlending;\n        serializationObject.useRadianceOverAlpha = this.useRadianceOverAlpha;\n        serializationObject.useSpecularOverAlpha = this.useSpecularOverAlpha;\n        serializationObject.enableSpecularAntiAliasing = this.enableSpecularAntiAliasing;\n        serializationObject.realTimeFiltering = this.realTimeFiltering;\n        serializationObject.realTimeFilteringQuality = this.realTimeFilteringQuality;\n        serializationObject.useEnergyConservation = this.useEnergyConservation;\n        serializationObject.useRadianceOcclusion = this.useRadianceOcclusion;\n        serializationObject.useHorizonOcclusion = this.useHorizonOcclusion;\n        serializationObject.unlit = this.unlit;\n        serializationObject.forceNormalForward = this.forceNormalForward;\n        serializationObject.debugMode = this.debugMode;\n        serializationObject.debugLimit = this.debugLimit;\n        serializationObject.debugFactor = this.debugFactor;\n        return serializationObject;\n    };\n    PBRMetallicRoughnessBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n        var _a, _b;\n        _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n        if (serializationObject.lightId) {\n            this.light = scene.getLightById(serializationObject.lightId);\n        }\n        this.lightFalloff = (_a = serializationObject.lightFalloff) !== null && _a !== void 0 ? _a : 0;\n        this.useAlphaTest = serializationObject.useAlphaTest;\n        this.alphaTestCutoff = serializationObject.alphaTestCutoff;\n        this.useAlphaBlending = serializationObject.useAlphaBlending;\n        this.useRadianceOverAlpha = serializationObject.useRadianceOverAlpha;\n        this.useSpecularOverAlpha = serializationObject.useSpecularOverAlpha;\n        this.enableSpecularAntiAliasing = serializationObject.enableSpecularAntiAliasing;\n        this.realTimeFiltering = !!serializationObject.realTimeFiltering;\n        this.realTimeFilteringQuality = (_b = serializationObject.realTimeFilteringQuality) !== null && _b !== void 0 ? _b : 8;\n        this.useEnergyConservation = serializationObject.useEnergyConservation;\n        this.useRadianceOcclusion = serializationObject.useRadianceOcclusion;\n        this.useHorizonOcclusion = serializationObject.useHorizonOcclusion;\n        this.unlit = serializationObject.unlit;\n        this.forceNormalForward = !!serializationObject.forceNormalForward;\n        this.debugMode = serializationObject.debugMode;\n        this.debugLimit = serializationObject.debugLimit;\n        this.debugFactor = serializationObject.debugFactor;\n    };\n    __decorate([\n        editableInPropertyPage(\"Direct lights\", PropertyTypeForEdition.Float, \"INTENSITY\", { min: 0, max: 1, notifiers: { update: true } })\n    ], PBRMetallicRoughnessBlock.prototype, \"directIntensity\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Environment lights\", PropertyTypeForEdition.Float, \"INTENSITY\", { min: 0, max: 1, notifiers: { update: true } })\n    ], PBRMetallicRoughnessBlock.prototype, \"environmentIntensity\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Specular highlights\", PropertyTypeForEdition.Float, \"INTENSITY\", { min: 0, max: 1, notifiers: { update: true } })\n    ], PBRMetallicRoughnessBlock.prototype, \"specularIntensity\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Light falloff\", PropertyTypeForEdition.List, \"LIGHTING & COLORS\", {\n            notifiers: { update: true },\n            options: [\n                { label: \"Physical\", value: PBRBaseMaterial.LIGHTFALLOFF_PHYSICAL },\n                { label: \"GLTF\", value: PBRBaseMaterial.LIGHTFALLOFF_GLTF },\n                { label: \"Standard\", value: PBRBaseMaterial.LIGHTFALLOFF_STANDARD },\n            ],\n        })\n    ], PBRMetallicRoughnessBlock.prototype, \"lightFalloff\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Alpha Testing\", PropertyTypeForEdition.Boolean, \"OPACITY\")\n    ], PBRMetallicRoughnessBlock.prototype, \"useAlphaTest\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Alpha CutOff\", PropertyTypeForEdition.Float, \"OPACITY\", { min: 0, max: 1, notifiers: { update: true } })\n    ], PBRMetallicRoughnessBlock.prototype, \"alphaTestCutoff\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Alpha blending\", PropertyTypeForEdition.Boolean, \"OPACITY\")\n    ], PBRMetallicRoughnessBlock.prototype, \"useAlphaBlending\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Radiance over alpha\", PropertyTypeForEdition.Boolean, \"RENDERING\", { notifiers: { update: true } })\n    ], PBRMetallicRoughnessBlock.prototype, \"useRadianceOverAlpha\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Specular over alpha\", PropertyTypeForEdition.Boolean, \"RENDERING\", { notifiers: { update: true } })\n    ], PBRMetallicRoughnessBlock.prototype, \"useSpecularOverAlpha\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Specular anti-aliasing\", PropertyTypeForEdition.Boolean, \"RENDERING\", { notifiers: { update: true } })\n    ], PBRMetallicRoughnessBlock.prototype, \"enableSpecularAntiAliasing\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Realtime filtering\", PropertyTypeForEdition.Boolean, \"RENDERING\", { notifiers: { update: true } })\n    ], PBRMetallicRoughnessBlock.prototype, \"realTimeFiltering\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Realtime filtering quality\", PropertyTypeForEdition.List, \"RENDERING\", {\n            notifiers: { update: true },\n            options: [\n                { label: \"Low\", value: 8 },\n                { label: \"Medium\", value: 16 },\n                { label: \"High\", value: 64 },\n            ],\n        })\n    ], PBRMetallicRoughnessBlock.prototype, \"realTimeFilteringQuality\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Energy Conservation\", PropertyTypeForEdition.Boolean, \"ADVANCED\", { notifiers: { update: true } })\n    ], PBRMetallicRoughnessBlock.prototype, \"useEnergyConservation\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Radiance occlusion\", PropertyTypeForEdition.Boolean, \"ADVANCED\", { notifiers: { update: true } })\n    ], PBRMetallicRoughnessBlock.prototype, \"useRadianceOcclusion\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Horizon occlusion\", PropertyTypeForEdition.Boolean, \"ADVANCED\", { notifiers: { update: true } })\n    ], PBRMetallicRoughnessBlock.prototype, \"useHorizonOcclusion\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Unlit\", PropertyTypeForEdition.Boolean, \"ADVANCED\", { notifiers: { update: true } })\n    ], PBRMetallicRoughnessBlock.prototype, \"unlit\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Force normal forward\", PropertyTypeForEdition.Boolean, \"ADVANCED\", { notifiers: { update: true } })\n    ], PBRMetallicRoughnessBlock.prototype, \"forceNormalForward\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Debug mode\", PropertyTypeForEdition.List, \"DEBUG\", {\n            notifiers: { update: true },\n            options: [\n                { label: \"None\", value: 0 },\n                // Geometry\n                { label: \"Normalized position\", value: 1 },\n                { label: \"Normals\", value: 2 },\n                { label: \"Tangents\", value: 3 },\n                { label: \"Bitangents\", value: 4 },\n                { label: \"Bump Normals\", value: 5 },\n                //{ label: \"UV1\", value: 6 },\n                //{ label: \"UV2\", value: 7 },\n                { label: \"ClearCoat Normals\", value: 8 },\n                { label: \"ClearCoat Tangents\", value: 9 },\n                { label: \"ClearCoat Bitangents\", value: 10 },\n                { label: \"Anisotropic Normals\", value: 11 },\n                { label: \"Anisotropic Tangents\", value: 12 },\n                { label: \"Anisotropic Bitangents\", value: 13 },\n                // Maps\n                //{ label: \"Emissive Map\", value: 23 },\n                //{ label: \"Light Map\", value: 24 },\n                // Env\n                { label: \"Env Refraction\", value: 40 },\n                { label: \"Env Reflection\", value: 41 },\n                { label: \"Env Clear Coat\", value: 42 },\n                // Lighting\n                { label: \"Direct Diffuse\", value: 50 },\n                { label: \"Direct Specular\", value: 51 },\n                { label: \"Direct Clear Coat\", value: 52 },\n                { label: \"Direct Sheen\", value: 53 },\n                { label: \"Env Irradiance\", value: 54 },\n                // Lighting Params\n                { label: \"Surface Albedo\", value: 60 },\n                { label: \"Reflectance 0\", value: 61 },\n                { label: \"Metallic\", value: 62 },\n                { label: \"Metallic F0\", value: 71 },\n                { label: \"Roughness\", value: 63 },\n                { label: \"AlphaG\", value: 64 },\n                { label: \"NdotV\", value: 65 },\n                { label: \"ClearCoat Color\", value: 66 },\n                { label: \"ClearCoat Roughness\", value: 67 },\n                { label: \"ClearCoat NdotV\", value: 68 },\n                { label: \"Transmittance\", value: 69 },\n                { label: \"Refraction Transmittance\", value: 70 },\n                // Misc\n                { label: \"SEO\", value: 80 },\n                { label: \"EHO\", value: 81 },\n                { label: \"Energy Factor\", value: 82 },\n                { label: \"Specular Reflectance\", value: 83 },\n                { label: \"Clear Coat Reflectance\", value: 84 },\n                { label: \"Sheen Reflectance\", value: 85 },\n                { label: \"Luminance Over Alpha\", value: 86 },\n                { label: \"Alpha\", value: 87 },\n            ],\n        })\n    ], PBRMetallicRoughnessBlock.prototype, \"debugMode\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Split position\", PropertyTypeForEdition.Float, \"DEBUG\", { min: -1, max: 1, notifiers: { update: true } })\n    ], PBRMetallicRoughnessBlock.prototype, \"debugLimit\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Output factor\", PropertyTypeForEdition.Float, \"DEBUG\", { min: 0, max: 5, notifiers: { update: true } })\n    ], PBRMetallicRoughnessBlock.prototype, \"debugFactor\", void 0);\n    return PBRMetallicRoughnessBlock;\n}(NodeMaterialBlock));\nexport { PBRMetallicRoughnessBlock };\nRegisterClass(\"BABYLON.PBRMetallicRoughnessBlock\", PBRMetallicRoughnessBlock);\n//# sourceMappingURL=pbrMetallicRoughnessBlock.js.map","import { __decorate, __extends } from \"tslib\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialConnectionPointDirection } from \"../../nodeMaterialBlockConnectionPoint.js\";\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\nimport { NodeMaterialConnectionPointCustomObject } from \"../../nodeMaterialConnectionPointCustomObject.js\";\nimport { ReflectionTextureBaseBlock } from \"../Dual/reflectionTextureBaseBlock.js\";\nimport { Texture } from \"../../../Textures/texture.js\";\nimport { editableInPropertyPage, PropertyTypeForEdition } from \"../../nodeMaterialDecorator.js\";\nimport { Scalar } from \"../../../../Maths/math.scalar.js\";\n/**\n * Block used to implement the reflection module of the PBR material\n */\nvar ReflectionBlock = /** @class */ (function (_super) {\n    __extends(ReflectionBlock, _super);\n    /**\n     * Create a new ReflectionBlock\n     * @param name defines the block name\n     */\n    function ReflectionBlock(name) {\n        var _this = _super.call(this, name) || this;\n        /**\n         * Defines if the material uses spherical harmonics vs spherical polynomials for the\n         * diffuse part of the IBL.\n         */\n        _this.useSphericalHarmonics = true;\n        /**\n         * Force the shader to compute irradiance in the fragment shader in order to take bump in account.\n         */\n        _this.forceIrradianceInFragment = false;\n        _this._isUnique = true;\n        _this.registerInput(\"position\", NodeMaterialBlockConnectionPointTypes.Vector3, false, NodeMaterialBlockTargets.Vertex);\n        _this.registerInput(\"world\", NodeMaterialBlockConnectionPointTypes.Matrix, false, NodeMaterialBlockTargets.Vertex);\n        _this.registerInput(\"color\", NodeMaterialBlockConnectionPointTypes.Color3, true, NodeMaterialBlockTargets.Fragment);\n        _this.registerOutput(\"reflection\", NodeMaterialBlockConnectionPointTypes.Object, NodeMaterialBlockTargets.Fragment, new NodeMaterialConnectionPointCustomObject(\"reflection\", _this, NodeMaterialConnectionPointDirection.Output, ReflectionBlock, \"ReflectionBlock\"));\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    ReflectionBlock.prototype.getClassName = function () {\n        return \"ReflectionBlock\";\n    };\n    Object.defineProperty(ReflectionBlock.prototype, \"position\", {\n        /**\n         * Gets the position input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReflectionBlock.prototype, \"worldPosition\", {\n        /**\n         * Gets the world position input component\n         */\n        get: function () {\n            return this.worldPositionConnectionPoint;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReflectionBlock.prototype, \"worldNormal\", {\n        /**\n         * Gets the world normal input component\n         */\n        get: function () {\n            return this.worldNormalConnectionPoint;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReflectionBlock.prototype, \"world\", {\n        /**\n         * Gets the world input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReflectionBlock.prototype, \"cameraPosition\", {\n        /**\n         * Gets the camera (or eye) position component\n         */\n        get: function () {\n            return this.cameraPositionConnectionPoint;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReflectionBlock.prototype, \"view\", {\n        /**\n         * Gets the view input component\n         */\n        get: function () {\n            return this.viewConnectionPoint;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReflectionBlock.prototype, \"color\", {\n        /**\n         * Gets the color input component\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReflectionBlock.prototype, \"reflection\", {\n        /**\n         * Gets the reflection object output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReflectionBlock.prototype, \"hasTexture\", {\n        /**\n         * Returns true if the block has a texture (either its own texture or the environment texture from the scene, if set)\n         */\n        get: function () {\n            return !!this._getTexture();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReflectionBlock.prototype, \"reflectionColor\", {\n        /**\n         * Gets the reflection color (either the name of the variable if the color input is connected, else a default value)\n         */\n        get: function () {\n            return this.color.isConnected ? this.color.associatedVariableName : \"vec3(1., 1., 1.)\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ReflectionBlock.prototype._getTexture = function () {\n        if (this.texture) {\n            return this.texture;\n        }\n        return this._scene.environmentTexture;\n    };\n    ReflectionBlock.prototype.prepareDefines = function (mesh, nodeMaterial, defines) {\n        _super.prototype.prepareDefines.call(this, mesh, nodeMaterial, defines);\n        var reflectionTexture = this._getTexture();\n        var reflection = reflectionTexture && reflectionTexture.getTextureMatrix;\n        defines.setValue(\"REFLECTION\", reflection, true);\n        if (!reflection) {\n            return;\n        }\n        defines.setValue(this._defineLODReflectionAlpha, reflectionTexture.lodLevelInAlpha, true);\n        defines.setValue(this._defineLinearSpecularReflection, reflectionTexture.linearSpecularLOD, true);\n        defines.setValue(this._defineOppositeZ, this._scene.useRightHandedSystem ? !reflectionTexture.invertZ : reflectionTexture.invertZ, true);\n        defines.setValue(\"SPHERICAL_HARMONICS\", this.useSphericalHarmonics, true);\n        defines.setValue(\"GAMMAREFLECTION\", reflectionTexture.gammaSpace, true);\n        defines.setValue(\"RGBDREFLECTION\", reflectionTexture.isRGBD, true);\n        if (reflectionTexture && reflectionTexture.coordinatesMode !== Texture.SKYBOX_MODE) {\n            if (reflectionTexture.isCube) {\n                defines.setValue(\"USESPHERICALFROMREFLECTIONMAP\", true);\n                defines.setValue(\"USEIRRADIANCEMAP\", false);\n                if (this.forceIrradianceInFragment || this._scene.getEngine().getCaps().maxVaryingVectors <= 8) {\n                    defines.setValue(\"USESPHERICALINVERTEX\", false);\n                }\n                else {\n                    defines.setValue(\"USESPHERICALINVERTEX\", true);\n                }\n            }\n        }\n    };\n    ReflectionBlock.prototype.bind = function (effect, nodeMaterial, mesh, subMesh) {\n        _super.prototype.bind.call(this, effect, nodeMaterial, mesh);\n        var reflectionTexture = this._getTexture();\n        if (!reflectionTexture || !subMesh) {\n            return;\n        }\n        if (reflectionTexture.isCube) {\n            effect.setTexture(this._cubeSamplerName, reflectionTexture);\n        }\n        else {\n            effect.setTexture(this._2DSamplerName, reflectionTexture);\n        }\n        var width = reflectionTexture.getSize().width;\n        effect.setFloat3(this._vReflectionMicrosurfaceInfosName, width, reflectionTexture.lodGenerationScale, reflectionTexture.lodGenerationOffset);\n        effect.setFloat2(this._vReflectionFilteringInfoName, width, Scalar.Log2(width));\n        var defines = subMesh.materialDefines;\n        var polynomials = reflectionTexture.sphericalPolynomial;\n        if (defines.USESPHERICALFROMREFLECTIONMAP && polynomials) {\n            if (defines.SPHERICAL_HARMONICS) {\n                var preScaledHarmonics = polynomials.preScaledHarmonics;\n                effect.setVector3(\"vSphericalL00\", preScaledHarmonics.l00);\n                effect.setVector3(\"vSphericalL1_1\", preScaledHarmonics.l1_1);\n                effect.setVector3(\"vSphericalL10\", preScaledHarmonics.l10);\n                effect.setVector3(\"vSphericalL11\", preScaledHarmonics.l11);\n                effect.setVector3(\"vSphericalL2_2\", preScaledHarmonics.l2_2);\n                effect.setVector3(\"vSphericalL2_1\", preScaledHarmonics.l2_1);\n                effect.setVector3(\"vSphericalL20\", preScaledHarmonics.l20);\n                effect.setVector3(\"vSphericalL21\", preScaledHarmonics.l21);\n                effect.setVector3(\"vSphericalL22\", preScaledHarmonics.l22);\n            }\n            else {\n                effect.setFloat3(\"vSphericalX\", polynomials.x.x, polynomials.x.y, polynomials.x.z);\n                effect.setFloat3(\"vSphericalY\", polynomials.y.x, polynomials.y.y, polynomials.y.z);\n                effect.setFloat3(\"vSphericalZ\", polynomials.z.x, polynomials.z.y, polynomials.z.z);\n                effect.setFloat3(\"vSphericalXX_ZZ\", polynomials.xx.x - polynomials.zz.x, polynomials.xx.y - polynomials.zz.y, polynomials.xx.z - polynomials.zz.z);\n                effect.setFloat3(\"vSphericalYY_ZZ\", polynomials.yy.x - polynomials.zz.x, polynomials.yy.y - polynomials.zz.y, polynomials.yy.z - polynomials.zz.z);\n                effect.setFloat3(\"vSphericalZZ\", polynomials.zz.x, polynomials.zz.y, polynomials.zz.z);\n                effect.setFloat3(\"vSphericalXY\", polynomials.xy.x, polynomials.xy.y, polynomials.xy.z);\n                effect.setFloat3(\"vSphericalYZ\", polynomials.yz.x, polynomials.yz.y, polynomials.yz.z);\n                effect.setFloat3(\"vSphericalZX\", polynomials.zx.x, polynomials.zx.y, polynomials.zx.z);\n            }\n        }\n    };\n    /**\n     * Gets the code to inject in the vertex shader\n     * @param state current state of the node material building\n     * @returns the shader code\n     */\n    ReflectionBlock.prototype.handleVertexSide = function (state) {\n        var code = _super.prototype.handleVertexSide.call(this, state);\n        state._emitFunctionFromInclude(\"harmonicsFunctions\", \"//\".concat(this.name), {\n            replaceStrings: [\n                { search: /uniform vec3 vSphericalL00;[\\s\\S]*?uniform vec3 vSphericalL22;/g, replace: \"\" },\n                { search: /uniform vec3 vSphericalX;[\\s\\S]*?uniform vec3 vSphericalZX;/g, replace: \"\" },\n            ],\n        });\n        var reflectionVectorName = state._getFreeVariableName(\"reflectionVector\");\n        this._vEnvironmentIrradianceName = state._getFreeVariableName(\"vEnvironmentIrradiance\");\n        state._emitVaryingFromString(this._vEnvironmentIrradianceName, \"vec3\", \"defined(USESPHERICALFROMREFLECTIONMAP) && defined(USESPHERICALINVERTEX)\");\n        state._emitUniformFromString(\"vSphericalL00\", \"vec3\", \"SPHERICAL_HARMONICS\");\n        state._emitUniformFromString(\"vSphericalL1_1\", \"vec3\", \"SPHERICAL_HARMONICS\");\n        state._emitUniformFromString(\"vSphericalL10\", \"vec3\", \"SPHERICAL_HARMONICS\");\n        state._emitUniformFromString(\"vSphericalL11\", \"vec3\", \"SPHERICAL_HARMONICS\");\n        state._emitUniformFromString(\"vSphericalL2_2\", \"vec3\", \"SPHERICAL_HARMONICS\");\n        state._emitUniformFromString(\"vSphericalL2_1\", \"vec3\", \"SPHERICAL_HARMONICS\");\n        state._emitUniformFromString(\"vSphericalL20\", \"vec3\", \"SPHERICAL_HARMONICS\");\n        state._emitUniformFromString(\"vSphericalL21\", \"vec3\", \"SPHERICAL_HARMONICS\");\n        state._emitUniformFromString(\"vSphericalL22\", \"vec3\", \"SPHERICAL_HARMONICS\");\n        state._emitUniformFromString(\"vSphericalX\", \"vec3\", \"SPHERICAL_HARMONICS\", true);\n        state._emitUniformFromString(\"vSphericalY\", \"vec3\", \"SPHERICAL_HARMONICS\", true);\n        state._emitUniformFromString(\"vSphericalZ\", \"vec3\", \"SPHERICAL_HARMONICS\", true);\n        state._emitUniformFromString(\"vSphericalXX_ZZ\", \"vec3\", \"SPHERICAL_HARMONICS\", true);\n        state._emitUniformFromString(\"vSphericalYY_ZZ\", \"vec3\", \"SPHERICAL_HARMONICS\", true);\n        state._emitUniformFromString(\"vSphericalZZ\", \"vec3\", \"SPHERICAL_HARMONICS\", true);\n        state._emitUniformFromString(\"vSphericalXY\", \"vec3\", \"SPHERICAL_HARMONICS\", true);\n        state._emitUniformFromString(\"vSphericalYZ\", \"vec3\", \"SPHERICAL_HARMONICS\", true);\n        state._emitUniformFromString(\"vSphericalZX\", \"vec3\", \"SPHERICAL_HARMONICS\", true);\n        code += \"#if defined(USESPHERICALFROMREFLECTIONMAP) && defined(USESPHERICALINVERTEX)\\n                vec3 \".concat(reflectionVectorName, \" = vec3(\").concat(this._reflectionMatrixName, \" * vec4(normalize(\").concat(this.worldNormal.associatedVariableName, \").xyz, 0)).xyz;\\n                #ifdef \").concat(this._defineOppositeZ, \"\\n                    \").concat(reflectionVectorName, \".z *= -1.0;\\n                #endif\\n                \").concat(this._vEnvironmentIrradianceName, \" = computeEnvironmentIrradiance(\").concat(reflectionVectorName, \");\\n            #endif\\r\\n\");\n        return code;\n    };\n    /**\n     * Gets the main code of the block (fragment side)\n     * @param state current state of the node material building\n     * @param normalVarName name of the existing variable corresponding to the normal\n     * @returns the shader code\n     */\n    ReflectionBlock.prototype.getCode = function (state, normalVarName) {\n        var code = \"\";\n        this.handleFragmentSideInits(state);\n        state._emitFunctionFromInclude(\"harmonicsFunctions\", \"//\".concat(this.name), {\n            replaceStrings: [\n                { search: /uniform vec3 vSphericalL00;[\\s\\S]*?uniform vec3 vSphericalL22;/g, replace: \"\" },\n                { search: /uniform vec3 vSphericalX;[\\s\\S]*?uniform vec3 vSphericalZX;/g, replace: \"\" },\n            ],\n        });\n        state._emitFunction(\"sampleReflection\", \"\\n            #ifdef \".concat(this._define3DName, \"\\n                #define sampleReflection(s, c) textureCube(s, c)\\n            #else\\n                #define sampleReflection(s, c) texture2D(s, c)\\n            #endif\\r\\n\"), \"//\".concat(this.name));\n        state._emitFunction(\"sampleReflectionLod\", \"\\n            #ifdef \".concat(this._define3DName, \"\\n                #define sampleReflectionLod(s, c, l) textureCubeLodEXT(s, c, l)\\n            #else\\n                #define sampleReflectionLod(s, c, l) texture2DLodEXT(s, c, l)\\n            #endif\\r\\n\"), \"//\".concat(this.name));\n        var computeReflectionCoordsFunc = \"\\n            vec3 computeReflectionCoordsPBR(vec4 worldPos, vec3 worldNormal) {\\n                \".concat(this.handleFragmentSideCodeReflectionCoords(\"worldNormal\", \"worldPos\", true, true), \"\\n                return \").concat(this._reflectionVectorName, \";\\n            }\\r\\n\");\n        state._emitFunction(\"computeReflectionCoordsPBR\", computeReflectionCoordsFunc, \"//\".concat(this.name));\n        this._vReflectionMicrosurfaceInfosName = state._getFreeVariableName(\"vReflectionMicrosurfaceInfos\");\n        state._emitUniformFromString(this._vReflectionMicrosurfaceInfosName, \"vec3\");\n        this._vReflectionInfosName = state._getFreeVariableName(\"vReflectionInfos\");\n        this._vReflectionFilteringInfoName = state._getFreeVariableName(\"vReflectionFilteringInfo\");\n        state._emitUniformFromString(this._vReflectionFilteringInfoName, \"vec2\");\n        code += \"#ifdef REFLECTION\\n            vec2 \".concat(this._vReflectionInfosName, \" = vec2(1., 0.);\\n\\n            reflectionOutParams reflectionOut;\\n\\n            reflectionBlock(\\n                \").concat(\"v_\" + this.worldPosition.associatedVariableName + \".xyz\", \",\\n                \").concat(normalVarName, \",\\n                alphaG,\\n                \").concat(this._vReflectionMicrosurfaceInfosName, \",\\n                \").concat(this._vReflectionInfosName, \",\\n                \").concat(this.reflectionColor, \",\\n            #ifdef ANISOTROPIC\\n                anisotropicOut,\\n            #endif\\n            #if defined(\").concat(this._defineLODReflectionAlpha, \") && !defined(\").concat(this._defineSkyboxName, \")\\n                NdotVUnclamped,\\n            #endif\\n            #ifdef \").concat(this._defineLinearSpecularReflection, \"\\n                roughness,\\n            #endif\\n            #ifdef \").concat(this._define3DName, \"\\n                \").concat(this._cubeSamplerName, \",\\n            #else\\n                \").concat(this._2DSamplerName, \",\\n            #endif\\n            #if defined(NORMAL) && defined(USESPHERICALINVERTEX)\\n                \").concat(this._vEnvironmentIrradianceName, \",\\n            #endif\\n            #ifdef USESPHERICALFROMREFLECTIONMAP\\n                #if !defined(NORMAL) || !defined(USESPHERICALINVERTEX)\\n                    \").concat(this._reflectionMatrixName, \",\\n                #endif\\n            #endif\\n            #ifdef USEIRRADIANCEMAP\\n                irradianceSampler, // ** not handled **\\n            #endif\\n            #ifndef LODBASEDMICROSFURACE\\n                #ifdef \").concat(this._define3DName, \"\\n                    \").concat(this._cubeSamplerName, \",\\n                    \").concat(this._cubeSamplerName, \",\\n                #else\\n                    \").concat(this._2DSamplerName, \",\\n                    \").concat(this._2DSamplerName, \",\\n                #endif\\n            #endif\\n            #ifdef REALTIME_FILTERING\\n                \").concat(this._vReflectionFilteringInfoName, \",\\n            #endif\\n                reflectionOut\\n            );\\n        #endif\\r\\n\");\n        return code;\n    };\n    ReflectionBlock.prototype._buildBlock = function (state) {\n        this._scene = state.sharedData.scene;\n        if (state.target !== NodeMaterialBlockTargets.Fragment) {\n            this._defineLODReflectionAlpha = state._getFreeDefineName(\"LODINREFLECTIONALPHA\");\n            this._defineLinearSpecularReflection = state._getFreeDefineName(\"LINEARSPECULARREFLECTION\");\n        }\n        return this;\n    };\n    ReflectionBlock.prototype._dumpPropertiesCode = function () {\n        var codeString = _super.prototype._dumpPropertiesCode.call(this);\n        if (this.texture) {\n            codeString += \"\".concat(this._codeVariableName, \".texture.gammaSpace = \").concat(this.texture.gammaSpace, \";\\r\\n\");\n        }\n        codeString += \"\".concat(this._codeVariableName, \".useSphericalHarmonics = \").concat(this.useSphericalHarmonics, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".forceIrradianceInFragment = \").concat(this.forceIrradianceInFragment, \";\\r\\n\");\n        return codeString;\n    };\n    ReflectionBlock.prototype.serialize = function () {\n        var _a, _b;\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.useSphericalHarmonics = this.useSphericalHarmonics;\n        serializationObject.forceIrradianceInFragment = this.forceIrradianceInFragment;\n        serializationObject.gammaSpace = (_b = (_a = this.texture) === null || _a === void 0 ? void 0 : _a.gammaSpace) !== null && _b !== void 0 ? _b : true;\n        return serializationObject;\n    };\n    ReflectionBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n        _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n        this.useSphericalHarmonics = serializationObject.useSphericalHarmonics;\n        this.forceIrradianceInFragment = serializationObject.forceIrradianceInFragment;\n        if (this.texture) {\n            this.texture.gammaSpace = serializationObject.gammaSpace;\n        }\n    };\n    __decorate([\n        editableInPropertyPage(\"Spherical Harmonics\", PropertyTypeForEdition.Boolean, \"ADVANCED\", { notifiers: { update: true } })\n    ], ReflectionBlock.prototype, \"useSphericalHarmonics\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Force irradiance in fragment\", PropertyTypeForEdition.Boolean, \"ADVANCED\", { notifiers: { update: true } })\n    ], ReflectionBlock.prototype, \"forceIrradianceInFragment\", void 0);\n    return ReflectionBlock;\n}(ReflectionTextureBaseBlock));\nexport { ReflectionBlock };\nRegisterClass(\"BABYLON.ReflectionBlock\", ReflectionBlock);\n//# sourceMappingURL=reflectionBlock.js.map","import { __decorate, __extends } from \"tslib\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialConnectionPointDirection } from \"../../nodeMaterialBlockConnectionPoint.js\";\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\nimport { InputBlock } from \"../Input/inputBlock.js\";\nimport { NodeMaterialConnectionPointCustomObject } from \"../../nodeMaterialConnectionPointCustomObject.js\";\nimport { editableInPropertyPage, PropertyTypeForEdition } from \"../../nodeMaterialDecorator.js\";\nimport { NodeMaterialBlock } from \"../../nodeMaterialBlock.js\";\nimport { CubeTexture } from \"../../../Textures/cubeTexture.js\";\nimport { Texture } from \"../../../Textures/texture.js\";\nimport { NodeMaterialSystemValues } from \"../../Enums/nodeMaterialSystemValues.js\";\nimport { Scalar } from \"../../../../Maths/math.scalar.js\";\n/**\n * Block used to implement the refraction part of the sub surface module of the PBR material\n */\nvar RefractionBlock = /** @class */ (function (_super) {\n    __extends(RefractionBlock, _super);\n    /**\n     * Create a new RefractionBlock\n     * @param name defines the block name\n     */\n    function RefractionBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Fragment) || this;\n        /**\n         * This parameters will make the material used its opacity to control how much it is refracting against not.\n         * Materials half opaque for instance using refraction could benefit from this control.\n         */\n        _this.linkRefractionWithTransparency = false;\n        /**\n         * Controls if refraction needs to be inverted on Y. This could be useful for procedural texture.\n         */\n        _this.invertRefractionY = false;\n        /**\n         * Controls if refraction needs to be inverted on Y. This could be useful for procedural texture.\n         */\n        _this.useThicknessAsDepth = false;\n        _this._isUnique = true;\n        _this.registerInput(\"intensity\", NodeMaterialBlockConnectionPointTypes.Float, false, NodeMaterialBlockTargets.Fragment);\n        _this.registerInput(\"tintAtDistance\", NodeMaterialBlockConnectionPointTypes.Float, true, NodeMaterialBlockTargets.Fragment);\n        _this.registerInput(\"volumeIndexOfRefraction\", NodeMaterialBlockConnectionPointTypes.Float, true, NodeMaterialBlockTargets.Fragment);\n        _this.registerOutput(\"refraction\", NodeMaterialBlockConnectionPointTypes.Object, NodeMaterialBlockTargets.Fragment, new NodeMaterialConnectionPointCustomObject(\"refraction\", _this, NodeMaterialConnectionPointDirection.Output, RefractionBlock, \"RefractionBlock\"));\n        return _this;\n    }\n    /**\n     * Initialize the block and prepare the context for build\n     * @param state defines the state that will be used for the build\n     */\n    RefractionBlock.prototype.initialize = function (state) {\n        state._excludeVariableName(\"vRefractionPosition\");\n        state._excludeVariableName(\"vRefractionSize\");\n    };\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    RefractionBlock.prototype.getClassName = function () {\n        return \"RefractionBlock\";\n    };\n    Object.defineProperty(RefractionBlock.prototype, \"intensity\", {\n        /**\n         * Gets the intensity input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RefractionBlock.prototype, \"tintAtDistance\", {\n        /**\n         * Gets the tint at distance input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RefractionBlock.prototype, \"volumeIndexOfRefraction\", {\n        /**\n         * Gets the volume index of refraction input component\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RefractionBlock.prototype, \"view\", {\n        /**\n         * Gets the view input component\n         */\n        get: function () {\n            return this.viewConnectionPoint;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RefractionBlock.prototype, \"refraction\", {\n        /**\n         * Gets the refraction object output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RefractionBlock.prototype, \"hasTexture\", {\n        /**\n         * Returns true if the block has a texture\n         */\n        get: function () {\n            return !!this._getTexture();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    RefractionBlock.prototype._getTexture = function () {\n        if (this.texture) {\n            return this.texture;\n        }\n        return this._scene.environmentTexture;\n    };\n    RefractionBlock.prototype.autoConfigure = function (material) {\n        if (!this.intensity.isConnected) {\n            var intensityInput = new InputBlock(\"Refraction intensity\", NodeMaterialBlockTargets.Fragment, NodeMaterialBlockConnectionPointTypes.Float);\n            intensityInput.value = 1;\n            intensityInput.output.connectTo(this.intensity);\n        }\n        if (this.view && !this.view.isConnected) {\n            var viewInput = material.getInputBlockByPredicate(function (b) { return b.systemValue === NodeMaterialSystemValues.View; });\n            if (!viewInput) {\n                viewInput = new InputBlock(\"view\");\n                viewInput.setAsSystemValue(NodeMaterialSystemValues.View);\n            }\n            viewInput.output.connectTo(this.view);\n        }\n    };\n    RefractionBlock.prototype.prepareDefines = function (mesh, nodeMaterial, defines) {\n        _super.prototype.prepareDefines.call(this, mesh, nodeMaterial, defines);\n        var refractionTexture = this._getTexture();\n        var refraction = refractionTexture && refractionTexture.getTextureMatrix;\n        defines.setValue(\"SS_REFRACTION\", refraction, true);\n        if (!refraction) {\n            return;\n        }\n        defines.setValue(this._define3DName, refractionTexture.isCube, true);\n        defines.setValue(this._defineLODRefractionAlpha, refractionTexture.lodLevelInAlpha, true);\n        defines.setValue(this._defineLinearSpecularRefraction, refractionTexture.linearSpecularLOD, true);\n        defines.setValue(this._defineOppositeZ, this._scene.useRightHandedSystem ? !refractionTexture.invertZ : refractionTexture.invertZ, true);\n        defines.setValue(\"SS_LINKREFRACTIONTOTRANSPARENCY\", this.linkRefractionWithTransparency, true);\n        defines.setValue(\"SS_GAMMAREFRACTION\", refractionTexture.gammaSpace, true);\n        defines.setValue(\"SS_RGBDREFRACTION\", refractionTexture.isRGBD, true);\n        defines.setValue(\"SS_USE_LOCAL_REFRACTIONMAP_CUBIC\", refractionTexture.boundingBoxSize ? true : false, true);\n        defines.setValue(\"SS_USE_THICKNESS_AS_DEPTH\", this.useThicknessAsDepth, true);\n    };\n    RefractionBlock.prototype.isReady = function () {\n        var texture = this._getTexture();\n        if (texture && !texture.isReadyOrNotBlocking()) {\n            return false;\n        }\n        return true;\n    };\n    RefractionBlock.prototype.bind = function (effect, nodeMaterial, mesh) {\n        var _a, _b, _c, _d;\n        _super.prototype.bind.call(this, effect, nodeMaterial, mesh);\n        var refractionTexture = this._getTexture();\n        if (!refractionTexture) {\n            return;\n        }\n        if (refractionTexture.isCube) {\n            effect.setTexture(this._cubeSamplerName, refractionTexture);\n        }\n        else {\n            effect.setTexture(this._2DSamplerName, refractionTexture);\n        }\n        effect.setMatrix(this._refractionMatrixName, refractionTexture.getReflectionTextureMatrix());\n        var depth = 1.0;\n        if (!refractionTexture.isCube) {\n            if (refractionTexture.depth) {\n                depth = refractionTexture.depth;\n            }\n        }\n        var indexOfRefraction = (_d = (_b = (_a = this.volumeIndexOfRefraction.connectInputBlock) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : (_c = this.indexOfRefractionConnectionPoint.connectInputBlock) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1.5;\n        effect.setFloat4(this._vRefractionInfosName, refractionTexture.level, 1 / indexOfRefraction, depth, this.invertRefractionY ? -1 : 1);\n        effect.setFloat4(this._vRefractionMicrosurfaceInfosName, refractionTexture.getSize().width, refractionTexture.lodGenerationScale, refractionTexture.lodGenerationOffset, 1 / indexOfRefraction);\n        var width = refractionTexture.getSize().width;\n        effect.setFloat2(this._vRefractionFilteringInfoName, width, Scalar.Log2(width));\n        if (refractionTexture.boundingBoxSize) {\n            var cubeTexture = refractionTexture;\n            effect.setVector3(\"vRefractionPosition\", cubeTexture.boundingBoxPosition);\n            effect.setVector3(\"vRefractionSize\", cubeTexture.boundingBoxSize);\n        }\n    };\n    /**\n     * Gets the main code of the block (fragment side)\n     * @param state current state of the node material building\n     * @returns the shader code\n     */\n    RefractionBlock.prototype.getCode = function (state) {\n        var code = \"\";\n        state.sharedData.blockingBlocks.push(this);\n        state.sharedData.textureBlocks.push(this);\n        // Samplers\n        this._cubeSamplerName = state._getFreeVariableName(this.name + \"CubeSampler\");\n        state.samplers.push(this._cubeSamplerName);\n        this._2DSamplerName = state._getFreeVariableName(this.name + \"2DSampler\");\n        state.samplers.push(this._2DSamplerName);\n        this._define3DName = state._getFreeDefineName(\"SS_REFRACTIONMAP_3D\");\n        state._samplerDeclaration += \"#ifdef \".concat(this._define3DName, \"\\r\\n\");\n        state._samplerDeclaration += \"uniform samplerCube \".concat(this._cubeSamplerName, \";\\r\\n\");\n        state._samplerDeclaration += \"#else\\r\\n\";\n        state._samplerDeclaration += \"uniform sampler2D \".concat(this._2DSamplerName, \";\\r\\n\");\n        state._samplerDeclaration += \"#endif\\r\\n\";\n        // Fragment\n        state.sharedData.blocksWithDefines.push(this);\n        state.sharedData.bindableBlocks.push(this);\n        this._defineLODRefractionAlpha = state._getFreeDefineName(\"SS_LODINREFRACTIONALPHA\");\n        this._defineLinearSpecularRefraction = state._getFreeDefineName(\"SS_LINEARSPECULARREFRACTION\");\n        this._defineOppositeZ = state._getFreeDefineName(\"SS_REFRACTIONMAP_OPPOSITEZ\");\n        this._refractionMatrixName = state._getFreeVariableName(\"refractionMatrix\");\n        state._emitUniformFromString(this._refractionMatrixName, \"mat4\");\n        state._emitFunction(\"sampleRefraction\", \"\\n            #ifdef \".concat(this._define3DName, \"\\n                #define sampleRefraction(s, c) textureCube(s, c)\\n            #else\\n                #define sampleRefraction(s, c) texture2D(s, c)\\n            #endif\\r\\n\"), \"//\".concat(this.name));\n        state._emitFunction(\"sampleRefractionLod\", \"\\n            #ifdef \".concat(this._define3DName, \"\\n                #define sampleRefractionLod(s, c, l) textureCubeLodEXT(s, c, l)\\n            #else\\n                #define sampleRefractionLod(s, c, l) texture2DLodEXT(s, c, l)\\n            #endif\\r\\n\"), \"//\".concat(this.name));\n        this._vRefractionMicrosurfaceInfosName = state._getFreeVariableName(\"vRefractionMicrosurfaceInfos\");\n        state._emitUniformFromString(this._vRefractionMicrosurfaceInfosName, \"vec4\");\n        this._vRefractionInfosName = state._getFreeVariableName(\"vRefractionInfos\");\n        state._emitUniformFromString(this._vRefractionInfosName, \"vec4\");\n        this._vRefractionFilteringInfoName = state._getFreeVariableName(\"vRefractionFilteringInfo\");\n        state._emitUniformFromString(this._vRefractionFilteringInfoName, \"vec2\");\n        state._emitUniformFromString(\"vRefractionPosition\", \"vec3\");\n        state._emitUniformFromString(\"vRefractionSize\", \"vec3\");\n        return code;\n    };\n    RefractionBlock.prototype._buildBlock = function (state) {\n        this._scene = state.sharedData.scene;\n        return this;\n    };\n    RefractionBlock.prototype._dumpPropertiesCode = function () {\n        var codeString = _super.prototype._dumpPropertiesCode.call(this);\n        if (this.texture) {\n            if (this.texture.isCube) {\n                codeString = \"\".concat(this._codeVariableName, \".texture = new BABYLON.CubeTexture(\\\"\").concat(this.texture.name, \"\\\");\\r\\n\");\n            }\n            else {\n                codeString = \"\".concat(this._codeVariableName, \".texture = new BABYLON.Texture(\\\"\").concat(this.texture.name, \"\\\");\\r\\n\");\n            }\n            codeString += \"\".concat(this._codeVariableName, \".texture.coordinatesMode = \").concat(this.texture.coordinatesMode, \";\\r\\n\");\n        }\n        codeString += \"\".concat(this._codeVariableName, \".linkRefractionWithTransparency = \").concat(this.linkRefractionWithTransparency, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".invertRefractionY = \").concat(this.invertRefractionY, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".useThicknessAsDepth = \").concat(this.useThicknessAsDepth, \";\\r\\n\");\n        return codeString;\n    };\n    RefractionBlock.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        if (this.texture && !this.texture.isRenderTarget) {\n            serializationObject.texture = this.texture.serialize();\n        }\n        serializationObject.linkRefractionWithTransparency = this.linkRefractionWithTransparency;\n        serializationObject.invertRefractionY = this.invertRefractionY;\n        serializationObject.useThicknessAsDepth = this.useThicknessAsDepth;\n        return serializationObject;\n    };\n    RefractionBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n        _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n        if (serializationObject.texture) {\n            rootUrl = serializationObject.texture.url.indexOf(\"data:\") === 0 ? \"\" : rootUrl;\n            if (serializationObject.texture.isCube) {\n                this.texture = CubeTexture.Parse(serializationObject.texture, scene, rootUrl);\n            }\n            else {\n                this.texture = Texture.Parse(serializationObject.texture, scene, rootUrl);\n            }\n        }\n        this.linkRefractionWithTransparency = serializationObject.linkRefractionWithTransparency;\n        this.invertRefractionY = serializationObject.invertRefractionY;\n        this.useThicknessAsDepth = !!serializationObject.useThicknessAsDepth;\n    };\n    __decorate([\n        editableInPropertyPage(\"Link refraction to transparency\", PropertyTypeForEdition.Boolean, \"ADVANCED\", { notifiers: { update: true } })\n    ], RefractionBlock.prototype, \"linkRefractionWithTransparency\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Invert refraction Y\", PropertyTypeForEdition.Boolean, \"ADVANCED\", { notifiers: { update: true } })\n    ], RefractionBlock.prototype, \"invertRefractionY\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Use thickness as depth\", PropertyTypeForEdition.Boolean, \"ADVANCED\", { notifiers: { update: true } })\n    ], RefractionBlock.prototype, \"useThicknessAsDepth\", void 0);\n    return RefractionBlock;\n}(NodeMaterialBlock));\nexport { RefractionBlock };\nRegisterClass(\"BABYLON.RefractionBlock\", RefractionBlock);\n//# sourceMappingURL=refractionBlock.js.map","import { __decorate, __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialConnectionPointDirection } from \"../../nodeMaterialBlockConnectionPoint.js\";\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\nimport { editableInPropertyPage, PropertyTypeForEdition } from \"../../nodeMaterialDecorator.js\";\nimport { NodeMaterialConnectionPointCustomObject } from \"../../nodeMaterialConnectionPointCustomObject.js\";\n/**\n * Block used to implement the sheen module of the PBR material\n */\nvar SheenBlock = /** @class */ (function (_super) {\n    __extends(SheenBlock, _super);\n    /**\n     * Create a new SheenBlock\n     * @param name defines the block name\n     */\n    function SheenBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Fragment) || this;\n        /**\n         * If true, the sheen effect is layered above the base BRDF with the albedo-scaling technique.\n         * It allows the strength of the sheen effect to not depend on the base color of the material,\n         * making it easier to setup and tweak the effect\n         */\n        _this.albedoScaling = false;\n        /**\n         * Defines if the sheen is linked to the sheen color.\n         */\n        _this.linkSheenWithAlbedo = false;\n        _this._isUnique = true;\n        _this.registerInput(\"intensity\", NodeMaterialBlockConnectionPointTypes.Float, true, NodeMaterialBlockTargets.Fragment);\n        _this.registerInput(\"color\", NodeMaterialBlockConnectionPointTypes.Color3, true, NodeMaterialBlockTargets.Fragment);\n        _this.registerInput(\"roughness\", NodeMaterialBlockConnectionPointTypes.Float, true, NodeMaterialBlockTargets.Fragment);\n        _this.registerOutput(\"sheen\", NodeMaterialBlockConnectionPointTypes.Object, NodeMaterialBlockTargets.Fragment, new NodeMaterialConnectionPointCustomObject(\"sheen\", _this, NodeMaterialConnectionPointDirection.Output, SheenBlock, \"SheenBlock\"));\n        return _this;\n    }\n    /**\n     * Initialize the block and prepare the context for build\n     * @param state defines the state that will be used for the build\n     */\n    SheenBlock.prototype.initialize = function (state) {\n        state._excludeVariableName(\"sheenOut\");\n        state._excludeVariableName(\"sheenMapData\");\n        state._excludeVariableName(\"vSheenColor\");\n        state._excludeVariableName(\"vSheenRoughness\");\n    };\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    SheenBlock.prototype.getClassName = function () {\n        return \"SheenBlock\";\n    };\n    Object.defineProperty(SheenBlock.prototype, \"intensity\", {\n        /**\n         * Gets the intensity input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SheenBlock.prototype, \"color\", {\n        /**\n         * Gets the color input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SheenBlock.prototype, \"roughness\", {\n        /**\n         * Gets the roughness input component\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SheenBlock.prototype, \"sheen\", {\n        /**\n         * Gets the sheen object output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SheenBlock.prototype.prepareDefines = function (mesh, nodeMaterial, defines) {\n        _super.prototype.prepareDefines.call(this, mesh, nodeMaterial, defines);\n        defines.setValue(\"SHEEN\", true);\n        defines.setValue(\"SHEEN_USE_ROUGHNESS_FROM_MAINTEXTURE\", true, true);\n        defines.setValue(\"SHEEN_LINKWITHALBEDO\", this.linkSheenWithAlbedo, true);\n        defines.setValue(\"SHEEN_ROUGHNESS\", this.roughness.isConnected, true);\n        defines.setValue(\"SHEEN_ALBEDOSCALING\", this.albedoScaling, true);\n    };\n    /**\n     * Gets the main code of the block (fragment side)\n     * @param reflectionBlock instance of a ReflectionBlock null if the code must be generated without an active reflection module\n     * @returns the shader code\n     */\n    SheenBlock.prototype.getCode = function (reflectionBlock) {\n        var code = \"\";\n        var color = this.color.isConnected ? this.color.associatedVariableName : \"vec3(1.)\";\n        var intensity = this.intensity.isConnected ? this.intensity.associatedVariableName : \"1.\";\n        var roughness = this.roughness.isConnected ? this.roughness.associatedVariableName : \"0.\";\n        var texture = \"vec4(0.)\";\n        code = \"#ifdef SHEEN\\n            sheenOutParams sheenOut;\\n\\n            vec4 vSheenColor = vec4(\".concat(color, \", \").concat(intensity, \");\\n\\n            sheenBlock(\\n                vSheenColor,\\n            #ifdef SHEEN_ROUGHNESS\\n                \").concat(roughness, \",\\n            #endif\\n                roughness,\\n            #ifdef SHEEN_TEXTURE\\n                \").concat(texture, \",\\n                1.0,\\n            #endif\\n                reflectance,\\n            #ifdef SHEEN_LINKWITHALBEDO\\n                baseColor,\\n                surfaceAlbedo,\\n            #endif\\n            #ifdef ENVIRONMENTBRDF\\n                NdotV,\\n                environmentBrdf,\\n            #endif\\n            #if defined(REFLECTION) && defined(ENVIRONMENTBRDF)\\n                AARoughnessFactors,\\n                \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._vReflectionMicrosurfaceInfosName, \",\\n                \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._vReflectionInfosName, \",\\n                \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock.reflectionColor, \",\\n                vLightingIntensity,\\n                #ifdef \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._define3DName, \"\\n                    \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._cubeSamplerName, \",\\n                #else\\n                    \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._2DSamplerName, \",\\n                #endif\\n                reflectionOut.reflectionCoords,\\n                NdotVUnclamped,\\n                #ifndef LODBASEDMICROSFURACE\\n                    #ifdef \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._define3DName, \"\\n                        \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._cubeSamplerName, \",\\n                        \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._cubeSamplerName, \",\\n                    #else\\n                        \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._2DSamplerName, \",\\n                        \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._2DSamplerName, \",\\n                    #endif\\n                #endif\\n                #if !defined(\").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._defineSkyboxName, \") && defined(RADIANCEOCCLUSION)\\n                    seo,\\n                #endif\\n                #if !defined(\").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._defineSkyboxName, \") && defined(HORIZONOCCLUSION) && defined(BUMP) && defined(\").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._define3DName, \")\\n                    eho,\\n                #endif\\n            #endif\\n                sheenOut\\n            );\\n\\n            #ifdef SHEEN_LINKWITHALBEDO\\n                surfaceAlbedo = sheenOut.surfaceAlbedo;\\n            #endif\\n        #endif\\r\\n\");\n        return code;\n    };\n    SheenBlock.prototype._buildBlock = function (state) {\n        if (state.target === NodeMaterialBlockTargets.Fragment) {\n            state.sharedData.blocksWithDefines.push(this);\n        }\n        return this;\n    };\n    SheenBlock.prototype._dumpPropertiesCode = function () {\n        var codeString = _super.prototype._dumpPropertiesCode.call(this);\n        codeString += \"\".concat(this._codeVariableName, \".albedoScaling = \").concat(this.albedoScaling, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".linkSheenWithAlbedo = \").concat(this.linkSheenWithAlbedo, \";\\r\\n\");\n        return codeString;\n    };\n    SheenBlock.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.albedoScaling = this.albedoScaling;\n        serializationObject.linkSheenWithAlbedo = this.linkSheenWithAlbedo;\n        return serializationObject;\n    };\n    SheenBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n        _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n        this.albedoScaling = serializationObject.albedoScaling;\n        this.linkSheenWithAlbedo = serializationObject.linkSheenWithAlbedo;\n    };\n    __decorate([\n        editableInPropertyPage(\"Albedo scaling\", PropertyTypeForEdition.Boolean, \"PROPERTIES\", { notifiers: { update: true } })\n    ], SheenBlock.prototype, \"albedoScaling\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Link sheen with albedo\", PropertyTypeForEdition.Boolean, \"PROPERTIES\", { notifiers: { update: true } })\n    ], SheenBlock.prototype, \"linkSheenWithAlbedo\", void 0);\n    return SheenBlock;\n}(NodeMaterialBlock));\nexport { SheenBlock };\nRegisterClass(\"BABYLON.SheenBlock\", SheenBlock);\n//# sourceMappingURL=sheenBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialConnectionPointDirection } from \"../../nodeMaterialBlockConnectionPoint.js\";\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\nimport { InputBlock } from \"../Input/inputBlock.js\";\nimport { NodeMaterialConnectionPointCustomObject } from \"../../nodeMaterialConnectionPointCustomObject.js\";\nimport { RefractionBlock } from \"./refractionBlock.js\";\n/**\n * Block used to implement the sub surface module of the PBR material\n */\nvar SubSurfaceBlock = /** @class */ (function (_super) {\n    __extends(SubSurfaceBlock, _super);\n    /**\n     * Create a new SubSurfaceBlock\n     * @param name defines the block name\n     */\n    function SubSurfaceBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Fragment) || this;\n        _this._isUnique = true;\n        _this.registerInput(\"thickness\", NodeMaterialBlockConnectionPointTypes.Float, false, NodeMaterialBlockTargets.Fragment);\n        _this.registerInput(\"tintColor\", NodeMaterialBlockConnectionPointTypes.Color3, true, NodeMaterialBlockTargets.Fragment);\n        _this.registerInput(\"translucencyIntensity\", NodeMaterialBlockConnectionPointTypes.Float, true, NodeMaterialBlockTargets.Fragment);\n        _this.registerInput(\"translucencyDiffusionDist\", NodeMaterialBlockConnectionPointTypes.Color3, true, NodeMaterialBlockTargets.Fragment);\n        _this.registerInput(\"refraction\", NodeMaterialBlockConnectionPointTypes.Object, true, NodeMaterialBlockTargets.Fragment, new NodeMaterialConnectionPointCustomObject(\"refraction\", _this, NodeMaterialConnectionPointDirection.Input, RefractionBlock, \"RefractionBlock\"));\n        _this.registerOutput(\"subsurface\", NodeMaterialBlockConnectionPointTypes.Object, NodeMaterialBlockTargets.Fragment, new NodeMaterialConnectionPointCustomObject(\"subsurface\", _this, NodeMaterialConnectionPointDirection.Output, SubSurfaceBlock, \"SubSurfaceBlock\"));\n        return _this;\n    }\n    /**\n     * Initialize the block and prepare the context for build\n     * @param state defines the state that will be used for the build\n     */\n    SubSurfaceBlock.prototype.initialize = function (state) {\n        state._excludeVariableName(\"subSurfaceOut\");\n        state._excludeVariableName(\"vThicknessParam\");\n        state._excludeVariableName(\"vTintColor\");\n        state._excludeVariableName(\"vSubSurfaceIntensity\");\n    };\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    SubSurfaceBlock.prototype.getClassName = function () {\n        return \"SubSurfaceBlock\";\n    };\n    Object.defineProperty(SubSurfaceBlock.prototype, \"thickness\", {\n        /**\n         * Gets the thickness component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SubSurfaceBlock.prototype, \"tintColor\", {\n        /**\n         * Gets the tint color input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SubSurfaceBlock.prototype, \"translucencyIntensity\", {\n        /**\n         * Gets the translucency intensity input component\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SubSurfaceBlock.prototype, \"translucencyDiffusionDist\", {\n        /**\n         * Gets the translucency diffusion distance input component\n         */\n        get: function () {\n            return this._inputs[3];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SubSurfaceBlock.prototype, \"refraction\", {\n        /**\n         * Gets the refraction object parameters\n         */\n        get: function () {\n            return this._inputs[4];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SubSurfaceBlock.prototype, \"subsurface\", {\n        /**\n         * Gets the sub surface object output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SubSurfaceBlock.prototype.autoConfigure = function () {\n        if (!this.thickness.isConnected) {\n            var thicknessInput = new InputBlock(\"SubSurface thickness\", NodeMaterialBlockTargets.Fragment, NodeMaterialBlockConnectionPointTypes.Float);\n            thicknessInput.value = 0;\n            thicknessInput.output.connectTo(this.thickness);\n        }\n    };\n    SubSurfaceBlock.prototype.prepareDefines = function (mesh, nodeMaterial, defines) {\n        _super.prototype.prepareDefines.call(this, mesh, nodeMaterial, defines);\n        var translucencyEnabled = this.translucencyDiffusionDist.isConnected || this.translucencyIntensity.isConnected;\n        defines.setValue(\"SUBSURFACE\", translucencyEnabled || this.refraction.isConnected, true);\n        defines.setValue(\"SS_TRANSLUCENCY\", translucencyEnabled, true);\n        defines.setValue(\"SS_THICKNESSANDMASK_TEXTURE\", false, true);\n        defines.setValue(\"SS_REFRACTIONINTENSITY_TEXTURE\", false, true);\n        defines.setValue(\"SS_TRANSLUCENCYINTENSITY_TEXTURE\", false, true);\n        defines.setValue(\"SS_MASK_FROM_THICKNESS_TEXTURE\", false, true);\n        defines.setValue(\"SS_USE_GLTF_TEXTURES\", false, true);\n    };\n    /**\n     * Gets the main code of the block (fragment side)\n     * @param state current state of the node material building\n     * @param ssBlock instance of a SubSurfaceBlock or null if the code must be generated without an active sub surface module\n     * @param reflectionBlock instance of a ReflectionBlock null if the code must be generated without an active reflection module\n     * @param worldPosVarName name of the variable holding the world position\n     * @returns the shader code\n     */\n    SubSurfaceBlock.GetCode = function (state, ssBlock, reflectionBlock, worldPosVarName) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\n        var code = \"\";\n        var thickness = (ssBlock === null || ssBlock === void 0 ? void 0 : ssBlock.thickness.isConnected) ? ssBlock.thickness.associatedVariableName : \"0.\";\n        var tintColor = (ssBlock === null || ssBlock === void 0 ? void 0 : ssBlock.tintColor.isConnected) ? ssBlock.tintColor.associatedVariableName : \"vec3(1.)\";\n        var translucencyIntensity = (ssBlock === null || ssBlock === void 0 ? void 0 : ssBlock.translucencyIntensity.isConnected) ? ssBlock === null || ssBlock === void 0 ? void 0 : ssBlock.translucencyIntensity.associatedVariableName : \"1.\";\n        var translucencyDiffusionDistance = (ssBlock === null || ssBlock === void 0 ? void 0 : ssBlock.translucencyDiffusionDist.isConnected) ? ssBlock === null || ssBlock === void 0 ? void 0 : ssBlock.translucencyDiffusionDist.associatedVariableName : \"vec3(1.)\";\n        var refractionBlock = ((ssBlock === null || ssBlock === void 0 ? void 0 : ssBlock.refraction.isConnected) ? (_a = ssBlock === null || ssBlock === void 0 ? void 0 : ssBlock.refraction.connectedPoint) === null || _a === void 0 ? void 0 : _a.ownerBlock : null);\n        var refractionTintAtDistance = (refractionBlock === null || refractionBlock === void 0 ? void 0 : refractionBlock.tintAtDistance.isConnected) ? refractionBlock.tintAtDistance.associatedVariableName : \"1.\";\n        var refractionIntensity = (refractionBlock === null || refractionBlock === void 0 ? void 0 : refractionBlock.intensity.isConnected) ? refractionBlock.intensity.associatedVariableName : \"1.\";\n        var refractionView = (refractionBlock === null || refractionBlock === void 0 ? void 0 : refractionBlock.view.isConnected) ? refractionBlock.view.associatedVariableName : \"\";\n        code += (_b = refractionBlock === null || refractionBlock === void 0 ? void 0 : refractionBlock.getCode(state)) !== null && _b !== void 0 ? _b : \"\";\n        code += \"subSurfaceOutParams subSurfaceOut;\\n\\n        #ifdef SUBSURFACE\\n            vec2 vThicknessParam = vec2(0., \".concat(thickness, \");\\n            vec4 vTintColor = vec4(\").concat(tintColor, \", \").concat(refractionTintAtDistance, \");\\n            vec3 vSubSurfaceIntensity = vec3(\").concat(refractionIntensity, \", \").concat(translucencyIntensity, \", 0.);\\n\\n            subSurfaceBlock(\\n                vSubSurfaceIntensity,\\n                vThicknessParam,\\n                vTintColor,\\n                normalW,\\n                specularEnvironmentReflectance,\\n            #ifdef SS_THICKNESSANDMASK_TEXTURE\\n                vec4(0.),\\n            #endif\\n            #ifdef REFLECTION\\n                #ifdef SS_TRANSLUCENCY\\n                    \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._reflectionMatrixName, \",\\n                    #ifdef USESPHERICALFROMREFLECTIONMAP\\n                        #if !defined(NORMAL) || !defined(USESPHERICALINVERTEX)\\n                            reflectionOut.irradianceVector,\\n                        #endif\\n                        #if defined(REALTIME_FILTERING)\\n                            \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._cubeSamplerName, \",\\n                            \").concat(reflectionBlock === null || reflectionBlock === void 0 ? void 0 : reflectionBlock._vReflectionFilteringInfoName, \",\\n                        #endif\\n                        #endif\\n                    #ifdef USEIRRADIANCEMAP\\n                        irradianceSampler,\\n                    #endif\\n                #endif\\n            #endif\\n            #if defined(SS_REFRACTION) || defined(SS_TRANSLUCENCY)\\n                surfaceAlbedo,\\n            #endif\\n            #ifdef SS_REFRACTION\\n                \").concat(worldPosVarName, \".xyz,\\n                viewDirectionW,\\n                \").concat(refractionView, \",\\n                \").concat((_c = refractionBlock === null || refractionBlock === void 0 ? void 0 : refractionBlock._vRefractionInfosName) !== null && _c !== void 0 ? _c : \"\", \",\\n                \").concat((_d = refractionBlock === null || refractionBlock === void 0 ? void 0 : refractionBlock._refractionMatrixName) !== null && _d !== void 0 ? _d : \"\", \",\\n                \").concat((_e = refractionBlock === null || refractionBlock === void 0 ? void 0 : refractionBlock._vRefractionMicrosurfaceInfosName) !== null && _e !== void 0 ? _e : \"\", \",\\n                vLightingIntensity,\\n                #ifdef SS_LINKREFRACTIONTOTRANSPARENCY\\n                    alpha,\\n                #endif\\n                #ifdef \").concat((_f = refractionBlock === null || refractionBlock === void 0 ? void 0 : refractionBlock._defineLODRefractionAlpha) !== null && _f !== void 0 ? _f : \"IGNORE\", \"\\n                    NdotVUnclamped,\\n                #endif\\n                #ifdef \").concat((_g = refractionBlock === null || refractionBlock === void 0 ? void 0 : refractionBlock._defineLinearSpecularRefraction) !== null && _g !== void 0 ? _g : \"IGNORE\", \"\\n                    roughness,\\n                #endif\\n                alphaG,\\n                #ifdef \").concat((_h = refractionBlock === null || refractionBlock === void 0 ? void 0 : refractionBlock._define3DName) !== null && _h !== void 0 ? _h : \"IGNORE\", \"\\n                    \").concat((_j = refractionBlock === null || refractionBlock === void 0 ? void 0 : refractionBlock._cubeSamplerName) !== null && _j !== void 0 ? _j : \"\", \",\\n                #else\\n                    \").concat((_k = refractionBlock === null || refractionBlock === void 0 ? void 0 : refractionBlock._2DSamplerName) !== null && _k !== void 0 ? _k : \"\", \",\\n                #endif\\n                #ifndef LODBASEDMICROSFURACE\\n                    #ifdef \").concat((_l = refractionBlock === null || refractionBlock === void 0 ? void 0 : refractionBlock._define3DName) !== null && _l !== void 0 ? _l : \"IGNORE\", \"\\n                        \").concat((_m = refractionBlock === null || refractionBlock === void 0 ? void 0 : refractionBlock._cubeSamplerName) !== null && _m !== void 0 ? _m : \"\", \",\\n                        \").concat((_o = refractionBlock === null || refractionBlock === void 0 ? void 0 : refractionBlock._cubeSamplerName) !== null && _o !== void 0 ? _o : \"\", \",\\n                    #else\\n                        \").concat((_p = refractionBlock === null || refractionBlock === void 0 ? void 0 : refractionBlock._2DSamplerName) !== null && _p !== void 0 ? _p : \"\", \",\\n                        \").concat((_q = refractionBlock === null || refractionBlock === void 0 ? void 0 : refractionBlock._2DSamplerName) !== null && _q !== void 0 ? _q : \"\", \",\\n                    #endif\\n                #endif\\n                #ifdef ANISOTROPIC\\n                    anisotropicOut,\\n                #endif\\n                #ifdef REALTIME_FILTERING\\n                    \").concat((_r = refractionBlock === null || refractionBlock === void 0 ? void 0 : refractionBlock._vRefractionFilteringInfoName) !== null && _r !== void 0 ? _r : \"\", \",\\n                #endif\\n                #ifdef SS_USE_LOCAL_REFRACTIONMAP_CUBIC\\n                    vRefractionPosition,\\n                    vRefractionSize,\\n                #endif\\n            #endif\\n            #ifdef SS_TRANSLUCENCY\\n                \").concat(translucencyDiffusionDistance, \",\\n            #endif\\n                subSurfaceOut\\n            );\\n\\n            #ifdef SS_REFRACTION\\n                surfaceAlbedo = subSurfaceOut.surfaceAlbedo;\\n                #ifdef SS_LINKREFRACTIONTOTRANSPARENCY\\n                    alpha = subSurfaceOut.alpha;\\n                #endif\\n            #endif\\n        #else\\n            subSurfaceOut.specularEnvironmentReflectance = specularEnvironmentReflectance;\\n        #endif\\r\\n\");\n        return code;\n    };\n    SubSurfaceBlock.prototype._buildBlock = function (state) {\n        if (state.target === NodeMaterialBlockTargets.Fragment) {\n            state.sharedData.blocksWithDefines.push(this);\n        }\n        return this;\n    };\n    return SubSurfaceBlock;\n}(NodeMaterialBlock));\nexport { SubSurfaceBlock };\nRegisterClass(\"BABYLON.SubSurfaceBlock\", SubSurfaceBlock);\n//# sourceMappingURL=subSurfaceBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\n/**\n * Block used for the particle blend multiply section\n */\nvar ParticleBlendMultiplyBlock = /** @class */ (function (_super) {\n    __extends(ParticleBlendMultiplyBlock, _super);\n    /**\n     * Create a new ParticleBlendMultiplyBlock\n     * @param name defines the block name\n     */\n    function ParticleBlendMultiplyBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Fragment) || this;\n        _this._isUnique = true;\n        _this.registerInput(\"color\", NodeMaterialBlockConnectionPointTypes.Color4, false, NodeMaterialBlockTargets.Fragment);\n        _this.registerInput(\"alphaTexture\", NodeMaterialBlockConnectionPointTypes.Float, false, NodeMaterialBlockTargets.Fragment);\n        _this.registerInput(\"alphaColor\", NodeMaterialBlockConnectionPointTypes.Float, false, NodeMaterialBlockTargets.Fragment);\n        _this.registerOutput(\"blendColor\", NodeMaterialBlockConnectionPointTypes.Color4, NodeMaterialBlockTargets.Fragment);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    ParticleBlendMultiplyBlock.prototype.getClassName = function () {\n        return \"ParticleBlendMultiplyBlock\";\n    };\n    Object.defineProperty(ParticleBlendMultiplyBlock.prototype, \"color\", {\n        /**\n         * Gets the color input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ParticleBlendMultiplyBlock.prototype, \"alphaTexture\", {\n        /**\n         * Gets the alphaTexture input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ParticleBlendMultiplyBlock.prototype, \"alphaColor\", {\n        /**\n         * Gets the alphaColor input component\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ParticleBlendMultiplyBlock.prototype, \"blendColor\", {\n        /**\n         * Gets the blendColor output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Initialize the block and prepare the context for build\n     * @param state defines the state that will be used for the build\n     */\n    ParticleBlendMultiplyBlock.prototype.initialize = function (state) {\n        state._excludeVariableName(\"sourceAlpha\");\n    };\n    ParticleBlendMultiplyBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        if (state.target === NodeMaterialBlockTargets.Vertex) {\n            return;\n        }\n        state.compilationString += \"\\n            #ifdef BLENDMULTIPLYMODE\\n                \".concat(this._declareOutput(this.blendColor, state), \";\\n                float sourceAlpha = \").concat(this.alphaColor.associatedVariableName, \" * \").concat(this.alphaTexture.associatedVariableName, \";\\n                \").concat(this.blendColor.associatedVariableName, \".rgb = \").concat(this.color.associatedVariableName, \".rgb * sourceAlpha + vec3(1.0) * (1.0 - sourceAlpha);\\n                \").concat(this.blendColor.associatedVariableName, \".a = \").concat(this.color.associatedVariableName, \".a;\\n            #else\\n                \").concat(this._declareOutput(this.blendColor, state), \" = \").concat(this.color.associatedVariableName, \";\\n            #endif\\n        \");\n        return this;\n    };\n    return ParticleBlendMultiplyBlock;\n}(NodeMaterialBlock));\nexport { ParticleBlendMultiplyBlock };\nRegisterClass(\"BABYLON.ParticleBlendMultiplyBlock\", ParticleBlendMultiplyBlock);\n//# sourceMappingURL=particleBlendMultiplyBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\n/**\n * Block used for the particle ramp gradient section\n */\nvar ParticleRampGradientBlock = /** @class */ (function (_super) {\n    __extends(ParticleRampGradientBlock, _super);\n    /**\n     * Create a new ParticleRampGradientBlock\n     * @param name defines the block name\n     */\n    function ParticleRampGradientBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Fragment) || this;\n        _this._isUnique = true;\n        _this.registerInput(\"color\", NodeMaterialBlockConnectionPointTypes.Color4, false, NodeMaterialBlockTargets.Fragment);\n        _this.registerOutput(\"rampColor\", NodeMaterialBlockConnectionPointTypes.Color4, NodeMaterialBlockTargets.Fragment);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    ParticleRampGradientBlock.prototype.getClassName = function () {\n        return \"ParticleRampGradientBlock\";\n    };\n    Object.defineProperty(ParticleRampGradientBlock.prototype, \"color\", {\n        /**\n         * Gets the color input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ParticleRampGradientBlock.prototype, \"rampColor\", {\n        /**\n         * Gets the rampColor output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Initialize the block and prepare the context for build\n     * @param state defines the state that will be used for the build\n     */\n    ParticleRampGradientBlock.prototype.initialize = function (state) {\n        state._excludeVariableName(\"remapRanges\");\n        state._excludeVariableName(\"rampSampler\");\n        state._excludeVariableName(\"baseColor\");\n        state._excludeVariableName(\"alpha\");\n        state._excludeVariableName(\"remappedColorIndex\");\n        state._excludeVariableName(\"rampColor\");\n        state._excludeVariableName(\"finalAlpha\");\n    };\n    ParticleRampGradientBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        if (state.target === NodeMaterialBlockTargets.Vertex) {\n            return;\n        }\n        state._emit2DSampler(\"rampSampler\");\n        state._emitVaryingFromString(\"remapRanges\", \"vec4\", \"RAMPGRADIENT\");\n        state.compilationString += \"\\n            #ifdef RAMPGRADIENT\\n                vec4 baseColor = \".concat(this.color.associatedVariableName, \";\\n                float alpha = \").concat(this.color.associatedVariableName, \".a;\\n\\n                float remappedColorIndex = clamp((alpha - remapRanges.x) / remapRanges.y, 0.0, 1.0);\\n\\n                vec4 rampColor = texture2D(rampSampler, vec2(1.0 - remappedColorIndex, 0.));\\n                baseColor.rgb *= rampColor.rgb;\\n\\n                // Remapped alpha\\n                float finalAlpha = baseColor.a;\\n                baseColor.a = clamp((alpha * rampColor.a - remapRanges.z) / remapRanges.w, 0.0, 1.0);\\n\\n                \").concat(this._declareOutput(this.rampColor, state), \" = baseColor;\\n            #else\\n                \").concat(this._declareOutput(this.rampColor, state), \" = \").concat(this.color.associatedVariableName, \";\\n            #endif\\n        \");\n        return this;\n    };\n    return ParticleRampGradientBlock;\n}(NodeMaterialBlock));\nexport { ParticleRampGradientBlock };\nRegisterClass(\"BABYLON.ParticleRampGradientBlock\", ParticleRampGradientBlock);\n//# sourceMappingURL=particleRampGradientBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets.js\";\nimport { InputBlock } from \"../Input/inputBlock.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\nimport { Texture } from \"../../../Textures/texture.js\";\n/**\n * Base block used for the particle texture\n */\nvar ParticleTextureBlock = /** @class */ (function (_super) {\n    __extends(ParticleTextureBlock, _super);\n    /**\n     * Create a new ParticleTextureBlock\n     * @param name defines the block name\n     */\n    function ParticleTextureBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Fragment) || this;\n        _this._samplerName = \"diffuseSampler\";\n        /**\n         * Gets or sets a boolean indicating if content needs to be converted to gamma space\n         */\n        _this.convertToGammaSpace = false;\n        /**\n         * Gets or sets a boolean indicating if content needs to be converted to linear space\n         */\n        _this.convertToLinearSpace = false;\n        _this._isUnique = false;\n        _this.registerInput(\"uv\", NodeMaterialBlockConnectionPointTypes.Vector2, false, NodeMaterialBlockTargets.VertexAndFragment);\n        _this.registerOutput(\"rgba\", NodeMaterialBlockConnectionPointTypes.Color4, NodeMaterialBlockTargets.Neutral);\n        _this.registerOutput(\"rgb\", NodeMaterialBlockConnectionPointTypes.Color3, NodeMaterialBlockTargets.Neutral);\n        _this.registerOutput(\"r\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Neutral);\n        _this.registerOutput(\"g\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Neutral);\n        _this.registerOutput(\"b\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Neutral);\n        _this.registerOutput(\"a\", NodeMaterialBlockConnectionPointTypes.Float, NodeMaterialBlockTargets.Neutral);\n        _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    ParticleTextureBlock.prototype.getClassName = function () {\n        return \"ParticleTextureBlock\";\n    };\n    Object.defineProperty(ParticleTextureBlock.prototype, \"uv\", {\n        /**\n         * Gets the uv input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ParticleTextureBlock.prototype, \"rgba\", {\n        /**\n         * Gets the rgba output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ParticleTextureBlock.prototype, \"rgb\", {\n        /**\n         * Gets the rgb output component\n         */\n        get: function () {\n            return this._outputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ParticleTextureBlock.prototype, \"r\", {\n        /**\n         * Gets the r output component\n         */\n        get: function () {\n            return this._outputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ParticleTextureBlock.prototype, \"g\", {\n        /**\n         * Gets the g output component\n         */\n        get: function () {\n            return this._outputs[3];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ParticleTextureBlock.prototype, \"b\", {\n        /**\n         * Gets the b output component\n         */\n        get: function () {\n            return this._outputs[4];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ParticleTextureBlock.prototype, \"a\", {\n        /**\n         * Gets the a output component\n         */\n        get: function () {\n            return this._outputs[5];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Initialize the block and prepare the context for build\n     * @param state defines the state that will be used for the build\n     */\n    ParticleTextureBlock.prototype.initialize = function (state) {\n        state._excludeVariableName(\"diffuseSampler\");\n    };\n    ParticleTextureBlock.prototype.autoConfigure = function (material) {\n        if (!this.uv.isConnected) {\n            var uvInput = material.getInputBlockByPredicate(function (b) { return b.isAttribute && b.name === \"particle_uv\"; });\n            if (!uvInput) {\n                uvInput = new InputBlock(\"uv\");\n                uvInput.setAsAttribute(\"particle_uv\");\n            }\n            uvInput.output.connectTo(this.uv);\n        }\n    };\n    ParticleTextureBlock.prototype.prepareDefines = function (mesh, nodeMaterial, defines) {\n        defines.setValue(this._linearDefineName, this.convertToGammaSpace, true);\n        defines.setValue(this._gammaDefineName, this.convertToLinearSpace, true);\n    };\n    ParticleTextureBlock.prototype.isReady = function () {\n        if (this.texture && !this.texture.isReadyOrNotBlocking()) {\n            return false;\n        }\n        return true;\n    };\n    ParticleTextureBlock.prototype._writeOutput = function (state, output, swizzle) {\n        state.compilationString += \"\".concat(this._declareOutput(output, state), \" = \").concat(this._tempTextureRead, \".\").concat(swizzle, \";\\r\\n\");\n        state.compilationString += \"#ifdef \".concat(this._linearDefineName, \"\\r\\n\");\n        state.compilationString += \"\".concat(output.associatedVariableName, \" = toGammaSpace(\").concat(output.associatedVariableName, \");\\r\\n\");\n        state.compilationString += \"#endif\\r\\n\";\n        state.compilationString += \"#ifdef \".concat(this._gammaDefineName, \"\\r\\n\");\n        state.compilationString += \"\".concat(output.associatedVariableName, \" = toLinearSpace(\").concat(output.associatedVariableName, \");\\r\\n\");\n        state.compilationString += \"#endif\\r\\n\";\n    };\n    ParticleTextureBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        if (state.target === NodeMaterialBlockTargets.Vertex) {\n            return;\n        }\n        this._tempTextureRead = state._getFreeVariableName(\"tempTextureRead\");\n        state._emit2DSampler(this._samplerName);\n        state.sharedData.blockingBlocks.push(this);\n        state.sharedData.textureBlocks.push(this);\n        state.sharedData.blocksWithDefines.push(this);\n        this._linearDefineName = state._getFreeDefineName(\"ISLINEAR\");\n        this._gammaDefineName = state._getFreeDefineName(\"ISGAMMA\");\n        var comments = \"//\".concat(this.name);\n        state._emitFunctionFromInclude(\"helperFunctions\", comments);\n        state.compilationString += \"vec4 \".concat(this._tempTextureRead, \" = texture2D(\").concat(this._samplerName, \", \").concat(this.uv.associatedVariableName, \");\\r\\n\");\n        for (var _i = 0, _a = this._outputs; _i < _a.length; _i++) {\n            var output = _a[_i];\n            if (output.hasEndpoints) {\n                this._writeOutput(state, output, output.name);\n            }\n        }\n        return this;\n    };\n    ParticleTextureBlock.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.convertToGammaSpace = this.convertToGammaSpace;\n        serializationObject.convertToLinearSpace = this.convertToLinearSpace;\n        if (this.texture && !this.texture.isRenderTarget) {\n            serializationObject.texture = this.texture.serialize();\n        }\n        return serializationObject;\n    };\n    ParticleTextureBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n        _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n        this.convertToGammaSpace = serializationObject.convertToGammaSpace;\n        this.convertToLinearSpace = !!serializationObject.convertToLinearSpace;\n        if (serializationObject.texture) {\n            rootUrl = serializationObject.texture.url.indexOf(\"data:\") === 0 ? \"\" : rootUrl;\n            this.texture = Texture.Parse(serializationObject.texture, scene, rootUrl);\n        }\n    };\n    return ParticleTextureBlock;\n}(NodeMaterialBlock));\nexport { ParticleTextureBlock };\nRegisterClass(\"BABYLON.ParticleTextureBlock\", ParticleTextureBlock);\n//# sourceMappingURL=particleTextureBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\n/**\n * Block used to output the vertex position\n */\nvar VertexOutputBlock = /** @class */ (function (_super) {\n    __extends(VertexOutputBlock, _super);\n    /**\n     * Creates a new VertexOutputBlock\n     * @param name defines the block name\n     */\n    function VertexOutputBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Vertex, true) || this;\n        _this.registerInput(\"vector\", NodeMaterialBlockConnectionPointTypes.Vector4);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    VertexOutputBlock.prototype.getClassName = function () {\n        return \"VertexOutputBlock\";\n    };\n    Object.defineProperty(VertexOutputBlock.prototype, \"vector\", {\n        /**\n         * Gets the vector input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    VertexOutputBlock.prototype._isLogarithmicDepthEnabled = function (nodeList) {\n        for (var _i = 0, nodeList_1 = nodeList; _i < nodeList_1.length; _i++) {\n            var node = nodeList_1[_i];\n            if (node.useLogarithmicDepth) {\n                return true;\n            }\n        }\n        return false;\n    };\n    VertexOutputBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var input = this.vector;\n        state.compilationString += \"gl_Position = \".concat(input.associatedVariableName, \";\\r\\n\");\n        if (this._isLogarithmicDepthEnabled(state.sharedData.fragmentOutputNodes)) {\n            state._emitUniformFromString(\"logarithmicDepthConstant\", \"float\");\n            state._emitVaryingFromString(\"vFragmentDepth\", \"float\");\n            state.compilationString += \"vFragmentDepth = 1.0 + gl_Position.w;\\r\\n\";\n            state.compilationString += \"gl_Position.z = log2(max(0.000001, vFragmentDepth)) * logarithmicDepthConstant;\\r\\n\";\n        }\n        return this;\n    };\n    return VertexOutputBlock;\n}(NodeMaterialBlock));\nexport { VertexOutputBlock };\nRegisterClass(\"BABYLON.VertexOutputBlock\", VertexOutputBlock);\n//# sourceMappingURL=vertexOutputBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to expand a Color3/4 into 4 outputs (one for each component)\n */\nvar ColorSplitterBlock = /** @class */ (function (_super) {\n    __extends(ColorSplitterBlock, _super);\n    /**\n     * Create a new ColorSplitterBlock\n     * @param name defines the block name\n     */\n    function ColorSplitterBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"rgba\", NodeMaterialBlockConnectionPointTypes.Color4, true);\n        _this.registerInput(\"rgb \", NodeMaterialBlockConnectionPointTypes.Color3, true);\n        _this.registerOutput(\"rgb\", NodeMaterialBlockConnectionPointTypes.Color3);\n        _this.registerOutput(\"r\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerOutput(\"g\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerOutput(\"b\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerOutput(\"a\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.inputsAreExclusive = true;\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    ColorSplitterBlock.prototype.getClassName = function () {\n        return \"ColorSplitterBlock\";\n    };\n    Object.defineProperty(ColorSplitterBlock.prototype, \"rgba\", {\n        /**\n         * Gets the rgba component (input)\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ColorSplitterBlock.prototype, \"rgbIn\", {\n        /**\n         * Gets the rgb component (input)\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ColorSplitterBlock.prototype, \"rgbOut\", {\n        /**\n         * Gets the rgb component (output)\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ColorSplitterBlock.prototype, \"r\", {\n        /**\n         * Gets the r component (output)\n         */\n        get: function () {\n            return this._outputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ColorSplitterBlock.prototype, \"g\", {\n        /**\n         * Gets the g component (output)\n         */\n        get: function () {\n            return this._outputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ColorSplitterBlock.prototype, \"b\", {\n        /**\n         * Gets the b component (output)\n         */\n        get: function () {\n            return this._outputs[3];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ColorSplitterBlock.prototype, \"a\", {\n        /**\n         * Gets the a component (output)\n         */\n        get: function () {\n            return this._outputs[4];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ColorSplitterBlock.prototype._inputRename = function (name) {\n        if (name === \"rgb \") {\n            return \"rgbIn\";\n        }\n        return name;\n    };\n    ColorSplitterBlock.prototype._outputRename = function (name) {\n        if (name === \"rgb\") {\n            return \"rgbOut\";\n        }\n        return name;\n    };\n    ColorSplitterBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var input = this.rgba.isConnected ? this.rgba : this.rgbIn;\n        if (!input.isConnected) {\n            return;\n        }\n        var rgbOutput = this._outputs[0];\n        var rOutput = this._outputs[1];\n        var gOutput = this._outputs[2];\n        var bOutput = this._outputs[3];\n        var aOutput = this._outputs[4];\n        if (rgbOutput.hasEndpoints) {\n            state.compilationString += this._declareOutput(rgbOutput, state) + \" = \".concat(input.associatedVariableName, \".rgb;\\r\\n\");\n        }\n        if (rOutput.hasEndpoints) {\n            state.compilationString += this._declareOutput(rOutput, state) + \" = \".concat(input.associatedVariableName, \".r;\\r\\n\");\n        }\n        if (gOutput.hasEndpoints) {\n            state.compilationString += this._declareOutput(gOutput, state) + \" = \".concat(input.associatedVariableName, \".g;\\r\\n\");\n        }\n        if (bOutput.hasEndpoints) {\n            state.compilationString += this._declareOutput(bOutput, state) + \" = \".concat(input.associatedVariableName, \".b;\\r\\n\");\n        }\n        if (aOutput.hasEndpoints) {\n            state.compilationString += this._declareOutput(aOutput, state) + \" = \".concat(input.associatedVariableName, \".a;\\r\\n\");\n        }\n        return this;\n    };\n    return ColorSplitterBlock;\n}(NodeMaterialBlock));\nexport { ColorSplitterBlock };\nRegisterClass(\"BABYLON.ColorSplitterBlock\", ColorSplitterBlock);\n//# sourceMappingURL=colorSplitterBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to multiply 2 values\n */\nvar MultiplyBlock = /** @class */ (function (_super) {\n    __extends(MultiplyBlock, _super);\n    /**\n     * Creates a new MultiplyBlock\n     * @param name defines the block name\n     */\n    function MultiplyBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"left\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"right\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        _this._linkConnectionTypes(0, 1);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    MultiplyBlock.prototype.getClassName = function () {\n        return \"MultiplyBlock\";\n    };\n    Object.defineProperty(MultiplyBlock.prototype, \"left\", {\n        /**\n         * Gets the left operand input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MultiplyBlock.prototype, \"right\", {\n        /**\n         * Gets the right operand input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MultiplyBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MultiplyBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString += this._declareOutput(output, state) + \" = \".concat(this.left.associatedVariableName, \" * \").concat(this.right.associatedVariableName, \";\\r\\n\");\n        return this;\n    };\n    return MultiplyBlock;\n}(NodeMaterialBlock));\nexport { MultiplyBlock };\nRegisterClass(\"BABYLON.MultiplyBlock\", MultiplyBlock);\n//# sourceMappingURL=multiplyBlock.js.map","import { __decorate, __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\nimport { Vector2 } from \"../../../Maths/math.vector.js\";\nimport { editableInPropertyPage, PropertyTypeForEdition } from \"../nodeMaterialDecorator.js\";\n/**\n * Block used to remap a float from a range to a new one\n */\nvar RemapBlock = /** @class */ (function (_super) {\n    __extends(RemapBlock, _super);\n    /**\n     * Creates a new RemapBlock\n     * @param name defines the block name\n     */\n    function RemapBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        /**\n         * Gets or sets the source range\n         */\n        _this.sourceRange = new Vector2(-1, 1);\n        /**\n         * Gets or sets the target range\n         */\n        _this.targetRange = new Vector2(0, 1);\n        _this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"sourceMin\", NodeMaterialBlockConnectionPointTypes.Float, true);\n        _this.registerInput(\"sourceMax\", NodeMaterialBlockConnectionPointTypes.Float, true);\n        _this.registerInput(\"targetMin\", NodeMaterialBlockConnectionPointTypes.Float, true);\n        _this.registerInput(\"targetMax\", NodeMaterialBlockConnectionPointTypes.Float, true);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    RemapBlock.prototype.getClassName = function () {\n        return \"RemapBlock\";\n    };\n    Object.defineProperty(RemapBlock.prototype, \"input\", {\n        /**\n         * Gets the input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RemapBlock.prototype, \"sourceMin\", {\n        /**\n         * Gets the source min input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RemapBlock.prototype, \"sourceMax\", {\n        /**\n         * Gets the source max input component\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RemapBlock.prototype, \"targetMin\", {\n        /**\n         * Gets the target min input component\n         */\n        get: function () {\n            return this._inputs[3];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RemapBlock.prototype, \"targetMax\", {\n        /**\n         * Gets the target max input component\n         */\n        get: function () {\n            return this._inputs[4];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RemapBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    RemapBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        var sourceMin = this.sourceMin.isConnected ? this.sourceMin.associatedVariableName : this._writeFloat(this.sourceRange.x);\n        var sourceMax = this.sourceMax.isConnected ? this.sourceMax.associatedVariableName : this._writeFloat(this.sourceRange.y);\n        var targetMin = this.targetMin.isConnected ? this.targetMin.associatedVariableName : this._writeFloat(this.targetRange.x);\n        var targetMax = this.targetMax.isConnected ? this.targetMax.associatedVariableName : this._writeFloat(this.targetRange.y);\n        state.compilationString +=\n            this._declareOutput(output, state) +\n                \" = \".concat(targetMin, \" + (\").concat(this._inputs[0].associatedVariableName, \" - \").concat(sourceMin, \") * (\").concat(targetMax, \" - \").concat(targetMin, \") / (\").concat(sourceMax, \" - \").concat(sourceMin, \");\\r\\n\");\n        return this;\n    };\n    RemapBlock.prototype._dumpPropertiesCode = function () {\n        var codeString = _super.prototype._dumpPropertiesCode.call(this) + \"\".concat(this._codeVariableName, \".sourceRange = new BABYLON.Vector2(\").concat(this.sourceRange.x, \", \").concat(this.sourceRange.y, \");\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".targetRange = new BABYLON.Vector2(\").concat(this.targetRange.x, \", \").concat(this.targetRange.y, \");\\r\\n\");\n        return codeString;\n    };\n    RemapBlock.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.sourceRange = this.sourceRange.asArray();\n        serializationObject.targetRange = this.targetRange.asArray();\n        return serializationObject;\n    };\n    RemapBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n        _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n        this.sourceRange = Vector2.FromArray(serializationObject.sourceRange);\n        this.targetRange = Vector2.FromArray(serializationObject.targetRange);\n    };\n    __decorate([\n        editableInPropertyPage(\"From\", PropertyTypeForEdition.Vector2)\n    ], RemapBlock.prototype, \"sourceRange\", void 0);\n    __decorate([\n        editableInPropertyPage(\"To\", PropertyTypeForEdition.Vector2)\n    ], RemapBlock.prototype, \"targetRange\", void 0);\n    return RemapBlock;\n}(NodeMaterialBlock));\nexport { RemapBlock };\nRegisterClass(\"BABYLON.RemapBlock\", RemapBlock);\n//# sourceMappingURL=remapBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to transform a vector (2, 3 or 4) with a matrix. It will generate a Vector4\n */\nvar TransformBlock = /** @class */ (function (_super) {\n    __extends(TransformBlock, _super);\n    /**\n     * Creates a new TransformBlock\n     * @param name defines the block name\n     */\n    function TransformBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        /**\n         * Defines the value to use to complement W value to transform it to a Vector4\n         */\n        _this.complementW = 1;\n        /**\n         * Defines the value to use to complement z value to transform it to a Vector4\n         */\n        _this.complementZ = 0;\n        _this.target = NodeMaterialBlockTargets.Vertex;\n        _this.registerInput(\"vector\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"transform\", NodeMaterialBlockConnectionPointTypes.Matrix);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this.registerOutput(\"xyz\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this._inputs[0].onConnectionObservable.add(function (other) {\n            if (other.ownerBlock.isInput) {\n                var otherAsInput = other.ownerBlock;\n                if (otherAsInput.name === \"normal\" || otherAsInput.name === \"tangent\") {\n                    _this.complementW = 0;\n                }\n            }\n        });\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    TransformBlock.prototype.getClassName = function () {\n        return \"TransformBlock\";\n    };\n    Object.defineProperty(TransformBlock.prototype, \"vector\", {\n        /**\n         * Gets the vector input\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TransformBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TransformBlock.prototype, \"xyz\", {\n        /**\n         * Gets the xyz output component\n         */\n        get: function () {\n            return this._outputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TransformBlock.prototype, \"transform\", {\n        /**\n         * Gets the matrix transform input\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TransformBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var vector = this.vector;\n        var transform = this.transform;\n        if (vector.connectedPoint) {\n            // None uniform scaling case.\n            if (this.complementW === 0) {\n                var comments = \"//\".concat(this.name);\n                state._emitFunctionFromInclude(\"helperFunctions\", comments);\n                state.sharedData.blocksWithDefines.push(this);\n                var transformName = state._getFreeVariableName(\"\".concat(transform.associatedVariableName, \"_NUS\"));\n                state.compilationString += \"mat3 \".concat(transformName, \" = mat3(\").concat(transform.associatedVariableName, \");\\r\\n\");\n                state.compilationString += \"#ifdef NONUNIFORMSCALING\\r\\n\";\n                state.compilationString += \"\".concat(transformName, \" = transposeMat3(inverseMat3(\").concat(transformName, \"));\\r\\n\");\n                state.compilationString += \"#endif\\r\\n\";\n                switch (vector.connectedPoint.type) {\n                    case NodeMaterialBlockConnectionPointTypes.Vector2:\n                        state.compilationString +=\n                            this._declareOutput(this.output, state) +\n                                \" = vec4(\".concat(transformName, \" * vec3(\").concat(vector.associatedVariableName, \", \").concat(this._writeFloat(this.complementZ), \"), \").concat(this._writeFloat(this.complementW), \");\\r\\n\");\n                        break;\n                    case NodeMaterialBlockConnectionPointTypes.Vector3:\n                    case NodeMaterialBlockConnectionPointTypes.Color3:\n                        state.compilationString +=\n                            this._declareOutput(this.output, state) + \" = vec4(\".concat(transformName, \" * \").concat(vector.associatedVariableName, \", \").concat(this._writeFloat(this.complementW), \");\\r\\n\");\n                        break;\n                    default:\n                        state.compilationString +=\n                            this._declareOutput(this.output, state) +\n                                \" = vec4(\".concat(transformName, \" * \").concat(vector.associatedVariableName, \".xyz, \").concat(this._writeFloat(this.complementW), \");\\r\\n\");\n                        break;\n                }\n            }\n            else {\n                var transformName = transform.associatedVariableName;\n                switch (vector.connectedPoint.type) {\n                    case NodeMaterialBlockConnectionPointTypes.Vector2:\n                        state.compilationString +=\n                            this._declareOutput(this.output, state) +\n                                \" = \".concat(transformName, \" * vec4(\").concat(vector.associatedVariableName, \", \").concat(this._writeFloat(this.complementZ), \", \").concat(this._writeFloat(this.complementW), \");\\r\\n\");\n                        break;\n                    case NodeMaterialBlockConnectionPointTypes.Vector3:\n                    case NodeMaterialBlockConnectionPointTypes.Color3:\n                        state.compilationString +=\n                            this._declareOutput(this.output, state) + \" = \".concat(transformName, \" * vec4(\").concat(vector.associatedVariableName, \", \").concat(this._writeFloat(this.complementW), \");\\r\\n\");\n                        break;\n                    default:\n                        state.compilationString += this._declareOutput(this.output, state) + \" = \".concat(transformName, \" * \").concat(vector.associatedVariableName, \";\\r\\n\");\n                        break;\n                }\n            }\n            if (this.xyz.hasEndpoints) {\n                state.compilationString += this._declareOutput(this.xyz, state) + \" = \".concat(this.output.associatedVariableName, \".xyz;\\r\\n\");\n            }\n        }\n        return this;\n    };\n    /**\n     * Update defines for shader compilation\n     * @param mesh defines the mesh to be rendered\n     * @param nodeMaterial defines the node material requesting the update\n     * @param defines defines the material defines to update\n     */\n    TransformBlock.prototype.prepareDefines = function (mesh, nodeMaterial, defines) {\n        // Do nothing\n        if (mesh.nonUniformScaling) {\n            defines.setValue(\"NONUNIFORMSCALING\", true);\n        }\n    };\n    TransformBlock.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.complementZ = this.complementZ;\n        serializationObject.complementW = this.complementW;\n        return serializationObject;\n    };\n    TransformBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n        _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n        this.complementZ = serializationObject.complementZ !== undefined ? serializationObject.complementZ : 0.0;\n        this.complementW = serializationObject.complementW !== undefined ? serializationObject.complementW : 1.0;\n    };\n    TransformBlock.prototype._dumpPropertiesCode = function () {\n        var codeString = _super.prototype._dumpPropertiesCode.call(this) + \"\".concat(this._codeVariableName, \".complementZ = \").concat(this.complementZ, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".complementW = \").concat(this.complementW, \";\\r\\n\");\n        return codeString;\n    };\n    return TransformBlock;\n}(NodeMaterialBlock));\nexport { TransformBlock };\nRegisterClass(\"BABYLON.TransformBlock\", TransformBlock);\n//# sourceMappingURL=transformBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Operations supported by the Trigonometry block\n */\nexport var TrigonometryBlockOperations;\n(function (TrigonometryBlockOperations) {\n    /** Cos */\n    TrigonometryBlockOperations[TrigonometryBlockOperations[\"Cos\"] = 0] = \"Cos\";\n    /** Sin */\n    TrigonometryBlockOperations[TrigonometryBlockOperations[\"Sin\"] = 1] = \"Sin\";\n    /** Abs */\n    TrigonometryBlockOperations[TrigonometryBlockOperations[\"Abs\"] = 2] = \"Abs\";\n    /** Exp */\n    TrigonometryBlockOperations[TrigonometryBlockOperations[\"Exp\"] = 3] = \"Exp\";\n    /** Exp2 */\n    TrigonometryBlockOperations[TrigonometryBlockOperations[\"Exp2\"] = 4] = \"Exp2\";\n    /** Round */\n    TrigonometryBlockOperations[TrigonometryBlockOperations[\"Round\"] = 5] = \"Round\";\n    /** Floor */\n    TrigonometryBlockOperations[TrigonometryBlockOperations[\"Floor\"] = 6] = \"Floor\";\n    /** Ceiling */\n    TrigonometryBlockOperations[TrigonometryBlockOperations[\"Ceiling\"] = 7] = \"Ceiling\";\n    /** Square root */\n    TrigonometryBlockOperations[TrigonometryBlockOperations[\"Sqrt\"] = 8] = \"Sqrt\";\n    /** Log */\n    TrigonometryBlockOperations[TrigonometryBlockOperations[\"Log\"] = 9] = \"Log\";\n    /** Tangent */\n    TrigonometryBlockOperations[TrigonometryBlockOperations[\"Tan\"] = 10] = \"Tan\";\n    /** Arc tangent */\n    TrigonometryBlockOperations[TrigonometryBlockOperations[\"ArcTan\"] = 11] = \"ArcTan\";\n    /** Arc cosinus */\n    TrigonometryBlockOperations[TrigonometryBlockOperations[\"ArcCos\"] = 12] = \"ArcCos\";\n    /** Arc sinus */\n    TrigonometryBlockOperations[TrigonometryBlockOperations[\"ArcSin\"] = 13] = \"ArcSin\";\n    /** Fraction */\n    TrigonometryBlockOperations[TrigonometryBlockOperations[\"Fract\"] = 14] = \"Fract\";\n    /** Sign */\n    TrigonometryBlockOperations[TrigonometryBlockOperations[\"Sign\"] = 15] = \"Sign\";\n    /** To radians (from degrees) */\n    TrigonometryBlockOperations[TrigonometryBlockOperations[\"Radians\"] = 16] = \"Radians\";\n    /** To degrees (from radians) */\n    TrigonometryBlockOperations[TrigonometryBlockOperations[\"Degrees\"] = 17] = \"Degrees\";\n})(TrigonometryBlockOperations || (TrigonometryBlockOperations = {}));\n/**\n * Block used to apply trigonometry operation to floats\n */\nvar TrigonometryBlock = /** @class */ (function (_super) {\n    __extends(TrigonometryBlock, _super);\n    /**\n     * Creates a new TrigonometryBlock\n     * @param name defines the block name\n     */\n    function TrigonometryBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        /**\n         * Gets or sets the operation applied by the block\n         */\n        _this.operation = TrigonometryBlockOperations.Cos;\n        _this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    TrigonometryBlock.prototype.getClassName = function () {\n        return \"TrigonometryBlock\";\n    };\n    Object.defineProperty(TrigonometryBlock.prototype, \"input\", {\n        /**\n         * Gets the input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TrigonometryBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TrigonometryBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        var operation = \"\";\n        switch (this.operation) {\n            case TrigonometryBlockOperations.Cos: {\n                operation = \"cos\";\n                break;\n            }\n            case TrigonometryBlockOperations.Sin: {\n                operation = \"sin\";\n                break;\n            }\n            case TrigonometryBlockOperations.Abs: {\n                operation = \"abs\";\n                break;\n            }\n            case TrigonometryBlockOperations.Exp: {\n                operation = \"exp\";\n                break;\n            }\n            case TrigonometryBlockOperations.Exp2: {\n                operation = \"exp2\";\n                break;\n            }\n            case TrigonometryBlockOperations.Round: {\n                operation = \"round\";\n                break;\n            }\n            case TrigonometryBlockOperations.Floor: {\n                operation = \"floor\";\n                break;\n            }\n            case TrigonometryBlockOperations.Ceiling: {\n                operation = \"ceil\";\n                break;\n            }\n            case TrigonometryBlockOperations.Sqrt: {\n                operation = \"sqrt\";\n                break;\n            }\n            case TrigonometryBlockOperations.Log: {\n                operation = \"log\";\n                break;\n            }\n            case TrigonometryBlockOperations.Tan: {\n                operation = \"tan\";\n                break;\n            }\n            case TrigonometryBlockOperations.ArcTan: {\n                operation = \"atan\";\n                break;\n            }\n            case TrigonometryBlockOperations.ArcCos: {\n                operation = \"acos\";\n                break;\n            }\n            case TrigonometryBlockOperations.ArcSin: {\n                operation = \"asin\";\n                break;\n            }\n            case TrigonometryBlockOperations.Fract: {\n                operation = \"fract\";\n                break;\n            }\n            case TrigonometryBlockOperations.Sign: {\n                operation = \"sign\";\n                break;\n            }\n            case TrigonometryBlockOperations.Radians: {\n                operation = \"radians\";\n                break;\n            }\n            case TrigonometryBlockOperations.Degrees: {\n                operation = \"degrees\";\n                break;\n            }\n        }\n        state.compilationString += this._declareOutput(output, state) + \" = \".concat(operation, \"(\").concat(this.input.associatedVariableName, \");\\r\\n\");\n        return this;\n    };\n    TrigonometryBlock.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.operation = this.operation;\n        return serializationObject;\n    };\n    TrigonometryBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n        _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n        this.operation = serializationObject.operation;\n    };\n    TrigonometryBlock.prototype._dumpPropertiesCode = function () {\n        var codeString = _super.prototype._dumpPropertiesCode.call(this) + \"\".concat(this._codeVariableName, \".operation = BABYLON.TrigonometryBlockOperations.\").concat(TrigonometryBlockOperations[this.operation], \";\\r\\n\");\n        return codeString;\n    };\n    return TrigonometryBlock;\n}(NodeMaterialBlock));\nexport { TrigonometryBlock };\nRegisterClass(\"BABYLON.TrigonometryBlock\", TrigonometryBlock);\n//# sourceMappingURL=trigonometryBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to create a Vector2/3/4 out of individual inputs (one for each component)\n */\nvar VectorMergerBlock = /** @class */ (function (_super) {\n    __extends(VectorMergerBlock, _super);\n    /**\n     * Create a new VectorMergerBlock\n     * @param name defines the block name\n     */\n    function VectorMergerBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        /**\n         * Gets or sets the swizzle for x (meaning which component to affect to the output.x)\n         */\n        _this.xSwizzle = \"x\";\n        /**\n         * Gets or sets the swizzle for y (meaning which component to affect to the output.y)\n         */\n        _this.ySwizzle = \"y\";\n        /**\n         * Gets or sets the swizzle for z (meaning which component to affect to the output.z)\n         */\n        _this.zSwizzle = \"z\";\n        /**\n         * Gets or sets the swizzle for w (meaning which component to affect to the output.w)\n         */\n        _this.wSwizzle = \"w\";\n        _this.registerInput(\"xyzw \", NodeMaterialBlockConnectionPointTypes.Vector4, true);\n        _this.registerInput(\"xyz \", NodeMaterialBlockConnectionPointTypes.Vector3, true);\n        _this.registerInput(\"xy \", NodeMaterialBlockConnectionPointTypes.Vector2, true);\n        _this.registerInput(\"zw \", NodeMaterialBlockConnectionPointTypes.Vector2, true);\n        _this.registerInput(\"x\", NodeMaterialBlockConnectionPointTypes.Float, true);\n        _this.registerInput(\"y\", NodeMaterialBlockConnectionPointTypes.Float, true);\n        _this.registerInput(\"z\", NodeMaterialBlockConnectionPointTypes.Float, true);\n        _this.registerInput(\"w\", NodeMaterialBlockConnectionPointTypes.Float, true);\n        _this.registerOutput(\"xyzw\", NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this.registerOutput(\"xyz\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this.registerOutput(\"xy\", NodeMaterialBlockConnectionPointTypes.Vector2);\n        _this.registerOutput(\"zw\", NodeMaterialBlockConnectionPointTypes.Vector2);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    VectorMergerBlock.prototype.getClassName = function () {\n        return \"VectorMergerBlock\";\n    };\n    Object.defineProperty(VectorMergerBlock.prototype, \"xyzwIn\", {\n        /**\n         * Gets the xyzw component (input)\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VectorMergerBlock.prototype, \"xyzIn\", {\n        /**\n         * Gets the xyz component (input)\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VectorMergerBlock.prototype, \"xyIn\", {\n        /**\n         * Gets the xy component (input)\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VectorMergerBlock.prototype, \"zwIn\", {\n        /**\n         * Gets the zw component (input)\n         */\n        get: function () {\n            return this._inputs[3];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VectorMergerBlock.prototype, \"x\", {\n        /**\n         * Gets the x component (input)\n         */\n        get: function () {\n            return this._inputs[4];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VectorMergerBlock.prototype, \"y\", {\n        /**\n         * Gets the y component (input)\n         */\n        get: function () {\n            return this._inputs[5];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VectorMergerBlock.prototype, \"z\", {\n        /**\n         * Gets the z component (input)\n         */\n        get: function () {\n            return this._inputs[6];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VectorMergerBlock.prototype, \"w\", {\n        /**\n         * Gets the w component (input)\n         */\n        get: function () {\n            return this._inputs[7];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VectorMergerBlock.prototype, \"xyzw\", {\n        /**\n         * Gets the xyzw component (output)\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VectorMergerBlock.prototype, \"xyzOut\", {\n        /**\n         * Gets the xyz component (output)\n         */\n        get: function () {\n            return this._outputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VectorMergerBlock.prototype, \"xyOut\", {\n        /**\n         * Gets the xy component (output)\n         */\n        get: function () {\n            return this._outputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VectorMergerBlock.prototype, \"zwOut\", {\n        /**\n         * Gets the zw component (output)\n         */\n        get: function () {\n            return this._outputs[3];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VectorMergerBlock.prototype, \"xy\", {\n        /**\n         * Gets the xy component (output)\n         * @deprecated Please use xyOut instead.\n         */\n        get: function () {\n            return this.xyOut;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VectorMergerBlock.prototype, \"xyz\", {\n        /**\n         * Gets the xyz component (output)\n         * @deprecated Please use xyzOut instead.\n         */\n        get: function () {\n            return this.xyzOut;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    VectorMergerBlock.prototype._inputRename = function (name) {\n        if (name === \"xyzw \") {\n            return \"xyzwIn\";\n        }\n        if (name === \"xyz \") {\n            return \"xyzIn\";\n        }\n        if (name === \"xy \") {\n            return \"xyIn\";\n        }\n        if (name === \"zw \") {\n            return \"zwIn\";\n        }\n        return name;\n    };\n    VectorMergerBlock.prototype._buildSwizzle = function (len) {\n        var swizzle = this.xSwizzle + this.ySwizzle + this.zSwizzle + this.wSwizzle;\n        return \".\" + swizzle.substr(0, len);\n    };\n    VectorMergerBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var xInput = this.x;\n        var yInput = this.y;\n        var zInput = this.z;\n        var wInput = this.w;\n        var xyInput = this.xyIn;\n        var zwInput = this.zwIn;\n        var xyzInput = this.xyzIn;\n        var xyzwInput = this.xyzwIn;\n        var v4Output = this._outputs[0];\n        var v3Output = this._outputs[1];\n        var v2Output = this._outputs[2];\n        var v2CompOutput = this._outputs[3];\n        if (xyzwInput.isConnected) {\n            if (v4Output.hasEndpoints) {\n                state.compilationString += this._declareOutput(v4Output, state) + \" = \".concat(xyzwInput.associatedVariableName).concat(this._buildSwizzle(4), \";\\r\\n\");\n            }\n            if (v3Output.hasEndpoints) {\n                state.compilationString += this._declareOutput(v3Output, state) + \" = \".concat(xyzwInput.associatedVariableName).concat(this._buildSwizzle(3), \";\\r\\n\");\n            }\n            if (v2Output.hasEndpoints) {\n                state.compilationString += this._declareOutput(v2Output, state) + \" = \".concat(xyzwInput.associatedVariableName).concat(this._buildSwizzle(2), \";\\r\\n\");\n            }\n        }\n        else if (xyzInput.isConnected) {\n            if (v4Output.hasEndpoints) {\n                state.compilationString +=\n                    this._declareOutput(v4Output, state) +\n                        \" = vec4(\".concat(xyzInput.associatedVariableName, \", \").concat(wInput.isConnected ? this._writeVariable(wInput) : \"0.0\", \")\").concat(this._buildSwizzle(4), \";\\r\\n\");\n            }\n            if (v3Output.hasEndpoints) {\n                state.compilationString += this._declareOutput(v3Output, state) + \" = \".concat(xyzInput.associatedVariableName).concat(this._buildSwizzle(3), \";\\r\\n\");\n            }\n            if (v2Output.hasEndpoints) {\n                state.compilationString += this._declareOutput(v2Output, state) + \" = \".concat(xyzInput.associatedVariableName).concat(this._buildSwizzle(2), \";\\r\\n\");\n            }\n        }\n        else if (xyInput.isConnected) {\n            if (v4Output.hasEndpoints) {\n                if (zwInput.isConnected) {\n                    state.compilationString +=\n                        this._declareOutput(v4Output, state) + \" = vec4(\".concat(xyInput.associatedVariableName, \", \").concat(zwInput.associatedVariableName, \")\").concat(this._buildSwizzle(4), \";\\r\\n\");\n                }\n                else {\n                    state.compilationString +=\n                        this._declareOutput(v4Output, state) +\n                            \" = vec4(\".concat(xyInput.associatedVariableName, \", \").concat(zInput.isConnected ? this._writeVariable(zInput) : \"0.0\", \", \").concat(wInput.isConnected ? this._writeVariable(wInput) : \"0.0\", \")\").concat(this._buildSwizzle(4), \";\\r\\n\");\n                }\n            }\n            if (v3Output.hasEndpoints) {\n                state.compilationString +=\n                    this._declareOutput(v3Output, state) +\n                        \" = vec3(\".concat(xyInput.associatedVariableName, \", \").concat(zInput.isConnected ? this._writeVariable(zInput) : \"0.0\", \")\").concat(this._buildSwizzle(3), \";\\r\\n\");\n            }\n            if (v2Output.hasEndpoints) {\n                state.compilationString += this._declareOutput(v2Output, state) + \" = \".concat(xyInput.associatedVariableName).concat(this._buildSwizzle(2), \";\\r\\n\");\n            }\n            if (v2CompOutput.hasEndpoints) {\n                if (zwInput.isConnected) {\n                    state.compilationString += this._declareOutput(v2CompOutput, state) + \" = \".concat(zwInput.associatedVariableName).concat(this._buildSwizzle(2), \";\\r\\n\");\n                }\n                else {\n                    state.compilationString +=\n                        this._declareOutput(v2CompOutput, state) +\n                            \" = vec2(\".concat(zInput.isConnected ? this._writeVariable(zInput) : \"0.0\", \", \").concat(wInput.isConnected ? this._writeVariable(wInput) : \"0.0\", \")\").concat(this._buildSwizzle(2), \";\\r\\n\");\n                }\n            }\n        }\n        else {\n            if (v4Output.hasEndpoints) {\n                if (zwInput.isConnected) {\n                    state.compilationString +=\n                        this._declareOutput(v4Output, state) +\n                            \" = vec4(\".concat(xInput.isConnected ? this._writeVariable(xInput) : \"0.0\", \", \").concat(yInput.isConnected ? this._writeVariable(yInput) : \"0.0\", \", \").concat(zwInput.associatedVariableName, \")\").concat(this._buildSwizzle(4), \";\\r\\n\");\n                }\n                else {\n                    state.compilationString +=\n                        this._declareOutput(v4Output, state) +\n                            \" = vec4(\".concat(xInput.isConnected ? this._writeVariable(xInput) : \"0.0\", \", \").concat(yInput.isConnected ? this._writeVariable(yInput) : \"0.0\", \", \").concat(zInput.isConnected ? this._writeVariable(zInput) : \"0.0\", \", \").concat(wInput.isConnected ? this._writeVariable(wInput) : \"0.0\", \")\").concat(this._buildSwizzle(4), \";\\r\\n\");\n                }\n            }\n            if (v3Output.hasEndpoints) {\n                state.compilationString +=\n                    this._declareOutput(v3Output, state) +\n                        \" = vec3(\".concat(xInput.isConnected ? this._writeVariable(xInput) : \"0.0\", \", \").concat(yInput.isConnected ? this._writeVariable(yInput) : \"0.0\", \", \").concat(zInput.isConnected ? this._writeVariable(zInput) : \"0.0\", \")\").concat(this._buildSwizzle(3), \";\\r\\n\");\n            }\n            if (v2Output.hasEndpoints) {\n                state.compilationString +=\n                    this._declareOutput(v2Output, state) +\n                        \" = vec2(\".concat(xInput.isConnected ? this._writeVariable(xInput) : \"0.0\", \", \").concat(yInput.isConnected ? this._writeVariable(yInput) : \"0.0\", \")\").concat(this._buildSwizzle(2), \";\\r\\n\");\n            }\n            if (v2CompOutput.hasEndpoints) {\n                if (zwInput.isConnected) {\n                    state.compilationString += this._declareOutput(v2CompOutput, state) + \" = \".concat(zwInput.associatedVariableName).concat(this._buildSwizzle(2), \";\\r\\n\");\n                }\n                else {\n                    state.compilationString +=\n                        this._declareOutput(v2CompOutput, state) +\n                            \" = vec2(\".concat(zInput.isConnected ? this._writeVariable(zInput) : \"0.0\", \", \").concat(wInput.isConnected ? this._writeVariable(wInput) : \"0.0\", \")\").concat(this._buildSwizzle(2), \";\\r\\n\");\n                }\n            }\n        }\n        return this;\n    };\n    VectorMergerBlock.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.xSwizzle = this.xSwizzle;\n        serializationObject.ySwizzle = this.ySwizzle;\n        serializationObject.zSwizzle = this.zSwizzle;\n        serializationObject.wSwizzle = this.wSwizzle;\n        return serializationObject;\n    };\n    VectorMergerBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n        var _a, _b, _c, _d;\n        _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n        this.xSwizzle = (_a = serializationObject.xSwizzle) !== null && _a !== void 0 ? _a : \"x\";\n        this.ySwizzle = (_b = serializationObject.ySwizzle) !== null && _b !== void 0 ? _b : \"y\";\n        this.zSwizzle = (_c = serializationObject.zSwizzle) !== null && _c !== void 0 ? _c : \"z\";\n        this.wSwizzle = (_d = serializationObject.wSwizzle) !== null && _d !== void 0 ? _d : \"w\";\n    };\n    VectorMergerBlock.prototype._dumpPropertiesCode = function () {\n        var codeString = _super.prototype._dumpPropertiesCode.call(this);\n        codeString += \"\".concat(this._codeVariableName, \".xSwizzle = \\\"\").concat(this.xSwizzle, \"\\\";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".ySwizzle = \\\"\").concat(this.ySwizzle, \"\\\";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".zSwizzle = \\\"\").concat(this.zSwizzle, \"\\\";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".wSwizzle = \\\"\").concat(this.wSwizzle, \"\\\";\\r\\n\");\n        return codeString;\n    };\n    return VectorMergerBlock;\n}(NodeMaterialBlock));\nexport { VectorMergerBlock };\nRegisterClass(\"BABYLON.VectorMergerBlock\", VectorMergerBlock);\n//# sourceMappingURL=vectorMergerBlock.js.map","/**\n * Enum defining the mode of a NodeMaterialBlockConnectionPoint\n */\nexport var NodeMaterialBlockConnectionPointMode;\n(function (NodeMaterialBlockConnectionPointMode) {\n    /** Value is an uniform */\n    NodeMaterialBlockConnectionPointMode[NodeMaterialBlockConnectionPointMode[\"Uniform\"] = 0] = \"Uniform\";\n    /** Value is a mesh attribute */\n    NodeMaterialBlockConnectionPointMode[NodeMaterialBlockConnectionPointMode[\"Attribute\"] = 1] = \"Attribute\";\n    /** Value is a varying between vertex and fragment shaders */\n    NodeMaterialBlockConnectionPointMode[NodeMaterialBlockConnectionPointMode[\"Varying\"] = 2] = \"Varying\";\n    /** Mode is undefined */\n    NodeMaterialBlockConnectionPointMode[NodeMaterialBlockConnectionPointMode[\"Undefined\"] = 3] = \"Undefined\";\n})(NodeMaterialBlockConnectionPointMode || (NodeMaterialBlockConnectionPointMode = {}));\n//# sourceMappingURL=nodeMaterialBlockConnectionPointMode.js.map","/**\n * Defines the kind of connection point for node based material\n */\nexport var NodeMaterialBlockConnectionPointTypes;\n(function (NodeMaterialBlockConnectionPointTypes) {\n    /** Float */\n    NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"Float\"] = 1] = \"Float\";\n    /** Int */\n    NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"Int\"] = 2] = \"Int\";\n    /** Vector2 */\n    NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"Vector2\"] = 4] = \"Vector2\";\n    /** Vector3 */\n    NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"Vector3\"] = 8] = \"Vector3\";\n    /** Vector4 */\n    NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"Vector4\"] = 16] = \"Vector4\";\n    /** Color3 */\n    NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"Color3\"] = 32] = \"Color3\";\n    /** Color4 */\n    NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"Color4\"] = 64] = \"Color4\";\n    /** Matrix */\n    NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"Matrix\"] = 128] = \"Matrix\";\n    /** Custom object */\n    NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"Object\"] = 256] = \"Object\";\n    /** Detect type based on connection */\n    NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"AutoDetect\"] = 1024] = \"AutoDetect\";\n    /** Output type that will be defined by input type */\n    NodeMaterialBlockConnectionPointTypes[NodeMaterialBlockConnectionPointTypes[\"BasedOnInput\"] = 2048] = \"BasedOnInput\";\n})(NodeMaterialBlockConnectionPointTypes || (NodeMaterialBlockConnectionPointTypes = {}));\n//# sourceMappingURL=nodeMaterialBlockConnectionPointTypes.js.map","/**\n * Enum used to define the target of a block\n */\nexport var NodeMaterialBlockTargets;\n(function (NodeMaterialBlockTargets) {\n    /** Vertex shader */\n    NodeMaterialBlockTargets[NodeMaterialBlockTargets[\"Vertex\"] = 1] = \"Vertex\";\n    /** Fragment shader */\n    NodeMaterialBlockTargets[NodeMaterialBlockTargets[\"Fragment\"] = 2] = \"Fragment\";\n    /** Neutral */\n    NodeMaterialBlockTargets[NodeMaterialBlockTargets[\"Neutral\"] = 4] = \"Neutral\";\n    /** Vertex and Fragment */\n    NodeMaterialBlockTargets[NodeMaterialBlockTargets[\"VertexAndFragment\"] = 3] = \"VertexAndFragment\";\n})(NodeMaterialBlockTargets || (NodeMaterialBlockTargets = {}));\n//# sourceMappingURL=nodeMaterialBlockTargets.js.map","/**\n * Enum used to define the material modes\n */\nexport var NodeMaterialModes;\n(function (NodeMaterialModes) {\n    /** Regular material */\n    NodeMaterialModes[NodeMaterialModes[\"Material\"] = 0] = \"Material\";\n    /** For post process */\n    NodeMaterialModes[NodeMaterialModes[\"PostProcess\"] = 1] = \"PostProcess\";\n    /** For particle system */\n    NodeMaterialModes[NodeMaterialModes[\"Particle\"] = 2] = \"Particle\";\n    /** For procedural texture */\n    NodeMaterialModes[NodeMaterialModes[\"ProceduralTexture\"] = 3] = \"ProceduralTexture\";\n})(NodeMaterialModes || (NodeMaterialModes = {}));\n//# sourceMappingURL=nodeMaterialModes.js.map","/**\n * Enum used to define system values e.g. values automatically provided by the system\n */\nexport var NodeMaterialSystemValues;\n(function (NodeMaterialSystemValues) {\n    /** World */\n    NodeMaterialSystemValues[NodeMaterialSystemValues[\"World\"] = 1] = \"World\";\n    /** View */\n    NodeMaterialSystemValues[NodeMaterialSystemValues[\"View\"] = 2] = \"View\";\n    /** Projection */\n    NodeMaterialSystemValues[NodeMaterialSystemValues[\"Projection\"] = 3] = \"Projection\";\n    /** ViewProjection */\n    NodeMaterialSystemValues[NodeMaterialSystemValues[\"ViewProjection\"] = 4] = \"ViewProjection\";\n    /** WorldView */\n    NodeMaterialSystemValues[NodeMaterialSystemValues[\"WorldView\"] = 5] = \"WorldView\";\n    /** WorldViewProjection */\n    NodeMaterialSystemValues[NodeMaterialSystemValues[\"WorldViewProjection\"] = 6] = \"WorldViewProjection\";\n    /** CameraPosition */\n    NodeMaterialSystemValues[NodeMaterialSystemValues[\"CameraPosition\"] = 7] = \"CameraPosition\";\n    /** Fog Color */\n    NodeMaterialSystemValues[NodeMaterialSystemValues[\"FogColor\"] = 8] = \"FogColor\";\n    /** Delta time */\n    NodeMaterialSystemValues[NodeMaterialSystemValues[\"DeltaTime\"] = 9] = \"DeltaTime\";\n    /** Camera parameters */\n    NodeMaterialSystemValues[NodeMaterialSystemValues[\"CameraParameters\"] = 10] = \"CameraParameters\";\n    /** Material alpha */\n    NodeMaterialSystemValues[NodeMaterialSystemValues[\"MaterialAlpha\"] = 11] = \"MaterialAlpha\";\n})(NodeMaterialSystemValues || (NodeMaterialSystemValues = {}));\n//# sourceMappingURL=nodeMaterialSystemValues.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialSystemValues } from \"../../Enums/nodeMaterialSystemValues.js\";\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets.js\";\nimport { MaterialHelper } from \"../../../materialHelper.js\";\nimport { InputBlock } from \"../Input/inputBlock.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\nimport \"../../../../Shaders/ShadersInclude/bonesDeclaration.js\";\nimport \"../../../../Shaders/ShadersInclude/bonesVertex.js\";\n/**\n * Block used to add support for vertex skinning (bones)\n */\nvar BonesBlock = /** @class */ (function (_super) {\n    __extends(BonesBlock, _super);\n    /**\n     * Creates a new BonesBlock\n     * @param name defines the block name\n     */\n    function BonesBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Vertex) || this;\n        _this.registerInput(\"matricesIndices\", NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this.registerInput(\"matricesWeights\", NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this.registerInput(\"matricesIndicesExtra\", NodeMaterialBlockConnectionPointTypes.Vector4, true);\n        _this.registerInput(\"matricesWeightsExtra\", NodeMaterialBlockConnectionPointTypes.Vector4, true);\n        _this.registerInput(\"world\", NodeMaterialBlockConnectionPointTypes.Matrix);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Matrix);\n        return _this;\n    }\n    /**\n     * Initialize the block and prepare the context for build\n     * @param state defines the state that will be used for the build\n     */\n    BonesBlock.prototype.initialize = function (state) {\n        state._excludeVariableName(\"boneSampler\");\n        state._excludeVariableName(\"boneTextureWidth\");\n        state._excludeVariableName(\"mBones\");\n        state._excludeVariableName(\"BonesPerMesh\");\n    };\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    BonesBlock.prototype.getClassName = function () {\n        return \"BonesBlock\";\n    };\n    Object.defineProperty(BonesBlock.prototype, \"matricesIndices\", {\n        /**\n         * Gets the matrix indices input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BonesBlock.prototype, \"matricesWeights\", {\n        /**\n         * Gets the matrix weights input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BonesBlock.prototype, \"matricesIndicesExtra\", {\n        /**\n         * Gets the extra matrix indices input component\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BonesBlock.prototype, \"matricesWeightsExtra\", {\n        /**\n         * Gets the extra matrix weights input component\n         */\n        get: function () {\n            return this._inputs[3];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BonesBlock.prototype, \"world\", {\n        /**\n         * Gets the world input component\n         */\n        get: function () {\n            return this._inputs[4];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BonesBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BonesBlock.prototype.autoConfigure = function (material) {\n        if (!this.matricesIndices.isConnected) {\n            var matricesIndicesInput = material.getInputBlockByPredicate(function (b) { return b.isAttribute && b.name === \"matricesIndices\"; });\n            if (!matricesIndicesInput) {\n                matricesIndicesInput = new InputBlock(\"matricesIndices\");\n                matricesIndicesInput.setAsAttribute(\"matricesIndices\");\n            }\n            matricesIndicesInput.output.connectTo(this.matricesIndices);\n        }\n        if (!this.matricesWeights.isConnected) {\n            var matricesWeightsInput = material.getInputBlockByPredicate(function (b) { return b.isAttribute && b.name === \"matricesWeights\"; });\n            if (!matricesWeightsInput) {\n                matricesWeightsInput = new InputBlock(\"matricesWeights\");\n                matricesWeightsInput.setAsAttribute(\"matricesWeights\");\n            }\n            matricesWeightsInput.output.connectTo(this.matricesWeights);\n        }\n        if (!this.world.isConnected) {\n            var worldInput = material.getInputBlockByPredicate(function (b) { return b.systemValue === NodeMaterialSystemValues.World; });\n            if (!worldInput) {\n                worldInput = new InputBlock(\"world\");\n                worldInput.setAsSystemValue(NodeMaterialSystemValues.World);\n            }\n            worldInput.output.connectTo(this.world);\n        }\n    };\n    BonesBlock.prototype.provideFallbacks = function (mesh, fallbacks) {\n        if (mesh && mesh.useBones && mesh.computeBonesUsingShaders && mesh.skeleton) {\n            fallbacks.addCPUSkinningFallback(0, mesh);\n        }\n    };\n    BonesBlock.prototype.bind = function (effect, nodeMaterial, mesh) {\n        MaterialHelper.BindBonesParameters(mesh, effect);\n    };\n    BonesBlock.prototype.prepareDefines = function (mesh, nodeMaterial, defines) {\n        if (!defines._areAttributesDirty) {\n            return;\n        }\n        MaterialHelper.PrepareDefinesForBones(mesh, defines);\n    };\n    BonesBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        // Register for compilation fallbacks\n        state.sharedData.blocksWithFallbacks.push(this);\n        // Register for binding\n        state.sharedData.forcedBindableBlocks.push(this);\n        // Register for defines\n        state.sharedData.blocksWithDefines.push(this);\n        // Register internal uniforms and samplers\n        state.uniforms.push(\"boneTextureWidth\");\n        state.uniforms.push(\"mBones\");\n        state.samplers.push(\"boneSampler\");\n        // Emit code\n        var comments = \"//\".concat(this.name);\n        state._emitFunctionFromInclude(\"bonesDeclaration\", comments, {\n            removeAttributes: true,\n            removeUniforms: false,\n            removeVaryings: true,\n            removeIfDef: false,\n        });\n        var influenceVariablename = state._getFreeVariableName(\"influence\");\n        state.compilationString += state._emitCodeFromInclude(\"bonesVertex\", comments, {\n            replaceStrings: [\n                {\n                    search: /finalWorld=finalWorld\\*influence;/,\n                    replace: \"\",\n                },\n                {\n                    search: /influence/gm,\n                    replace: influenceVariablename,\n                },\n            ],\n        });\n        var output = this._outputs[0];\n        var worldInput = this.world;\n        state.compilationString += \"#if NUM_BONE_INFLUENCERS>0\\r\\n\";\n        state.compilationString += this._declareOutput(output, state) + \" = \".concat(worldInput.associatedVariableName, \" * \").concat(influenceVariablename, \";\\r\\n\");\n        state.compilationString += \"#else\\r\\n\";\n        state.compilationString += this._declareOutput(output, state) + \" = \".concat(worldInput.associatedVariableName, \";\\r\\n\");\n        state.compilationString += \"#endif\\r\\n\";\n        return this;\n    };\n    return BonesBlock;\n}(NodeMaterialBlock));\nexport { BonesBlock };\nRegisterClass(\"BABYLON.BonesBlock\", BonesBlock);\n//# sourceMappingURL=bonesBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialSystemValues } from \"../../Enums/nodeMaterialSystemValues.js\";\nimport { InputBlock } from \"../Input/inputBlock.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\n/**\n * Block used to add support for instances\n * @see https://doc.babylonjs.com/how_to/how_to_use_instances\n */\nvar InstancesBlock = /** @class */ (function (_super) {\n    __extends(InstancesBlock, _super);\n    /**\n     * Creates a new InstancesBlock\n     * @param name defines the block name\n     */\n    function InstancesBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Vertex) || this;\n        _this.registerInput(\"world0\", NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this.registerInput(\"world1\", NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this.registerInput(\"world2\", NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this.registerInput(\"world3\", NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this.registerInput(\"world\", NodeMaterialBlockConnectionPointTypes.Matrix, true);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Matrix);\n        _this.registerOutput(\"instanceID\", NodeMaterialBlockConnectionPointTypes.Float);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    InstancesBlock.prototype.getClassName = function () {\n        return \"InstancesBlock\";\n    };\n    Object.defineProperty(InstancesBlock.prototype, \"world0\", {\n        /**\n         * Gets the first world row input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InstancesBlock.prototype, \"world1\", {\n        /**\n         * Gets the second world row input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InstancesBlock.prototype, \"world2\", {\n        /**\n         * Gets the third world row input component\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InstancesBlock.prototype, \"world3\", {\n        /**\n         * Gets the forth world row input component\n         */\n        get: function () {\n            return this._inputs[3];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InstancesBlock.prototype, \"world\", {\n        /**\n         * Gets the world input component\n         */\n        get: function () {\n            return this._inputs[4];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InstancesBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InstancesBlock.prototype, \"instanceID\", {\n        /**\n         * Gets the instanceID component\n         */\n        get: function () {\n            return this._outputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    InstancesBlock.prototype.autoConfigure = function (material) {\n        if (!this.world0.connectedPoint) {\n            var world0Input = material.getInputBlockByPredicate(function (b) { return b.isAttribute && b.name === \"world0\"; });\n            if (!world0Input) {\n                world0Input = new InputBlock(\"world0\");\n                world0Input.setAsAttribute(\"world0\");\n            }\n            world0Input.output.connectTo(this.world0);\n        }\n        if (!this.world1.connectedPoint) {\n            var world1Input = material.getInputBlockByPredicate(function (b) { return b.isAttribute && b.name === \"world1\"; });\n            if (!world1Input) {\n                world1Input = new InputBlock(\"world1\");\n                world1Input.setAsAttribute(\"world1\");\n            }\n            world1Input.output.connectTo(this.world1);\n        }\n        if (!this.world2.connectedPoint) {\n            var world2Input = material.getInputBlockByPredicate(function (b) { return b.isAttribute && b.name === \"world2\"; });\n            if (!world2Input) {\n                world2Input = new InputBlock(\"world2\");\n                world2Input.setAsAttribute(\"world2\");\n            }\n            world2Input.output.connectTo(this.world2);\n        }\n        if (!this.world3.connectedPoint) {\n            var world3Input = material.getInputBlockByPredicate(function (b) { return b.isAttribute && b.name === \"world3\"; });\n            if (!world3Input) {\n                world3Input = new InputBlock(\"world3\");\n                world3Input.setAsAttribute(\"world3\");\n            }\n            world3Input.output.connectTo(this.world3);\n        }\n        if (!this.world.connectedPoint) {\n            var worldInput = material.getInputBlockByPredicate(function (b) { return b.isAttribute && b.name === \"world\"; });\n            if (!worldInput) {\n                worldInput = new InputBlock(\"world\");\n                worldInput.setAsSystemValue(NodeMaterialSystemValues.World);\n            }\n            worldInput.output.connectTo(this.world);\n        }\n        this.world.define = \"!INSTANCES || THIN_INSTANCES\";\n    };\n    InstancesBlock.prototype.prepareDefines = function (mesh, nodeMaterial, defines, useInstances, subMesh) {\n        if (useInstances === void 0) { useInstances = false; }\n        var changed = false;\n        if (defines[\"INSTANCES\"] !== useInstances) {\n            defines.setValue(\"INSTANCES\", useInstances);\n            changed = true;\n        }\n        if (subMesh && defines[\"THIN_INSTANCES\"] !== !!(subMesh === null || subMesh === void 0 ? void 0 : subMesh.getRenderingMesh().hasThinInstances)) {\n            defines.setValue(\"THIN_INSTANCES\", !!(subMesh === null || subMesh === void 0 ? void 0 : subMesh.getRenderingMesh().hasThinInstances));\n            changed = true;\n        }\n        if (changed) {\n            defines.markAsUnprocessed();\n        }\n    };\n    InstancesBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var engine = state.sharedData.scene.getEngine();\n        // Register for defines\n        state.sharedData.blocksWithDefines.push(this);\n        // Emit code\n        var output = this._outputs[0];\n        var instanceID = this._outputs[1];\n        var world0 = this.world0;\n        var world1 = this.world1;\n        var world2 = this.world2;\n        var world3 = this.world3;\n        state.compilationString += \"#ifdef INSTANCES\\r\\n\";\n        state.compilationString +=\n            this._declareOutput(output, state) +\n                \" = mat4(\".concat(world0.associatedVariableName, \", \").concat(world1.associatedVariableName, \", \").concat(world2.associatedVariableName, \", \").concat(world3.associatedVariableName, \");\\r\\n\");\n        state.compilationString += \"#ifdef THIN_INSTANCES\\r\\n\";\n        state.compilationString += \"\".concat(output.associatedVariableName, \" = \").concat(this.world.associatedVariableName, \" * \").concat(output.associatedVariableName, \";\\r\\n\");\n        state.compilationString += \"#endif\\r\\n\";\n        if (engine._caps.canUseGLInstanceID) {\n            state.compilationString += this._declareOutput(instanceID, state) + \" = float(gl_InstanceID);\\r\\n\";\n        }\n        else {\n            state.compilationString += this._declareOutput(instanceID, state) + \" = 0.0;\\r\\n\";\n        }\n        state.compilationString += \"#else\\r\\n\";\n        state.compilationString += this._declareOutput(output, state) + \" = \".concat(this.world.associatedVariableName, \";\\r\\n\");\n        state.compilationString += this._declareOutput(instanceID, state) + \" = 0.0;\\r\\n\";\n        state.compilationString += \"#endif\\r\\n\";\n        return this;\n    };\n    return InstancesBlock;\n}(NodeMaterialBlock));\nexport { InstancesBlock };\nRegisterClass(\"BABYLON.InstancesBlock\", InstancesBlock);\n//# sourceMappingURL=instancesBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets.js\";\nimport { MaterialHelper } from \"../../../materialHelper.js\";\nimport { VertexBuffer } from \"../../../../Buffers/buffer.js\";\nimport { InputBlock } from \"../Input/inputBlock.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\nimport \"../../../../Shaders/ShadersInclude/morphTargetsVertexDeclaration.js\";\nimport \"../../../../Shaders/ShadersInclude/morphTargetsVertexGlobalDeclaration.js\";\n/**\n * Block used to add morph targets support to vertex shader\n */\nvar MorphTargetsBlock = /** @class */ (function (_super) {\n    __extends(MorphTargetsBlock, _super);\n    /**\n     * Create a new MorphTargetsBlock\n     * @param name defines the block name\n     */\n    function MorphTargetsBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Vertex) || this;\n        _this.registerInput(\"position\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this.registerInput(\"normal\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this.registerInput(\"tangent\", NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this.tangent.acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this.registerInput(\"uv\", NodeMaterialBlockConnectionPointTypes.Vector2);\n        _this.registerOutput(\"positionOutput\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this.registerOutput(\"normalOutput\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this.registerOutput(\"tangentOutput\", NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this.registerOutput(\"uvOutput\", NodeMaterialBlockConnectionPointTypes.Vector2);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    MorphTargetsBlock.prototype.getClassName = function () {\n        return \"MorphTargetsBlock\";\n    };\n    Object.defineProperty(MorphTargetsBlock.prototype, \"position\", {\n        /**\n         * Gets the position input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MorphTargetsBlock.prototype, \"normal\", {\n        /**\n         * Gets the normal input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MorphTargetsBlock.prototype, \"tangent\", {\n        /**\n         * Gets the tangent input component\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MorphTargetsBlock.prototype, \"uv\", {\n        /**\n         * Gets the tangent input component\n         */\n        get: function () {\n            return this._inputs[3];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MorphTargetsBlock.prototype, \"positionOutput\", {\n        /**\n         * Gets the position output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MorphTargetsBlock.prototype, \"normalOutput\", {\n        /**\n         * Gets the normal output component\n         */\n        get: function () {\n            return this._outputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MorphTargetsBlock.prototype, \"tangentOutput\", {\n        /**\n         * Gets the tangent output component\n         */\n        get: function () {\n            return this._outputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MorphTargetsBlock.prototype, \"uvOutput\", {\n        /**\n         * Gets the tangent output component\n         */\n        get: function () {\n            return this._outputs[3];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MorphTargetsBlock.prototype.initialize = function (state) {\n        state._excludeVariableName(\"morphTargetInfluences\");\n    };\n    MorphTargetsBlock.prototype.autoConfigure = function (material) {\n        if (!this.position.isConnected) {\n            var positionInput = material.getInputBlockByPredicate(function (b) { return b.isAttribute && b.name === \"position\"; });\n            if (!positionInput) {\n                positionInput = new InputBlock(\"position\");\n                positionInput.setAsAttribute();\n            }\n            positionInput.output.connectTo(this.position);\n        }\n        if (!this.normal.isConnected) {\n            var normalInput = material.getInputBlockByPredicate(function (b) { return b.isAttribute && b.name === \"normal\"; });\n            if (!normalInput) {\n                normalInput = new InputBlock(\"normal\");\n                normalInput.setAsAttribute(\"normal\");\n            }\n            normalInput.output.connectTo(this.normal);\n        }\n        if (!this.tangent.isConnected) {\n            var tangentInput = material.getInputBlockByPredicate(function (b) { return b.isAttribute && b.name === \"tangent\"; });\n            if (!tangentInput) {\n                tangentInput = new InputBlock(\"tangent\");\n                tangentInput.setAsAttribute(\"tangent\");\n            }\n            tangentInput.output.connectTo(this.tangent);\n        }\n        if (!this.uv.isConnected) {\n            var uvInput = material.getInputBlockByPredicate(function (b) { return b.isAttribute && b.name === \"uv\"; });\n            if (!uvInput) {\n                uvInput = new InputBlock(\"uv\");\n                uvInput.setAsAttribute(\"uv\");\n            }\n            uvInput.output.connectTo(this.uv);\n        }\n    };\n    MorphTargetsBlock.prototype.prepareDefines = function (mesh, nodeMaterial, defines) {\n        if (mesh.morphTargetManager) {\n            var morphTargetManager = mesh.morphTargetManager;\n            if ((morphTargetManager === null || morphTargetManager === void 0 ? void 0 : morphTargetManager.isUsingTextureForTargets) && morphTargetManager.numInfluencers !== defines[\"NUM_MORPH_INFLUENCERS\"]) {\n                defines.markAsAttributesDirty();\n            }\n        }\n        if (!defines._areAttributesDirty) {\n            return;\n        }\n        MaterialHelper.PrepareDefinesForMorphTargets(mesh, defines);\n    };\n    MorphTargetsBlock.prototype.bind = function (effect, nodeMaterial, mesh) {\n        if (mesh && mesh.morphTargetManager && mesh.morphTargetManager.numInfluencers > 0) {\n            MaterialHelper.BindMorphTargetParameters(mesh, effect);\n            if (mesh.morphTargetManager.isUsingTextureForTargets) {\n                mesh.morphTargetManager._bind(effect);\n            }\n        }\n    };\n    MorphTargetsBlock.prototype.replaceRepeatableContent = function (vertexShaderState, fragmentShaderState, mesh, defines) {\n        var position = this.position;\n        var normal = this.normal;\n        var tangent = this.tangent;\n        var uv = this.uv;\n        var positionOutput = this.positionOutput;\n        var normalOutput = this.normalOutput;\n        var tangentOutput = this.tangentOutput;\n        var uvOutput = this.uvOutput;\n        var state = vertexShaderState;\n        var repeatCount = defines.NUM_MORPH_INFLUENCERS;\n        var manager = mesh.morphTargetManager;\n        var hasNormals = manager && manager.supportsNormals && defines[\"NORMAL\"];\n        var hasTangents = manager && manager.supportsTangents && defines[\"TANGENT\"];\n        var hasUVs = manager && manager.supportsUVs && defines[\"UV1\"];\n        var injectionCode = \"\";\n        if ((manager === null || manager === void 0 ? void 0 : manager.isUsingTextureForTargets) && repeatCount > 0) {\n            injectionCode += \"float vertexID;\\r\\n\";\n        }\n        for (var index = 0; index < repeatCount; index++) {\n            injectionCode += \"#ifdef MORPHTARGETS\\r\\n\";\n            if (manager === null || manager === void 0 ? void 0 : manager.isUsingTextureForTargets) {\n                injectionCode += \"vertexID = float(gl_VertexID) * morphTargetTextureInfo.x;\\r\\n\";\n                injectionCode += \"\".concat(positionOutput.associatedVariableName, \" += (readVector3FromRawSampler(\").concat(index, \", vertexID) - \").concat(position.associatedVariableName, \") * morphTargetInfluences[\").concat(index, \"];\\r\\n\");\n                injectionCode += \"vertexID += 1.0;\\r\\n\";\n            }\n            else {\n                injectionCode += \"\".concat(positionOutput.associatedVariableName, \" += (position\").concat(index, \" - \").concat(position.associatedVariableName, \") * morphTargetInfluences[\").concat(index, \"];\\r\\n\");\n            }\n            if (hasNormals) {\n                injectionCode += \"#ifdef MORPHTARGETS_NORMAL\\r\\n\";\n                if (manager === null || manager === void 0 ? void 0 : manager.isUsingTextureForTargets) {\n                    injectionCode += \"\".concat(normalOutput.associatedVariableName, \" += (readVector3FromRawSampler(\").concat(index, \", vertexID) - \").concat(normal.associatedVariableName, \") * morphTargetInfluences[\").concat(index, \"];\\r\\n\");\n                    injectionCode += \"vertexID += 1.0;\\r\\n\";\n                }\n                else {\n                    injectionCode += \"\".concat(normalOutput.associatedVariableName, \" += (normal\").concat(index, \" - \").concat(normal.associatedVariableName, \") * morphTargetInfluences[\").concat(index, \"];\\r\\n\");\n                }\n                injectionCode += \"#endif\\r\\n\";\n            }\n            if (hasUVs) {\n                injectionCode += \"#ifdef MORPHTARGETS_UV\\r\\n\";\n                if (manager === null || manager === void 0 ? void 0 : manager.isUsingTextureForTargets) {\n                    injectionCode += \"\".concat(uvOutput.associatedVariableName, \" += (readVector3FromRawSampler(\").concat(index, \", vertexID).xy - \").concat(uv.associatedVariableName, \") * morphTargetInfluences[\").concat(index, \"];\\r\\n\");\n                    injectionCode += \"vertexID += 1.0;\\r\\n\";\n                }\n                else {\n                    injectionCode += \"\".concat(uvOutput.associatedVariableName, \".xy += (uv_\").concat(index, \" - \").concat(uv.associatedVariableName, \".xy) * morphTargetInfluences[\").concat(index, \"];\\r\\n\");\n                }\n                injectionCode += \"#endif\\r\\n\";\n            }\n            if (hasTangents) {\n                injectionCode += \"#ifdef MORPHTARGETS_TANGENT\\r\\n\";\n                if (manager === null || manager === void 0 ? void 0 : manager.isUsingTextureForTargets) {\n                    injectionCode += \"\".concat(tangentOutput.associatedVariableName, \".xyz += (readVector3FromRawSampler(\").concat(index, \", vertexID) - \").concat(tangent.associatedVariableName, \".xyz) * morphTargetInfluences[\").concat(index, \"];\\r\\n\");\n                }\n                else {\n                    injectionCode += \"\".concat(tangentOutput.associatedVariableName, \".xyz += (tangent\").concat(index, \" - \").concat(tangent.associatedVariableName, \".xyz) * morphTargetInfluences[\").concat(index, \"];\\r\\n\");\n                }\n                if (tangent.type === NodeMaterialBlockConnectionPointTypes.Vector4) {\n                    injectionCode += \"\".concat(tangentOutput.associatedVariableName, \".w = \").concat(tangent.associatedVariableName, \".w;\\r\\n\");\n                }\n                else {\n                    injectionCode += \"\".concat(tangentOutput.associatedVariableName, \".w = 1.;\\r\\n\");\n                }\n                injectionCode += \"#endif\\r\\n\";\n            }\n            injectionCode += \"#endif\\r\\n\";\n        }\n        state.compilationString = state.compilationString.replace(this._repeatableContentAnchor, injectionCode);\n        if (repeatCount > 0) {\n            for (var index = 0; index < repeatCount; index++) {\n                state.attributes.push(VertexBuffer.PositionKind + index);\n                if (hasNormals) {\n                    state.attributes.push(VertexBuffer.NormalKind + index);\n                }\n                if (hasTangents) {\n                    state.attributes.push(VertexBuffer.TangentKind + index);\n                }\n                if (hasUVs) {\n                    state.attributes.push(VertexBuffer.UVKind + \"_\" + index);\n                }\n            }\n        }\n    };\n    MorphTargetsBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        // Register for defines\n        state.sharedData.blocksWithDefines.push(this);\n        // Register for binding\n        state.sharedData.bindableBlocks.push(this);\n        // Register for repeatable content generation\n        state.sharedData.repeatableContentBlocks.push(this);\n        // Emit code\n        var position = this.position;\n        var normal = this.normal;\n        var tangent = this.tangent;\n        var uv = this.uv;\n        var positionOutput = this.positionOutput;\n        var normalOutput = this.normalOutput;\n        var tangentOutput = this.tangentOutput;\n        var uvOutput = this.uvOutput;\n        var comments = \"//\".concat(this.name);\n        state.uniforms.push(\"morphTargetInfluences\");\n        state.uniforms.push(\"morphTargetTextureInfo\");\n        state.uniforms.push(\"morphTargetTextureIndices\");\n        state.samplers.push(\"morphTargets\");\n        state._emitFunctionFromInclude(\"morphTargetsVertexGlobalDeclaration\", comments);\n        state._emitFunctionFromInclude(\"morphTargetsVertexDeclaration\", comments, {\n            repeatKey: \"maxSimultaneousMorphTargets\",\n        });\n        state.compilationString += \"\".concat(this._declareOutput(positionOutput, state), \" = \").concat(position.associatedVariableName, \";\\r\\n\");\n        state.compilationString += \"#ifdef NORMAL\\r\\n\";\n        state.compilationString += \"\".concat(this._declareOutput(normalOutput, state), \" = \").concat(normal.associatedVariableName, \";\\r\\n\");\n        state.compilationString += \"#else\\r\\n\";\n        state.compilationString += \"\".concat(this._declareOutput(normalOutput, state), \" = vec3(0., 0., 0.);\\r\\n\");\n        state.compilationString += \"#endif\\r\\n\";\n        state.compilationString += \"#ifdef TANGENT\\r\\n\";\n        state.compilationString += \"\".concat(this._declareOutput(tangentOutput, state), \" = \").concat(tangent.associatedVariableName, \";\\r\\n\");\n        state.compilationString += \"#else\\r\\n\";\n        state.compilationString += \"\".concat(this._declareOutput(tangentOutput, state), \" = vec4(0., 0., 0., 0.);\\r\\n\");\n        state.compilationString += \"#endif\\r\\n\";\n        state.compilationString += \"#ifdef UV1\\r\\n\";\n        state.compilationString += \"\".concat(this._declareOutput(uvOutput, state), \" = \").concat(uv.associatedVariableName, \";\\r\\n\");\n        state.compilationString += \"#else\\r\\n\";\n        state.compilationString += \"\".concat(this._declareOutput(uvOutput, state), \" = vec2(0., 0.);\\r\\n\");\n        state.compilationString += \"#endif\\r\\n\";\n        // Repeatable content\n        this._repeatableContentAnchor = state._repeatableContentAnchor;\n        state.compilationString += this._repeatableContentAnchor;\n        return this;\n    };\n    return MorphTargetsBlock;\n}(NodeMaterialBlock));\nexport { MorphTargetsBlock };\nRegisterClass(\"BABYLON.MorphTargetsBlock\", MorphTargetsBlock);\n//# sourceMappingURL=morphTargetsBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../../Misc/typeStore.js\";\nimport { PointLight } from \"../../../../Lights/pointLight.js\";\n/**\n * Block used to get data information from a light\n */\nvar LightInformationBlock = /** @class */ (function (_super) {\n    __extends(LightInformationBlock, _super);\n    /**\n     * Creates a new LightInformationBlock\n     * @param name defines the block name\n     */\n    function LightInformationBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Vertex) || this;\n        _this.registerInput(\"worldPosition\", NodeMaterialBlockConnectionPointTypes.Vector4, false, NodeMaterialBlockTargets.Vertex);\n        _this.registerOutput(\"direction\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this.registerOutput(\"color\", NodeMaterialBlockConnectionPointTypes.Color3);\n        _this.registerOutput(\"intensity\", NodeMaterialBlockConnectionPointTypes.Float);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    LightInformationBlock.prototype.getClassName = function () {\n        return \"LightInformationBlock\";\n    };\n    Object.defineProperty(LightInformationBlock.prototype, \"worldPosition\", {\n        /**\n         * Gets the world position input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LightInformationBlock.prototype, \"direction\", {\n        /**\n         * Gets the direction output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LightInformationBlock.prototype, \"color\", {\n        /**\n         * Gets the direction output component\n         */\n        get: function () {\n            return this._outputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LightInformationBlock.prototype, \"intensity\", {\n        /**\n         * Gets the direction output component\n         */\n        get: function () {\n            return this._outputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LightInformationBlock.prototype.bind = function (effect, nodeMaterial, mesh) {\n        if (!mesh) {\n            return;\n        }\n        if (this.light && this.light.isDisposed) {\n            this.light = null;\n        }\n        var light = this.light;\n        var scene = nodeMaterial.getScene();\n        if (!light && scene.lights.length) {\n            light = this.light = scene.lights[0];\n            this._forcePrepareDefines = true;\n        }\n        if (!light || !light.isEnabled) {\n            effect.setFloat3(this._lightDataUniformName, 0, 0, 0);\n            effect.setFloat4(this._lightColorUniformName, 0, 0, 0, 0);\n            return;\n        }\n        light.transferToNodeMaterialEffect(effect, this._lightDataUniformName);\n        effect.setColor4(this._lightColorUniformName, light.diffuse, light.intensity);\n    };\n    LightInformationBlock.prototype.prepareDefines = function (mesh, nodeMaterial, defines) {\n        if (!defines._areLightsDirty && !this._forcePrepareDefines) {\n            return;\n        }\n        this._forcePrepareDefines = false;\n        var light = this.light;\n        defines.setValue(this._lightTypeDefineName, light && light instanceof PointLight ? true : false, true);\n    };\n    LightInformationBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        state.sharedData.bindableBlocks.push(this);\n        state.sharedData.blocksWithDefines.push(this);\n        var direction = this.direction;\n        var color = this.color;\n        var intensity = this.intensity;\n        this._lightDataUniformName = state._getFreeVariableName(\"lightData\");\n        this._lightColorUniformName = state._getFreeVariableName(\"lightColor\");\n        this._lightTypeDefineName = state._getFreeDefineName(\"LIGHTPOINTTYPE\");\n        state._emitUniformFromString(this._lightDataUniformName, \"vec3\");\n        state._emitUniformFromString(this._lightColorUniformName, \"vec4\");\n        state.compilationString += \"#ifdef \".concat(this._lightTypeDefineName, \"\\r\\n\");\n        state.compilationString += this._declareOutput(direction, state) + \" = normalize(\".concat(this.worldPosition.associatedVariableName, \".xyz - \").concat(this._lightDataUniformName, \");\\r\\n\");\n        state.compilationString += \"#else\\r\\n\";\n        state.compilationString += this._declareOutput(direction, state) + \" = \".concat(this._lightDataUniformName, \";\\r\\n\");\n        state.compilationString += \"#endif\\r\\n\";\n        state.compilationString += this._declareOutput(color, state) + \" = \".concat(this._lightColorUniformName, \".rgb;\\r\\n\");\n        state.compilationString += this._declareOutput(intensity, state) + \" = \".concat(this._lightColorUniformName, \".a;\\r\\n\");\n        return this;\n    };\n    LightInformationBlock.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        if (this.light) {\n            serializationObject.lightId = this.light.id;\n        }\n        return serializationObject;\n    };\n    LightInformationBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n        _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n        if (serializationObject.lightId) {\n            this.light = scene.getLightById(serializationObject.lightId);\n        }\n    };\n    return LightInformationBlock;\n}(NodeMaterialBlock));\nexport { LightInformationBlock };\nRegisterClass(\"BABYLON.LightInformationBlock\", LightInformationBlock);\n//# sourceMappingURL=lightInformationBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to add 2 vectors\n */\nvar AddBlock = /** @class */ (function (_super) {\n    __extends(AddBlock, _super);\n    /**\n     * Creates a new AddBlock\n     * @param name defines the block name\n     */\n    function AddBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"left\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"right\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        _this._linkConnectionTypes(0, 1);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    AddBlock.prototype.getClassName = function () {\n        return \"AddBlock\";\n    };\n    Object.defineProperty(AddBlock.prototype, \"left\", {\n        /**\n         * Gets the left operand input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AddBlock.prototype, \"right\", {\n        /**\n         * Gets the right operand input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AddBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    AddBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString += this._declareOutput(output, state) + \" = \".concat(this.left.associatedVariableName, \" + \").concat(this.right.associatedVariableName, \";\\r\\n\");\n        return this;\n    };\n    return AddBlock;\n}(NodeMaterialBlock));\nexport { AddBlock };\nRegisterClass(\"BABYLON.AddBlock\", AddBlock);\n//# sourceMappingURL=addBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to scale a vector by a float\n */\nvar ScaleBlock = /** @class */ (function (_super) {\n    __extends(ScaleBlock, _super);\n    /**\n     * Creates a new ScaleBlock\n     * @param name defines the block name\n     */\n    function ScaleBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"factor\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    ScaleBlock.prototype.getClassName = function () {\n        return \"ScaleBlock\";\n    };\n    Object.defineProperty(ScaleBlock.prototype, \"input\", {\n        /**\n         * Gets the input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScaleBlock.prototype, \"factor\", {\n        /**\n         * Gets the factor input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScaleBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ScaleBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString += this._declareOutput(output, state) + \" = \".concat(this.input.associatedVariableName, \" * \").concat(this.factor.associatedVariableName, \";\\r\\n\");\n        return this;\n    };\n    return ScaleBlock;\n}(NodeMaterialBlock));\nexport { ScaleBlock };\nRegisterClass(\"BABYLON.ScaleBlock\", ScaleBlock);\n//# sourceMappingURL=scaleBlock.js.map","import { __decorate, __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\nimport { editableInPropertyPage, PropertyTypeForEdition } from \"../nodeMaterialDecorator.js\";\n/**\n * Block used to clamp a float\n */\nvar ClampBlock = /** @class */ (function (_super) {\n    __extends(ClampBlock, _super);\n    /**\n     * Creates a new ClampBlock\n     * @param name defines the block name\n     */\n    function ClampBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        /** Gets or sets the minimum range */\n        _this.minimum = 0.0;\n        /** Gets or sets the maximum range */\n        _this.maximum = 1.0;\n        _this.registerInput(\"value\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    ClampBlock.prototype.getClassName = function () {\n        return \"ClampBlock\";\n    };\n    Object.defineProperty(ClampBlock.prototype, \"value\", {\n        /**\n         * Gets the value input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ClampBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ClampBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString +=\n            this._declareOutput(output, state) + \" = clamp(\".concat(this.value.associatedVariableName, \", \").concat(this._writeFloat(this.minimum), \", \").concat(this._writeFloat(this.maximum), \");\\r\\n\");\n        return this;\n    };\n    ClampBlock.prototype._dumpPropertiesCode = function () {\n        var codeString = _super.prototype._dumpPropertiesCode.call(this) + \"\".concat(this._codeVariableName, \".minimum = \").concat(this.minimum, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".maximum = \").concat(this.maximum, \";\\r\\n\");\n        return codeString;\n    };\n    ClampBlock.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.minimum = this.minimum;\n        serializationObject.maximum = this.maximum;\n        return serializationObject;\n    };\n    ClampBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n        _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n        this.minimum = serializationObject.minimum;\n        this.maximum = serializationObject.maximum;\n    };\n    __decorate([\n        editableInPropertyPage(\"Minimum\", PropertyTypeForEdition.Float)\n    ], ClampBlock.prototype, \"minimum\", void 0);\n    __decorate([\n        editableInPropertyPage(\"Maximum\", PropertyTypeForEdition.Float)\n    ], ClampBlock.prototype, \"maximum\", void 0);\n    return ClampBlock;\n}(NodeMaterialBlock));\nexport { ClampBlock };\nRegisterClass(\"BABYLON.ClampBlock\", ClampBlock);\n//# sourceMappingURL=clampBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to apply a cross product between 2 vectors\n */\nvar CrossBlock = /** @class */ (function (_super) {\n    __extends(CrossBlock, _super);\n    /**\n     * Creates a new CrossBlock\n     * @param name defines the block name\n     */\n    function CrossBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"left\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"right\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this._linkConnectionTypes(0, 1);\n        _this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Float);\n        _this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\n        _this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector2);\n        _this._inputs[1].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Float);\n        _this._inputs[1].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\n        _this._inputs[1].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector2);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    CrossBlock.prototype.getClassName = function () {\n        return \"CrossBlock\";\n    };\n    Object.defineProperty(CrossBlock.prototype, \"left\", {\n        /**\n         * Gets the left operand input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CrossBlock.prototype, \"right\", {\n        /**\n         * Gets the right operand input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CrossBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CrossBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString += this._declareOutput(output, state) + \" = cross(\".concat(this.left.associatedVariableName, \".xyz, \").concat(this.right.associatedVariableName, \".xyz);\\r\\n\");\n        return this;\n    };\n    return CrossBlock;\n}(NodeMaterialBlock));\nexport { CrossBlock };\nRegisterClass(\"BABYLON.CrossBlock\", CrossBlock);\n//# sourceMappingURL=crossBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Custom block created from user-defined json\n */\nvar CustomBlock = /** @class */ (function (_super) {\n    __extends(CustomBlock, _super);\n    /**\n     * Creates a new CustomBlock\n     * @param name defines the block name\n     */\n    function CustomBlock(name) {\n        return _super.call(this, name) || this;\n    }\n    Object.defineProperty(CustomBlock.prototype, \"options\", {\n        /**\n         * Gets or sets the options for this custom block\n         */\n        get: function () {\n            return this._options;\n        },\n        set: function (options) {\n            this._deserializeOptions(options);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    CustomBlock.prototype.getClassName = function () {\n        return \"CustomBlock\";\n    };\n    CustomBlock.prototype._buildBlock = function (state) {\n        var _this = this;\n        _super.prototype._buildBlock.call(this, state);\n        var code = this._code;\n        var functionName = this._options.functionName;\n        // Replace the TYPE_XXX placeholders (if any)\n        this._inputs.forEach(function (input) {\n            var rexp = new RegExp(\"\\\\{TYPE_\" + input.name + \"\\\\}\", \"gm\");\n            var type = state._getGLType(input.type);\n            code = code.replace(rexp, type);\n            functionName = functionName.replace(rexp, type);\n        });\n        this._outputs.forEach(function (output) {\n            var rexp = new RegExp(\"\\\\{TYPE_\" + output.name + \"\\\\}\", \"gm\");\n            var type = state._getGLType(output.type);\n            code = code.replace(rexp, type);\n            functionName = functionName.replace(rexp, type);\n        });\n        state._emitFunction(functionName, code, \"\");\n        // Declare the output variables\n        this._outputs.forEach(function (output) {\n            state.compilationString += _this._declareOutput(output, state) + \";\\r\\n\";\n        });\n        // Generate the function call\n        state.compilationString += functionName + \"(\";\n        var hasInput = false;\n        this._inputs.forEach(function (input, index) {\n            if (index > 0) {\n                state.compilationString += \", \";\n            }\n            state.compilationString += input.associatedVariableName;\n            hasInput = true;\n        });\n        this._outputs.forEach(function (output, index) {\n            if (index > 0 || hasInput) {\n                state.compilationString += \", \";\n            }\n            state.compilationString += output.associatedVariableName;\n        });\n        state.compilationString += \");\\r\\n\";\n        return this;\n    };\n    CustomBlock.prototype._dumpPropertiesCode = function () {\n        var codeString = _super.prototype._dumpPropertiesCode.call(this);\n        codeString += \"\".concat(this._codeVariableName, \".options = \").concat(JSON.stringify(this._options), \";\\r\\n\");\n        return codeString;\n    };\n    CustomBlock.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.options = this._options;\n        return serializationObject;\n    };\n    CustomBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n        this._deserializeOptions(serializationObject.options);\n        _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n    };\n    CustomBlock.prototype._deserializeOptions = function (options) {\n        var _this = this;\n        var _a, _b, _c;\n        this._options = options;\n        this._code = options.code.join(\"\\r\\n\") + \"\\r\\n\";\n        this.name = this.name || options.name;\n        this.target = NodeMaterialBlockTargets[options.target];\n        (_a = options.inParameters) === null || _a === void 0 ? void 0 : _a.forEach(function (input, index) {\n            var type = NodeMaterialBlockConnectionPointTypes[input.type];\n            _this.registerInput(input.name, type);\n            Object.defineProperty(_this, input.name, {\n                get: function () {\n                    return this._inputs[index];\n                },\n                enumerable: true,\n                configurable: true,\n            });\n        });\n        (_b = options.outParameters) === null || _b === void 0 ? void 0 : _b.forEach(function (output, index) {\n            _this.registerOutput(output.name, NodeMaterialBlockConnectionPointTypes[output.type]);\n            Object.defineProperty(_this, output.name, {\n                get: function () {\n                    return this._outputs[index];\n                },\n                enumerable: true,\n                configurable: true,\n            });\n            if (output.type === \"BasedOnInput\") {\n                _this._outputs[index]._typeConnectionSource = _this._findInputByName(output.typeFromInput)[0];\n            }\n        });\n        (_c = options.inLinkedConnectionTypes) === null || _c === void 0 ? void 0 : _c.forEach(function (connection) {\n            _this._linkConnectionTypes(_this._findInputByName(connection.input1)[1], _this._findInputByName(connection.input2)[1]);\n        });\n    };\n    CustomBlock.prototype._findInputByName = function (name) {\n        if (!name) {\n            return null;\n        }\n        for (var i = 0; i < this._inputs.length; i++) {\n            if (this._inputs[i].name === name) {\n                return [this._inputs[i], i];\n            }\n        }\n        return null;\n    };\n    return CustomBlock;\n}(NodeMaterialBlock));\nexport { CustomBlock };\nRegisterClass(\"BABYLON.CustomBlock\", CustomBlock);\n//# sourceMappingURL=customBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to apply a dot product between 2 vectors\n */\nvar DotBlock = /** @class */ (function (_super) {\n    __extends(DotBlock, _super);\n    /**\n     * Creates a new DotBlock\n     * @param name defines the block name\n     */\n    function DotBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"left\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"right\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this._linkConnectionTypes(0, 1);\n        _this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Float);\n        _this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\n        _this._inputs[1].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Float);\n        _this._inputs[1].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    DotBlock.prototype.getClassName = function () {\n        return \"DotBlock\";\n    };\n    Object.defineProperty(DotBlock.prototype, \"left\", {\n        /**\n         * Gets the left operand input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DotBlock.prototype, \"right\", {\n        /**\n         * Gets the right operand input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DotBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DotBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString += this._declareOutput(output, state) + \" = dot(\".concat(this.left.associatedVariableName, \", \").concat(this.right.associatedVariableName, \");\\r\\n\");\n        return this;\n    };\n    return DotBlock;\n}(NodeMaterialBlock));\nexport { DotBlock };\nRegisterClass(\"BABYLON.DotBlock\", DotBlock);\n//# sourceMappingURL=dotBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to normalize a vector\n */\nvar NormalizeBlock = /** @class */ (function (_super) {\n    __extends(NormalizeBlock, _super);\n    /**\n     * Creates a new NormalizeBlock\n     * @param name defines the block name\n     */\n    function NormalizeBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        _this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Float);\n        _this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    NormalizeBlock.prototype.getClassName = function () {\n        return \"NormalizeBlock\";\n    };\n    Object.defineProperty(NormalizeBlock.prototype, \"input\", {\n        /**\n         * Gets the input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NormalizeBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    NormalizeBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        var input = this._inputs[0];\n        state.compilationString += this._declareOutput(output, state) + \" = normalize(\".concat(input.associatedVariableName, \");\\r\\n\");\n        return this;\n    };\n    return NormalizeBlock;\n}(NodeMaterialBlock));\nexport { NormalizeBlock };\nRegisterClass(\"BABYLON.NormalizeBlock\", NormalizeBlock);\n//# sourceMappingURL=normalizeBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to create a Color3/4 out of individual inputs (one for each component)\n */\nvar ColorMergerBlock = /** @class */ (function (_super) {\n    __extends(ColorMergerBlock, _super);\n    /**\n     * Create a new ColorMergerBlock\n     * @param name defines the block name\n     */\n    function ColorMergerBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        /**\n         * Gets or sets the swizzle for r (meaning which component to affect to the output.r)\n         */\n        _this.rSwizzle = \"r\";\n        /**\n         * Gets or sets the swizzle for g (meaning which component to affect to the output.g)\n         */\n        _this.gSwizzle = \"g\";\n        /**\n         * Gets or sets the swizzle for b (meaning which component to affect to the output.b)\n         */\n        _this.bSwizzle = \"b\";\n        /**\n         * Gets or sets the swizzle for a (meaning which component to affect to the output.a)\n         */\n        _this.aSwizzle = \"a\";\n        _this.registerInput(\"rgb \", NodeMaterialBlockConnectionPointTypes.Color3, true);\n        _this.registerInput(\"r\", NodeMaterialBlockConnectionPointTypes.Float, true);\n        _this.registerInput(\"g\", NodeMaterialBlockConnectionPointTypes.Float, true);\n        _this.registerInput(\"b\", NodeMaterialBlockConnectionPointTypes.Float, true);\n        _this.registerInput(\"a\", NodeMaterialBlockConnectionPointTypes.Float, true);\n        _this.registerOutput(\"rgba\", NodeMaterialBlockConnectionPointTypes.Color4);\n        _this.registerOutput(\"rgb\", NodeMaterialBlockConnectionPointTypes.Color3);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    ColorMergerBlock.prototype.getClassName = function () {\n        return \"ColorMergerBlock\";\n    };\n    Object.defineProperty(ColorMergerBlock.prototype, \"rgbIn\", {\n        /**\n         * Gets the rgb component (input)\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ColorMergerBlock.prototype, \"r\", {\n        /**\n         * Gets the r component (input)\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ColorMergerBlock.prototype, \"g\", {\n        /**\n         * Gets the g component (input)\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ColorMergerBlock.prototype, \"b\", {\n        /**\n         * Gets the b component (input)\n         */\n        get: function () {\n            return this._inputs[3];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ColorMergerBlock.prototype, \"a\", {\n        /**\n         * Gets the a component (input)\n         */\n        get: function () {\n            return this._inputs[4];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ColorMergerBlock.prototype, \"rgba\", {\n        /**\n         * Gets the rgba component (output)\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ColorMergerBlock.prototype, \"rgbOut\", {\n        /**\n         * Gets the rgb component (output)\n         */\n        get: function () {\n            return this._outputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ColorMergerBlock.prototype, \"rgb\", {\n        /**\n         * Gets the rgb component (output)\n         * @deprecated Please use rgbOut instead.\n         */\n        get: function () {\n            return this.rgbOut;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ColorMergerBlock.prototype._inputRename = function (name) {\n        if (name === \"rgb \") {\n            return \"rgbIn\";\n        }\n        return name;\n    };\n    ColorMergerBlock.prototype._buildSwizzle = function (len) {\n        var swizzle = this.rSwizzle + this.gSwizzle + this.bSwizzle + this.aSwizzle;\n        return \".\" + swizzle.substr(0, len);\n    };\n    ColorMergerBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var rInput = this.r;\n        var gInput = this.g;\n        var bInput = this.b;\n        var aInput = this.a;\n        var rgbInput = this.rgbIn;\n        var color4Output = this._outputs[0];\n        var color3Output = this._outputs[1];\n        if (rgbInput.isConnected) {\n            if (color4Output.hasEndpoints) {\n                state.compilationString +=\n                    this._declareOutput(color4Output, state) +\n                        \" = vec4(\".concat(rgbInput.associatedVariableName, \", \").concat(aInput.isConnected ? this._writeVariable(aInput) : \"0.0\", \")\").concat(this._buildSwizzle(4), \";\\r\\n\");\n            }\n            if (color3Output.hasEndpoints) {\n                state.compilationString += this._declareOutput(color3Output, state) + \" = \".concat(rgbInput.associatedVariableName).concat(this._buildSwizzle(3), \";\\r\\n\");\n            }\n        }\n        else {\n            if (color4Output.hasEndpoints) {\n                state.compilationString +=\n                    this._declareOutput(color4Output, state) +\n                        \" = vec4(\".concat(rInput.isConnected ? this._writeVariable(rInput) : \"0.0\", \", \").concat(gInput.isConnected ? this._writeVariable(gInput) : \"0.0\", \", \").concat(bInput.isConnected ? this._writeVariable(bInput) : \"0.0\", \", \").concat(aInput.isConnected ? this._writeVariable(aInput) : \"0.0\", \")\").concat(this._buildSwizzle(4), \";\\r\\n\");\n            }\n            if (color3Output.hasEndpoints) {\n                state.compilationString +=\n                    this._declareOutput(color3Output, state) +\n                        \" = vec3(\".concat(rInput.isConnected ? this._writeVariable(rInput) : \"0.0\", \", \").concat(gInput.isConnected ? this._writeVariable(gInput) : \"0.0\", \", \").concat(bInput.isConnected ? this._writeVariable(bInput) : \"0.0\", \")\").concat(this._buildSwizzle(3), \";\\r\\n\");\n            }\n        }\n        return this;\n    };\n    ColorMergerBlock.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.rSwizzle = this.rSwizzle;\n        serializationObject.gSwizzle = this.gSwizzle;\n        serializationObject.bSwizzle = this.bSwizzle;\n        serializationObject.aSwizzle = this.aSwizzle;\n        return serializationObject;\n    };\n    ColorMergerBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n        var _a, _b, _c, _d;\n        _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n        this.rSwizzle = (_a = serializationObject.rSwizzle) !== null && _a !== void 0 ? _a : \"r\";\n        this.gSwizzle = (_b = serializationObject.gSwizzle) !== null && _b !== void 0 ? _b : \"g\";\n        this.bSwizzle = (_c = serializationObject.bSwizzle) !== null && _c !== void 0 ? _c : \"b\";\n        this.aSwizzle = (_d = serializationObject.aSwizzle) !== null && _d !== void 0 ? _d : \"a\";\n    };\n    ColorMergerBlock.prototype._dumpPropertiesCode = function () {\n        var codeString = _super.prototype._dumpPropertiesCode.call(this);\n        codeString += \"\".concat(this._codeVariableName, \".rSwizzle = \").concat(this.rSwizzle, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".gSwizzle = \").concat(this.gSwizzle, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".bSwizzle = \").concat(this.bSwizzle, \";\\r\\n\");\n        codeString += \"\".concat(this._codeVariableName, \".aSwizzle = \").concat(this.aSwizzle, \";\\r\\n\");\n        return codeString;\n    };\n    return ColorMergerBlock;\n}(NodeMaterialBlock));\nexport { ColorMergerBlock };\nRegisterClass(\"BABYLON.ColorMergerBlock\", ColorMergerBlock);\n//# sourceMappingURL=colorMergerBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to expand a Vector3/4 into 4 outputs (one for each component)\n */\nvar VectorSplitterBlock = /** @class */ (function (_super) {\n    __extends(VectorSplitterBlock, _super);\n    /**\n     * Create a new VectorSplitterBlock\n     * @param name defines the block name\n     */\n    function VectorSplitterBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"xyzw\", NodeMaterialBlockConnectionPointTypes.Vector4, true);\n        _this.registerInput(\"xyz \", NodeMaterialBlockConnectionPointTypes.Vector3, true);\n        _this.registerInput(\"xy \", NodeMaterialBlockConnectionPointTypes.Vector2, true);\n        _this.registerOutput(\"xyz\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this.registerOutput(\"xy\", NodeMaterialBlockConnectionPointTypes.Vector2);\n        _this.registerOutput(\"zw\", NodeMaterialBlockConnectionPointTypes.Vector2);\n        _this.registerOutput(\"x\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerOutput(\"y\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerOutput(\"z\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerOutput(\"w\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.inputsAreExclusive = true;\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    VectorSplitterBlock.prototype.getClassName = function () {\n        return \"VectorSplitterBlock\";\n    };\n    Object.defineProperty(VectorSplitterBlock.prototype, \"xyzw\", {\n        /**\n         * Gets the xyzw component (input)\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VectorSplitterBlock.prototype, \"xyzIn\", {\n        /**\n         * Gets the xyz component (input)\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VectorSplitterBlock.prototype, \"xyIn\", {\n        /**\n         * Gets the xy component (input)\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VectorSplitterBlock.prototype, \"xyzOut\", {\n        /**\n         * Gets the xyz component (output)\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VectorSplitterBlock.prototype, \"xyOut\", {\n        /**\n         * Gets the xy component (output)\n         */\n        get: function () {\n            return this._outputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VectorSplitterBlock.prototype, \"zw\", {\n        /**\n         * Gets the zw component (output)\n         */\n        get: function () {\n            return this._outputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VectorSplitterBlock.prototype, \"x\", {\n        /**\n         * Gets the x component (output)\n         */\n        get: function () {\n            return this._outputs[3];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VectorSplitterBlock.prototype, \"y\", {\n        /**\n         * Gets the y component (output)\n         */\n        get: function () {\n            return this._outputs[4];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VectorSplitterBlock.prototype, \"z\", {\n        /**\n         * Gets the z component (output)\n         */\n        get: function () {\n            return this._outputs[5];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VectorSplitterBlock.prototype, \"w\", {\n        /**\n         * Gets the w component (output)\n         */\n        get: function () {\n            return this._outputs[6];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    VectorSplitterBlock.prototype._inputRename = function (name) {\n        switch (name) {\n            case \"xy \":\n                return \"xyIn\";\n            case \"xyz \":\n                return \"xyzIn\";\n            default:\n                return name;\n        }\n    };\n    VectorSplitterBlock.prototype._outputRename = function (name) {\n        switch (name) {\n            case \"xy\":\n                return \"xyOut\";\n            case \"xyz\":\n                return \"xyzOut\";\n            default:\n                return name;\n        }\n    };\n    VectorSplitterBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var input = this.xyzw.isConnected ? this.xyzw : this.xyzIn.isConnected ? this.xyzIn : this.xyIn;\n        var xyzOutput = this._outputs[0];\n        var xyOutput = this._outputs[1];\n        var zwOutput = this._outputs[2];\n        var xOutput = this._outputs[3];\n        var yOutput = this._outputs[4];\n        var zOutput = this._outputs[5];\n        var wOutput = this._outputs[6];\n        if (xyzOutput.hasEndpoints) {\n            if (input === this.xyIn) {\n                state.compilationString += this._declareOutput(xyzOutput, state) + \" = vec3(\".concat(input.associatedVariableName, \", 0.0);\\r\\n\");\n            }\n            else {\n                state.compilationString += this._declareOutput(xyzOutput, state) + \" = \".concat(input.associatedVariableName, \".xyz;\\r\\n\");\n            }\n        }\n        if (zwOutput.hasEndpoints && this.xyzw.isConnected) {\n            state.compilationString += this._declareOutput(zwOutput, state) + \" = \".concat(this.xyzw.associatedVariableName, \".zw;\\r\\n\");\n        }\n        if (xyOutput.hasEndpoints) {\n            state.compilationString += this._declareOutput(xyOutput, state) + \" = \".concat(input.associatedVariableName, \".xy;\\r\\n\");\n        }\n        if (xOutput.hasEndpoints) {\n            state.compilationString += this._declareOutput(xOutput, state) + \" = \".concat(input.associatedVariableName, \".x;\\r\\n\");\n        }\n        if (yOutput.hasEndpoints) {\n            state.compilationString += this._declareOutput(yOutput, state) + \" = \".concat(input.associatedVariableName, \".y;\\r\\n\");\n        }\n        if (zOutput.hasEndpoints) {\n            state.compilationString += this._declareOutput(zOutput, state) + \" = \".concat(input.associatedVariableName, \".z;\\r\\n\");\n        }\n        if (wOutput.hasEndpoints) {\n            state.compilationString += this._declareOutput(wOutput, state) + \" = \".concat(input.associatedVariableName, \".w;\\r\\n\");\n        }\n        return this;\n    };\n    return VectorSplitterBlock;\n}(NodeMaterialBlock));\nexport { VectorSplitterBlock };\nRegisterClass(\"BABYLON.VectorSplitterBlock\", VectorSplitterBlock);\n//# sourceMappingURL=vectorSplitterBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to lerp between 2 values\n */\nvar LerpBlock = /** @class */ (function (_super) {\n    __extends(LerpBlock, _super);\n    /**\n     * Creates a new LerpBlock\n     * @param name defines the block name\n     */\n    function LerpBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"left\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"right\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"gradient\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        _this._linkConnectionTypes(0, 1);\n        _this._linkConnectionTypes(1, 2, true);\n        _this._inputs[2].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Float);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    LerpBlock.prototype.getClassName = function () {\n        return \"LerpBlock\";\n    };\n    Object.defineProperty(LerpBlock.prototype, \"left\", {\n        /**\n         * Gets the left operand input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LerpBlock.prototype, \"right\", {\n        /**\n         * Gets the right operand input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LerpBlock.prototype, \"gradient\", {\n        /**\n         * Gets the gradient operand input component\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LerpBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LerpBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString +=\n            this._declareOutput(output, state) + \" = mix(\".concat(this.left.associatedVariableName, \" , \").concat(this.right.associatedVariableName, \", \").concat(this.gradient.associatedVariableName, \");\\r\\n\");\n        return this;\n    };\n    return LerpBlock;\n}(NodeMaterialBlock));\nexport { LerpBlock };\nRegisterClass(\"BABYLON.LerpBlock\", LerpBlock);\n//# sourceMappingURL=lerpBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to divide 2 vectors\n */\nvar DivideBlock = /** @class */ (function (_super) {\n    __extends(DivideBlock, _super);\n    /**\n     * Creates a new DivideBlock\n     * @param name defines the block name\n     */\n    function DivideBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"left\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"right\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        _this._linkConnectionTypes(0, 1);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    DivideBlock.prototype.getClassName = function () {\n        return \"DivideBlock\";\n    };\n    Object.defineProperty(DivideBlock.prototype, \"left\", {\n        /**\n         * Gets the left operand input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DivideBlock.prototype, \"right\", {\n        /**\n         * Gets the right operand input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DivideBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DivideBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString += this._declareOutput(output, state) + \" = \".concat(this.left.associatedVariableName, \" / \").concat(this.right.associatedVariableName, \";\\r\\n\");\n        return this;\n    };\n    return DivideBlock;\n}(NodeMaterialBlock));\nexport { DivideBlock };\nRegisterClass(\"BABYLON.DivideBlock\", DivideBlock);\n//# sourceMappingURL=divideBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to subtract 2 vectors\n */\nvar SubtractBlock = /** @class */ (function (_super) {\n    __extends(SubtractBlock, _super);\n    /**\n     * Creates a new SubtractBlock\n     * @param name defines the block name\n     */\n    function SubtractBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"left\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"right\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        _this._linkConnectionTypes(0, 1);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    SubtractBlock.prototype.getClassName = function () {\n        return \"SubtractBlock\";\n    };\n    Object.defineProperty(SubtractBlock.prototype, \"left\", {\n        /**\n         * Gets the left operand input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SubtractBlock.prototype, \"right\", {\n        /**\n         * Gets the right operand input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SubtractBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SubtractBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString += this._declareOutput(output, state) + \" = \".concat(this.left.associatedVariableName, \" - \").concat(this.right.associatedVariableName, \";\\r\\n\");\n        return this;\n    };\n    return SubtractBlock;\n}(NodeMaterialBlock));\nexport { SubtractBlock };\nRegisterClass(\"BABYLON.SubtractBlock\", SubtractBlock);\n//# sourceMappingURL=subtractBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to step a value\n */\nvar StepBlock = /** @class */ (function (_super) {\n    __extends(StepBlock, _super);\n    /**\n     * Creates a new StepBlock\n     * @param name defines the block name\n     */\n    function StepBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"value\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerInput(\"edge\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Float);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    StepBlock.prototype.getClassName = function () {\n        return \"StepBlock\";\n    };\n    Object.defineProperty(StepBlock.prototype, \"value\", {\n        /**\n         * Gets the value operand input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StepBlock.prototype, \"edge\", {\n        /**\n         * Gets the edge operand input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StepBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    StepBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString += this._declareOutput(output, state) + \" = step(\".concat(this.edge.associatedVariableName, \", \").concat(this.value.associatedVariableName, \");\\r\\n\");\n        return this;\n    };\n    return StepBlock;\n}(NodeMaterialBlock));\nexport { StepBlock };\nRegisterClass(\"BABYLON.StepBlock\", StepBlock);\n//# sourceMappingURL=stepBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to get the opposite (1 - x) of a value\n */\nvar OneMinusBlock = /** @class */ (function (_super) {\n    __extends(OneMinusBlock, _super);\n    /**\n     * Creates a new OneMinusBlock\n     * @param name defines the block name\n     */\n    function OneMinusBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        _this._outputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    OneMinusBlock.prototype.getClassName = function () {\n        return \"OneMinusBlock\";\n    };\n    Object.defineProperty(OneMinusBlock.prototype, \"input\", {\n        /**\n         * Gets the input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(OneMinusBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    OneMinusBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString += this._declareOutput(output, state) + \" = 1. - \".concat(this.input.associatedVariableName, \";\\r\\n\");\n        return this;\n    };\n    return OneMinusBlock;\n}(NodeMaterialBlock));\nexport { OneMinusBlock };\nRegisterClass(\"BABYLON.OneMinusBlock\", OneMinusBlock);\nRegisterClass(\"BABYLON.OppositeBlock\", OneMinusBlock); // Backward compatibility\n//# sourceMappingURL=oneMinusBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\nimport { NodeMaterialSystemValues } from \"../Enums/nodeMaterialSystemValues.js\";\nimport { InputBlock } from \"./Input/inputBlock.js\";\n/**\n * Block used to get the view direction\n */\nvar ViewDirectionBlock = /** @class */ (function (_super) {\n    __extends(ViewDirectionBlock, _super);\n    /**\n     * Creates a new ViewDirectionBlock\n     * @param name defines the block name\n     */\n    function ViewDirectionBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"worldPosition\", NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this.registerInput(\"cameraPosition\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    ViewDirectionBlock.prototype.getClassName = function () {\n        return \"ViewDirectionBlock\";\n    };\n    Object.defineProperty(ViewDirectionBlock.prototype, \"worldPosition\", {\n        /**\n         * Gets the world position component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ViewDirectionBlock.prototype, \"cameraPosition\", {\n        /**\n         * Gets the camera position component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ViewDirectionBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ViewDirectionBlock.prototype.autoConfigure = function (material) {\n        if (!this.cameraPosition.isConnected) {\n            var cameraPositionInput = material.getInputBlockByPredicate(function (b) { return b.systemValue === NodeMaterialSystemValues.CameraPosition; });\n            if (!cameraPositionInput) {\n                cameraPositionInput = new InputBlock(\"cameraPosition\");\n                cameraPositionInput.setAsSystemValue(NodeMaterialSystemValues.CameraPosition);\n            }\n            cameraPositionInput.output.connectTo(this.cameraPosition);\n        }\n    };\n    ViewDirectionBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString +=\n            this._declareOutput(output, state) + \" = normalize(\".concat(this.cameraPosition.associatedVariableName, \" - \").concat(this.worldPosition.associatedVariableName, \".xyz);\\r\\n\");\n        return this;\n    };\n    return ViewDirectionBlock;\n}(NodeMaterialBlock));\nexport { ViewDirectionBlock };\nRegisterClass(\"BABYLON.ViewDirectionBlock\", ViewDirectionBlock);\n//# sourceMappingURL=viewDirectionBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\nimport { InputBlock } from \"./Input/inputBlock.js\";\nimport \"../../../Shaders/ShadersInclude/fresnelFunction.js\";\nimport { ViewDirectionBlock } from \"./viewDirectionBlock.js\";\n/**\n * Block used to compute fresnel value\n */\nvar FresnelBlock = /** @class */ (function (_super) {\n    __extends(FresnelBlock, _super);\n    /**\n     * Create a new FresnelBlock\n     * @param name defines the block name\n     */\n    function FresnelBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"worldNormal\", NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this.registerInput(\"viewDirection\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this.registerInput(\"bias\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerInput(\"power\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerOutput(\"fresnel\", NodeMaterialBlockConnectionPointTypes.Float);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    FresnelBlock.prototype.getClassName = function () {\n        return \"FresnelBlock\";\n    };\n    Object.defineProperty(FresnelBlock.prototype, \"worldNormal\", {\n        /**\n         * Gets the world normal input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FresnelBlock.prototype, \"viewDirection\", {\n        /**\n         * Gets the view direction input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FresnelBlock.prototype, \"bias\", {\n        /**\n         * Gets the bias input component\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FresnelBlock.prototype, \"power\", {\n        /**\n         * Gets the camera (or eye) position component\n         */\n        get: function () {\n            return this._inputs[3];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FresnelBlock.prototype, \"fresnel\", {\n        /**\n         * Gets the fresnel output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    FresnelBlock.prototype.autoConfigure = function (material) {\n        if (!this.viewDirection.isConnected) {\n            var viewDirectionInput = new ViewDirectionBlock(\"View direction\");\n            viewDirectionInput.output.connectTo(this.viewDirection);\n            viewDirectionInput.autoConfigure(material);\n        }\n        if (!this.bias.isConnected) {\n            var biasInput = new InputBlock(\"bias\");\n            biasInput.value = 0;\n            biasInput.output.connectTo(this.bias);\n        }\n        if (!this.power.isConnected) {\n            var powerInput = new InputBlock(\"power\");\n            powerInput.value = 1;\n            powerInput.output.connectTo(this.power);\n        }\n    };\n    FresnelBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var comments = \"//\".concat(this.name);\n        state._emitFunctionFromInclude(\"fresnelFunction\", comments, { removeIfDef: true });\n        state.compilationString +=\n            this._declareOutput(this.fresnel, state) +\n                \" = computeFresnelTerm(\".concat(this.viewDirection.associatedVariableName, \".xyz, \").concat(this.worldNormal.associatedVariableName, \".xyz, \").concat(this.bias.associatedVariableName, \", \").concat(this.power.associatedVariableName, \");\\r\\n\");\n        return this;\n    };\n    return FresnelBlock;\n}(NodeMaterialBlock));\nexport { FresnelBlock };\nRegisterClass(\"BABYLON.FresnelBlock\", FresnelBlock);\n//# sourceMappingURL=fresnelBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to get the max of 2 values\n */\nvar MaxBlock = /** @class */ (function (_super) {\n    __extends(MaxBlock, _super);\n    /**\n     * Creates a new MaxBlock\n     * @param name defines the block name\n     */\n    function MaxBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"left\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"right\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        _this._linkConnectionTypes(0, 1);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    MaxBlock.prototype.getClassName = function () {\n        return \"MaxBlock\";\n    };\n    Object.defineProperty(MaxBlock.prototype, \"left\", {\n        /**\n         * Gets the left operand input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MaxBlock.prototype, \"right\", {\n        /**\n         * Gets the right operand input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MaxBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MaxBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString += this._declareOutput(output, state) + \" = max(\".concat(this.left.associatedVariableName, \", \").concat(this.right.associatedVariableName, \");\\r\\n\");\n        return this;\n    };\n    return MaxBlock;\n}(NodeMaterialBlock));\nexport { MaxBlock };\nRegisterClass(\"BABYLON.MaxBlock\", MaxBlock);\n//# sourceMappingURL=maxBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to get the min of 2 values\n */\nvar MinBlock = /** @class */ (function (_super) {\n    __extends(MinBlock, _super);\n    /**\n     * Creates a new MinBlock\n     * @param name defines the block name\n     */\n    function MinBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"left\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"right\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        _this._linkConnectionTypes(0, 1);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    MinBlock.prototype.getClassName = function () {\n        return \"MinBlock\";\n    };\n    Object.defineProperty(MinBlock.prototype, \"left\", {\n        /**\n         * Gets the left operand input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MinBlock.prototype, \"right\", {\n        /**\n         * Gets the right operand input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MinBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MinBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString += this._declareOutput(output, state) + \" = min(\".concat(this.left.associatedVariableName, \", \").concat(this.right.associatedVariableName, \");\\r\\n\");\n        return this;\n    };\n    return MinBlock;\n}(NodeMaterialBlock));\nexport { MinBlock };\nRegisterClass(\"BABYLON.MinBlock\", MinBlock);\n//# sourceMappingURL=minBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to get the distance between 2 values\n */\nvar DistanceBlock = /** @class */ (function (_super) {\n    __extends(DistanceBlock, _super);\n    /**\n     * Creates a new DistanceBlock\n     * @param name defines the block name\n     */\n    function DistanceBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"left\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"right\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this._linkConnectionTypes(0, 1);\n        _this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Float);\n        _this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\n        _this._inputs[1].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Float);\n        _this._inputs[1].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    DistanceBlock.prototype.getClassName = function () {\n        return \"DistanceBlock\";\n    };\n    Object.defineProperty(DistanceBlock.prototype, \"left\", {\n        /**\n         * Gets the left operand input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DistanceBlock.prototype, \"right\", {\n        /**\n         * Gets the right operand input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DistanceBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DistanceBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString += this._declareOutput(output, state) + \" = length(\".concat(this.left.associatedVariableName, \" - \").concat(this.right.associatedVariableName, \");\\r\\n\");\n        return this;\n    };\n    return DistanceBlock;\n}(NodeMaterialBlock));\nexport { DistanceBlock };\nRegisterClass(\"BABYLON.DistanceBlock\", DistanceBlock);\n//# sourceMappingURL=distanceBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to get the length of a vector\n */\nvar LengthBlock = /** @class */ (function (_super) {\n    __extends(LengthBlock, _super);\n    /**\n     * Creates a new LengthBlock\n     * @param name defines the block name\n     */\n    function LengthBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"value\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Float);\n        _this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    LengthBlock.prototype.getClassName = function () {\n        return \"LengthBlock\";\n    };\n    Object.defineProperty(LengthBlock.prototype, \"value\", {\n        /**\n         * Gets the value input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(LengthBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    LengthBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString += this._declareOutput(output, state) + \" = length(\".concat(this.value.associatedVariableName, \");\\r\\n\");\n        return this;\n    };\n    return LengthBlock;\n}(NodeMaterialBlock));\nexport { LengthBlock };\nRegisterClass(\"BABYLON.LengthBlock\", LengthBlock);\n//# sourceMappingURL=lengthBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to get negative version of a value (i.e. x * -1)\n */\nvar NegateBlock = /** @class */ (function (_super) {\n    __extends(NegateBlock, _super);\n    /**\n     * Creates a new NegateBlock\n     * @param name defines the block name\n     */\n    function NegateBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"value\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    NegateBlock.prototype.getClassName = function () {\n        return \"NegateBlock\";\n    };\n    Object.defineProperty(NegateBlock.prototype, \"value\", {\n        /**\n         * Gets the value input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NegateBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    NegateBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString += this._declareOutput(output, state) + \" = -1.0 * \".concat(this.value.associatedVariableName, \";\\r\\n\");\n        return this;\n    };\n    return NegateBlock;\n}(NodeMaterialBlock));\nexport { NegateBlock };\nRegisterClass(\"BABYLON.NegateBlock\", NegateBlock);\n//# sourceMappingURL=negateBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to get the value of the first parameter raised to the power of the second\n */\nvar PowBlock = /** @class */ (function (_super) {\n    __extends(PowBlock, _super);\n    /**\n     * Creates a new PowBlock\n     * @param name defines the block name\n     */\n    function PowBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"value\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"power\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        _this._linkConnectionTypes(0, 1);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    PowBlock.prototype.getClassName = function () {\n        return \"PowBlock\";\n    };\n    Object.defineProperty(PowBlock.prototype, \"value\", {\n        /**\n         * Gets the value operand input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PowBlock.prototype, \"power\", {\n        /**\n         * Gets the power operand input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PowBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    PowBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString += this._declareOutput(output, state) + \" = pow(\".concat(this.value.associatedVariableName, \", \").concat(this.power.associatedVariableName, \");\\r\\n\");\n        return this;\n    };\n    return PowBlock;\n}(NodeMaterialBlock));\nexport { PowBlock };\nRegisterClass(\"BABYLON.PowBlock\", PowBlock);\n//# sourceMappingURL=powBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\nimport \"../../../Shaders/ShadersInclude/helperFunctions.js\";\n/**\n * Block used to get a random number\n */\nvar RandomNumberBlock = /** @class */ (function (_super) {\n    __extends(RandomNumberBlock, _super);\n    /**\n     * Creates a new RandomNumberBlock\n     * @param name defines the block name\n     */\n    function RandomNumberBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"seed\", NodeMaterialBlockConnectionPointTypes.Vector2);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color3);\n        _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color4);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    RandomNumberBlock.prototype.getClassName = function () {\n        return \"RandomNumberBlock\";\n    };\n    Object.defineProperty(RandomNumberBlock.prototype, \"seed\", {\n        /**\n         * Gets the seed input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RandomNumberBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    RandomNumberBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        var comments = \"//\".concat(this.name);\n        state._emitFunctionFromInclude(\"helperFunctions\", comments);\n        state.compilationString += this._declareOutput(output, state) + \" = getRand(\".concat(this.seed.associatedVariableName, \".xy);\\r\\n\");\n        return this;\n    };\n    return RandomNumberBlock;\n}(NodeMaterialBlock));\nexport { RandomNumberBlock };\nRegisterClass(\"BABYLON.RandomNumberBlock\", RandomNumberBlock);\n//# sourceMappingURL=randomNumberBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to compute arc tangent of 2 values\n */\nvar ArcTan2Block = /** @class */ (function (_super) {\n    __extends(ArcTan2Block, _super);\n    /**\n     * Creates a new ArcTan2Block\n     * @param name defines the block name\n     */\n    function ArcTan2Block(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"x\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerInput(\"y\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Float);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    ArcTan2Block.prototype.getClassName = function () {\n        return \"ArcTan2Block\";\n    };\n    Object.defineProperty(ArcTan2Block.prototype, \"x\", {\n        /**\n         * Gets the x operand input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ArcTan2Block.prototype, \"y\", {\n        /**\n         * Gets the y operand input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ArcTan2Block.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ArcTan2Block.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString += this._declareOutput(output, state) + \" = atan(\".concat(this.x.associatedVariableName, \", \").concat(this.y.associatedVariableName, \");\\r\\n\");\n        return this;\n    };\n    return ArcTan2Block;\n}(NodeMaterialBlock));\nexport { ArcTan2Block };\nRegisterClass(\"BABYLON.ArcTan2Block\", ArcTan2Block);\n//# sourceMappingURL=arcTan2Block.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to smooth step a value\n */\nvar SmoothStepBlock = /** @class */ (function (_super) {\n    __extends(SmoothStepBlock, _super);\n    /**\n     * Creates a new SmoothStepBlock\n     * @param name defines the block name\n     */\n    function SmoothStepBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"value\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"edge0\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerInput(\"edge1\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    SmoothStepBlock.prototype.getClassName = function () {\n        return \"SmoothStepBlock\";\n    };\n    Object.defineProperty(SmoothStepBlock.prototype, \"value\", {\n        /**\n         * Gets the value operand input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SmoothStepBlock.prototype, \"edge0\", {\n        /**\n         * Gets the first edge operand input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SmoothStepBlock.prototype, \"edge1\", {\n        /**\n         * Gets the second edge operand input component\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SmoothStepBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SmoothStepBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString +=\n            this._declareOutput(output, state) +\n                \" = smoothstep(\".concat(this.edge0.associatedVariableName, \", \").concat(this.edge1.associatedVariableName, \", \").concat(this.value.associatedVariableName, \");\\r\\n\");\n        return this;\n    };\n    return SmoothStepBlock;\n}(NodeMaterialBlock));\nexport { SmoothStepBlock };\nRegisterClass(\"BABYLON.SmoothStepBlock\", SmoothStepBlock);\n//# sourceMappingURL=smoothStepBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to get the reciprocal (1 / x) of a value\n */\nvar ReciprocalBlock = /** @class */ (function (_super) {\n    __extends(ReciprocalBlock, _super);\n    /**\n     * Creates a new ReciprocalBlock\n     * @param name defines the block name\n     */\n    function ReciprocalBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        _this._outputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    ReciprocalBlock.prototype.getClassName = function () {\n        return \"ReciprocalBlock\";\n    };\n    Object.defineProperty(ReciprocalBlock.prototype, \"input\", {\n        /**\n         * Gets the input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReciprocalBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ReciprocalBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString += this._declareOutput(output, state) + \" = 1. / \".concat(this.input.associatedVariableName, \";\\r\\n\");\n        return this;\n    };\n    return ReciprocalBlock;\n}(NodeMaterialBlock));\nexport { ReciprocalBlock };\nRegisterClass(\"BABYLON.ReciprocalBlock\", ReciprocalBlock);\n//# sourceMappingURL=reciprocalBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to replace a color by another one\n */\nvar ReplaceColorBlock = /** @class */ (function (_super) {\n    __extends(ReplaceColorBlock, _super);\n    /**\n     * Creates a new ReplaceColorBlock\n     * @param name defines the block name\n     */\n    function ReplaceColorBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"value\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"reference\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"distance\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerInput(\"replacement\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        _this._linkConnectionTypes(0, 1);\n        _this._linkConnectionTypes(0, 3);\n        _this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Float);\n        _this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\n        _this._inputs[1].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Float);\n        _this._inputs[1].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\n        _this._inputs[3].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Float);\n        _this._inputs[3].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    ReplaceColorBlock.prototype.getClassName = function () {\n        return \"ReplaceColorBlock\";\n    };\n    Object.defineProperty(ReplaceColorBlock.prototype, \"value\", {\n        /**\n         * Gets the value input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReplaceColorBlock.prototype, \"reference\", {\n        /**\n         * Gets the reference input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReplaceColorBlock.prototype, \"distance\", {\n        /**\n         * Gets the distance input component\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReplaceColorBlock.prototype, \"replacement\", {\n        /**\n         * Gets the replacement input component\n         */\n        get: function () {\n            return this._inputs[3];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReplaceColorBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ReplaceColorBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString += this._declareOutput(output, state) + \";\\r\\n\";\n        state.compilationString += \"if (length(\".concat(this.value.associatedVariableName, \" - \").concat(this.reference.associatedVariableName, \") < \").concat(this.distance.associatedVariableName, \") {\\r\\n\");\n        state.compilationString += \"\".concat(output.associatedVariableName, \" = \").concat(this.replacement.associatedVariableName, \";\\r\\n\");\n        state.compilationString += \"} else {\\r\\n\";\n        state.compilationString += \"\".concat(output.associatedVariableName, \" = \").concat(this.value.associatedVariableName, \";\\r\\n\");\n        state.compilationString += \"}\\r\\n\";\n        return this;\n    };\n    return ReplaceColorBlock;\n}(NodeMaterialBlock));\nexport { ReplaceColorBlock };\nRegisterClass(\"BABYLON.ReplaceColorBlock\", ReplaceColorBlock);\n//# sourceMappingURL=replaceColorBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to posterize a value\n * @see https://en.wikipedia.org/wiki/Posterization\n */\nvar PosterizeBlock = /** @class */ (function (_super) {\n    __extends(PosterizeBlock, _super);\n    /**\n     * Creates a new PosterizeBlock\n     * @param name defines the block name\n     */\n    function PosterizeBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"value\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"steps\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        _this._linkConnectionTypes(0, 1);\n        _this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\n        _this._inputs[1].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    PosterizeBlock.prototype.getClassName = function () {\n        return \"PosterizeBlock\";\n    };\n    Object.defineProperty(PosterizeBlock.prototype, \"value\", {\n        /**\n         * Gets the value input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PosterizeBlock.prototype, \"steps\", {\n        /**\n         * Gets the steps input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PosterizeBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    PosterizeBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString +=\n            this._declareOutput(output, state) +\n                \" = floor(\".concat(this.value.associatedVariableName, \" / (1.0 / \").concat(this.steps.associatedVariableName, \")) * (1.0 / \").concat(this.steps.associatedVariableName, \");\\r\\n\");\n        return this;\n    };\n    return PosterizeBlock;\n}(NodeMaterialBlock));\nexport { PosterizeBlock };\nRegisterClass(\"BABYLON.PosterizeBlock\", PosterizeBlock);\n//# sourceMappingURL=posterizeBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Operations supported by the Wave block\n */\nexport var WaveBlockKind;\n(function (WaveBlockKind) {\n    /** SawTooth */\n    WaveBlockKind[WaveBlockKind[\"SawTooth\"] = 0] = \"SawTooth\";\n    /** Square */\n    WaveBlockKind[WaveBlockKind[\"Square\"] = 1] = \"Square\";\n    /** Triangle */\n    WaveBlockKind[WaveBlockKind[\"Triangle\"] = 2] = \"Triangle\";\n})(WaveBlockKind || (WaveBlockKind = {}));\n/**\n * Block used to apply wave operation to floats\n */\nvar WaveBlock = /** @class */ (function (_super) {\n    __extends(WaveBlock, _super);\n    /**\n     * Creates a new WaveBlock\n     * @param name defines the block name\n     */\n    function WaveBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        /**\n         * Gets or sets the kibnd of wave to be applied by the block\n         */\n        _this.kind = WaveBlockKind.SawTooth;\n        _this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        _this._inputs[0].excludedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Matrix);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    WaveBlock.prototype.getClassName = function () {\n        return \"WaveBlock\";\n    };\n    Object.defineProperty(WaveBlock.prototype, \"input\", {\n        /**\n         * Gets the input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WaveBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WaveBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        switch (this.kind) {\n            case WaveBlockKind.SawTooth: {\n                state.compilationString += this._declareOutput(output, state) + \" = \".concat(this.input.associatedVariableName, \" - floor(0.5 + \").concat(this.input.associatedVariableName, \");\\r\\n\");\n                break;\n            }\n            case WaveBlockKind.Square: {\n                state.compilationString += this._declareOutput(output, state) + \" = 1.0 - 2.0 * round(fract(\".concat(this.input.associatedVariableName, \"));\\r\\n\");\n                break;\n            }\n            case WaveBlockKind.Triangle: {\n                state.compilationString +=\n                    this._declareOutput(output, state) +\n                        \" = 2.0 * abs(2.0 * (\".concat(this.input.associatedVariableName, \" - floor(0.5 + \").concat(this.input.associatedVariableName, \"))) - 1.0;\\r\\n\");\n                break;\n            }\n        }\n        return this;\n    };\n    WaveBlock.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.kind = this.kind;\n        return serializationObject;\n    };\n    WaveBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n        _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n        this.kind = serializationObject.kind;\n    };\n    return WaveBlock;\n}(NodeMaterialBlock));\nexport { WaveBlock };\nRegisterClass(\"BABYLON.WaveBlock\", WaveBlock);\n//# sourceMappingURL=waveBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\nimport { Color3 } from \"../../../Maths/math.color.js\";\nimport { Observable } from \"../../../Misc/observable.js\";\n/**\n * Class used to store a color step for the GradientBlock\n */\nvar GradientBlockColorStep = /** @class */ (function () {\n    /**\n     * Creates a new GradientBlockColorStep\n     * @param step defines a value indicating which step this color is associated with (between 0 and 1)\n     * @param color defines the color associated with this step\n     */\n    function GradientBlockColorStep(step, color) {\n        this.step = step;\n        this.color = color;\n    }\n    Object.defineProperty(GradientBlockColorStep.prototype, \"step\", {\n        /**\n         * Gets value indicating which step this color is associated with (between 0 and 1)\n         */\n        get: function () {\n            return this._step;\n        },\n        /**\n         * Sets a value indicating which step this color is associated with (between 0 and 1)\n         */\n        set: function (val) {\n            this._step = val;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(GradientBlockColorStep.prototype, \"color\", {\n        /**\n         * Gets the color associated with this step\n         */\n        get: function () {\n            return this._color;\n        },\n        /**\n         * Sets the color associated with this step\n         */\n        set: function (val) {\n            this._color = val;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return GradientBlockColorStep;\n}());\nexport { GradientBlockColorStep };\n/**\n * Block used to return a color from a gradient based on an input value between 0 and 1\n */\nvar GradientBlock = /** @class */ (function (_super) {\n    __extends(GradientBlock, _super);\n    /**\n     * Creates a new GradientBlock\n     * @param name defines the block name\n     */\n    function GradientBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        /**\n         * Gets or sets the list of color steps\n         */\n        _this.colorSteps = [new GradientBlockColorStep(0, Color3.Black()), new GradientBlockColorStep(1.0, Color3.White())];\n        /** Gets an observable raised when the value is changed */\n        _this.onValueChangedObservable = new Observable();\n        _this.registerInput(\"gradient\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Color3);\n        _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector2);\n        _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color3);\n        _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color4);\n        return _this;\n    }\n    /** calls observable when the value is changed*/\n    GradientBlock.prototype.colorStepsUpdated = function () {\n        this.onValueChangedObservable.notifyObservers(this);\n    };\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    GradientBlock.prototype.getClassName = function () {\n        return \"GradientBlock\";\n    };\n    Object.defineProperty(GradientBlock.prototype, \"gradient\", {\n        /**\n         * Gets the gradient input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(GradientBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    GradientBlock.prototype._writeColorConstant = function (index) {\n        var step = this.colorSteps[index];\n        return \"vec3(\".concat(step.color.r, \", \").concat(step.color.g, \", \").concat(step.color.b, \")\");\n    };\n    GradientBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        if (!this.colorSteps.length || !this.gradient.connectedPoint) {\n            state.compilationString += this._declareOutput(output, state) + \" = vec3(0., 0., 0.);\\r\\n\";\n            return;\n        }\n        var tempColor = state._getFreeVariableName(\"gradientTempColor\");\n        var tempPosition = state._getFreeVariableName(\"gradientTempPosition\");\n        state.compilationString += \"vec3 \".concat(tempColor, \" = \").concat(this._writeColorConstant(0), \";\\r\\n\");\n        state.compilationString += \"float \".concat(tempPosition, \";\\r\\n\");\n        var gradientSource = this.gradient.associatedVariableName;\n        if (this.gradient.connectedPoint.type !== NodeMaterialBlockConnectionPointTypes.Float) {\n            gradientSource += \".x\";\n        }\n        for (var index = 1; index < this.colorSteps.length; index++) {\n            var step = this.colorSteps[index];\n            var previousStep = this.colorSteps[index - 1];\n            state.compilationString += \"\".concat(tempPosition, \" = clamp((\").concat(gradientSource, \" - \").concat(state._emitFloat(previousStep.step), \") / (\").concat(state._emitFloat(step.step), \" -  \").concat(state._emitFloat(previousStep.step), \"), 0.0, 1.0) * step(\").concat(state._emitFloat(index), \", \").concat(state._emitFloat(this.colorSteps.length - 1), \");\\r\\n\");\n            state.compilationString += \"\".concat(tempColor, \" = mix(\").concat(tempColor, \", \").concat(this._writeColorConstant(index), \", \").concat(tempPosition, \");\\r\\n\");\n        }\n        state.compilationString += this._declareOutput(output, state) + \" = \".concat(tempColor, \";\\r\\n\");\n        return this;\n    };\n    GradientBlock.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.colorSteps = [];\n        for (var _i = 0, _a = this.colorSteps; _i < _a.length; _i++) {\n            var step = _a[_i];\n            serializationObject.colorSteps.push({\n                step: step.step,\n                color: {\n                    r: step.color.r,\n                    g: step.color.g,\n                    b: step.color.b,\n                },\n            });\n        }\n        return serializationObject;\n    };\n    GradientBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n        _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n        this.colorSteps = [];\n        for (var _i = 0, _a = serializationObject.colorSteps; _i < _a.length; _i++) {\n            var step = _a[_i];\n            this.colorSteps.push(new GradientBlockColorStep(step.step, new Color3(step.color.r, step.color.g, step.color.b)));\n        }\n    };\n    GradientBlock.prototype._dumpPropertiesCode = function () {\n        var codeString = _super.prototype._dumpPropertiesCode.call(this);\n        codeString += \"\".concat(this._codeVariableName, \".colorSteps = [];\\r\\n\");\n        for (var _i = 0, _a = this.colorSteps; _i < _a.length; _i++) {\n            var colorStep = _a[_i];\n            codeString += \"\".concat(this._codeVariableName, \".colorSteps.push(new BABYLON.GradientBlockColorStep(\").concat(colorStep.step, \", new BABYLON.Color3(\").concat(colorStep.color.r, \", \").concat(colorStep.color.g, \", \").concat(colorStep.color.b, \")));\\r\\n\");\n        }\n        return codeString;\n    };\n    return GradientBlock;\n}(NodeMaterialBlock));\nexport { GradientBlock };\nRegisterClass(\"BABYLON.GradientBlock\", GradientBlock);\n//# sourceMappingURL=gradientBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to normalize lerp between 2 values\n */\nvar NLerpBlock = /** @class */ (function (_super) {\n    __extends(NLerpBlock, _super);\n    /**\n     * Creates a new NLerpBlock\n     * @param name defines the block name\n     */\n    function NLerpBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"left\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"right\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"gradient\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        _this._linkConnectionTypes(0, 1);\n        _this._linkConnectionTypes(1, 2, true);\n        _this._inputs[2].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Float);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    NLerpBlock.prototype.getClassName = function () {\n        return \"NLerpBlock\";\n    };\n    Object.defineProperty(NLerpBlock.prototype, \"left\", {\n        /**\n         * Gets the left operand input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NLerpBlock.prototype, \"right\", {\n        /**\n         * Gets the right operand input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NLerpBlock.prototype, \"gradient\", {\n        /**\n         * Gets the gradient operand input component\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NLerpBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    NLerpBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString +=\n            this._declareOutput(output, state) +\n                \" = normalize(mix(\".concat(this.left.associatedVariableName, \" , \").concat(this.right.associatedVariableName, \", \").concat(this.gradient.associatedVariableName, \"));\\r\\n\");\n        return this;\n    };\n    return NLerpBlock;\n}(NodeMaterialBlock));\nexport { NLerpBlock };\nRegisterClass(\"BABYLON.NLerpBlock\", NLerpBlock);\n//# sourceMappingURL=nLerpBlock.js.map","import { __decorate, __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\nimport { editableInPropertyPage, PropertyTypeForEdition } from \"../nodeMaterialDecorator.js\";\n/**\n * block used to Generate a Worley Noise 3D Noise Pattern\n */\n//  Source: https://github.com/Erkaman/glsl-worley\n//  Converted to BJS by Pryme8\n//\n//  Worley Noise 3D\n//  Return vec2 value range of -1.0->1.0, F1-F2 respectivly\nvar WorleyNoise3DBlock = /** @class */ (function (_super) {\n    __extends(WorleyNoise3DBlock, _super);\n    /**\n     * Creates a new WorleyNoise3DBlock\n     * @param name defines the block name\n     */\n    function WorleyNoise3DBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        /** Gets or sets a boolean indicating that normal should be inverted on X axis */\n        _this.manhattanDistance = false;\n        _this.registerInput(\"seed\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this.registerInput(\"jitter\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector2);\n        _this.registerOutput(\"x\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerOutput(\"y\", NodeMaterialBlockConnectionPointTypes.Float);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    WorleyNoise3DBlock.prototype.getClassName = function () {\n        return \"WorleyNoise3DBlock\";\n    };\n    Object.defineProperty(WorleyNoise3DBlock.prototype, \"seed\", {\n        /**\n         * Gets the seed input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WorleyNoise3DBlock.prototype, \"jitter\", {\n        /**\n         * Gets the jitter input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WorleyNoise3DBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WorleyNoise3DBlock.prototype, \"x\", {\n        /**\n         * Gets the x component\n         */\n        get: function () {\n            return this._outputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WorleyNoise3DBlock.prototype, \"y\", {\n        /**\n         * Gets the y component\n         */\n        get: function () {\n            return this._outputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WorleyNoise3DBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        if (!this.seed.isConnected) {\n            return;\n        }\n        if (!this.output.hasEndpoints && !this.x.hasEndpoints && !this.y.hasEndpoints) {\n            return;\n        }\n        var functionString = \"vec3 permute(vec3 x){\\r\\n\";\n        functionString += \"    return mod((34.0 * x + 1.0) * x, 289.0);\\r\\n\";\n        functionString += \"}\\r\\n\\r\\n\";\n        functionString += \"vec3 dist(vec3 x, vec3 y, vec3 z,  bool manhattanDistance){\\r\\n\";\n        functionString += \"    return manhattanDistance ?  abs(x) + abs(y) + abs(z) :  (x * x + y * y + z * z);\\r\\n\";\n        functionString += \"}\\r\\n\\r\\n\";\n        functionString += \"vec2 worley(vec3 P, float jitter, bool manhattanDistance){\\r\\n\";\n        functionString += \"    float K = 0.142857142857; // 1/7\\r\\n\";\n        functionString += \"    float Ko = 0.428571428571; // 1/2-K/2\\r\\n\";\n        functionString += \"    float  K2 = 0.020408163265306; // 1/(7*7)\\r\\n\";\n        functionString += \"    float Kz = 0.166666666667; // 1/6\\r\\n\";\n        functionString += \"    float Kzo = 0.416666666667; // 1/2-1/6*2\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 Pi = mod(floor(P), 289.0);\\r\\n\";\n        functionString += \"    vec3 Pf = fract(P) - 0.5;\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 Pfx = Pf.x + vec3(1.0, 0.0, -1.0);\\r\\n\";\n        functionString += \"    vec3 Pfy = Pf.y + vec3(1.0, 0.0, -1.0);\\r\\n\";\n        functionString += \"    vec3 Pfz = Pf.z + vec3(1.0, 0.0, -1.0);\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 p = permute(Pi.x + vec3(-1.0, 0.0, 1.0));\\r\\n\";\n        functionString += \"    vec3 p1 = permute(p + Pi.y - 1.0);\\r\\n\";\n        functionString += \"    vec3 p2 = permute(p + Pi.y);\\r\\n\";\n        functionString += \"    vec3 p3 = permute(p + Pi.y + 1.0);\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 p11 = permute(p1 + Pi.z - 1.0);\\r\\n\";\n        functionString += \"    vec3 p12 = permute(p1 + Pi.z);\\r\\n\";\n        functionString += \"    vec3 p13 = permute(p1 + Pi.z + 1.0);\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 p21 = permute(p2 + Pi.z - 1.0);\\r\\n\";\n        functionString += \"    vec3 p22 = permute(p2 + Pi.z);\\r\\n\";\n        functionString += \"    vec3 p23 = permute(p2 + Pi.z + 1.0);\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 p31 = permute(p3 + Pi.z - 1.0);\\r\\n\";\n        functionString += \"    vec3 p32 = permute(p3 + Pi.z);\\r\\n\";\n        functionString += \"    vec3 p33 = permute(p3 + Pi.z + 1.0);\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 ox11 = fract(p11*K) - Ko;\\r\\n\";\n        functionString += \"    vec3 oy11 = mod(floor(p11*K), 7.0)*K - Ko;\\r\\n\";\n        functionString += \"    vec3 oz11 = floor(p11*K2)*Kz - Kzo; // p11 < 289 guaranteed\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 ox12 = fract(p12*K) - Ko;\\r\\n\";\n        functionString += \"    vec3 oy12 = mod(floor(p12*K), 7.0)*K - Ko;\\r\\n\";\n        functionString += \"    vec3 oz12 = floor(p12*K2)*Kz - Kzo;\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 ox13 = fract(p13*K) - Ko;\\r\\n\";\n        functionString += \"    vec3 oy13 = mod(floor(p13*K), 7.0)*K - Ko;\\r\\n\";\n        functionString += \"    vec3 oz13 = floor(p13*K2)*Kz - Kzo;\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 ox21 = fract(p21*K) - Ko;\\r\\n\";\n        functionString += \"    vec3 oy21 = mod(floor(p21*K), 7.0)*K - Ko;\\r\\n\";\n        functionString += \"    vec3 oz21 = floor(p21*K2)*Kz - Kzo;\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 ox22 = fract(p22*K) - Ko;\\r\\n\";\n        functionString += \"    vec3 oy22 = mod(floor(p22*K), 7.0)*K - Ko;\\r\\n\";\n        functionString += \"    vec3 oz22 = floor(p22*K2)*Kz - Kzo;\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 ox23 = fract(p23*K) - Ko;\\r\\n\";\n        functionString += \"    vec3 oy23 = mod(floor(p23*K), 7.0)*K - Ko;\\r\\n\";\n        functionString += \"    vec3 oz23 = floor(p23*K2)*Kz - Kzo;\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 ox31 = fract(p31*K) - Ko;\\r\\n\";\n        functionString += \"    vec3 oy31 = mod(floor(p31*K), 7.0)*K - Ko;\\r\\n\";\n        functionString += \"    vec3 oz31 = floor(p31*K2)*Kz - Kzo;\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 ox32 = fract(p32*K) - Ko;\\r\\n\";\n        functionString += \"    vec3 oy32 = mod(floor(p32*K), 7.0)*K - Ko;\\r\\n\";\n        functionString += \"    vec3 oz32 = floor(p32*K2)*Kz - Kzo;\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 ox33 = fract(p33*K) - Ko;\\r\\n\";\n        functionString += \"    vec3 oy33 = mod(floor(p33*K), 7.0)*K - Ko;\\r\\n\";\n        functionString += \"    vec3 oz33 = floor(p33*K2)*Kz - Kzo;\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 dx11 = Pfx + jitter*ox11;\\r\\n\";\n        functionString += \"    vec3 dy11 = Pfy.x + jitter*oy11;\\r\\n\";\n        functionString += \"    vec3 dz11 = Pfz.x + jitter*oz11;\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 dx12 = Pfx + jitter*ox12;\\r\\n\";\n        functionString += \"    vec3 dy12 = Pfy.x + jitter*oy12;\\r\\n\";\n        functionString += \"    vec3 dz12 = Pfz.y + jitter*oz12;\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 dx13 = Pfx + jitter*ox13;\\r\\n\";\n        functionString += \"    vec3 dy13 = Pfy.x + jitter*oy13;\\r\\n\";\n        functionString += \"    vec3 dz13 = Pfz.z + jitter*oz13;\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 dx21 = Pfx + jitter*ox21;\\r\\n\";\n        functionString += \"    vec3 dy21 = Pfy.y + jitter*oy21;\\r\\n\";\n        functionString += \"    vec3 dz21 = Pfz.x + jitter*oz21;\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 dx22 = Pfx + jitter*ox22;\\r\\n\";\n        functionString += \"    vec3 dy22 = Pfy.y + jitter*oy22;\\r\\n\";\n        functionString += \"    vec3 dz22 = Pfz.y + jitter*oz22;\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 dx23 = Pfx + jitter*ox23;\\r\\n\";\n        functionString += \"    vec3 dy23 = Pfy.y + jitter*oy23;\\r\\n\";\n        functionString += \"    vec3 dz23 = Pfz.z + jitter*oz23;\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 dx31 = Pfx + jitter*ox31;\\r\\n\";\n        functionString += \"    vec3 dy31 = Pfy.z + jitter*oy31;\\r\\n\";\n        functionString += \"    vec3 dz31 = Pfz.x + jitter*oz31;\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 dx32 = Pfx + jitter*ox32;\\r\\n\";\n        functionString += \"    vec3 dy32 = Pfy.z + jitter*oy32;\\r\\n\";\n        functionString += \"    vec3 dz32 = Pfz.y + jitter*oz32;\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 dx33 = Pfx + jitter*ox33;\\r\\n\";\n        functionString += \"    vec3 dy33 = Pfy.z + jitter*oy33;\\r\\n\";\n        functionString += \"    vec3 dz33 = Pfz.z + jitter*oz33;\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 d11 = dist(dx11, dy11, dz11, manhattanDistance);\\r\\n\";\n        functionString += \"    vec3 d12 =dist(dx12, dy12, dz12, manhattanDistance);\\r\\n\";\n        functionString += \"    vec3 d13 = dist(dx13, dy13, dz13, manhattanDistance);\\r\\n\";\n        functionString += \"    vec3 d21 = dist(dx21, dy21, dz21, manhattanDistance);\\r\\n\";\n        functionString += \"    vec3 d22 = dist(dx22, dy22, dz22, manhattanDistance);\\r\\n\";\n        functionString += \"    vec3 d23 = dist(dx23, dy23, dz23, manhattanDistance);\\r\\n\";\n        functionString += \"    vec3 d31 = dist(dx31, dy31, dz31, manhattanDistance);\\r\\n\";\n        functionString += \"    vec3 d32 = dist(dx32, dy32, dz32, manhattanDistance);\\r\\n\";\n        functionString += \"    vec3 d33 = dist(dx33, dy33, dz33, manhattanDistance);\\r\\n\";\n        functionString += \"\\r\\n\";\n        functionString += \"    vec3 d1a = min(d11, d12);\\r\\n\";\n        functionString += \"    d12 = max(d11, d12);\\r\\n\";\n        functionString += \"    d11 = min(d1a, d13); // Smallest now not in d12 or d13\\r\\n\";\n        functionString += \"    d13 = max(d1a, d13);\\r\\n\";\n        functionString += \"    d12 = min(d12, d13); // 2nd smallest now not in d13\\r\\n\";\n        functionString += \"    vec3 d2a = min(d21, d22);\\r\\n\";\n        functionString += \"    d22 = max(d21, d22);\\r\\n\";\n        functionString += \"    d21 = min(d2a, d23); // Smallest now not in d22 or d23\\r\\n\";\n        functionString += \"    d23 = max(d2a, d23);\\r\\n\";\n        functionString += \"    d22 = min(d22, d23); // 2nd smallest now not in d23\\r\\n\";\n        functionString += \"    vec3 d3a = min(d31, d32);\\r\\n\";\n        functionString += \"    d32 = max(d31, d32);\\r\\n\";\n        functionString += \"    d31 = min(d3a, d33); // Smallest now not in d32 or d33\\r\\n\";\n        functionString += \"    d33 = max(d3a, d33);\\r\\n\";\n        functionString += \"    d32 = min(d32, d33); // 2nd smallest now not in d33\\r\\n\";\n        functionString += \"    vec3 da = min(d11, d21);\\r\\n\";\n        functionString += \"    d21 = max(d11, d21);\\r\\n\";\n        functionString += \"    d11 = min(da, d31); // Smallest now in d11\\r\\n\";\n        functionString += \"    d31 = max(da, d31); // 2nd smallest now not in d31\\r\\n\";\n        functionString += \"    d11.xy = (d11.x < d11.y) ? d11.xy : d11.yx;\\r\\n\";\n        functionString += \"    d11.xz = (d11.x < d11.z) ? d11.xz : d11.zx; // d11.x now smallest\\r\\n\";\n        functionString += \"    d12 = min(d12, d21); // 2nd smallest now not in d21\\r\\n\";\n        functionString += \"    d12 = min(d12, d22); // nor in d22\\r\\n\";\n        functionString += \"    d12 = min(d12, d31); // nor in d31\\r\\n\";\n        functionString += \"    d12 = min(d12, d32); // nor in d32\\r\\n\";\n        functionString += \"    d11.yz = min(d11.yz,d12.xy); // nor in d12.yz\\r\\n\";\n        functionString += \"    d11.y = min(d11.y,d12.z); // Only two more to go\\r\\n\";\n        functionString += \"    d11.y = min(d11.y,d11.z); // Done! (Phew!)\\r\\n\";\n        functionString += \"    return sqrt(d11.xy); // F1, F2\\r\\n\";\n        functionString += \"}\\r\\n\\r\\n\";\n        state._emitFunction(\"worley3D\", functionString, \"// Worley3D\");\n        var tempVariable = state._getFreeVariableName(\"worleyTemp\");\n        state.compilationString += \"vec2 \".concat(tempVariable, \" = worley(\").concat(this.seed.associatedVariableName, \", \").concat(this.jitter.associatedVariableName, \", \").concat(this.manhattanDistance, \");\\r\\n\");\n        if (this.output.hasEndpoints) {\n            state.compilationString += this._declareOutput(this.output, state) + \" = \".concat(tempVariable, \";\\r\\n\");\n        }\n        if (this.x.hasEndpoints) {\n            state.compilationString += this._declareOutput(this.x, state) + \" = \".concat(tempVariable, \".x;\\r\\n\");\n        }\n        if (this.y.hasEndpoints) {\n            state.compilationString += this._declareOutput(this.y, state) + \" = \".concat(tempVariable, \".y;\\r\\n\");\n        }\n        return this;\n    };\n    /**\n     * Exposes the properties to the UI?\n     */\n    WorleyNoise3DBlock.prototype._dumpPropertiesCode = function () {\n        var codeString = _super.prototype._dumpPropertiesCode.call(this) + \"\".concat(this._codeVariableName, \".manhattanDistance = \").concat(this.manhattanDistance, \";\\r\\n\");\n        return codeString;\n    };\n    /**\n     * Exposes the properties to the Serialize?\n     */\n    WorleyNoise3DBlock.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.manhattanDistance = this.manhattanDistance;\n        return serializationObject;\n    };\n    /**\n     * Exposes the properties to the deserialize?\n     * @param serializationObject\n     * @param scene\n     * @param rootUrl\n     */\n    WorleyNoise3DBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n        _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n        this.manhattanDistance = serializationObject.manhattanDistance;\n    };\n    __decorate([\n        editableInPropertyPage(\"Use Manhattan Distance\", PropertyTypeForEdition.Boolean, \"PROPERTIES\", { notifiers: { update: false } })\n    ], WorleyNoise3DBlock.prototype, \"manhattanDistance\", void 0);\n    return WorleyNoise3DBlock;\n}(NodeMaterialBlock));\nexport { WorleyNoise3DBlock };\nRegisterClass(\"BABYLON.WorleyNoise3DBlock\", WorleyNoise3DBlock);\n//# sourceMappingURL=worleyNoise3DBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * block used to Generate a Simplex Perlin 3d Noise Pattern\n */\n//\n//  Wombat\n//  An efficient texture-free GLSL procedural noise library\n//  Source: https://github.com/BrianSharpe/Wombat\n//  Derived from: https://github.com/BrianSharpe/GPU-Noise-Lib\n//\n//  I'm not one for copyrights.  Use the code however you wish.\n//  All I ask is that credit be given back to the blog or myself when appropriate.\n//  And also to let me know if you come up with any changes, improvements, thoughts or interesting uses for this stuff. :)\n//  Thanks!\n//\n//  Brian Sharpe\n//  brisharpe CIRCLE_A yahoo DOT com\n//  http://briansharpe.wordpress.com\n//  https://github.com/BrianSharpe\n//\n//\n//  This is a modified version of Stefan Gustavson's and Ian McEwan's work at http://github.com/ashima/webgl-noise\n//  Modifications are...\n//  - faster random number generation\n//  - analytical final normalization\n//  - space scaled can have an approx feature size of 1.0\n//  - filter kernel changed to fix discontinuities at tetrahedron boundaries\n//\n//  Converted to BJS by Pryme8\n//\n//  Simplex Perlin Noise 3D\n//  Return value range of -1.0->1.0\n//\nvar SimplexPerlin3DBlock = /** @class */ (function (_super) {\n    __extends(SimplexPerlin3DBlock, _super);\n    /**\n     * Creates a new SimplexPerlin3DBlock\n     * @param name defines the block name\n     */\n    function SimplexPerlin3DBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"seed\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Float);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    SimplexPerlin3DBlock.prototype.getClassName = function () {\n        return \"SimplexPerlin3DBlock\";\n    };\n    Object.defineProperty(SimplexPerlin3DBlock.prototype, \"seed\", {\n        /**\n         * Gets the seed operand input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SimplexPerlin3DBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SimplexPerlin3DBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        if (!this.seed.isConnected) {\n            return;\n        }\n        if (!this._outputs[0].hasEndpoints) {\n            return;\n        }\n        var functionString = \"const float SKEWFACTOR = 1.0/3.0;\\r\\n\";\n        functionString += \"const float UNSKEWFACTOR = 1.0/6.0;\\r\\n\";\n        functionString += \"const float SIMPLEX_CORNER_POS = 0.5;\\r\\n\";\n        functionString += \"const float SIMPLEX_TETRAHADRON_HEIGHT = 0.70710678118654752440084436210485;\\r\\n\";\n        functionString += \"float SimplexPerlin3D( vec3 P ){\\r\\n\";\n        functionString += \"    P.x = P == vec3(0., 0., 0.) ? 0.00001 : P.x;\\r\\n\";\n        functionString += \"    P *= SIMPLEX_TETRAHADRON_HEIGHT;\\r\\n\";\n        functionString += \"    vec3 Pi = floor( P + dot( P, vec3( SKEWFACTOR) ) );\";\n        functionString += \"    vec3 x0 = P - Pi + dot(Pi, vec3( UNSKEWFACTOR ) );\\r\\n\";\n        functionString += \"    vec3 g = step(x0.yzx, x0.xyz);\\r\\n\";\n        functionString += \"    vec3 l = 1.0 - g;\\r\\n\";\n        functionString += \"    vec3 Pi_1 = min( g.xyz, l.zxy );\\r\\n\";\n        functionString += \"    vec3 Pi_2 = max( g.xyz, l.zxy );\\r\\n\";\n        functionString += \"    vec3 x1 = x0 - Pi_1 + UNSKEWFACTOR;\\r\\n\";\n        functionString += \"    vec3 x2 = x0 - Pi_2 + SKEWFACTOR;\\r\\n\";\n        functionString += \"    vec3 x3 = x0 - SIMPLEX_CORNER_POS;\\r\\n\";\n        functionString += \"    vec4 v1234_x = vec4( x0.x, x1.x, x2.x, x3.x );\\r\\n\";\n        functionString += \"    vec4 v1234_y = vec4( x0.y, x1.y, x2.y, x3.y );\\r\\n\";\n        functionString += \"    vec4 v1234_z = vec4( x0.z, x1.z, x2.z, x3.z );\\r\\n\";\n        functionString += \"    Pi.xyz = Pi.xyz - floor(Pi.xyz * ( 1.0 / 69.0 )) * 69.0;\\r\\n\";\n        functionString += \"    vec3 Pi_inc1 = step( Pi, vec3( 69.0 - 1.5 ) ) * ( Pi + 1.0 );\\r\\n\";\n        functionString += \"    vec4 Pt = vec4( Pi.xy, Pi_inc1.xy ) + vec2( 50.0, 161.0 ).xyxy;\\r\\n\";\n        functionString += \"    Pt *= Pt;\\r\\n\";\n        functionString += \"    vec4 V1xy_V2xy = mix( Pt.xyxy, Pt.zwzw, vec4( Pi_1.xy, Pi_2.xy ) );\\r\\n\";\n        functionString += \"    Pt = vec4( Pt.x, V1xy_V2xy.xz, Pt.z ) * vec4( Pt.y, V1xy_V2xy.yw, Pt.w );\\r\\n\";\n        functionString += \"    const vec3 SOMELARGEFLOATS = vec3( 635.298681, 682.357502, 668.926525 );\\r\\n\";\n        functionString += \"    const vec3 ZINC = vec3( 48.500388, 65.294118, 63.934599 );\\r\\n\";\n        functionString += \"    vec3 lowz_mods = vec3( 1.0 / ( SOMELARGEFLOATS.xyz + Pi.zzz * ZINC.xyz ) );\\r\\n\";\n        functionString += \"    vec3 highz_mods = vec3( 1.0 / ( SOMELARGEFLOATS.xyz + Pi_inc1.zzz * ZINC.xyz ) );\\r\\n\";\n        functionString += \"    Pi_1 = ( Pi_1.z < 0.5 ) ? lowz_mods : highz_mods;\\r\\n\";\n        functionString += \"    Pi_2 = ( Pi_2.z < 0.5 ) ? lowz_mods : highz_mods;\\r\\n\";\n        functionString += \"    vec4 hash_0 = fract( Pt * vec4( lowz_mods.x, Pi_1.x, Pi_2.x, highz_mods.x ) ) - 0.49999;\\r\\n\";\n        functionString += \"    vec4 hash_1 = fract( Pt * vec4( lowz_mods.y, Pi_1.y, Pi_2.y, highz_mods.y ) ) - 0.49999;\\r\\n\";\n        functionString += \"    vec4 hash_2 = fract( Pt * vec4( lowz_mods.z, Pi_1.z, Pi_2.z, highz_mods.z ) ) - 0.49999;\\r\\n\";\n        functionString += \"    vec4 grad_results = inversesqrt( hash_0 * hash_0 + hash_1 * hash_1 + hash_2 * hash_2 ) * ( hash_0 * v1234_x + hash_1 * v1234_y + hash_2 * v1234_z );\\r\\n\";\n        functionString += \"    const float FINAL_NORMALIZATION = 37.837227241611314102871574478976;\\r\\n\";\n        functionString += \"    vec4 kernel_weights = v1234_x * v1234_x + v1234_y * v1234_y + v1234_z * v1234_z;\\r\\n\";\n        functionString += \"    kernel_weights = max(0.5 - kernel_weights, 0.0);\\r\\n\";\n        functionString += \"    kernel_weights = kernel_weights*kernel_weights*kernel_weights;\\r\\n\";\n        functionString += \"    return dot( kernel_weights, grad_results ) * FINAL_NORMALIZATION;\\r\\n\";\n        functionString += \"}\\r\\n\";\n        state._emitFunction(\"SimplexPerlin3D\", functionString, \"// SimplexPerlin3D\");\n        state.compilationString += this._declareOutput(this._outputs[0], state) + \" = SimplexPerlin3D(\".concat(this.seed.associatedVariableName, \");\\r\\n\");\n        return this;\n    };\n    return SimplexPerlin3DBlock;\n}(NodeMaterialBlock));\nexport { SimplexPerlin3DBlock };\nRegisterClass(\"BABYLON.SimplexPerlin3DBlock\", SimplexPerlin3DBlock);\n//# sourceMappingURL=simplexPerlin3DBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to blend normals\n */\nvar NormalBlendBlock = /** @class */ (function (_super) {\n    __extends(NormalBlendBlock, _super);\n    /**\n     * Creates a new NormalBlendBlock\n     * @param name defines the block name\n     */\n    function NormalBlendBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"normalMap0\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this.registerInput(\"normalMap1\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color3);\n        _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color4);\n        _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color3);\n        _this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color4);\n        _this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    NormalBlendBlock.prototype.getClassName = function () {\n        return \"NormalBlendBlock\";\n    };\n    Object.defineProperty(NormalBlendBlock.prototype, \"normalMap0\", {\n        /**\n         * Gets the first input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NormalBlendBlock.prototype, \"normalMap1\", {\n        /**\n         * Gets the second input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NormalBlendBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    NormalBlendBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        var input0 = this._inputs[0];\n        var input1 = this._inputs[1];\n        var stepR = state._getFreeVariableName(\"stepR\");\n        var stepG = state._getFreeVariableName(\"stepG\");\n        state.compilationString += \"float \".concat(stepR, \" = step(0.5, \").concat(input0.associatedVariableName, \".r);\\r\\n\");\n        state.compilationString += \"float \".concat(stepG, \" = step(0.5, \").concat(input0.associatedVariableName, \".g);\\r\\n\");\n        state.compilationString += this._declareOutput(output, state) + \";\\r\\n\";\n        state.compilationString += \"\".concat(output.associatedVariableName, \".r = (1.0 - \").concat(stepR, \") * \").concat(input0.associatedVariableName, \".r * \").concat(input1.associatedVariableName, \".r * 2.0 + \").concat(stepR, \" * (1.0 - (1.0 - \").concat(input0.associatedVariableName, \".r) * (1.0 - \").concat(input1.associatedVariableName, \".r) * 2.0);\\r\\n\");\n        state.compilationString += \"\".concat(output.associatedVariableName, \".g = (1.0 - \").concat(stepG, \") * \").concat(input0.associatedVariableName, \".g * \").concat(input1.associatedVariableName, \".g * 2.0 + \").concat(stepG, \" * (1.0 - (1.0 - \").concat(input0.associatedVariableName, \".g) * (1.0 - \").concat(input1.associatedVariableName, \".g) * 2.0);\\r\\n\");\n        state.compilationString += \"\".concat(output.associatedVariableName, \".b = \").concat(input0.associatedVariableName, \".b * \").concat(input1.associatedVariableName, \".b;\\r\\n\");\n        return this;\n    };\n    return NormalBlendBlock;\n}(NodeMaterialBlock));\nexport { NormalBlendBlock };\nRegisterClass(\"BABYLON.NormalBlendBlock\", NormalBlendBlock);\n//# sourceMappingURL=normalBlendBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\nimport { InputBlock } from \"./Input/inputBlock.js\";\n/**\n * Block used to rotate a 2d vector by a given angle\n */\nvar Rotate2dBlock = /** @class */ (function (_super) {\n    __extends(Rotate2dBlock, _super);\n    /**\n     * Creates a new Rotate2dBlock\n     * @param name defines the block name\n     */\n    function Rotate2dBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.Vector2);\n        _this.registerInput(\"angle\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector2);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    Rotate2dBlock.prototype.getClassName = function () {\n        return \"Rotate2dBlock\";\n    };\n    Object.defineProperty(Rotate2dBlock.prototype, \"input\", {\n        /**\n         * Gets the input vector\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Rotate2dBlock.prototype, \"angle\", {\n        /**\n         * Gets the input angle\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Rotate2dBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Rotate2dBlock.prototype.autoConfigure = function () {\n        if (!this.angle.isConnected) {\n            var angleInput = new InputBlock(\"angle\");\n            angleInput.value = 0;\n            angleInput.output.connectTo(this.angle);\n        }\n    };\n    Rotate2dBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        var angle = this.angle;\n        var input = this.input;\n        state.compilationString +=\n            this._declareOutput(output, state) +\n                \" = vec2(cos(\".concat(angle.associatedVariableName, \") * \").concat(input.associatedVariableName, \".x - sin(\").concat(angle.associatedVariableName, \") * \").concat(input.associatedVariableName, \".y, sin(\").concat(angle.associatedVariableName, \") * \").concat(input.associatedVariableName, \".x + cos(\").concat(angle.associatedVariableName, \") * \").concat(input.associatedVariableName, \".y);\\r\\n\");\n        return this;\n    };\n    return Rotate2dBlock;\n}(NodeMaterialBlock));\nexport { Rotate2dBlock };\nRegisterClass(\"BABYLON.Rotate2dBlock\", Rotate2dBlock);\n//# sourceMappingURL=rotate2dBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to get the reflected vector from a direction and a normal\n */\nvar ReflectBlock = /** @class */ (function (_super) {\n    __extends(ReflectBlock, _super);\n    /**\n     * Creates a new ReflectBlock\n     * @param name defines the block name\n     */\n    function ReflectBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"incident\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this.registerInput(\"normal\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color3);\n        _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color4);\n        _this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color3);\n        _this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color4);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    ReflectBlock.prototype.getClassName = function () {\n        return \"ReflectBlock\";\n    };\n    Object.defineProperty(ReflectBlock.prototype, \"incident\", {\n        /**\n         * Gets the incident component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReflectBlock.prototype, \"normal\", {\n        /**\n         * Gets the normal component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ReflectBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ReflectBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString += this._declareOutput(output, state) + \" = reflect(\".concat(this.incident.associatedVariableName, \".xyz, \").concat(this.normal.associatedVariableName, \".xyz);\\r\\n\");\n        return this;\n    };\n    return ReflectBlock;\n}(NodeMaterialBlock));\nexport { ReflectBlock };\nRegisterClass(\"BABYLON.ReflectBlock\", ReflectBlock);\n//# sourceMappingURL=reflectBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to get the refracted vector from a direction and a normal\n */\nvar RefractBlock = /** @class */ (function (_super) {\n    __extends(RefractBlock, _super);\n    /**\n     * Creates a new RefractBlock\n     * @param name defines the block name\n     */\n    function RefractBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"incident\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this.registerInput(\"normal\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this.registerInput(\"ior\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color3);\n        _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color4);\n        _this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color3);\n        _this._inputs[1].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Color4);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    RefractBlock.prototype.getClassName = function () {\n        return \"RefractBlock\";\n    };\n    Object.defineProperty(RefractBlock.prototype, \"incident\", {\n        /**\n         * Gets the incident component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RefractBlock.prototype, \"normal\", {\n        /**\n         * Gets the normal component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RefractBlock.prototype, \"ior\", {\n        /**\n         * Gets the index of refraction component\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RefractBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    RefractBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString +=\n            this._declareOutput(output, state) +\n                \" = refract(\".concat(this.incident.associatedVariableName, \".xyz, \").concat(this.normal.associatedVariableName, \".xyz, \").concat(this.ior.associatedVariableName, \");\\r\\n\");\n        return this;\n    };\n    return RefractBlock;\n}(NodeMaterialBlock));\nexport { RefractBlock };\nRegisterClass(\"BABYLON.RefractBlock\", RefractBlock);\n//# sourceMappingURL=refractBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to desaturate a color\n */\nvar DesaturateBlock = /** @class */ (function (_super) {\n    __extends(DesaturateBlock, _super);\n    /**\n     * Creates a new DesaturateBlock\n     * @param name defines the block name\n     */\n    function DesaturateBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"color\", NodeMaterialBlockConnectionPointTypes.Color3);\n        _this.registerInput(\"level\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Color3);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    DesaturateBlock.prototype.getClassName = function () {\n        return \"DesaturateBlock\";\n    };\n    Object.defineProperty(DesaturateBlock.prototype, \"color\", {\n        /**\n         * Gets the color operand input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DesaturateBlock.prototype, \"level\", {\n        /**\n         * Gets the level operand input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DesaturateBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DesaturateBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        var color = this.color;\n        var colorName = color.associatedVariableName;\n        var tempMin = state._getFreeVariableName(\"colorMin\");\n        var tempMax = state._getFreeVariableName(\"colorMax\");\n        var tempMerge = state._getFreeVariableName(\"colorMerge\");\n        state.compilationString += \"float \".concat(tempMin, \" = min(min(\").concat(colorName, \".x, \").concat(colorName, \".y), \").concat(colorName, \".z);\\r\\n\");\n        state.compilationString += \"float \".concat(tempMax, \" = max(max(\").concat(colorName, \".x, \").concat(colorName, \".y), \").concat(colorName, \".z);\\r\\n\");\n        state.compilationString += \"float \".concat(tempMerge, \" = 0.5 * (\").concat(tempMin, \" + \").concat(tempMax, \");\\r\\n\");\n        state.compilationString +=\n            this._declareOutput(output, state) + \" = mix(\".concat(colorName, \", vec3(\").concat(tempMerge, \", \").concat(tempMerge, \", \").concat(tempMerge, \"), \").concat(this.level.associatedVariableName, \");\\r\\n\");\n        return this;\n    };\n    return DesaturateBlock;\n}(NodeMaterialBlock));\nexport { DesaturateBlock };\nRegisterClass(\"BABYLON.DesaturateBlock\", DesaturateBlock);\n//# sourceMappingURL=desaturateBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used to compute value of one parameter modulo another\n */\nvar ModBlock = /** @class */ (function (_super) {\n    __extends(ModBlock, _super);\n    /**\n     * Creates a new ModBlock\n     * @param name defines the block name\n     */\n    function ModBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"left\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"right\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        _this._linkConnectionTypes(0, 1);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    ModBlock.prototype.getClassName = function () {\n        return \"ModBlock\";\n    };\n    Object.defineProperty(ModBlock.prototype, \"left\", {\n        /**\n         * Gets the left operand input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ModBlock.prototype, \"right\", {\n        /**\n         * Gets the right operand input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ModBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ModBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        state.compilationString += this._declareOutput(output, state) + \" = mod(\".concat(this.left.associatedVariableName, \", \").concat(this.right.associatedVariableName, \");\\r\\n\");\n        return this;\n    };\n    return ModBlock;\n}(NodeMaterialBlock));\nexport { ModBlock };\nRegisterClass(\"BABYLON.ModBlock\", ModBlock);\n//# sourceMappingURL=modBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Operations supported by the ConditionalBlock block\n */\nexport var ConditionalBlockConditions;\n(function (ConditionalBlockConditions) {\n    /** Equal */\n    ConditionalBlockConditions[ConditionalBlockConditions[\"Equal\"] = 0] = \"Equal\";\n    /** NotEqual */\n    ConditionalBlockConditions[ConditionalBlockConditions[\"NotEqual\"] = 1] = \"NotEqual\";\n    /** LessThan */\n    ConditionalBlockConditions[ConditionalBlockConditions[\"LessThan\"] = 2] = \"LessThan\";\n    /** GreaterThan */\n    ConditionalBlockConditions[ConditionalBlockConditions[\"GreaterThan\"] = 3] = \"GreaterThan\";\n    /** LessOrEqual */\n    ConditionalBlockConditions[ConditionalBlockConditions[\"LessOrEqual\"] = 4] = \"LessOrEqual\";\n    /** GreaterOrEqual */\n    ConditionalBlockConditions[ConditionalBlockConditions[\"GreaterOrEqual\"] = 5] = \"GreaterOrEqual\";\n    /** Logical Exclusive OR */\n    ConditionalBlockConditions[ConditionalBlockConditions[\"Xor\"] = 6] = \"Xor\";\n    /** Logical Or */\n    ConditionalBlockConditions[ConditionalBlockConditions[\"Or\"] = 7] = \"Or\";\n    /** Logical And */\n    ConditionalBlockConditions[ConditionalBlockConditions[\"And\"] = 8] = \"And\";\n})(ConditionalBlockConditions || (ConditionalBlockConditions = {}));\n/**\n * Block used to apply conditional operation between floats\n * @since 5.0.0\n */\nvar ConditionalBlock = /** @class */ (function (_super) {\n    __extends(ConditionalBlock, _super);\n    /**\n     * Creates a new ConditionalBlock\n     * @param name defines the block name\n     */\n    function ConditionalBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        /**\n         * Gets or sets the condition applied by the block\n         */\n        _this.condition = ConditionalBlockConditions.LessThan;\n        _this.registerInput(\"a\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerInput(\"b\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerInput(\"true\", NodeMaterialBlockConnectionPointTypes.AutoDetect, true);\n        _this.registerInput(\"false\", NodeMaterialBlockConnectionPointTypes.AutoDetect, true);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._linkConnectionTypes(2, 3);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[2];\n        _this._outputs[0]._defaultConnectionPointType = NodeMaterialBlockConnectionPointTypes.Float;\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    ConditionalBlock.prototype.getClassName = function () {\n        return \"ConditionalBlock\";\n    };\n    Object.defineProperty(ConditionalBlock.prototype, \"a\", {\n        /**\n         * Gets the first operand component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ConditionalBlock.prototype, \"b\", {\n        /**\n         * Gets the second operand component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ConditionalBlock.prototype, \"true\", {\n        /**\n         * Gets the value to return if condition is true\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ConditionalBlock.prototype, \"false\", {\n        /**\n         * Gets the value to return if condition is false\n         */\n        get: function () {\n            return this._inputs[3];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ConditionalBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ConditionalBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        var trueStatement = this.true.isConnected ? this.true.associatedVariableName : \"1.0\";\n        var falseStatement = this.false.isConnected ? this.false.associatedVariableName : \"0.0\";\n        switch (this.condition) {\n            case ConditionalBlockConditions.Equal: {\n                state.compilationString +=\n                    this._declareOutput(output, state) + \" = \".concat(this.a.associatedVariableName, \" == \").concat(this.b.associatedVariableName, \" ? \").concat(trueStatement, \" : \").concat(falseStatement, \";\\r\\n\");\n                break;\n            }\n            case ConditionalBlockConditions.NotEqual: {\n                state.compilationString +=\n                    this._declareOutput(output, state) + \" = \".concat(this.a.associatedVariableName, \" != \").concat(this.b.associatedVariableName, \" ? \").concat(trueStatement, \" : \").concat(falseStatement, \";\\r\\n\");\n                break;\n            }\n            case ConditionalBlockConditions.LessThan: {\n                state.compilationString +=\n                    this._declareOutput(output, state) + \" = \".concat(this.a.associatedVariableName, \" < \").concat(this.b.associatedVariableName, \" ? \").concat(trueStatement, \" : \").concat(falseStatement, \";\\r\\n\");\n                break;\n            }\n            case ConditionalBlockConditions.LessOrEqual: {\n                state.compilationString +=\n                    this._declareOutput(output, state) + \" = \".concat(this.a.associatedVariableName, \" <= \").concat(this.b.associatedVariableName, \" ? \").concat(trueStatement, \" : \").concat(falseStatement, \";\\r\\n\");\n                break;\n            }\n            case ConditionalBlockConditions.GreaterThan: {\n                state.compilationString +=\n                    this._declareOutput(output, state) + \" = \".concat(this.a.associatedVariableName, \" > \").concat(this.b.associatedVariableName, \" ? \").concat(trueStatement, \" : \").concat(falseStatement, \";\\r\\n\");\n                break;\n            }\n            case ConditionalBlockConditions.GreaterOrEqual: {\n                state.compilationString +=\n                    this._declareOutput(output, state) + \" = \".concat(this.a.associatedVariableName, \" >= \").concat(this.b.associatedVariableName, \" ? \").concat(trueStatement, \" : \").concat(falseStatement, \";\\r\\n\");\n                break;\n            }\n            case ConditionalBlockConditions.Xor: {\n                state.compilationString +=\n                    this._declareOutput(output, state) +\n                        \" = (mod(\".concat(this.a.associatedVariableName, \" + \").concat(this.b.associatedVariableName, \", 2.0) > 0.0) ? \").concat(trueStatement, \" : \").concat(falseStatement, \";\\r\\n\");\n                break;\n            }\n            case ConditionalBlockConditions.Or: {\n                state.compilationString +=\n                    this._declareOutput(output, state) +\n                        \" = (min(\".concat(this.a.associatedVariableName, \" + \").concat(this.b.associatedVariableName, \", 1.0) > 0.0) ? \").concat(trueStatement, \" : \").concat(falseStatement, \";\\r\\n\");\n                break;\n            }\n            case ConditionalBlockConditions.And: {\n                state.compilationString +=\n                    this._declareOutput(output, state) +\n                        \" = (\".concat(this.a.associatedVariableName, \" * \").concat(this.b.associatedVariableName, \" > 0.0)  ? \").concat(trueStatement, \" : \").concat(falseStatement, \";\\r\\n\");\n                break;\n            }\n        }\n        return this;\n    };\n    ConditionalBlock.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.condition = this.condition;\n        return serializationObject;\n    };\n    ConditionalBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n        _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n        this.condition = serializationObject.condition;\n    };\n    ConditionalBlock.prototype._dumpPropertiesCode = function () {\n        var codeString = _super.prototype._dumpPropertiesCode.call(this) + \"\".concat(this._codeVariableName, \".condition = BABYLON.ConditionalBlockConditions.\").concat(ConditionalBlockConditions[this.condition], \";\\r\\n\");\n        return codeString;\n    };\n    return ConditionalBlock;\n}(NodeMaterialBlock));\nexport { ConditionalBlock };\nRegisterClass(\"BABYLON.ConditionalBlock\", ConditionalBlock);\n//# sourceMappingURL=conditionalBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\nimport { InputBlock } from \"./Input/inputBlock.js\";\nimport { Vector4 } from \"../../../Maths/math.vector.js\";\n/**\n * Block used to build a matrix from 4 Vector4\n */\nvar MatrixBuilderBlock = /** @class */ (function (_super) {\n    __extends(MatrixBuilderBlock, _super);\n    /**\n     * Creates a new MatrixBuilder\n     * @param name defines the block name\n     */\n    function MatrixBuilderBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"row0\", NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this.registerInput(\"row1\", NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this.registerInput(\"row2\", NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this.registerInput(\"row3\", NodeMaterialBlockConnectionPointTypes.Vector4);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Matrix);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    MatrixBuilderBlock.prototype.getClassName = function () {\n        return \"MatrixBuilder\";\n    };\n    Object.defineProperty(MatrixBuilderBlock.prototype, \"row0\", {\n        /**\n         * Gets the row0 vector\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MatrixBuilderBlock.prototype, \"row1\", {\n        /**\n         * Gets the row1 vector\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MatrixBuilderBlock.prototype, \"row2\", {\n        /**\n         * Gets the row2 vector\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MatrixBuilderBlock.prototype, \"row3\", {\n        /**\n         * Gets the row3 vector\n         */\n        get: function () {\n            return this._inputs[3];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MatrixBuilderBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MatrixBuilderBlock.prototype.autoConfigure = function () {\n        if (!this.row0.isConnected) {\n            var row0Input = new InputBlock(\"row0\");\n            row0Input.value = new Vector4(1, 0, 0, 0);\n            row0Input.output.connectTo(this.row0);\n        }\n        if (!this.row1.isConnected) {\n            var row1Input = new InputBlock(\"row1\");\n            row1Input.value = new Vector4(0, 1, 0, 0);\n            row1Input.output.connectTo(this.row1);\n        }\n        if (!this.row2.isConnected) {\n            var row2Input = new InputBlock(\"row2\");\n            row2Input.value = new Vector4(0, 0, 1, 0);\n            row2Input.output.connectTo(this.row2);\n        }\n        if (!this.row3.isConnected) {\n            var row3Input = new InputBlock(\"row3\");\n            row3Input.value = new Vector4(0, 0, 0, 1);\n            row3Input.output.connectTo(this.row3);\n        }\n    };\n    MatrixBuilderBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        var row0 = this.row0;\n        var row1 = this.row1;\n        var row2 = this.row2;\n        var row3 = this.row3;\n        state.compilationString +=\n            this._declareOutput(output, state) +\n                \" = mat4(\".concat(row0.associatedVariableName, \", \").concat(row1.associatedVariableName, \", \").concat(row2.associatedVariableName, \", \").concat(row3.associatedVariableName, \");\\r\\n\");\n        return this;\n    };\n    return MatrixBuilderBlock;\n}(NodeMaterialBlock));\nexport { MatrixBuilderBlock };\nRegisterClass(\"BABYLON.MatrixBuilder\", MatrixBuilderBlock);\n//# sourceMappingURL=matrixBuilderBlock.js.map","import { __decorate, __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\nimport { editableInPropertyPage, PropertyTypeForEdition } from \"../nodeMaterialDecorator.js\";\n/**\n * block used to Generate Fractal Brownian Motion Clouds\n */\nvar CloudBlock = /** @class */ (function (_super) {\n    __extends(CloudBlock, _super);\n    /**\n     * Creates a new CloudBlock\n     * @param name defines the block name\n     */\n    function CloudBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        /** Gets or sets the number of octaves */\n        _this.octaves = 6.0;\n        _this.registerInput(\"seed\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerInput(\"chaos\", NodeMaterialBlockConnectionPointTypes.AutoDetect, true);\n        _this.registerInput(\"offsetX\", NodeMaterialBlockConnectionPointTypes.Float, true);\n        _this.registerInput(\"offsetY\", NodeMaterialBlockConnectionPointTypes.Float, true);\n        _this.registerInput(\"offsetZ\", NodeMaterialBlockConnectionPointTypes.Float, true);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector2);\n        _this._inputs[0].acceptedConnectionPointTypes.push(NodeMaterialBlockConnectionPointTypes.Vector3);\n        _this._linkConnectionTypes(0, 1);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    CloudBlock.prototype.getClassName = function () {\n        return \"CloudBlock\";\n    };\n    Object.defineProperty(CloudBlock.prototype, \"seed\", {\n        /**\n         * Gets the seed input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CloudBlock.prototype, \"chaos\", {\n        /**\n         * Gets the chaos input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CloudBlock.prototype, \"offsetX\", {\n        /**\n         * Gets the offset X input component\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CloudBlock.prototype, \"offsetY\", {\n        /**\n         * Gets the offset Y input component\n         */\n        get: function () {\n            return this._inputs[3];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CloudBlock.prototype, \"offsetZ\", {\n        /**\n         * Gets the offset Z input component\n         */\n        get: function () {\n            return this._inputs[4];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CloudBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CloudBlock.prototype._buildBlock = function (state) {\n        var _a, _b;\n        _super.prototype._buildBlock.call(this, state);\n        if (!this.seed.isConnected) {\n            return;\n        }\n        if (!this._outputs[0].hasEndpoints) {\n            return;\n        }\n        var functionString = \"\\n\\n        float cloudRandom(in float p) { p = fract(p * 0.011); p *= p + 7.5; p *= p + p; return fract(p); }\\n\\n        // Based on Morgan McGuire @morgan3d\\n        // https://www.shadertoy.com/view/4dS3Wd\\n        float cloudNoise(in vec2 x, in vec2 chaos) {\\n            vec2 step = chaos * vec2(75., 120.) + vec2(75., 120.);\\n\\n            vec2 i = floor(x);\\n            vec2 f = fract(x);\\n\\n            float n = dot(i, step);\\n\\n            vec2 u = f * f * (3.0 - 2.0 * f);\\n            return mix(\\n                    mix(cloudRandom(n + dot(step, vec2(0, 0))), cloudRandom(n + dot(step, vec2(1, 0))), u.x),\\n                    mix(cloudRandom(n + dot(step, vec2(0, 1))), cloudRandom(n + dot(step, vec2(1, 1))), u.x),\\n                    u.y\\n                );\\n        }\\n\\n        float cloudNoise(in vec3 x, in vec3 chaos) {\\n            vec3 step = chaos * vec3(60., 120., 75.) + vec3(60., 120., 75.);\\n\\n            vec3 i = floor(x);\\n            vec3 f = fract(x);\\n\\n            float n = dot(i, step);\\n\\n            vec3 u = f * f * (3.0 - 2.0 * f);\\n            return mix(mix(mix( cloudRandom(n + dot(step, vec3(0, 0, 0))), cloudRandom(n + dot(step, vec3(1, 0, 0))), u.x),\\n                           mix( cloudRandom(n + dot(step, vec3(0, 1, 0))), cloudRandom(n + dot(step, vec3(1, 1, 0))), u.x), u.y),\\n                       mix(mix( cloudRandom(n + dot(step, vec3(0, 0, 1))), cloudRandom(n + dot(step, vec3(1, 0, 1))), u.x),\\n                           mix( cloudRandom(n + dot(step, vec3(0, 1, 1))), cloudRandom(n + dot(step, vec3(1, 1, 1))), u.x), u.y), u.z);\\n        }\";\n        var fractalBrownianString = \"\\n        float fbm(in vec2 st, in vec2 chaos) {\\n            // Initial values\\n            float value = 0.0;\\n            float amplitude = .5;\\n            float frequency = 0.;\\n\\n            // Loop of octaves\\n            for (int i = 0; i < OCTAVES; i++) {\\n                value += amplitude * cloudNoise(st, chaos);\\n                st *= 2.0;\\n                amplitude *= 0.5;\\n            }\\n            return value;\\n        }\\n\\n        float fbm(in vec3 x, in vec3 chaos) {\\n            // Initial values\\n            float value = 0.0;\\n            float amplitude = 0.5;\\n            for (int i = 0; i < OCTAVES; ++i) {\\n                value += amplitude * cloudNoise(x, chaos);\\n                x = x * 2.0;\\n                amplitude *= 0.5;\\n            }\\n            return value;\\n        }\";\n        var fbmNewName = \"fbm\".concat(this.octaves);\n        state._emitFunction(\"CloudBlockCode\", functionString, \"// CloudBlockCode\");\n        state._emitFunction(\"CloudBlockCodeFBM\" + this.octaves, fractalBrownianString.replace(/fbm/gi, fbmNewName).replace(/OCTAVES/gi, (this.octaves | 0).toString()), \"// CloudBlockCode FBM\");\n        var localVariable = state._getFreeVariableName(\"st\");\n        var seedType = ((_a = this.seed.connectedPoint) === null || _a === void 0 ? void 0 : _a.type) === NodeMaterialBlockConnectionPointTypes.Vector2 ? \"vec2\" : \"vec3\";\n        state.compilationString += \"\".concat(seedType, \" \").concat(localVariable, \" = \").concat(this.seed.associatedVariableName, \";\\r\\n\");\n        if (this.offsetX.isConnected) {\n            state.compilationString += \"\".concat(localVariable, \".x += 0.1 * \").concat(this.offsetX.associatedVariableName, \";\\r\\n\");\n        }\n        if (this.offsetY.isConnected) {\n            state.compilationString += \"\".concat(localVariable, \".y += 0.1 * \").concat(this.offsetY.associatedVariableName, \";\\r\\n\");\n        }\n        if (this.offsetZ.isConnected && seedType === \"vec3\") {\n            state.compilationString += \"\".concat(localVariable, \".z += 0.1 * \").concat(this.offsetZ.associatedVariableName, \";\\r\\n\");\n        }\n        var chaosValue = \"\";\n        if (this.chaos.isConnected) {\n            chaosValue = this.chaos.associatedVariableName;\n        }\n        else {\n            chaosValue = ((_b = this.seed.connectedPoint) === null || _b === void 0 ? void 0 : _b.type) === NodeMaterialBlockConnectionPointTypes.Vector2 ? \"vec2(0., 0.)\" : \"vec3(0., 0., 0.)\";\n        }\n        state.compilationString += this._declareOutput(this._outputs[0], state) + \" = \".concat(fbmNewName, \"(\").concat(localVariable, \", \").concat(chaosValue, \");\\r\\n\");\n        return this;\n    };\n    CloudBlock.prototype._dumpPropertiesCode = function () {\n        var codeString = _super.prototype._dumpPropertiesCode.call(this) + \"\".concat(this._codeVariableName, \".octaves = \").concat(this.octaves, \";\\r\\n\");\n        return codeString;\n    };\n    CloudBlock.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.octaves = this.octaves;\n        return serializationObject;\n    };\n    CloudBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n        _super.prototype._deserialize.call(this, serializationObject, scene, rootUrl);\n        this.octaves = serializationObject.octaves;\n    };\n    __decorate([\n        editableInPropertyPage(\"Octaves\", PropertyTypeForEdition.Int)\n    ], CloudBlock.prototype, \"octaves\", void 0);\n    return CloudBlock;\n}(NodeMaterialBlock));\nexport { CloudBlock };\nRegisterClass(\"BABYLON.CloudBlock\", CloudBlock);\n//# sourceMappingURL=cloudBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * block used to Generate a Voronoi Noise Pattern\n */\nvar VoronoiNoiseBlock = /** @class */ (function (_super) {\n    __extends(VoronoiNoiseBlock, _super);\n    /**\n     * Creates a new VoronoiNoiseBlock\n     * @param name defines the block name\n     */\n    function VoronoiNoiseBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"seed\", NodeMaterialBlockConnectionPointTypes.Vector2);\n        _this.registerInput(\"offset\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerInput(\"density\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.Float);\n        _this.registerOutput(\"cells\", NodeMaterialBlockConnectionPointTypes.Float);\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    VoronoiNoiseBlock.prototype.getClassName = function () {\n        return \"VoronoiNoiseBlock\";\n    };\n    Object.defineProperty(VoronoiNoiseBlock.prototype, \"seed\", {\n        /**\n         * Gets the seed input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VoronoiNoiseBlock.prototype, \"offset\", {\n        /**\n         * Gets the offset input component\n         */\n        get: function () {\n            return this._inputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VoronoiNoiseBlock.prototype, \"density\", {\n        /**\n         * Gets the density input component\n         */\n        get: function () {\n            return this._inputs[2];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VoronoiNoiseBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(VoronoiNoiseBlock.prototype, \"cells\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[1];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    VoronoiNoiseBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        if (!this.seed.isConnected) {\n            return;\n        }\n        var functionString = \"vec2 voronoiRandom(vec2 seed, float offset){\\n            mat2 m = mat2(15.27, 47.63, 99.41, 89.98);\\n            vec2 uv = fract(sin(m * seed) * 46839.32);\\n            return vec2(sin(uv.y * offset) * 0.5 + 0.5, cos(uv.x * offset) * 0.5 + 0.5);\\n        }\\n        \";\n        state._emitFunction(\"voronoiRandom\", functionString, \"// Voronoi random generator\");\n        functionString = \"void voronoi(vec2 seed, float offset, float density, out float outValue, out float cells){\\n            vec2 g = floor(seed * density);\\n            vec2 f = fract(seed * density);\\n            float t = 8.0;\\n            vec3 res = vec3(8.0, 0.0, 0.0);\\n\\n            for(int y=-1; y<=1; y++)\\n            {\\n                for(int x=-1; x<=1; x++)\\n                {\\n                    vec2 lattice = vec2(x,y);\\n                    vec2 randomOffset = voronoiRandom(lattice + g, offset);\\n                    float d = distance(lattice + randomOffset, f);\\n                    if(d < res.x)\\n                    {\\n                        res = vec3(d, randomOffset.x, randomOffset.y);\\n                        outValue = res.x;\\n                        cells = res.y;\\n                    }\\n                }\\n            }\\n        }\\n        \";\n        state._emitFunction(\"voronoi\", functionString, \"// Voronoi\");\n        var tempOutput = state._getFreeVariableName(\"tempOutput\");\n        var tempCells = state._getFreeVariableName(\"tempCells\");\n        state.compilationString += \"float \".concat(tempOutput, \" = 0.0;\\r\\n\");\n        state.compilationString += \"float \".concat(tempCells, \" = 0.0;\\r\\n\");\n        state.compilationString += \"voronoi(\".concat(this.seed.associatedVariableName, \", \").concat(this.offset.associatedVariableName, \", \").concat(this.density.associatedVariableName, \", \").concat(tempOutput, \", \").concat(tempCells, \");\\r\\n\");\n        if (this.output.hasEndpoints) {\n            state.compilationString += this._declareOutput(this.output, state) + \" = \".concat(tempOutput, \";\\r\\n\");\n        }\n        if (this.cells.hasEndpoints) {\n            state.compilationString += this._declareOutput(this.cells, state) + \" = \".concat(tempCells, \";\\r\\n\");\n        }\n        return this;\n    };\n    return VoronoiNoiseBlock;\n}(NodeMaterialBlock));\nexport { VoronoiNoiseBlock };\nRegisterClass(\"BABYLON.VoronoiNoiseBlock\", VoronoiNoiseBlock);\n//# sourceMappingURL=voronoiNoiseBlock.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialBlock } from \"../nodeMaterialBlock.js\";\nimport { NodeMaterialBlockConnectionPointTypes } from \"../Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"../Enums/nodeMaterialBlockTargets.js\";\nimport { RegisterClass } from \"../../../Misc/typeStore.js\";\n/**\n * Block used as a pass through\n */\nvar ElbowBlock = /** @class */ (function (_super) {\n    __extends(ElbowBlock, _super);\n    /**\n     * Creates a new ElbowBlock\n     * @param name defines the block name\n     */\n    function ElbowBlock(name) {\n        var _this = _super.call(this, name, NodeMaterialBlockTargets.Neutral) || this;\n        _this.registerInput(\"input\", NodeMaterialBlockConnectionPointTypes.AutoDetect);\n        _this.registerOutput(\"output\", NodeMaterialBlockConnectionPointTypes.BasedOnInput);\n        _this._outputs[0]._typeConnectionSource = _this._inputs[0];\n        return _this;\n    }\n    /**\n     * Gets the current class name\n     * @returns the class name\n     */\n    ElbowBlock.prototype.getClassName = function () {\n        return \"ElbowBlock\";\n    };\n    Object.defineProperty(ElbowBlock.prototype, \"input\", {\n        /**\n         * Gets the input component\n         */\n        get: function () {\n            return this._inputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ElbowBlock.prototype, \"output\", {\n        /**\n         * Gets the output component\n         */\n        get: function () {\n            return this._outputs[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ElbowBlock.prototype, \"target\", {\n        /**\n         * Gets or sets the target of the block\n         */\n        get: function () {\n            var input = this._inputs[0];\n            if (input.isConnected) {\n                var block = input.connectedPoint.ownerBlock;\n                // Return vertex if connected to an input node\n                if (block.isInput) {\n                    return NodeMaterialBlockTargets.Vertex;\n                }\n            }\n            return this._target;\n        },\n        set: function (value) {\n            if ((this._target & value) !== 0) {\n                return;\n            }\n            this._target = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ElbowBlock.prototype._buildBlock = function (state) {\n        _super.prototype._buildBlock.call(this, state);\n        var output = this._outputs[0];\n        var input = this._inputs[0];\n        state.compilationString += this._declareOutput(output, state) + \" = \".concat(input.associatedVariableName, \";\\r\\n\");\n        return this;\n    };\n    return ElbowBlock;\n}(NodeMaterialBlock));\nexport { ElbowBlock };\nRegisterClass(\"BABYLON.ElbowBlock\", ElbowBlock);\n//# sourceMappingURL=elbowBlock.js.map","/**\n * Root class for all node material optimizers\n */\nvar NodeMaterialOptimizer = /** @class */ (function () {\n    function NodeMaterialOptimizer() {\n    }\n    /**\n     * Function used to optimize a NodeMaterial graph\n     * @param _vertexOutputNodes defines the list of output nodes for the vertex shader\n     * @param _fragmentOutputNodes defines the list of output nodes for the fragment shader\n     */\n    NodeMaterialOptimizer.prototype.optimize = function (_vertexOutputNodes, _fragmentOutputNodes) {\n        // Do nothing by default\n    };\n    return NodeMaterialOptimizer;\n}());\nexport { NodeMaterialOptimizer };\n//# sourceMappingURL=nodeMaterialOptimizer.js.map","import { NodeMaterialBlockConnectionPointTypes } from \"./Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"./Enums/nodeMaterialBlockTargets.js\";\nimport { Effect } from \"../effect.js\";\n/**\n * Class used to store node based material build state\n */\nvar NodeMaterialBuildState = /** @class */ (function () {\n    function NodeMaterialBuildState() {\n        /** Gets or sets a boolean indicating if the current state can emit uniform buffers */\n        this.supportUniformBuffers = false;\n        /**\n         * Gets the list of emitted attributes\n         */\n        this.attributes = new Array();\n        /**\n         * Gets the list of emitted uniforms\n         */\n        this.uniforms = new Array();\n        /**\n         * Gets the list of emitted constants\n         */\n        this.constants = new Array();\n        /**\n         * Gets the list of emitted samplers\n         */\n        this.samplers = new Array();\n        /**\n         * Gets the list of emitted functions\n         */\n        this.functions = {};\n        /**\n         * Gets the list of emitted extensions\n         */\n        this.extensions = {};\n        /**\n         * Gets the list of emitted counters\n         */\n        this.counters = {};\n        /** @hidden */\n        this._attributeDeclaration = \"\";\n        /** @hidden */\n        this._uniformDeclaration = \"\";\n        /** @hidden */\n        this._constantDeclaration = \"\";\n        /** @hidden */\n        this._samplerDeclaration = \"\";\n        /** @hidden */\n        this._varyingTransfer = \"\";\n        /** @hidden */\n        this._injectAtEnd = \"\";\n        this._repeatableContentAnchorIndex = 0;\n        /** @hidden */\n        this._builtCompilationString = \"\";\n        /**\n         * Gets the emitted compilation strings\n         */\n        this.compilationString = \"\";\n    }\n    /**\n     * Finalize the compilation strings\n     * @param state defines the current compilation state\n     */\n    NodeMaterialBuildState.prototype.finalize = function (state) {\n        var emitComments = state.sharedData.emitComments;\n        var isFragmentMode = this.target === NodeMaterialBlockTargets.Fragment;\n        this.compilationString = \"\\r\\n\".concat(emitComments ? \"//Entry point\\r\\n\" : \"\", \"void main(void) {\\r\\n\").concat(this.compilationString);\n        if (this._constantDeclaration) {\n            this.compilationString = \"\\r\\n\".concat(emitComments ? \"//Constants\\r\\n\" : \"\").concat(this._constantDeclaration, \"\\r\\n\").concat(this.compilationString);\n        }\n        var functionCode = \"\";\n        for (var functionName in this.functions) {\n            functionCode += this.functions[functionName] + \"\\r\\n\";\n        }\n        this.compilationString = \"\\r\\n\".concat(functionCode, \"\\r\\n\").concat(this.compilationString);\n        if (!isFragmentMode && this._varyingTransfer) {\n            this.compilationString = \"\".concat(this.compilationString, \"\\r\\n\").concat(this._varyingTransfer);\n        }\n        if (this._injectAtEnd) {\n            this.compilationString = \"\".concat(this.compilationString, \"\\r\\n\").concat(this._injectAtEnd);\n        }\n        this.compilationString = \"\".concat(this.compilationString, \"\\r\\n}\");\n        if (this.sharedData.varyingDeclaration) {\n            this.compilationString = \"\\r\\n\".concat(emitComments ? \"//Varyings\\r\\n\" : \"\").concat(this.sharedData.varyingDeclaration, \"\\r\\n\").concat(this.compilationString);\n        }\n        if (this._samplerDeclaration) {\n            this.compilationString = \"\\r\\n\".concat(emitComments ? \"//Samplers\\r\\n\" : \"\").concat(this._samplerDeclaration, \"\\r\\n\").concat(this.compilationString);\n        }\n        if (this._uniformDeclaration) {\n            this.compilationString = \"\\r\\n\".concat(emitComments ? \"//Uniforms\\r\\n\" : \"\").concat(this._uniformDeclaration, \"\\r\\n\").concat(this.compilationString);\n        }\n        if (this._attributeDeclaration && !isFragmentMode) {\n            this.compilationString = \"\\r\\n\".concat(emitComments ? \"//Attributes\\r\\n\" : \"\").concat(this._attributeDeclaration, \"\\r\\n\").concat(this.compilationString);\n        }\n        this.compilationString = \"precision highp float;\\r\\n\" + this.compilationString;\n        for (var extensionName in this.extensions) {\n            var extension = this.extensions[extensionName];\n            this.compilationString = \"\\r\\n\".concat(extension, \"\\r\\n\").concat(this.compilationString);\n        }\n        this._builtCompilationString = this.compilationString;\n    };\n    Object.defineProperty(NodeMaterialBuildState.prototype, \"_repeatableContentAnchor\", {\n        /** @hidden */\n        get: function () {\n            return \"###___ANCHOR\".concat(this._repeatableContentAnchorIndex++, \"___###\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * @param prefix\n     * @hidden\n     */\n    NodeMaterialBuildState.prototype._getFreeVariableName = function (prefix) {\n        prefix = prefix.replace(/[^a-zA-Z_]+/g, \"\");\n        if (this.sharedData.variableNames[prefix] === undefined) {\n            this.sharedData.variableNames[prefix] = 0;\n            // Check reserved words\n            if (prefix === \"output\" || prefix === \"texture\") {\n                return prefix + this.sharedData.variableNames[prefix];\n            }\n            return prefix;\n        }\n        else {\n            this.sharedData.variableNames[prefix]++;\n        }\n        return prefix + this.sharedData.variableNames[prefix];\n    };\n    /**\n     * @param prefix\n     * @hidden\n     */\n    NodeMaterialBuildState.prototype._getFreeDefineName = function (prefix) {\n        if (this.sharedData.defineNames[prefix] === undefined) {\n            this.sharedData.defineNames[prefix] = 0;\n        }\n        else {\n            this.sharedData.defineNames[prefix]++;\n        }\n        return prefix + this.sharedData.defineNames[prefix];\n    };\n    /**\n     * @param name\n     * @hidden\n     */\n    NodeMaterialBuildState.prototype._excludeVariableName = function (name) {\n        this.sharedData.variableNames[name] = 0;\n    };\n    /**\n     * @param name\n     * @hidden\n     */\n    NodeMaterialBuildState.prototype._emit2DSampler = function (name) {\n        if (this.samplers.indexOf(name) < 0) {\n            this._samplerDeclaration += \"uniform sampler2D \".concat(name, \";\\r\\n\");\n            this.samplers.push(name);\n        }\n    };\n    /**\n     * @param type\n     * @hidden\n     */\n    NodeMaterialBuildState.prototype._getGLType = function (type) {\n        switch (type) {\n            case NodeMaterialBlockConnectionPointTypes.Float:\n                return \"float\";\n            case NodeMaterialBlockConnectionPointTypes.Int:\n                return \"int\";\n            case NodeMaterialBlockConnectionPointTypes.Vector2:\n                return \"vec2\";\n            case NodeMaterialBlockConnectionPointTypes.Color3:\n            case NodeMaterialBlockConnectionPointTypes.Vector3:\n                return \"vec3\";\n            case NodeMaterialBlockConnectionPointTypes.Color4:\n            case NodeMaterialBlockConnectionPointTypes.Vector4:\n                return \"vec4\";\n            case NodeMaterialBlockConnectionPointTypes.Matrix:\n                return \"mat4\";\n        }\n        return \"\";\n    };\n    /**\n     * @param name\n     * @param extension\n     * @param define\n     * @hidden\n     */\n    NodeMaterialBuildState.prototype._emitExtension = function (name, extension, define) {\n        if (define === void 0) { define = \"\"; }\n        if (this.extensions[name]) {\n            return;\n        }\n        if (define) {\n            extension = \"#if \".concat(define, \"\\r\\n\").concat(extension, \"\\r\\n#endif\");\n        }\n        this.extensions[name] = extension;\n    };\n    /**\n     * @param name\n     * @param code\n     * @param comments\n     * @hidden\n     */\n    NodeMaterialBuildState.prototype._emitFunction = function (name, code, comments) {\n        if (this.functions[name]) {\n            return;\n        }\n        if (this.sharedData.emitComments) {\n            code = comments + \"\\r\\n\" + code;\n        }\n        this.functions[name] = code;\n    };\n    /**\n     * @param includeName\n     * @param comments\n     * @param options\n     * @param options.replaceStrings\n     * @param options.repeatKey\n     * @hidden\n     */\n    NodeMaterialBuildState.prototype._emitCodeFromInclude = function (includeName, comments, options) {\n        if (options && options.repeatKey) {\n            return \"#include<\".concat(includeName, \">[0..\").concat(options.repeatKey, \"]\\r\\n\");\n        }\n        var code = Effect.IncludesShadersStore[includeName] + \"\\r\\n\";\n        if (this.sharedData.emitComments) {\n            code = comments + \"\\r\\n\" + code;\n        }\n        if (!options) {\n            return code;\n        }\n        if (options.replaceStrings) {\n            for (var index = 0; index < options.replaceStrings.length; index++) {\n                var replaceString = options.replaceStrings[index];\n                code = code.replace(replaceString.search, replaceString.replace);\n            }\n        }\n        return code;\n    };\n    /**\n     * @param includeName\n     * @param comments\n     * @param options\n     * @param options.repeatKey\n     * @param options.removeAttributes\n     * @param options.removeUniforms\n     * @param options.removeVaryings\n     * @param options.removeIfDef\n     * @param options.replaceStrings\n     * @param storeKey\n     * @hidden\n     */\n    NodeMaterialBuildState.prototype._emitFunctionFromInclude = function (includeName, comments, options, storeKey) {\n        if (storeKey === void 0) { storeKey = \"\"; }\n        var key = includeName + storeKey;\n        if (this.functions[key]) {\n            return;\n        }\n        if (!options || (!options.removeAttributes && !options.removeUniforms && !options.removeVaryings && !options.removeIfDef && !options.replaceStrings)) {\n            if (options && options.repeatKey) {\n                this.functions[key] = \"#include<\".concat(includeName, \">[0..\").concat(options.repeatKey, \"]\\r\\n\");\n            }\n            else {\n                this.functions[key] = \"#include<\".concat(includeName, \">\\r\\n\");\n            }\n            if (this.sharedData.emitComments) {\n                this.functions[key] = comments + \"\\r\\n\" + this.functions[key];\n            }\n            return;\n        }\n        this.functions[key] = Effect.IncludesShadersStore[includeName];\n        if (this.sharedData.emitComments) {\n            this.functions[key] = comments + \"\\r\\n\" + this.functions[key];\n        }\n        if (options.removeIfDef) {\n            this.functions[key] = this.functions[key].replace(/^\\s*?#ifdef.+$/gm, \"\");\n            this.functions[key] = this.functions[key].replace(/^\\s*?#endif.*$/gm, \"\");\n            this.functions[key] = this.functions[key].replace(/^\\s*?#else.*$/gm, \"\");\n            this.functions[key] = this.functions[key].replace(/^\\s*?#elif.*$/gm, \"\");\n        }\n        if (options.removeAttributes) {\n            this.functions[key] = this.functions[key].replace(/^\\s*?attribute.+$/gm, \"\");\n        }\n        if (options.removeUniforms) {\n            this.functions[key] = this.functions[key].replace(/^\\s*?uniform.+$/gm, \"\");\n        }\n        if (options.removeVaryings) {\n            this.functions[key] = this.functions[key].replace(/^\\s*?varying.+$/gm, \"\");\n        }\n        if (options.replaceStrings) {\n            for (var index = 0; index < options.replaceStrings.length; index++) {\n                var replaceString = options.replaceStrings[index];\n                this.functions[key] = this.functions[key].replace(replaceString.search, replaceString.replace);\n            }\n        }\n    };\n    /**\n     * @param name\n     * @hidden\n     */\n    NodeMaterialBuildState.prototype._registerTempVariable = function (name) {\n        if (this.sharedData.temps.indexOf(name) !== -1) {\n            return false;\n        }\n        this.sharedData.temps.push(name);\n        return true;\n    };\n    /**\n     * @param name\n     * @param type\n     * @param define\n     * @param notDefine\n     * @hidden\n     */\n    NodeMaterialBuildState.prototype._emitVaryingFromString = function (name, type, define, notDefine) {\n        if (define === void 0) { define = \"\"; }\n        if (notDefine === void 0) { notDefine = false; }\n        if (this.sharedData.varyings.indexOf(name) !== -1) {\n            return false;\n        }\n        this.sharedData.varyings.push(name);\n        if (define) {\n            if (define.startsWith(\"defined(\")) {\n                this.sharedData.varyingDeclaration += \"#if \".concat(define, \"\\r\\n\");\n            }\n            else {\n                this.sharedData.varyingDeclaration += \"\".concat(notDefine ? \"#ifndef\" : \"#ifdef\", \" \").concat(define, \"\\r\\n\");\n            }\n        }\n        this.sharedData.varyingDeclaration += \"varying \".concat(type, \" \").concat(name, \";\\r\\n\");\n        if (define) {\n            this.sharedData.varyingDeclaration += \"#endif\\r\\n\";\n        }\n        return true;\n    };\n    /**\n     * @param name\n     * @param type\n     * @param define\n     * @param notDefine\n     * @hidden\n     */\n    NodeMaterialBuildState.prototype._emitUniformFromString = function (name, type, define, notDefine) {\n        if (define === void 0) { define = \"\"; }\n        if (notDefine === void 0) { notDefine = false; }\n        if (this.uniforms.indexOf(name) !== -1) {\n            return;\n        }\n        this.uniforms.push(name);\n        if (define) {\n            if (define.startsWith(\"defined(\")) {\n                this._uniformDeclaration += \"#if \".concat(define, \"\\r\\n\");\n            }\n            else {\n                this._uniformDeclaration += \"\".concat(notDefine ? \"#ifndef\" : \"#ifdef\", \" \").concat(define, \"\\r\\n\");\n            }\n        }\n        this._uniformDeclaration += \"uniform \".concat(type, \" \").concat(name, \";\\r\\n\");\n        if (define) {\n            this._uniformDeclaration += \"#endif\\r\\n\";\n        }\n    };\n    /**\n     * @param value\n     * @hidden\n     */\n    NodeMaterialBuildState.prototype._emitFloat = function (value) {\n        if (value.toString() === value.toFixed(0)) {\n            return \"\".concat(value, \".0\");\n        }\n        return value.toString();\n    };\n    return NodeMaterialBuildState;\n}());\nexport { NodeMaterialBuildState };\n//# sourceMappingURL=nodeMaterialBuildState.js.map","/**\n * Class used to store shared data between 2 NodeMaterialBuildState\n */\nvar NodeMaterialBuildStateSharedData = /** @class */ (function () {\n    /** Creates a new shared data */\n    function NodeMaterialBuildStateSharedData() {\n        /**\n         * Gets the list of emitted varyings\n         */\n        this.temps = new Array();\n        /**\n         * Gets the list of emitted varyings\n         */\n        this.varyings = new Array();\n        /**\n         * Gets the varying declaration string\n         */\n        this.varyingDeclaration = \"\";\n        /**\n         * Input blocks\n         */\n        this.inputBlocks = new Array();\n        /**\n         * Input blocks\n         */\n        this.textureBlocks = new Array();\n        /**\n         * Bindable blocks (Blocks that need to set data to the effect)\n         */\n        this.bindableBlocks = new Array();\n        /**\n         * Bindable blocks (Blocks that need to set data to the effect) that will always be called (by bindForSubMesh), contrary to bindableBlocks that won't be called if _mustRebind() returns false\n         */\n        this.forcedBindableBlocks = new Array();\n        /**\n         * List of blocks that can provide a compilation fallback\n         */\n        this.blocksWithFallbacks = new Array();\n        /**\n         * List of blocks that can provide a define update\n         */\n        this.blocksWithDefines = new Array();\n        /**\n         * List of blocks that can provide a repeatable content\n         */\n        this.repeatableContentBlocks = new Array();\n        /**\n         * List of blocks that can provide a dynamic list of uniforms\n         */\n        this.dynamicUniformBlocks = new Array();\n        /**\n         * List of blocks that can block the isReady function for the material\n         */\n        this.blockingBlocks = new Array();\n        /**\n         * Gets the list of animated inputs\n         */\n        this.animatedInputs = new Array();\n        /** List of emitted variables */\n        this.variableNames = {};\n        /** List of emitted defines */\n        this.defineNames = {};\n        /**\n         * Gets the compilation hints emitted at compilation time\n         */\n        this.hints = {\n            needWorldViewMatrix: false,\n            needWorldViewProjectionMatrix: false,\n            needAlphaBlending: false,\n            needAlphaTesting: false,\n        };\n        /**\n         * List of compilation checks\n         */\n        this.checks = {\n            emitVertex: false,\n            emitFragment: false,\n            notConnectedNonOptionalInputs: new Array(),\n        };\n        /**\n         * Is vertex program allowed to be empty?\n         */\n        this.allowEmptyVertexProgram = false;\n        // Exclude usual attributes from free variable names\n        this.variableNames[\"position\"] = 0;\n        this.variableNames[\"normal\"] = 0;\n        this.variableNames[\"tangent\"] = 0;\n        this.variableNames[\"uv\"] = 0;\n        this.variableNames[\"uv2\"] = 0;\n        this.variableNames[\"uv3\"] = 0;\n        this.variableNames[\"uv4\"] = 0;\n        this.variableNames[\"uv5\"] = 0;\n        this.variableNames[\"uv6\"] = 0;\n        this.variableNames[\"color\"] = 0;\n        this.variableNames[\"matricesIndices\"] = 0;\n        this.variableNames[\"matricesWeights\"] = 0;\n        this.variableNames[\"matricesIndicesExtra\"] = 0;\n        this.variableNames[\"matricesWeightsExtra\"] = 0;\n        this.variableNames[\"diffuseBase\"] = 0;\n        this.variableNames[\"specularBase\"] = 0;\n        this.variableNames[\"worldPos\"] = 0;\n        this.variableNames[\"shadow\"] = 0;\n        this.variableNames[\"view\"] = 0;\n        // Exclude known varyings\n        this.variableNames[\"vTBN\"] = 0;\n        // Exclude defines\n        this.defineNames[\"MAINUV0\"] = 0;\n        this.defineNames[\"MAINUV1\"] = 0;\n        this.defineNames[\"MAINUV2\"] = 0;\n        this.defineNames[\"MAINUV3\"] = 0;\n        this.defineNames[\"MAINUV4\"] = 0;\n        this.defineNames[\"MAINUV5\"] = 0;\n        this.defineNames[\"MAINUV6\"] = 0;\n        this.defineNames[\"MAINUV7\"] = 0;\n    }\n    /**\n     * Emits console errors and exceptions if there is a failing check\n     */\n    NodeMaterialBuildStateSharedData.prototype.emitErrors = function () {\n        var errorMessage = \"\";\n        if (!this.checks.emitVertex && !this.allowEmptyVertexProgram) {\n            errorMessage += \"NodeMaterial does not have a vertex output. You need to at least add a block that generates a glPosition value.\\r\\n\";\n        }\n        if (!this.checks.emitFragment) {\n            errorMessage += \"NodeMaterial does not have a fragment output. You need to at least add a block that generates a glFragColor value.\\r\\n\";\n        }\n        for (var _i = 0, _a = this.checks.notConnectedNonOptionalInputs; _i < _a.length; _i++) {\n            var notConnectedInput = _a[_i];\n            errorMessage += \"input \".concat(notConnectedInput.name, \" from block \").concat(notConnectedInput.ownerBlock.name, \"[\").concat(notConnectedInput.ownerBlock.getClassName(), \"] is not connected and is not optional.\\r\\n\");\n        }\n        if (errorMessage) {\n            throw \"Build of NodeMaterial failed:\\r\\n\" + errorMessage;\n        }\n    };\n    return NodeMaterialBuildStateSharedData;\n}());\nexport { NodeMaterialBuildStateSharedData };\n//# sourceMappingURL=nodeMaterialBuildStateSharedData.js.map","import { __assign, __decorate, __extends } from \"tslib\";\nimport { PushMaterial } from \"../pushMaterial.js\";\nimport { AbstractMesh } from \"../../Meshes/abstractMesh.js\";\nimport { Matrix, Vector2 } from \"../../Maths/math.vector.js\";\nimport { Color3, Color4 } from \"../../Maths/math.color.js\";\nimport { Engine } from \"../../Engines/engine.js\";\nimport { NodeMaterialBuildState } from \"./nodeMaterialBuildState.js\";\nimport { Effect } from \"../effect.js\";\nimport { Observable } from \"../../Misc/observable.js\";\nimport { NodeMaterialBlockTargets } from \"./Enums/nodeMaterialBlockTargets.js\";\nimport { NodeMaterialBuildStateSharedData } from \"./nodeMaterialBuildStateSharedData.js\";\nimport { MaterialDefines } from \"../../Materials/materialDefines.js\";\nimport { VertexBuffer } from \"../../Buffers/buffer.js\";\nimport { Tools } from \"../../Misc/tools.js\";\nimport { TransformBlock } from \"./Blocks/transformBlock.js\";\nimport { VertexOutputBlock } from \"./Blocks/Vertex/vertexOutputBlock.js\";\nimport { FragmentOutputBlock } from \"./Blocks/Fragment/fragmentOutputBlock.js\";\nimport { InputBlock } from \"./Blocks/Input/inputBlock.js\";\nimport { GetClass, RegisterClass } from \"../../Misc/typeStore.js\";\nimport { serialize, SerializationHelper } from \"../../Misc/decorators.js\";\nimport { CurrentScreenBlock } from \"./Blocks/Dual/currentScreenBlock.js\";\nimport { ParticleTextureBlock } from \"./Blocks/Particle/particleTextureBlock.js\";\nimport { ParticleRampGradientBlock } from \"./Blocks/Particle/particleRampGradientBlock.js\";\nimport { ParticleBlendMultiplyBlock } from \"./Blocks/Particle/particleBlendMultiplyBlock.js\";\nimport { EffectFallbacks } from \"../effectFallbacks.js\";\nimport { WebRequest } from \"../../Misc/webRequest.js\";\nimport { PostProcess } from \"../../PostProcesses/postProcess.js\";\n\nimport { VectorMergerBlock } from \"./Blocks/vectorMergerBlock.js\";\nimport { RemapBlock } from \"./Blocks/remapBlock.js\";\nimport { MultiplyBlock } from \"./Blocks/multiplyBlock.js\";\nimport { NodeMaterialModes } from \"./Enums/nodeMaterialModes.js\";\nimport { Texture } from \"../Textures/texture.js\";\nimport { BaseParticleSystem } from \"../../Particles/baseParticleSystem.js\";\nimport { ColorSplitterBlock } from \"./Blocks/colorSplitterBlock.js\";\nimport { TimingTools } from \"../../Misc/timingTools.js\";\nimport { ProceduralTexture } from \"../Textures/Procedurals/proceduralTexture.js\";\nimport { AnimatedInputBlockTypes } from \"./Blocks/Input/animatedInputBlockTypes.js\";\nimport { TrigonometryBlock, TrigonometryBlockOperations } from \"./Blocks/trigonometryBlock.js\";\nimport { NodeMaterialSystemValues } from \"./Enums/nodeMaterialSystemValues.js\";\nimport { EngineStore } from \"../../Engines/engineStore.js\";\nvar onCreatedEffectParameters = { effect: null, subMesh: null };\n/** @hidden */\nvar NodeMaterialDefines = /** @class */ (function (_super) {\n    __extends(NodeMaterialDefines, _super);\n    function NodeMaterialDefines() {\n        var _this = _super.call(this) || this;\n        _this.NORMAL = false;\n        _this.TANGENT = false;\n        _this.UV1 = false;\n        _this.UV2 = false;\n        _this.UV3 = false;\n        _this.UV4 = false;\n        _this.UV5 = false;\n        _this.UV6 = false;\n        /** BONES */\n        _this.NUM_BONE_INFLUENCERS = 0;\n        _this.BonesPerMesh = 0;\n        _this.BONETEXTURE = false;\n        /** MORPH TARGETS */\n        _this.MORPHTARGETS = false;\n        _this.MORPHTARGETS_NORMAL = false;\n        _this.MORPHTARGETS_TANGENT = false;\n        _this.MORPHTARGETS_UV = false;\n        _this.NUM_MORPH_INFLUENCERS = 0;\n        _this.MORPHTARGETS_TEXTURE = false;\n        /** IMAGE PROCESSING */\n        _this.IMAGEPROCESSING = false;\n        _this.VIGNETTE = false;\n        _this.VIGNETTEBLENDMODEMULTIPLY = false;\n        _this.VIGNETTEBLENDMODEOPAQUE = false;\n        _this.TONEMAPPING = false;\n        _this.TONEMAPPING_ACES = false;\n        _this.CONTRAST = false;\n        _this.EXPOSURE = false;\n        _this.COLORCURVES = false;\n        _this.COLORGRADING = false;\n        _this.COLORGRADING3D = false;\n        _this.SAMPLER3DGREENDEPTH = false;\n        _this.SAMPLER3DBGRMAP = false;\n        _this.IMAGEPROCESSINGPOSTPROCESS = false;\n        _this.SKIPFINALCOLORCLAMP = false;\n        /** MISC. */\n        _this.BUMPDIRECTUV = 0;\n        _this.rebuild();\n        return _this;\n    }\n    NodeMaterialDefines.prototype.setValue = function (name, value, markAsUnprocessedIfDirty) {\n        if (markAsUnprocessedIfDirty === void 0) { markAsUnprocessedIfDirty = false; }\n        if (this[name] === undefined) {\n            this._keys.push(name);\n        }\n        if (markAsUnprocessedIfDirty && this[name] !== value) {\n            this.markAsUnprocessed();\n        }\n        this[name] = value;\n    };\n    return NodeMaterialDefines;\n}(MaterialDefines));\nexport { NodeMaterialDefines };\n/**\n * Class used to create a node based material built by assembling shader blocks\n */\nvar NodeMaterial = /** @class */ (function (_super) {\n    __extends(NodeMaterial, _super);\n    /**\n     * Create a new node based material\n     * @param name defines the material name\n     * @param scene defines the hosting scene\n     * @param options defines creation option\n     */\n    function NodeMaterial(name, scene, options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, name, scene || EngineStore.LastCreatedScene) || this;\n        _this._buildId = NodeMaterial._BuildIdGenerator++;\n        _this._buildWasSuccessful = false;\n        _this._cachedWorldViewMatrix = new Matrix();\n        _this._cachedWorldViewProjectionMatrix = new Matrix();\n        _this._optimizers = new Array();\n        _this._animationFrame = -1;\n        _this.BJSNODEMATERIALEDITOR = _this._getGlobalNodeMaterialEditor();\n        /**\n         * Gets or sets data used by visual editor\n         * @see https://nme.babylonjs.com\n         */\n        _this.editorData = null;\n        /**\n         * Gets or sets a boolean indicating that alpha value must be ignored (This will turn alpha blending off even if an alpha value is produced by the material)\n         */\n        _this.ignoreAlpha = false;\n        /**\n         * Defines the maximum number of lights that can be used in the material\n         */\n        _this.maxSimultaneousLights = 4;\n        /**\n         * Observable raised when the material is built\n         */\n        _this.onBuildObservable = new Observable();\n        /**\n         * Gets or sets the root nodes of the material vertex shader\n         */\n        _this._vertexOutputNodes = new Array();\n        /**\n         * Gets or sets the root nodes of the material fragment (pixel) shader\n         */\n        _this._fragmentOutputNodes = new Array();\n        /**\n         * Gets an array of blocks that needs to be serialized even if they are not yet connected\n         */\n        _this.attachedBlocks = new Array();\n        /**\n         * Specifies the mode of the node material\n         * @hidden\n         */\n        _this._mode = NodeMaterialModes.Material;\n        /**\n         * Gets or sets a boolean indicating that alpha blending must be enabled no matter what alpha value or alpha channel of the FragmentBlock are\n         */\n        _this.forceAlphaBlending = false;\n        _this._options = __assign({ emitComments: false }, options);\n        // Setup the default processing configuration to the scene.\n        _this._attachImageProcessingConfiguration(null);\n        return _this;\n    }\n    /** Get the inspector from bundle or global */\n    NodeMaterial.prototype._getGlobalNodeMaterialEditor = function () {\n        // UMD Global name detection from Webpack Bundle UMD Name.\n        if (typeof NODEEDITOR !== \"undefined\") {\n            return NODEEDITOR;\n        }\n        // In case of module let's check the global emitted from the editor entry point.\n        if (typeof BABYLON !== \"undefined\" && typeof BABYLON.NodeEditor !== \"undefined\") {\n            return BABYLON;\n        }\n        return undefined;\n    };\n    Object.defineProperty(NodeMaterial.prototype, \"options\", {\n        /** Gets or sets options to control the node material overall behavior */\n        get: function () {\n            return this._options;\n        },\n        set: function (options) {\n            this._options = options;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterial.prototype, \"imageProcessingConfiguration\", {\n        /**\n         * Gets the image processing configuration used either in this material.\n         */\n        get: function () {\n            return this._imageProcessingConfiguration;\n        },\n        /**\n         * Sets the Default image processing configuration used either in the this material.\n         *\n         * If sets to null, the scene one is in use.\n         */\n        set: function (value) {\n            this._attachImageProcessingConfiguration(value);\n            // Ensure the effect will be rebuilt.\n            this._markAllSubMeshesAsTexturesDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterial.prototype, \"mode\", {\n        /**\n         * Gets or sets the mode property\n         */\n        get: function () {\n            return this._mode;\n        },\n        set: function (value) {\n            this._mode = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterial.prototype, \"buildId\", {\n        /** Gets or sets the unique identifier used to identified the effect associated with the material */\n        get: function () {\n            return this._buildId;\n        },\n        set: function (value) {\n            this._buildId = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Gets the current class name of the material e.g. \"NodeMaterial\"\n     * @returns the class name\n     */\n    NodeMaterial.prototype.getClassName = function () {\n        return \"NodeMaterial\";\n    };\n    /**\n     * Attaches a new image processing configuration to the Standard Material.\n     * @param configuration\n     */\n    NodeMaterial.prototype._attachImageProcessingConfiguration = function (configuration) {\n        var _this = this;\n        if (configuration === this._imageProcessingConfiguration) {\n            return;\n        }\n        // Detaches observer.\n        if (this._imageProcessingConfiguration && this._imageProcessingObserver) {\n            this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver);\n        }\n        // Pick the scene configuration if needed.\n        if (!configuration) {\n            this._imageProcessingConfiguration = this.getScene().imageProcessingConfiguration;\n        }\n        else {\n            this._imageProcessingConfiguration = configuration;\n        }\n        // Attaches observer.\n        if (this._imageProcessingConfiguration) {\n            this._imageProcessingObserver = this._imageProcessingConfiguration.onUpdateParameters.add(function () {\n                _this._markAllSubMeshesAsImageProcessingDirty();\n            });\n        }\n    };\n    /**\n     * Get a block by its name\n     * @param name defines the name of the block to retrieve\n     * @returns the required block or null if not found\n     */\n    NodeMaterial.prototype.getBlockByName = function (name) {\n        var result = null;\n        for (var _i = 0, _a = this.attachedBlocks; _i < _a.length; _i++) {\n            var block = _a[_i];\n            if (block.name === name) {\n                if (!result) {\n                    result = block;\n                }\n                else {\n                    Tools.Warn(\"More than one block was found with the name `\" + name + \"`\");\n                    return result;\n                }\n            }\n        }\n        return result;\n    };\n    /**\n     * Get a block by its name\n     * @param predicate defines the predicate used to find the good candidate\n     * @returns the required block or null if not found\n     */\n    NodeMaterial.prototype.getBlockByPredicate = function (predicate) {\n        for (var _i = 0, _a = this.attachedBlocks; _i < _a.length; _i++) {\n            var block = _a[_i];\n            if (predicate(block)) {\n                return block;\n            }\n        }\n        return null;\n    };\n    /**\n     * Get an input block by its name\n     * @param predicate defines the predicate used to find the good candidate\n     * @returns the required input block or null if not found\n     */\n    NodeMaterial.prototype.getInputBlockByPredicate = function (predicate) {\n        for (var _i = 0, _a = this.attachedBlocks; _i < _a.length; _i++) {\n            var block = _a[_i];\n            if (block.isInput && predicate(block)) {\n                return block;\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets the list of input blocks attached to this material\n     * @returns an array of InputBlocks\n     */\n    NodeMaterial.prototype.getInputBlocks = function () {\n        var blocks = [];\n        for (var _i = 0, _a = this.attachedBlocks; _i < _a.length; _i++) {\n            var block = _a[_i];\n            if (block.isInput) {\n                blocks.push(block);\n            }\n        }\n        return blocks;\n    };\n    /**\n     * Adds a new optimizer to the list of optimizers\n     * @param optimizer defines the optimizers to add\n     * @returns the current material\n     */\n    NodeMaterial.prototype.registerOptimizer = function (optimizer) {\n        var index = this._optimizers.indexOf(optimizer);\n        if (index > -1) {\n            return;\n        }\n        this._optimizers.push(optimizer);\n        return this;\n    };\n    /**\n     * Remove an optimizer from the list of optimizers\n     * @param optimizer defines the optimizers to remove\n     * @returns the current material\n     */\n    NodeMaterial.prototype.unregisterOptimizer = function (optimizer) {\n        var index = this._optimizers.indexOf(optimizer);\n        if (index === -1) {\n            return;\n        }\n        this._optimizers.splice(index, 1);\n        return this;\n    };\n    /**\n     * Add a new block to the list of output nodes\n     * @param node defines the node to add\n     * @returns the current material\n     */\n    NodeMaterial.prototype.addOutputNode = function (node) {\n        if (node.target === null) {\n            throw \"This node is not meant to be an output node. You may want to explicitly set its target value.\";\n        }\n        if ((node.target & NodeMaterialBlockTargets.Vertex) !== 0) {\n            this._addVertexOutputNode(node);\n        }\n        if ((node.target & NodeMaterialBlockTargets.Fragment) !== 0) {\n            this._addFragmentOutputNode(node);\n        }\n        return this;\n    };\n    /**\n     * Remove a block from the list of root nodes\n     * @param node defines the node to remove\n     * @returns the current material\n     */\n    NodeMaterial.prototype.removeOutputNode = function (node) {\n        if (node.target === null) {\n            return this;\n        }\n        if ((node.target & NodeMaterialBlockTargets.Vertex) !== 0) {\n            this._removeVertexOutputNode(node);\n        }\n        if ((node.target & NodeMaterialBlockTargets.Fragment) !== 0) {\n            this._removeFragmentOutputNode(node);\n        }\n        return this;\n    };\n    NodeMaterial.prototype._addVertexOutputNode = function (node) {\n        if (this._vertexOutputNodes.indexOf(node) !== -1) {\n            return;\n        }\n        node.target = NodeMaterialBlockTargets.Vertex;\n        this._vertexOutputNodes.push(node);\n        return this;\n    };\n    NodeMaterial.prototype._removeVertexOutputNode = function (node) {\n        var index = this._vertexOutputNodes.indexOf(node);\n        if (index === -1) {\n            return;\n        }\n        this._vertexOutputNodes.splice(index, 1);\n        return this;\n    };\n    NodeMaterial.prototype._addFragmentOutputNode = function (node) {\n        if (this._fragmentOutputNodes.indexOf(node) !== -1) {\n            return;\n        }\n        node.target = NodeMaterialBlockTargets.Fragment;\n        this._fragmentOutputNodes.push(node);\n        return this;\n    };\n    NodeMaterial.prototype._removeFragmentOutputNode = function (node) {\n        var index = this._fragmentOutputNodes.indexOf(node);\n        if (index === -1) {\n            return;\n        }\n        this._fragmentOutputNodes.splice(index, 1);\n        return this;\n    };\n    /**\n     * Specifies if the material will require alpha blending\n     * @returns a boolean specifying if alpha blending is needed\n     */\n    NodeMaterial.prototype.needAlphaBlending = function () {\n        if (this.ignoreAlpha) {\n            return false;\n        }\n        return this.forceAlphaBlending || this.alpha < 1.0 || (this._sharedData && this._sharedData.hints.needAlphaBlending);\n    };\n    /**\n     * Specifies if this material should be rendered in alpha test mode\n     * @returns a boolean specifying if an alpha test is needed.\n     */\n    NodeMaterial.prototype.needAlphaTesting = function () {\n        return this._sharedData && this._sharedData.hints.needAlphaTesting;\n    };\n    NodeMaterial.prototype._initializeBlock = function (node, state, nodesToProcessForOtherBuildState, autoConfigure) {\n        if (autoConfigure === void 0) { autoConfigure = true; }\n        node.initialize(state);\n        if (autoConfigure) {\n            node.autoConfigure(this);\n        }\n        node._preparationId = this._buildId;\n        if (this.attachedBlocks.indexOf(node) === -1) {\n            if (node.isUnique) {\n                var className = node.getClassName();\n                for (var _i = 0, _a = this.attachedBlocks; _i < _a.length; _i++) {\n                    var other = _a[_i];\n                    if (other.getClassName() === className) {\n                        throw \"Cannot have multiple blocks of type \".concat(className, \" in the same NodeMaterial\");\n                    }\n                }\n            }\n            this.attachedBlocks.push(node);\n        }\n        for (var _b = 0, _c = node.inputs; _b < _c.length; _b++) {\n            var input = _c[_b];\n            input.associatedVariableName = \"\";\n            var connectedPoint = input.connectedPoint;\n            if (connectedPoint) {\n                var block = connectedPoint.ownerBlock;\n                if (block !== node) {\n                    if (block.target === NodeMaterialBlockTargets.VertexAndFragment) {\n                        nodesToProcessForOtherBuildState.push(block);\n                    }\n                    else if (state.target === NodeMaterialBlockTargets.Fragment && block.target === NodeMaterialBlockTargets.Vertex && block._preparationId !== this._buildId) {\n                        nodesToProcessForOtherBuildState.push(block);\n                    }\n                    this._initializeBlock(block, state, nodesToProcessForOtherBuildState, autoConfigure);\n                }\n            }\n        }\n        for (var _d = 0, _e = node.outputs; _d < _e.length; _d++) {\n            var output = _e[_d];\n            output.associatedVariableName = \"\";\n        }\n    };\n    NodeMaterial.prototype._resetDualBlocks = function (node, id) {\n        if (node.target === NodeMaterialBlockTargets.VertexAndFragment) {\n            node.buildId = id;\n        }\n        for (var _i = 0, _a = node.inputs; _i < _a.length; _i++) {\n            var inputs = _a[_i];\n            var connectedPoint = inputs.connectedPoint;\n            if (connectedPoint) {\n                var block = connectedPoint.ownerBlock;\n                if (block !== node) {\n                    this._resetDualBlocks(block, id);\n                }\n            }\n        }\n    };\n    /**\n     * Remove a block from the current node material\n     * @param block defines the block to remove\n     */\n    NodeMaterial.prototype.removeBlock = function (block) {\n        var attachedBlockIndex = this.attachedBlocks.indexOf(block);\n        if (attachedBlockIndex > -1) {\n            this.attachedBlocks.splice(attachedBlockIndex, 1);\n        }\n        if (block.isFinalMerger) {\n            this.removeOutputNode(block);\n        }\n    };\n    /**\n     * Build the material and generates the inner effect\n     * @param verbose defines if the build should log activity\n     * @param updateBuildId defines if the internal build Id should be updated (default is true)\n     * @param autoConfigure defines if the autoConfigure method should be called when initializing blocks (default is true)\n     */\n    NodeMaterial.prototype.build = function (verbose, updateBuildId, autoConfigure) {\n        if (verbose === void 0) { verbose = false; }\n        if (updateBuildId === void 0) { updateBuildId = true; }\n        if (autoConfigure === void 0) { autoConfigure = true; }\n        this._buildWasSuccessful = false;\n        var engine = this.getScene().getEngine();\n        var allowEmptyVertexProgram = this._mode === NodeMaterialModes.Particle;\n        if (this._vertexOutputNodes.length === 0 && !allowEmptyVertexProgram) {\n            throw \"You must define at least one vertexOutputNode\";\n        }\n        if (this._fragmentOutputNodes.length === 0) {\n            throw \"You must define at least one fragmentOutputNode\";\n        }\n        // Compilation state\n        this._vertexCompilationState = new NodeMaterialBuildState();\n        this._vertexCompilationState.supportUniformBuffers = engine.supportsUniformBuffers;\n        this._vertexCompilationState.target = NodeMaterialBlockTargets.Vertex;\n        this._fragmentCompilationState = new NodeMaterialBuildState();\n        this._fragmentCompilationState.supportUniformBuffers = engine.supportsUniformBuffers;\n        this._fragmentCompilationState.target = NodeMaterialBlockTargets.Fragment;\n        // Shared data\n        this._sharedData = new NodeMaterialBuildStateSharedData();\n        this._sharedData.fragmentOutputNodes = this._fragmentOutputNodes;\n        this._vertexCompilationState.sharedData = this._sharedData;\n        this._fragmentCompilationState.sharedData = this._sharedData;\n        this._sharedData.buildId = this._buildId;\n        this._sharedData.emitComments = this._options.emitComments;\n        this._sharedData.verbose = verbose;\n        this._sharedData.scene = this.getScene();\n        this._sharedData.allowEmptyVertexProgram = allowEmptyVertexProgram;\n        // Initialize blocks\n        var vertexNodes = [];\n        var fragmentNodes = [];\n        for (var _i = 0, _a = this._vertexOutputNodes; _i < _a.length; _i++) {\n            var vertexOutputNode = _a[_i];\n            vertexNodes.push(vertexOutputNode);\n            this._initializeBlock(vertexOutputNode, this._vertexCompilationState, fragmentNodes, autoConfigure);\n        }\n        for (var _b = 0, _c = this._fragmentOutputNodes; _b < _c.length; _b++) {\n            var fragmentOutputNode = _c[_b];\n            fragmentNodes.push(fragmentOutputNode);\n            this._initializeBlock(fragmentOutputNode, this._fragmentCompilationState, vertexNodes, autoConfigure);\n        }\n        // Optimize\n        this.optimize();\n        // Vertex\n        for (var _d = 0, vertexNodes_1 = vertexNodes; _d < vertexNodes_1.length; _d++) {\n            var vertexOutputNode = vertexNodes_1[_d];\n            vertexOutputNode.build(this._vertexCompilationState, vertexNodes);\n        }\n        // Fragment\n        this._fragmentCompilationState.uniforms = this._vertexCompilationState.uniforms.slice(0);\n        this._fragmentCompilationState._uniformDeclaration = this._vertexCompilationState._uniformDeclaration;\n        this._fragmentCompilationState._constantDeclaration = this._vertexCompilationState._constantDeclaration;\n        this._fragmentCompilationState._vertexState = this._vertexCompilationState;\n        for (var _e = 0, fragmentNodes_1 = fragmentNodes; _e < fragmentNodes_1.length; _e++) {\n            var fragmentOutputNode = fragmentNodes_1[_e];\n            this._resetDualBlocks(fragmentOutputNode, this._buildId - 1);\n        }\n        for (var _f = 0, fragmentNodes_2 = fragmentNodes; _f < fragmentNodes_2.length; _f++) {\n            var fragmentOutputNode = fragmentNodes_2[_f];\n            fragmentOutputNode.build(this._fragmentCompilationState, fragmentNodes);\n        }\n        // Finalize\n        this._vertexCompilationState.finalize(this._vertexCompilationState);\n        this._fragmentCompilationState.finalize(this._fragmentCompilationState);\n        if (updateBuildId) {\n            this._buildId = NodeMaterial._BuildIdGenerator++;\n        }\n        // Errors\n        this._sharedData.emitErrors();\n        if (verbose) {\n            console.log(\"Vertex shader:\");\n            console.log(this._vertexCompilationState.compilationString);\n            console.log(\"Fragment shader:\");\n            console.log(this._fragmentCompilationState.compilationString);\n        }\n        this._buildWasSuccessful = true;\n        this.onBuildObservable.notifyObservers(this);\n        // Wipe defines\n        var meshes = this.getScene().meshes;\n        for (var _g = 0, meshes_1 = meshes; _g < meshes_1.length; _g++) {\n            var mesh = meshes_1[_g];\n            if (!mesh.subMeshes) {\n                continue;\n            }\n            for (var _h = 0, _j = mesh.subMeshes; _h < _j.length; _h++) {\n                var subMesh = _j[_h];\n                if (subMesh.getMaterial() !== this) {\n                    continue;\n                }\n                if (!subMesh.materialDefines) {\n                    continue;\n                }\n                var defines = subMesh.materialDefines;\n                defines.markAllAsDirty();\n                defines.reset();\n            }\n        }\n    };\n    /**\n     * Runs an otpimization phase to try to improve the shader code\n     */\n    NodeMaterial.prototype.optimize = function () {\n        for (var _i = 0, _a = this._optimizers; _i < _a.length; _i++) {\n            var optimizer = _a[_i];\n            optimizer.optimize(this._vertexOutputNodes, this._fragmentOutputNodes);\n        }\n    };\n    NodeMaterial.prototype._prepareDefinesForAttributes = function (mesh, defines) {\n        var oldNormal = defines[\"NORMAL\"];\n        var oldTangent = defines[\"TANGENT\"];\n        defines[\"NORMAL\"] = mesh.isVerticesDataPresent(VertexBuffer.NormalKind);\n        defines[\"TANGENT\"] = mesh.isVerticesDataPresent(VertexBuffer.TangentKind);\n        var uvChanged = false;\n        for (var i = 1; i <= 6; ++i) {\n            var oldUV = defines[\"UV\" + i];\n            defines[\"UV\" + i] = mesh.isVerticesDataPresent(\"uv\".concat(i === 1 ? \"\" : i));\n            uvChanged = uvChanged || defines[\"UV\" + i] !== oldUV;\n        }\n        if (oldNormal !== defines[\"NORMAL\"] || oldTangent !== defines[\"TANGENT\"] || uvChanged) {\n            defines.markAsAttributesDirty();\n        }\n    };\n    /**\n     * Create a post process from the material\n     * @param camera The camera to apply the render pass to.\n     * @param options The required width/height ratio to downsize to before computing the render pass. (Use 1.0 for full size)\n     * @param samplingMode The sampling mode to be used when computing the pass. (default: 0)\n     * @param engine The engine which the post process will be applied. (default: current engine)\n     * @param reusable If the post process can be reused on the same frame. (default: false)\n     * @param textureType Type of textures used when performing the post process. (default: 0)\n     * @param textureFormat Format of textures used when performing the post process. (default: TEXTUREFORMAT_RGBA)\n     * @returns the post process created\n     */\n    NodeMaterial.prototype.createPostProcess = function (camera, options, samplingMode, engine, reusable, textureType, textureFormat) {\n        if (options === void 0) { options = 1; }\n        if (samplingMode === void 0) { samplingMode = 1; }\n        if (textureType === void 0) { textureType = 0; }\n        if (textureFormat === void 0) { textureFormat = 5; }\n        if (this.mode !== NodeMaterialModes.PostProcess) {\n            console.log(\"Incompatible material mode\");\n            return null;\n        }\n        return this._createEffectForPostProcess(null, camera, options, samplingMode, engine, reusable, textureType, textureFormat);\n    };\n    /**\n     * Create the post process effect from the material\n     * @param postProcess The post process to create the effect for\n     */\n    NodeMaterial.prototype.createEffectForPostProcess = function (postProcess) {\n        this._createEffectForPostProcess(postProcess);\n    };\n    NodeMaterial.prototype._createEffectForPostProcess = function (postProcess, camera, options, samplingMode, engine, reusable, textureType, textureFormat) {\n        var _this = this;\n        if (options === void 0) { options = 1; }\n        if (samplingMode === void 0) { samplingMode = 1; }\n        if (textureType === void 0) { textureType = 0; }\n        if (textureFormat === void 0) { textureFormat = 5; }\n        var tempName = this.name + this._buildId;\n        var defines = new NodeMaterialDefines();\n        var dummyMesh = new AbstractMesh(tempName + \"PostProcess\", this.getScene());\n        var buildId = this._buildId;\n        this._processDefines(dummyMesh, defines);\n        Effect.RegisterShader(tempName, this._fragmentCompilationState._builtCompilationString, this._vertexCompilationState._builtCompilationString);\n        if (!postProcess) {\n            postProcess = new PostProcess(this.name + \"PostProcess\", tempName, this._fragmentCompilationState.uniforms, this._fragmentCompilationState.samplers, options, camera, samplingMode, engine, reusable, defines.toString(), textureType, tempName, { maxSimultaneousLights: this.maxSimultaneousLights }, false, textureFormat);\n        }\n        else {\n            postProcess.updateEffect(defines.toString(), this._fragmentCompilationState.uniforms, this._fragmentCompilationState.samplers, { maxSimultaneousLights: this.maxSimultaneousLights }, undefined, undefined, tempName, tempName);\n        }\n        postProcess.nodeMaterialSource = this;\n        postProcess.onApplyObservable.add(function (effect) {\n            if (buildId !== _this._buildId) {\n                delete Effect.ShadersStore[tempName + \"VertexShader\"];\n                delete Effect.ShadersStore[tempName + \"PixelShader\"];\n                tempName = _this.name + _this._buildId;\n                defines.markAllAsDirty();\n                buildId = _this._buildId;\n            }\n            var result = _this._processDefines(dummyMesh, defines);\n            if (result) {\n                Effect.RegisterShader(tempName, _this._fragmentCompilationState._builtCompilationString, _this._vertexCompilationState._builtCompilationString);\n                TimingTools.SetImmediate(function () {\n                    return postProcess.updateEffect(defines.toString(), _this._fragmentCompilationState.uniforms, _this._fragmentCompilationState.samplers, { maxSimultaneousLights: _this.maxSimultaneousLights }, undefined, undefined, tempName, tempName);\n                });\n            }\n            _this._checkInternals(effect);\n        });\n        return postProcess;\n    };\n    /**\n     * Create a new procedural texture based on this node material\n     * @param size defines the size of the texture\n     * @param scene defines the hosting scene\n     * @returns the new procedural texture attached to this node material\n     */\n    NodeMaterial.prototype.createProceduralTexture = function (size, scene) {\n        var _this = this;\n        if (this.mode !== NodeMaterialModes.ProceduralTexture) {\n            console.log(\"Incompatible material mode\");\n            return null;\n        }\n        var tempName = this.name + this._buildId;\n        var proceduralTexture = new ProceduralTexture(tempName, size, null, scene);\n        var dummyMesh = new AbstractMesh(tempName + \"Procedural\", this.getScene());\n        dummyMesh.reservedDataStore = {\n            hidden: true,\n        };\n        var defines = new NodeMaterialDefines();\n        var result = this._processDefines(dummyMesh, defines);\n        Effect.RegisterShader(tempName, this._fragmentCompilationState._builtCompilationString, this._vertexCompilationState._builtCompilationString);\n        var effect = this.getScene().getEngine().createEffect({\n            vertexElement: tempName,\n            fragmentElement: tempName,\n        }, [VertexBuffer.PositionKind], this._fragmentCompilationState.uniforms, this._fragmentCompilationState.samplers, defines.toString(), result === null || result === void 0 ? void 0 : result.fallbacks, undefined);\n        proceduralTexture.nodeMaterialSource = this;\n        proceduralTexture._setEffect(effect);\n        var buildId = this._buildId;\n        proceduralTexture.onBeforeGenerationObservable.add(function () {\n            if (buildId !== _this._buildId) {\n                delete Effect.ShadersStore[tempName + \"VertexShader\"];\n                delete Effect.ShadersStore[tempName + \"PixelShader\"];\n                tempName = _this.name + _this._buildId;\n                defines.markAllAsDirty();\n                buildId = _this._buildId;\n            }\n            var result = _this._processDefines(dummyMesh, defines);\n            if (result) {\n                Effect.RegisterShader(tempName, _this._fragmentCompilationState._builtCompilationString, _this._vertexCompilationState._builtCompilationString);\n                TimingTools.SetImmediate(function () {\n                    effect = _this.getScene().getEngine().createEffect({\n                        vertexElement: tempName,\n                        fragmentElement: tempName,\n                    }, [VertexBuffer.PositionKind], _this._fragmentCompilationState.uniforms, _this._fragmentCompilationState.samplers, defines.toString(), result === null || result === void 0 ? void 0 : result.fallbacks, undefined);\n                    proceduralTexture._setEffect(effect);\n                });\n            }\n            _this._checkInternals(effect);\n        });\n        return proceduralTexture;\n    };\n    NodeMaterial.prototype._createEffectForParticles = function (particleSystem, blendMode, onCompiled, onError, effect, defines, dummyMesh, particleSystemDefinesJoined) {\n        var _this = this;\n        if (particleSystemDefinesJoined === void 0) { particleSystemDefinesJoined = \"\"; }\n        var tempName = this.name + this._buildId + \"_\" + blendMode;\n        if (!defines) {\n            defines = new NodeMaterialDefines();\n        }\n        if (!dummyMesh) {\n            dummyMesh = this.getScene().getMeshByName(this.name + \"Particle\");\n            if (!dummyMesh) {\n                dummyMesh = new AbstractMesh(this.name + \"Particle\", this.getScene());\n                dummyMesh.reservedDataStore = {\n                    hidden: true,\n                };\n            }\n        }\n        var buildId = this._buildId;\n        var particleSystemDefines = [];\n        var join = particleSystemDefinesJoined;\n        if (!effect) {\n            var result = this._processDefines(dummyMesh, defines);\n            Effect.RegisterShader(tempName, this._fragmentCompilationState._builtCompilationString);\n            particleSystem.fillDefines(particleSystemDefines, blendMode);\n            join = particleSystemDefines.join(\"\\n\");\n            effect = this.getScene()\n                .getEngine()\n                .createEffectForParticles(tempName, this._fragmentCompilationState.uniforms, this._fragmentCompilationState.samplers, defines.toString() + \"\\n\" + join, result === null || result === void 0 ? void 0 : result.fallbacks, onCompiled, onError, particleSystem);\n            particleSystem.setCustomEffect(effect, blendMode);\n        }\n        effect.onBindObservable.add(function (effect) {\n            if (buildId !== _this._buildId) {\n                delete Effect.ShadersStore[tempName + \"PixelShader\"];\n                tempName = _this.name + _this._buildId + \"_\" + blendMode;\n                defines.markAllAsDirty();\n                buildId = _this._buildId;\n            }\n            particleSystemDefines.length = 0;\n            particleSystem.fillDefines(particleSystemDefines, blendMode);\n            var particleSystemDefinesJoinedCurrent = particleSystemDefines.join(\"\\n\");\n            if (particleSystemDefinesJoinedCurrent !== join) {\n                defines.markAllAsDirty();\n                join = particleSystemDefinesJoinedCurrent;\n            }\n            var result = _this._processDefines(dummyMesh, defines);\n            if (result) {\n                Effect.RegisterShader(tempName, _this._fragmentCompilationState._builtCompilationString);\n                effect = _this.getScene()\n                    .getEngine()\n                    .createEffectForParticles(tempName, _this._fragmentCompilationState.uniforms, _this._fragmentCompilationState.samplers, defines.toString() + \"\\n\" + join, result === null || result === void 0 ? void 0 : result.fallbacks, onCompiled, onError, particleSystem);\n                particleSystem.setCustomEffect(effect, blendMode);\n                _this._createEffectForParticles(particleSystem, blendMode, onCompiled, onError, effect, defines, dummyMesh, particleSystemDefinesJoined); // add the effect.onBindObservable observer\n                return;\n            }\n            _this._checkInternals(effect);\n        });\n    };\n    NodeMaterial.prototype._checkInternals = function (effect) {\n        // Animated blocks\n        if (this._sharedData.animatedInputs) {\n            var scene = this.getScene();\n            var frameId = scene.getFrameId();\n            if (this._animationFrame !== frameId) {\n                for (var _i = 0, _a = this._sharedData.animatedInputs; _i < _a.length; _i++) {\n                    var input = _a[_i];\n                    input.animate(scene);\n                }\n                this._animationFrame = frameId;\n            }\n        }\n        // Bindable blocks\n        for (var _b = 0, _c = this._sharedData.bindableBlocks; _b < _c.length; _b++) {\n            var block = _c[_b];\n            block.bind(effect, this);\n        }\n        // Connection points\n        for (var _d = 0, _e = this._sharedData.inputBlocks; _d < _e.length; _d++) {\n            var inputBlock = _e[_d];\n            inputBlock._transmit(effect, this.getScene(), this);\n        }\n    };\n    /**\n     * Create the effect to be used as the custom effect for a particle system\n     * @param particleSystem Particle system to create the effect for\n     * @param onCompiled defines a function to call when the effect creation is successful\n     * @param onError defines a function to call when the effect creation has failed\n     */\n    NodeMaterial.prototype.createEffectForParticles = function (particleSystem, onCompiled, onError) {\n        if (this.mode !== NodeMaterialModes.Particle) {\n            console.log(\"Incompatible material mode\");\n            return;\n        }\n        this._createEffectForParticles(particleSystem, BaseParticleSystem.BLENDMODE_ONEONE, onCompiled, onError);\n        this._createEffectForParticles(particleSystem, BaseParticleSystem.BLENDMODE_MULTIPLY, onCompiled, onError);\n    };\n    NodeMaterial.prototype._processDefines = function (mesh, defines, useInstances, subMesh) {\n        var _this = this;\n        if (useInstances === void 0) { useInstances = false; }\n        var result = null;\n        // Shared defines\n        this._sharedData.blocksWithDefines.forEach(function (b) {\n            b.initializeDefines(mesh, _this, defines, useInstances);\n        });\n        this._sharedData.blocksWithDefines.forEach(function (b) {\n            b.prepareDefines(mesh, _this, defines, useInstances, subMesh);\n        });\n        // Need to recompile?\n        if (defines.isDirty) {\n            var lightDisposed = defines._areLightsDisposed;\n            defines.markAsProcessed();\n            // Repeatable content generators\n            this._vertexCompilationState.compilationString = this._vertexCompilationState._builtCompilationString;\n            this._fragmentCompilationState.compilationString = this._fragmentCompilationState._builtCompilationString;\n            this._sharedData.repeatableContentBlocks.forEach(function (b) {\n                b.replaceRepeatableContent(_this._vertexCompilationState, _this._fragmentCompilationState, mesh, defines);\n            });\n            // Uniforms\n            var uniformBuffers_1 = [];\n            this._sharedData.dynamicUniformBlocks.forEach(function (b) {\n                b.updateUniformsAndSamples(_this._vertexCompilationState, _this, defines, uniformBuffers_1);\n            });\n            var mergedUniforms_1 = this._vertexCompilationState.uniforms;\n            this._fragmentCompilationState.uniforms.forEach(function (u) {\n                var index = mergedUniforms_1.indexOf(u);\n                if (index === -1) {\n                    mergedUniforms_1.push(u);\n                }\n            });\n            // Samplers\n            var mergedSamplers_1 = this._vertexCompilationState.samplers;\n            this._fragmentCompilationState.samplers.forEach(function (s) {\n                var index = mergedSamplers_1.indexOf(s);\n                if (index === -1) {\n                    mergedSamplers_1.push(s);\n                }\n            });\n            var fallbacks_1 = new EffectFallbacks();\n            this._sharedData.blocksWithFallbacks.forEach(function (b) {\n                b.provideFallbacks(mesh, fallbacks_1);\n            });\n            result = {\n                lightDisposed: lightDisposed,\n                uniformBuffers: uniformBuffers_1,\n                mergedUniforms: mergedUniforms_1,\n                mergedSamplers: mergedSamplers_1,\n                fallbacks: fallbacks_1,\n            };\n        }\n        return result;\n    };\n    /**\n     * Get if the submesh is ready to be used and all its information available.\n     * Child classes can use it to update shaders\n     * @param mesh defines the mesh to check\n     * @param subMesh defines which submesh to check\n     * @param useInstances specifies that instances should be used\n     * @returns a boolean indicating that the submesh is ready or not\n     */\n    NodeMaterial.prototype.isReadyForSubMesh = function (mesh, subMesh, useInstances) {\n        var _this = this;\n        if (useInstances === void 0) { useInstances = false; }\n        if (!this._buildWasSuccessful) {\n            return false;\n        }\n        var scene = this.getScene();\n        if (this._sharedData.animatedInputs) {\n            var frameId = scene.getFrameId();\n            if (this._animationFrame !== frameId) {\n                for (var _i = 0, _a = this._sharedData.animatedInputs; _i < _a.length; _i++) {\n                    var input = _a[_i];\n                    input.animate(scene);\n                }\n                this._animationFrame = frameId;\n            }\n        }\n        if (subMesh.effect && this.isFrozen) {\n            if (subMesh.effect._wasPreviouslyReady) {\n                return true;\n            }\n        }\n        if (!subMesh.materialDefines) {\n            subMesh.materialDefines = new NodeMaterialDefines();\n        }\n        var defines = subMesh.materialDefines;\n        if (this._isReadyForSubMesh(subMesh)) {\n            return true;\n        }\n        var engine = scene.getEngine();\n        this._prepareDefinesForAttributes(mesh, defines);\n        // Check if blocks are ready\n        if (this._sharedData.blockingBlocks.some(function (b) { return !b.isReady(mesh, _this, defines, useInstances); })) {\n            return false;\n        }\n        var result = this._processDefines(mesh, defines, useInstances, subMesh);\n        if (result) {\n            var previousEffect = subMesh.effect;\n            // Compilation\n            var join = defines.toString();\n            var effect = engine.createEffect({\n                vertex: \"nodeMaterial\" + this._buildId,\n                fragment: \"nodeMaterial\" + this._buildId,\n                vertexSource: this._vertexCompilationState.compilationString,\n                fragmentSource: this._fragmentCompilationState.compilationString,\n            }, {\n                attributes: this._vertexCompilationState.attributes,\n                uniformsNames: result.mergedUniforms,\n                uniformBuffersNames: result.uniformBuffers,\n                samplers: result.mergedSamplers,\n                defines: join,\n                fallbacks: result.fallbacks,\n                onCompiled: this.onCompiled,\n                onError: this.onError,\n                indexParameters: { maxSimultaneousLights: this.maxSimultaneousLights, maxSimultaneousMorphTargets: defines.NUM_MORPH_INFLUENCERS },\n            }, engine);\n            if (effect) {\n                if (this._onEffectCreatedObservable) {\n                    onCreatedEffectParameters.effect = effect;\n                    onCreatedEffectParameters.subMesh = subMesh;\n                    this._onEffectCreatedObservable.notifyObservers(onCreatedEffectParameters);\n                }\n                // Use previous effect while new one is compiling\n                if (this.allowShaderHotSwapping && previousEffect && !effect.isReady()) {\n                    effect = previousEffect;\n                    defines.markAsUnprocessed();\n                    if (result.lightDisposed) {\n                        // re register in case it takes more than one frame.\n                        defines._areLightsDisposed = true;\n                        return false;\n                    }\n                }\n                else {\n                    scene.resetCachedMaterial();\n                    subMesh.setEffect(effect, defines, this._materialContext);\n                }\n            }\n        }\n        if (!subMesh.effect || !subMesh.effect.isReady()) {\n            return false;\n        }\n        defines._renderId = scene.getRenderId();\n        subMesh.effect._wasPreviouslyReady = true;\n        return true;\n    };\n    Object.defineProperty(NodeMaterial.prototype, \"compiledShaders\", {\n        /**\n         * Get a string representing the shaders built by the current node graph\n         */\n        get: function () {\n            return \"// Vertex shader\\r\\n\".concat(this._vertexCompilationState.compilationString, \"\\r\\n\\r\\n// Fragment shader\\r\\n\").concat(this._fragmentCompilationState.compilationString);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Binds the world matrix to the material\n     * @param world defines the world transformation matrix\n     */\n    NodeMaterial.prototype.bindOnlyWorldMatrix = function (world) {\n        var scene = this.getScene();\n        if (!this._activeEffect) {\n            return;\n        }\n        var hints = this._sharedData.hints;\n        if (hints.needWorldViewMatrix) {\n            world.multiplyToRef(scene.getViewMatrix(), this._cachedWorldViewMatrix);\n        }\n        if (hints.needWorldViewProjectionMatrix) {\n            world.multiplyToRef(scene.getTransformMatrix(), this._cachedWorldViewProjectionMatrix);\n        }\n        // Connection points\n        for (var _i = 0, _a = this._sharedData.inputBlocks; _i < _a.length; _i++) {\n            var inputBlock = _a[_i];\n            inputBlock._transmitWorld(this._activeEffect, world, this._cachedWorldViewMatrix, this._cachedWorldViewProjectionMatrix);\n        }\n    };\n    /**\n     * Binds the submesh to this material by preparing the effect and shader to draw\n     * @param world defines the world transformation matrix\n     * @param mesh defines the mesh containing the submesh\n     * @param subMesh defines the submesh to bind the material to\n     */\n    NodeMaterial.prototype.bindForSubMesh = function (world, mesh, subMesh) {\n        var scene = this.getScene();\n        var effect = subMesh.effect;\n        if (!effect) {\n            return;\n        }\n        this._activeEffect = effect;\n        // Matrices\n        this.bindOnlyWorldMatrix(world);\n        var mustRebind = this._mustRebind(scene, effect, mesh.visibility);\n        var sharedData = this._sharedData;\n        if (mustRebind) {\n            // Bindable blocks\n            for (var _i = 0, _a = sharedData.bindableBlocks; _i < _a.length; _i++) {\n                var block = _a[_i];\n                block.bind(effect, this, mesh, subMesh);\n            }\n            for (var _b = 0, _c = sharedData.forcedBindableBlocks; _b < _c.length; _b++) {\n                var block = _c[_b];\n                block.bind(effect, this, mesh, subMesh);\n            }\n            // Connection points\n            for (var _d = 0, _e = sharedData.inputBlocks; _d < _e.length; _d++) {\n                var inputBlock = _e[_d];\n                inputBlock._transmit(effect, scene, this);\n            }\n        }\n        else if (!this.isFrozen) {\n            for (var _f = 0, _g = sharedData.forcedBindableBlocks; _f < _g.length; _f++) {\n                var block = _g[_f];\n                block.bind(effect, this, mesh, subMesh);\n            }\n        }\n        this._afterBind(mesh, this._activeEffect);\n    };\n    /**\n     * Gets the active textures from the material\n     * @returns an array of textures\n     */\n    NodeMaterial.prototype.getActiveTextures = function () {\n        var activeTextures = _super.prototype.getActiveTextures.call(this);\n        if (this._sharedData) {\n            activeTextures.push.apply(activeTextures, this._sharedData.textureBlocks.filter(function (tb) { return tb.texture; }).map(function (tb) { return tb.texture; }));\n        }\n        return activeTextures;\n    };\n    /**\n     * Gets the list of texture blocks\n     * @returns an array of texture blocks\n     */\n    NodeMaterial.prototype.getTextureBlocks = function () {\n        if (!this._sharedData) {\n            return [];\n        }\n        return this._sharedData.textureBlocks;\n    };\n    /**\n     * Specifies if the material uses a texture\n     * @param texture defines the texture to check against the material\n     * @returns a boolean specifying if the material uses the texture\n     */\n    NodeMaterial.prototype.hasTexture = function (texture) {\n        if (_super.prototype.hasTexture.call(this, texture)) {\n            return true;\n        }\n        if (!this._sharedData) {\n            return false;\n        }\n        for (var _i = 0, _a = this._sharedData.textureBlocks; _i < _a.length; _i++) {\n            var t = _a[_i];\n            if (t.texture === texture) {\n                return true;\n            }\n        }\n        return false;\n    };\n    /**\n     * Disposes the material\n     * @param forceDisposeEffect specifies if effects should be forcefully disposed\n     * @param forceDisposeTextures specifies if textures should be forcefully disposed\n     * @param notBoundToMesh specifies if the material that is being disposed is known to be not bound to any mesh\n     */\n    NodeMaterial.prototype.dispose = function (forceDisposeEffect, forceDisposeTextures, notBoundToMesh) {\n        if (forceDisposeTextures) {\n            for (var _i = 0, _a = this.getTextureBlocks()\n                .filter(function (tb) { return tb.texture; })\n                .map(function (tb) { return tb.texture; }); _i < _a.length; _i++) {\n                var texture = _a[_i];\n                texture.dispose();\n            }\n        }\n        for (var _b = 0, _c = this.attachedBlocks; _b < _c.length; _b++) {\n            var block = _c[_b];\n            block.dispose();\n        }\n        this.attachedBlocks = [];\n        this._sharedData = null;\n        this._vertexCompilationState = null;\n        this._fragmentCompilationState = null;\n        this.onBuildObservable.clear();\n        if (this._imageProcessingObserver) {\n            this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver);\n            this._imageProcessingObserver = null;\n        }\n        _super.prototype.dispose.call(this, forceDisposeEffect, forceDisposeTextures, notBoundToMesh);\n    };\n    /** Creates the node editor window. */\n    NodeMaterial.prototype._createNodeEditor = function () {\n        this.BJSNODEMATERIALEDITOR.NodeEditor.Show({\n            nodeMaterial: this,\n        });\n    };\n    /**\n     * Launch the node material editor\n     * @param config Define the configuration of the editor\n     * @return a promise fulfilled when the node editor is visible\n     */\n    NodeMaterial.prototype.edit = function (config) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            _this.BJSNODEMATERIALEDITOR = _this.BJSNODEMATERIALEDITOR || _this._getGlobalNodeMaterialEditor();\n            if (typeof _this.BJSNODEMATERIALEDITOR == \"undefined\") {\n                var editorUrl = config && config.editorURL ? config.editorURL : NodeMaterial.EditorURL;\n                // Load editor and add it to the DOM\n                Tools.LoadScript(editorUrl, function () {\n                    _this.BJSNODEMATERIALEDITOR = _this.BJSNODEMATERIALEDITOR || _this._getGlobalNodeMaterialEditor();\n                    _this._createNodeEditor();\n                    resolve();\n                });\n            }\n            else {\n                // Otherwise creates the editor\n                _this._createNodeEditor();\n                resolve();\n            }\n        });\n    };\n    /**\n     * Clear the current material\n     */\n    NodeMaterial.prototype.clear = function () {\n        this._vertexOutputNodes = [];\n        this._fragmentOutputNodes = [];\n        this.attachedBlocks = [];\n    };\n    /**\n     * Clear the current material and set it to a default state\n     */\n    NodeMaterial.prototype.setToDefault = function () {\n        this.clear();\n        this.editorData = null;\n        var positionInput = new InputBlock(\"Position\");\n        positionInput.setAsAttribute(\"position\");\n        var worldInput = new InputBlock(\"World\");\n        worldInput.setAsSystemValue(NodeMaterialSystemValues.World);\n        var worldPos = new TransformBlock(\"WorldPos\");\n        positionInput.connectTo(worldPos);\n        worldInput.connectTo(worldPos);\n        var viewProjectionInput = new InputBlock(\"ViewProjection\");\n        viewProjectionInput.setAsSystemValue(NodeMaterialSystemValues.ViewProjection);\n        var worldPosdMultipliedByViewProjection = new TransformBlock(\"WorldPos * ViewProjectionTransform\");\n        worldPos.connectTo(worldPosdMultipliedByViewProjection);\n        viewProjectionInput.connectTo(worldPosdMultipliedByViewProjection);\n        var vertexOutput = new VertexOutputBlock(\"VertexOutput\");\n        worldPosdMultipliedByViewProjection.connectTo(vertexOutput);\n        // Pixel\n        var pixelColor = new InputBlock(\"color\");\n        pixelColor.value = new Color4(0.8, 0.8, 0.8, 1);\n        var fragmentOutput = new FragmentOutputBlock(\"FragmentOutput\");\n        pixelColor.connectTo(fragmentOutput);\n        // Add to nodes\n        this.addOutputNode(vertexOutput);\n        this.addOutputNode(fragmentOutput);\n        this._mode = NodeMaterialModes.Material;\n    };\n    /**\n     * Clear the current material and set it to a default state for post process\n     */\n    NodeMaterial.prototype.setToDefaultPostProcess = function () {\n        this.clear();\n        this.editorData = null;\n        var position = new InputBlock(\"Position\");\n        position.setAsAttribute(\"position2d\");\n        var const1 = new InputBlock(\"Constant1\");\n        const1.isConstant = true;\n        const1.value = 1;\n        var vmerger = new VectorMergerBlock(\"Position3D\");\n        position.connectTo(vmerger);\n        const1.connectTo(vmerger, { input: \"w\" });\n        var vertexOutput = new VertexOutputBlock(\"VertexOutput\");\n        vmerger.connectTo(vertexOutput);\n        // Pixel\n        var scale = new InputBlock(\"Scale\");\n        scale.visibleInInspector = true;\n        scale.value = new Vector2(1, 1);\n        var uv0 = new RemapBlock(\"uv0\");\n        position.connectTo(uv0);\n        var uv = new MultiplyBlock(\"UV scale\");\n        uv0.connectTo(uv);\n        scale.connectTo(uv);\n        var currentScreen = new CurrentScreenBlock(\"CurrentScreen\");\n        uv.connectTo(currentScreen);\n        currentScreen.texture = new Texture(\"https://assets.babylonjs.com/nme/currentScreenPostProcess.png\", this.getScene());\n        var fragmentOutput = new FragmentOutputBlock(\"FragmentOutput\");\n        currentScreen.connectTo(fragmentOutput, { output: \"rgba\" });\n        // Add to nodes\n        this.addOutputNode(vertexOutput);\n        this.addOutputNode(fragmentOutput);\n        this._mode = NodeMaterialModes.PostProcess;\n    };\n    /**\n     * Clear the current material and set it to a default state for procedural texture\n     */\n    NodeMaterial.prototype.setToDefaultProceduralTexture = function () {\n        this.clear();\n        this.editorData = null;\n        var position = new InputBlock(\"Position\");\n        position.setAsAttribute(\"position2d\");\n        var const1 = new InputBlock(\"Constant1\");\n        const1.isConstant = true;\n        const1.value = 1;\n        var vmerger = new VectorMergerBlock(\"Position3D\");\n        position.connectTo(vmerger);\n        const1.connectTo(vmerger, { input: \"w\" });\n        var vertexOutput = new VertexOutputBlock(\"VertexOutput\");\n        vmerger.connectTo(vertexOutput);\n        // Pixel\n        var time = new InputBlock(\"Time\");\n        time.value = 0;\n        time.min = 0;\n        time.max = 0;\n        time.isBoolean = false;\n        time.matrixMode = 0;\n        time.animationType = AnimatedInputBlockTypes.Time;\n        time.isConstant = false;\n        var color = new InputBlock(\"Color3\");\n        color.value = new Color3(1, 1, 1);\n        color.isConstant = false;\n        var fragmentOutput = new FragmentOutputBlock(\"FragmentOutput\");\n        var vectorMerger = new VectorMergerBlock(\"VectorMerger\");\n        vectorMerger.visibleInInspector = false;\n        var cos = new TrigonometryBlock(\"Cos\");\n        cos.operation = TrigonometryBlockOperations.Cos;\n        position.connectTo(vectorMerger);\n        time.output.connectTo(cos.input);\n        cos.output.connectTo(vectorMerger.z);\n        vectorMerger.xyzOut.connectTo(fragmentOutput.rgb);\n        // Add to nodes\n        this.addOutputNode(vertexOutput);\n        this.addOutputNode(fragmentOutput);\n        this._mode = NodeMaterialModes.ProceduralTexture;\n    };\n    /**\n     * Clear the current material and set it to a default state for particle\n     */\n    NodeMaterial.prototype.setToDefaultParticle = function () {\n        this.clear();\n        this.editorData = null;\n        // Pixel\n        var uv = new InputBlock(\"uv\");\n        uv.setAsAttribute(\"particle_uv\");\n        var texture = new ParticleTextureBlock(\"ParticleTexture\");\n        uv.connectTo(texture);\n        var color = new InputBlock(\"Color\");\n        color.setAsAttribute(\"particle_color\");\n        var multiply = new MultiplyBlock(\"Texture * Color\");\n        texture.connectTo(multiply);\n        color.connectTo(multiply);\n        var rampGradient = new ParticleRampGradientBlock(\"ParticleRampGradient\");\n        multiply.connectTo(rampGradient);\n        var cSplitter = new ColorSplitterBlock(\"ColorSplitter\");\n        color.connectTo(cSplitter);\n        var blendMultiply = new ParticleBlendMultiplyBlock(\"ParticleBlendMultiply\");\n        rampGradient.connectTo(blendMultiply);\n        texture.connectTo(blendMultiply, { output: \"a\" });\n        cSplitter.connectTo(blendMultiply, { output: \"a\" });\n        var fragmentOutput = new FragmentOutputBlock(\"FragmentOutput\");\n        blendMultiply.connectTo(fragmentOutput);\n        // Add to nodes\n        this.addOutputNode(fragmentOutput);\n        this._mode = NodeMaterialModes.Particle;\n    };\n    /**\n     * Loads the current Node Material from a url pointing to a file save by the Node Material Editor\n     * @param url defines the url to load from\n     * @param rootUrl defines the root URL for nested url in the node material\n     * @returns a promise that will fulfil when the material is fully loaded\n     */\n    NodeMaterial.prototype.loadAsync = function (url, rootUrl) {\n        var _this = this;\n        if (rootUrl === void 0) { rootUrl = \"\"; }\n        return this.getScene()\n            ._loadFileAsync(url)\n            .then(function (data) {\n            var serializationObject = JSON.parse(data);\n            _this.loadFromSerialization(serializationObject, rootUrl);\n        });\n    };\n    NodeMaterial.prototype._gatherBlocks = function (rootNode, list) {\n        if (list.indexOf(rootNode) !== -1) {\n            return;\n        }\n        list.push(rootNode);\n        for (var _i = 0, _a = rootNode.inputs; _i < _a.length; _i++) {\n            var input = _a[_i];\n            var connectedPoint = input.connectedPoint;\n            if (connectedPoint) {\n                var block = connectedPoint.ownerBlock;\n                if (block !== rootNode) {\n                    this._gatherBlocks(block, list);\n                }\n            }\n        }\n    };\n    /**\n     * Generate a string containing the code declaration required to create an equivalent of this material\n     * @returns a string\n     */\n    NodeMaterial.prototype.generateCode = function () {\n        var alreadyDumped = [];\n        var vertexBlocks = [];\n        var uniqueNames = [\"const\", \"var\", \"let\"];\n        // Gets active blocks\n        for (var _i = 0, _a = this._vertexOutputNodes; _i < _a.length; _i++) {\n            var outputNode = _a[_i];\n            this._gatherBlocks(outputNode, vertexBlocks);\n        }\n        var fragmentBlocks = [];\n        for (var _b = 0, _c = this._fragmentOutputNodes; _b < _c.length; _b++) {\n            var outputNode = _c[_b];\n            this._gatherBlocks(outputNode, fragmentBlocks);\n        }\n        // Generate vertex shader\n        var codeString = \"var nodeMaterial = new BABYLON.NodeMaterial(\\\"\".concat(this.name || \"node material\", \"\\\");\\r\\n\");\n        for (var _d = 0, vertexBlocks_1 = vertexBlocks; _d < vertexBlocks_1.length; _d++) {\n            var node = vertexBlocks_1[_d];\n            if (node.isInput && alreadyDumped.indexOf(node) === -1) {\n                codeString += node._dumpCode(uniqueNames, alreadyDumped);\n            }\n        }\n        // Generate fragment shader\n        for (var _e = 0, fragmentBlocks_1 = fragmentBlocks; _e < fragmentBlocks_1.length; _e++) {\n            var node = fragmentBlocks_1[_e];\n            if (node.isInput && alreadyDumped.indexOf(node) === -1) {\n                codeString += node._dumpCode(uniqueNames, alreadyDumped);\n            }\n        }\n        // Connections\n        alreadyDumped = [];\n        codeString += \"\\r\\n// Connections\\r\\n\";\n        for (var _f = 0, _g = this._vertexOutputNodes; _f < _g.length; _f++) {\n            var node = _g[_f];\n            codeString += node._dumpCodeForOutputConnections(alreadyDumped);\n        }\n        for (var _h = 0, _j = this._fragmentOutputNodes; _h < _j.length; _h++) {\n            var node = _j[_h];\n            codeString += node._dumpCodeForOutputConnections(alreadyDumped);\n        }\n        // Output nodes\n        codeString += \"\\r\\n// Output nodes\\r\\n\";\n        for (var _k = 0, _l = this._vertexOutputNodes; _k < _l.length; _k++) {\n            var node = _l[_k];\n            codeString += \"nodeMaterial.addOutputNode(\".concat(node._codeVariableName, \");\\r\\n\");\n        }\n        for (var _m = 0, _o = this._fragmentOutputNodes; _m < _o.length; _m++) {\n            var node = _o[_m];\n            codeString += \"nodeMaterial.addOutputNode(\".concat(node._codeVariableName, \");\\r\\n\");\n        }\n        codeString += \"nodeMaterial.build();\\r\\n\";\n        return codeString;\n    };\n    /**\n     * Serializes this material in a JSON representation\n     * @param selectedBlocks\n     * @returns the serialized material object\n     */\n    NodeMaterial.prototype.serialize = function (selectedBlocks) {\n        var serializationObject = selectedBlocks ? {} : SerializationHelper.Serialize(this);\n        serializationObject.editorData = JSON.parse(JSON.stringify(this.editorData)); // Copy\n        var blocks = [];\n        if (selectedBlocks) {\n            blocks = selectedBlocks;\n        }\n        else {\n            serializationObject.customType = \"BABYLON.NodeMaterial\";\n            serializationObject.outputNodes = [];\n            // Outputs\n            for (var _i = 0, _a = this._vertexOutputNodes; _i < _a.length; _i++) {\n                var outputNode = _a[_i];\n                this._gatherBlocks(outputNode, blocks);\n                serializationObject.outputNodes.push(outputNode.uniqueId);\n            }\n            for (var _b = 0, _c = this._fragmentOutputNodes; _b < _c.length; _b++) {\n                var outputNode = _c[_b];\n                this._gatherBlocks(outputNode, blocks);\n                if (serializationObject.outputNodes.indexOf(outputNode.uniqueId) === -1) {\n                    serializationObject.outputNodes.push(outputNode.uniqueId);\n                }\n            }\n        }\n        // Blocks\n        serializationObject.blocks = [];\n        for (var _d = 0, blocks_1 = blocks; _d < blocks_1.length; _d++) {\n            var block = blocks_1[_d];\n            serializationObject.blocks.push(block.serialize());\n        }\n        if (!selectedBlocks) {\n            for (var _e = 0, _f = this.attachedBlocks; _e < _f.length; _e++) {\n                var block = _f[_e];\n                if (blocks.indexOf(block) !== -1) {\n                    continue;\n                }\n                serializationObject.blocks.push(block.serialize());\n            }\n        }\n        return serializationObject;\n    };\n    NodeMaterial.prototype._restoreConnections = function (block, source, map) {\n        for (var _i = 0, _a = block.outputs; _i < _a.length; _i++) {\n            var outputPoint = _a[_i];\n            for (var _b = 0, _c = source.blocks; _b < _c.length; _b++) {\n                var candidate = _c[_b];\n                var target = map[candidate.id];\n                if (!target) {\n                    continue;\n                }\n                for (var _d = 0, _e = candidate.inputs; _d < _e.length; _d++) {\n                    var input = _e[_d];\n                    if (map[input.targetBlockId] === block && input.targetConnectionName === outputPoint.name) {\n                        var inputPoint = target.getInputByName(input.inputName);\n                        if (!inputPoint || inputPoint.isConnected) {\n                            continue;\n                        }\n                        outputPoint.connectTo(inputPoint, true);\n                        this._restoreConnections(target, source, map);\n                        continue;\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * Clear the current graph and load a new one from a serialization object\n     * @param source defines the JSON representation of the material\n     * @param rootUrl defines the root URL to use to load textures and relative dependencies\n     * @param merge defines whether or not the source must be merged or replace the current content\n     */\n    NodeMaterial.prototype.loadFromSerialization = function (source, rootUrl, merge) {\n        var _a;\n        if (rootUrl === void 0) { rootUrl = \"\"; }\n        if (merge === void 0) { merge = false; }\n        if (!merge) {\n            this.clear();\n        }\n        var map = {};\n        // Create blocks\n        for (var _i = 0, _b = source.blocks; _i < _b.length; _i++) {\n            var parsedBlock = _b[_i];\n            var blockType = GetClass(parsedBlock.customType);\n            if (blockType) {\n                var block = new blockType();\n                block._deserialize(parsedBlock, this.getScene(), rootUrl);\n                map[parsedBlock.id] = block;\n                this.attachedBlocks.push(block);\n            }\n        }\n        // Connections - Starts with input blocks only (except if in \"merge\" mode where we scan all blocks)\n        for (var blockIndex = 0; blockIndex < source.blocks.length; blockIndex++) {\n            var parsedBlock = source.blocks[blockIndex];\n            var block = map[parsedBlock.id];\n            if (!block) {\n                continue;\n            }\n            if (block.inputs.length && !merge) {\n                continue;\n            }\n            this._restoreConnections(block, source, map);\n        }\n        // Outputs\n        if (source.outputNodes) {\n            for (var _c = 0, _d = source.outputNodes; _c < _d.length; _c++) {\n                var outputNodeId = _d[_c];\n                this.addOutputNode(map[outputNodeId]);\n            }\n        }\n        // UI related info\n        if (source.locations || (source.editorData && source.editorData.locations)) {\n            var locations = source.locations || source.editorData.locations;\n            for (var _e = 0, locations_1 = locations; _e < locations_1.length; _e++) {\n                var location_1 = locations_1[_e];\n                if (map[location_1.blockId]) {\n                    location_1.blockId = map[location_1.blockId].uniqueId;\n                }\n            }\n            if (merge && this.editorData && this.editorData.locations) {\n                locations.concat(this.editorData.locations);\n            }\n            if (source.locations) {\n                this.editorData = {\n                    locations: locations,\n                };\n            }\n            else {\n                this.editorData = source.editorData;\n                this.editorData.locations = locations;\n            }\n            var blockMap = [];\n            for (var key in map) {\n                blockMap[key] = map[key].uniqueId;\n            }\n            this.editorData.map = blockMap;\n        }\n        this.comment = source.comment;\n        if (source.forceAlphaBlending !== undefined) {\n            this.forceAlphaBlending = source.forceAlphaBlending;\n        }\n        if (!merge) {\n            this._mode = (_a = source.mode) !== null && _a !== void 0 ? _a : NodeMaterialModes.Material;\n        }\n    };\n    /**\n     * Makes a duplicate of the current material.\n     * @param name defines the name to use for the new material\n     * @param shareEffect defines if the clone material should share the same effect (default is false)\n     */\n    NodeMaterial.prototype.clone = function (name, shareEffect) {\n        var _this = this;\n        if (shareEffect === void 0) { shareEffect = false; }\n        var serializationObject = this.serialize();\n        var clone = SerializationHelper.Clone(function () { return new NodeMaterial(name, _this.getScene(), _this.options); }, this);\n        clone.id = name;\n        clone.name = name;\n        clone.loadFromSerialization(serializationObject);\n        clone._buildId = this._buildId;\n        clone.build(false, !shareEffect);\n        return clone;\n    };\n    /**\n     * Creates a node material from parsed material data\n     * @param source defines the JSON representation of the material\n     * @param scene defines the hosting scene\n     * @param rootUrl defines the root URL to use to load textures and relative dependencies\n     * @returns a new node material\n     */\n    NodeMaterial.Parse = function (source, scene, rootUrl) {\n        if (rootUrl === void 0) { rootUrl = \"\"; }\n        var nodeMaterial = SerializationHelper.Parse(function () { return new NodeMaterial(source.name, scene); }, source, scene, rootUrl);\n        nodeMaterial.loadFromSerialization(source, rootUrl);\n        nodeMaterial.build();\n        return nodeMaterial;\n    };\n    /**\n     * Creates a node material from a snippet saved in a remote file\n     * @param name defines the name of the material to create\n     * @param url defines the url to load from\n     * @param scene defines the hosting scene\n     * @param rootUrl defines the root URL for nested url in the node material\n     * @param skipBuild defines whether to build the node material\n     * @returns a promise that will resolve to the new node material\n     */\n    NodeMaterial.ParseFromFileAsync = function (name, url, scene, rootUrl, skipBuild) {\n        if (rootUrl === void 0) { rootUrl = \"\"; }\n        if (skipBuild === void 0) { skipBuild = false; }\n        var material = new NodeMaterial(name, scene);\n        return new Promise(function (resolve, reject) {\n            return material\n                .loadAsync(url, rootUrl)\n                .then(function () {\n                if (!skipBuild) {\n                    material.build();\n                }\n                resolve(material);\n            })\n                .catch(reject);\n        });\n    };\n    /**\n     * Creates a node material from a snippet saved by the node material editor\n     * @param snippetId defines the snippet to load\n     * @param scene defines the hosting scene\n     * @param rootUrl defines the root URL to use to load textures and relative dependencies\n     * @param nodeMaterial defines a node material to update (instead of creating a new one)\n     * @param skipBuild defines whether to build the node material\n     * @returns a promise that will resolve to the new node material\n     */\n    NodeMaterial.ParseFromSnippetAsync = function (snippetId, scene, rootUrl, nodeMaterial, skipBuild) {\n        var _this = this;\n        if (scene === void 0) { scene = EngineStore.LastCreatedScene; }\n        if (rootUrl === void 0) { rootUrl = \"\"; }\n        if (skipBuild === void 0) { skipBuild = false; }\n        if (snippetId === \"_BLANK\") {\n            return Promise.resolve(this.CreateDefault(\"blank\", scene));\n        }\n        return new Promise(function (resolve, reject) {\n            var request = new WebRequest();\n            request.addEventListener(\"readystatechange\", function () {\n                if (request.readyState == 4) {\n                    if (request.status == 200) {\n                        var snippet = JSON.parse(JSON.parse(request.responseText).jsonPayload);\n                        var serializationObject = JSON.parse(snippet.nodeMaterial);\n                        if (!nodeMaterial) {\n                            nodeMaterial = SerializationHelper.Parse(function () { return new NodeMaterial(snippetId, scene); }, serializationObject, scene, rootUrl);\n                            nodeMaterial.uniqueId = scene.getUniqueId();\n                        }\n                        nodeMaterial.loadFromSerialization(serializationObject);\n                        nodeMaterial.snippetId = snippetId;\n                        try {\n                            if (!skipBuild) {\n                                nodeMaterial.build();\n                            }\n                            resolve(nodeMaterial);\n                        }\n                        catch (err) {\n                            reject(err);\n                        }\n                    }\n                    else {\n                        reject(\"Unable to load the snippet \" + snippetId);\n                    }\n                }\n            });\n            request.open(\"GET\", _this.SnippetUrl + \"/\" + snippetId.replace(/#/g, \"/\"));\n            request.send();\n        });\n    };\n    /**\n     * Creates a new node material set to default basic configuration\n     * @param name defines the name of the material\n     * @param scene defines the hosting scene\n     * @returns a new NodeMaterial\n     */\n    NodeMaterial.CreateDefault = function (name, scene) {\n        var newMaterial = new NodeMaterial(name, scene);\n        newMaterial.setToDefault();\n        newMaterial.build();\n        return newMaterial;\n    };\n    NodeMaterial._BuildIdGenerator = 0;\n    /** Define the Url to load node editor script */\n    NodeMaterial.EditorURL = \"https://unpkg.com/babylonjs-node-editor@\".concat(Engine.Version, \"/babylon.nodeEditor.js\");\n    /** Define the Url to load snippets */\n    NodeMaterial.SnippetUrl = `https://snippet.babylonjs.com`;\n    /** Gets or sets a boolean indicating that node materials should not deserialize textures from json / snippet content */\n    NodeMaterial.IgnoreTexturesAtLoadTime = false;\n    __decorate([\n        serialize()\n    ], NodeMaterial.prototype, \"ignoreAlpha\", void 0);\n    __decorate([\n        serialize()\n    ], NodeMaterial.prototype, \"maxSimultaneousLights\", void 0);\n    __decorate([\n        serialize(\"mode\")\n    ], NodeMaterial.prototype, \"_mode\", void 0);\n    __decorate([\n        serialize(\"comment\")\n    ], NodeMaterial.prototype, \"comment\", void 0);\n    __decorate([\n        serialize()\n    ], NodeMaterial.prototype, \"forceAlphaBlending\", void 0);\n    return NodeMaterial;\n}(PushMaterial));\nexport { NodeMaterial };\nRegisterClass(\"BABYLON.NodeMaterial\", NodeMaterial);\n//# sourceMappingURL=nodeMaterial.js.map","import { NodeMaterialBlockConnectionPointTypes } from \"./Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialConnectionPoint, NodeMaterialConnectionPointDirection } from \"./nodeMaterialBlockConnectionPoint.js\";\nimport { NodeMaterialBlockTargets } from \"./Enums/nodeMaterialBlockTargets.js\";\nimport { UniqueIdGenerator } from \"../../Misc/uniqueIdGenerator.js\";\nimport { GetClass } from \"../../Misc/typeStore.js\";\n/**\n * Defines a block that can be used inside a node based material\n */\nvar NodeMaterialBlock = /** @class */ (function () {\n    /**\n     * Creates a new NodeMaterialBlock\n     * @param name defines the block name\n     * @param target defines the target of that block (Vertex by default)\n     * @param isFinalMerger defines a boolean indicating that this block is an end block (e.g. it is generating a system value). Default is false\n     * @param isInput defines a boolean indicating that this block is an input (e.g. it sends data to the shader). Default is false\n     */\n    function NodeMaterialBlock(name, target, isFinalMerger, isInput) {\n        if (target === void 0) { target = NodeMaterialBlockTargets.Vertex; }\n        if (isFinalMerger === void 0) { isFinalMerger = false; }\n        if (isInput === void 0) { isInput = false; }\n        this._isFinalMerger = false;\n        this._isInput = false;\n        this._name = \"\";\n        this._isUnique = false;\n        /** Gets or sets a boolean indicating that only one input can be connected at a time */\n        this.inputsAreExclusive = false;\n        /** @hidden */\n        this._codeVariableName = \"\";\n        /** @hidden */\n        this._inputs = new Array();\n        /** @hidden */\n        this._outputs = new Array();\n        /**\n         * Gets or sets the comments associated with this block\n         */\n        this.comments = \"\";\n        /** Gets or sets a boolean indicating that this input can be edited in the Inspector (false by default) */\n        this.visibleInInspector = false;\n        /** Gets or sets a boolean indicating that this input can be edited from a collapsed frame */\n        this.visibleOnFrame = false;\n        this._target = target;\n        this._originalTargetIsNeutral = target === NodeMaterialBlockTargets.Neutral;\n        this._isFinalMerger = isFinalMerger;\n        this._isInput = isInput;\n        this._name = name;\n        this.uniqueId = UniqueIdGenerator.UniqueId;\n    }\n    Object.defineProperty(NodeMaterialBlock.prototype, \"name\", {\n        /**\n         * Gets the name of the block\n         */\n        get: function () {\n            return this._name;\n        },\n        /**\n         * Sets the name of the block. Will check if the name is valid.\n         */\n        set: function (newName) {\n            if (!this.validateBlockName(newName)) {\n                return;\n            }\n            this._name = newName;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialBlock.prototype, \"isUnique\", {\n        /**\n         * Gets a boolean indicating that this block can only be used once per NodeMaterial\n         */\n        get: function () {\n            return this._isUnique;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialBlock.prototype, \"isFinalMerger\", {\n        /**\n         * Gets a boolean indicating that this block is an end block (e.g. it is generating a system value)\n         */\n        get: function () {\n            return this._isFinalMerger;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialBlock.prototype, \"isInput\", {\n        /**\n         * Gets a boolean indicating that this block is an input (e.g. it sends data to the shader)\n         */\n        get: function () {\n            return this._isInput;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialBlock.prototype, \"buildId\", {\n        /**\n         * Gets or sets the build Id\n         */\n        get: function () {\n            return this._buildId;\n        },\n        set: function (value) {\n            this._buildId = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialBlock.prototype, \"target\", {\n        /**\n         * Gets or sets the target of the block\n         */\n        get: function () {\n            return this._target;\n        },\n        set: function (value) {\n            if ((this._target & value) !== 0) {\n                return;\n            }\n            this._target = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialBlock.prototype, \"inputs\", {\n        /**\n         * Gets the list of input points\n         */\n        get: function () {\n            return this._inputs;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialBlock.prototype, \"outputs\", {\n        /** Gets the list of output points */\n        get: function () {\n            return this._outputs;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Find an input by its name\n     * @param name defines the name of the input to look for\n     * @returns the input or null if not found\n     */\n    NodeMaterialBlock.prototype.getInputByName = function (name) {\n        var filter = this._inputs.filter(function (e) { return e.name === name; });\n        if (filter.length) {\n            return filter[0];\n        }\n        return null;\n    };\n    /**\n     * Find an output by its name\n     * @param name defines the name of the output to look for\n     * @returns the output or null if not found\n     */\n    NodeMaterialBlock.prototype.getOutputByName = function (name) {\n        var filter = this._outputs.filter(function (e) { return e.name === name; });\n        if (filter.length) {\n            return filter[0];\n        }\n        return null;\n    };\n    /**\n     * Initialize the block and prepare the context for build\n     * @param state defines the state that will be used for the build\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    NodeMaterialBlock.prototype.initialize = function (state) {\n        // Do nothing\n    };\n    /**\n     * Bind data to effect. Will only be called for blocks with isBindable === true\n     * @param effect defines the effect to bind data to\n     * @param nodeMaterial defines the hosting NodeMaterial\n     * @param mesh defines the mesh that will be rendered\n     * @param subMesh defines the submesh that will be rendered\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    NodeMaterialBlock.prototype.bind = function (effect, nodeMaterial, mesh, subMesh) {\n        // Do nothing\n    };\n    NodeMaterialBlock.prototype._declareOutput = function (output, state) {\n        return \"\".concat(state._getGLType(output.type), \" \").concat(output.associatedVariableName);\n    };\n    NodeMaterialBlock.prototype._writeVariable = function (currentPoint) {\n        var connectionPoint = currentPoint.connectedPoint;\n        if (connectionPoint) {\n            return \"\".concat(currentPoint.associatedVariableName);\n        }\n        return \"0.\";\n    };\n    NodeMaterialBlock.prototype._writeFloat = function (value) {\n        var stringVersion = value.toString();\n        if (stringVersion.indexOf(\".\") === -1) {\n            stringVersion += \".0\";\n        }\n        return \"\".concat(stringVersion);\n    };\n    /**\n     * Gets the current class name e.g. \"NodeMaterialBlock\"\n     * @returns the class name\n     */\n    NodeMaterialBlock.prototype.getClassName = function () {\n        return \"NodeMaterialBlock\";\n    };\n    /**\n     * Register a new input. Must be called inside a block constructor\n     * @param name defines the connection point name\n     * @param type defines the connection point type\n     * @param isOptional defines a boolean indicating that this input can be omitted\n     * @param target defines the target to use to limit the connection point (will be VertexAndFragment by default)\n     * @param point an already created connection point. If not provided, create a new one\n     * @returns the current block\n     */\n    NodeMaterialBlock.prototype.registerInput = function (name, type, isOptional, target, point) {\n        if (isOptional === void 0) { isOptional = false; }\n        point = point !== null && point !== void 0 ? point : new NodeMaterialConnectionPoint(name, this, NodeMaterialConnectionPointDirection.Input);\n        point.type = type;\n        point.isOptional = isOptional;\n        if (target) {\n            point.target = target;\n        }\n        this._inputs.push(point);\n        return this;\n    };\n    /**\n     * Register a new output. Must be called inside a block constructor\n     * @param name defines the connection point name\n     * @param type defines the connection point type\n     * @param target defines the target to use to limit the connection point (will be VertexAndFragment by default)\n     * @param point an already created connection point. If not provided, create a new one\n     * @returns the current block\n     */\n    NodeMaterialBlock.prototype.registerOutput = function (name, type, target, point) {\n        point = point !== null && point !== void 0 ? point : new NodeMaterialConnectionPoint(name, this, NodeMaterialConnectionPointDirection.Output);\n        point.type = type;\n        if (target) {\n            point.target = target;\n        }\n        this._outputs.push(point);\n        return this;\n    };\n    /**\n     * Will return the first available input e.g. the first one which is not an uniform or an attribute\n     * @param forOutput defines an optional connection point to check compatibility with\n     * @returns the first available input or null\n     */\n    NodeMaterialBlock.prototype.getFirstAvailableInput = function (forOutput) {\n        if (forOutput === void 0) { forOutput = null; }\n        for (var _i = 0, _a = this._inputs; _i < _a.length; _i++) {\n            var input = _a[_i];\n            if (!input.connectedPoint) {\n                if (!forOutput || forOutput.type === input.type || input.type === NodeMaterialBlockConnectionPointTypes.AutoDetect) {\n                    return input;\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * Will return the first available output e.g. the first one which is not yet connected and not a varying\n     * @param forBlock defines an optional block to check compatibility with\n     * @returns the first available input or null\n     */\n    NodeMaterialBlock.prototype.getFirstAvailableOutput = function (forBlock) {\n        if (forBlock === void 0) { forBlock = null; }\n        for (var _i = 0, _a = this._outputs; _i < _a.length; _i++) {\n            var output = _a[_i];\n            if (!forBlock || !forBlock.target || forBlock.target === NodeMaterialBlockTargets.Neutral || (forBlock.target & output.target) !== 0) {\n                return output;\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets the sibling of the given output\n     * @param current defines the current output\n     * @returns the next output in the list or null\n     */\n    NodeMaterialBlock.prototype.getSiblingOutput = function (current) {\n        var index = this._outputs.indexOf(current);\n        if (index === -1 || index >= this._outputs.length) {\n            return null;\n        }\n        return this._outputs[index + 1];\n    };\n    /**\n     * Checks if the current block is an ancestor of a given block\n     * @param block defines the potential descendant block to check\n     * @returns true if block is a descendant\n     */\n    NodeMaterialBlock.prototype.isAnAncestorOf = function (block) {\n        for (var _i = 0, _a = this._outputs; _i < _a.length; _i++) {\n            var output = _a[_i];\n            if (!output.hasEndpoints) {\n                continue;\n            }\n            for (var _b = 0, _c = output.endpoints; _b < _c.length; _b++) {\n                var endpoint = _c[_b];\n                if (endpoint.ownerBlock === block) {\n                    return true;\n                }\n                if (endpoint.ownerBlock.isAnAncestorOf(block)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    /**\n     * Connect current block with another block\n     * @param other defines the block to connect with\n     * @param options define the various options to help pick the right connections\n     * @param options.input\n     * @param options.output\n     * @param options.outputSwizzle\n     * @returns the current block\n     */\n    NodeMaterialBlock.prototype.connectTo = function (other, options) {\n        if (this._outputs.length === 0) {\n            return;\n        }\n        var output = options && options.output ? this.getOutputByName(options.output) : this.getFirstAvailableOutput(other);\n        var notFound = true;\n        while (notFound) {\n            var input = options && options.input ? other.getInputByName(options.input) : other.getFirstAvailableInput(output);\n            if (output && input && output.canConnectTo(input)) {\n                output.connectTo(input);\n                notFound = false;\n            }\n            else if (!output) {\n                throw \"Unable to find a compatible match\";\n            }\n            else {\n                output = this.getSiblingOutput(output);\n            }\n        }\n        return this;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    NodeMaterialBlock.prototype._buildBlock = function (state) {\n        // Empty. Must be defined by child nodes\n    };\n    /**\n     * Add uniforms, samplers and uniform buffers at compilation time\n     * @param state defines the state to update\n     * @param nodeMaterial defines the node material requesting the update\n     * @param defines defines the material defines to update\n     * @param uniformBuffers defines the list of uniform buffer names\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    NodeMaterialBlock.prototype.updateUniformsAndSamples = function (state, nodeMaterial, defines, uniformBuffers) {\n        // Do nothing\n    };\n    /**\n     * Add potential fallbacks if shader compilation fails\n     * @param mesh defines the mesh to be rendered\n     * @param fallbacks defines the current prioritized list of fallbacks\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    NodeMaterialBlock.prototype.provideFallbacks = function (mesh, fallbacks) {\n        // Do nothing\n    };\n    /**\n     * Initialize defines for shader compilation\n     * @param mesh defines the mesh to be rendered\n     * @param nodeMaterial defines the node material requesting the update\n     * @param defines defines the material defines to update\n     * @param useInstances specifies that instances should be used\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    NodeMaterialBlock.prototype.initializeDefines = function (mesh, nodeMaterial, defines, useInstances) {\n        if (useInstances === void 0) { useInstances = false; }\n    };\n    /**\n     * Update defines for shader compilation\n     * @param mesh defines the mesh to be rendered\n     * @param nodeMaterial defines the node material requesting the update\n     * @param defines defines the material defines to update\n     * @param useInstances specifies that instances should be used\n     * @param subMesh defines which submesh to render\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    NodeMaterialBlock.prototype.prepareDefines = function (mesh, nodeMaterial, defines, useInstances, subMesh) {\n        if (useInstances === void 0) { useInstances = false; }\n        // Do nothing\n    };\n    /**\n     * Lets the block try to connect some inputs automatically\n     * @param material defines the hosting NodeMaterial\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    NodeMaterialBlock.prototype.autoConfigure = function (material) {\n        // Do nothing\n    };\n    /**\n     * Function called when a block is declared as repeatable content generator\n     * @param vertexShaderState defines the current compilation state for the vertex shader\n     * @param fragmentShaderState defines the current compilation state for the fragment shader\n     * @param mesh defines the mesh to be rendered\n     * @param defines defines the material defines to update\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    NodeMaterialBlock.prototype.replaceRepeatableContent = function (vertexShaderState, fragmentShaderState, mesh, defines) {\n        // Do nothing\n    };\n    Object.defineProperty(NodeMaterialBlock.prototype, \"willBeGeneratedIntoVertexShaderFromFragmentShader\", {\n        /** Gets a boolean indicating that the code of this block will be promoted to vertex shader even if connected to fragment output */\n        get: function () {\n            if (this.isInput || this.isFinalMerger) {\n                return false;\n            }\n            if (this._outputs.some(function (o) { return o.isDirectlyConnectedToVertexOutput; })) {\n                return false;\n            }\n            if (this.target === NodeMaterialBlockTargets.Vertex) {\n                return false;\n            }\n            if (this.target === NodeMaterialBlockTargets.VertexAndFragment || this.target === NodeMaterialBlockTargets.Neutral) {\n                if (this._outputs.some(function (o) { return o.isConnectedInVertexShader; })) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Checks if the block is ready\n     * @param mesh defines the mesh to be rendered\n     * @param nodeMaterial defines the node material requesting the update\n     * @param defines defines the material defines to update\n     * @param useInstances specifies that instances should be used\n     * @returns true if the block is ready\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    NodeMaterialBlock.prototype.isReady = function (mesh, nodeMaterial, defines, useInstances) {\n        if (useInstances === void 0) { useInstances = false; }\n        return true;\n    };\n    NodeMaterialBlock.prototype._linkConnectionTypes = function (inputIndex0, inputIndex1, looseCoupling) {\n        if (looseCoupling === void 0) { looseCoupling = false; }\n        if (looseCoupling) {\n            this._inputs[inputIndex1]._acceptedConnectionPointType = this._inputs[inputIndex0];\n        }\n        else {\n            this._inputs[inputIndex0]._linkedConnectionSource = this._inputs[inputIndex1];\n        }\n        this._inputs[inputIndex1]._linkedConnectionSource = this._inputs[inputIndex0];\n    };\n    NodeMaterialBlock.prototype._processBuild = function (block, state, input, activeBlocks) {\n        block.build(state, activeBlocks);\n        var localBlockIsFragment = state._vertexState != null;\n        var otherBlockWasGeneratedInVertexShader = block._buildTarget === NodeMaterialBlockTargets.Vertex && block.target !== NodeMaterialBlockTargets.VertexAndFragment;\n        if (localBlockIsFragment &&\n            ((block.target & block._buildTarget) === 0 ||\n                (block.target & input.target) === 0 ||\n                (this.target !== NodeMaterialBlockTargets.VertexAndFragment && otherBlockWasGeneratedInVertexShader))) {\n            // context switch! We need a varying\n            if ((!block.isInput && state.target !== block._buildTarget) || // block was already emitted by vertex shader\n                (block.isInput && block.isAttribute && !block._noContextSwitch) // block is an attribute\n            ) {\n                var connectedPoint = input.connectedPoint;\n                if (state._vertexState._emitVaryingFromString(\"v_\" + connectedPoint.associatedVariableName, state._getGLType(connectedPoint.type))) {\n                    state._vertexState.compilationString += \"\".concat(\"v_\" + connectedPoint.associatedVariableName, \" = \").concat(connectedPoint.associatedVariableName, \";\\r\\n\");\n                }\n                input.associatedVariableName = \"v_\" + connectedPoint.associatedVariableName;\n                input._enforceAssociatedVariableName = true;\n            }\n        }\n    };\n    /**\n     * Validates the new name for the block node.\n     * @param newName the new name to be given to the node.\n     * @returns false if the name is a reserve word, else true.\n     */\n    NodeMaterialBlock.prototype.validateBlockName = function (newName) {\n        var reservedNames = [\n            \"position\",\n            \"normal\",\n            \"tangent\",\n            \"particle_positionw\",\n            \"uv\",\n            \"uv2\",\n            \"uv3\",\n            \"uv4\",\n            \"uv5\",\n            \"uv6\",\n            \"position2d\",\n            \"particle_uv\",\n            \"matricesIndices\",\n            \"matricesWeights\",\n            \"world0\",\n            \"world1\",\n            \"world2\",\n            \"world3\",\n            \"particle_color\",\n            \"particle_texturemask\",\n        ];\n        for (var _i = 0, reservedNames_1 = reservedNames; _i < reservedNames_1.length; _i++) {\n            var reservedName = reservedNames_1[_i];\n            if (newName === reservedName) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /**\n     * Compile the current node and generate the shader code\n     * @param state defines the current compilation state (uniforms, samplers, current string)\n     * @param activeBlocks defines the list of active blocks (i.e. blocks to compile)\n     * @returns true if already built\n     */\n    NodeMaterialBlock.prototype.build = function (state, activeBlocks) {\n        if (this._buildId === state.sharedData.buildId) {\n            return true;\n        }\n        if (!this.isInput) {\n            /** Prepare outputs */\n            for (var _i = 0, _a = this._outputs; _i < _a.length; _i++) {\n                var output = _a[_i];\n                if (!output.associatedVariableName) {\n                    output.associatedVariableName = state._getFreeVariableName(output.name);\n                }\n            }\n        }\n        // Check if \"parent\" blocks are compiled\n        for (var _b = 0, _c = this._inputs; _b < _c.length; _b++) {\n            var input = _c[_b];\n            if (!input.connectedPoint) {\n                if (!input.isOptional) {\n                    // Emit a warning\n                    state.sharedData.checks.notConnectedNonOptionalInputs.push(input);\n                }\n                continue;\n            }\n            if (this.target !== NodeMaterialBlockTargets.Neutral) {\n                if ((input.target & this.target) === 0) {\n                    continue;\n                }\n                if ((input.target & state.target) === 0) {\n                    continue;\n                }\n            }\n            var block = input.connectedPoint.ownerBlock;\n            if (block && block !== this) {\n                this._processBuild(block, state, input, activeBlocks);\n            }\n        }\n        if (this._buildId === state.sharedData.buildId) {\n            return true; // Need to check again as inputs can be connected multiple time to this endpoint\n        }\n        // Logs\n        if (state.sharedData.verbose) {\n            console.log(\"\".concat(state.target === NodeMaterialBlockTargets.Vertex ? \"Vertex shader\" : \"Fragment shader\", \": Building \").concat(this.name, \" [\").concat(this.getClassName(), \"]\"));\n        }\n        // Checks final outputs\n        if (this.isFinalMerger) {\n            switch (state.target) {\n                case NodeMaterialBlockTargets.Vertex:\n                    state.sharedData.checks.emitVertex = true;\n                    break;\n                case NodeMaterialBlockTargets.Fragment:\n                    state.sharedData.checks.emitFragment = true;\n                    break;\n            }\n        }\n        if (!this.isInput && state.sharedData.emitComments) {\n            state.compilationString += \"\\r\\n//\".concat(this.name, \"\\r\\n\");\n        }\n        this._buildBlock(state);\n        this._buildId = state.sharedData.buildId;\n        this._buildTarget = state.target;\n        // Compile connected blocks\n        for (var _d = 0, _e = this._outputs; _d < _e.length; _d++) {\n            var output = _e[_d];\n            if ((output.target & state.target) === 0) {\n                continue;\n            }\n            for (var _f = 0, _g = output.endpoints; _f < _g.length; _f++) {\n                var endpoint = _g[_f];\n                var block = endpoint.ownerBlock;\n                if (block && (block.target & state.target) !== 0 && activeBlocks.indexOf(block) !== -1) {\n                    this._processBuild(block, state, endpoint, activeBlocks);\n                }\n            }\n        }\n        return false;\n    };\n    NodeMaterialBlock.prototype._inputRename = function (name) {\n        return name;\n    };\n    NodeMaterialBlock.prototype._outputRename = function (name) {\n        return name;\n    };\n    NodeMaterialBlock.prototype._dumpPropertiesCode = function () {\n        var variableName = this._codeVariableName;\n        return \"\".concat(variableName, \".visibleInInspector = \").concat(this.visibleInInspector, \";\\r\\n\").concat(variableName, \".visibleOnFrame = \").concat(this.visibleOnFrame, \";\\r\\n\").concat(variableName, \".target = \").concat(this.target, \";\\r\\n\");\n    };\n    /**\n     * @param uniqueNames\n     * @param alreadyDumped\n     * @hidden\n     */\n    NodeMaterialBlock.prototype._dumpCode = function (uniqueNames, alreadyDumped) {\n        alreadyDumped.push(this);\n        var codeString;\n        // Get unique name\n        var nameAsVariableName = this.name.replace(/[^A-Za-z_]+/g, \"\");\n        this._codeVariableName = nameAsVariableName || \"\".concat(this.getClassName(), \"_\").concat(this.uniqueId);\n        if (uniqueNames.indexOf(this._codeVariableName) !== -1) {\n            var index = 0;\n            do {\n                index++;\n                this._codeVariableName = nameAsVariableName + index;\n            } while (uniqueNames.indexOf(this._codeVariableName) !== -1);\n        }\n        uniqueNames.push(this._codeVariableName);\n        // Declaration\n        codeString = \"\\r\\n// \".concat(this.getClassName(), \"\\r\\n\");\n        if (this.comments) {\n            codeString += \"// \".concat(this.comments, \"\\r\\n\");\n        }\n        codeString += \"var \".concat(this._codeVariableName, \" = new BABYLON.\").concat(this.getClassName(), \"(\\\"\").concat(this.name, \"\\\");\\r\\n\");\n        // Properties\n        codeString += this._dumpPropertiesCode();\n        // Inputs\n        for (var _i = 0, _a = this.inputs; _i < _a.length; _i++) {\n            var input = _a[_i];\n            if (!input.isConnected) {\n                continue;\n            }\n            var connectedOutput = input.connectedPoint;\n            var connectedBlock = connectedOutput.ownerBlock;\n            if (alreadyDumped.indexOf(connectedBlock) === -1) {\n                codeString += connectedBlock._dumpCode(uniqueNames, alreadyDumped);\n            }\n        }\n        // Outputs\n        for (var _b = 0, _c = this.outputs; _b < _c.length; _b++) {\n            var output = _c[_b];\n            if (!output.hasEndpoints) {\n                continue;\n            }\n            for (var _d = 0, _e = output.endpoints; _d < _e.length; _d++) {\n                var endpoint = _e[_d];\n                var connectedBlock = endpoint.ownerBlock;\n                if (connectedBlock && alreadyDumped.indexOf(connectedBlock) === -1) {\n                    codeString += connectedBlock._dumpCode(uniqueNames, alreadyDumped);\n                }\n            }\n        }\n        return codeString;\n    };\n    /**\n     * @param alreadyDumped\n     * @hidden\n     */\n    NodeMaterialBlock.prototype._dumpCodeForOutputConnections = function (alreadyDumped) {\n        var codeString = \"\";\n        if (alreadyDumped.indexOf(this) !== -1) {\n            return codeString;\n        }\n        alreadyDumped.push(this);\n        for (var _i = 0, _a = this.inputs; _i < _a.length; _i++) {\n            var input = _a[_i];\n            if (!input.isConnected) {\n                continue;\n            }\n            var connectedOutput = input.connectedPoint;\n            var connectedBlock = connectedOutput.ownerBlock;\n            codeString += connectedBlock._dumpCodeForOutputConnections(alreadyDumped);\n            codeString += \"\".concat(connectedBlock._codeVariableName, \".\").concat(connectedBlock._outputRename(connectedOutput.name), \".connectTo(\").concat(this._codeVariableName, \".\").concat(this._inputRename(input.name), \");\\r\\n\");\n        }\n        return codeString;\n    };\n    /**\n     * Clone the current block to a new identical block\n     * @param scene defines the hosting scene\n     * @param rootUrl defines the root URL to use to load textures and relative dependencies\n     * @returns a copy of the current block\n     */\n    NodeMaterialBlock.prototype.clone = function (scene, rootUrl) {\n        if (rootUrl === void 0) { rootUrl = \"\"; }\n        var serializationObject = this.serialize();\n        var blockType = GetClass(serializationObject.customType);\n        if (blockType) {\n            var block = new blockType();\n            block._deserialize(serializationObject, scene, rootUrl);\n            return block;\n        }\n        return null;\n    };\n    /**\n     * Serializes this block in a JSON representation\n     * @returns the serialized block object\n     */\n    NodeMaterialBlock.prototype.serialize = function () {\n        var serializationObject = {};\n        serializationObject.customType = \"BABYLON.\" + this.getClassName();\n        serializationObject.id = this.uniqueId;\n        serializationObject.name = this.name;\n        serializationObject.comments = this.comments;\n        serializationObject.visibleInInspector = this.visibleInInspector;\n        serializationObject.visibleOnFrame = this.visibleOnFrame;\n        serializationObject.target = this.target;\n        serializationObject.inputs = [];\n        serializationObject.outputs = [];\n        for (var _i = 0, _a = this.inputs; _i < _a.length; _i++) {\n            var input = _a[_i];\n            serializationObject.inputs.push(input.serialize());\n        }\n        for (var _b = 0, _c = this.outputs; _b < _c.length; _b++) {\n            var output = _c[_b];\n            serializationObject.outputs.push(output.serialize(false));\n        }\n        return serializationObject;\n    };\n    /**\n     * @param serializationObject\n     * @param scene\n     * @param rootUrl\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    NodeMaterialBlock.prototype._deserialize = function (serializationObject, scene, rootUrl) {\n        var _a;\n        this.name = serializationObject.name;\n        this.comments = serializationObject.comments;\n        this.visibleInInspector = !!serializationObject.visibleInInspector;\n        this.visibleOnFrame = !!serializationObject.visibleOnFrame;\n        this._target = (_a = serializationObject.target) !== null && _a !== void 0 ? _a : this.target;\n        this._deserializePortDisplayNamesAndExposedOnFrame(serializationObject);\n    };\n    NodeMaterialBlock.prototype._deserializePortDisplayNamesAndExposedOnFrame = function (serializationObject) {\n        var _this = this;\n        var serializedInputs = serializationObject.inputs;\n        var serializedOutputs = serializationObject.outputs;\n        if (serializedInputs) {\n            serializedInputs.forEach(function (port, i) {\n                if (port.displayName) {\n                    _this.inputs[i].displayName = port.displayName;\n                }\n                if (port.isExposedOnFrame) {\n                    _this.inputs[i].isExposedOnFrame = port.isExposedOnFrame;\n                    _this.inputs[i].exposedPortPosition = port.exposedPortPosition;\n                }\n            });\n        }\n        if (serializedOutputs) {\n            serializedOutputs.forEach(function (port, i) {\n                if (port.displayName) {\n                    _this.outputs[i].displayName = port.displayName;\n                }\n                if (port.isExposedOnFrame) {\n                    _this.outputs[i].isExposedOnFrame = port.isExposedOnFrame;\n                    _this.outputs[i].exposedPortPosition = port.exposedPortPosition;\n                }\n            });\n        }\n    };\n    /**\n     * Release resources\n     */\n    NodeMaterialBlock.prototype.dispose = function () {\n        for (var _i = 0, _a = this.inputs; _i < _a.length; _i++) {\n            var input = _a[_i];\n            input.dispose();\n        }\n        for (var _b = 0, _c = this.outputs; _b < _c.length; _b++) {\n            var output = _c[_b];\n            output.dispose();\n        }\n    };\n    return NodeMaterialBlock;\n}());\nexport { NodeMaterialBlock };\n//# sourceMappingURL=nodeMaterialBlock.js.map","import { NodeMaterialBlockConnectionPointTypes } from \"./Enums/nodeMaterialBlockConnectionPointTypes.js\";\nimport { NodeMaterialBlockTargets } from \"./Enums/nodeMaterialBlockTargets.js\";\nimport { Observable } from \"../../Misc/observable.js\";\n/**\n * Enum used to define the compatibility state between two connection points\n */\nexport var NodeMaterialConnectionPointCompatibilityStates;\n(function (NodeMaterialConnectionPointCompatibilityStates) {\n    /** Points are compatibles */\n    NodeMaterialConnectionPointCompatibilityStates[NodeMaterialConnectionPointCompatibilityStates[\"Compatible\"] = 0] = \"Compatible\";\n    /** Points are incompatible because of their types */\n    NodeMaterialConnectionPointCompatibilityStates[NodeMaterialConnectionPointCompatibilityStates[\"TypeIncompatible\"] = 1] = \"TypeIncompatible\";\n    /** Points are incompatible because of their targets (vertex vs fragment) */\n    NodeMaterialConnectionPointCompatibilityStates[NodeMaterialConnectionPointCompatibilityStates[\"TargetIncompatible\"] = 2] = \"TargetIncompatible\";\n    /** Points are incompatible because they are in the same hierarchy **/\n    NodeMaterialConnectionPointCompatibilityStates[NodeMaterialConnectionPointCompatibilityStates[\"HierarchyIssue\"] = 3] = \"HierarchyIssue\";\n})(NodeMaterialConnectionPointCompatibilityStates || (NodeMaterialConnectionPointCompatibilityStates = {}));\n/**\n * Defines the direction of a connection point\n */\nexport var NodeMaterialConnectionPointDirection;\n(function (NodeMaterialConnectionPointDirection) {\n    /** Input */\n    NodeMaterialConnectionPointDirection[NodeMaterialConnectionPointDirection[\"Input\"] = 0] = \"Input\";\n    /** Output */\n    NodeMaterialConnectionPointDirection[NodeMaterialConnectionPointDirection[\"Output\"] = 1] = \"Output\";\n})(NodeMaterialConnectionPointDirection || (NodeMaterialConnectionPointDirection = {}));\n/**\n * Defines a connection point for a block\n */\nvar NodeMaterialConnectionPoint = /** @class */ (function () {\n    /**\n     * Creates a new connection point\n     * @param name defines the connection point name\n     * @param ownerBlock defines the block hosting this connection point\n     * @param direction defines the direction of the connection point\n     */\n    function NodeMaterialConnectionPoint(name, ownerBlock, direction) {\n        /** @hidden */\n        this._connectedPoint = null;\n        this._endpoints = new Array();\n        /** @hidden */\n        this._typeConnectionSource = null;\n        /** @hidden */\n        this._defaultConnectionPointType = null;\n        /** @hidden */\n        this._linkedConnectionSource = null;\n        /** @hidden */\n        this._acceptedConnectionPointType = null;\n        this._type = NodeMaterialBlockConnectionPointTypes.Float;\n        /** @hidden */\n        this._enforceAssociatedVariableName = false;\n        /** Indicates that this connection point needs dual validation before being connected to another point */\n        this.needDualDirectionValidation = false;\n        /**\n         * Gets or sets the additional types supported by this connection point\n         */\n        this.acceptedConnectionPointTypes = new Array();\n        /**\n         * Gets or sets the additional types excluded by this connection point\n         */\n        this.excludedConnectionPointTypes = new Array();\n        /**\n         * Observable triggered when this point is connected\n         */\n        this.onConnectionObservable = new Observable();\n        /**\n         * Gets or sets a boolean indicating that this connection point is exposed on a frame\n         */\n        this.isExposedOnFrame = false;\n        /**\n         * Gets or sets number indicating the position that the port is exposed to on a frame\n         */\n        this.exposedPortPosition = -1;\n        /** @hidden */\n        this._prioritizeVertex = false;\n        this._target = NodeMaterialBlockTargets.VertexAndFragment;\n        this._ownerBlock = ownerBlock;\n        this.name = name;\n        this._direction = direction;\n    }\n    /**\n     * Checks if two types are equivalent\n     * @param type1 type 1 to check\n     * @param type2 type 2 to check\n     * @returns true if both types are equivalent, else false\n     */\n    NodeMaterialConnectionPoint.AreEquivalentTypes = function (type1, type2) {\n        switch (type1) {\n            case NodeMaterialBlockConnectionPointTypes.Vector3: {\n                if (type2 === NodeMaterialBlockConnectionPointTypes.Color3) {\n                    return true;\n                }\n                break;\n            }\n            case NodeMaterialBlockConnectionPointTypes.Vector4: {\n                if (type2 === NodeMaterialBlockConnectionPointTypes.Color4) {\n                    return true;\n                }\n                break;\n            }\n            case NodeMaterialBlockConnectionPointTypes.Color3: {\n                if (type2 === NodeMaterialBlockConnectionPointTypes.Vector3) {\n                    return true;\n                }\n                break;\n            }\n            case NodeMaterialBlockConnectionPointTypes.Color4: {\n                if (type2 === NodeMaterialBlockConnectionPointTypes.Vector4) {\n                    return true;\n                }\n                break;\n            }\n        }\n        return false;\n    };\n    Object.defineProperty(NodeMaterialConnectionPoint.prototype, \"direction\", {\n        /** Gets the direction of the point */\n        get: function () {\n            return this._direction;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialConnectionPoint.prototype, \"associatedVariableName\", {\n        /**\n         * Gets or sets the associated variable name in the shader\n         */\n        get: function () {\n            if (this._ownerBlock.isInput) {\n                return this._ownerBlock.associatedVariableName;\n            }\n            if ((!this._enforceAssociatedVariableName || !this._associatedVariableName) && this._connectedPoint) {\n                return this._connectedPoint.associatedVariableName;\n            }\n            return this._associatedVariableName;\n        },\n        set: function (value) {\n            this._associatedVariableName = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialConnectionPoint.prototype, \"innerType\", {\n        /** Get the inner type (ie AutoDetect for instance instead of the inferred one) */\n        get: function () {\n            if (this._linkedConnectionSource && this._linkedConnectionSource.isConnected) {\n                return this.type;\n            }\n            return this._type;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialConnectionPoint.prototype, \"type\", {\n        /**\n         * Gets or sets the connection point type (default is float)\n         */\n        get: function () {\n            if (this._type === NodeMaterialBlockConnectionPointTypes.AutoDetect) {\n                if (this._ownerBlock.isInput) {\n                    return this._ownerBlock.type;\n                }\n                if (this._connectedPoint) {\n                    return this._connectedPoint.type;\n                }\n                if (this._linkedConnectionSource && this._linkedConnectionSource.isConnected) {\n                    return this._linkedConnectionSource.type;\n                }\n            }\n            if (this._type === NodeMaterialBlockConnectionPointTypes.BasedOnInput) {\n                if (this._typeConnectionSource) {\n                    if (!this._typeConnectionSource.isConnected && this._defaultConnectionPointType) {\n                        return this._defaultConnectionPointType;\n                    }\n                    return this._typeConnectionSource.type;\n                }\n                else if (this._defaultConnectionPointType) {\n                    return this._defaultConnectionPointType;\n                }\n            }\n            return this._type;\n        },\n        set: function (value) {\n            this._type = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialConnectionPoint.prototype, \"target\", {\n        /** Gets or sets the target of that connection point */\n        get: function () {\n            if (!this._prioritizeVertex || !this._ownerBlock) {\n                return this._target;\n            }\n            if (this._target !== NodeMaterialBlockTargets.VertexAndFragment) {\n                return this._target;\n            }\n            if (this._ownerBlock.target === NodeMaterialBlockTargets.Fragment) {\n                return NodeMaterialBlockTargets.Fragment;\n            }\n            return NodeMaterialBlockTargets.Vertex;\n        },\n        set: function (value) {\n            this._target = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialConnectionPoint.prototype, \"isConnected\", {\n        /**\n         * Gets a boolean indicating that the current point is connected to another NodeMaterialBlock\n         */\n        get: function () {\n            return this.connectedPoint !== null || this.hasEndpoints;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialConnectionPoint.prototype, \"isConnectedToInputBlock\", {\n        /**\n         * Gets a boolean indicating that the current point is connected to an input block\n         */\n        get: function () {\n            return this.connectedPoint !== null && this.connectedPoint.ownerBlock.isInput;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialConnectionPoint.prototype, \"connectInputBlock\", {\n        /**\n         * Gets a the connected input block (if any)\n         */\n        get: function () {\n            if (!this.isConnectedToInputBlock) {\n                return null;\n            }\n            return this.connectedPoint.ownerBlock;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialConnectionPoint.prototype, \"connectedPoint\", {\n        /** Get the other side of the connection (if any) */\n        get: function () {\n            return this._connectedPoint;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialConnectionPoint.prototype, \"ownerBlock\", {\n        /** Get the block that owns this connection point */\n        get: function () {\n            return this._ownerBlock;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialConnectionPoint.prototype, \"sourceBlock\", {\n        /** Get the block connected on the other side of this connection (if any) */\n        get: function () {\n            if (!this._connectedPoint) {\n                return null;\n            }\n            return this._connectedPoint.ownerBlock;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialConnectionPoint.prototype, \"connectedBlocks\", {\n        /** Get the block connected on the endpoints of this connection (if any) */\n        get: function () {\n            if (this._endpoints.length === 0) {\n                return [];\n            }\n            return this._endpoints.map(function (e) { return e.ownerBlock; });\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialConnectionPoint.prototype, \"endpoints\", {\n        /** Gets the list of connected endpoints */\n        get: function () {\n            return this._endpoints;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialConnectionPoint.prototype, \"hasEndpoints\", {\n        /** Gets a boolean indicating if that output point is connected to at least one input */\n        get: function () {\n            return this._endpoints && this._endpoints.length > 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialConnectionPoint.prototype, \"isDirectlyConnectedToVertexOutput\", {\n        /** Gets a boolean indicating that this connection has a path to the vertex output*/\n        get: function () {\n            if (!this.hasEndpoints) {\n                return false;\n            }\n            for (var _i = 0, _a = this._endpoints; _i < _a.length; _i++) {\n                var endpoint = _a[_i];\n                if (endpoint.ownerBlock.target === NodeMaterialBlockTargets.Vertex) {\n                    return true;\n                }\n                if (endpoint.ownerBlock.target === NodeMaterialBlockTargets.Neutral || endpoint.ownerBlock.target === NodeMaterialBlockTargets.VertexAndFragment) {\n                    if (endpoint.ownerBlock.outputs.some(function (o) { return o.isDirectlyConnectedToVertexOutput; })) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialConnectionPoint.prototype, \"isConnectedInVertexShader\", {\n        /** Gets a boolean indicating that this connection will be used in the vertex shader */\n        get: function () {\n            if (this.target === NodeMaterialBlockTargets.Vertex) {\n                return true;\n            }\n            if (!this.hasEndpoints) {\n                return false;\n            }\n            for (var _i = 0, _a = this._endpoints; _i < _a.length; _i++) {\n                var endpoint = _a[_i];\n                if (endpoint.ownerBlock.target === NodeMaterialBlockTargets.Vertex) {\n                    return true;\n                }\n                if (endpoint.target === NodeMaterialBlockTargets.Vertex) {\n                    return true;\n                }\n                if (endpoint.ownerBlock.target === NodeMaterialBlockTargets.Neutral || endpoint.ownerBlock.target === NodeMaterialBlockTargets.VertexAndFragment) {\n                    if (endpoint.ownerBlock.outputs.some(function (o) { return o.isConnectedInVertexShader; })) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NodeMaterialConnectionPoint.prototype, \"isConnectedInFragmentShader\", {\n        /** Gets a boolean indicating that this connection will be used in the fragment shader */\n        get: function () {\n            if (this.target === NodeMaterialBlockTargets.Fragment) {\n                return true;\n            }\n            if (!this.hasEndpoints) {\n                return false;\n            }\n            for (var _i = 0, _a = this._endpoints; _i < _a.length; _i++) {\n                var endpoint = _a[_i];\n                if (endpoint.ownerBlock.target === NodeMaterialBlockTargets.Fragment) {\n                    return true;\n                }\n                if (endpoint.ownerBlock.target === NodeMaterialBlockTargets.Neutral || endpoint.ownerBlock.target === NodeMaterialBlockTargets.VertexAndFragment) {\n                    if (endpoint.ownerBlock.outputs.some(function (o) { return o.isConnectedInFragmentShader; })) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Creates a block suitable to be used as an input for this input point.\n     * If null is returned, a block based on the point type will be created.\n     * @returns The returned string parameter is the name of the output point of NodeMaterialBlock (first parameter of the returned array) that can be connected to the input\n     */\n    NodeMaterialConnectionPoint.prototype.createCustomInputBlock = function () {\n        return null;\n    };\n    /**\n     * Gets the current class name e.g. \"NodeMaterialConnectionPoint\"\n     * @returns the class name\n     */\n    NodeMaterialConnectionPoint.prototype.getClassName = function () {\n        return \"NodeMaterialConnectionPoint\";\n    };\n    /**\n     * Gets a boolean indicating if the current point can be connected to another point\n     * @param connectionPoint defines the other connection point\n     * @returns a boolean\n     */\n    NodeMaterialConnectionPoint.prototype.canConnectTo = function (connectionPoint) {\n        return this.checkCompatibilityState(connectionPoint) === NodeMaterialConnectionPointCompatibilityStates.Compatible;\n    };\n    /**\n     * Gets a number indicating if the current point can be connected to another point\n     * @param connectionPoint defines the other connection point\n     * @returns a number defining the compatibility state\n     */\n    NodeMaterialConnectionPoint.prototype.checkCompatibilityState = function (connectionPoint) {\n        var ownerBlock = this._ownerBlock;\n        var otherBlock = connectionPoint.ownerBlock;\n        if (ownerBlock.target === NodeMaterialBlockTargets.Fragment) {\n            // Let's check we are not going reverse\n            if (otherBlock.target === NodeMaterialBlockTargets.Vertex) {\n                return NodeMaterialConnectionPointCompatibilityStates.TargetIncompatible;\n            }\n            for (var _i = 0, _a = otherBlock.outputs; _i < _a.length; _i++) {\n                var output = _a[_i];\n                if (output.ownerBlock.target != NodeMaterialBlockTargets.Neutral && output.isConnectedInVertexShader) {\n                    return NodeMaterialConnectionPointCompatibilityStates.TargetIncompatible;\n                }\n            }\n        }\n        if (this.type !== connectionPoint.type && connectionPoint.innerType !== NodeMaterialBlockConnectionPointTypes.AutoDetect) {\n            // Equivalents\n            if (NodeMaterialConnectionPoint.AreEquivalentTypes(this.type, connectionPoint.type)) {\n                return NodeMaterialConnectionPointCompatibilityStates.Compatible;\n            }\n            // Accepted types\n            if ((connectionPoint.acceptedConnectionPointTypes && connectionPoint.acceptedConnectionPointTypes.indexOf(this.type) !== -1) ||\n                (connectionPoint._acceptedConnectionPointType && NodeMaterialConnectionPoint.AreEquivalentTypes(connectionPoint._acceptedConnectionPointType.type, this.type))) {\n                return NodeMaterialConnectionPointCompatibilityStates.Compatible;\n            }\n            else {\n                return NodeMaterialConnectionPointCompatibilityStates.TypeIncompatible;\n            }\n        }\n        // Excluded\n        if (connectionPoint.excludedConnectionPointTypes && connectionPoint.excludedConnectionPointTypes.indexOf(this.type) !== -1) {\n            return NodeMaterialConnectionPointCompatibilityStates.TypeIncompatible;\n        }\n        // Check hierarchy\n        var targetBlock = otherBlock;\n        var sourceBlock = ownerBlock;\n        if (this.direction === NodeMaterialConnectionPointDirection.Input) {\n            targetBlock = ownerBlock;\n            sourceBlock = otherBlock;\n        }\n        if (targetBlock.isAnAncestorOf(sourceBlock)) {\n            return NodeMaterialConnectionPointCompatibilityStates.HierarchyIssue;\n        }\n        return NodeMaterialConnectionPointCompatibilityStates.Compatible;\n    };\n    /**\n     * Connect this point to another connection point\n     * @param connectionPoint defines the other connection point\n     * @param ignoreConstraints defines if the system will ignore connection type constraints (default is false)\n     * @returns the current connection point\n     */\n    NodeMaterialConnectionPoint.prototype.connectTo = function (connectionPoint, ignoreConstraints) {\n        if (ignoreConstraints === void 0) { ignoreConstraints = false; }\n        if (!ignoreConstraints && !this.canConnectTo(connectionPoint)) {\n            throw \"Cannot connect these two connectors.\";\n        }\n        this._endpoints.push(connectionPoint);\n        connectionPoint._connectedPoint = this;\n        this._enforceAssociatedVariableName = false;\n        this.onConnectionObservable.notifyObservers(connectionPoint);\n        connectionPoint.onConnectionObservable.notifyObservers(this);\n        return this;\n    };\n    /**\n     * Disconnect this point from one of his endpoint\n     * @param endpoint defines the other connection point\n     * @returns the current connection point\n     */\n    NodeMaterialConnectionPoint.prototype.disconnectFrom = function (endpoint) {\n        var index = this._endpoints.indexOf(endpoint);\n        if (index === -1) {\n            return this;\n        }\n        this._endpoints.splice(index, 1);\n        endpoint._connectedPoint = null;\n        this._enforceAssociatedVariableName = false;\n        endpoint._enforceAssociatedVariableName = false;\n        return this;\n    };\n    /**\n     * Serializes this point in a JSON representation\n     * @param isInput defines if the connection point is an input (default is true)\n     * @returns the serialized point object\n     */\n    NodeMaterialConnectionPoint.prototype.serialize = function (isInput) {\n        if (isInput === void 0) { isInput = true; }\n        var serializationObject = {};\n        serializationObject.name = this.name;\n        serializationObject.displayName = this.displayName;\n        if (isInput && this.connectedPoint) {\n            serializationObject.inputName = this.name;\n            serializationObject.targetBlockId = this.connectedPoint.ownerBlock.uniqueId;\n            serializationObject.targetConnectionName = this.connectedPoint.name;\n            serializationObject.isExposedOnFrame = true;\n            serializationObject.exposedPortPosition = this.exposedPortPosition;\n        }\n        if (this.isExposedOnFrame || this.exposedPortPosition >= 0) {\n            serializationObject.isExposedOnFrame = true;\n            serializationObject.exposedPortPosition = this.exposedPortPosition;\n        }\n        return serializationObject;\n    };\n    /**\n     * Release resources\n     */\n    NodeMaterialConnectionPoint.prototype.dispose = function () {\n        this.onConnectionObservable.clear();\n    };\n    return NodeMaterialConnectionPoint;\n}());\nexport { NodeMaterialConnectionPoint };\n//# sourceMappingURL=nodeMaterialBlockConnectionPoint.js.map","import { __extends } from \"tslib\";\nimport { NodeMaterialConnectionPoint, NodeMaterialConnectionPointCompatibilityStates } from \"./nodeMaterialBlockConnectionPoint.js\";\n/**\n * Defines a connection point to be used for points with a custom object type\n */\nvar NodeMaterialConnectionPointCustomObject = /** @class */ (function (_super) {\n    __extends(NodeMaterialConnectionPointCustomObject, _super);\n    /**\n     * Creates a new connection point\n     * @param name defines the connection point name\n     * @param ownerBlock defines the block hosting this connection point\n     * @param direction defines the direction of the connection point\n     * @param _blockType\n     * @param _blockName\n     * @param _nameForCheking\n     */\n    function NodeMaterialConnectionPointCustomObject(name, ownerBlock, direction, _blockType, _blockName, _nameForCheking) {\n        var _this = _super.call(this, name, ownerBlock, direction) || this;\n        _this._blockType = _blockType;\n        _this._blockName = _blockName;\n        _this._nameForCheking = _nameForCheking;\n        if (!_this._nameForCheking) {\n            _this._nameForCheking = name;\n        }\n        _this.needDualDirectionValidation = true;\n        return _this;\n    }\n    /**\n     * Gets a number indicating if the current point can be connected to another point\n     * @param connectionPoint defines the other connection point\n     * @returns a number defining the compatibility state\n     */\n    NodeMaterialConnectionPointCustomObject.prototype.checkCompatibilityState = function (connectionPoint) {\n        return connectionPoint instanceof NodeMaterialConnectionPointCustomObject && connectionPoint.name === this._nameForCheking\n            ? NodeMaterialConnectionPointCompatibilityStates.Compatible\n            : NodeMaterialConnectionPointCompatibilityStates.TypeIncompatible;\n    };\n    /**\n     * Creates a block suitable to be used as an input for this input point.\n     * If null is returned, a block based on the point type will be created.\n     * @returns The returned string parameter is the name of the output point of NodeMaterialBlock (first parameter of the returned array) that can be connected to the input\n     */\n    NodeMaterialConnectionPointCustomObject.prototype.createCustomInputBlock = function () {\n        return [new this._blockType(this._blockName), this.name];\n    };\n    return NodeMaterialConnectionPointCustomObject;\n}(NodeMaterialConnectionPoint));\nexport { NodeMaterialConnectionPointCustomObject };\n//# sourceMappingURL=nodeMaterialConnectionPointCustomObject.js.map","/**\n * Enum defining the type of properties that can be edited in the property pages in the NME\n */\nexport var PropertyTypeForEdition;\n(function (PropertyTypeForEdition) {\n    /** property is a boolean */\n    PropertyTypeForEdition[PropertyTypeForEdition[\"Boolean\"] = 0] = \"Boolean\";\n    /** property is a float */\n    PropertyTypeForEdition[PropertyTypeForEdition[\"Float\"] = 1] = \"Float\";\n    /** property is a int */\n    PropertyTypeForEdition[PropertyTypeForEdition[\"Int\"] = 2] = \"Int\";\n    /** property is a Vector2 */\n    PropertyTypeForEdition[PropertyTypeForEdition[\"Vector2\"] = 3] = \"Vector2\";\n    /** property is a list of values */\n    PropertyTypeForEdition[PropertyTypeForEdition[\"List\"] = 4] = \"List\";\n})(PropertyTypeForEdition || (PropertyTypeForEdition = {}));\n/**\n * Decorator that flags a property in a node material block as being editable\n * @param displayName\n * @param propertyType\n * @param groupName\n * @param options\n */\nexport function editableInPropertyPage(displayName, propertyType, groupName, options) {\n    if (propertyType === void 0) { propertyType = PropertyTypeForEdition.Boolean; }\n    if (groupName === void 0) { groupName = \"PROPERTIES\"; }\n    return function (target, propertyKey) {\n        var propStore = target._propStore;\n        if (!propStore) {\n            propStore = [];\n            target._propStore = propStore;\n        }\n        propStore.push({\n            propertyName: propertyKey,\n            displayName: displayName,\n            type: propertyType,\n            groupName: groupName,\n            options: options !== null && options !== void 0 ? options : {},\n        });\n    };\n}\n//# sourceMappingURL=nodeMaterialDecorator.js.map","import { __extends } from \"tslib\";\nimport { Color4 } from \"../../Maths/math.color.js\";\nimport { ShaderMaterial } from \"../shaderMaterial.js\";\nimport \"../../Shaders/color.fragment.js\";\nimport \"../../Shaders/color.vertex.js\";\n/**\n * A material to use for fast depth-only rendering.\n * @since 5.0.0\n */\nvar OcclusionMaterial = /** @class */ (function (_super) {\n    __extends(OcclusionMaterial, _super);\n    function OcclusionMaterial(name, scene) {\n        var _this = _super.call(this, name, scene, \"color\", {\n            attributes: [\"position\"],\n            uniforms: [\"world\", \"viewProjection\", \"color\"],\n        }) || this;\n        _this.disableColorWrite = true;\n        _this.forceDepthWrite = true;\n        _this.setColor4(\"color\", new Color4(0, 0, 0, 1));\n        return _this;\n    }\n    return OcclusionMaterial;\n}(ShaderMaterial));\nexport { OcclusionMaterial };\n//# sourceMappingURL=occlusionMaterial.js.map"],"names":["IridescenceBlock","_super","name","_this","call","this","_isUnique","registerInput","registerOutput","prototype","initialize","state","_excludeVariableName","getClassName","Object","defineProperty","get","_inputs","enumerable","configurable","_outputs","autoConfigure","intensity","isConnected","intensityInput","value","output","connectTo","indexOfRefractionInput","indexOfRefraction","thicknessInput","thickness","prepareDefines","mesh","nodeMaterial","defines","setValue","GetCode","iridescenceBlock","code","intensityName","associatedVariableName","concat","_buildBlock","target","sharedData","bindableBlocks","push","blocksWithDefines","serialize","_deserialize","serializationObject","scene","rootUrl","mapOutputToVariable","ambientClr","diffuseDir","specularDir","clearcoatDir","sheenDir","diffuseInd","specularInd","clearcoatInd","sheenInd","refraction","lighting","shadow","alpha","PBRMetallicRoughnessBlock","_environmentBRDFTexture","_metallicReflectanceColor","_metallicF0Factor","directIntensity","environmentIntensity","specularIntensity","lightFalloff","useAlphaTest","alphaTestCutoff","useAlphaBlending","useRadianceOverAlpha","useSpecularOverAlpha","enableSpecularAntiAliasing","realTimeFiltering","realTimeFilteringQuality","useEnergyConservation","useRadianceOcclusion","useHorizonOcclusion","unlit","forceNormalForward","debugMode","debugLimit","debugFactor","material","cameraPosition","cameraPositionInput","getInputBlockByPredicate","b","systemValue","setAsSystemValue","view","viewInput","perturbedNormal","_scene","getEngine","getCaps","textureLOD","opacity","alphaTestCutOffString","toString","indexOf","standardDerivatives","getScene","_features","needTypeSuffixInShaderConstants","isRGBD","_areImageProcessingDirty","imageProcessingConfiguration","_areLightsDirty","light","needNormals","needRebuild","lightmapMode","shadowEnabled","specularEnabled","_lightId","rebuild","maxSimultaneousLights","_needNormals","updateUniformsAndSamples","uniformBuffers","lightIndex","onlyUpdateBuffersList","uniforms","samplers","isReady","bind","effect","_a","_b","setTexture","_environmentBrdfSamplerName","setFloat2","ambientScene","ambientColor","setColor3","invertNormal","useRightHandedSystem","_mirroredCameraPosition","setFloat","_invertNormalName","setFloat4","ior","connectInputBlock","f0","Math","pow","scaleToRef","metallicF90","setColor4","_vMetallicReflectanceFactorsName","_injectVertexCode","worldPos","worldPosition","comments","undefined","counters","_emitFunctionFromInclude","supportUniformBuffers","replaceStrings","search","replace","repeatKey","dynamicUniformBlocks","worldPosVaryingName","_emitVaryingFromString","compilationString","reflectionBlock","reflection","connectedPoint","ownerBlock","viewConnectionPoint","handleVertexSide","_emitUniformFromString","_injectAtEnd","_emitCodeFromInclude","_getAlbedoOpacityCode","albedoColor","baseColor","_getAmbientOcclusionCode","ao","ambientOcc","_getReflectivityCode","_getFreeVariableName","metallic","roughness","_c","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","_w","_x","_y","_z","_0","_1","_2","_3","_4","_5","_6","_7","_8","_9","_10","_11","_12","_13","_14","_15","_16","worldPositionConnectionPoint","cameraPositionConnectionPoint","worldNormalConnectionPoint","worldNormal","forcedBindableBlocks","blockingBlocks","worldPosVarName","normalShading","_emit2DSampler","hints","needAlphaBlending","needAlphaTesting","_emitExtension","_defineSkyboxName","_vNormalWName","_registerTempVariable","_define3DName","anisotropyBlock","anisotropy","getCode","hasTexture","_defineOppositeZ","_defineProjectionName","_defineLODReflectionAlpha","_defineLinearSpecularReflection","_vReflectionFilteringInfoName","sheenBlock","sheen","iridescence","clearcoatBlock","clearcoat","generateTBNSpace","isTangentConnectedToPerturbNormal","worldTangent","isTangentConnectedToAnisotropy","vTBNAvailable","subsurfaceBlock","subsurface","refractionBlock","indexOfRefractionConnectionPoint","_defineLODRefractionAlpha","_defineLinearSpecularRefraction","aoColor","aoDirectLightIntensity","_i","_17","length","hasEndpoints","remap","varName","conditions","_declareOutput","_dumpPropertiesCode","codeString","_codeVariableName","lightId","id","getLightById","min","max","notifiers","update","options","label","ReflectionBlock","useSphericalHarmonics","forceIrradianceInFragment","_getTexture","color","texture","environmentTexture","reflectionTexture","getTextureMatrix","lodLevelInAlpha","linearSpecularLOD","invertZ","gammaSpace","coordinatesMode","isCube","maxVaryingVectors","subMesh","_cubeSamplerName","_2DSamplerName","width","getSize","setFloat3","_vReflectionMicrosurfaceInfosName","lodGenerationScale","lodGenerationOffset","materialDefines","polynomials","sphericalPolynomial","USESPHERICALFROMREFLECTIONMAP","SPHERICAL_HARMONICS","preScaledHarmonics","setVector3","l00","l1_1","l10","l11","l2_2","l2_1","l20","l21","l22","x","y","z","xx","zz","yy","xy","yz","zx","reflectionVectorName","_vEnvironmentIrradianceName","_reflectionMatrixName","normalVarName","handleFragmentSideInits","_emitFunction","computeReflectionCoordsFunc","handleFragmentSideCodeReflectionCoords","_reflectionVectorName","_vReflectionInfosName","reflectionColor","_getFreeDefineName","RefractionBlock","linkRefractionWithTransparency","invertRefractionY","useThicknessAsDepth","refractionTexture","boundingBoxSize","isReadyOrNotBlocking","setMatrix","_refractionMatrixName","getReflectionTextureMatrix","depth","volumeIndexOfRefraction","_vRefractionInfosName","level","_vRefractionMicrosurfaceInfosName","_vRefractionFilteringInfoName","cubeTexture","boundingBoxPosition","textureBlocks","_samplerDeclaration","isRenderTarget","url","SheenBlock","albedoScaling","linkSheenWithAlbedo","SubSurfaceBlock","translucencyEnabled","translucencyDiffusionDist","translucencyIntensity","ssBlock","tintColor","translucencyDiffusionDistance","refractionTintAtDistance","tintAtDistance","refractionIntensity","refractionView","ParticleBlendMultiplyBlock","blendColor","alphaColor","alphaTexture","ParticleRampGradientBlock","rampColor","ParticleTextureBlock","_samplerName","convertToGammaSpace","convertToLinearSpace","acceptedConnectionPointTypes","uv","uvInput","isAttribute","setAsAttribute","_linearDefineName","_gammaDefineName","_writeOutput","swizzle","_tempTextureRead","VertexOutputBlock","_isLogarithmicDepthEnabled","nodeList","nodeList_1","useLogarithmicDepth","input","vector","fragmentOutputNodes","ColorSplitterBlock","inputsAreExclusive","_inputRename","_outputRename","rgba","rgbIn","rgbOutput","rOutput","gOutput","bOutput","aOutput","MultiplyBlock","_typeConnectionSource","_linkConnectionTypes","left","right","RemapBlock","sourceRange","targetRange","sourceMin","_writeFloat","sourceMax","targetMin","targetMax","asArray","TransformBlock","complementW","complementZ","onConnectionObservable","add","other","isInput","otherAsInput","transform","transformName","type","xyz","nonUniformScaling","TrigonometryBlockOperations","TrigonometryBlock","operation","Cos","Sin","Abs","Exp","Exp2","Round","Floor","Ceiling","Sqrt","Log","Tan","ArcTan","ArcCos","ArcSin","Fract","Sign","Radians","Degrees","VectorMergerBlock","xSwizzle","ySwizzle","zSwizzle","wSwizzle","xyOut","xyzOut","_buildSwizzle","len","substr","xInput","yInput","zInput","wInput","w","xyInput","xyIn","zwInput","zwIn","xyzInput","xyzIn","xyzwInput","xyzwIn","v4Output","v3Output","v2Output","v2CompOutput","_writeVariable","NodeMaterialBlockConnectionPointMode","NodeMaterialBlockConnectionPointTypes","NodeMaterialBlockTargets","NodeMaterialModes","NodeMaterialSystemValues","BonesBlock","matricesIndices","matricesIndicesInput","matricesWeights","matricesWeightsInput","world","worldInput","provideFallbacks","fallbacks","useBones","computeBonesUsingShaders","skeleton","addCPUSkinningFallback","_areAttributesDirty","blocksWithFallbacks","removeAttributes","removeUniforms","removeVaryings","removeIfDef","influenceVariablename","InstancesBlock","world0","world0Input","world1","world1Input","world2","world2Input","world3","world3Input","define","useInstances","changed","getRenderingMesh","hasThinInstances","markAsUnprocessed","engine","instanceID","_caps","canUseGLInstanceID","MorphTargetsBlock","tangent","position","positionInput","normal","normalInput","tangentInput","morphTargetManager","isUsingTextureForTargets","numInfluencers","markAsAttributesDirty","_bind","replaceRepeatableContent","vertexShaderState","fragmentShaderState","positionOutput","normalOutput","tangentOutput","uvOutput","repeatCount","NUM_MORPH_INFLUENCERS","manager","hasNormals","supportsNormals","hasTangents","supportsTangents","hasUVs","supportsUVs","injectionCode","index","_repeatableContentAnchor","attributes","repeatableContentBlocks","LightInformationBlock","isDisposed","lights","_forcePrepareDefines","isEnabled","_lightDataUniformName","_lightColorUniformName","transferToNodeMaterialEffect","diffuse","_lightTypeDefineName","direction","AddBlock","ScaleBlock","factor","ClampBlock","minimum","maximum","CrossBlock","excludedConnectionPointTypes","CustomBlock","_options","set","_deserializeOptions","_code","functionName","forEach","rexp","RegExp","_getGLType","hasInput","JSON","stringify","join","inParameters","outParameters","_findInputByName","typeFromInput","inLinkedConnectionTypes","connection","input1","input2","i","DotBlock","NormalizeBlock","ColorMergerBlock","rSwizzle","gSwizzle","bSwizzle","aSwizzle","rgbOut","rInput","r","gInput","g","bInput","aInput","a","rgbInput","color4Output","color3Output","VectorSplitterBlock","xyzw","xyzOutput","xyOutput","zwOutput","xOutput","yOutput","zOutput","wOutput","LerpBlock","gradient","DivideBlock","SubtractBlock","StepBlock","edge","OneMinusBlock","ViewDirectionBlock","FresnelBlock","viewDirection","viewDirectionInput","bias","biasInput","power","powerInput","fresnel","MaxBlock","MinBlock","DistanceBlock","LengthBlock","NegateBlock","PowBlock","RandomNumberBlock","seed","ArcTan2Block","SmoothStepBlock","edge0","edge1","ReciprocalBlock","ReplaceColorBlock","reference","distance","replacement","WaveBlockKind","PosterizeBlock","steps","WaveBlock","kind","SawTooth","Square","Triangle","GradientBlockColorStep","step","_step","val","_color","GradientBlock","colorSteps","onValueChangedObservable","colorStepsUpdated","notifyObservers","_writeColorConstant","tempColor","tempPosition","gradientSource","previousStep","_emitFloat","colorStep","NLerpBlock","WorleyNoise3DBlock","manhattanDistance","functionString","tempVariable","jitter","SimplexPerlin3DBlock","NormalBlendBlock","input0","stepR","stepG","Rotate2dBlock","angle","angleInput","ReflectBlock","incident","RefractBlock","DesaturateBlock","colorName","tempMin","tempMax","tempMerge","ModBlock","ConditionalBlockConditions","MatrixBuilderBlock","row0","row0Input","row1","row1Input","row2","row2Input","row3","row3Input","ConditionalBlock","condition","LessThan","_defaultConnectionPointType","trueStatement","true","falseStatement","false","Equal","NotEqual","LessOrEqual","GreaterThan","GreaterOrEqual","Xor","Or","And","CloudBlock","octaves","fbmNewName","localVariable","seedType","offsetX","offsetY","offsetZ","chaosValue","chaos","VoronoiNoiseBlock","tempOutput","tempCells","offset","density","cells","ElbowBlock","_target","NodeMaterialOptimizer","optimize","_vertexOutputNodes","_fragmentOutputNodes","NodeMaterialBuildState","Array","constants","functions","extensions","_attributeDeclaration","_uniformDeclaration","_constantDeclaration","_varyingTransfer","_repeatableContentAnchorIndex","_builtCompilationString","finalize","emitComments","isFragmentMode","functionCode","extensionName","varyingDeclaration","extension","prefix","variableNames","defineNames","includeName","replaceString","storeKey","key","temps","notDefine","varyings","startsWith","toFixed","NodeMaterialBuildStateSharedData","inputBlocks","animatedInputs","needWorldViewMatrix","needWorldViewProjectionMatrix","checks","emitVertex","emitFragment","notConnectedNonOptionalInputs","allowEmptyVertexProgram","emitErrors","errorMessage","notConnectedInput","onCreatedEffectParameters","NodeMaterialDefines","NORMAL","TANGENT","UV1","UV2","UV3","UV4","UV5","UV6","NUM_BONE_INFLUENCERS","BonesPerMesh","BONETEXTURE","MORPHTARGETS","MORPHTARGETS_NORMAL","MORPHTARGETS_TANGENT","MORPHTARGETS_UV","MORPHTARGETS_TEXTURE","IMAGEPROCESSING","VIGNETTE","VIGNETTEBLENDMODEMULTIPLY","VIGNETTEBLENDMODEOPAQUE","TONEMAPPING","TONEMAPPING_ACES","CONTRAST","EXPOSURE","COLORCURVES","COLORGRADING","COLORGRADING3D","SAMPLER3DGREENDEPTH","SAMPLER3DBGRMAP","IMAGEPROCESSINGPOSTPROCESS","SKIPFINALCOLORCLAMP","BUMPDIRECTUV","markAsUnprocessedIfDirty","_keys","NodeMaterial","_buildId","_BuildIdGenerator","_buildWasSuccessful","_cachedWorldViewMatrix","_cachedWorldViewProjectionMatrix","_optimizers","_animationFrame","BJSNODEMATERIALEDITOR","_getGlobalNodeMaterialEditor","editorData","ignoreAlpha","onBuildObservable","attachedBlocks","_mode","forceAlphaBlending","_attachImageProcessingConfiguration","NODEEDITOR","BABYLON","NodeEditor","_imageProcessingConfiguration","_markAllSubMeshesAsTexturesDirty","configuration","_imageProcessingObserver","onUpdateParameters","remove","_markAllSubMeshesAsImageProcessingDirty","getBlockByName","result","block","getBlockByPredicate","predicate","getInputBlocks","blocks","registerOptimizer","optimizer","unregisterOptimizer","splice","addOutputNode","node","_addVertexOutputNode","_addFragmentOutputNode","removeOutputNode","_removeVertexOutputNode","_removeFragmentOutputNode","_sharedData","_initializeBlock","nodesToProcessForOtherBuildState","_preparationId","isUnique","className","inputs","outputs","_resetDualBlocks","buildId","removeBlock","attachedBlockIndex","isFinalMerger","build","verbose","updateBuildId","_vertexCompilationState","supportsUniformBuffers","_fragmentCompilationState","vertexNodes","fragmentNodes","vertexOutputNode","fragmentOutputNode","vertexNodes_1","slice","_vertexState","fragmentNodes_1","fragmentNodes_2","meshes_1","meshes","subMeshes","getMaterial","markAllAsDirty","reset","_prepareDefinesForAttributes","oldNormal","oldTangent","isVerticesDataPresent","uvChanged","oldUV","createPostProcess","camera","samplingMode","reusable","textureType","textureFormat","mode","_createEffectForPostProcess","createEffectForPostProcess","postProcess","tempName","dummyMesh","_processDefines","updateEffect","nodeMaterialSource","onApplyObservable","_checkInternals","createProceduralTexture","size","proceduralTexture","reservedDataStore","hidden","createEffect","vertexElement","fragmentElement","_setEffect","onBeforeGenerationObservable","_createEffectForParticles","particleSystem","blendMode","onCompiled","onError","particleSystemDefinesJoined","getMeshByName","particleSystemDefines","fillDefines","createEffectForParticles","setCustomEffect","onBindObservable","particleSystemDefinesJoinedCurrent","frameId","getFrameId","animate","_transmit","initializeDefines","isDirty","lightDisposed","_areLightsDisposed","markAsProcessed","uniformBuffers_1","mergedUniforms_1","u","mergedSamplers_1","s","fallbacks_1","mergedUniforms","mergedSamplers","isReadyForSubMesh","isFrozen","_wasPreviouslyReady","_isReadyForSubMesh","some","previousEffect","vertex","fragment","vertexSource","fragmentSource","uniformsNames","uniformBuffersNames","indexParameters","maxSimultaneousMorphTargets","_onEffectCreatedObservable","allowShaderHotSwapping","resetCachedMaterial","setEffect","_materialContext","_renderId","getRenderId","bindOnlyWorldMatrix","_activeEffect","multiplyToRef","getViewMatrix","getTransformMatrix","_transmitWorld","bindForSubMesh","mustRebind","_mustRebind","visibility","_afterBind","getActiveTextures","activeTextures","apply","filter","tb","map","getTextureBlocks","dispose","forceDisposeEffect","forceDisposeTextures","notBoundToMesh","clear","_createNodeEditor","Show","edit","config","Promise","resolve","editorUrl","editorURL","EditorURL","setToDefault","viewProjectionInput","worldPosdMultipliedByViewProjection","vertexOutput","pixelColor","fragmentOutput","setToDefaultPostProcess","const1","isConstant","vmerger","scale","visibleInInspector","uv0","currentScreen","setToDefaultProceduralTexture","time","isBoolean","matrixMode","animationType","vectorMerger","cos","rgb","setToDefaultParticle","P","multiply","rampGradient","cSplitter","blendMultiply","loadAsync","_loadFileAsync","then","data","parse","loadFromSerialization","_gatherBlocks","rootNode","list","generateCode","alreadyDumped","vertexBlocks","uniqueNames","outputNode","fragmentBlocks","vertexBlocks_1","_dumpCode","fragmentBlocks_1","_dumpCodeForOutputConnections","selectedBlocks","customType","outputNodes","uniqueId","blocks_1","_restoreConnections","source","outputPoint","candidate","targetBlockId","targetConnectionName","inputPoint","getInputByName","inputName","merge","parsedBlock","blockType","blockIndex","outputNodeId","locations","locations_1","location_1","blockId","blockMap","comment","clone","shareEffect","Parse","ParseFromFileAsync","skipBuild","reject","catch","ParseFromSnippetAsync","snippetId","CreateDefault","request","addEventListener","readyState","status","snippet","responseText","jsonPayload","getUniqueId","err","open","SnippetUrl","send","newMaterial","IgnoreTexturesAtLoadTime","NodeMaterialBlock","_isFinalMerger","_isInput","_name","visibleOnFrame","_originalTargetIsNeutral","UniqueId","newName","validateBlockName","e","getOutputByName","currentPoint","stringVersion","isOptional","point","getFirstAvailableInput","forOutput","getFirstAvailableOutput","forBlock","getSiblingOutput","current","isAnAncestorOf","endpoints","endpoint","notFound","canConnectTo","o","isDirectlyConnectedToVertexOutput","isConnectedInVertexShader","inputIndex0","inputIndex1","looseCoupling","_acceptedConnectionPointType","_linkedConnectionSource","_processBuild","activeBlocks","localBlockIsFragment","otherBlockWasGeneratedInVertexShader","_buildTarget","_noContextSwitch","_enforceAssociatedVariableName","reservedNames_1","variableName","nameAsVariableName","connectedBlock","connectedOutput","_deserializePortDisplayNamesAndExposedOnFrame","serializedInputs","serializedOutputs","port","displayName","isExposedOnFrame","exposedPortPosition","NodeMaterialConnectionPointCompatibilityStates","NodeMaterialConnectionPointDirection","NodeMaterialConnectionPoint","_connectedPoint","_endpoints","_type","needDualDirectionValidation","_prioritizeVertex","_ownerBlock","_direction","AreEquivalentTypes","type1","type2","_associatedVariableName","isConnectedToInputBlock","isConnectedInFragmentShader","createCustomInputBlock","connectionPoint","checkCompatibilityState","Compatible","otherBlock","TargetIncompatible","innerType","TypeIncompatible","targetBlock","sourceBlock","Input","HierarchyIssue","ignoreConstraints","disconnectFrom","NodeMaterialConnectionPointCustomObject","_blockType","_blockName","_nameForCheking","PropertyTypeForEdition","editableInPropertyPage","propertyType","groupName","Boolean","propertyKey","propStore","_propStore","propertyName","OcclusionMaterial","disableColorWrite","forceDepthWrite"],"sourceRoot":""}