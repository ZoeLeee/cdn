{"version":3,"file":"js/vender~d5231ab8.85a02e31.js","mappings":"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","sources":["webpack:///../../../node_modules/@babylonjs/core/States/stencilState.js","webpack:///../../../node_modules/@babylonjs/core/States/stencilStateComposer.js","webpack:///../../../node_modules/@babylonjs/core/XR/features/WebXRAbstractFeature.js","webpack:///../../../node_modules/@babylonjs/core/XR/features/WebXRControllerPointerSelection.js","webpack:///../../../node_modules/@babylonjs/core/XR/features/WebXRControllerTeleportation.js","webpack:///../../../node_modules/@babylonjs/core/XR/features/WebXRHandTracking.js","webpack:///../../../node_modules/@babylonjs/core/XR/features/WebXRNearInteraction.js","webpack:///../../../node_modules/@babylonjs/core/XR/motionController/webXRAbstractMotionController.js","webpack:///../../../node_modules/@babylonjs/core/XR/motionController/webXRControllerComponent.js","webpack:///../../../node_modules/@babylonjs/core/XR/motionController/webXRGenericMotionController.js","webpack:///../../../node_modules/@babylonjs/core/XR/motionController/webXRMotionControllerManager.js","webpack:///../../../node_modules/@babylonjs/core/XR/motionController/webXRProfiledMotionController.js","webpack:///../../../node_modules/@babylonjs/core/XR/native/nativeXRRenderTarget.js","webpack:///../../../node_modules/@babylonjs/core/XR/webXRCamera.js","webpack:///../../../node_modules/@babylonjs/core/XR/webXRDefaultExperience.js","webpack:///../../../node_modules/@babylonjs/core/XR/webXREnterExitUI.js","webpack:///../../../node_modules/@babylonjs/core/XR/webXRExperienceHelper.js","webpack:///../../../node_modules/@babylonjs/core/XR/webXRFeaturesManager.js","webpack:///../../../node_modules/@babylonjs/core/XR/webXRInput.js","webpack:///../../../node_modules/@babylonjs/core/XR/webXRInputSource.js","webpack:///../../../node_modules/@babylonjs/core/XR/webXRLayerWrapper.js","webpack:///../../../node_modules/@babylonjs/core/XR/webXRManagedOutputCanvas.js","webpack:///../../../node_modules/@babylonjs/core/XR/webXRRenderTargetTextureProvider.js","webpack:///../../../node_modules/@babylonjs/core/XR/webXRSessionManager.js","webpack:///../../../node_modules/@babylonjs/core/XR/webXRTypes.js","webpack:///../../../node_modules/@babylonjs/core/XR/webXRWebGLLayer.js","webpack:///../../../node_modules/@babylonjs/core/abstractScene.js","webpack:///../../../node_modules/@babylonjs/core/assetContainer.js","webpack:///../../../node_modules/@babylonjs/core/XR/features/WebXRHitTestLegacy.js","webpack:///../../../node_modules/@babylonjs/core/XR/features/WebXRAnchorSystem.js","webpack:///../../../node_modules/@babylonjs/core/XR/features/WebXRPlaneDetector.js","webpack:///../../../node_modules/@babylonjs/core/XR/features/WebXRBackgroundRemover.js","webpack:///../../../node_modules/@babylonjs/core/XR/features/WebXRControllerPhysics.js","webpack:///../../../node_modules/@babylonjs/core/XR/features/WebXRHitTest.js","webpack:///../../../node_modules/@babylonjs/core/XR/features/WebXRFeaturePointSystem.js","webpack:///../../../node_modules/@babylonjs/core/XR/features/WebXRImageTracking.js","webpack:///../../../node_modules/@babylonjs/core/XR/features/WebXRMeshDetector.js","webpack:///../../../node_modules/@babylonjs/core/XR/features/WebXRDOMOverlay.js","webpack:///../../../node_modules/@babylonjs/core/XR/features/WebXRControllerMovement.js","webpack:///../../../node_modules/@babylonjs/core/XR/features/WebXRLightEstimation.js","webpack:///../../../node_modules/@babylonjs/core/XR/features/WebXREyeTracking.js","webpack:///../../../node_modules/@babylonjs/core/XR/features/WebXRWalkingLocomotion.js","webpack:///../../../node_modules/@babylonjs/core/XR/features/WebXRLayers.js","webpack:///../../../node_modules/@babylonjs/core/XR/motionController/webXRGenericHandController.js","webpack:///../../../node_modules/@babylonjs/core/XR/motionController/webXRMicrosoftMixedRealityController.js","webpack:///../../../node_modules/@babylonjs/core/XR/motionController/webXROculusTouchMotionController.js","webpack:///../../../node_modules/@babylonjs/core/XR/motionController/webXRHTCViveMotionController.js","webpack:///../../../node_modules/@babylonjs/core/XR/native/nativeXRFrame.js","webpack:///../../../node_modules/@babylonjs/core/node.js","webpack:///../../../node_modules/@babylonjs/core/scene.js","webpack:///../../../node_modules/@babylonjs/core/sceneComponent.js"],"sourcesContent":["\n/**\n * @hidden\n **/\nvar StencilState = /** @class */ (function () {\n    function StencilState() {\n        this.reset();\n    }\n    StencilState.prototype.reset = function () {\n        this.enabled = false;\n        this.mask = 0xff;\n        this.func = StencilState.ALWAYS;\n        this.funcRef = 1;\n        this.funcMask = 0xff;\n        this.opStencilFail = StencilState.KEEP;\n        this.opDepthFail = StencilState.KEEP;\n        this.opStencilDepthPass = StencilState.REPLACE;\n    };\n    Object.defineProperty(StencilState.prototype, \"stencilFunc\", {\n        get: function () {\n            return this.func;\n        },\n        set: function (value) {\n            this.func = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StencilState.prototype, \"stencilFuncRef\", {\n        get: function () {\n            return this.funcRef;\n        },\n        set: function (value) {\n            this.funcRef = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StencilState.prototype, \"stencilFuncMask\", {\n        get: function () {\n            return this.funcMask;\n        },\n        set: function (value) {\n            this.funcMask = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StencilState.prototype, \"stencilOpStencilFail\", {\n        get: function () {\n            return this.opStencilFail;\n        },\n        set: function (value) {\n            this.opStencilFail = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StencilState.prototype, \"stencilOpDepthFail\", {\n        get: function () {\n            return this.opDepthFail;\n        },\n        set: function (value) {\n            this.opDepthFail = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StencilState.prototype, \"stencilOpStencilDepthPass\", {\n        get: function () {\n            return this.opStencilDepthPass;\n        },\n        set: function (value) {\n            this.opStencilDepthPass = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StencilState.prototype, \"stencilMask\", {\n        get: function () {\n            return this.mask;\n        },\n        set: function (value) {\n            this.mask = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StencilState.prototype, \"stencilTest\", {\n        get: function () {\n            return this.enabled;\n        },\n        set: function (value) {\n            this.enabled = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will always pass. i.e. Pixels will be drawn in the order they are drawn */\n    StencilState.ALWAYS = 519;\n    /** Passed to stencilOperation to specify that stencil value must be kept */\n    StencilState.KEEP = 7680;\n    /** Passed to stencilOperation to specify that stencil value must be replaced */\n    StencilState.REPLACE = 7681;\n    return StencilState;\n}());\nexport { StencilState };\n//# sourceMappingURL=stencilState.js.map","/**\n * @hidden\n **/\nvar StencilStateComposer = /** @class */ (function () {\n    function StencilStateComposer(reset) {\n        if (reset === void 0) { reset = true; }\n        this._isStencilTestDirty = false;\n        this._isStencilMaskDirty = false;\n        this._isStencilFuncDirty = false;\n        this._isStencilOpDirty = false;\n        this.useStencilGlobalOnly = false;\n        if (reset) {\n            this.reset();\n        }\n    }\n    Object.defineProperty(StencilStateComposer.prototype, \"isDirty\", {\n        get: function () {\n            return this._isStencilTestDirty || this._isStencilMaskDirty || this._isStencilFuncDirty || this._isStencilOpDirty;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StencilStateComposer.prototype, \"func\", {\n        get: function () {\n            return this._func;\n        },\n        set: function (value) {\n            if (this._func === value) {\n                return;\n            }\n            this._func = value;\n            this._isStencilFuncDirty = true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StencilStateComposer.prototype, \"funcRef\", {\n        get: function () {\n            return this._funcRef;\n        },\n        set: function (value) {\n            if (this._funcRef === value) {\n                return;\n            }\n            this._funcRef = value;\n            this._isStencilFuncDirty = true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StencilStateComposer.prototype, \"funcMask\", {\n        get: function () {\n            return this._funcMask;\n        },\n        set: function (value) {\n            if (this._funcMask === value) {\n                return;\n            }\n            this._funcMask = value;\n            this._isStencilFuncDirty = true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StencilStateComposer.prototype, \"opStencilFail\", {\n        get: function () {\n            return this._opStencilFail;\n        },\n        set: function (value) {\n            if (this._opStencilFail === value) {\n                return;\n            }\n            this._opStencilFail = value;\n            this._isStencilOpDirty = true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StencilStateComposer.prototype, \"opDepthFail\", {\n        get: function () {\n            return this._opDepthFail;\n        },\n        set: function (value) {\n            if (this._opDepthFail === value) {\n                return;\n            }\n            this._opDepthFail = value;\n            this._isStencilOpDirty = true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StencilStateComposer.prototype, \"opStencilDepthPass\", {\n        get: function () {\n            return this._opStencilDepthPass;\n        },\n        set: function (value) {\n            if (this._opStencilDepthPass === value) {\n                return;\n            }\n            this._opStencilDepthPass = value;\n            this._isStencilOpDirty = true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StencilStateComposer.prototype, \"mask\", {\n        get: function () {\n            return this._mask;\n        },\n        set: function (value) {\n            if (this._mask === value) {\n                return;\n            }\n            this._mask = value;\n            this._isStencilMaskDirty = true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StencilStateComposer.prototype, \"enabled\", {\n        get: function () {\n            return this._enabled;\n        },\n        set: function (value) {\n            if (this._enabled === value) {\n                return;\n            }\n            this._enabled = value;\n            this._isStencilTestDirty = true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    StencilStateComposer.prototype.reset = function () {\n        var _a;\n        this.stencilMaterial = undefined;\n        (_a = this.stencilGlobal) === null || _a === void 0 ? void 0 : _a.reset();\n        this._isStencilTestDirty = true;\n        this._isStencilMaskDirty = true;\n        this._isStencilFuncDirty = true;\n        this._isStencilOpDirty = true;\n    };\n    StencilStateComposer.prototype.apply = function (gl) {\n        var _a;\n        if (!gl) {\n            return;\n        }\n        var stencilMaterialEnabled = !this.useStencilGlobalOnly && !!((_a = this.stencilMaterial) === null || _a === void 0 ? void 0 : _a.enabled);\n        this.enabled = stencilMaterialEnabled ? this.stencilMaterial.enabled : this.stencilGlobal.enabled;\n        this.func = stencilMaterialEnabled ? this.stencilMaterial.func : this.stencilGlobal.func;\n        this.funcRef = stencilMaterialEnabled ? this.stencilMaterial.funcRef : this.stencilGlobal.funcRef;\n        this.funcMask = stencilMaterialEnabled ? this.stencilMaterial.funcMask : this.stencilGlobal.funcMask;\n        this.opStencilFail = stencilMaterialEnabled ? this.stencilMaterial.opStencilFail : this.stencilGlobal.opStencilFail;\n        this.opDepthFail = stencilMaterialEnabled ? this.stencilMaterial.opDepthFail : this.stencilGlobal.opDepthFail;\n        this.opStencilDepthPass = stencilMaterialEnabled ? this.stencilMaterial.opStencilDepthPass : this.stencilGlobal.opStencilDepthPass;\n        this.mask = stencilMaterialEnabled ? this.stencilMaterial.mask : this.stencilGlobal.mask;\n        if (!this.isDirty) {\n            return;\n        }\n        // Stencil test\n        if (this._isStencilTestDirty) {\n            if (this.enabled) {\n                gl.enable(gl.STENCIL_TEST);\n            }\n            else {\n                gl.disable(gl.STENCIL_TEST);\n            }\n            this._isStencilTestDirty = false;\n        }\n        // Stencil mask\n        if (this._isStencilMaskDirty) {\n            gl.stencilMask(this.mask);\n            this._isStencilMaskDirty = false;\n        }\n        // Stencil func\n        if (this._isStencilFuncDirty) {\n            gl.stencilFunc(this.func, this.funcRef, this.funcMask);\n            this._isStencilFuncDirty = false;\n        }\n        // Stencil op\n        if (this._isStencilOpDirty) {\n            gl.stencilOp(this.opStencilFail, this.opDepthFail, this.opStencilDepthPass);\n            this._isStencilOpDirty = false;\n        }\n    };\n    return StencilStateComposer;\n}());\nexport { StencilStateComposer };\n//# sourceMappingURL=stencilStateComposer.js.map","/**\n * This is the base class for all WebXR features.\n * Since most features require almost the same resources and callbacks, this class can be used to simplify the development\n * Note that since the features manager is using the `IWebXRFeature` you are in no way obligated to use this class\n */\nvar WebXRAbstractFeature = /** @class */ (function () {\n    /**\n     * Construct a new (abstract) WebXR feature\n     * @param _xrSessionManager the xr session manager for this feature\n     */\n    function WebXRAbstractFeature(_xrSessionManager) {\n        this._xrSessionManager = _xrSessionManager;\n        this._attached = false;\n        this._removeOnDetach = [];\n        /**\n         * Is this feature disposed?\n         */\n        this.isDisposed = false;\n        /**\n         * Should auto-attach be disabled?\n         */\n        this.disableAutoAttach = false;\n        /**\n         * The name of the native xr feature name (like anchor, hit-test, or hand-tracking)\n         */\n        this.xrNativeFeatureName = \"\";\n    }\n    Object.defineProperty(WebXRAbstractFeature.prototype, \"attached\", {\n        /**\n         * Is this feature attached\n         */\n        get: function () {\n            return this._attached;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * attach this feature\n     *\n     * @param force should attachment be forced (even when already attached)\n     * @returns true if successful, false is failed or already attached\n     */\n    WebXRAbstractFeature.prototype.attach = function (force) {\n        var _this = this;\n        // do not attach a disposed feature\n        if (this.isDisposed) {\n            return false;\n        }\n        if (!force) {\n            if (this.attached) {\n                return false;\n            }\n        }\n        else {\n            if (this.attached) {\n                // detach first, to be sure\n                this.detach();\n            }\n        }\n        this._attached = true;\n        this._addNewAttachObserver(this._xrSessionManager.onXRFrameObservable, function (frame) { return _this._onXRFrame(frame); });\n        return true;\n    };\n    /**\n     * detach this feature.\n     *\n     * @returns true if successful, false if failed or already detached\n     */\n    WebXRAbstractFeature.prototype.detach = function () {\n        if (!this._attached) {\n            this.disableAutoAttach = true;\n            return false;\n        }\n        this._attached = false;\n        this._removeOnDetach.forEach(function (toRemove) {\n            toRemove.observable.remove(toRemove.observer);\n        });\n        return true;\n    };\n    /**\n     * Dispose this feature and all of the resources attached\n     */\n    WebXRAbstractFeature.prototype.dispose = function () {\n        this.detach();\n        this.isDisposed = true;\n    };\n    /**\n     * This function will be executed during before enabling the feature and can be used to not-allow enabling it.\n     * Note that at this point the session has NOT started, so this is purely checking if the browser supports it\n     *\n     * @returns whether or not the feature is compatible in this environment\n     */\n    WebXRAbstractFeature.prototype.isCompatible = function () {\n        return true;\n    };\n    /**\n     * This is used to register callbacks that will automatically be removed when detach is called.\n     * @param observable the observable to which the observer will be attached\n     * @param callback the callback to register\n     */\n    WebXRAbstractFeature.prototype._addNewAttachObserver = function (observable, callback) {\n        this._removeOnDetach.push({\n            observable: observable,\n            observer: observable.add(callback),\n        });\n    };\n    return WebXRAbstractFeature;\n}());\nexport { WebXRAbstractFeature };\n//# sourceMappingURL=WebXRAbstractFeature.js.map","import { __extends } from \"tslib\";\nimport { WebXRFeaturesManager, WebXRFeatureName } from \"../webXRFeaturesManager.js\";\nimport { Matrix, Vector3 } from \"../../Maths/math.vector.js\";\nimport { Color3 } from \"../../Maths/math.color.js\";\nimport { Axis } from \"../../Maths/math.axis.js\";\nimport { StandardMaterial } from \"../../Materials/standardMaterial.js\";\nimport { CreateCylinder } from \"../../Meshes/Builders/cylinderBuilder.js\";\nimport { CreateTorus } from \"../../Meshes/Builders/torusBuilder.js\";\nimport { Ray } from \"../../Culling/ray.js\";\nimport { PickingInfo } from \"../../Collisions/pickingInfo.js\";\nimport { WebXRAbstractFeature } from \"./WebXRAbstractFeature.js\";\nimport { UtilityLayerRenderer } from \"../../Rendering/utilityLayerRenderer.js\";\nimport { Viewport } from \"../../Maths/math.viewport.js\";\nimport { Tools } from \"../../Misc/tools.js\";\n/**\n * A module that will enable pointer selection for motion controllers of XR Input Sources\n */\nvar WebXRControllerPointerSelection = /** @class */ (function (_super) {\n    __extends(WebXRControllerPointerSelection, _super);\n    /**\n     * constructs a new background remover module\n     * @param _xrSessionManager the session manager for this module\n     * @param _options read-only options to be used in this module\n     */\n    function WebXRControllerPointerSelection(_xrSessionManager, _options) {\n        var _this = _super.call(this, _xrSessionManager) || this;\n        _this._options = _options;\n        _this._attachController = function (xrController) {\n            if (_this._controllers[xrController.uniqueId]) {\n                // already attached\n                return;\n            }\n            var _a = _this._generateNewMeshPair(xrController.pointer), laserPointer = _a.laserPointer, selectionMesh = _a.selectionMesh;\n            // get two new meshes\n            _this._controllers[xrController.uniqueId] = {\n                xrController: xrController,\n                laserPointer: laserPointer,\n                selectionMesh: selectionMesh,\n                meshUnderPointer: null,\n                pick: null,\n                tmpRay: new Ray(new Vector3(), new Vector3()),\n                disabledByNearInteraction: false,\n                id: WebXRControllerPointerSelection._IdCounter++,\n            };\n            if (_this._attachedController) {\n                if (!_this._options.enablePointerSelectionOnAllControllers &&\n                    _this._options.preferredHandedness &&\n                    xrController.inputSource.handedness === _this._options.preferredHandedness) {\n                    _this._attachedController = xrController.uniqueId;\n                }\n            }\n            else {\n                if (!_this._options.enablePointerSelectionOnAllControllers) {\n                    _this._attachedController = xrController.uniqueId;\n                }\n            }\n            switch (xrController.inputSource.targetRayMode) {\n                case \"tracked-pointer\":\n                    return _this._attachTrackedPointerRayMode(xrController);\n                case \"gaze\":\n                    return _this._attachGazeMode(xrController);\n                case \"screen\":\n                    return _this._attachScreenRayMode(xrController);\n            }\n        };\n        _this._controllers = {};\n        _this._tmpVectorForPickCompare = new Vector3();\n        /**\n         * Disable lighting on the laser pointer (so it will always be visible)\n         */\n        _this.disablePointerLighting = true;\n        /**\n         * Disable lighting on the selection mesh (so it will always be visible)\n         */\n        _this.disableSelectionMeshLighting = true;\n        /**\n         * Should the laser pointer be displayed\n         */\n        _this.displayLaserPointer = true;\n        /**\n         * Should the selection mesh be displayed (The ring at the end of the laser pointer)\n         */\n        _this.displaySelectionMesh = true;\n        /**\n         * This color will be set to the laser pointer when selection is triggered\n         */\n        _this.laserPointerPickedColor = new Color3(0.9, 0.9, 0.9);\n        /**\n         * Default color of the laser pointer\n         */\n        _this.laserPointerDefaultColor = new Color3(0.7, 0.7, 0.7);\n        /**\n         * default color of the selection ring\n         */\n        _this.selectionMeshDefaultColor = new Color3(0.8, 0.8, 0.8);\n        /**\n         * This color will be applied to the selection ring when selection is triggered\n         */\n        _this.selectionMeshPickedColor = new Color3(0.3, 0.3, 1.0);\n        _this._identityMatrix = Matrix.Identity();\n        _this._screenCoordinatesRef = Vector3.Zero();\n        _this._viewportRef = new Viewport(0, 0, 0, 0);\n        _this._scene = _this._xrSessionManager.scene;\n        return _this;\n    }\n    /**\n     * attach this feature\n     * Will usually be called by the features manager\n     *\n     * @returns true if successful.\n     */\n    WebXRControllerPointerSelection.prototype.attach = function () {\n        var _this = this;\n        if (!_super.prototype.attach.call(this)) {\n            return false;\n        }\n        this._options.xrInput.controllers.forEach(this._attachController);\n        this._addNewAttachObserver(this._options.xrInput.onControllerAddedObservable, this._attachController);\n        this._addNewAttachObserver(this._options.xrInput.onControllerRemovedObservable, function (controller) {\n            // REMOVE the controller\n            _this._detachController(controller.uniqueId);\n        });\n        this._scene.constantlyUpdateMeshUnderPointer = true;\n        if (this._options.gazeCamera) {\n            var webXRCamera = this._options.gazeCamera;\n            var _a = this._generateNewMeshPair(webXRCamera), laserPointer = _a.laserPointer, selectionMesh = _a.selectionMesh;\n            this._controllers[\"camera\"] = {\n                webXRCamera: webXRCamera,\n                laserPointer: laserPointer,\n                selectionMesh: selectionMesh,\n                meshUnderPointer: null,\n                pick: null,\n                tmpRay: new Ray(new Vector3(), new Vector3()),\n                disabledByNearInteraction: false,\n                id: WebXRControllerPointerSelection._IdCounter++,\n            };\n            this._attachGazeMode();\n        }\n        return true;\n    };\n    /**\n     * detach this feature.\n     * Will usually be called by the features manager\n     *\n     * @returns true if successful.\n     */\n    WebXRControllerPointerSelection.prototype.detach = function () {\n        var _this = this;\n        if (!_super.prototype.detach.call(this)) {\n            return false;\n        }\n        Object.keys(this._controllers).forEach(function (controllerId) {\n            _this._detachController(controllerId);\n        });\n        return true;\n    };\n    /**\n     * Will get the mesh under a specific pointer.\n     * `scene.meshUnderPointer` will only return one mesh - either left or right.\n     * @param controllerId the controllerId to check\n     * @returns The mesh under pointer or null if no mesh is under the pointer\n     */\n    WebXRControllerPointerSelection.prototype.getMeshUnderPointer = function (controllerId) {\n        if (this._controllers[controllerId]) {\n            return this._controllers[controllerId].meshUnderPointer;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the xr controller that correlates to the pointer id in the pointer event\n     *\n     * @param id the pointer id to search for\n     * @returns the controller that correlates to this id or null if not found\n     */\n    WebXRControllerPointerSelection.prototype.getXRControllerByPointerId = function (id) {\n        var keys = Object.keys(this._controllers);\n        for (var i = 0; i < keys.length; ++i) {\n            if (this._controllers[keys[i]].id === id) {\n                return this._controllers[keys[i]].xrController || null;\n            }\n        }\n        return null;\n    };\n    /**\n     * @param id\n     * @hidden\n     */\n    WebXRControllerPointerSelection.prototype._getPointerSelectionDisabledByPointerId = function (id) {\n        var keys = Object.keys(this._controllers);\n        for (var i = 0; i < keys.length; ++i) {\n            if (this._controllers[keys[i]].id === id) {\n                return this._controllers[keys[i]].disabledByNearInteraction;\n            }\n        }\n        return true;\n    };\n    /**\n     * @param id\n     * @param state\n     * @hidden\n     */\n    WebXRControllerPointerSelection.prototype._setPointerSelectionDisabledByPointerId = function (id, state) {\n        var keys = Object.keys(this._controllers);\n        for (var i = 0; i < keys.length; ++i) {\n            if (this._controllers[keys[i]].id === id) {\n                this._controllers[keys[i]].disabledByNearInteraction = state;\n                return;\n            }\n        }\n    };\n    WebXRControllerPointerSelection.prototype._onXRFrame = function (_xrFrame) {\n        var _this = this;\n        Object.keys(this._controllers).forEach(function (id) {\n            // only do this for the selected pointer\n            var controllerData = _this._controllers[id];\n            if ((!_this._options.enablePointerSelectionOnAllControllers && id !== _this._attachedController) || controllerData.disabledByNearInteraction) {\n                controllerData.selectionMesh.isVisible = false;\n                controllerData.laserPointer.isVisible = false;\n                controllerData.pick = null;\n                return;\n            }\n            controllerData.laserPointer.isVisible = _this.displayLaserPointer;\n            var controllerGlobalPosition;\n            // Every frame check collisions/input\n            if (controllerData.xrController) {\n                controllerGlobalPosition = controllerData.xrController.pointer.position;\n                controllerData.xrController.getWorldPointerRayToRef(controllerData.tmpRay);\n            }\n            else if (controllerData.webXRCamera) {\n                controllerGlobalPosition = controllerData.webXRCamera.position;\n                controllerData.webXRCamera.getForwardRayToRef(controllerData.tmpRay);\n            }\n            else {\n                return;\n            }\n            if (_this._options.maxPointerDistance) {\n                controllerData.tmpRay.length = _this._options.maxPointerDistance;\n            }\n            // update pointerX and pointerY of the scene. Only if the flag is set to true!\n            if (!_this._options.disableScenePointerVectorUpdate && controllerGlobalPosition) {\n                var scene = _this._xrSessionManager.scene;\n                var camera = _this._options.xrInput.xrCamera;\n                if (camera) {\n                    camera.viewport.toGlobalToRef(scene.getEngine().getRenderWidth(), scene.getEngine().getRenderHeight(), _this._viewportRef);\n                    Vector3.ProjectToRef(controllerGlobalPosition, _this._identityMatrix, scene.getTransformMatrix(), _this._viewportRef, _this._screenCoordinatesRef);\n                    // stay safe\n                    if (typeof _this._screenCoordinatesRef.x === \"number\" &&\n                        typeof _this._screenCoordinatesRef.y === \"number\" &&\n                        !isNaN(_this._screenCoordinatesRef.x) &&\n                        !isNaN(_this._screenCoordinatesRef.y)) {\n                        scene.pointerX = _this._screenCoordinatesRef.x;\n                        scene.pointerY = _this._screenCoordinatesRef.y;\n                        controllerData.screenCoordinates = {\n                            x: _this._screenCoordinatesRef.x,\n                            y: _this._screenCoordinatesRef.y,\n                        };\n                    }\n                }\n            }\n            var utilityScenePick = null;\n            if (_this._utilityLayerScene) {\n                utilityScenePick = _this._utilityLayerScene.pickWithRay(controllerData.tmpRay, _this._utilityLayerScene.pointerMovePredicate || _this.raySelectionPredicate);\n            }\n            var originalScenePick = _this._scene.pickWithRay(controllerData.tmpRay, _this._scene.pointerMovePredicate || _this.raySelectionPredicate);\n            if (!utilityScenePick || !utilityScenePick.hit) {\n                // No hit in utility scene\n                controllerData.pick = originalScenePick;\n            }\n            else if (!originalScenePick || !originalScenePick.hit) {\n                // No hit in original scene\n                controllerData.pick = utilityScenePick;\n            }\n            else if (utilityScenePick.distance < originalScenePick.distance) {\n                // Hit is closer in utility scene\n                controllerData.pick = utilityScenePick;\n            }\n            else {\n                // Hit is closer in original scene\n                controllerData.pick = originalScenePick;\n            }\n            if (controllerData.pick && controllerData.xrController) {\n                controllerData.pick.aimTransform = controllerData.xrController.pointer;\n                controllerData.pick.gripTransform = controllerData.xrController.grip || null;\n            }\n            var pick = controllerData.pick;\n            if (pick && pick.pickedPoint && pick.hit) {\n                // Update laser state\n                _this._updatePointerDistance(controllerData.laserPointer, pick.distance);\n                // Update cursor state\n                controllerData.selectionMesh.position.copyFrom(pick.pickedPoint);\n                controllerData.selectionMesh.scaling.x = Math.sqrt(pick.distance);\n                controllerData.selectionMesh.scaling.y = Math.sqrt(pick.distance);\n                controllerData.selectionMesh.scaling.z = Math.sqrt(pick.distance);\n                // To avoid z-fighting\n                var pickNormal = _this._convertNormalToDirectionOfRay(pick.getNormal(true), controllerData.tmpRay);\n                var deltaFighting = 0.001;\n                controllerData.selectionMesh.position.copyFrom(pick.pickedPoint);\n                if (pickNormal) {\n                    var axis1 = Vector3.Cross(Axis.Y, pickNormal);\n                    var axis2 = Vector3.Cross(pickNormal, axis1);\n                    Vector3.RotationFromAxisToRef(axis2, pickNormal, axis1, controllerData.selectionMesh.rotation);\n                    controllerData.selectionMesh.position.addInPlace(pickNormal.scale(deltaFighting));\n                }\n                controllerData.selectionMesh.isVisible = true && _this.displaySelectionMesh;\n                controllerData.meshUnderPointer = pick.pickedMesh;\n            }\n            else {\n                controllerData.selectionMesh.isVisible = false;\n                _this._updatePointerDistance(controllerData.laserPointer, 1);\n                controllerData.meshUnderPointer = null;\n            }\n        });\n    };\n    Object.defineProperty(WebXRControllerPointerSelection.prototype, \"_utilityLayerScene\", {\n        get: function () {\n            return this._options.customUtilityLayerScene || UtilityLayerRenderer.DefaultUtilityLayer.utilityLayerScene;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebXRControllerPointerSelection.prototype._attachGazeMode = function (xrController) {\n        var _this = this;\n        var controllerData = this._controllers[(xrController && xrController.uniqueId) || \"camera\"];\n        // attached when touched, detaches when raised\n        var timeToSelect = this._options.timeToSelect || 3000;\n        var sceneToRenderTo = this._options.useUtilityLayer ? this._utilityLayerScene : this._scene;\n        var oldPick = new PickingInfo();\n        var discMesh = CreateTorus(\"selection\", {\n            diameter: 0.0035 * 15,\n            thickness: 0.0025 * 6,\n            tessellation: 20,\n        }, sceneToRenderTo);\n        discMesh.isVisible = false;\n        discMesh.isPickable = false;\n        discMesh.parent = controllerData.selectionMesh;\n        var timer = 0;\n        var downTriggered = false;\n        var pointerEventInit = {\n            pointerId: controllerData.id,\n            pointerType: \"xr\",\n        };\n        controllerData.onFrameObserver = this._xrSessionManager.onXRFrameObservable.add(function () {\n            if (!controllerData.pick) {\n                return;\n            }\n            _this._augmentPointerInit(pointerEventInit, controllerData.id, controllerData.screenCoordinates);\n            controllerData.laserPointer.material.alpha = 0;\n            discMesh.isVisible = false;\n            if (controllerData.pick.hit) {\n                if (!_this._pickingMoved(oldPick, controllerData.pick)) {\n                    if (timer > timeToSelect / 10) {\n                        discMesh.isVisible = true;\n                    }\n                    timer += _this._scene.getEngine().getDeltaTime();\n                    if (timer >= timeToSelect) {\n                        _this._scene.simulatePointerDown(controllerData.pick, pointerEventInit);\n                        // this pointerdown event is not setting the controllerData.pointerDownTriggered to avoid a pointerUp event when this feature is detached\n                        downTriggered = true;\n                        // pointer up right after down, if disable on touch out\n                        if (_this._options.disablePointerUpOnTouchOut) {\n                            _this._scene.simulatePointerUp(controllerData.pick, pointerEventInit);\n                        }\n                        discMesh.isVisible = false;\n                    }\n                    else {\n                        var scaleFactor = 1 - timer / timeToSelect;\n                        discMesh.scaling.set(scaleFactor, scaleFactor, scaleFactor);\n                    }\n                }\n                else {\n                    if (downTriggered) {\n                        if (!_this._options.disablePointerUpOnTouchOut) {\n                            _this._scene.simulatePointerUp(controllerData.pick, pointerEventInit);\n                        }\n                    }\n                    downTriggered = false;\n                    timer = 0;\n                }\n            }\n            else {\n                downTriggered = false;\n                timer = 0;\n            }\n            _this._scene.simulatePointerMove(controllerData.pick, pointerEventInit);\n            oldPick = controllerData.pick;\n        });\n        if (this._options.renderingGroupId !== undefined) {\n            discMesh.renderingGroupId = this._options.renderingGroupId;\n        }\n        if (xrController) {\n            xrController.onDisposeObservable.addOnce(function () {\n                if (controllerData.pick && !_this._options.disablePointerUpOnTouchOut && downTriggered) {\n                    _this._scene.simulatePointerUp(controllerData.pick, pointerEventInit);\n                    controllerData.finalPointerUpTriggered = true;\n                }\n                discMesh.dispose();\n            });\n        }\n    };\n    WebXRControllerPointerSelection.prototype._attachScreenRayMode = function (xrController) {\n        var _this = this;\n        var controllerData = this._controllers[xrController.uniqueId];\n        var downTriggered = false;\n        var pointerEventInit = {\n            pointerId: controllerData.id,\n            pointerType: \"xr\",\n        };\n        controllerData.onFrameObserver = this._xrSessionManager.onXRFrameObservable.add(function () {\n            _this._augmentPointerInit(pointerEventInit, controllerData.id, controllerData.screenCoordinates);\n            if (!controllerData.pick || (_this._options.disablePointerUpOnTouchOut && downTriggered)) {\n                return;\n            }\n            if (!downTriggered) {\n                _this._scene.simulatePointerDown(controllerData.pick, pointerEventInit);\n                controllerData.pointerDownTriggered = true;\n                downTriggered = true;\n                if (_this._options.disablePointerUpOnTouchOut) {\n                    _this._scene.simulatePointerUp(controllerData.pick, pointerEventInit);\n                }\n            }\n            else {\n                _this._scene.simulatePointerMove(controllerData.pick, pointerEventInit);\n            }\n        });\n        xrController.onDisposeObservable.addOnce(function () {\n            _this._augmentPointerInit(pointerEventInit, controllerData.id, controllerData.screenCoordinates);\n            _this._xrSessionManager.runInXRFrame(function () {\n                if (controllerData.pick && !controllerData.finalPointerUpTriggered && downTriggered && !_this._options.disablePointerUpOnTouchOut) {\n                    _this._scene.simulatePointerUp(controllerData.pick, pointerEventInit);\n                    controllerData.finalPointerUpTriggered = true;\n                }\n            });\n        });\n    };\n    WebXRControllerPointerSelection.prototype._attachTrackedPointerRayMode = function (xrController) {\n        var _this = this;\n        var controllerData = this._controllers[xrController.uniqueId];\n        if (this._options.forceGazeMode) {\n            return this._attachGazeMode(xrController);\n        }\n        var pointerEventInit = {\n            pointerId: controllerData.id,\n            pointerType: \"xr\",\n        };\n        controllerData.onFrameObserver = this._xrSessionManager.onXRFrameObservable.add(function () {\n            controllerData.laserPointer.material.disableLighting = _this.disablePointerLighting;\n            controllerData.selectionMesh.material.disableLighting = _this.disableSelectionMeshLighting;\n            if (controllerData.pick) {\n                _this._augmentPointerInit(pointerEventInit, controllerData.id, controllerData.screenCoordinates);\n                _this._scene.simulatePointerMove(controllerData.pick, pointerEventInit);\n            }\n        });\n        if (xrController.inputSource.gamepad) {\n            var init = function (motionController) {\n                if (_this._options.overrideButtonId) {\n                    controllerData.selectionComponent = motionController.getComponent(_this._options.overrideButtonId);\n                }\n                if (!controllerData.selectionComponent) {\n                    controllerData.selectionComponent = motionController.getMainComponent();\n                }\n                controllerData.onButtonChangedObserver = controllerData.selectionComponent.onButtonStateChangedObservable.add(function (component) {\n                    if (component.changes.pressed) {\n                        var pressed = component.changes.pressed.current;\n                        if (controllerData.pick) {\n                            if (_this._options.enablePointerSelectionOnAllControllers || xrController.uniqueId === _this._attachedController) {\n                                _this._augmentPointerInit(pointerEventInit, controllerData.id, controllerData.screenCoordinates);\n                                if (pressed) {\n                                    _this._scene.simulatePointerDown(controllerData.pick, pointerEventInit);\n                                    controllerData.pointerDownTriggered = true;\n                                    controllerData.selectionMesh.material.emissiveColor = _this.selectionMeshPickedColor;\n                                    controllerData.laserPointer.material.emissiveColor = _this.laserPointerPickedColor;\n                                }\n                                else {\n                                    _this._scene.simulatePointerUp(controllerData.pick, pointerEventInit);\n                                    controllerData.selectionMesh.material.emissiveColor = _this.selectionMeshDefaultColor;\n                                    controllerData.laserPointer.material.emissiveColor = _this.laserPointerDefaultColor;\n                                }\n                            }\n                        }\n                        else {\n                            if (pressed && !_this._options.enablePointerSelectionOnAllControllers && !_this._options.disableSwitchOnClick) {\n                                _this._attachedController = xrController.uniqueId;\n                            }\n                        }\n                    }\n                });\n            };\n            if (xrController.motionController) {\n                init(xrController.motionController);\n            }\n            else {\n                xrController.onMotionControllerInitObservable.add(init);\n            }\n        }\n        else {\n            // use the select and squeeze events\n            var selectStartListener = function (event) {\n                _this._augmentPointerInit(pointerEventInit, controllerData.id, controllerData.screenCoordinates);\n                if (controllerData.xrController && event.inputSource === controllerData.xrController.inputSource && controllerData.pick) {\n                    _this._scene.simulatePointerDown(controllerData.pick, pointerEventInit);\n                    controllerData.pointerDownTriggered = true;\n                    controllerData.selectionMesh.material.emissiveColor = _this.selectionMeshPickedColor;\n                    controllerData.laserPointer.material.emissiveColor = _this.laserPointerPickedColor;\n                }\n            };\n            var selectEndListener = function (event) {\n                _this._augmentPointerInit(pointerEventInit, controllerData.id, controllerData.screenCoordinates);\n                if (controllerData.xrController && event.inputSource === controllerData.xrController.inputSource && controllerData.pick) {\n                    _this._scene.simulatePointerUp(controllerData.pick, pointerEventInit);\n                    controllerData.selectionMesh.material.emissiveColor = _this.selectionMeshDefaultColor;\n                    controllerData.laserPointer.material.emissiveColor = _this.laserPointerDefaultColor;\n                }\n            };\n            controllerData.eventListeners = {\n                selectend: selectEndListener,\n                selectstart: selectStartListener,\n            };\n            this._xrSessionManager.session.addEventListener(\"selectstart\", selectStartListener);\n            this._xrSessionManager.session.addEventListener(\"selectend\", selectEndListener);\n        }\n    };\n    WebXRControllerPointerSelection.prototype._convertNormalToDirectionOfRay = function (normal, ray) {\n        if (normal) {\n            var angle = Math.acos(Vector3.Dot(normal, ray.direction));\n            if (angle < Math.PI / 2) {\n                normal.scaleInPlace(-1);\n            }\n        }\n        return normal;\n    };\n    WebXRControllerPointerSelection.prototype._detachController = function (xrControllerUniqueId) {\n        var _this = this;\n        var controllerData = this._controllers[xrControllerUniqueId];\n        if (!controllerData) {\n            return;\n        }\n        if (controllerData.selectionComponent) {\n            if (controllerData.onButtonChangedObserver) {\n                controllerData.selectionComponent.onButtonStateChangedObservable.remove(controllerData.onButtonChangedObserver);\n            }\n        }\n        if (controllerData.onFrameObserver) {\n            this._xrSessionManager.onXRFrameObservable.remove(controllerData.onFrameObserver);\n        }\n        if (controllerData.eventListeners) {\n            Object.keys(controllerData.eventListeners).forEach(function (eventName) {\n                var func = controllerData.eventListeners && controllerData.eventListeners[eventName];\n                if (func) {\n                    _this._xrSessionManager.session.removeEventListener(eventName, func);\n                }\n            });\n        }\n        if (!controllerData.finalPointerUpTriggered && controllerData.pointerDownTriggered) {\n            // Stay safe and fire a pointerup, in case it wasn't already triggered\n            var pointerEventInit_1 = {\n                pointerId: controllerData.id,\n                pointerType: \"xr\",\n            };\n            this._xrSessionManager.runInXRFrame(function () {\n                _this._augmentPointerInit(pointerEventInit_1, controllerData.id, controllerData.screenCoordinates);\n                _this._scene.simulatePointerUp(controllerData.pick || new PickingInfo(), pointerEventInit_1);\n                controllerData.finalPointerUpTriggered = true;\n            });\n        }\n        this._xrSessionManager.scene.onBeforeRenderObservable.addOnce(function () {\n            try {\n                controllerData.selectionMesh.dispose();\n                controllerData.laserPointer.dispose();\n                // remove from the map\n                delete _this._controllers[xrControllerUniqueId];\n                if (_this._attachedController === xrControllerUniqueId) {\n                    // check for other controllers\n                    var keys = Object.keys(_this._controllers);\n                    if (keys.length) {\n                        _this._attachedController = keys[0];\n                    }\n                    else {\n                        _this._attachedController = \"\";\n                    }\n                }\n            }\n            catch (e) {\n                Tools.Warn(\"controller already detached.\");\n            }\n        });\n    };\n    WebXRControllerPointerSelection.prototype._generateNewMeshPair = function (meshParent) {\n        var sceneToRenderTo = this._options.useUtilityLayer ? this._options.customUtilityLayerScene || UtilityLayerRenderer.DefaultUtilityLayer.utilityLayerScene : this._scene;\n        var laserPointer = this._options.customLasterPointerMeshGenerator\n            ? this._options.customLasterPointerMeshGenerator()\n            : CreateCylinder(\"laserPointer\", {\n                height: 1,\n                diameterTop: 0.0002,\n                diameterBottom: 0.004,\n                tessellation: 20,\n                subdivisions: 1,\n            }, sceneToRenderTo);\n        laserPointer.parent = meshParent;\n        var laserPointerMaterial = new StandardMaterial(\"laserPointerMat\", sceneToRenderTo);\n        laserPointerMaterial.emissiveColor = this.laserPointerDefaultColor;\n        laserPointerMaterial.alpha = 0.7;\n        laserPointer.material = laserPointerMaterial;\n        laserPointer.rotation.x = Math.PI / 2;\n        this._updatePointerDistance(laserPointer, 1);\n        laserPointer.isPickable = false;\n        laserPointer.isVisible = false;\n        // Create a gaze tracker for the  XR controller\n        var selectionMesh = this._options.customSelectionMeshGenerator\n            ? this._options.customSelectionMeshGenerator()\n            : CreateTorus(\"gazeTracker\", {\n                diameter: 0.0035 * 3,\n                thickness: 0.0025 * 3,\n                tessellation: 20,\n            }, sceneToRenderTo);\n        selectionMesh.bakeCurrentTransformIntoVertices();\n        selectionMesh.isPickable = false;\n        selectionMesh.isVisible = false;\n        var targetMat = new StandardMaterial(\"targetMat\", sceneToRenderTo);\n        targetMat.specularColor = Color3.Black();\n        targetMat.emissiveColor = this.selectionMeshDefaultColor;\n        targetMat.backFaceCulling = false;\n        selectionMesh.material = targetMat;\n        if (this._options.renderingGroupId !== undefined) {\n            laserPointer.renderingGroupId = this._options.renderingGroupId;\n            selectionMesh.renderingGroupId = this._options.renderingGroupId;\n        }\n        return {\n            laserPointer: laserPointer,\n            selectionMesh: selectionMesh,\n        };\n    };\n    WebXRControllerPointerSelection.prototype._pickingMoved = function (oldPick, newPick) {\n        var _a;\n        if (!oldPick.hit || !newPick.hit) {\n            return true;\n        }\n        if (!oldPick.pickedMesh || !oldPick.pickedPoint || !newPick.pickedMesh || !newPick.pickedPoint) {\n            return true;\n        }\n        if (oldPick.pickedMesh !== newPick.pickedMesh) {\n            return true;\n        }\n        (_a = oldPick.pickedPoint) === null || _a === void 0 ? void 0 : _a.subtractToRef(newPick.pickedPoint, this._tmpVectorForPickCompare);\n        this._tmpVectorForPickCompare.set(Math.abs(this._tmpVectorForPickCompare.x), Math.abs(this._tmpVectorForPickCompare.y), Math.abs(this._tmpVectorForPickCompare.z));\n        var delta = (this._options.gazeModePointerMovedFactor || 1) * 0.01 * newPick.distance;\n        var length = this._tmpVectorForPickCompare.length();\n        if (length > delta) {\n            return true;\n        }\n        return false;\n    };\n    WebXRControllerPointerSelection.prototype._updatePointerDistance = function (_laserPointer, distance) {\n        if (distance === void 0) { distance = 100; }\n        _laserPointer.scaling.y = distance;\n        // a bit of distance from the controller\n        if (this._scene.useRightHandedSystem) {\n            distance *= -1;\n        }\n        _laserPointer.position.z = distance / 2 + 0.05;\n    };\n    WebXRControllerPointerSelection.prototype._augmentPointerInit = function (pointerEventInit, id, screenCoordinates) {\n        pointerEventInit.pointerId = id;\n        pointerEventInit.pointerType = \"xr\";\n        if (screenCoordinates) {\n            pointerEventInit.screenX = screenCoordinates.x;\n            pointerEventInit.screenY = screenCoordinates.y;\n        }\n    };\n    Object.defineProperty(WebXRControllerPointerSelection.prototype, \"lasterPointerDefaultColor\", {\n        /** @hidden */\n        get: function () {\n            // here due to a typo\n            return this.laserPointerDefaultColor;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebXRControllerPointerSelection._IdCounter = 200;\n    /**\n     * The module's name\n     */\n    WebXRControllerPointerSelection.Name = WebXRFeatureName.POINTER_SELECTION;\n    /**\n     * The (Babylon) version of this module.\n     * This is an integer representing the implementation version.\n     * This number does not correspond to the WebXR specs version\n     */\n    WebXRControllerPointerSelection.Version = 1;\n    return WebXRControllerPointerSelection;\n}(WebXRAbstractFeature));\nexport { WebXRControllerPointerSelection };\n//register the plugin\nWebXRFeaturesManager.AddWebXRFeature(WebXRControllerPointerSelection.Name, function (xrSessionManager, options) {\n    return function () { return new WebXRControllerPointerSelection(xrSessionManager, options); };\n}, WebXRControllerPointerSelection.Version, true);\n//# sourceMappingURL=WebXRControllerPointerSelection.js.map","import { __extends } from \"tslib\";\nimport { WebXRFeaturesManager, WebXRFeatureName } from \"../webXRFeaturesManager.js\";\nimport { Observable } from \"../../Misc/observable.js\";\nimport { WebXRControllerComponent } from \"../motionController/webXRControllerComponent.js\";\nimport { Vector3, Quaternion } from \"../../Maths/math.vector.js\";\nimport { Ray } from \"../../Culling/ray.js\";\nimport { DynamicTexture } from \"../../Materials/Textures/dynamicTexture.js\";\nimport { CreateCylinder } from \"../../Meshes/Builders/cylinderBuilder.js\";\nimport { SineEase, EasingFunction } from \"../../Animations/easing.js\";\nimport { Animation } from \"../../Animations/animation.js\";\nimport { Axis } from \"../../Maths/math.axis.js\";\nimport { StandardMaterial } from \"../../Materials/standardMaterial.js\";\nimport { CreateGround } from \"../../Meshes/Builders/groundBuilder.js\";\nimport { CreateTorus } from \"../../Meshes/Builders/torusBuilder.js\";\nimport { Curve3 } from \"../../Maths/math.path.js\";\nimport { CreateLines } from \"../../Meshes/Builders/linesBuilder.js\";\nimport { WebXRAbstractFeature } from \"./WebXRAbstractFeature.js\";\nimport { Color3 } from \"../../Maths/math.color.js\";\nimport { UtilityLayerRenderer } from \"../../Rendering/utilityLayerRenderer.js\";\nimport { PointerEventTypes } from \"../../Events/pointerEvents.js\";\nimport { setAndStartTimer } from \"../../Misc/timer.js\";\n/**\n * This is a teleportation feature to be used with WebXR-enabled motion controllers.\n * When enabled and attached, the feature will allow a user to move around and rotate in the scene using\n * the input of the attached controllers.\n */\nvar WebXRMotionControllerTeleportation = /** @class */ (function (_super) {\n    __extends(WebXRMotionControllerTeleportation, _super);\n    /**\n     * constructs a new teleportation system\n     * @param _xrSessionManager an instance of WebXRSessionManager\n     * @param _options configuration object for this feature\n     */\n    function WebXRMotionControllerTeleportation(_xrSessionManager, _options) {\n        var _this = _super.call(this, _xrSessionManager) || this;\n        _this._options = _options;\n        _this._controllers = {};\n        _this._snappedToPoint = false;\n        _this._tmpRay = new Ray(new Vector3(), new Vector3());\n        _this._tmpVector = new Vector3();\n        _this._tmpQuaternion = new Quaternion();\n        /**\n         * Skip the next teleportation. This can be controlled by the user to prevent the user from teleportation\n         * to sections that are not yet \"unlocked\", but should still show the teleportation mesh.\n         */\n        _this.skipNextTeleportation = false;\n        /**\n         * Is movement backwards enabled\n         */\n        _this.backwardsMovementEnabled = true;\n        /**\n         * Distance to travel when moving backwards\n         */\n        _this.backwardsTeleportationDistance = 0.7;\n        /**\n         * The distance from the user to the inspection point in the direction of the controller\n         * A higher number will allow the user to move further\n         * defaults to 5 (meters, in xr units)\n         */\n        _this.parabolicCheckRadius = 5;\n        /**\n         * Should the module support parabolic ray on top of direct ray\n         * If enabled, the user will be able to point \"at the sky\" and move according to predefined radius distance\n         * Very helpful when moving between floors / different heights\n         */\n        _this.parabolicRayEnabled = true;\n        /**\n         * The second type of ray - straight line.\n         * Should it be enabled or should the parabolic line be the only one.\n         */\n        _this.straightRayEnabled = true;\n        /**\n         * How much rotation should be applied when rotating right and left\n         */\n        _this.rotationAngle = Math.PI / 8;\n        /**\n         * This observable will notify when the target mesh position was updated.\n         * The picking info it provides contains the point to which the target mesh will move ()\n         */\n        _this.onTargetMeshPositionUpdatedObservable = new Observable();\n        /**\n         * Is teleportation enabled. Can be used to allow rotation only.\n         */\n        _this.teleportationEnabled = true;\n        _this._rotationEnabled = true;\n        _this._attachController = function (xrController) {\n            if (_this._controllers[xrController.uniqueId] || (_this._options.forceHandedness && xrController.inputSource.handedness !== _this._options.forceHandedness)) {\n                // already attached\n                return;\n            }\n            _this._controllers[xrController.uniqueId] = {\n                xrController: xrController,\n                teleportationState: {\n                    forward: false,\n                    backwards: false,\n                    rotating: false,\n                    currentRotation: 0,\n                    baseRotation: 0,\n                },\n            };\n            var controllerData = _this._controllers[xrController.uniqueId];\n            // motion controller only available to gamepad-enabled input sources.\n            if (controllerData.xrController.inputSource.targetRayMode === \"tracked-pointer\" && controllerData.xrController.inputSource.gamepad) {\n                // motion controller support\n                var initMotionController_1 = function () {\n                    if (xrController.motionController) {\n                        var movementController = xrController.motionController.getComponentOfType(WebXRControllerComponent.THUMBSTICK_TYPE) ||\n                            xrController.motionController.getComponentOfType(WebXRControllerComponent.TOUCHPAD_TYPE);\n                        if (!movementController || _this._options.useMainComponentOnly) {\n                            // use trigger to move on long press\n                            var mainComponent_1 = xrController.motionController.getMainComponent();\n                            if (!mainComponent_1) {\n                                return;\n                            }\n                            controllerData.teleportationComponent = mainComponent_1;\n                            controllerData.onButtonChangedObserver = mainComponent_1.onButtonStateChangedObservable.add(function () {\n                                if (!_this.teleportationEnabled) {\n                                    return;\n                                }\n                                // did \"pressed\" changed?\n                                if (mainComponent_1.changes.pressed) {\n                                    if (mainComponent_1.changes.pressed.current) {\n                                        // simulate \"forward\" thumbstick push\n                                        controllerData.teleportationState.forward = true;\n                                        _this._currentTeleportationControllerId = controllerData.xrController.uniqueId;\n                                        controllerData.teleportationState.baseRotation = _this._options.xrInput.xrCamera.rotationQuaternion.toEulerAngles().y;\n                                        controllerData.teleportationState.currentRotation = 0;\n                                        var timeToSelect = _this._options.timeToTeleport || 3000;\n                                        setAndStartTimer({\n                                            timeout: timeToSelect,\n                                            contextObservable: _this._xrSessionManager.onXRFrameObservable,\n                                            breakCondition: function () { return !mainComponent_1.pressed; },\n                                            onEnded: function () {\n                                                if (_this._currentTeleportationControllerId === controllerData.xrController.uniqueId && controllerData.teleportationState.forward) {\n                                                    _this._teleportForward(xrController.uniqueId);\n                                                }\n                                            },\n                                        });\n                                    }\n                                    else {\n                                        controllerData.teleportationState.forward = false;\n                                        _this._currentTeleportationControllerId = \"\";\n                                    }\n                                }\n                            });\n                        }\n                        else {\n                            controllerData.teleportationComponent = movementController;\n                            // use thumbstick (or touchpad if thumbstick not available)\n                            controllerData.onAxisChangedObserver = movementController.onAxisValueChangedObservable.add(function (axesData) {\n                                if (axesData.y <= 0.7 && controllerData.teleportationState.backwards) {\n                                    controllerData.teleportationState.backwards = false;\n                                }\n                                if (axesData.y > 0.7 && !controllerData.teleportationState.forward && _this.backwardsMovementEnabled && !_this.snapPointsOnly) {\n                                    // teleport backwards\n                                    // General gist: Go Back N units, cast a ray towards the floor. If collided, move.\n                                    if (!controllerData.teleportationState.backwards) {\n                                        controllerData.teleportationState.backwards = true;\n                                        // teleport backwards ONCE\n                                        _this._tmpQuaternion.copyFrom(_this._options.xrInput.xrCamera.rotationQuaternion);\n                                        _this._tmpQuaternion.toEulerAnglesToRef(_this._tmpVector);\n                                        // get only the y rotation\n                                        _this._tmpVector.x = 0;\n                                        _this._tmpVector.z = 0;\n                                        // get the quaternion\n                                        Quaternion.FromEulerVectorToRef(_this._tmpVector, _this._tmpQuaternion);\n                                        _this._tmpVector.set(0, 0, _this.backwardsTeleportationDistance * (_this._xrSessionManager.scene.useRightHandedSystem ? 1.0 : -1.0));\n                                        _this._tmpVector.rotateByQuaternionToRef(_this._tmpQuaternion, _this._tmpVector);\n                                        _this._tmpVector.addInPlace(_this._options.xrInput.xrCamera.position);\n                                        _this._tmpRay.origin.copyFrom(_this._tmpVector);\n                                        // This will prevent the user from \"falling\" to a lower platform!\n                                        // TODO - should this be a flag? 'allow falling to lower platforms'?\n                                        _this._tmpRay.length = _this._options.xrInput.xrCamera.realWorldHeight + 0.1;\n                                        // Right handed system had here \"1\" instead of -1. This is unneeded.\n                                        _this._tmpRay.direction.set(0, -1, 0);\n                                        var pick = _this._xrSessionManager.scene.pickWithRay(_this._tmpRay, function (o) {\n                                            return _this._floorMeshes.indexOf(o) !== -1;\n                                        });\n                                        // pick must exist, but stay safe\n                                        if (pick && pick.pickedPoint) {\n                                            // Teleport the users feet to where they targeted. Ignore the Y axis.\n                                            // If the \"falling to lower platforms\" feature is implemented the Y axis should be set here as well\n                                            _this._options.xrInput.xrCamera.position.x = pick.pickedPoint.x;\n                                            _this._options.xrInput.xrCamera.position.z = pick.pickedPoint.z;\n                                        }\n                                    }\n                                }\n                                if (axesData.y < -0.7 && !_this._currentTeleportationControllerId && !controllerData.teleportationState.rotating && _this.teleportationEnabled) {\n                                    controllerData.teleportationState.forward = true;\n                                    _this._currentTeleportationControllerId = controllerData.xrController.uniqueId;\n                                    controllerData.teleportationState.baseRotation = _this._options.xrInput.xrCamera.rotationQuaternion.toEulerAngles().y;\n                                }\n                                if (axesData.x) {\n                                    if (!controllerData.teleportationState.forward) {\n                                        if (!controllerData.teleportationState.rotating && Math.abs(axesData.x) > 0.7) {\n                                            // rotate in the right direction positive is right\n                                            controllerData.teleportationState.rotating = true;\n                                            var rotation = _this.rotationAngle * (axesData.x > 0 ? 1 : -1) * (_this._xrSessionManager.scene.useRightHandedSystem ? -1 : 1);\n                                            Quaternion.FromEulerAngles(0, rotation, 0).multiplyToRef(_this._options.xrInput.xrCamera.rotationQuaternion, _this._options.xrInput.xrCamera.rotationQuaternion);\n                                        }\n                                    }\n                                    else {\n                                        if (_this._currentTeleportationControllerId === controllerData.xrController.uniqueId) {\n                                            // set the rotation of the forward movement\n                                            if (_this.rotationEnabled) {\n                                                setTimeout(function () {\n                                                    controllerData.teleportationState.currentRotation = Math.atan2(axesData.x, axesData.y * (_this._xrSessionManager.scene.useRightHandedSystem ? 1 : -1));\n                                                });\n                                            }\n                                            else {\n                                                controllerData.teleportationState.currentRotation = 0;\n                                            }\n                                        }\n                                    }\n                                }\n                                else {\n                                    controllerData.teleportationState.rotating = false;\n                                }\n                                if (axesData.x === 0 && axesData.y === 0) {\n                                    if (controllerData.teleportationState.forward) {\n                                        _this._teleportForward(xrController.uniqueId);\n                                    }\n                                }\n                            });\n                        }\n                    }\n                };\n                if (xrController.motionController) {\n                    initMotionController_1();\n                }\n                else {\n                    xrController.onMotionControllerInitObservable.addOnce(function () {\n                        initMotionController_1();\n                    });\n                }\n            }\n            else {\n                _this._xrSessionManager.scene.onPointerObservable.add(function (pointerInfo) {\n                    if (pointerInfo.type === PointerEventTypes.POINTERDOWN) {\n                        controllerData.teleportationState.forward = true;\n                        _this._currentTeleportationControllerId = controllerData.xrController.uniqueId;\n                        controllerData.teleportationState.baseRotation = _this._options.xrInput.xrCamera.rotationQuaternion.toEulerAngles().y;\n                        controllerData.teleportationState.currentRotation = 0;\n                        var timeToSelect = _this._options.timeToTeleport || 3000;\n                        setAndStartTimer({\n                            timeout: timeToSelect,\n                            contextObservable: _this._xrSessionManager.onXRFrameObservable,\n                            onEnded: function () {\n                                if (_this._currentTeleportationControllerId === controllerData.xrController.uniqueId && controllerData.teleportationState.forward) {\n                                    _this._teleportForward(xrController.uniqueId);\n                                }\n                            },\n                        });\n                    }\n                    else if (pointerInfo.type === PointerEventTypes.POINTERUP) {\n                        controllerData.teleportationState.forward = false;\n                        _this._currentTeleportationControllerId = \"\";\n                    }\n                });\n            }\n        };\n        // create default mesh if not provided\n        if (!_this._options.teleportationTargetMesh) {\n            _this._createDefaultTargetMesh();\n        }\n        _this._floorMeshes = _this._options.floorMeshes || [];\n        _this._snapToPositions = _this._options.snapPositions || [];\n        _this._setTargetMeshVisibility(false);\n        return _this;\n    }\n    Object.defineProperty(WebXRMotionControllerTeleportation.prototype, \"rotationEnabled\", {\n        /**\n         * Is rotation enabled when moving forward?\n         * Disabling this feature will prevent the user from deciding the direction when teleporting\n         */\n        get: function () {\n            return this._rotationEnabled;\n        },\n        /**\n         * Sets whether rotation is enabled or not\n         * @param enabled is rotation enabled when teleportation is shown\n         */\n        set: function (enabled) {\n            this._rotationEnabled = enabled;\n            if (this._options.teleportationTargetMesh) {\n                var children = this._options.teleportationTargetMesh.getChildMeshes(false, function (node) { return node.name === \"rotationCone\"; });\n                if (children[0]) {\n                    children[0].setEnabled(enabled);\n                }\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebXRMotionControllerTeleportation.prototype, \"teleportationTargetMesh\", {\n        /**\n         * Exposes the currently set teleportation target mesh.\n         */\n        get: function () {\n            return this._options.teleportationTargetMesh || null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebXRMotionControllerTeleportation.prototype, \"snapPointsOnly\", {\n        /**\n         * Get the snapPointsOnly flag\n         */\n        get: function () {\n            return !!this._options.snapPointsOnly;\n        },\n        /**\n         * Sets the snapPointsOnly flag\n         * @param snapToPoints should teleportation be exclusively to snap points\n         */\n        set: function (snapToPoints) {\n            this._options.snapPointsOnly = snapToPoints;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Add a new mesh to the floor meshes array\n     * @param mesh the mesh to use as floor mesh\n     */\n    WebXRMotionControllerTeleportation.prototype.addFloorMesh = function (mesh) {\n        this._floorMeshes.push(mesh);\n    };\n    /**\n     * Add a mesh to the list of meshes blocking the teleportation ray\n     * @param mesh The mesh to add to the teleportation-blocking meshes\n     */\n    WebXRMotionControllerTeleportation.prototype.addBlockerMesh = function (mesh) {\n        this._options.pickBlockerMeshes = this._options.pickBlockerMeshes || [];\n        this._options.pickBlockerMeshes.push(mesh);\n    };\n    /**\n     * Add a new snap-to point to fix teleportation to this position\n     * @param newSnapPoint The new Snap-To point\n     */\n    WebXRMotionControllerTeleportation.prototype.addSnapPoint = function (newSnapPoint) {\n        this._snapToPositions.push(newSnapPoint);\n    };\n    WebXRMotionControllerTeleportation.prototype.attach = function () {\n        var _this = this;\n        if (!_super.prototype.attach.call(this)) {\n            return false;\n        }\n        // Safety reset\n        this._currentTeleportationControllerId = \"\";\n        this._options.xrInput.controllers.forEach(this._attachController);\n        this._addNewAttachObserver(this._options.xrInput.onControllerAddedObservable, this._attachController);\n        this._addNewAttachObserver(this._options.xrInput.onControllerRemovedObservable, function (controller) {\n            // REMOVE the controller\n            _this._detachController(controller.uniqueId);\n        });\n        return true;\n    };\n    WebXRMotionControllerTeleportation.prototype.detach = function () {\n        var _this = this;\n        if (!_super.prototype.detach.call(this)) {\n            return false;\n        }\n        Object.keys(this._controllers).forEach(function (controllerId) {\n            _this._detachController(controllerId);\n        });\n        this._setTargetMeshVisibility(false);\n        this._currentTeleportationControllerId = \"\";\n        this._controllers = {};\n        return true;\n    };\n    WebXRMotionControllerTeleportation.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._options.teleportationTargetMesh && this._options.teleportationTargetMesh.dispose(false, true);\n    };\n    /**\n     * Remove a mesh from the floor meshes array\n     * @param mesh the mesh to remove\n     */\n    WebXRMotionControllerTeleportation.prototype.removeFloorMesh = function (mesh) {\n        var index = this._floorMeshes.indexOf(mesh);\n        if (index !== -1) {\n            this._floorMeshes.splice(index, 1);\n        }\n    };\n    /**\n     * Remove a mesh from the blocker meshes array\n     * @param mesh the mesh to remove\n     */\n    WebXRMotionControllerTeleportation.prototype.removeBlockerMesh = function (mesh) {\n        this._options.pickBlockerMeshes = this._options.pickBlockerMeshes || [];\n        var index = this._options.pickBlockerMeshes.indexOf(mesh);\n        if (index !== -1) {\n            this._options.pickBlockerMeshes.splice(index, 1);\n        }\n    };\n    /**\n     * Remove a mesh from the floor meshes array using its name\n     * @param name the mesh name to remove\n     */\n    WebXRMotionControllerTeleportation.prototype.removeFloorMeshByName = function (name) {\n        var mesh = this._xrSessionManager.scene.getMeshByName(name);\n        if (mesh) {\n            this.removeFloorMesh(mesh);\n        }\n    };\n    /**\n     * This function will iterate through the array, searching for this point or equal to it. It will then remove it from the snap-to array\n     * @param snapPointToRemove the point (or a clone of it) to be removed from the array\n     * @returns was the point found and removed or not\n     */\n    WebXRMotionControllerTeleportation.prototype.removeSnapPoint = function (snapPointToRemove) {\n        // check if the object is in the array\n        var index = this._snapToPositions.indexOf(snapPointToRemove);\n        // if not found as an object, compare to the points\n        if (index === -1) {\n            for (var i = 0; i < this._snapToPositions.length; ++i) {\n                // equals? index is i, break the loop\n                if (this._snapToPositions[i].equals(snapPointToRemove)) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        // index is not -1? remove the object\n        if (index !== -1) {\n            this._snapToPositions.splice(index, 1);\n            return true;\n        }\n        return false;\n    };\n    /**\n     * This function sets a selection feature that will be disabled when\n     * the forward ray is shown and will be reattached when hidden.\n     * This is used to remove the selection rays when moving.\n     * @param selectionFeature the feature to disable when forward movement is enabled\n     */\n    WebXRMotionControllerTeleportation.prototype.setSelectionFeature = function (selectionFeature) {\n        this._selectionFeature = selectionFeature;\n    };\n    WebXRMotionControllerTeleportation.prototype._onXRFrame = function (_xrFrame) {\n        var _this = this;\n        var frame = this._xrSessionManager.currentFrame;\n        var scene = this._xrSessionManager.scene;\n        if (!this.attach || !frame) {\n            return;\n        }\n        // render target if needed\n        var targetMesh = this._options.teleportationTargetMesh;\n        if (this._currentTeleportationControllerId) {\n            if (!targetMesh) {\n                return;\n            }\n            targetMesh.rotationQuaternion = targetMesh.rotationQuaternion || new Quaternion();\n            var controllerData = this._controllers[this._currentTeleportationControllerId];\n            if (controllerData && controllerData.teleportationState.forward) {\n                // set the rotation\n                Quaternion.RotationYawPitchRollToRef(controllerData.teleportationState.currentRotation + controllerData.teleportationState.baseRotation, 0, 0, targetMesh.rotationQuaternion);\n                // set the ray and position\n                var hitPossible = false;\n                controllerData.xrController.getWorldPointerRayToRef(this._tmpRay);\n                if (this.straightRayEnabled) {\n                    // first check if direct ray possible\n                    // pick grounds that are LOWER only. upper will use parabolic path\n                    var pick = scene.pickWithRay(this._tmpRay, function (o) {\n                        // check for mesh-blockers\n                        if (_this._options.pickBlockerMeshes && _this._options.pickBlockerMeshes.indexOf(o) !== -1) {\n                            return true;\n                        }\n                        var index = _this._floorMeshes.indexOf(o);\n                        if (index === -1) {\n                            return false;\n                        }\n                        return _this._floorMeshes[index].absolutePosition.y < _this._options.xrInput.xrCamera.globalPosition.y;\n                    });\n                    if (pick && pick.pickedMesh && this._options.pickBlockerMeshes && this._options.pickBlockerMeshes.indexOf(pick.pickedMesh) !== -1) {\n                        return;\n                    }\n                    else if (pick && pick.pickedPoint) {\n                        hitPossible = true;\n                        this._setTargetMeshPosition(pick);\n                        this._setTargetMeshVisibility(true);\n                        this._showParabolicPath(pick);\n                    }\n                }\n                // straight ray is still the main ray, but disabling the straight line will force parabolic line.\n                if (this.parabolicRayEnabled && !hitPossible) {\n                    // radius compensation according to pointer rotation around X\n                    var xRotation = controllerData.xrController.pointer.rotationQuaternion.toEulerAngles().x;\n                    var compensation = 1 + (Math.PI / 2 - Math.abs(xRotation));\n                    // check parabolic ray\n                    var radius = this.parabolicCheckRadius * compensation;\n                    this._tmpRay.origin.addToRef(this._tmpRay.direction.scale(radius * 2), this._tmpVector);\n                    this._tmpVector.y = this._tmpRay.origin.y;\n                    this._tmpRay.origin.addInPlace(this._tmpRay.direction.scale(radius));\n                    this._tmpVector.subtractToRef(this._tmpRay.origin, this._tmpRay.direction);\n                    this._tmpRay.direction.normalize();\n                    var pick = scene.pickWithRay(this._tmpRay, function (o) {\n                        // check for mesh-blockers\n                        if (_this._options.pickBlockerMeshes && _this._options.pickBlockerMeshes.indexOf(o) !== -1) {\n                            return true;\n                        }\n                        return _this._floorMeshes.indexOf(o) !== -1;\n                    });\n                    if (pick && pick.pickedMesh && this._options.pickBlockerMeshes && this._options.pickBlockerMeshes.indexOf(pick.pickedMesh) !== -1) {\n                        return;\n                    }\n                    else if (pick && pick.pickedPoint) {\n                        hitPossible = true;\n                        this._setTargetMeshPosition(pick);\n                        this._setTargetMeshVisibility(true);\n                        this._showParabolicPath(pick);\n                    }\n                }\n                // if needed, set visible:\n                this._setTargetMeshVisibility(hitPossible);\n            }\n            else {\n                this._setTargetMeshVisibility(false);\n            }\n        }\n        else {\n            this._setTargetMeshVisibility(false);\n        }\n    };\n    WebXRMotionControllerTeleportation.prototype._createDefaultTargetMesh = function () {\n        // set defaults\n        this._options.defaultTargetMeshOptions = this._options.defaultTargetMeshOptions || {};\n        var sceneToRenderTo = this._options.useUtilityLayer\n            ? this._options.customUtilityLayerScene || UtilityLayerRenderer.DefaultUtilityLayer.utilityLayerScene\n            : this._xrSessionManager.scene;\n        var teleportationTarget = CreateGround(\"teleportationTarget\", { width: 2, height: 2, subdivisions: 2 }, sceneToRenderTo);\n        teleportationTarget.isPickable = false;\n        var length = 512;\n        var dynamicTexture = new DynamicTexture(\"teleportationPlaneDynamicTexture\", length, sceneToRenderTo, true);\n        dynamicTexture.hasAlpha = true;\n        var context = dynamicTexture.getContext();\n        var centerX = length / 2;\n        var centerY = length / 2;\n        var radius = 200;\n        context.beginPath();\n        context.arc(centerX, centerY, radius, 0, 2 * Math.PI, false);\n        context.fillStyle = this._options.defaultTargetMeshOptions.teleportationFillColor || \"#444444\";\n        context.fill();\n        context.lineWidth = 10;\n        context.strokeStyle = this._options.defaultTargetMeshOptions.teleportationBorderColor || \"#FFFFFF\";\n        context.stroke();\n        context.closePath();\n        dynamicTexture.update();\n        var teleportationCircleMaterial = new StandardMaterial(\"teleportationPlaneMaterial\", sceneToRenderTo);\n        teleportationCircleMaterial.diffuseTexture = dynamicTexture;\n        teleportationTarget.material = teleportationCircleMaterial;\n        var torus = CreateTorus(\"torusTeleportation\", {\n            diameter: 0.75,\n            thickness: 0.1,\n            tessellation: 20,\n        }, sceneToRenderTo);\n        torus.isPickable = false;\n        torus.parent = teleportationTarget;\n        if (!this._options.defaultTargetMeshOptions.disableAnimation) {\n            var animationInnerCircle = new Animation(\"animationInnerCircle\", \"position.y\", 30, Animation.ANIMATIONTYPE_FLOAT, Animation.ANIMATIONLOOPMODE_CYCLE);\n            var keys = [];\n            keys.push({\n                frame: 0,\n                value: 0,\n            });\n            keys.push({\n                frame: 30,\n                value: 0.4,\n            });\n            keys.push({\n                frame: 60,\n                value: 0,\n            });\n            animationInnerCircle.setKeys(keys);\n            var easingFunction = new SineEase();\n            easingFunction.setEasingMode(EasingFunction.EASINGMODE_EASEINOUT);\n            animationInnerCircle.setEasingFunction(easingFunction);\n            torus.animations = [];\n            torus.animations.push(animationInnerCircle);\n            sceneToRenderTo.beginAnimation(torus, 0, 60, true);\n        }\n        var cone = CreateCylinder(\"rotationCone\", { diameterTop: 0, tessellation: 4 }, sceneToRenderTo);\n        cone.isPickable = false;\n        cone.scaling.set(0.5, 0.12, 0.2);\n        cone.rotate(Axis.X, Math.PI / 2);\n        cone.position.z = 0.6;\n        cone.parent = torus;\n        if (this._options.defaultTargetMeshOptions.torusArrowMaterial) {\n            torus.material = this._options.defaultTargetMeshOptions.torusArrowMaterial;\n            cone.material = this._options.defaultTargetMeshOptions.torusArrowMaterial;\n        }\n        else {\n            var torusConeMaterial = new StandardMaterial(\"torusConsMat\", sceneToRenderTo);\n            torusConeMaterial.disableLighting = !!this._options.defaultTargetMeshOptions.disableLighting;\n            if (torusConeMaterial.disableLighting) {\n                torusConeMaterial.emissiveColor = new Color3(0.3, 0.3, 1.0);\n            }\n            else {\n                torusConeMaterial.diffuseColor = new Color3(0.3, 0.3, 1.0);\n            }\n            torusConeMaterial.alpha = 0.9;\n            torus.material = torusConeMaterial;\n            cone.material = torusConeMaterial;\n            this._teleportationRingMaterial = torusConeMaterial;\n        }\n        if (this._options.renderingGroupId !== undefined) {\n            teleportationTarget.renderingGroupId = this._options.renderingGroupId;\n            torus.renderingGroupId = this._options.renderingGroupId;\n            cone.renderingGroupId = this._options.renderingGroupId;\n        }\n        this._options.teleportationTargetMesh = teleportationTarget;\n    };\n    WebXRMotionControllerTeleportation.prototype._detachController = function (xrControllerUniqueId) {\n        var controllerData = this._controllers[xrControllerUniqueId];\n        if (!controllerData) {\n            return;\n        }\n        if (controllerData.teleportationComponent) {\n            if (controllerData.onAxisChangedObserver) {\n                controllerData.teleportationComponent.onAxisValueChangedObservable.remove(controllerData.onAxisChangedObserver);\n            }\n            if (controllerData.onButtonChangedObserver) {\n                controllerData.teleportationComponent.onButtonStateChangedObservable.remove(controllerData.onButtonChangedObserver);\n            }\n        }\n        // remove from the map\n        delete this._controllers[xrControllerUniqueId];\n    };\n    WebXRMotionControllerTeleportation.prototype._findClosestSnapPointWithRadius = function (realPosition, radius) {\n        if (radius === void 0) { radius = this._options.snapToPositionRadius || 0.8; }\n        var closestPoint = null;\n        var closestDistance = Number.MAX_VALUE;\n        if (this._snapToPositions.length) {\n            var radiusSquared_1 = radius * radius;\n            this._snapToPositions.forEach(function (position) {\n                var dist = Vector3.DistanceSquared(position, realPosition);\n                if (dist <= radiusSquared_1 && dist < closestDistance) {\n                    closestDistance = dist;\n                    closestPoint = position;\n                }\n            });\n        }\n        return closestPoint;\n    };\n    WebXRMotionControllerTeleportation.prototype._setTargetMeshPosition = function (pickInfo) {\n        var newPosition = pickInfo.pickedPoint;\n        if (!this._options.teleportationTargetMesh || !newPosition) {\n            return;\n        }\n        var snapPosition = this._findClosestSnapPointWithRadius(newPosition);\n        this._snappedToPoint = !!snapPosition;\n        if (this.snapPointsOnly && !this._snappedToPoint && this._teleportationRingMaterial) {\n            this._teleportationRingMaterial.diffuseColor.set(1.0, 0.3, 0.3);\n        }\n        else if (this.snapPointsOnly && this._snappedToPoint && this._teleportationRingMaterial) {\n            this._teleportationRingMaterial.diffuseColor.set(0.3, 0.3, 1.0);\n        }\n        this._options.teleportationTargetMesh.position.copyFrom(snapPosition || newPosition);\n        this._options.teleportationTargetMesh.position.y += 0.01;\n        this.onTargetMeshPositionUpdatedObservable.notifyObservers(pickInfo);\n    };\n    WebXRMotionControllerTeleportation.prototype._setTargetMeshVisibility = function (visible) {\n        if (!this._options.teleportationTargetMesh) {\n            return;\n        }\n        if (this._options.teleportationTargetMesh.isVisible === visible) {\n            return;\n        }\n        this._options.teleportationTargetMesh.isVisible = visible;\n        this._options.teleportationTargetMesh.getChildren(undefined, false).forEach(function (m) {\n            m.isVisible = visible;\n        });\n        if (!visible) {\n            if (this._quadraticBezierCurve) {\n                this._quadraticBezierCurve.dispose();\n                this._quadraticBezierCurve = null;\n            }\n            if (this._selectionFeature) {\n                this._selectionFeature.attach();\n            }\n        }\n        else {\n            if (this._selectionFeature) {\n                this._selectionFeature.detach();\n            }\n        }\n    };\n    WebXRMotionControllerTeleportation.prototype._showParabolicPath = function (pickInfo) {\n        if (!pickInfo.pickedPoint) {\n            return;\n        }\n        var sceneToRenderTo = this._options.useUtilityLayer\n            ? this._options.customUtilityLayerScene || UtilityLayerRenderer.DefaultUtilityLayer.utilityLayerScene\n            : this._xrSessionManager.scene;\n        var controllerData = this._controllers[this._currentTeleportationControllerId];\n        var quadraticBezierVectors = Curve3.CreateQuadraticBezier(controllerData.xrController.pointer.absolutePosition, pickInfo.ray.origin, pickInfo.pickedPoint, 25);\n        if (!this._options.generateRayPathMesh) {\n            this._quadraticBezierCurve = CreateLines(\"teleportation path line\", { points: quadraticBezierVectors.getPoints(), instance: this._quadraticBezierCurve, updatable: true }, sceneToRenderTo);\n        }\n        else {\n            this._quadraticBezierCurve = this._options.generateRayPathMesh(quadraticBezierVectors.getPoints(), pickInfo);\n        }\n        this._quadraticBezierCurve.isPickable = false;\n        if (this._options.renderingGroupId !== undefined) {\n            this._quadraticBezierCurve.renderingGroupId = this._options.renderingGroupId;\n        }\n    };\n    WebXRMotionControllerTeleportation.prototype._teleportForward = function (controllerId) {\n        var controllerData = this._controllers[controllerId];\n        if (!controllerData || !controllerData.teleportationState.forward || !this.teleportationEnabled) {\n            return;\n        }\n        controllerData.teleportationState.forward = false;\n        this._currentTeleportationControllerId = \"\";\n        if (this.snapPointsOnly && !this._snappedToPoint) {\n            return;\n        }\n        if (this.skipNextTeleportation) {\n            this.skipNextTeleportation = false;\n            return;\n        }\n        // do the movement forward here\n        if (this._options.teleportationTargetMesh && this._options.teleportationTargetMesh.isVisible) {\n            var height = this._options.xrInput.xrCamera.realWorldHeight;\n            this._options.xrInput.xrCamera.onBeforeCameraTeleport.notifyObservers(this._options.xrInput.xrCamera.position);\n            this._options.xrInput.xrCamera.position.copyFrom(this._options.teleportationTargetMesh.position);\n            this._options.xrInput.xrCamera.position.y += height;\n            Quaternion.FromEulerAngles(0, controllerData.teleportationState.currentRotation - (this._xrSessionManager.scene.useRightHandedSystem ? Math.PI : 0), 0).multiplyToRef(this._options.xrInput.xrCamera.rotationQuaternion, this._options.xrInput.xrCamera.rotationQuaternion);\n            this._options.xrInput.xrCamera.onAfterCameraTeleport.notifyObservers(this._options.xrInput.xrCamera.position);\n        }\n    };\n    /**\n     * The module's name\n     */\n    WebXRMotionControllerTeleportation.Name = WebXRFeatureName.TELEPORTATION;\n    /**\n     * The (Babylon) version of this module.\n     * This is an integer representing the implementation version.\n     * This number does not correspond to the webxr specs version\n     */\n    WebXRMotionControllerTeleportation.Version = 1;\n    return WebXRMotionControllerTeleportation;\n}(WebXRAbstractFeature));\nexport { WebXRMotionControllerTeleportation };\nWebXRFeaturesManager.AddWebXRFeature(WebXRMotionControllerTeleportation.Name, function (xrSessionManager, options) {\n    return function () { return new WebXRMotionControllerTeleportation(xrSessionManager, options); };\n}, WebXRMotionControllerTeleportation.Version, true);\n//# sourceMappingURL=WebXRControllerTeleportation.js.map","var _a;\nimport { __assign, __awaiter, __extends, __generator } from \"tslib\";\nimport { WebXRAbstractFeature } from \"./WebXRAbstractFeature.js\";\nimport { WebXRFeatureName, WebXRFeaturesManager } from \"../webXRFeaturesManager.js\";\nimport { Matrix, Quaternion } from \"../../Maths/math.vector.js\";\nimport { PhysicsImpostor } from \"../../Physics/physicsImpostor.js\";\nimport { Observable } from \"../../Misc/observable.js\";\nimport { SceneLoader } from \"../../Loading/sceneLoader.js\";\nimport { Color3 } from \"../../Maths/math.color.js\";\nimport { NodeMaterial } from \"../../Materials/Node/nodeMaterial.js\";\nimport { Material } from \"../../Materials/material.js\";\nimport { CreateIcoSphere } from \"../../Meshes/Builders/icoSphereBuilder.js\";\nimport { TransformNode } from \"../../Meshes/transformNode.js\";\nimport { Axis } from \"../../Maths/math.axis.js\";\nimport { EngineStore } from \"../../Engines/engineStore.js\";\n\n/**\n * Parts of the hands divided to writs and finger names\n */\nexport var HandPart;\n(function (HandPart) {\n    /**\n     * HandPart - Wrist\n     */\n    HandPart[\"WRIST\"] = \"wrist\";\n    /**\n     * HandPart - The thumb\n     */\n    HandPart[\"THUMB\"] = \"thumb\";\n    /**\n     * HandPart - Index finger\n     */\n    HandPart[\"INDEX\"] = \"index\";\n    /**\n     * HandPart - Middle finger\n     */\n    HandPart[\"MIDDLE\"] = \"middle\";\n    /**\n     * HandPart - Ring finger\n     */\n    HandPart[\"RING\"] = \"ring\";\n    /**\n     * HandPart - Little finger\n     */\n    HandPart[\"LITTLE\"] = \"little\";\n})(HandPart || (HandPart = {}));\n/**\n * Joints of the hand as defined by the WebXR specification.\n * https://immersive-web.github.io/webxr-hand-input/#skeleton-joints-section\n */\nexport var XRHandJoint;\n(function (XRHandJoint) {\n    /** Wrist */\n    XRHandJoint[\"WRIST\"] = \"wrist\";\n    /** Thumb near wrist */\n    XRHandJoint[\"THUMB_METACARPAL\"] = \"thumb-metacarpal\";\n    /** Thumb first knuckle */\n    XRHandJoint[\"THUMB_PHALANX_PROXIMAL\"] = \"thumb-phalanx-proximal\";\n    /** Thumb second knuckle */\n    XRHandJoint[\"THUMB_PHALANX_DISTAL\"] = \"thumb-phalanx-distal\";\n    /** Thumb tip */\n    XRHandJoint[\"THUMB_TIP\"] = \"thumb-tip\";\n    /** Index finger near wrist */\n    XRHandJoint[\"INDEX_FINGER_METACARPAL\"] = \"index-finger-metacarpal\";\n    /** Index finger first knuckle */\n    XRHandJoint[\"INDEX_FINGER_PHALANX_PROXIMAL\"] = \"index-finger-phalanx-proximal\";\n    /** Index finger second knuckle */\n    XRHandJoint[\"INDEX_FINGER_PHALANX_INTERMEDIATE\"] = \"index-finger-phalanx-intermediate\";\n    /** Index finger third knuckle */\n    XRHandJoint[\"INDEX_FINGER_PHALANX_DISTAL\"] = \"index-finger-phalanx-distal\";\n    /** Index finger tip */\n    XRHandJoint[\"INDEX_FINGER_TIP\"] = \"index-finger-tip\";\n    /** Middle finger near wrist */\n    XRHandJoint[\"MIDDLE_FINGER_METACARPAL\"] = \"middle-finger-metacarpal\";\n    /** Middle finger first knuckle */\n    XRHandJoint[\"MIDDLE_FINGER_PHALANX_PROXIMAL\"] = \"middle-finger-phalanx-proximal\";\n    /** Middle finger second knuckle */\n    XRHandJoint[\"MIDDLE_FINGER_PHALANX_INTERMEDIATE\"] = \"middle-finger-phalanx-intermediate\";\n    /** Middle finger third knuckle */\n    XRHandJoint[\"MIDDLE_FINGER_PHALANX_DISTAL\"] = \"middle-finger-phalanx-distal\";\n    /** Middle finger tip */\n    XRHandJoint[\"MIDDLE_FINGER_TIP\"] = \"middle-finger-tip\";\n    /** Ring finger near wrist */\n    XRHandJoint[\"RING_FINGER_METACARPAL\"] = \"ring-finger-metacarpal\";\n    /** Ring finger first knuckle */\n    XRHandJoint[\"RING_FINGER_PHALANX_PROXIMAL\"] = \"ring-finger-phalanx-proximal\";\n    /** Ring finger second knuckle */\n    XRHandJoint[\"RING_FINGER_PHALANX_INTERMEDIATE\"] = \"ring-finger-phalanx-intermediate\";\n    /** Ring finger third knuckle */\n    XRHandJoint[\"RING_FINGER_PHALANX_DISTAL\"] = \"ring-finger-phalanx-distal\";\n    /** Ring finger tip */\n    XRHandJoint[\"RING_FINGER_TIP\"] = \"ring-finger-tip\";\n    /** Pinky finger near wrist */\n    XRHandJoint[\"PINKY_FINGER_METACARPAL\"] = \"pinky-finger-metacarpal\";\n    /** Pinky finger first knuckle */\n    XRHandJoint[\"PINKY_FINGER_PHALANX_PROXIMAL\"] = \"pinky-finger-phalanx-proximal\";\n    /** Pinky finger second knuckle */\n    XRHandJoint[\"PINKY_FINGER_PHALANX_INTERMEDIATE\"] = \"pinky-finger-phalanx-intermediate\";\n    /** Pinky finger third knuckle */\n    XRHandJoint[\"PINKY_FINGER_PHALANX_DISTAL\"] = \"pinky-finger-phalanx-distal\";\n    /** Pinky finger tip */\n    XRHandJoint[\"PINKY_FINGER_TIP\"] = \"pinky-finger-tip\";\n})(XRHandJoint || (XRHandJoint = {}));\nvar handJointReferenceArray = [\n    XRHandJoint.WRIST,\n    XRHandJoint.THUMB_METACARPAL,\n    XRHandJoint.THUMB_PHALANX_PROXIMAL,\n    XRHandJoint.THUMB_PHALANX_DISTAL,\n    XRHandJoint.THUMB_TIP,\n    XRHandJoint.INDEX_FINGER_METACARPAL,\n    XRHandJoint.INDEX_FINGER_PHALANX_PROXIMAL,\n    XRHandJoint.INDEX_FINGER_PHALANX_INTERMEDIATE,\n    XRHandJoint.INDEX_FINGER_PHALANX_DISTAL,\n    XRHandJoint.INDEX_FINGER_TIP,\n    XRHandJoint.MIDDLE_FINGER_METACARPAL,\n    XRHandJoint.MIDDLE_FINGER_PHALANX_PROXIMAL,\n    XRHandJoint.MIDDLE_FINGER_PHALANX_INTERMEDIATE,\n    XRHandJoint.MIDDLE_FINGER_PHALANX_DISTAL,\n    XRHandJoint.MIDDLE_FINGER_TIP,\n    XRHandJoint.RING_FINGER_METACARPAL,\n    XRHandJoint.RING_FINGER_PHALANX_PROXIMAL,\n    XRHandJoint.RING_FINGER_PHALANX_INTERMEDIATE,\n    XRHandJoint.RING_FINGER_PHALANX_DISTAL,\n    XRHandJoint.RING_FINGER_TIP,\n    XRHandJoint.PINKY_FINGER_METACARPAL,\n    XRHandJoint.PINKY_FINGER_PHALANX_PROXIMAL,\n    XRHandJoint.PINKY_FINGER_PHALANX_INTERMEDIATE,\n    XRHandJoint.PINKY_FINGER_PHALANX_DISTAL,\n    XRHandJoint.PINKY_FINGER_TIP,\n];\nvar handPartsDefinition = (_a = {},\n    _a[HandPart.WRIST] = [XRHandJoint.WRIST],\n    _a[HandPart.THUMB] = [XRHandJoint.THUMB_METACARPAL, XRHandJoint.THUMB_PHALANX_PROXIMAL, XRHandJoint.THUMB_PHALANX_DISTAL, XRHandJoint.THUMB_TIP],\n    _a[HandPart.INDEX] = [\n        XRHandJoint.INDEX_FINGER_METACARPAL,\n        XRHandJoint.INDEX_FINGER_PHALANX_PROXIMAL,\n        XRHandJoint.INDEX_FINGER_PHALANX_INTERMEDIATE,\n        XRHandJoint.INDEX_FINGER_PHALANX_DISTAL,\n        XRHandJoint.INDEX_FINGER_TIP,\n    ],\n    _a[HandPart.MIDDLE] = [\n        XRHandJoint.MIDDLE_FINGER_METACARPAL,\n        XRHandJoint.MIDDLE_FINGER_PHALANX_PROXIMAL,\n        XRHandJoint.MIDDLE_FINGER_PHALANX_INTERMEDIATE,\n        XRHandJoint.MIDDLE_FINGER_PHALANX_DISTAL,\n        XRHandJoint.MIDDLE_FINGER_TIP,\n    ],\n    _a[HandPart.RING] = [\n        XRHandJoint.RING_FINGER_METACARPAL,\n        XRHandJoint.RING_FINGER_PHALANX_PROXIMAL,\n        XRHandJoint.RING_FINGER_PHALANX_INTERMEDIATE,\n        XRHandJoint.RING_FINGER_PHALANX_DISTAL,\n        XRHandJoint.RING_FINGER_TIP,\n    ],\n    _a[HandPart.LITTLE] = [\n        XRHandJoint.PINKY_FINGER_METACARPAL,\n        XRHandJoint.PINKY_FINGER_PHALANX_PROXIMAL,\n        XRHandJoint.PINKY_FINGER_PHALANX_INTERMEDIATE,\n        XRHandJoint.PINKY_FINGER_PHALANX_DISTAL,\n        XRHandJoint.PINKY_FINGER_TIP,\n    ],\n    _a);\n/**\n * Representing a single hand (with its corresponding native XRHand object)\n */\nvar WebXRHand = /** @class */ (function () {\n    /**\n     * Construct a new hand object\n     * @param xrController The controller to which the hand correlates.\n     * @param _jointMeshes The meshes to be used to track the hand joints.\n     * @param _handMesh An optional hand mesh.\n     * @param rigMapping An optional rig mapping for the hand mesh.\n     *                   If not provided (but a hand mesh is provided),\n     *                   it will be assumed that the hand mesh's bones are named\n     *                   directly after the WebXR bone names.\n     * @param _leftHandedMeshes Are the hand meshes left-handed-system meshes\n     * @param _jointsInvisible Are the tracked joint meshes visible\n     * @param _jointScaleFactor Scale factor for all joint meshes\n     */\n    function WebXRHand(\n    /** The controller to which the hand correlates. */\n    xrController, _jointMeshes, _handMesh, \n    /** An optional rig mapping for the hand mesh. If not provided (but a hand mesh is provided),\n     * it will be assumed that the hand mesh's bones are named directly after the WebXR bone names. */\n    rigMapping, _leftHandedMeshes, _jointsInvisible, _jointScaleFactor) {\n        if (_leftHandedMeshes === void 0) { _leftHandedMeshes = false; }\n        if (_jointsInvisible === void 0) { _jointsInvisible = false; }\n        if (_jointScaleFactor === void 0) { _jointScaleFactor = 1; }\n        this.xrController = xrController;\n        this._jointMeshes = _jointMeshes;\n        this._handMesh = _handMesh;\n        this.rigMapping = rigMapping;\n        this._leftHandedMeshes = _leftHandedMeshes;\n        this._jointsInvisible = _jointsInvisible;\n        this._jointScaleFactor = _jointScaleFactor;\n        /**\n         * Transform nodes that will directly receive the transforms from the WebXR matrix data.\n         */\n        this._jointTransforms = new Array(handJointReferenceArray.length);\n        /**\n         * The float array that will directly receive the transform matrix data from WebXR.\n         */\n        this._jointTransformMatrices = new Float32Array(handJointReferenceArray.length * 16);\n        this._tempJointMatrix = new Matrix();\n        /**\n         * The float array that will directly receive the joint radii from WebXR.\n         */\n        this._jointRadii = new Float32Array(handJointReferenceArray.length);\n        this._scene = _jointMeshes[0].getScene();\n        // Initialize the joint transform quaternions and link the transforms to the bones.\n        for (var jointIdx = 0; jointIdx < this._jointTransforms.length; jointIdx++) {\n            var jointTransform = (this._jointTransforms[jointIdx] = new TransformNode(handJointReferenceArray[jointIdx], this._scene));\n            jointTransform.rotationQuaternion = new Quaternion();\n            // Set the rotation quaternion so we can use it later for tracking.\n            _jointMeshes[jointIdx].rotationQuaternion = new Quaternion();\n        }\n        if (_handMesh) {\n            // Note that this logic needs to happen after we initialize the joint tracking transform nodes.\n            this.setHandMesh(_handMesh, rigMapping);\n        }\n        // hide the motion controller, if available/loaded\n        if (this.xrController.motionController) {\n            if (this.xrController.motionController.rootMesh) {\n                this.xrController.motionController.rootMesh.setEnabled(false);\n            }\n            else {\n                this.xrController.motionController.onModelLoadedObservable.add(function (controller) {\n                    if (controller.rootMesh) {\n                        controller.rootMesh.setEnabled(false);\n                    }\n                });\n            }\n        }\n        this.xrController.onMotionControllerInitObservable.add(function (motionController) {\n            motionController.onModelLoadedObservable.add(function (controller) {\n                if (controller.rootMesh) {\n                    controller.rootMesh.setEnabled(false);\n                }\n            });\n            if (motionController.rootMesh) {\n                motionController.rootMesh.setEnabled(false);\n            }\n        });\n    }\n    Object.defineProperty(WebXRHand.prototype, \"handMesh\", {\n        /**\n         * Get the hand mesh.\n         */\n        get: function () {\n            return this._handMesh;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Get meshes of part of the hand.\n     * @param part The part of hand to get.\n     * @returns An array of meshes that correlate to the hand part requested.\n     */\n    WebXRHand.prototype.getHandPartMeshes = function (part) {\n        var _this = this;\n        return handPartsDefinition[part].map(function (name) { return _this._jointMeshes[handJointReferenceArray.indexOf(name)]; });\n    };\n    /**\n     * Retrieves a mesh linked to a named joint in the hand.\n     * @param jointName The name of the joint.\n     * @returns An AbstractMesh whose position corresponds with the joint position.\n     */\n    WebXRHand.prototype.getJointMesh = function (jointName) {\n        return this._jointMeshes[handJointReferenceArray.indexOf(jointName)];\n    };\n    /**\n     * Sets the current hand mesh to render for the WebXRHand.\n     * @param handMesh The rigged hand mesh that will be tracked to the user's hand.\n     * @param rigMapping The mapping from XRHandJoint to bone names to use with the mesh.\n     */\n    WebXRHand.prototype.setHandMesh = function (handMesh, rigMapping) {\n        var _this = this;\n        this._handMesh = handMesh;\n        // Avoid any strange frustum culling. We will manually control visibility via attach and detach.\n        handMesh.alwaysSelectAsActiveMesh = true;\n        handMesh.getChildMeshes().forEach(function (mesh) { return (mesh.alwaysSelectAsActiveMesh = true); });\n        // Link the bones in the hand mesh to the transform nodes that will be bound to the WebXR tracked joints.\n        if (this._handMesh.skeleton) {\n            var handMeshSkeleton_1 = this._handMesh.skeleton;\n            handJointReferenceArray.forEach(function (jointName, jointIdx) {\n                var jointBoneIdx = handMeshSkeleton_1.getBoneIndexByName(rigMapping ? rigMapping[jointName] : jointName);\n                if (jointBoneIdx !== -1) {\n                    handMeshSkeleton_1.bones[jointBoneIdx].linkTransformNode(_this._jointTransforms[jointIdx]);\n                }\n            });\n        }\n    };\n    /**\n     * Update this hand from the latest xr frame.\n     * @param xrFrame The latest frame received from WebXR.\n     * @param referenceSpace The current viewer reference space.\n     */\n    WebXRHand.prototype.updateFromXRFrame = function (xrFrame, referenceSpace) {\n        var _this = this;\n        var hand = this.xrController.inputSource.hand;\n        if (!hand) {\n            return;\n        }\n        // TODO: Modify webxr.d.ts to better match WebXR IDL so we don't need this any cast.\n        var anyHand = hand;\n        var jointSpaces = handJointReferenceArray.map(function (jointName) { return anyHand[jointName] || hand.get(jointName); });\n        var trackingSuccessful = false;\n        if (xrFrame.fillPoses && xrFrame.fillJointRadii) {\n            trackingSuccessful = xrFrame.fillPoses(jointSpaces, referenceSpace, this._jointTransformMatrices) && xrFrame.fillJointRadii(jointSpaces, this._jointRadii);\n        }\n        else if (xrFrame.getJointPose) {\n            trackingSuccessful = true;\n            // Warning: This codepath is slow by comparison, only here for compat.\n            for (var jointIdx = 0; jointIdx < jointSpaces.length; jointIdx++) {\n                var jointPose = xrFrame.getJointPose(jointSpaces[jointIdx], referenceSpace);\n                if (jointPose) {\n                    this._jointTransformMatrices.set(jointPose.transform.matrix, jointIdx * 16);\n                    this._jointRadii[jointIdx] = jointPose.radius || 0.008;\n                }\n                else {\n                    trackingSuccessful = false;\n                    break;\n                }\n            }\n        }\n        if (!trackingSuccessful) {\n            return;\n        }\n        handJointReferenceArray.forEach(function (_jointName, jointIdx) {\n            var jointTransform = _this._jointTransforms[jointIdx];\n            Matrix.FromArrayToRef(_this._jointTransformMatrices, jointIdx * 16, _this._tempJointMatrix);\n            _this._tempJointMatrix.decompose(undefined, jointTransform.rotationQuaternion, jointTransform.position);\n            // The radius we need to make the joint in order for it to roughly cover the joints of the user's real hand.\n            var scaledJointRadius = _this._jointRadii[jointIdx] * _this._jointScaleFactor;\n            var jointMesh = _this._jointMeshes[jointIdx];\n            jointMesh.isVisible = !_this._handMesh && !_this._jointsInvisible;\n            jointMesh.position.copyFrom(jointTransform.position);\n            jointMesh.rotationQuaternion.copyFrom(jointTransform.rotationQuaternion);\n            jointMesh.scaling.setAll(scaledJointRadius);\n            // The WebXR data comes as right-handed, so we might need to do some conversions.\n            if (!_this._scene.useRightHandedSystem) {\n                jointMesh.position.z *= -1;\n                jointMesh.rotationQuaternion.z *= -1;\n                jointMesh.rotationQuaternion.w *= -1;\n                if (_this._leftHandedMeshes && _this._handMesh) {\n                    jointTransform.position.z *= -1;\n                    jointTransform.rotationQuaternion.z *= -1;\n                    jointTransform.rotationQuaternion.w *= -1;\n                }\n            }\n        });\n        if (this._handMesh) {\n            this._handMesh.isVisible = true;\n        }\n    };\n    /**\n     * Dispose this Hand object\n     */\n    WebXRHand.prototype.dispose = function () {\n        if (this._handMesh) {\n            this._handMesh.isVisible = false;\n        }\n    };\n    return WebXRHand;\n}());\nexport { WebXRHand };\n/**\n * WebXR Hand Joint tracking feature, available for selected browsers and devices\n */\nvar WebXRHandTracking = /** @class */ (function (_super) {\n    __extends(WebXRHandTracking, _super);\n    /**\n     * Creates a new instance of the XR hand tracking feature.\n     * @param _xrSessionManager An instance of WebXRSessionManager.\n     * @param options Options to use when constructing this feature.\n     */\n    function WebXRHandTracking(_xrSessionManager, \n    /** Options to use when constructing this feature. */\n    options) {\n        var _this = _super.call(this, _xrSessionManager) || this;\n        _this.options = options;\n        _this._attachedHands = {};\n        _this._trackingHands = { left: null, right: null };\n        _this._handResources = { jointMeshes: null, handMeshes: null, rigMappings: null };\n        /**\n         * This observable will notify registered observers when a new hand object was added and initialized\n         */\n        _this.onHandAddedObservable = new Observable();\n        /**\n         * This observable will notify its observers right before the hand object is disposed\n         */\n        _this.onHandRemovedObservable = new Observable();\n        _this._attachHand = function (xrController) {\n            var _a, _b, _c;\n            if (!xrController.inputSource.hand || xrController.inputSource.handedness == \"none\" || !_this._handResources.jointMeshes) {\n                return;\n            }\n            var handedness = xrController.inputSource.handedness;\n            var webxrHand = new WebXRHand(xrController, _this._handResources.jointMeshes[handedness], _this._handResources.handMeshes && _this._handResources.handMeshes[handedness], _this._handResources.rigMappings && _this._handResources.rigMappings[handedness], (_a = _this.options.handMeshes) === null || _a === void 0 ? void 0 : _a.meshesUseLeftHandedCoordinates, (_b = _this.options.jointMeshes) === null || _b === void 0 ? void 0 : _b.invisible, (_c = _this.options.jointMeshes) === null || _c === void 0 ? void 0 : _c.scaleFactor);\n            _this._attachedHands[xrController.uniqueId] = webxrHand;\n            _this._trackingHands[handedness] = webxrHand;\n            _this.onHandAddedObservable.notifyObservers(webxrHand);\n        };\n        _this._detachHand = function (xrController) {\n            _this._detachHandById(xrController.uniqueId);\n        };\n        _this.xrNativeFeatureName = \"hand-tracking\";\n        // Support legacy versions of the options object by copying over joint mesh properties\n        var anyOptions = options;\n        var anyJointMeshOptions = anyOptions.jointMeshes;\n        if (anyJointMeshOptions) {\n            if (typeof anyJointMeshOptions.disableDefaultHandMesh !== \"undefined\") {\n                options.handMeshes = options.handMeshes || {};\n                options.handMeshes.disableDefaultMeshes = anyJointMeshOptions.disableDefaultHandMesh;\n            }\n            if (typeof anyJointMeshOptions.handMeshes !== \"undefined\") {\n                options.handMeshes = options.handMeshes || {};\n                options.handMeshes.customMeshes = anyJointMeshOptions.handMeshes;\n            }\n            if (typeof anyJointMeshOptions.leftHandedSystemMeshes !== \"undefined\") {\n                options.handMeshes = options.handMeshes || {};\n                options.handMeshes.meshesUseLeftHandedCoordinates = anyJointMeshOptions.leftHandedSystemMeshes;\n            }\n            if (typeof anyJointMeshOptions.rigMapping !== \"undefined\") {\n                options.handMeshes = options.handMeshes || {};\n                var leftRigMapping = {};\n                var rightRigMapping = {};\n                [\n                    [anyJointMeshOptions.rigMapping.left, leftRigMapping],\n                    [anyJointMeshOptions.rigMapping.right, rightRigMapping],\n                ].forEach(function (rigMappingTuple) {\n                    var legacyRigMapping = rigMappingTuple[0];\n                    var rigMapping = rigMappingTuple[1];\n                    legacyRigMapping.forEach(function (modelJointName, index) {\n                        rigMapping[handJointReferenceArray[index]] = modelJointName;\n                    });\n                });\n                options.handMeshes.customRigMappings = {\n                    left: leftRigMapping,\n                    right: rightRigMapping,\n                };\n            }\n        }\n        return _this;\n    }\n    WebXRHandTracking._GenerateTrackedJointMeshes = function (featureOptions) {\n        var meshes = {};\n        [\"left\", \"right\"].map(function (handedness) {\n            var _a, _b, _c, _d, _e;\n            var trackedMeshes = [];\n            var originalMesh = ((_a = featureOptions.jointMeshes) === null || _a === void 0 ? void 0 : _a.sourceMesh) || CreateIcoSphere(\"jointParent\", WebXRHandTracking._ICOSPHERE_PARAMS);\n            originalMesh.isVisible = !!((_b = featureOptions.jointMeshes) === null || _b === void 0 ? void 0 : _b.keepOriginalVisible);\n            for (var i = 0; i < handJointReferenceArray.length; ++i) {\n                var newInstance = originalMesh.createInstance(\"\".concat(handedness, \"-handJoint-\").concat(i));\n                if ((_c = featureOptions.jointMeshes) === null || _c === void 0 ? void 0 : _c.onHandJointMeshGenerated) {\n                    var returnedMesh = featureOptions.jointMeshes.onHandJointMeshGenerated(newInstance, i, handedness);\n                    if (returnedMesh) {\n                        if (returnedMesh !== newInstance) {\n                            newInstance.dispose();\n                            newInstance = returnedMesh;\n                        }\n                    }\n                }\n                newInstance.isPickable = false;\n                if ((_d = featureOptions.jointMeshes) === null || _d === void 0 ? void 0 : _d.enablePhysics) {\n                    var props = ((_e = featureOptions.jointMeshes) === null || _e === void 0 ? void 0 : _e.physicsProps) || {};\n                    // downscale the instances so that physics will be initialized correctly\n                    newInstance.scaling.setAll(0.02);\n                    var type = props.impostorType !== undefined ? props.impostorType : PhysicsImpostor.SphereImpostor;\n                    newInstance.physicsImpostor = new PhysicsImpostor(newInstance, type, __assign({ mass: 0 }, props));\n                }\n                newInstance.rotationQuaternion = new Quaternion();\n                newInstance.isVisible = false;\n                trackedMeshes.push(newInstance);\n            }\n            meshes[handedness] = trackedMeshes;\n        });\n        return { left: meshes.left, right: meshes.right };\n    };\n    WebXRHandTracking._GenerateDefaultHandMeshesAsync = function (scene, options) {\n        var _this = this;\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(function (resolve) { return __awaiter(_this, void 0, void 0, function () {\n            var riggedMeshes, handsDefined, handGLBs, handShader, handColors, handNodes;\n            var _a, _b, _c, _d, _e;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        riggedMeshes = {};\n                        // check the cache, defensive\n                        if ((_b = (_a = WebXRHandTracking._RightHandGLB) === null || _a === void 0 ? void 0 : _a.meshes[1]) === null || _b === void 0 ? void 0 : _b.isDisposed()) {\n                            WebXRHandTracking._RightHandGLB = null;\n                        }\n                        if ((_d = (_c = WebXRHandTracking._LeftHandGLB) === null || _c === void 0 ? void 0 : _c.meshes[1]) === null || _d === void 0 ? void 0 : _d.isDisposed()) {\n                            WebXRHandTracking._LeftHandGLB = null;\n                        }\n                        handsDefined = !!(WebXRHandTracking._RightHandGLB && WebXRHandTracking._LeftHandGLB);\n                        return [4 /*yield*/, Promise.all([\n                                WebXRHandTracking._RightHandGLB ||\n                                    SceneLoader.ImportMeshAsync(\"\", WebXRHandTracking.DEFAULT_HAND_MODEL_BASE_URL, WebXRHandTracking.DEFAULT_HAND_MODEL_RIGHT_FILENAME, scene),\n                                WebXRHandTracking._LeftHandGLB ||\n                                    SceneLoader.ImportMeshAsync(\"\", WebXRHandTracking.DEFAULT_HAND_MODEL_BASE_URL, WebXRHandTracking.DEFAULT_HAND_MODEL_LEFT_FILENAME, scene),\n                            ])];\n                    case 1:\n                        handGLBs = _f.sent();\n                        WebXRHandTracking._RightHandGLB = handGLBs[0];\n                        WebXRHandTracking._LeftHandGLB = handGLBs[1];\n                        handShader = new NodeMaterial(\"handShader\", scene, { emitComments: false });\n                        return [4 /*yield*/, handShader.loadAsync(WebXRHandTracking.DEFAULT_HAND_MODEL_SHADER_URL)];\n                    case 2:\n                        _f.sent();\n                        // depth prepass and alpha mode\n                        handShader.needDepthPrePass = true;\n                        handShader.transparencyMode = Material.MATERIAL_ALPHABLEND;\n                        handShader.alphaMode = 2;\n                        // build node materials\n                        handShader.build(false);\n                        handColors = __assign({ base: Color3.FromInts(116, 63, 203), fresnel: Color3.FromInts(149, 102, 229), fingerColor: Color3.FromInts(177, 130, 255), tipFresnel: Color3.FromInts(220, 200, 255) }, (_e = options === null || options === void 0 ? void 0 : options.handMeshes) === null || _e === void 0 ? void 0 : _e.customColors);\n                        handNodes = {\n                            base: handShader.getBlockByName(\"baseColor\"),\n                            fresnel: handShader.getBlockByName(\"fresnelColor\"),\n                            fingerColor: handShader.getBlockByName(\"fingerColor\"),\n                            tipFresnel: handShader.getBlockByName(\"tipFresnelColor\"),\n                        };\n                        handNodes.base.value = handColors.base;\n                        handNodes.fresnel.value = handColors.fresnel;\n                        handNodes.fingerColor.value = handColors.fingerColor;\n                        handNodes.tipFresnel.value = handColors.tipFresnel;\n                        [\"left\", \"right\"].forEach(function (handedness) {\n                            var handGLB = handedness == \"left\" ? WebXRHandTracking._LeftHandGLB : WebXRHandTracking._RightHandGLB;\n                            if (!handGLB) {\n                                // this should never happen!\n                                throw new Error(\"Could not load hand model\");\n                            }\n                            var handMesh = handGLB.meshes[1];\n                            handMesh._internalAbstractMeshDataInfo._computeBonesUsingShaders = true;\n                            handMesh.material = handShader.clone(\"\".concat(handedness, \"HandShaderClone\"), true);\n                            handMesh.isVisible = false;\n                            riggedMeshes[handedness] = handMesh;\n                            // single change for left handed systems\n                            if (!handsDefined && !scene.useRightHandedSystem) {\n                                handGLB.meshes[1].rotate(Axis.Y, Math.PI);\n                            }\n                        });\n                        handShader.dispose();\n                        resolve({ left: riggedMeshes.left, right: riggedMeshes.right });\n                        return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    /**\n     * Generates a mapping from XRHandJoint to bone name for the default hand mesh.\n     * @param handedness The handedness being mapped for.\n     */\n    WebXRHandTracking._GenerateDefaultHandMeshRigMapping = function (handedness) {\n        var _a;\n        var H = handedness == \"right\" ? \"R\" : \"L\";\n        return _a = {},\n            _a[XRHandJoint.WRIST] = \"wrist_\".concat(H),\n            _a[XRHandJoint.THUMB_METACARPAL] = \"thumb_metacarpal_\".concat(H),\n            _a[XRHandJoint.THUMB_PHALANX_PROXIMAL] = \"thumb_proxPhalanx_\".concat(H),\n            _a[XRHandJoint.THUMB_PHALANX_DISTAL] = \"thumb_distPhalanx_\".concat(H),\n            _a[XRHandJoint.THUMB_TIP] = \"thumb_tip_\".concat(H),\n            _a[XRHandJoint.INDEX_FINGER_METACARPAL] = \"index_metacarpal_\".concat(H),\n            _a[XRHandJoint.INDEX_FINGER_PHALANX_PROXIMAL] = \"index_proxPhalanx_\".concat(H),\n            _a[XRHandJoint.INDEX_FINGER_PHALANX_INTERMEDIATE] = \"index_intPhalanx_\".concat(H),\n            _a[XRHandJoint.INDEX_FINGER_PHALANX_DISTAL] = \"index_distPhalanx_\".concat(H),\n            _a[XRHandJoint.INDEX_FINGER_TIP] = \"index_tip_\".concat(H),\n            _a[XRHandJoint.MIDDLE_FINGER_METACARPAL] = \"middle_metacarpal_\".concat(H),\n            _a[XRHandJoint.MIDDLE_FINGER_PHALANX_PROXIMAL] = \"middle_proxPhalanx_\".concat(H),\n            _a[XRHandJoint.MIDDLE_FINGER_PHALANX_INTERMEDIATE] = \"middle_intPhalanx_\".concat(H),\n            _a[XRHandJoint.MIDDLE_FINGER_PHALANX_DISTAL] = \"middle_distPhalanx_\".concat(H),\n            _a[XRHandJoint.MIDDLE_FINGER_TIP] = \"middle_tip_\".concat(H),\n            _a[XRHandJoint.RING_FINGER_METACARPAL] = \"ring_metacarpal_\".concat(H),\n            _a[XRHandJoint.RING_FINGER_PHALANX_PROXIMAL] = \"ring_proxPhalanx_\".concat(H),\n            _a[XRHandJoint.RING_FINGER_PHALANX_INTERMEDIATE] = \"ring_intPhalanx_\".concat(H),\n            _a[XRHandJoint.RING_FINGER_PHALANX_DISTAL] = \"ring_distPhalanx_\".concat(H),\n            _a[XRHandJoint.RING_FINGER_TIP] = \"ring_tip_\".concat(H),\n            _a[XRHandJoint.PINKY_FINGER_METACARPAL] = \"little_metacarpal_\".concat(H),\n            _a[XRHandJoint.PINKY_FINGER_PHALANX_PROXIMAL] = \"little_proxPhalanx_\".concat(H),\n            _a[XRHandJoint.PINKY_FINGER_PHALANX_INTERMEDIATE] = \"little_intPhalanx_\".concat(H),\n            _a[XRHandJoint.PINKY_FINGER_PHALANX_DISTAL] = \"little_distPhalanx_\".concat(H),\n            _a[XRHandJoint.PINKY_FINGER_TIP] = \"little_tip_\".concat(H),\n            _a;\n    };\n    /**\n     * Check if the needed objects are defined.\n     * This does not mean that the feature is enabled, but that the objects needed are well defined.\n     */\n    WebXRHandTracking.prototype.isCompatible = function () {\n        return typeof XRHand !== \"undefined\";\n    };\n    /**\n     * Get the hand object according to the controller id\n     * @param controllerId the controller id to which we want to get the hand\n     * @returns null if not found or the WebXRHand object if found\n     */\n    WebXRHandTracking.prototype.getHandByControllerId = function (controllerId) {\n        return this._attachedHands[controllerId];\n    };\n    /**\n     * Get a hand object according to the requested handedness\n     * @param handedness the handedness to request\n     * @returns null if not found or the WebXRHand object if found\n     */\n    WebXRHandTracking.prototype.getHandByHandedness = function (handedness) {\n        if (handedness == \"none\") {\n            return null;\n        }\n        return this._trackingHands[handedness];\n    };\n    /**\n     * Attach this feature.\n     * Will usually be called by the features manager.\n     *\n     * @returns true if successful.\n     */\n    WebXRHandTracking.prototype.attach = function () {\n        var _this = this;\n        var _a, _b, _c, _d;\n        if (!_super.prototype.attach.call(this)) {\n            return false;\n        }\n        this._handResources = {\n            jointMeshes: WebXRHandTracking._GenerateTrackedJointMeshes(this.options),\n            handMeshes: ((_a = this.options.handMeshes) === null || _a === void 0 ? void 0 : _a.customMeshes) || null,\n            rigMappings: ((_b = this.options.handMeshes) === null || _b === void 0 ? void 0 : _b.customRigMappings) || null,\n        };\n        // If they didn't supply custom meshes and are not disabling the default meshes...\n        if (!((_c = this.options.handMeshes) === null || _c === void 0 ? void 0 : _c.customMeshes) && !((_d = this.options.handMeshes) === null || _d === void 0 ? void 0 : _d.disableDefaultMeshes)) {\n            WebXRHandTracking._GenerateDefaultHandMeshesAsync(EngineStore.LastCreatedScene, this.options).then(function (defaultHandMeshes) {\n                var _a, _b;\n                _this._handResources.handMeshes = defaultHandMeshes;\n                _this._handResources.rigMappings = {\n                    left: WebXRHandTracking._GenerateDefaultHandMeshRigMapping(\"left\"),\n                    right: WebXRHandTracking._GenerateDefaultHandMeshRigMapping(\"right\"),\n                };\n                // Apply meshes to existing hands if already tracking.\n                (_a = _this._trackingHands.left) === null || _a === void 0 ? void 0 : _a.setHandMesh(_this._handResources.handMeshes.left, _this._handResources.rigMappings.left);\n                (_b = _this._trackingHands.right) === null || _b === void 0 ? void 0 : _b.setHandMesh(_this._handResources.handMeshes.right, _this._handResources.rigMappings.right);\n            });\n        }\n        this.options.xrInput.controllers.forEach(this._attachHand);\n        this._addNewAttachObserver(this.options.xrInput.onControllerAddedObservable, this._attachHand);\n        this._addNewAttachObserver(this.options.xrInput.onControllerRemovedObservable, this._detachHand);\n        return true;\n    };\n    WebXRHandTracking.prototype._onXRFrame = function (_xrFrame) {\n        var _a, _b;\n        (_a = this._trackingHands.left) === null || _a === void 0 ? void 0 : _a.updateFromXRFrame(_xrFrame, this._xrSessionManager.referenceSpace);\n        (_b = this._trackingHands.right) === null || _b === void 0 ? void 0 : _b.updateFromXRFrame(_xrFrame, this._xrSessionManager.referenceSpace);\n    };\n    WebXRHandTracking.prototype._detachHandById = function (controllerId) {\n        var _a;\n        var hand = this.getHandByControllerId(controllerId);\n        if (hand) {\n            var handedness = hand.xrController.inputSource.handedness == \"left\" ? \"left\" : \"right\";\n            if (((_a = this._trackingHands[handedness]) === null || _a === void 0 ? void 0 : _a.xrController.uniqueId) === controllerId) {\n                this._trackingHands[handedness] = null;\n            }\n            this.onHandRemovedObservable.notifyObservers(hand);\n            hand.dispose();\n            delete this._attachedHands[controllerId];\n        }\n    };\n    /**\n     * Detach this feature.\n     * Will usually be called by the features manager.\n     *\n     * @returns true if successful.\n     */\n    WebXRHandTracking.prototype.detach = function () {\n        var _this = this;\n        if (!_super.prototype.detach.call(this)) {\n            return false;\n        }\n        Object.keys(this._attachedHands).forEach(function (uniqueId) { return _this._detachHandById(uniqueId); });\n        return true;\n    };\n    /**\n     * Dispose this feature and all of the resources attached.\n     */\n    WebXRHandTracking.prototype.dispose = function () {\n        var _a;\n        _super.prototype.dispose.call(this);\n        this.onHandAddedObservable.clear();\n        this.onHandRemovedObservable.clear();\n        if (this._handResources.handMeshes && !((_a = this.options.handMeshes) === null || _a === void 0 ? void 0 : _a.customMeshes)) {\n            // this will dispose the cached meshes\n            this._handResources.handMeshes.left.dispose();\n            this._handResources.handMeshes.right.dispose();\n            // remove the cached meshes\n            WebXRHandTracking._RightHandGLB = null;\n            WebXRHandTracking._LeftHandGLB = null;\n        }\n        if (this._handResources.jointMeshes) {\n            this._handResources.jointMeshes.left.forEach(function (trackedMesh) { return trackedMesh.dispose(); });\n            this._handResources.jointMeshes.right.forEach(function (trackedMesh) { return trackedMesh.dispose(); });\n        }\n    };\n    /**\n     * The module's name\n     */\n    WebXRHandTracking.Name = WebXRFeatureName.HAND_TRACKING;\n    /**\n     * The (Babylon) version of this module.\n     * This is an integer representing the implementation version.\n     * This number does not correspond to the WebXR specs version\n     */\n    WebXRHandTracking.Version = 1;\n    /** The base URL for the default hand model. */\n    WebXRHandTracking.DEFAULT_HAND_MODEL_BASE_URL = \"https://assets.babylonjs.com/meshes/HandMeshes/\";\n    /** The filename to use for the default right hand model. */\n    WebXRHandTracking.DEFAULT_HAND_MODEL_RIGHT_FILENAME = \"r_hand_rhs.glb\";\n    /** The filename to use for the default left hand model. */\n    WebXRHandTracking.DEFAULT_HAND_MODEL_LEFT_FILENAME = \"l_hand_rhs.glb\";\n    /** The URL pointing to the default hand model NodeMaterial shader. */\n    WebXRHandTracking.DEFAULT_HAND_MODEL_SHADER_URL = \"https://assets.babylonjs.com/meshes/HandMeshes/handsShader.json\";\n    // We want to use lightweight models, diameter will initially be 1 but scaled to the values returned from WebXR.\n    WebXRHandTracking._ICOSPHERE_PARAMS = { radius: 0.5, flat: false, subdivisions: 2 };\n    WebXRHandTracking._RightHandGLB = null;\n    WebXRHandTracking._LeftHandGLB = null;\n    return WebXRHandTracking;\n}(WebXRAbstractFeature));\nexport { WebXRHandTracking };\n//register the plugin\nWebXRFeaturesManager.AddWebXRFeature(WebXRHandTracking.Name, function (xrSessionManager, options) {\n    return function () { return new WebXRHandTracking(xrSessionManager, options); };\n}, WebXRHandTracking.Version, false);\n//# sourceMappingURL=WebXRHandTracking.js.map","import { __extends } from \"tslib\";\nimport { WebXRFeaturesManager, WebXRFeatureName } from \"../webXRFeaturesManager.js\";\nimport { CreateSphere } from \"../../Meshes/Builders/sphereBuilder.js\";\nimport { Vector3, Quaternion, TmpVectors } from \"../../Maths/math.vector.js\";\nimport { Ray } from \"../../Culling/ray.js\";\nimport { PickingInfo } from \"../../Collisions/pickingInfo.js\";\nimport { WebXRAbstractFeature } from \"./WebXRAbstractFeature.js\";\nimport { UtilityLayerRenderer } from \"../../Rendering/utilityLayerRenderer.js\";\nimport { BoundingSphere } from \"../../Culling/boundingSphere.js\";\nimport { StandardMaterial } from \"../../Materials/standardMaterial.js\";\nimport { Color3 } from \"../../Maths/math.color.js\";\nimport { NodeMaterial } from \"../../Materials/Node/nodeMaterial.js\";\nimport { Animation } from \"../../Animations/animation.js\";\nimport { QuadraticEase, EasingFunction } from \"../../Animations/easing.js\";\n// side effects\nimport \"../../Meshes/subMesh.project.js\";\n// Tracks the interaction animation state when using a motion controller with a near interaction orb\nvar ControllerOrbAnimationState;\n(function (ControllerOrbAnimationState) {\n    /**\n     * Orb is invisible\n     */\n    ControllerOrbAnimationState[ControllerOrbAnimationState[\"DEHYDRATED\"] = 0] = \"DEHYDRATED\";\n    /**\n     * Orb is visible and inside the hover range\n     */\n    ControllerOrbAnimationState[ControllerOrbAnimationState[\"HOVER\"] = 1] = \"HOVER\";\n    /**\n     * Orb is visible and touching a near interaction target\n     */\n    ControllerOrbAnimationState[ControllerOrbAnimationState[\"TOUCH\"] = 2] = \"TOUCH\";\n})(ControllerOrbAnimationState || (ControllerOrbAnimationState = {}));\n/**\n * Where should the near interaction mesh be attached to when using a motion controller for near interaction\n */\nexport var WebXRNearControllerMode;\n(function (WebXRNearControllerMode) {\n    /**\n     * Motion controllers will not support near interaction\n     */\n    WebXRNearControllerMode[WebXRNearControllerMode[\"DISABLED\"] = 0] = \"DISABLED\";\n    /**\n     * The interaction point for motion controllers will be inside of them\n     */\n    WebXRNearControllerMode[WebXRNearControllerMode[\"CENTERED_ON_CONTROLLER\"] = 1] = \"CENTERED_ON_CONTROLLER\";\n    /**\n     * The interaction point for motion controllers will be in front of the controller\n     */\n    WebXRNearControllerMode[WebXRNearControllerMode[\"CENTERED_IN_FRONT\"] = 2] = \"CENTERED_IN_FRONT\";\n})(WebXRNearControllerMode || (WebXRNearControllerMode = {}));\n/**\n * A module that will enable near interaction near interaction for hands and motion controllers of XR Input Sources\n */\nvar WebXRNearInteraction = /** @class */ (function (_super) {\n    __extends(WebXRNearInteraction, _super);\n    /**\n     * constructs a new background remover module\n     * @param _xrSessionManager the session manager for this module\n     * @param _options read-only options to be used in this module\n     */\n    function WebXRNearInteraction(_xrSessionManager, _options) {\n        var _this = _super.call(this, _xrSessionManager) || this;\n        _this._options = _options;\n        _this._tmpRay = new Ray(new Vector3(), new Vector3());\n        _this._attachController = function (xrController) {\n            if (_this._controllers[xrController.uniqueId]) {\n                // already attached\n                return;\n            }\n            // get two new meshes\n            var _a = _this._generateNewTouchPointMesh(), touchCollisionMesh = _a.touchCollisionMesh, touchCollisionMeshFunction = _a.touchCollisionMeshFunction, hydrateCollisionMeshFunction = _a.hydrateCollisionMeshFunction;\n            var selectionMesh = _this._generateVisualCue();\n            _this._controllers[xrController.uniqueId] = {\n                xrController: xrController,\n                meshUnderPointer: null,\n                nearInteractionTargetMesh: null,\n                pick: null,\n                stalePick: null,\n                touchCollisionMesh: touchCollisionMesh,\n                touchCollisionMeshFunction: touchCollisionMeshFunction,\n                hydrateCollisionMeshFunction: hydrateCollisionMeshFunction,\n                currentAnimationState: ControllerOrbAnimationState.DEHYDRATED,\n                grabRay: new Ray(new Vector3(), new Vector3()),\n                hoverInteraction: false,\n                nearInteraction: false,\n                grabInteraction: false,\n                id: WebXRNearInteraction._IdCounter++,\n                pickedPointVisualCue: selectionMesh,\n            };\n            if (_this._attachedController) {\n                if (!_this._options.enableNearInteractionOnAllControllers &&\n                    _this._options.preferredHandedness &&\n                    xrController.inputSource.handedness === _this._options.preferredHandedness) {\n                    _this._attachedController = xrController.uniqueId;\n                }\n            }\n            else {\n                if (!_this._options.enableNearInteractionOnAllControllers) {\n                    _this._attachedController = xrController.uniqueId;\n                }\n            }\n            switch (xrController.inputSource.targetRayMode) {\n                case \"tracked-pointer\":\n                    return _this._attachNearInteractionMode(xrController);\n                case \"gaze\":\n                    return null;\n                case \"screen\":\n                    return null;\n            }\n        };\n        _this._controllers = {};\n        _this._farInteractionFeature = null;\n        /**\n         * default color of the selection ring\n         */\n        _this.selectionMeshDefaultColor = new Color3(0.8, 0.8, 0.8);\n        /**\n         * This color will be applied to the selection ring when selection is triggered\n         */\n        _this.selectionMeshPickedColor = new Color3(0.3, 0.3, 1.0);\n        _this._hoverRadius = 0.1;\n        _this._pickRadius = 0.02;\n        _this._controllerPickRadius = 0.03; // The radius is slightly larger here to make it easier to manipulate since it's not tied to the hand position\n        _this._nearGrabLengthScale = 5;\n        _this._scene = _this._xrSessionManager.scene;\n        if (_this._options.nearInteractionControllerMode === undefined) {\n            _this._options.nearInteractionControllerMode = WebXRNearControllerMode.CENTERED_IN_FRONT;\n        }\n        if (_this._options.farInteractionFeature) {\n            _this._farInteractionFeature = _this._options.farInteractionFeature;\n        }\n        return _this;\n    }\n    /**\n     * Attach this feature\n     * Will usually be called by the features manager\n     *\n     * @returns true if successful.\n     */\n    WebXRNearInteraction.prototype.attach = function () {\n        var _this = this;\n        if (!_super.prototype.attach.call(this)) {\n            return false;\n        }\n        this._options.xrInput.controllers.forEach(this._attachController);\n        this._addNewAttachObserver(this._options.xrInput.onControllerAddedObservable, this._attachController);\n        this._addNewAttachObserver(this._options.xrInput.onControllerRemovedObservable, function (controller) {\n            // REMOVE the controller\n            _this._detachController(controller.uniqueId);\n        });\n        this._scene.constantlyUpdateMeshUnderPointer = true;\n        return true;\n    };\n    /**\n     * Detach this feature.\n     * Will usually be called by the features manager\n     *\n     * @returns true if successful.\n     */\n    WebXRNearInteraction.prototype.detach = function () {\n        var _this = this;\n        if (!_super.prototype.detach.call(this)) {\n            return false;\n        }\n        Object.keys(this._controllers).forEach(function (controllerId) {\n            _this._detachController(controllerId);\n        });\n        return true;\n    };\n    /**\n     * Will get the mesh under a specific pointer.\n     * `scene.meshUnderPointer` will only return one mesh - either left or right.\n     * @param controllerId the controllerId to check\n     * @returns The mesh under pointer or null if no mesh is under the pointer\n     */\n    WebXRNearInteraction.prototype.getMeshUnderPointer = function (controllerId) {\n        if (this._controllers[controllerId]) {\n            return this._controllers[controllerId].meshUnderPointer;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Get the xr controller that correlates to the pointer id in the pointer event\n     *\n     * @param id the pointer id to search for\n     * @returns the controller that correlates to this id or null if not found\n     */\n    WebXRNearInteraction.prototype.getXRControllerByPointerId = function (id) {\n        var keys = Object.keys(this._controllers);\n        for (var i = 0; i < keys.length; ++i) {\n            if (this._controllers[keys[i]].id === id) {\n                return this._controllers[keys[i]].xrController || null;\n            }\n        }\n        return null;\n    };\n    /**\n     * This function sets webXRControllerPointerSelection feature that will be disabled when\n     * the hover range is reached for a mesh and will be reattached when not in hover range.\n     * This is used to remove the selection rays when moving.\n     * @param farInteractionFeature the feature to disable when finger is in hover range for a mesh\n     */\n    WebXRNearInteraction.prototype.setFarInteractionFeature = function (farInteractionFeature) {\n        this._farInteractionFeature = farInteractionFeature;\n    };\n    /**\n     * Filter used for near interaction pick and hover\n     * @param mesh\n     */\n    WebXRNearInteraction.prototype._nearPickPredicate = function (mesh) {\n        return mesh.isEnabled() && mesh.isVisible && mesh.isPickable && mesh.isNearPickable;\n    };\n    /**\n     * Filter used for near interaction grab\n     * @param mesh\n     */\n    WebXRNearInteraction.prototype._nearGrabPredicate = function (mesh) {\n        return mesh.isEnabled() && mesh.isVisible && mesh.isPickable && mesh.isNearGrabbable;\n    };\n    /**\n     * Filter used for any near interaction\n     * @param mesh\n     */\n    WebXRNearInteraction.prototype._nearInteractionPredicate = function (mesh) {\n        return mesh.isEnabled() && mesh.isVisible && mesh.isPickable && (mesh.isNearPickable || mesh.isNearGrabbable);\n    };\n    WebXRNearInteraction.prototype._controllerAvailablePredicate = function (mesh, controllerId) {\n        var parent = mesh;\n        while (parent) {\n            if (parent.reservedDataStore && parent.reservedDataStore.nearInteraction && parent.reservedDataStore.nearInteraction.excludedControllerId === controllerId) {\n                return false;\n            }\n            parent = parent.parent;\n        }\n        return true;\n    };\n    WebXRNearInteraction.prototype._handleTransitionAnimation = function (controllerData, newState) {\n        var _a;\n        if (controllerData.currentAnimationState === newState ||\n            this._options.nearInteractionControllerMode !== WebXRNearControllerMode.CENTERED_IN_FRONT ||\n            !!((_a = controllerData.xrController) === null || _a === void 0 ? void 0 : _a.inputSource.hand)) {\n            return;\n        }\n        // Don't always break to allow for animation fallthrough on rare cases of multi-transitions\n        if (newState > controllerData.currentAnimationState) {\n            switch (controllerData.currentAnimationState) {\n                case ControllerOrbAnimationState.DEHYDRATED: {\n                    controllerData.hydrateCollisionMeshFunction(true);\n                    if (newState === ControllerOrbAnimationState.HOVER) {\n                        break;\n                    }\n                }\n                // eslint-disable-next-line no-fallthrough\n                case ControllerOrbAnimationState.HOVER: {\n                    controllerData.touchCollisionMeshFunction(true);\n                    if (newState === ControllerOrbAnimationState.TOUCH) {\n                        break;\n                    }\n                }\n            }\n        }\n        else {\n            switch (controllerData.currentAnimationState) {\n                case ControllerOrbAnimationState.TOUCH: {\n                    controllerData.touchCollisionMeshFunction(false);\n                    if (newState === ControllerOrbAnimationState.HOVER) {\n                        break;\n                    }\n                }\n                // eslint-disable-next-line no-fallthrough\n                case ControllerOrbAnimationState.HOVER: {\n                    controllerData.hydrateCollisionMeshFunction(false);\n                    if (newState === ControllerOrbAnimationState.DEHYDRATED) {\n                        break;\n                    }\n                }\n            }\n        }\n        controllerData.currentAnimationState = newState;\n    };\n    WebXRNearInteraction.prototype._processTouchPoint = function (id, position, orientation) {\n        var _a;\n        var controllerData = this._controllers[id];\n        // Position and orientation could be temporary values, se we take care of them before calling any functions that use temporary vectors/quaternions\n        controllerData.grabRay.origin.copyFrom(position);\n        orientation.toEulerAnglesToRef(TmpVectors.Vector3[0]);\n        controllerData.grabRay.direction.copyFrom(TmpVectors.Vector3[0]);\n        if (this._options.nearInteractionControllerMode === WebXRNearControllerMode.CENTERED_IN_FRONT && !((_a = controllerData.xrController) === null || _a === void 0 ? void 0 : _a.inputSource.hand)) {\n            // offset the touch point in the direction the transform is facing\n            controllerData.xrController.getWorldPointerRayToRef(this._tmpRay);\n            controllerData.grabRay.origin.addInPlace(this._tmpRay.direction.scale(0.05));\n        }\n        controllerData.grabRay.length = this._nearGrabLengthScale * this._hoverRadius;\n        controllerData.touchCollisionMesh.position.copyFrom(controllerData.grabRay.origin);\n    };\n    WebXRNearInteraction.prototype._onXRFrame = function (_xrFrame) {\n        var _this = this;\n        Object.keys(this._controllers).forEach(function (id) {\n            var _a;\n            // only do this for the selected pointer\n            var controllerData = _this._controllers[id];\n            var handData = (_a = controllerData.xrController) === null || _a === void 0 ? void 0 : _a.inputSource.hand;\n            // If near interaction is not enabled/available for this controller, return early\n            if ((!_this._options.enableNearInteractionOnAllControllers && id !== _this._attachedController) ||\n                !controllerData.xrController ||\n                (!handData && (!_this._options.nearInteractionControllerMode || !controllerData.xrController.inputSource.gamepad))) {\n                controllerData.pick = null;\n                return;\n            }\n            controllerData.hoverInteraction = false;\n            controllerData.nearInteraction = false;\n            // Every frame check collisions/input\n            if (controllerData.xrController) {\n                if (handData) {\n                    var xrIndexTip = handData.get(\"index-finger-tip\");\n                    if (xrIndexTip) {\n                        var indexTipPose = _xrFrame.getJointPose(xrIndexTip, _this._xrSessionManager.referenceSpace);\n                        if (indexTipPose && indexTipPose.transform) {\n                            var axisRHSMultiplier = _this._scene.useRightHandedSystem ? 1 : -1;\n                            TmpVectors.Vector3[0].set(indexTipPose.transform.position.x, indexTipPose.transform.position.y, indexTipPose.transform.position.z * axisRHSMultiplier);\n                            TmpVectors.Quaternion[0].set(indexTipPose.transform.orientation.x, indexTipPose.transform.orientation.y, indexTipPose.transform.orientation.z * axisRHSMultiplier, indexTipPose.transform.orientation.w * axisRHSMultiplier);\n                            _this._processTouchPoint(id, TmpVectors.Vector3[0], TmpVectors.Quaternion[0]);\n                        }\n                    }\n                }\n                else if (controllerData.xrController.inputSource.gamepad && _this._options.nearInteractionControllerMode !== WebXRNearControllerMode.DISABLED) {\n                    var controllerPose = controllerData.xrController.pointer;\n                    if (controllerData.xrController.grip && _this._options.nearInteractionControllerMode === WebXRNearControllerMode.CENTERED_ON_CONTROLLER) {\n                        controllerPose = controllerData.xrController.grip;\n                    }\n                    _this._processTouchPoint(id, controllerPose.position, controllerPose.rotationQuaternion);\n                }\n            }\n            else {\n                return;\n            }\n            var accuratePickInfo = function (originalScenePick, utilityScenePick) {\n                var pick = null;\n                if (!utilityScenePick || !utilityScenePick.hit) {\n                    // No hit in utility scene\n                    pick = originalScenePick;\n                }\n                else if (!originalScenePick || !originalScenePick.hit) {\n                    // No hit in original scene\n                    pick = utilityScenePick;\n                }\n                else if (utilityScenePick.distance < originalScenePick.distance) {\n                    // Hit is closer in utility scene\n                    pick = utilityScenePick;\n                }\n                else {\n                    // Hit is closer in original scene\n                    pick = originalScenePick;\n                }\n                return pick;\n            };\n            var populateNearInteractionInfo = function (nearInteractionInfo) {\n                var result = new PickingInfo();\n                var nearInteractionAtOrigin = false;\n                var nearInteraction = nearInteractionInfo && nearInteractionInfo.pickedPoint && nearInteractionInfo.hit;\n                if (nearInteractionInfo === null || nearInteractionInfo === void 0 ? void 0 : nearInteractionInfo.pickedPoint) {\n                    nearInteractionAtOrigin = nearInteractionInfo.pickedPoint.x === 0 && nearInteractionInfo.pickedPoint.y === 0 && nearInteractionInfo.pickedPoint.z === 0;\n                }\n                if (nearInteraction && !nearInteractionAtOrigin) {\n                    result = nearInteractionInfo;\n                }\n                return result;\n            };\n            // Don't perform touch logic while grabbing, to prevent triggering touch interactions while in the middle of a grab interaction\n            // Dont update cursor logic either - the cursor should already be visible for the grab to be in range,\n            // and in order to maintain its position on the target mesh it is parented for the duration of the grab.\n            if (!controllerData.grabInteraction) {\n                var pick = null;\n                // near interaction hover\n                var utilitySceneHoverPick = null;\n                if (_this._options.useUtilityLayer && _this._utilityLayerScene) {\n                    utilitySceneHoverPick = _this._pickWithSphere(controllerData, _this._hoverRadius, _this._utilityLayerScene, function (mesh) {\n                        return _this._nearInteractionPredicate(mesh);\n                    });\n                }\n                var originalSceneHoverPick = _this._pickWithSphere(controllerData, _this._hoverRadius, _this._scene, function (mesh) { return _this._nearInteractionPredicate(mesh); });\n                var hoverPickInfo = accuratePickInfo(originalSceneHoverPick, utilitySceneHoverPick);\n                if (hoverPickInfo && hoverPickInfo.hit) {\n                    pick = populateNearInteractionInfo(hoverPickInfo);\n                    if (pick.hit) {\n                        controllerData.hoverInteraction = true;\n                    }\n                }\n                // near interaction pick\n                if (controllerData.hoverInteraction) {\n                    var utilitySceneNearPick = null;\n                    var radius = handData ? _this._pickRadius : _this._controllerPickRadius;\n                    if (_this._options.useUtilityLayer && _this._utilityLayerScene) {\n                        utilitySceneNearPick = _this._pickWithSphere(controllerData, radius, _this._utilityLayerScene, function (mesh) { return _this._nearPickPredicate(mesh); });\n                    }\n                    var originalSceneNearPick = _this._pickWithSphere(controllerData, radius, _this._scene, function (mesh) { return _this._nearPickPredicate(mesh); });\n                    var pickInfo = accuratePickInfo(originalSceneNearPick, utilitySceneNearPick);\n                    var nearPick = populateNearInteractionInfo(pickInfo);\n                    if (nearPick.hit) {\n                        // Near pick takes precedence over hover interaction\n                        pick = nearPick;\n                        controllerData.nearInteraction = true;\n                    }\n                }\n                controllerData.stalePick = controllerData.pick;\n                controllerData.pick = pick;\n                // Update mesh under pointer\n                if (controllerData.pick && controllerData.pick.pickedPoint && controllerData.pick.hit) {\n                    controllerData.meshUnderPointer = controllerData.pick.pickedMesh;\n                    controllerData.pickedPointVisualCue.position.copyFrom(controllerData.pick.pickedPoint);\n                    controllerData.pickedPointVisualCue.isVisible = true;\n                    if (_this._farInteractionFeature && _this._farInteractionFeature.attached) {\n                        _this._farInteractionFeature._setPointerSelectionDisabledByPointerId(controllerData.id, true);\n                    }\n                }\n                else {\n                    controllerData.meshUnderPointer = null;\n                    controllerData.pickedPointVisualCue.isVisible = false;\n                    if (_this._farInteractionFeature && _this._farInteractionFeature.attached) {\n                        _this._farInteractionFeature._setPointerSelectionDisabledByPointerId(controllerData.id, false);\n                    }\n                }\n            }\n            // Update the interaction animation. Only updates if the visible touch mesh is active\n            var state = ControllerOrbAnimationState.DEHYDRATED;\n            if (controllerData.grabInteraction || controllerData.nearInteraction) {\n                state = ControllerOrbAnimationState.TOUCH;\n            }\n            else if (controllerData.hoverInteraction) {\n                state = ControllerOrbAnimationState.HOVER;\n            }\n            _this._handleTransitionAnimation(controllerData, state);\n        });\n    };\n    Object.defineProperty(WebXRNearInteraction.prototype, \"_utilityLayerScene\", {\n        get: function () {\n            return this._options.customUtilityLayerScene || UtilityLayerRenderer.DefaultUtilityLayer.utilityLayerScene;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebXRNearInteraction.prototype._generateVisualCue = function () {\n        var sceneToRenderTo = this._options.useUtilityLayer ? this._options.customUtilityLayerScene || UtilityLayerRenderer.DefaultUtilityLayer.utilityLayerScene : this._scene;\n        var selectionMesh = CreateSphere(\"nearInteraction\", {\n            diameter: 0.0035 * 3,\n        }, sceneToRenderTo);\n        selectionMesh.bakeCurrentTransformIntoVertices();\n        selectionMesh.isPickable = false;\n        selectionMesh.isVisible = false;\n        selectionMesh.rotationQuaternion = Quaternion.Identity();\n        var targetMat = new StandardMaterial(\"targetMat\", sceneToRenderTo);\n        targetMat.specularColor = Color3.Black();\n        targetMat.emissiveColor = this.selectionMeshDefaultColor;\n        targetMat.backFaceCulling = false;\n        selectionMesh.material = targetMat;\n        return selectionMesh;\n    };\n    WebXRNearInteraction.prototype._isControllerReadyForNearInteraction = function (id) {\n        if (this._farInteractionFeature) {\n            return this._farInteractionFeature._getPointerSelectionDisabledByPointerId(id);\n        }\n        return true;\n    };\n    WebXRNearInteraction.prototype._attachNearInteractionMode = function (xrController) {\n        var _this = this;\n        var controllerData = this._controllers[xrController.uniqueId];\n        var pointerEventInit = {\n            pointerId: controllerData.id,\n            pointerType: \"xr\",\n        };\n        controllerData.onFrameObserver = this._xrSessionManager.onXRFrameObservable.add(function () {\n            if ((!_this._options.enableNearInteractionOnAllControllers && xrController.uniqueId !== _this._attachedController) ||\n                !controllerData.xrController ||\n                (!controllerData.xrController.inputSource.hand && (!_this._options.nearInteractionControllerMode || !controllerData.xrController.inputSource.gamepad))) {\n                return;\n            }\n            if (controllerData.pick) {\n                controllerData.pick.ray = controllerData.grabRay;\n            }\n            if (controllerData.pick && _this._isControllerReadyForNearInteraction(controllerData.id)) {\n                _this._scene.simulatePointerMove(controllerData.pick, pointerEventInit);\n            }\n            // Near pick pointer event\n            if (controllerData.nearInteraction && controllerData.pick && controllerData.pick.hit) {\n                if (!controllerData.nearInteractionTargetMesh) {\n                    _this._scene.simulatePointerDown(controllerData.pick, pointerEventInit);\n                    controllerData.nearInteractionTargetMesh = controllerData.meshUnderPointer;\n                }\n            }\n            else if (controllerData.nearInteractionTargetMesh && controllerData.stalePick) {\n                _this._scene.simulatePointerUp(controllerData.stalePick, pointerEventInit);\n                controllerData.nearInteractionTargetMesh = null;\n            }\n        });\n        var grabCheck = function (pressed) {\n            if (_this._options.enableNearInteractionOnAllControllers ||\n                (xrController.uniqueId === _this._attachedController && _this._isControllerReadyForNearInteraction(controllerData.id))) {\n                if (controllerData.pick) {\n                    controllerData.pick.ray = controllerData.grabRay;\n                }\n                if (pressed && controllerData.pick && controllerData.meshUnderPointer && _this._nearGrabPredicate(controllerData.meshUnderPointer)) {\n                    controllerData.grabInteraction = true;\n                    controllerData.pickedPointVisualCue.isVisible = false;\n                    _this._scene.simulatePointerDown(controllerData.pick, pointerEventInit);\n                }\n                else if (!pressed && controllerData.pick && controllerData.grabInteraction) {\n                    _this._scene.simulatePointerUp(controllerData.pick, pointerEventInit);\n                    controllerData.grabInteraction = false;\n                    controllerData.pickedPointVisualCue.isVisible = true;\n                }\n            }\n            else {\n                if (pressed && !_this._options.enableNearInteractionOnAllControllers && !_this._options.disableSwitchOnClick) {\n                    _this._attachedController = xrController.uniqueId;\n                }\n            }\n        };\n        if (xrController.inputSource.gamepad) {\n            var init = function (motionController) {\n                controllerData.squeezeComponent = motionController.getComponent(\"grasp\");\n                if (controllerData.squeezeComponent) {\n                    controllerData.onSqueezeButtonChangedObserver = controllerData.squeezeComponent.onButtonStateChangedObservable.add(function (component) {\n                        if (component.changes.pressed) {\n                            var pressed = component.changes.pressed.current;\n                            grabCheck(pressed);\n                        }\n                    });\n                }\n                else {\n                    controllerData.selectionComponent = motionController.getMainComponent();\n                    controllerData.onButtonChangedObserver = controllerData.selectionComponent.onButtonStateChangedObservable.add(function (component) {\n                        if (component.changes.pressed) {\n                            var pressed = component.changes.pressed.current;\n                            grabCheck(pressed);\n                        }\n                    });\n                }\n            };\n            if (xrController.motionController) {\n                init(xrController.motionController);\n            }\n            else {\n                xrController.onMotionControllerInitObservable.add(init);\n            }\n        }\n        else {\n            // use the select and squeeze events\n            var selectStartListener = function (event) {\n                if (controllerData.xrController &&\n                    event.inputSource === controllerData.xrController.inputSource &&\n                    controllerData.pick &&\n                    _this._isControllerReadyForNearInteraction(controllerData.id) &&\n                    controllerData.meshUnderPointer &&\n                    _this._nearGrabPredicate(controllerData.meshUnderPointer)) {\n                    controllerData.grabInteraction = true;\n                    controllerData.pickedPointVisualCue.isVisible = false;\n                    _this._scene.simulatePointerDown(controllerData.pick, pointerEventInit);\n                }\n            };\n            var selectEndListener = function (event) {\n                if (controllerData.xrController &&\n                    event.inputSource === controllerData.xrController.inputSource &&\n                    controllerData.pick &&\n                    _this._isControllerReadyForNearInteraction(controllerData.id)) {\n                    _this._scene.simulatePointerUp(controllerData.pick, pointerEventInit);\n                    controllerData.grabInteraction = false;\n                    controllerData.pickedPointVisualCue.isVisible = true;\n                }\n            };\n            controllerData.eventListeners = {\n                selectend: selectEndListener,\n                selectstart: selectStartListener,\n            };\n            this._xrSessionManager.session.addEventListener(\"selectstart\", selectStartListener);\n            this._xrSessionManager.session.addEventListener(\"selectend\", selectEndListener);\n        }\n    };\n    WebXRNearInteraction.prototype._detachController = function (xrControllerUniqueId) {\n        var _this = this;\n        var controllerData = this._controllers[xrControllerUniqueId];\n        if (!controllerData) {\n            return;\n        }\n        if (controllerData.squeezeComponent) {\n            if (controllerData.onSqueezeButtonChangedObserver) {\n                controllerData.squeezeComponent.onButtonStateChangedObservable.remove(controllerData.onSqueezeButtonChangedObserver);\n            }\n        }\n        if (controllerData.selectionComponent) {\n            if (controllerData.onButtonChangedObserver) {\n                controllerData.selectionComponent.onButtonStateChangedObservable.remove(controllerData.onButtonChangedObserver);\n            }\n        }\n        if (controllerData.onFrameObserver) {\n            this._xrSessionManager.onXRFrameObservable.remove(controllerData.onFrameObserver);\n        }\n        if (controllerData.eventListeners) {\n            Object.keys(controllerData.eventListeners).forEach(function (eventName) {\n                var func = controllerData.eventListeners && controllerData.eventListeners[eventName];\n                if (func) {\n                    _this._xrSessionManager.session.removeEventListener(eventName, func);\n                }\n            });\n        }\n        controllerData.touchCollisionMesh.dispose();\n        controllerData.pickedPointVisualCue.dispose();\n        this._xrSessionManager.runInXRFrame(function () {\n            // Fire a pointerup\n            var pointerEventInit = {\n                pointerId: controllerData.id,\n                pointerType: \"xr\",\n            };\n            _this._scene.simulatePointerUp(new PickingInfo(), pointerEventInit);\n        });\n        // remove from the map\n        delete this._controllers[xrControllerUniqueId];\n        if (this._attachedController === xrControllerUniqueId) {\n            // check for other controllers\n            var keys = Object.keys(this._controllers);\n            if (keys.length) {\n                this._attachedController = keys[0];\n            }\n            else {\n                this._attachedController = \"\";\n            }\n        }\n    };\n    WebXRNearInteraction.prototype._generateNewTouchPointMesh = function () {\n        // populate information for near hover, pick and pinch\n        var meshCreationScene = this._options.useUtilityLayer ? this._options.customUtilityLayerScene || UtilityLayerRenderer.DefaultUtilityLayer.utilityLayerScene : this._scene;\n        var touchCollisionMesh = CreateSphere(\"PickSphere\", { diameter: 1 }, meshCreationScene);\n        touchCollisionMesh.isVisible = false;\n        // Generate the material for the touch mesh visuals\n        if (this._options.motionControllerOrbMaterial) {\n            touchCollisionMesh.material = this._options.motionControllerOrbMaterial;\n        }\n        else {\n            NodeMaterial.ParseFromSnippetAsync(\"8RUNKL#3\", meshCreationScene).then(function (nodeMaterial) {\n                touchCollisionMesh.material = nodeMaterial;\n            });\n        }\n        var easingFunction = new QuadraticEase();\n        easingFunction.setEasingMode(EasingFunction.EASINGMODE_EASEINOUT);\n        // Adjust the visual size based off of the size of the touch collision orb.\n        // Having the size perfectly match for hover gives a more accurate tell for when the user will start interacting with the target\n        // Sizes for other states are somewhat arbitrary, as they are based on what feels nice during an interaction\n        var hoverSizeVec = new Vector3(this._controllerPickRadius, this._controllerPickRadius, this._controllerPickRadius);\n        var touchSize = this._controllerPickRadius * (4 / 3);\n        var touchSizeVec = new Vector3(touchSize, touchSize, touchSize);\n        var hydrateTransitionSize = this._controllerPickRadius * (7 / 6);\n        var hydrateTransitionSizeVec = new Vector3(hydrateTransitionSize, hydrateTransitionSize, hydrateTransitionSize);\n        var touchHoverTransitionSize = this._controllerPickRadius * (4 / 5);\n        var touchHoverTransitionSizeVec = new Vector3(touchHoverTransitionSize, touchHoverTransitionSize, touchHoverTransitionSize);\n        var hoverTouchTransitionSize = this._controllerPickRadius * (3 / 2);\n        var hoverTouchTransitionSizeVec = new Vector3(hoverTouchTransitionSize, hoverTouchTransitionSize, hoverTouchTransitionSize);\n        var touchKeys = [\n            { frame: 0, value: hoverSizeVec },\n            { frame: 10, value: hoverTouchTransitionSizeVec },\n            { frame: 18, value: touchSizeVec },\n        ];\n        var releaseKeys = [\n            { frame: 0, value: touchSizeVec },\n            { frame: 10, value: touchHoverTransitionSizeVec },\n            { frame: 18, value: hoverSizeVec },\n        ];\n        var hydrateKeys = [\n            { frame: 0, value: Vector3.ZeroReadOnly },\n            { frame: 12, value: hydrateTransitionSizeVec },\n            { frame: 15, value: hoverSizeVec },\n        ];\n        var dehydrateKeys = [\n            { frame: 0, value: hoverSizeVec },\n            { frame: 10, value: Vector3.ZeroReadOnly },\n            { frame: 15, value: Vector3.ZeroReadOnly },\n        ];\n        var touchAction = new Animation(\"touch\", \"scaling\", 60, Animation.ANIMATIONTYPE_VECTOR3, Animation.ANIMATIONLOOPMODE_CONSTANT);\n        var releaseAction = new Animation(\"release\", \"scaling\", 60, Animation.ANIMATIONTYPE_VECTOR3, Animation.ANIMATIONLOOPMODE_CONSTANT);\n        var hydrateAction = new Animation(\"hydrate\", \"scaling\", 60, Animation.ANIMATIONTYPE_VECTOR3, Animation.ANIMATIONLOOPMODE_CONSTANT);\n        var dehydrateAction = new Animation(\"dehydrate\", \"scaling\", 60, Animation.ANIMATIONTYPE_VECTOR3, Animation.ANIMATIONLOOPMODE_CONSTANT);\n        touchAction.setEasingFunction(easingFunction);\n        releaseAction.setEasingFunction(easingFunction);\n        hydrateAction.setEasingFunction(easingFunction);\n        dehydrateAction.setEasingFunction(easingFunction);\n        touchAction.setKeys(touchKeys);\n        releaseAction.setKeys(releaseKeys);\n        hydrateAction.setKeys(hydrateKeys);\n        dehydrateAction.setKeys(dehydrateKeys);\n        var touchCollisionMeshFunction = function (isTouch) {\n            var action = isTouch ? touchAction : releaseAction;\n            meshCreationScene.beginDirectAnimation(touchCollisionMesh, [action], 0, 18, false, 1);\n        };\n        var hydrateCollisionMeshFunction = function (isHydration) {\n            var action = isHydration ? hydrateAction : dehydrateAction;\n            if (isHydration) {\n                touchCollisionMesh.isVisible = true;\n            }\n            meshCreationScene.beginDirectAnimation(touchCollisionMesh, [action], 0, 15, false, 1, function () {\n                if (!isHydration) {\n                    touchCollisionMesh.isVisible = false;\n                }\n            });\n        };\n        return { touchCollisionMesh: touchCollisionMesh, touchCollisionMeshFunction: touchCollisionMeshFunction, hydrateCollisionMeshFunction: hydrateCollisionMeshFunction };\n    };\n    WebXRNearInteraction.prototype._pickWithSphere = function (controllerData, radius, sceneToUse, predicate) {\n        var pickingInfo = new PickingInfo();\n        pickingInfo.distance = +Infinity;\n        if (controllerData.touchCollisionMesh && controllerData.xrController) {\n            var position = controllerData.touchCollisionMesh.position;\n            var sphere = BoundingSphere.CreateFromCenterAndRadius(position, radius);\n            for (var meshIndex = 0; meshIndex < sceneToUse.meshes.length; meshIndex++) {\n                var mesh = sceneToUse.meshes[meshIndex];\n                if (!predicate(mesh) || !this._controllerAvailablePredicate(mesh, controllerData.xrController.uniqueId)) {\n                    continue;\n                }\n                var result = WebXRNearInteraction.PickMeshWithSphere(mesh, sphere);\n                if (result && result.hit && result.distance < pickingInfo.distance) {\n                    pickingInfo.hit = result.hit;\n                    pickingInfo.pickedMesh = mesh;\n                    pickingInfo.pickedPoint = result.pickedPoint;\n                    pickingInfo.aimTransform = controllerData.xrController.pointer;\n                    pickingInfo.gripTransform = controllerData.xrController.grip || null;\n                    pickingInfo.originMesh = controllerData.touchCollisionMesh;\n                    pickingInfo.distance = result.distance;\n                }\n            }\n        }\n        return pickingInfo;\n    };\n    /**\n     * Picks a mesh with a sphere\n     * @param mesh the mesh to pick\n     * @param sphere picking sphere in world coordinates\n     * @param skipBoundingInfo a boolean indicating if we should skip the bounding info check\n     * @returns the picking info\n     */\n    WebXRNearInteraction.PickMeshWithSphere = function (mesh, sphere, skipBoundingInfo) {\n        if (skipBoundingInfo === void 0) { skipBoundingInfo = false; }\n        var subMeshes = mesh.subMeshes;\n        var pi = new PickingInfo();\n        var boundingInfo = mesh.getBoundingInfo();\n        if (!mesh._generatePointsArray()) {\n            return pi;\n        }\n        if (!mesh.subMeshes || !boundingInfo) {\n            return pi;\n        }\n        if (!skipBoundingInfo && !BoundingSphere.Intersects(boundingInfo.boundingSphere, sphere)) {\n            return pi;\n        }\n        var result = TmpVectors.Vector3[0];\n        var tmpVec = TmpVectors.Vector3[1];\n        var distance = +Infinity;\n        var tmp, tmpDistanceSphereToCenter, tmpDistanceSurfaceToCenter;\n        var center = TmpVectors.Vector3[2];\n        var worldToMesh = TmpVectors.Matrix[0];\n        worldToMesh.copyFrom(mesh.getWorldMatrix());\n        worldToMesh.invert();\n        Vector3.TransformCoordinatesToRef(sphere.center, worldToMesh, center);\n        for (var index = 0; index < subMeshes.length; index++) {\n            var subMesh = subMeshes[index];\n            subMesh.projectToRef(center, mesh._positions, mesh.getIndices(), tmpVec);\n            Vector3.TransformCoordinatesToRef(tmpVec, mesh.getWorldMatrix(), tmpVec);\n            tmp = Vector3.Distance(tmpVec, sphere.center);\n            // Check for finger inside of mesh\n            tmpDistanceSurfaceToCenter = Vector3.Distance(tmpVec, mesh.getAbsolutePosition());\n            tmpDistanceSphereToCenter = Vector3.Distance(sphere.center, mesh.getAbsolutePosition());\n            if (tmpDistanceSphereToCenter !== -1 && tmpDistanceSurfaceToCenter !== -1 && tmpDistanceSurfaceToCenter > tmpDistanceSphereToCenter) {\n                tmp = 0;\n                tmpVec.copyFrom(sphere.center);\n            }\n            if (tmp !== -1 && tmp < distance) {\n                distance = tmp;\n                result.copyFrom(tmpVec);\n            }\n        }\n        if (distance < sphere.radius) {\n            pi.hit = true;\n            pi.distance = distance;\n            pi.pickedMesh = mesh;\n            pi.pickedPoint = result.clone();\n        }\n        return pi;\n    };\n    WebXRNearInteraction._IdCounter = 200;\n    /**\n     * The module's name\n     */\n    WebXRNearInteraction.Name = WebXRFeatureName.NEAR_INTERACTION;\n    /**\n     * The (Babylon) version of this module.\n     * This is an integer representing the implementation version.\n     * This number does not correspond to the WebXR specs version\n     */\n    WebXRNearInteraction.Version = 1;\n    return WebXRNearInteraction;\n}(WebXRAbstractFeature));\nexport { WebXRNearInteraction };\n//Register the plugin\nWebXRFeaturesManager.AddWebXRFeature(WebXRNearInteraction.Name, function (xrSessionManager, options) {\n    return function () { return new WebXRNearInteraction(xrSessionManager, options); };\n}, WebXRNearInteraction.Version, true);\n//# sourceMappingURL=WebXRNearInteraction.js.map","import { __assign, __awaiter, __generator } from \"tslib\";\nimport { WebXRControllerComponent } from \"./webXRControllerComponent.js\";\nimport { Observable } from \"../../Misc/observable.js\";\nimport { Logger } from \"../../Misc/logger.js\";\nimport { SceneLoader } from \"../../Loading/sceneLoader.js\";\nimport { Quaternion, Vector3 } from \"../../Maths/math.vector.js\";\nimport { Mesh } from \"../../Meshes/mesh.js\";\n/**\n * An Abstract Motion controller\n * This class receives an xrInput and a profile layout and uses those to initialize the components\n * Each component has an observable to check for changes in value and state\n */\nvar WebXRAbstractMotionController = /** @class */ (function () {\n    /**\n     * constructs a new abstract motion controller\n     * @param scene the scene to which the model of the controller will be added\n     * @param layout The profile layout to load\n     * @param gamepadObject The gamepad object correlating to this controller\n     * @param handedness handedness (left/right/none) of this controller\n     * @param _doNotLoadControllerMesh set this flag to ignore the mesh loading\n     * @param _controllerCache a cache holding controller models already loaded in this session\n     */\n    function WebXRAbstractMotionController(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    scene, \n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    layout, \n    /**\n     * The gamepad object correlating to this controller\n     */\n    gamepadObject, \n    /**\n     * handedness (left/right/none) of this controller\n     */\n    handedness, \n    /**\n     * @hidden\n     */\n    _doNotLoadControllerMesh, _controllerCache) {\n        if (_doNotLoadControllerMesh === void 0) { _doNotLoadControllerMesh = false; }\n        var _this = this;\n        this.scene = scene;\n        this.layout = layout;\n        this.gamepadObject = gamepadObject;\n        this.handedness = handedness;\n        this._doNotLoadControllerMesh = _doNotLoadControllerMesh;\n        this._controllerCache = _controllerCache;\n        this._initComponent = function (id) {\n            if (!id) {\n                return;\n            }\n            var componentDef = _this.layout.components[id];\n            var type = componentDef.type;\n            var buttonIndex = componentDef.gamepadIndices.button;\n            // search for axes\n            var axes = [];\n            if (componentDef.gamepadIndices.xAxis !== undefined && componentDef.gamepadIndices.yAxis !== undefined) {\n                axes.push(componentDef.gamepadIndices.xAxis, componentDef.gamepadIndices.yAxis);\n            }\n            _this.components[id] = new WebXRControllerComponent(id, type, buttonIndex, axes);\n        };\n        this._modelReady = false;\n        /**\n         * A map of components (WebXRControllerComponent) in this motion controller\n         * Components have a ComponentType and can also have both button and axis definitions\n         */\n        this.components = {};\n        /**\n         * Disable the model's animation. Can be set at any time.\n         */\n        this.disableAnimation = false;\n        /**\n         * Observers registered here will be triggered when the model of this controller is done loading\n         */\n        this.onModelLoadedObservable = new Observable();\n        // initialize the components\n        if (layout.components) {\n            Object.keys(layout.components).forEach(this._initComponent);\n        }\n        // Model is loaded in WebXRInput\n    }\n    /**\n     * Dispose this controller, the model mesh and all its components\n     */\n    WebXRAbstractMotionController.prototype.dispose = function () {\n        var _this = this;\n        this.getComponentIds().forEach(function (id) { return _this.getComponent(id).dispose(); });\n        if (this.rootMesh) {\n            this.rootMesh.getChildren(undefined, true).forEach(function (node) {\n                node.setEnabled(false);\n            });\n            this.rootMesh.dispose(!!this._controllerCache, !this._controllerCache);\n        }\n    };\n    /**\n     * Returns all components of specific type\n     * @param type the type to search for\n     * @return an array of components with this type\n     */\n    WebXRAbstractMotionController.prototype.getAllComponentsOfType = function (type) {\n        var _this = this;\n        return this.getComponentIds()\n            .map(function (id) { return _this.components[id]; })\n            .filter(function (component) { return component.type === type; });\n    };\n    /**\n     * get a component based an its component id as defined in layout.components\n     * @param id the id of the component\n     * @returns the component correlates to the id or undefined if not found\n     */\n    WebXRAbstractMotionController.prototype.getComponent = function (id) {\n        return this.components[id];\n    };\n    /**\n     * Get the list of components available in this motion controller\n     * @returns an array of strings correlating to available components\n     */\n    WebXRAbstractMotionController.prototype.getComponentIds = function () {\n        return Object.keys(this.components);\n    };\n    /**\n     * Get the first component of specific type\n     * @param type type of component to find\n     * @return a controller component or null if not found\n     */\n    WebXRAbstractMotionController.prototype.getComponentOfType = function (type) {\n        return this.getAllComponentsOfType(type)[0] || null;\n    };\n    /**\n     * Get the main (Select) component of this controller as defined in the layout\n     * @returns the main component of this controller\n     */\n    WebXRAbstractMotionController.prototype.getMainComponent = function () {\n        return this.getComponent(this.layout.selectComponentId);\n    };\n    /**\n     * Loads the model correlating to this controller\n     * When the mesh is loaded, the onModelLoadedObservable will be triggered\n     * @returns A promise fulfilled with the result of the model loading\n     */\n    WebXRAbstractMotionController.prototype.loadModel = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var useGeneric, loadingParams;\n            var _this = this;\n            return __generator(this, function (_a) {\n                useGeneric = !this._getModelLoadingConstraints();\n                loadingParams = this._getGenericFilenameAndPath();\n                // Checking if GLB loader is present\n                if (useGeneric) {\n                    Logger.Warn(\"Falling back to generic models\");\n                }\n                else {\n                    loadingParams = this._getFilenameAndPath();\n                }\n                return [2 /*return*/, new Promise(function (resolve, reject) {\n                        var meshesLoaded = function (meshes) {\n                            if (useGeneric) {\n                                _this._getGenericParentMesh(meshes);\n                            }\n                            else {\n                                _this._setRootMesh(meshes);\n                            }\n                            _this._processLoadedModel(meshes);\n                            _this._modelReady = true;\n                            _this.onModelLoadedObservable.notifyObservers(_this);\n                            resolve(true);\n                        };\n                        if (_this._controllerCache) {\n                            // look for it in the cache\n                            var found = _this._controllerCache.filter(function (c) {\n                                return c.filename === loadingParams.filename && c.path === loadingParams.path;\n                            });\n                            if (found[0]) {\n                                found[0].meshes.forEach(function (mesh) { return mesh.setEnabled(true); });\n                                meshesLoaded(found[0].meshes);\n                                return;\n                                // found, don't continue to load\n                            }\n                        }\n                        SceneLoader.ImportMesh(\"\", loadingParams.path, loadingParams.filename, _this.scene, function (meshes) {\n                            if (_this._controllerCache) {\n                                _this._controllerCache.push(__assign(__assign({}, loadingParams), { meshes: meshes }));\n                            }\n                            meshesLoaded(meshes);\n                        }, null, function (_scene, message) {\n                            Logger.Log(message);\n                            Logger.Warn(\"Failed to retrieve controller model of type \".concat(_this.profileId, \" from the remote server: \").concat(loadingParams.path).concat(loadingParams.filename));\n                            reject(message);\n                        });\n                    })];\n            });\n        });\n    };\n    /**\n     * Update this model using the current XRFrame\n     * @param xrFrame the current xr frame to use and update the model\n     */\n    WebXRAbstractMotionController.prototype.updateFromXRFrame = function (xrFrame) {\n        var _this = this;\n        this.getComponentIds().forEach(function (id) { return _this.getComponent(id).update(_this.gamepadObject); });\n        this.updateModel(xrFrame);\n    };\n    Object.defineProperty(WebXRAbstractMotionController.prototype, \"handness\", {\n        /**\n         * Backwards compatibility due to a deeply-integrated typo\n         */\n        get: function () {\n            return this.handedness;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Pulse (vibrate) this controller\n     * If the controller does not support pulses, this function will fail silently and return Promise<false> directly after called\n     * Consecutive calls to this function will cancel the last pulse call\n     *\n     * @param value the strength of the pulse in 0.0...1.0 range\n     * @param duration Duration of the pulse in milliseconds\n     * @param hapticActuatorIndex optional index of actuator (will usually be 0)\n     * @returns a promise that will send true when the pulse has ended and false if the device doesn't support pulse or an error accrued\n     */\n    WebXRAbstractMotionController.prototype.pulse = function (value, duration, hapticActuatorIndex) {\n        if (hapticActuatorIndex === void 0) { hapticActuatorIndex = 0; }\n        if (this.gamepadObject.hapticActuators && this.gamepadObject.hapticActuators[hapticActuatorIndex]) {\n            return this.gamepadObject.hapticActuators[hapticActuatorIndex].pulse(value, duration);\n        }\n        else {\n            return Promise.resolve(false);\n        }\n    };\n    // Look through all children recursively. This will return null if no mesh exists with the given name.\n    WebXRAbstractMotionController.prototype._getChildByName = function (node, name) {\n        return node.getChildren(function (n) { return n.name === name; }, false)[0];\n    };\n    // Look through only immediate children. This will return null if no mesh exists with the given name.\n    WebXRAbstractMotionController.prototype._getImmediateChildByName = function (node, name) {\n        return node.getChildren(function (n) { return n.name == name; }, true)[0];\n    };\n    /**\n     * Moves the axis on the controller mesh based on its current state\n     * @param axisMap\n     * @param axisValue the value of the axis which determines the meshes new position\n     * @param fixValueCoordinates\n     * @hidden\n     */\n    WebXRAbstractMotionController.prototype._lerpTransform = function (axisMap, axisValue, fixValueCoordinates) {\n        if (!axisMap.minMesh || !axisMap.maxMesh || !axisMap.valueMesh) {\n            return;\n        }\n        if (!axisMap.minMesh.rotationQuaternion || !axisMap.maxMesh.rotationQuaternion || !axisMap.valueMesh.rotationQuaternion) {\n            return;\n        }\n        // Convert from gamepad value range (-1 to +1) to lerp range (0 to 1)\n        var lerpValue = fixValueCoordinates ? axisValue * 0.5 + 0.5 : axisValue;\n        Quaternion.SlerpToRef(axisMap.minMesh.rotationQuaternion, axisMap.maxMesh.rotationQuaternion, lerpValue, axisMap.valueMesh.rotationQuaternion);\n        Vector3.LerpToRef(axisMap.minMesh.position, axisMap.maxMesh.position, lerpValue, axisMap.valueMesh.position);\n    };\n    /**\n     * Update the model itself with the current frame data\n     * @param xrFrame the frame to use for updating the model mesh\n     */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    WebXRAbstractMotionController.prototype.updateModel = function (xrFrame) {\n        if (!this._modelReady) {\n            return;\n        }\n        this._updateModel(xrFrame);\n    };\n    WebXRAbstractMotionController.prototype._getGenericFilenameAndPath = function () {\n        return {\n            filename: \"generic.babylon\",\n            path: \"https://controllers.babylonjs.com/generic/\",\n        };\n    };\n    WebXRAbstractMotionController.prototype._getGenericParentMesh = function (meshes) {\n        var _this = this;\n        this.rootMesh = new Mesh(this.profileId + \" \" + this.handedness, this.scene);\n        meshes.forEach(function (mesh) {\n            if (!mesh.parent) {\n                mesh.isPickable = false;\n                mesh.setParent(_this.rootMesh);\n            }\n        });\n        this.rootMesh.rotationQuaternion = Quaternion.FromEulerAngles(0, Math.PI, 0);\n    };\n    return WebXRAbstractMotionController;\n}());\nexport { WebXRAbstractMotionController };\n//# sourceMappingURL=webXRAbstractMotionController.js.map","import { Observable } from \"../../Misc/observable.js\";\n/**\n * This class represents a single component (for example button or thumbstick) of a motion controller\n */\nvar WebXRControllerComponent = /** @class */ (function () {\n    /**\n     * Creates a new component for a motion controller.\n     * It is created by the motion controller itself\n     *\n     * @param id the id of this component\n     * @param type the type of the component\n     * @param _buttonIndex index in the buttons array of the gamepad\n     * @param _axesIndices indices of the values in the axes array of the gamepad\n     */\n    function WebXRControllerComponent(\n    /**\n     * the id of this component\n     */\n    id, \n    /**\n     * the type of the component\n     */\n    type, _buttonIndex, _axesIndices) {\n        if (_buttonIndex === void 0) { _buttonIndex = -1; }\n        if (_axesIndices === void 0) { _axesIndices = []; }\n        this.id = id;\n        this.type = type;\n        this._buttonIndex = _buttonIndex;\n        this._axesIndices = _axesIndices;\n        this._axes = {\n            x: 0,\n            y: 0,\n        };\n        this._changes = {};\n        this._currentValue = 0;\n        this._hasChanges = false;\n        this._pressed = false;\n        this._touched = false;\n        /**\n         * If axes are available for this component (like a touchpad or thumbstick) the observers will be notified when\n         * the axes data changes\n         */\n        this.onAxisValueChangedObservable = new Observable();\n        /**\n         * Observers registered here will be triggered when the state of a button changes\n         * State change is either pressed / touched / value\n         */\n        this.onButtonStateChangedObservable = new Observable();\n    }\n    Object.defineProperty(WebXRControllerComponent.prototype, \"axes\", {\n        /**\n         * The current axes data. If this component has no axes it will still return an object { x: 0, y: 0 }\n         */\n        get: function () {\n            return this._axes;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebXRControllerComponent.prototype, \"changes\", {\n        /**\n         * Get the changes. Elements will be populated only if they changed with their previous and current value\n         */\n        get: function () {\n            return this._changes;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebXRControllerComponent.prototype, \"hasChanges\", {\n        /**\n         * Return whether or not the component changed the last frame\n         */\n        get: function () {\n            return this._hasChanges;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebXRControllerComponent.prototype, \"pressed\", {\n        /**\n         * is the button currently pressed\n         */\n        get: function () {\n            return this._pressed;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebXRControllerComponent.prototype, \"touched\", {\n        /**\n         * is the button currently touched\n         */\n        get: function () {\n            return this._touched;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebXRControllerComponent.prototype, \"value\", {\n        /**\n         * Get the current value of this component\n         */\n        get: function () {\n            return this._currentValue;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Dispose this component\n     */\n    WebXRControllerComponent.prototype.dispose = function () {\n        this.onAxisValueChangedObservable.clear();\n        this.onButtonStateChangedObservable.clear();\n    };\n    /**\n     * Are there axes correlating to this component\n     * @return true is axes data is available\n     */\n    WebXRControllerComponent.prototype.isAxes = function () {\n        return this._axesIndices.length !== 0;\n    };\n    /**\n     * Is this component a button (hence - pressable)\n     * @returns true if can be pressed\n     */\n    WebXRControllerComponent.prototype.isButton = function () {\n        return this._buttonIndex !== -1;\n    };\n    /**\n     * update this component using the gamepad object it is in. Called on every frame\n     * @param nativeController the native gamepad controller object\n     */\n    WebXRControllerComponent.prototype.update = function (nativeController) {\n        var buttonUpdated = false;\n        var axesUpdate = false;\n        this._hasChanges = false;\n        this._changes = {};\n        if (this.isButton()) {\n            var button = nativeController.buttons[this._buttonIndex];\n            // defensive, in case a profile was forced\n            if (!button) {\n                return;\n            }\n            if (this._currentValue !== button.value) {\n                this.changes.value = {\n                    current: button.value,\n                    previous: this._currentValue,\n                };\n                buttonUpdated = true;\n                this._currentValue = button.value;\n            }\n            if (this._touched !== button.touched) {\n                this.changes.touched = {\n                    current: button.touched,\n                    previous: this._touched,\n                };\n                buttonUpdated = true;\n                this._touched = button.touched;\n            }\n            if (this._pressed !== button.pressed) {\n                this.changes.pressed = {\n                    current: button.pressed,\n                    previous: this._pressed,\n                };\n                buttonUpdated = true;\n                this._pressed = button.pressed;\n            }\n        }\n        if (this.isAxes()) {\n            if (this._axes.x !== nativeController.axes[this._axesIndices[0]]) {\n                this.changes.axes = {\n                    current: {\n                        x: nativeController.axes[this._axesIndices[0]],\n                        y: this._axes.y,\n                    },\n                    previous: {\n                        x: this._axes.x,\n                        y: this._axes.y,\n                    },\n                };\n                this._axes.x = nativeController.axes[this._axesIndices[0]];\n                axesUpdate = true;\n            }\n            if (this._axes.y !== nativeController.axes[this._axesIndices[1]]) {\n                if (this.changes.axes) {\n                    this.changes.axes.current.y = nativeController.axes[this._axesIndices[1]];\n                }\n                else {\n                    this.changes.axes = {\n                        current: {\n                            x: this._axes.x,\n                            y: nativeController.axes[this._axesIndices[1]],\n                        },\n                        previous: {\n                            x: this._axes.x,\n                            y: this._axes.y,\n                        },\n                    };\n                }\n                this._axes.y = nativeController.axes[this._axesIndices[1]];\n                axesUpdate = true;\n            }\n        }\n        if (buttonUpdated) {\n            this._hasChanges = true;\n            this.onButtonStateChangedObservable.notifyObservers(this);\n        }\n        if (axesUpdate) {\n            this._hasChanges = true;\n            this.onAxisValueChangedObservable.notifyObservers(this._axes);\n        }\n    };\n    /**\n     * button component type\n     */\n    WebXRControllerComponent.BUTTON_TYPE = \"button\";\n    /**\n     * squeeze component type\n     */\n    WebXRControllerComponent.SQUEEZE_TYPE = \"squeeze\";\n    /**\n     * Thumbstick component type\n     */\n    WebXRControllerComponent.THUMBSTICK_TYPE = \"thumbstick\";\n    /**\n     * Touchpad component type\n     */\n    WebXRControllerComponent.TOUCHPAD_TYPE = \"touchpad\";\n    /**\n     * trigger component type\n     */\n    WebXRControllerComponent.TRIGGER_TYPE = \"trigger\";\n    return WebXRControllerComponent;\n}());\nexport { WebXRControllerComponent };\n//# sourceMappingURL=webXRControllerComponent.js.map","import { __extends } from \"tslib\";\nimport { WebXRAbstractMotionController } from \"./webXRAbstractMotionController.js\";\nimport { Mesh } from \"../../Meshes/mesh.js\";\nimport { Quaternion } from \"../../Maths/math.vector.js\";\n/**\n * A generic trigger-only motion controller for WebXR\n */\nvar WebXRGenericTriggerMotionController = /** @class */ (function (_super) {\n    __extends(WebXRGenericTriggerMotionController, _super);\n    function WebXRGenericTriggerMotionController(scene, gamepadObject, handedness) {\n        var _this = _super.call(this, scene, GenericTriggerLayout[handedness], gamepadObject, handedness) || this;\n        _this.profileId = WebXRGenericTriggerMotionController.ProfileId;\n        return _this;\n    }\n    WebXRGenericTriggerMotionController.prototype._getFilenameAndPath = function () {\n        return {\n            filename: \"generic.babylon\",\n            path: \"https://controllers.babylonjs.com/generic/\",\n        };\n    };\n    WebXRGenericTriggerMotionController.prototype._getModelLoadingConstraints = function () {\n        return true;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    WebXRGenericTriggerMotionController.prototype._processLoadedModel = function (meshes) {\n        // nothing to do\n    };\n    WebXRGenericTriggerMotionController.prototype._setRootMesh = function (meshes) {\n        var _this = this;\n        this.rootMesh = new Mesh(this.profileId + \" \" + this.handedness, this.scene);\n        meshes.forEach(function (mesh) {\n            mesh.isPickable = false;\n            if (!mesh.parent) {\n                mesh.setParent(_this.rootMesh);\n            }\n        });\n        this.rootMesh.rotationQuaternion = Quaternion.FromEulerAngles(0, Math.PI, 0);\n    };\n    WebXRGenericTriggerMotionController.prototype._updateModel = function () {\n        // no-op\n    };\n    /**\n     * Static version of the profile id of this controller\n     */\n    WebXRGenericTriggerMotionController.ProfileId = \"generic-trigger\";\n    return WebXRGenericTriggerMotionController;\n}(WebXRAbstractMotionController));\nexport { WebXRGenericTriggerMotionController };\n// https://github.com/immersive-web/webxr-input-profiles/blob/master/packages/registry/profiles/generic/generic-trigger-touchpad-thumbstick.json\nvar GenericTriggerLayout = {\n    left: {\n        selectComponentId: \"xr-standard-trigger\",\n        components: {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            \"xr-standard-trigger\": {\n                type: \"trigger\",\n                gamepadIndices: {\n                    button: 0,\n                },\n                rootNodeName: \"xr_standard_trigger\",\n                visualResponses: {},\n            },\n        },\n        gamepadMapping: \"xr-standard\",\n        rootNodeName: \"generic-trigger-left\",\n        assetPath: \"left.glb\",\n    },\n    right: {\n        selectComponentId: \"xr-standard-trigger\",\n        components: {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            \"xr-standard-trigger\": {\n                type: \"trigger\",\n                gamepadIndices: {\n                    button: 0,\n                },\n                rootNodeName: \"xr_standard_trigger\",\n                visualResponses: {},\n            },\n        },\n        gamepadMapping: \"xr-standard\",\n        rootNodeName: \"generic-trigger-right\",\n        assetPath: \"right.glb\",\n    },\n    none: {\n        selectComponentId: \"xr-standard-trigger\",\n        components: {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            \"xr-standard-trigger\": {\n                type: \"trigger\",\n                gamepadIndices: {\n                    button: 0,\n                },\n                rootNodeName: \"xr_standard_trigger\",\n                visualResponses: {},\n            },\n        },\n        gamepadMapping: \"xr-standard\",\n        rootNodeName: \"generic-trigger-none\",\n        assetPath: \"none.glb\",\n    },\n};\n//# sourceMappingURL=webXRGenericMotionController.js.map","import { WebXRGenericTriggerMotionController } from \"./webXRGenericMotionController.js\";\nimport { Tools } from \"../../Misc/tools.js\";\nimport { WebXRProfiledMotionController } from \"./webXRProfiledMotionController.js\";\n/**\n * The MotionController Manager manages all registered motion controllers and loads the right one when needed.\n *\n * When this repository is complete: https://github.com/immersive-web/webxr-input-profiles/tree/master/packages/assets\n * it should be replaced with auto-loaded controllers.\n *\n * When using a model try to stay as generic as possible. Eventually there will be no need in any of the controller classes\n */\nvar controllerCache = [];\n/**\n * Motion controller manager is managing the different webxr profiles and makes sure the right\n * controller is being loaded.\n */\nvar WebXRMotionControllerManager = /** @class */ (function () {\n    function WebXRMotionControllerManager() {\n    }\n    /**\n     * Clear the cache used for profile loading and reload when requested again\n     */\n    WebXRMotionControllerManager.ClearProfilesCache = function () {\n        this._ProfilesList = null;\n        this._ProfileLoadingPromises = {};\n    };\n    /**\n     * Register the default fallbacks.\n     * This function is called automatically when this file is imported.\n     */\n    WebXRMotionControllerManager.DefaultFallbacks = function () {\n        this.RegisterFallbacksForProfileId(\"google-daydream\", [\"generic-touchpad\"]);\n        this.RegisterFallbacksForProfileId(\"htc-vive-focus\", [\"generic-trigger-touchpad\"]);\n        this.RegisterFallbacksForProfileId(\"htc-vive\", [\"generic-trigger-squeeze-touchpad\"]);\n        this.RegisterFallbacksForProfileId(\"magicleap-one\", [\"generic-trigger-squeeze-touchpad\"]);\n        this.RegisterFallbacksForProfileId(\"windows-mixed-reality\", [\"generic-trigger-squeeze-touchpad-thumbstick\"]);\n        this.RegisterFallbacksForProfileId(\"microsoft-mixed-reality\", [\"windows-mixed-reality\", \"generic-trigger-squeeze-touchpad-thumbstick\"]);\n        this.RegisterFallbacksForProfileId(\"oculus-go\", [\"generic-trigger-touchpad\"]);\n        this.RegisterFallbacksForProfileId(\"oculus-touch-v2\", [\"oculus-touch\", \"generic-trigger-squeeze-thumbstick\"]);\n        this.RegisterFallbacksForProfileId(\"oculus-touch\", [\"generic-trigger-squeeze-thumbstick\"]);\n        this.RegisterFallbacksForProfileId(\"samsung-gearvr\", [\"windows-mixed-reality\", \"generic-trigger-squeeze-touchpad-thumbstick\"]);\n        this.RegisterFallbacksForProfileId(\"samsung-odyssey\", [\"generic-touchpad\"]);\n        this.RegisterFallbacksForProfileId(\"valve-index\", [\"generic-trigger-squeeze-touchpad-thumbstick\"]);\n        this.RegisterFallbacksForProfileId(\"generic-hand-select\", [\"generic-trigger\"]);\n    };\n    /**\n     * Find a fallback profile if the profile was not found. There are a few predefined generic profiles.\n     * @param profileId the profile to which a fallback needs to be found\n     * @return an array with corresponding fallback profiles\n     */\n    WebXRMotionControllerManager.FindFallbackWithProfileId = function (profileId) {\n        var returnArray = this._Fallbacks[profileId] || [];\n        returnArray.unshift(profileId);\n        return returnArray;\n    };\n    /**\n     * When acquiring a new xrInput object (usually by the WebXRInput class), match it with the correct profile.\n     * The order of search:\n     *\n     * 1) Iterate the profiles array of the xr input and try finding a corresponding motion controller\n     * 2) (If not found) search in the gamepad id and try using it (legacy versions only)\n     * 3) search for registered fallbacks (should be redundant, nonetheless it makes sense to check)\n     * 4) return the generic trigger controller if none were found\n     *\n     * @param xrInput the xrInput to which a new controller is initialized\n     * @param scene the scene to which the model will be added\n     * @param forceProfile force a certain profile for this controller\n     * @return A promise that fulfils with the motion controller class for this profile id or the generic standard class if none was found\n     */\n    WebXRMotionControllerManager.GetMotionControllerWithXRInput = function (xrInput, scene, forceProfile) {\n        var _this = this;\n        var profileArray = [];\n        if (forceProfile) {\n            profileArray.push(forceProfile);\n        }\n        profileArray.push.apply(profileArray, (xrInput.profiles || []));\n        // emulator support\n        if (profileArray.length && !profileArray[0]) {\n            // remove the first \"undefined\" that the emulator is adding\n            profileArray.pop();\n        }\n        // legacy support - try using the gamepad id\n        if (xrInput.gamepad && xrInput.gamepad.id) {\n            switch (xrInput.gamepad.id) {\n                case xrInput.gamepad.id.match(/oculus touch/gi) ? xrInput.gamepad.id : undefined:\n                    // oculus in gamepad id\n                    profileArray.push(\"oculus-touch-v2\");\n                    break;\n            }\n        }\n        // make sure microsoft/windows mixed reality works correctly\n        var windowsMRIdx = profileArray.indexOf(\"windows-mixed-reality\");\n        if (windowsMRIdx !== -1) {\n            profileArray.splice(windowsMRIdx, 0, \"microsoft-mixed-reality\");\n        }\n        if (!profileArray.length) {\n            profileArray.push(\"generic-trigger\");\n        }\n        if (this.UseOnlineRepository) {\n            var firstFunction = this.PrioritizeOnlineRepository ? this._LoadProfileFromRepository : this._LoadProfilesFromAvailableControllers;\n            var secondFunction_1 = this.PrioritizeOnlineRepository ? this._LoadProfilesFromAvailableControllers : this._LoadProfileFromRepository;\n            return firstFunction.call(this, profileArray, xrInput, scene).catch(function () {\n                return secondFunction_1.call(_this, profileArray, xrInput, scene);\n            });\n        }\n        else {\n            // use only available functions\n            return this._LoadProfilesFromAvailableControllers(profileArray, xrInput, scene);\n        }\n    };\n    /**\n     * Register a new controller based on its profile. This function will be called by the controller classes themselves.\n     *\n     * If you are missing a profile, make sure it is imported in your source, otherwise it will not register.\n     *\n     * @param type the profile type to register\n     * @param constructFunction the function to be called when loading this profile\n     */\n    WebXRMotionControllerManager.RegisterController = function (type, constructFunction) {\n        this._AvailableControllers[type] = constructFunction;\n    };\n    /**\n     * Register a fallback to a specific profile.\n     * @param profileId the profileId that will receive the fallbacks\n     * @param fallbacks A list of fallback profiles\n     */\n    WebXRMotionControllerManager.RegisterFallbacksForProfileId = function (profileId, fallbacks) {\n        var _a;\n        if (this._Fallbacks[profileId]) {\n            (_a = this._Fallbacks[profileId]).push.apply(_a, fallbacks);\n        }\n        else {\n            this._Fallbacks[profileId] = fallbacks;\n        }\n    };\n    /**\n     * Will update the list of profiles available in the repository\n     * @return a promise that resolves to a map of profiles available online\n     */\n    WebXRMotionControllerManager.UpdateProfilesList = function () {\n        this._ProfilesList = Tools.LoadFileAsync(this.BaseRepositoryUrl + \"/profiles/profilesList.json\", false).then(function (data) {\n            return JSON.parse(data.toString());\n        });\n        return this._ProfilesList;\n    };\n    /**\n     * Clear the controller's cache (usually happens at the end of a session)\n     */\n    WebXRMotionControllerManager.ClearControllerCache = function () {\n        controllerCache.forEach(function (cacheItem) {\n            cacheItem.meshes.forEach(function (mesh) {\n                mesh.dispose(false, true);\n            });\n        });\n        controllerCache.length = 0;\n    };\n    WebXRMotionControllerManager._LoadProfileFromRepository = function (profileArray, xrInput, scene) {\n        var _this = this;\n        return Promise.resolve()\n            .then(function () {\n            if (!_this._ProfilesList) {\n                return _this.UpdateProfilesList();\n            }\n            else {\n                return _this._ProfilesList;\n            }\n        })\n            .then(function (profilesList) {\n            // load the right profile\n            for (var i = 0; i < profileArray.length; ++i) {\n                // defensive\n                if (!profileArray[i]) {\n                    continue;\n                }\n                if (profilesList[profileArray[i]]) {\n                    return profileArray[i];\n                }\n            }\n            throw new Error(\"neither controller \".concat(profileArray[0], \" nor all fallbacks were found in the repository,\"));\n        })\n            .then(function (profileToLoad) {\n            // load the profile\n            if (!_this._ProfileLoadingPromises[profileToLoad]) {\n                _this._ProfileLoadingPromises[profileToLoad] = Tools.LoadFileAsync(\"\".concat(_this.BaseRepositoryUrl, \"/profiles/\").concat(profileToLoad, \"/profile.json\"), false).then(function (data) { return JSON.parse(data); });\n            }\n            return _this._ProfileLoadingPromises[profileToLoad];\n        })\n            .then(function (profile) {\n            return new WebXRProfiledMotionController(scene, xrInput, profile, _this.BaseRepositoryUrl, _this.DisableControllerCache ? undefined : controllerCache);\n        });\n    };\n    WebXRMotionControllerManager._LoadProfilesFromAvailableControllers = function (profileArray, xrInput, scene) {\n        // check fallbacks\n        for (var i = 0; i < profileArray.length; ++i) {\n            // defensive\n            if (!profileArray[i]) {\n                continue;\n            }\n            var fallbacks = this.FindFallbackWithProfileId(profileArray[i]);\n            for (var j = 0; j < fallbacks.length; ++j) {\n                var constructionFunction = this._AvailableControllers[fallbacks[j]];\n                if (constructionFunction) {\n                    return Promise.resolve(constructionFunction(xrInput, scene));\n                }\n            }\n        }\n        throw new Error(\"no controller requested was found in the available controllers list\");\n    };\n    WebXRMotionControllerManager._AvailableControllers = {};\n    WebXRMotionControllerManager._Fallbacks = {};\n    // cache for loading\n    WebXRMotionControllerManager._ProfileLoadingPromises = {};\n    /**\n     * The base URL of the online controller repository. Can be changed at any time.\n     */\n    WebXRMotionControllerManager.BaseRepositoryUrl = \"https://immersive-web.github.io/webxr-input-profiles/packages/viewer/dist\";\n    /**\n     * Which repository gets priority - local or online\n     */\n    WebXRMotionControllerManager.PrioritizeOnlineRepository = true;\n    /**\n     * Use the online repository, or use only locally-defined controllers\n     */\n    WebXRMotionControllerManager.UseOnlineRepository = true;\n    /**\n     * Disable the controller cache and load the models each time a new WebXRProfileMotionController is loaded.\n     * Defaults to true.\n     */\n    WebXRMotionControllerManager.DisableControllerCache = true;\n    return WebXRMotionControllerManager;\n}());\nexport { WebXRMotionControllerManager };\n// register the generic profile(s) here so we will at least have them\nWebXRMotionControllerManager.RegisterController(WebXRGenericTriggerMotionController.ProfileId, function (xrInput, scene) {\n    return new WebXRGenericTriggerMotionController(scene, xrInput.gamepad, xrInput.handedness);\n});\n// register fallbacks\nWebXRMotionControllerManager.DefaultFallbacks();\n//# sourceMappingURL=webXRMotionControllerManager.js.map","import { __extends } from \"tslib\";\nimport { WebXRAbstractMotionController } from \"./webXRAbstractMotionController.js\";\nimport { SceneLoader } from \"../../Loading/sceneLoader.js\";\nimport { Mesh } from \"../../Meshes/mesh.js\";\nimport { Axis, Space } from \"../../Maths/math.axis.js\";\nimport { Color3 } from \"../../Maths/math.color.js\";\nimport { WebXRControllerComponent } from \"./webXRControllerComponent.js\";\nimport { CreateSphere } from \"../../Meshes/Builders/sphereBuilder.js\";\nimport { StandardMaterial } from \"../../Materials/standardMaterial.js\";\nimport { Logger } from \"../../Misc/logger.js\";\n/**\n * A profiled motion controller has its profile loaded from an online repository.\n * The class is responsible of loading the model, mapping the keys and enabling model-animations\n */\nvar WebXRProfiledMotionController = /** @class */ (function (_super) {\n    __extends(WebXRProfiledMotionController, _super);\n    function WebXRProfiledMotionController(scene, xrInput, _profile, _repositoryUrl, \n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    controllerCache) {\n        var _this = _super.call(this, scene, _profile.layouts[xrInput.handedness || \"none\"], xrInput.gamepad, xrInput.handedness, undefined, controllerCache) || this;\n        _this._repositoryUrl = _repositoryUrl;\n        _this.controllerCache = controllerCache;\n        _this._buttonMeshMapping = {};\n        _this._touchDots = {};\n        _this.profileId = _profile.profileId;\n        return _this;\n    }\n    WebXRProfiledMotionController.prototype.dispose = function () {\n        var _this = this;\n        _super.prototype.dispose.call(this);\n        if (!this.controllerCache) {\n            Object.keys(this._touchDots).forEach(function (visResKey) {\n                _this._touchDots[visResKey].dispose();\n            });\n        }\n    };\n    WebXRProfiledMotionController.prototype._getFilenameAndPath = function () {\n        return {\n            filename: this.layout.assetPath,\n            path: \"\".concat(this._repositoryUrl, \"/profiles/\").concat(this.profileId, \"/\"),\n        };\n    };\n    WebXRProfiledMotionController.prototype._getModelLoadingConstraints = function () {\n        var glbLoaded = SceneLoader.IsPluginForExtensionAvailable(\".glb\");\n        if (!glbLoaded) {\n            Logger.Warn(\"glTF / glb loader was not registered, using generic controller instead\");\n        }\n        return glbLoaded;\n    };\n    WebXRProfiledMotionController.prototype._processLoadedModel = function (_meshes) {\n        var _this = this;\n        this.getComponentIds().forEach(function (type) {\n            var componentInLayout = _this.layout.components[type];\n            _this._buttonMeshMapping[type] = {\n                mainMesh: _this._getChildByName(_this.rootMesh, componentInLayout.rootNodeName),\n                states: {},\n            };\n            Object.keys(componentInLayout.visualResponses).forEach(function (visualResponseKey) {\n                var visResponse = componentInLayout.visualResponses[visualResponseKey];\n                if (visResponse.valueNodeProperty === \"transform\") {\n                    _this._buttonMeshMapping[type].states[visualResponseKey] = {\n                        valueMesh: _this._getChildByName(_this.rootMesh, visResponse.valueNodeName),\n                        minMesh: _this._getChildByName(_this.rootMesh, visResponse.minNodeName),\n                        maxMesh: _this._getChildByName(_this.rootMesh, visResponse.maxNodeName),\n                    };\n                }\n                else {\n                    // visibility, usually for touchpads\n                    var nameOfMesh = componentInLayout.type === WebXRControllerComponent.TOUCHPAD_TYPE && componentInLayout.touchPointNodeName\n                        ? componentInLayout.touchPointNodeName\n                        : visResponse.valueNodeName;\n                    _this._buttonMeshMapping[type].states[visualResponseKey] = {\n                        valueMesh: _this._getChildByName(_this.rootMesh, nameOfMesh),\n                    };\n                    if (componentInLayout.type === WebXRControllerComponent.TOUCHPAD_TYPE && !_this._touchDots[visualResponseKey]) {\n                        var dot = CreateSphere(visualResponseKey + \"dot\", {\n                            diameter: 0.0015,\n                            segments: 8,\n                        }, _this.scene);\n                        dot.material = new StandardMaterial(visualResponseKey + \"mat\", _this.scene);\n                        dot.material.diffuseColor = Color3.Red();\n                        dot.parent = _this._buttonMeshMapping[type].states[visualResponseKey].valueMesh || null;\n                        dot.isVisible = false;\n                        _this._touchDots[visualResponseKey] = dot;\n                    }\n                }\n            });\n        });\n    };\n    WebXRProfiledMotionController.prototype._setRootMesh = function (meshes) {\n        this.rootMesh = new Mesh(this.profileId + \"-\" + this.handedness, this.scene);\n        this.rootMesh.isPickable = false;\n        var rootMesh;\n        // Find the root node in the loaded glTF scene, and attach it as a child of 'parentMesh'\n        for (var i = 0; i < meshes.length; i++) {\n            var mesh = meshes[i];\n            mesh.isPickable = false;\n            if (!mesh.parent) {\n                // Handle root node, attach to the new parentMesh\n                rootMesh = mesh;\n            }\n        }\n        if (rootMesh) {\n            rootMesh.setParent(this.rootMesh);\n        }\n        if (!this.scene.useRightHandedSystem) {\n            this.rootMesh.rotate(Axis.Y, Math.PI, Space.WORLD);\n        }\n    };\n    WebXRProfiledMotionController.prototype._updateModel = function (_xrFrame) {\n        var _this = this;\n        if (this.disableAnimation) {\n            return;\n        }\n        this.getComponentIds().forEach(function (id) {\n            var component = _this.getComponent(id);\n            if (!component.hasChanges) {\n                return;\n            }\n            var meshes = _this._buttonMeshMapping[id];\n            var componentInLayout = _this.layout.components[id];\n            Object.keys(componentInLayout.visualResponses).forEach(function (visualResponseKey) {\n                var visResponse = componentInLayout.visualResponses[visualResponseKey];\n                var value = component.value;\n                if (visResponse.componentProperty === \"xAxis\") {\n                    value = component.axes.x;\n                }\n                else if (visResponse.componentProperty === \"yAxis\") {\n                    value = component.axes.y;\n                }\n                if (visResponse.valueNodeProperty === \"transform\") {\n                    _this._lerpTransform(meshes.states[visualResponseKey], value, visResponse.componentProperty !== \"button\");\n                }\n                else {\n                    // visibility\n                    var valueMesh = meshes.states[visualResponseKey].valueMesh;\n                    if (valueMesh) {\n                        valueMesh.isVisible = component.touched || component.pressed;\n                    }\n                    if (_this._touchDots[visualResponseKey]) {\n                        _this._touchDots[visualResponseKey].isVisible = component.touched || component.pressed;\n                    }\n                }\n            });\n        });\n    };\n    return WebXRProfiledMotionController;\n}(WebXRAbstractMotionController));\nexport { WebXRProfiledMotionController };\n//# sourceMappingURL=webXRProfiledMotionController.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { WebXRLayerWrapper } from \"../webXRLayerWrapper.js\";\nimport { WebXRLayerRenderTargetTextureProvider } from \"../webXRRenderTargetTextureProvider.js\";\n/**\n * Wraps XRWebGLLayer's created by Babylon Native.\n * @hidden\n */\nvar NativeXRLayerWrapper = /** @class */ (function (_super) {\n    __extends(NativeXRLayerWrapper, _super);\n    function NativeXRLayerWrapper(layer) {\n        var _this = _super.call(this, function () { return layer.framebufferWidth; }, function () { return layer.framebufferHeight; }, layer, \"XRWebGLLayer\", function (sessionManager) { return new NativeXRLayerRenderTargetTextureProvider(sessionManager, _this); }) || this;\n        _this.layer = layer;\n        return _this;\n    }\n    return NativeXRLayerWrapper;\n}(WebXRLayerWrapper));\nexport { NativeXRLayerWrapper };\n/**\n * Provides render target textures for layers created by Babylon Native.\n * @hidden\n */\nvar NativeXRLayerRenderTargetTextureProvider = /** @class */ (function (_super) {\n    __extends(NativeXRLayerRenderTargetTextureProvider, _super);\n    function NativeXRLayerRenderTargetTextureProvider(sessionManager, layerWrapper) {\n        var _this = _super.call(this, sessionManager.scene, layerWrapper) || this;\n        _this.layerWrapper = layerWrapper;\n        _this._nativeRTTProvider = navigator.xr.getNativeRenderTargetProvider(sessionManager.session, _this._createRenderTargetTexture.bind(_this), _this._destroyRenderTargetTexture.bind(_this));\n        _this._nativeLayer = layerWrapper.layer;\n        return _this;\n    }\n    NativeXRLayerRenderTargetTextureProvider.prototype.trySetViewportForView = function (viewport) {\n        viewport.x = 0;\n        viewport.y = 0;\n        viewport.width = 1;\n        viewport.height = 1;\n        return true;\n    };\n    NativeXRLayerRenderTargetTextureProvider.prototype.getRenderTargetTextureForEye = function (eye) {\n        // TODO (rgerd): Update the contract on the BabylonNative side to call this \"getRenderTargetTextureForEye\"\n        return this._nativeRTTProvider.getRenderTargetForEye(eye);\n    };\n    NativeXRLayerRenderTargetTextureProvider.prototype.getRenderTargetTextureForView = function (view) {\n        return this._nativeRTTProvider.getRenderTargetForEye(view.eye);\n    };\n    NativeXRLayerRenderTargetTextureProvider.prototype.getFramebufferDimensions = function () {\n        return {\n            framebufferWidth: this._nativeLayer.framebufferWidth,\n            framebufferHeight: this._nativeLayer.framebufferHeight,\n        };\n    };\n    return NativeXRLayerRenderTargetTextureProvider;\n}(WebXRLayerRenderTargetTextureProvider));\nexport { NativeXRLayerRenderTargetTextureProvider };\n/**\n * Creates the xr layer that will be used as the xr session's base layer.\n * @hidden\n */\nvar NativeXRRenderTarget = /** @class */ (function () {\n    function NativeXRRenderTarget(_xrSessionManager) {\n        this._nativeRenderTarget = navigator.xr.getWebXRRenderTarget(_xrSessionManager.scene.getEngine());\n    }\n    NativeXRRenderTarget.prototype.initializeXRLayerAsync = function (xrSession) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._nativeRenderTarget.initializeXRLayerAsync(xrSession)];\n                    case 1:\n                        _a.sent();\n                        this.xrLayer = this._nativeRenderTarget.xrLayer;\n                        return [2 /*return*/, this.xrLayer];\n                }\n            });\n        });\n    };\n    NativeXRRenderTarget.prototype.dispose = function () {\n        /* empty */\n    };\n    return NativeXRRenderTarget;\n}());\nexport { NativeXRRenderTarget };\n//# sourceMappingURL=nativeXRRenderTarget.js.map","import { __extends } from \"tslib\";\nimport { Vector3, Matrix, Quaternion, TmpVectors } from \"../Maths/math.vector.js\";\nimport { Camera } from \"../Cameras/camera.js\";\nimport { FreeCamera } from \"../Cameras/freeCamera.js\";\nimport { TargetCamera } from \"../Cameras/targetCamera.js\";\nimport { Viewport } from \"../Maths/math.viewport.js\";\nimport { Observable } from \"../Misc/observable.js\";\nimport { WebXRTrackingState } from \"./webXRTypes.js\";\n/**\n * WebXR Camera which holds the views for the xrSession\n * @see https://doc.babylonjs.com/how_to/webxr_camera\n */\nvar WebXRCamera = /** @class */ (function (_super) {\n    __extends(WebXRCamera, _super);\n    /**\n     * Creates a new webXRCamera, this should only be set at the camera after it has been updated by the xrSessionManager\n     * @param name the name of the camera\n     * @param scene the scene to add the camera to\n     * @param _xrSessionManager a constructed xr session manager\n     */\n    function WebXRCamera(name, scene, _xrSessionManager) {\n        var _this = _super.call(this, name, Vector3.Zero(), scene) || this;\n        _this._xrSessionManager = _xrSessionManager;\n        _this._firstFrame = false;\n        _this._referenceQuaternion = Quaternion.Identity();\n        _this._referencedPosition = new Vector3();\n        _this._trackingState = WebXRTrackingState.NOT_TRACKING;\n        /**\n         * Observable raised before camera teleportation\n         */\n        _this.onBeforeCameraTeleport = new Observable();\n        /**\n         *  Observable raised after camera teleportation\n         */\n        _this.onAfterCameraTeleport = new Observable();\n        /**\n         * Notifies when the camera's tracking state has changed.\n         * Notice - will also be triggered when tracking has started (at the beginning of the session)\n         */\n        _this.onTrackingStateChanged = new Observable();\n        /**\n         * Should position compensation execute on first frame.\n         * This is used when copying the position from a native (non XR) camera\n         */\n        _this.compensateOnFirstFrame = true;\n        _this._rotate180 = new Quaternion(0, 1, 0, 0);\n        // Initial camera configuration\n        _this.minZ = 0.1;\n        _this.rotationQuaternion = new Quaternion();\n        _this.cameraRigMode = Camera.RIG_MODE_CUSTOM;\n        _this.updateUpVectorFromRotation = true;\n        _this._updateNumberOfRigCameras(1);\n        // freeze projection matrix, which will be copied later\n        _this.freezeProjectionMatrix();\n        _this._xrSessionManager.onXRSessionInit.add(function () {\n            _this._referencedPosition.copyFromFloats(0, 0, 0);\n            _this._referenceQuaternion.copyFromFloats(0, 0, 0, 1);\n            // first frame - camera's y position should be 0 for the correct offset\n            _this._firstFrame = _this.compensateOnFirstFrame;\n        });\n        // Check transformation changes on each frame. Callback is added to be first so that the transformation will be\n        // applied to the rest of the elements using the referenceSpace object\n        _this._xrSessionManager.onXRFrameObservable.add(function () {\n            if (_this._firstFrame) {\n                _this._updateFromXRSession();\n            }\n            _this._updateReferenceSpace();\n            _this._updateFromXRSession();\n        }, undefined, true);\n        return _this;\n    }\n    Object.defineProperty(WebXRCamera.prototype, \"trackingState\", {\n        /**\n         * Get the current XR tracking state of the camera\n         */\n        get: function () {\n            return this._trackingState;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebXRCamera.prototype._setTrackingState = function (newState) {\n        if (this._trackingState !== newState) {\n            this._trackingState = newState;\n            this.onTrackingStateChanged.notifyObservers(newState);\n        }\n    };\n    Object.defineProperty(WebXRCamera.prototype, \"realWorldHeight\", {\n        /**\n         * Return the user's height, unrelated to the current ground.\n         * This will be the y position of this camera, when ground level is 0.\n         */\n        get: function () {\n            var basePose = this._xrSessionManager.currentFrame && this._xrSessionManager.currentFrame.getViewerPose(this._xrSessionManager.baseReferenceSpace);\n            if (basePose && basePose.transform) {\n                return basePose.transform.position.y;\n            }\n            else {\n                return 0;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /** @hidden */\n    WebXRCamera.prototype._updateForDualEyeDebugging = function ( /*pupilDistance = 0.01*/) {\n        // Create initial camera rigs\n        this._updateNumberOfRigCameras(2);\n        this.rigCameras[0].viewport = new Viewport(0, 0, 0.5, 1.0);\n        // this.rigCameras[0].position.x = -pupilDistance / 2;\n        this.rigCameras[0].outputRenderTarget = null;\n        this.rigCameras[1].viewport = new Viewport(0.5, 0, 0.5, 1.0);\n        // this.rigCameras[1].position.x = pupilDistance / 2;\n        this.rigCameras[1].outputRenderTarget = null;\n    };\n    /**\n     * Sets this camera's transformation based on a non-vr camera\n     * @param otherCamera the non-vr camera to copy the transformation from\n     * @param resetToBaseReferenceSpace should XR reset to the base reference space\n     */\n    WebXRCamera.prototype.setTransformationFromNonVRCamera = function (otherCamera, resetToBaseReferenceSpace) {\n        if (otherCamera === void 0) { otherCamera = this.getScene().activeCamera; }\n        if (resetToBaseReferenceSpace === void 0) { resetToBaseReferenceSpace = true; }\n        if (!otherCamera || otherCamera === this) {\n            return;\n        }\n        var mat = otherCamera.computeWorldMatrix();\n        mat.decompose(undefined, this.rotationQuaternion, this.position);\n        // set the ground level\n        this.position.y = 0;\n        Quaternion.FromEulerAnglesToRef(0, this.rotationQuaternion.toEulerAngles().y, 0, this.rotationQuaternion);\n        this._firstFrame = true;\n        if (resetToBaseReferenceSpace) {\n            this._xrSessionManager.resetReferenceSpace();\n        }\n    };\n    /**\n     * Gets the current instance class name (\"WebXRCamera\").\n     * @returns the class name\n     */\n    WebXRCamera.prototype.getClassName = function () {\n        return \"WebXRCamera\";\n    };\n    WebXRCamera.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._lastXRViewerPose = undefined;\n    };\n    WebXRCamera.prototype._updateFromXRSession = function () {\n        var _this = this;\n        var pose = this._xrSessionManager.currentFrame && this._xrSessionManager.currentFrame.getViewerPose(this._xrSessionManager.referenceSpace);\n        this._lastXRViewerPose = pose || undefined;\n        if (!pose) {\n            this._setTrackingState(WebXRTrackingState.NOT_TRACKING);\n            return;\n        }\n        // Set the tracking state. if it didn't change it is a no-op\n        var trackingState = pose.emulatedPosition ? WebXRTrackingState.TRACKING_LOST : WebXRTrackingState.TRACKING;\n        this._setTrackingState(trackingState);\n        if (pose.transform) {\n            var orientation_1 = pose.transform.orientation;\n            if (pose.transform.orientation.x === undefined) {\n                // Babylon native polyfill can return an undefined orientation value\n                // When not initialized\n                return;\n            }\n            var pos = pose.transform.position;\n            this._referencedPosition.set(pos.x, pos.y, pos.z);\n            this._referenceQuaternion.set(orientation_1.x, orientation_1.y, orientation_1.z, orientation_1.w);\n            if (!this._scene.useRightHandedSystem) {\n                this._referencedPosition.z *= -1;\n                this._referenceQuaternion.z *= -1;\n                this._referenceQuaternion.w *= -1;\n            }\n            if (this._firstFrame) {\n                this._firstFrame = false;\n                // we have the XR reference, now use this to find the offset to get the camera to be\n                // in the right position\n                // set the height to correlate to the current height\n                this.position.y += this._referencedPosition.y;\n                // avoid using the head rotation on the first frame.\n                this._referenceQuaternion.copyFromFloats(0, 0, 0, 1);\n            }\n            else {\n                // update position and rotation as reference\n                this.rotationQuaternion.copyFrom(this._referenceQuaternion);\n                this.position.copyFrom(this._referencedPosition);\n            }\n        }\n        // Update camera rigs\n        if (this.rigCameras.length !== pose.views.length) {\n            this._updateNumberOfRigCameras(pose.views.length);\n        }\n        pose.views.forEach(function (view, i) {\n            var _a;\n            var currentRig = _this.rigCameras[i];\n            // update right and left, where applicable\n            if (!currentRig.isLeftCamera && !currentRig.isRightCamera) {\n                if (view.eye === \"right\") {\n                    currentRig._isRightCamera = true;\n                }\n                else if (view.eye === \"left\") {\n                    currentRig._isLeftCamera = true;\n                }\n            }\n            // Update view/projection matrix\n            var pos = view.transform.position;\n            var orientation = view.transform.orientation;\n            currentRig.parent = _this.parent;\n            currentRig.position.set(pos.x, pos.y, pos.z);\n            currentRig.rotationQuaternion.set(orientation.x, orientation.y, orientation.z, orientation.w);\n            if (!_this._scene.useRightHandedSystem) {\n                currentRig.position.z *= -1;\n                currentRig.rotationQuaternion.z *= -1;\n                currentRig.rotationQuaternion.w *= -1;\n            }\n            else {\n                currentRig.rotationQuaternion.multiplyInPlace(_this._rotate180);\n            }\n            Matrix.FromFloat32ArrayToRefScaled(view.projectionMatrix, 0, 1, currentRig._projectionMatrix);\n            if (!_this._scene.useRightHandedSystem) {\n                currentRig._projectionMatrix.toggleProjectionMatrixHandInPlace();\n            }\n            // first camera?\n            if (i === 0) {\n                _this._projectionMatrix.copyFrom(currentRig._projectionMatrix);\n            }\n            var renderTargetTexture = _this._xrSessionManager.getRenderTargetTextureForView(view);\n            _this._renderingMultiview = ((_a = renderTargetTexture === null || renderTargetTexture === void 0 ? void 0 : renderTargetTexture._texture) === null || _a === void 0 ? void 0 : _a.isMultiview) || false;\n            if (_this._renderingMultiview) {\n                // For multiview, the render target texture is the same per-view (just the slice index is different),\n                // so we only need to set the output render target once for the rig parent.\n                if (i == 0) {\n                    _this._xrSessionManager.trySetViewportForView(_this.viewport, view);\n                    _this.outputRenderTarget = renderTargetTexture;\n                }\n            }\n            else {\n                // Update viewport\n                _this._xrSessionManager.trySetViewportForView(currentRig.viewport, view);\n                // Set cameras to render to the session's render target\n                currentRig.outputRenderTarget = renderTargetTexture || _this._xrSessionManager.getRenderTargetTextureForView(view);\n            }\n        });\n    };\n    WebXRCamera.prototype._updateNumberOfRigCameras = function (viewCount) {\n        if (viewCount === void 0) { viewCount = 1; }\n        while (this.rigCameras.length < viewCount) {\n            var newCamera = new TargetCamera(\"XR-RigCamera: \" + this.rigCameras.length, Vector3.Zero(), this.getScene());\n            newCamera.minZ = 0.1;\n            newCamera.rotationQuaternion = new Quaternion();\n            newCamera.updateUpVectorFromRotation = true;\n            newCamera.isRigCamera = true;\n            newCamera.rigParent = this;\n            // do not compute projection matrix, provided by XR\n            newCamera.freezeProjectionMatrix();\n            this.rigCameras.push(newCamera);\n        }\n        while (this.rigCameras.length > viewCount) {\n            var removedCamera = this.rigCameras.pop();\n            if (removedCamera) {\n                removedCamera.dispose();\n            }\n        }\n    };\n    WebXRCamera.prototype._updateReferenceSpace = function () {\n        // were position & rotation updated OUTSIDE of the xr update loop\n        if (!this.position.equals(this._referencedPosition) || !this.rotationQuaternion.equals(this._referenceQuaternion)) {\n            var referencedMat = TmpVectors.Matrix[0];\n            var poseMat = TmpVectors.Matrix[1];\n            var transformMat = TmpVectors.Matrix[2];\n            Matrix.ComposeToRef(WebXRCamera._ScaleReadOnly, this._referenceQuaternion, this._referencedPosition, referencedMat);\n            Matrix.ComposeToRef(WebXRCamera._ScaleReadOnly, this.rotationQuaternion, this.position, poseMat);\n            referencedMat.invert().multiplyToRef(poseMat, transformMat);\n            transformMat.invert();\n            if (!this._scene.useRightHandedSystem) {\n                transformMat.toggleModelMatrixHandInPlace();\n            }\n            transformMat.decompose(undefined, this._referenceQuaternion, this._referencedPosition);\n            var transform = new XRRigidTransform({\n                x: this._referencedPosition.x,\n                y: this._referencedPosition.y,\n                z: this._referencedPosition.z,\n            }, {\n                x: this._referenceQuaternion.x,\n                y: this._referenceQuaternion.y,\n                z: this._referenceQuaternion.z,\n                w: this._referenceQuaternion.w,\n            });\n            this._xrSessionManager.referenceSpace = this._xrSessionManager.referenceSpace.getOffsetReferenceSpace(transform);\n        }\n    };\n    WebXRCamera._ScaleReadOnly = Vector3.One();\n    return WebXRCamera;\n}(FreeCamera));\nexport { WebXRCamera };\n//# sourceMappingURL=webXRCamera.js.map","import { __assign } from \"tslib\";\nimport { WebXRExperienceHelper } from \"./webXRExperienceHelper.js\";\nimport { WebXRInput } from \"./webXRInput.js\";\nimport { WebXRControllerPointerSelection } from \"./features/WebXRControllerPointerSelection.js\";\nimport { WebXRNearInteraction } from \"./features/WebXRNearInteraction.js\";\nimport { WebXREnterExitUI } from \"./webXREnterExitUI.js\";\nimport { WebXRMotionControllerTeleportation } from \"./features/WebXRControllerTeleportation.js\";\nimport { Logger } from \"../Misc/logger.js\";\n/**\n * Options for the default xr helper\n */\nvar WebXRDefaultExperienceOptions = /** @class */ (function () {\n    function WebXRDefaultExperienceOptions() {\n    }\n    return WebXRDefaultExperienceOptions;\n}());\nexport { WebXRDefaultExperienceOptions };\n/**\n * Default experience which provides a similar setup to the previous webVRExperience\n */\nvar WebXRDefaultExperience = /** @class */ (function () {\n    function WebXRDefaultExperience() {\n    }\n    /**\n     * Creates the default xr experience\n     * @param scene scene\n     * @param options options for basic configuration\n     * @returns resulting WebXRDefaultExperience\n     */\n    WebXRDefaultExperience.CreateAsync = function (scene, options) {\n        if (options === void 0) { options = {}; }\n        var result = new WebXRDefaultExperience();\n        scene.onDisposeObservable.addOnce(function () {\n            result.dispose();\n        });\n        // init the UI right after construction\n        if (!options.disableDefaultUI) {\n            var uiOptions = __assign({ renderTarget: result.renderTarget }, (options.uiOptions || {}));\n            if (options.optionalFeatures) {\n                if (typeof options.optionalFeatures === \"boolean\") {\n                    uiOptions.optionalFeatures = [\"hit-test\", \"anchors\", \"plane-detection\", \"hand-tracking\"];\n                }\n                else {\n                    uiOptions.optionalFeatures = options.optionalFeatures;\n                }\n            }\n            result.enterExitUI = new WebXREnterExitUI(scene, uiOptions);\n        }\n        // Create base experience\n        return WebXRExperienceHelper.CreateAsync(scene)\n            .then(function (xrHelper) {\n            result.baseExperience = xrHelper;\n            if (options.ignoreNativeCameraTransformation) {\n                result.baseExperience.camera.compensateOnFirstFrame = false;\n            }\n            // Add controller support\n            result.input = new WebXRInput(xrHelper.sessionManager, xrHelper.camera, __assign({ controllerOptions: {\n                    renderingGroupId: options.renderingGroupId,\n                } }, (options.inputOptions || {})));\n            if (!options.disablePointerSelection) {\n                // Add default pointer selection\n                var pointerSelectionOptions = __assign(__assign({}, options.pointerSelectionOptions), { xrInput: result.input, renderingGroupId: options.renderingGroupId });\n                result.pointerSelection = (result.baseExperience.featuresManager.enableFeature(WebXRControllerPointerSelection.Name, options.useStablePlugins ? \"stable\" : \"latest\", pointerSelectionOptions));\n                if (!options.disableTeleportation) {\n                    // Add default teleportation, including rotation\n                    result.teleportation = result.baseExperience.featuresManager.enableFeature(WebXRMotionControllerTeleportation.Name, options.useStablePlugins ? \"stable\" : \"latest\", {\n                        floorMeshes: options.floorMeshes,\n                        xrInput: result.input,\n                        renderingGroupId: options.renderingGroupId,\n                    });\n                    result.teleportation.setSelectionFeature(result.pointerSelection);\n                }\n            }\n            if (!options.disableNearInteraction) {\n                // Add default pointer selection\n                result.nearInteraction = result.baseExperience.featuresManager.enableFeature(WebXRNearInteraction.Name, options.useStablePlugins ? \"stable\" : \"latest\", {\n                    xrInput: result.input,\n                    farInteractionFeature: result.pointerSelection,\n                    renderingGroupId: options.renderingGroupId,\n                    useUtilityLayer: true,\n                    enableNearInteractionOnAllControllers: true,\n                });\n            }\n            // Create the WebXR output target\n            result.renderTarget = result.baseExperience.sessionManager.getWebXRRenderTarget(options.outputCanvasOptions);\n            if (!options.disableDefaultUI) {\n                // Create ui for entering/exiting xr\n                return result.enterExitUI.setHelperAsync(result.baseExperience, result.renderTarget);\n            }\n            else {\n                return;\n            }\n        })\n            .then(function () {\n            return result;\n        })\n            .catch(function (error) {\n            Logger.Error(\"Error initializing XR\");\n            Logger.Error(error);\n            return result;\n        });\n    };\n    /**\n     * Disposes of the experience helper\n     */\n    WebXRDefaultExperience.prototype.dispose = function () {\n        if (this.baseExperience) {\n            this.baseExperience.dispose();\n        }\n        if (this.input) {\n            this.input.dispose();\n        }\n        if (this.enterExitUI) {\n            this.enterExitUI.dispose();\n        }\n        if (this.renderTarget) {\n            this.renderTarget.dispose();\n        }\n    };\n    return WebXRDefaultExperience;\n}());\nexport { WebXRDefaultExperience };\n//# sourceMappingURL=webXRDefaultExperience.js.map","import { __awaiter, __generator } from \"tslib\";\nimport { Observable } from \"../Misc/observable.js\";\nimport { WebXRState } from \"./webXRTypes.js\";\nimport { Tools } from \"../Misc/tools.js\";\n/**\n * Button which can be used to enter a different mode of XR\n */\nvar WebXREnterExitUIButton = /** @class */ (function () {\n    /**\n     * Creates a WebXREnterExitUIButton\n     * @param element button element\n     * @param sessionMode XR initialization session mode\n     * @param referenceSpaceType the type of reference space to be used\n     */\n    function WebXREnterExitUIButton(\n    /** button element */\n    element, \n    /** XR initialization options for the button */\n    sessionMode, \n    /** Reference space type */\n    referenceSpaceType) {\n        this.element = element;\n        this.sessionMode = sessionMode;\n        this.referenceSpaceType = referenceSpaceType;\n    }\n    /**\n     * Extendable function which can be used to update the button's visuals when the state changes\n     * @param activeButton the current active button in the UI\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    WebXREnterExitUIButton.prototype.update = function (activeButton) { };\n    return WebXREnterExitUIButton;\n}());\nexport { WebXREnterExitUIButton };\n/**\n * Options to create the webXR UI\n */\nvar WebXREnterExitUIOptions = /** @class */ (function () {\n    function WebXREnterExitUIOptions() {\n    }\n    return WebXREnterExitUIOptions;\n}());\nexport { WebXREnterExitUIOptions };\n/**\n * UI to allow the user to enter/exit XR mode\n */\nvar WebXREnterExitUI = /** @class */ (function () {\n    /**\n     * Construct a new EnterExit UI class\n     *\n     * @param _scene babylon scene object to use\n     * @param options (read-only) version of the options passed to this UI\n     */\n    function WebXREnterExitUI(_scene, \n    /** version of the options passed to this UI */\n    options) {\n        var _this = this;\n        this._scene = _scene;\n        this.options = options;\n        this._activeButton = null;\n        this._buttons = [];\n        /**\n         * Fired every time the active button is changed.\n         *\n         * When xr is entered via a button that launches xr that button will be the callback parameter\n         *\n         * When exiting xr the callback parameter will be null)\n         */\n        this.activeButtonChangedObservable = new Observable();\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this._onSessionGranted = function (evt) {\n            // This section is for future reference.\n            // As per specs, evt.session.mode should have the supported session mode, but no browser supports it for now.\n            // // check if the session granted is the same as the one requested\n            // const grantedMode = (evt.session as any).mode;\n            // if (grantedMode) {\n            //     this._buttons.some((btn, idx) => {\n            //         if (btn.sessionMode === grantedMode) {\n            //             this._enterXRWithButtonIndex(idx);\n            //             return true;\n            //         }\n            //         return false;\n            //     });\n            // } else\n            if (_this._helper) {\n                _this._enterXRWithButtonIndex(0);\n            }\n        };\n        this.overlay = document.createElement(\"div\");\n        this.overlay.classList.add(\"xr-button-overlay\");\n        this.overlay.style.cssText = \"z-index:11;position: absolute; right: 20px;bottom: 50px;\";\n        // prepare for session granted event\n        if (!options.ignoreSessionGrantedEvent && navigator.xr) {\n            navigator.xr.addEventListener(\"sessiongranted\", this._onSessionGranted);\n        }\n        // if served over HTTP, warn people.\n        // Hopefully the browsers will catch up\n        if (typeof window !== \"undefined\") {\n            if (window.location && window.location.protocol === \"http:\" && window.location.hostname !== \"localhost\") {\n                Tools.Warn(\"WebXR can only be served over HTTPS\");\n                throw new Error(\"WebXR can only be served over HTTPS\");\n            }\n        }\n        if (options.customButtons) {\n            this._buttons = options.customButtons;\n        }\n        else {\n            var sessionMode = options.sessionMode || \"immersive-vr\";\n            var referenceSpaceType = options.referenceSpaceType || \"local-floor\";\n            var url = typeof SVGSVGElement === \"undefined\"\n                ? \"https://cdn.babylonjs.com/Assets/vrButton.png\"\n                : \"data:image/svg+xml;charset=UTF-8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%222048%22%20height%3D%221152%22%20viewBox%3D%220%200%202048%201152%22%20version%3D%221.1%22%3E%3Cpath%20transform%3D%22rotate%28180%201024%2C576.0000000000001%29%22%20d%3D%22m1109%2C896q17%2C0%2030%2C-12t13%2C-30t-12.5%2C-30.5t-30.5%2C-12.5l-170%2C0q-18%2C0%20-30.5%2C12.5t-12.5%2C30.5t13%2C30t30%2C12l170%2C0zm-85%2C256q59%2C0%20132.5%2C-1.5t154.5%2C-5.5t164.5%2C-11.5t163%2C-20t150%2C-30t124.5%2C-41.5q23%2C-11%2042%2C-24t38%2C-30q27%2C-25%2041%2C-61.5t14%2C-72.5l0%2C-257q0%2C-123%20-47%2C-232t-128%2C-190t-190%2C-128t-232%2C-47l-81%2C0q-37%2C0%20-68.5%2C14t-60.5%2C34.5t-55.5%2C45t-53%2C45t-53%2C34.5t-55.5%2C14t-55.5%2C-14t-53%2C-34.5t-53%2C-45t-55.5%2C-45t-60.5%2C-34.5t-68.5%2C-14l-81%2C0q-123%2C0%20-232%2C47t-190%2C128t-128%2C190t-47%2C232l0%2C257q0%2C68%2038%2C115t97%2C73q54%2C24%20124.5%2C41.5t150%2C30t163%2C20t164.5%2C11.5t154.5%2C5.5t132.5%2C1.5zm939%2C-298q0%2C39%20-24.5%2C67t-58.5%2C42q-54%2C23%20-122%2C39.5t-143.5%2C28t-155.5%2C19t-157%2C11t-148.5%2C5t-129.5%2C1.5q-59%2C0%20-130%2C-1.5t-148%2C-5t-157%2C-11t-155.5%2C-19t-143.5%2C-28t-122%2C-39.5q-34%2C-14%20-58.5%2C-42t-24.5%2C-67l0%2C-257q0%2C-106%2040.5%2C-199t110%2C-162.5t162.5%2C-109.5t199%2C-40l81%2C0q27%2C0%2052%2C14t50%2C34.5t51%2C44.5t55.5%2C44.5t63.5%2C34.5t74%2C14t74%2C-14t63.5%2C-34.5t55.5%2C-44.5t51%2C-44.5t50%2C-34.5t52%2C-14l14%2C0q37%2C0%2070%2C0.5t64.5%2C4.5t63.5%2C12t68%2C23q71%2C30%20128.5%2C78.5t98.5%2C110t63.5%2C133.5t22.5%2C149l0%2C257z%22%20fill%3D%22white%22%20/%3E%3C/svg%3E%0A\";\n            var css = \".babylonVRicon { color: #868686; border-color: #868686; border-style: solid; margin-left: 10px; height: 50px; width: 80px; background-color: rgba(51,51,51,0.7); background-image: url(\" +\n                url +\n                \"); background-size: 80%; background-repeat:no-repeat; background-position: center; border: none; outline: none; transition: transform 0.125s ease-out } .babylonVRicon:hover { transform: scale(1.05) } .babylonVRicon:active {background-color: rgba(51,51,51,1) } .babylonVRicon:focus {background-color: rgba(51,51,51,1) }\";\n            css += '.babylonVRicon.vrdisplaypresenting { background-image: none;} .vrdisplaypresenting::after { content: \"EXIT\"} .xr-error::after { content: \"ERROR\"}';\n            var style = document.createElement(\"style\");\n            style.appendChild(document.createTextNode(css));\n            document.getElementsByTagName(\"head\")[0].appendChild(style);\n            var hmdBtn_1 = document.createElement(\"button\");\n            hmdBtn_1.className = \"babylonVRicon\";\n            hmdBtn_1.title = \"\".concat(sessionMode, \" - \").concat(referenceSpaceType);\n            this._buttons.push(new WebXREnterExitUIButton(hmdBtn_1, sessionMode, referenceSpaceType));\n            this._buttons[this._buttons.length - 1].update = function (activeButton) {\n                this.element.style.display = activeButton === null || activeButton === this ? \"\" : \"none\";\n                hmdBtn_1.className = \"babylonVRicon\" + (activeButton === this ? \" vrdisplaypresenting\" : \"\");\n            };\n            this._updateButtons(null);\n        }\n        var renderCanvas = _scene.getEngine().getInputElement();\n        if (renderCanvas && renderCanvas.parentNode) {\n            renderCanvas.parentNode.appendChild(this.overlay);\n            _scene.onDisposeObservable.addOnce(function () {\n                _this.dispose();\n            });\n        }\n    }\n    /**\n     * Set the helper to be used with this UI component.\n     * The UI is bound to an experience helper. If not provided the UI can still be used but the events should be registered by the developer.\n     *\n     * @param helper the experience helper to attach\n     * @param renderTarget an optional render target (in case it is created outside of the helper scope)\n     * @returns a promise that resolves when the ui is ready\n     */\n    WebXREnterExitUI.prototype.setHelperAsync = function (helper, renderTarget) {\n        return __awaiter(this, void 0, void 0, function () {\n            var supportedPromises, results;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this._helper = helper;\n                        this._renderTarget = renderTarget;\n                        supportedPromises = this._buttons.map(function (btn) {\n                            return helper.sessionManager.isSessionSupportedAsync(btn.sessionMode);\n                        });\n                        helper.onStateChangedObservable.add(function (state) {\n                            if (state == WebXRState.NOT_IN_XR) {\n                                _this._updateButtons(null);\n                            }\n                        });\n                        return [4 /*yield*/, Promise.all(supportedPromises)];\n                    case 1:\n                        results = _a.sent();\n                        results.forEach(function (supported, i) {\n                            if (supported) {\n                                _this.overlay.appendChild(_this._buttons[i].element);\n                                _this._buttons[i].element.onclick = _this._enterXRWithButtonIndex.bind(_this, i);\n                            }\n                            else {\n                                Tools.Warn(\"Session mode \\\"\".concat(_this._buttons[i].sessionMode, \"\\\" not supported in browser\"));\n                            }\n                        });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Creates UI to allow the user to enter/exit XR mode\n     * @param scene the scene to add the ui to\n     * @param helper the xr experience helper to enter/exit xr with\n     * @param options options to configure the UI\n     * @returns the created ui\n     */\n    WebXREnterExitUI.CreateAsync = function (scene, helper, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            var ui;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        ui = new WebXREnterExitUI(scene, options);\n                        return [4 /*yield*/, ui.setHelperAsync(helper, options.renderTarget || undefined)];\n                    case 1:\n                        _a.sent();\n                        return [2 /*return*/, ui];\n                }\n            });\n        });\n    };\n    WebXREnterExitUI.prototype._enterXRWithButtonIndex = function (idx) {\n        if (idx === void 0) { idx = 0; }\n        return __awaiter(this, void 0, void 0, function () {\n            var e_1, element, prevTitle;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!(this._helper.state == WebXRState.IN_XR)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this._helper.exitXRAsync()];\n                    case 1:\n                        _a.sent();\n                        this._updateButtons(null);\n                        return [3 /*break*/, 6];\n                    case 2:\n                        if (!(this._helper.state == WebXRState.NOT_IN_XR)) return [3 /*break*/, 6];\n                        _a.label = 3;\n                    case 3:\n                        _a.trys.push([3, 5, , 6]);\n                        return [4 /*yield*/, this._helper.enterXRAsync(this._buttons[idx].sessionMode, this._buttons[idx].referenceSpaceType, this._renderTarget, {\n                                optionalFeatures: this.options.optionalFeatures,\n                                requiredFeatures: this.options.requiredFeatures,\n                            })];\n                    case 4:\n                        _a.sent();\n                        this._updateButtons(this._buttons[idx]);\n                        return [3 /*break*/, 6];\n                    case 5:\n                        e_1 = _a.sent();\n                        // make sure button is visible\n                        this._updateButtons(null);\n                        element = this._buttons[idx].element;\n                        prevTitle = element.title;\n                        element.title = \"Error entering XR session : \" + prevTitle;\n                        element.classList.add(\"xr-error\");\n                        if (this.options.onError) {\n                            this.options.onError(e_1);\n                        }\n                        return [3 /*break*/, 6];\n                    case 6: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Disposes of the XR UI component\n     */\n    WebXREnterExitUI.prototype.dispose = function () {\n        var renderCanvas = this._scene.getEngine().getInputElement();\n        if (renderCanvas && renderCanvas.parentNode && renderCanvas.parentNode.contains(this.overlay)) {\n            renderCanvas.parentNode.removeChild(this.overlay);\n        }\n        this.activeButtonChangedObservable.clear();\n        navigator.xr.removeEventListener(\"sessiongranted\", this._onSessionGranted);\n    };\n    WebXREnterExitUI.prototype._updateButtons = function (activeButton) {\n        var _this = this;\n        this._activeButton = activeButton;\n        this._buttons.forEach(function (b) {\n            b.update(_this._activeButton);\n        });\n        this.activeButtonChangedObservable.notifyObservers(this._activeButton);\n    };\n    return WebXREnterExitUI;\n}());\nexport { WebXREnterExitUI };\n//# sourceMappingURL=webXREnterExitUI.js.map","import { __awaiter, __generator } from \"tslib\";\nimport { Observable } from \"../Misc/observable.js\";\nimport { WebXRSessionManager } from \"./webXRSessionManager.js\";\nimport { WebXRCamera } from \"./webXRCamera.js\";\nimport { WebXRState } from \"./webXRTypes.js\";\nimport { WebXRFeatureName, WebXRFeaturesManager } from \"./webXRFeaturesManager.js\";\nimport { Logger } from \"../Misc/logger.js\";\nimport { UniversalCamera } from \"../Cameras/universalCamera.js\";\nimport { Quaternion, Vector3 } from \"../Maths/math.vector.js\";\n/**\n * Base set of functionality needed to create an XR experience (WebXRSessionManager, Camera, StateManagement, etc.)\n * @see https://doc.babylonjs.com/how_to/webxr_experience_helpers\n */\nvar WebXRExperienceHelper = /** @class */ (function () {\n    /**\n     * Creates a WebXRExperienceHelper\n     * @param _scene The scene the helper should be created in\n     */\n    function WebXRExperienceHelper(_scene) {\n        var _this = this;\n        this._scene = _scene;\n        this._nonVRCamera = null;\n        this._attachedToElement = false;\n        this._spectatorCamera = null;\n        this._originalSceneAutoClear = true;\n        this._supported = false;\n        this._spectatorMode = false;\n        /**\n         * Observers registered here will be triggered after the camera's initial transformation is set\n         * This can be used to set a different ground level or an extra rotation.\n         *\n         * Note that ground level is considered to be at 0. The height defined by the XR camera will be added\n         * to the position set after this observable is done executing.\n         */\n        this.onInitialXRPoseSetObservable = new Observable();\n        /**\n         * Fires when the state of the experience helper has changed\n         */\n        this.onStateChangedObservable = new Observable();\n        /**\n         * The current state of the XR experience (eg. transitioning, in XR or not in XR)\n         */\n        this.state = WebXRState.NOT_IN_XR;\n        this.sessionManager = new WebXRSessionManager(_scene);\n        this.camera = new WebXRCamera(\"webxr\", _scene, this.sessionManager);\n        this.featuresManager = new WebXRFeaturesManager(this.sessionManager);\n        _scene.onDisposeObservable.addOnce(function () {\n            _this.dispose();\n        });\n    }\n    /**\n     * Creates the experience helper\n     * @param scene the scene to attach the experience helper to\n     * @returns a promise for the experience helper\n     */\n    WebXRExperienceHelper.CreateAsync = function (scene) {\n        var helper = new WebXRExperienceHelper(scene);\n        return helper.sessionManager\n            .initializeAsync()\n            .then(function () {\n            helper._supported = true;\n            return helper;\n        })\n            .catch(function (e) {\n            helper._setState(WebXRState.NOT_IN_XR);\n            helper.dispose();\n            throw e;\n        });\n    };\n    /**\n     * Disposes of the experience helper\n     */\n    WebXRExperienceHelper.prototype.dispose = function () {\n        var _a;\n        this.exitXRAsync();\n        this.camera.dispose();\n        this.onStateChangedObservable.clear();\n        this.onInitialXRPoseSetObservable.clear();\n        this.sessionManager.dispose();\n        (_a = this._spectatorCamera) === null || _a === void 0 ? void 0 : _a.dispose();\n        if (this._nonVRCamera) {\n            this._scene.activeCamera = this._nonVRCamera;\n        }\n    };\n    /**\n     * Enters XR mode (This must be done within a user interaction in most browsers eg. button click)\n     * @param sessionMode options for the XR session\n     * @param referenceSpaceType frame of reference of the XR session\n     * @param renderTarget the output canvas that will be used to enter XR mode\n     * @param sessionCreationOptions optional XRSessionInit object to init the session with\n     * @returns promise that resolves after xr mode has entered\n     */\n    WebXRExperienceHelper.prototype.enterXRAsync = function (sessionMode, referenceSpaceType, renderTarget, sessionCreationOptions) {\n        var _a, _b;\n        if (renderTarget === void 0) { renderTarget = this.sessionManager.getWebXRRenderTarget(); }\n        if (sessionCreationOptions === void 0) { sessionCreationOptions = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var baseLayer, xrRenderState, e_1;\n            var _this = this;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        if (!this._supported) {\n                            throw \"WebXR not supported in this browser or environment\";\n                        }\n                        this._setState(WebXRState.ENTERING_XR);\n                        if (referenceSpaceType !== \"viewer\" && referenceSpaceType !== \"local\") {\n                            sessionCreationOptions.optionalFeatures = sessionCreationOptions.optionalFeatures || [];\n                            sessionCreationOptions.optionalFeatures.push(referenceSpaceType);\n                        }\n                        return [4 /*yield*/, this.featuresManager._extendXRSessionInitObject(sessionCreationOptions)];\n                    case 1:\n                        sessionCreationOptions = _c.sent();\n                        // we currently recommend \"unbounded\" space in AR (#7959)\n                        if (sessionMode === \"immersive-ar\" && referenceSpaceType !== \"unbounded\") {\n                            Logger.Warn(\"We recommend using 'unbounded' reference space type when using 'immersive-ar' session mode\");\n                        }\n                        _c.label = 2;\n                    case 2:\n                        _c.trys.push([2, 6, , 7]);\n                        return [4 /*yield*/, this.sessionManager.initializeSessionAsync(sessionMode, sessionCreationOptions)];\n                    case 3:\n                        _c.sent();\n                        return [4 /*yield*/, this.sessionManager.setReferenceSpaceTypeAsync(referenceSpaceType)];\n                    case 4:\n                        _c.sent();\n                        return [4 /*yield*/, renderTarget.initializeXRLayerAsync(this.sessionManager.session)];\n                    case 5:\n                        baseLayer = _c.sent();\n                        xrRenderState = {\n                            depthFar: this.camera.maxZ,\n                            depthNear: this.camera.minZ,\n                        };\n                        // The layers feature will have already initialized the xr session's layers on session init.\n                        if (!this.featuresManager.getEnabledFeature(WebXRFeatureName.LAYERS)) {\n                            xrRenderState.baseLayer = baseLayer;\n                        }\n                        this.sessionManager.updateRenderState(xrRenderState);\n                        // run the render loop\n                        this.sessionManager.runXRRenderLoop();\n                        // Cache pre xr scene settings\n                        this._originalSceneAutoClear = this._scene.autoClear;\n                        this._nonVRCamera = this._scene.activeCamera;\n                        this._attachedToElement = !!((_a = this._nonVRCamera) === null || _a === void 0 ? void 0 : _a.inputs.attachedToElement);\n                        (_b = this._nonVRCamera) === null || _b === void 0 ? void 0 : _b.detachControl();\n                        this._scene.activeCamera = this.camera;\n                        // do not compensate when AR session is used\n                        if (sessionMode !== \"immersive-ar\") {\n                            this._nonXRToXRCamera();\n                        }\n                        else {\n                            // Kept here, TODO - check if needed\n                            this._scene.autoClear = false;\n                            this.camera.compensateOnFirstFrame = false;\n                            // reset the camera's position to the origin\n                            this.camera.position.set(0, 0, 0);\n                            this.camera.rotationQuaternion.set(0, 0, 0, 1);\n                        }\n                        this.sessionManager.onXRSessionEnded.addOnce(function () {\n                            // when using the back button and not the exit button (default on mobile), the session is ending but the EXITING state was not set\n                            if (_this.state !== WebXRState.EXITING_XR) {\n                                _this._setState(WebXRState.EXITING_XR);\n                            }\n                            // Reset camera rigs output render target to ensure sessions render target is not drawn after it ends\n                            _this.camera.rigCameras.forEach(function (c) {\n                                c.outputRenderTarget = null;\n                            });\n                            // Restore scene settings\n                            _this._scene.autoClear = _this._originalSceneAutoClear;\n                            _this._scene.activeCamera = _this._nonVRCamera;\n                            if (_this._attachedToElement && _this._nonVRCamera) {\n                                _this._nonVRCamera.attachControl(!!_this._nonVRCamera.inputs.noPreventDefault);\n                            }\n                            if (sessionMode !== \"immersive-ar\" && _this.camera.compensateOnFirstFrame) {\n                                if (_this._nonVRCamera.setPosition) {\n                                    _this._nonVRCamera.setPosition(_this.camera.position);\n                                }\n                                else {\n                                    _this._nonVRCamera.position.copyFrom(_this.camera.position);\n                                }\n                            }\n                            _this._setState(WebXRState.NOT_IN_XR);\n                        });\n                        // Wait until the first frame arrives before setting state to in xr\n                        this.sessionManager.onXRFrameObservable.addOnce(function () {\n                            _this._setState(WebXRState.IN_XR);\n                        });\n                        return [2 /*return*/, this.sessionManager];\n                    case 6:\n                        e_1 = _c.sent();\n                        console.log(e_1);\n                        console.log(e_1.message);\n                        this._setState(WebXRState.NOT_IN_XR);\n                        throw e_1;\n                    case 7: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Exits XR mode and returns the scene to its original state\n     * @returns promise that resolves after xr mode has exited\n     */\n    WebXRExperienceHelper.prototype.exitXRAsync = function () {\n        // only exit if state is IN_XR\n        if (this.state !== WebXRState.IN_XR) {\n            return Promise.resolve();\n        }\n        this._setState(WebXRState.EXITING_XR);\n        return this.sessionManager.exitXRAsync();\n    };\n    /**\n     * Enable spectator mode for desktop VR experiences.\n     * When spectator mode is enabled a camera will be attached to the desktop canvas and will\n     * display the first rig camera's view on the desktop canvas.\n     * Please note that this will degrade performance, as it requires another camera render.\n     * It is also not recommended to enable this in devices like the quest, as it brings no benefit there.\n     */\n    WebXRExperienceHelper.prototype.enableSpectatorMode = function () {\n        var _this = this;\n        if (!this._spectatorMode) {\n            var updateSpectatorCamera_1 = function () {\n                if (_this._spectatorCamera) {\n                    _this._spectatorCamera.position.copyFrom(_this.camera.rigCameras[0].globalPosition);\n                    _this._spectatorCamera.rotationQuaternion.copyFrom(_this.camera.rigCameras[0].absoluteRotation);\n                }\n            };\n            var onStateChanged = function () {\n                if (_this.state === WebXRState.IN_XR) {\n                    _this._spectatorCamera = new UniversalCamera(\"webxr-spectator\", Vector3.Zero(), _this._scene);\n                    _this._spectatorCamera.rotationQuaternion = new Quaternion();\n                    _this._scene.activeCameras = [_this.camera, _this._spectatorCamera];\n                    _this.sessionManager.onXRFrameObservable.add(updateSpectatorCamera_1);\n                    _this._scene.onAfterRenderCameraObservable.add(function (camera) {\n                        if (camera === _this.camera) {\n                            // reset the dimensions object for correct resizing\n                            _this._scene.getEngine().framebufferDimensionsObject = null;\n                        }\n                    });\n                }\n                else if (_this.state === WebXRState.EXITING_XR) {\n                    _this.sessionManager.onXRFrameObservable.removeCallback(updateSpectatorCamera_1);\n                    _this._scene.activeCameras = null;\n                }\n            };\n            this._spectatorMode = true;\n            this.onStateChangedObservable.add(onStateChanged);\n            onStateChanged();\n        }\n    };\n    WebXRExperienceHelper.prototype._nonXRToXRCamera = function () {\n        this.camera.setTransformationFromNonVRCamera(this._nonVRCamera);\n        this.onInitialXRPoseSetObservable.notifyObservers(this.camera);\n    };\n    WebXRExperienceHelper.prototype._setState = function (val) {\n        if (this.state === val) {\n            return;\n        }\n        this.state = val;\n        this.onStateChangedObservable.notifyObservers(this.state);\n    };\n    return WebXRExperienceHelper;\n}());\nexport { WebXRExperienceHelper };\n//# sourceMappingURL=webXRExperienceHelper.js.map","var _a;\nimport { __assign, __awaiter, __generator } from \"tslib\";\nimport { Tools } from \"../Misc/tools.js\";\n/**\n * A list of the currently available features without referencing them\n */\nvar WebXRFeatureName = /** @class */ (function () {\n    function WebXRFeatureName() {\n    }\n    /**\n     * The name of the anchor system feature\n     */\n    WebXRFeatureName.ANCHOR_SYSTEM = \"xr-anchor-system\";\n    /**\n     * The name of the background remover feature\n     */\n    WebXRFeatureName.BACKGROUND_REMOVER = \"xr-background-remover\";\n    /**\n     * The name of the hit test feature\n     */\n    WebXRFeatureName.HIT_TEST = \"xr-hit-test\";\n    /**\n     * The name of the mesh detection feature\n     */\n    WebXRFeatureName.MESH_DETECTION = \"xr-mesh-detection\";\n    /**\n     * physics impostors for xr controllers feature\n     */\n    WebXRFeatureName.PHYSICS_CONTROLLERS = \"xr-physics-controller\";\n    /**\n     * The name of the plane detection feature\n     */\n    WebXRFeatureName.PLANE_DETECTION = \"xr-plane-detection\";\n    /**\n     * The name of the pointer selection feature\n     */\n    WebXRFeatureName.POINTER_SELECTION = \"xr-controller-pointer-selection\";\n    /**\n     * The name of the teleportation feature\n     */\n    WebXRFeatureName.TELEPORTATION = \"xr-controller-teleportation\";\n    /**\n     * The name of the feature points feature.\n     */\n    WebXRFeatureName.FEATURE_POINTS = \"xr-feature-points\";\n    /**\n     * The name of the hand tracking feature.\n     */\n    WebXRFeatureName.HAND_TRACKING = \"xr-hand-tracking\";\n    /**\n     * The name of the image tracking feature\n     */\n    WebXRFeatureName.IMAGE_TRACKING = \"xr-image-tracking\";\n    /**\n     * The name of the near interaction feature\n     */\n    WebXRFeatureName.NEAR_INTERACTION = \"xr-near-interaction\";\n    /**\n     * The name of the DOM overlay feature\n     */\n    WebXRFeatureName.DOM_OVERLAY = \"xr-dom-overlay\";\n    /**\n     * The name of the movement feature\n     */\n    WebXRFeatureName.MOVEMENT = \"xr-controller-movement\";\n    /**\n     * The name of the light estimation feature\n     */\n    WebXRFeatureName.LIGHT_ESTIMATION = \"xr-light-estimation\";\n    /**\n     * The name of the eye tracking feature\n     */\n    WebXRFeatureName.EYE_TRACKING = \"xr-eye-tracking\";\n    /**\n     * The name of the walking locomotion feature\n     */\n    WebXRFeatureName.WALKING_LOCOMOTION = \"xr-walking-locomotion\";\n    /**\n     * The name of the composition layers feature\n     */\n    WebXRFeatureName.LAYERS = \"xr-layers\";\n    return WebXRFeatureName;\n}());\nexport { WebXRFeatureName };\n/**\n * The WebXR features manager is responsible of enabling or disabling features required for the current XR session.\n * It is mainly used in AR sessions.\n *\n * A feature can have a version that is defined by Babylon (and does not correspond with the webxr version).\n */\nvar WebXRFeaturesManager = /** @class */ (function () {\n    /**\n     * constructs a new features manages.\n     *\n     * @param _xrSessionManager an instance of WebXRSessionManager\n     */\n    function WebXRFeaturesManager(_xrSessionManager) {\n        var _this = this;\n        this._xrSessionManager = _xrSessionManager;\n        this._features = {};\n        // when session starts / initialized - attach\n        this._xrSessionManager.onXRSessionInit.add(function () {\n            _this.getEnabledFeatures().forEach(function (featureName) {\n                var feature = _this._features[featureName];\n                if (feature.enabled && !feature.featureImplementation.attached && !feature.featureImplementation.disableAutoAttach) {\n                    _this.attachFeature(featureName);\n                }\n            });\n        });\n        // when session ends - detach\n        this._xrSessionManager.onXRSessionEnded.add(function () {\n            _this.getEnabledFeatures().forEach(function (featureName) {\n                var feature = _this._features[featureName];\n                if (feature.enabled && feature.featureImplementation.attached) {\n                    // detach, but don't disable!\n                    _this.detachFeature(featureName);\n                }\n            });\n        });\n    }\n    /**\n     * Used to register a module. After calling this function a developer can use this feature in the scene.\n     * Mainly used internally.\n     *\n     * @param featureName the name of the feature to register\n     * @param constructorFunction the function used to construct the module\n     * @param version the (babylon) version of the module\n     * @param stable is that a stable version of this module\n     */\n    WebXRFeaturesManager.AddWebXRFeature = function (featureName, constructorFunction, version, stable) {\n        if (version === void 0) { version = 1; }\n        if (stable === void 0) { stable = false; }\n        this._AvailableFeatures[featureName] = this._AvailableFeatures[featureName] || { latest: version };\n        if (version > this._AvailableFeatures[featureName].latest) {\n            this._AvailableFeatures[featureName].latest = version;\n        }\n        if (stable) {\n            this._AvailableFeatures[featureName].stable = version;\n        }\n        this._AvailableFeatures[featureName][version] = constructorFunction;\n    };\n    /**\n     * Returns a constructor of a specific feature.\n     *\n     * @param featureName the name of the feature to construct\n     * @param version the version of the feature to load\n     * @param xrSessionManager the xrSessionManager. Used to construct the module\n     * @param options optional options provided to the module.\n     * @returns a function that, when called, will return a new instance of this feature\n     */\n    WebXRFeaturesManager.ConstructFeature = function (featureName, version, xrSessionManager, options) {\n        if (version === void 0) { version = 1; }\n        var constructorFunction = this._AvailableFeatures[featureName][version];\n        if (!constructorFunction) {\n            // throw an error? return nothing?\n            throw new Error(\"feature not found\");\n        }\n        return constructorFunction(xrSessionManager, options);\n    };\n    /**\n     * Can be used to return the list of features currently registered\n     *\n     * @returns an Array of available features\n     */\n    WebXRFeaturesManager.GetAvailableFeatures = function () {\n        return Object.keys(this._AvailableFeatures);\n    };\n    /**\n     * Gets the versions available for a specific feature\n     * @param featureName the name of the feature\n     * @returns an array with the available versions\n     */\n    WebXRFeaturesManager.GetAvailableVersions = function (featureName) {\n        return Object.keys(this._AvailableFeatures[featureName]);\n    };\n    /**\n     * Return the latest unstable version of this feature\n     * @param featureName the name of the feature to search\n     * @returns the version number. if not found will return -1\n     */\n    WebXRFeaturesManager.GetLatestVersionOfFeature = function (featureName) {\n        return (this._AvailableFeatures[featureName] && this._AvailableFeatures[featureName].latest) || -1;\n    };\n    /**\n     * Return the latest stable version of this feature\n     * @param featureName the name of the feature to search\n     * @returns the version number. if not found will return -1\n     */\n    WebXRFeaturesManager.GetStableVersionOfFeature = function (featureName) {\n        return (this._AvailableFeatures[featureName] && this._AvailableFeatures[featureName].stable) || -1;\n    };\n    /**\n     * Attach a feature to the current session. Mainly used when session started to start the feature effect.\n     * Can be used during a session to start a feature\n     * @param featureName the name of feature to attach\n     */\n    WebXRFeaturesManager.prototype.attachFeature = function (featureName) {\n        var feature = this._features[featureName];\n        if (feature && feature.enabled && !feature.featureImplementation.attached) {\n            feature.featureImplementation.attach();\n        }\n    };\n    /**\n     * Can be used inside a session or when the session ends to detach a specific feature\n     * @param featureName the name of the feature to detach\n     */\n    WebXRFeaturesManager.prototype.detachFeature = function (featureName) {\n        var feature = this._features[featureName];\n        if (feature && feature.featureImplementation.attached) {\n            feature.featureImplementation.detach();\n        }\n    };\n    /**\n     * Used to disable an already-enabled feature\n     * The feature will be disposed and will be recreated once enabled.\n     * @param featureName the feature to disable\n     * @returns true if disable was successful\n     */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    WebXRFeaturesManager.prototype.disableFeature = function (featureName) {\n        var name = typeof featureName === \"string\" ? featureName : featureName.Name;\n        var feature = this._features[name];\n        if (feature && feature.enabled) {\n            feature.enabled = false;\n            this.detachFeature(name);\n            feature.featureImplementation.dispose();\n            delete this._features[name];\n            return true;\n        }\n        return false;\n    };\n    /**\n     * dispose this features manager\n     */\n    WebXRFeaturesManager.prototype.dispose = function () {\n        var _this = this;\n        this.getEnabledFeatures().forEach(function (feature) {\n            _this.disableFeature(feature);\n        });\n    };\n    /**\n     * Enable a feature using its name and a version. This will enable it in the scene, and will be responsible to attach it when the session starts.\n     * If used twice, the old version will be disposed and a new one will be constructed. This way you can re-enable with different configuration.\n     *\n     * @param featureName the name of the feature to load or the class of the feature\n     * @param version optional version to load. if not provided the latest version will be enabled\n     * @param moduleOptions options provided to the module. Ses the module documentation / constructor\n     * @param attachIfPossible if set to true (default) the feature will be automatically attached, if it is currently possible\n     * @param required is this feature required to the app. If set to true the session init will fail if the feature is not available.\n     * @returns a new constructed feature or throws an error if feature not found or conflicts with another enabled feature.\n     */\n    WebXRFeaturesManager.prototype.enableFeature = function (\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    featureName, version, moduleOptions, attachIfPossible, required) {\n        var _this = this;\n        if (version === void 0) { version = \"latest\"; }\n        if (moduleOptions === void 0) { moduleOptions = {}; }\n        if (attachIfPossible === void 0) { attachIfPossible = true; }\n        if (required === void 0) { required = true; }\n        var name = typeof featureName === \"string\" ? featureName : featureName.Name;\n        var versionToLoad = 0;\n        if (typeof version === \"string\") {\n            if (!version) {\n                throw new Error(\"Error in provided version - \".concat(name, \" (\").concat(version, \")\"));\n            }\n            if (version === \"stable\") {\n                versionToLoad = WebXRFeaturesManager.GetStableVersionOfFeature(name);\n            }\n            else if (version === \"latest\") {\n                versionToLoad = WebXRFeaturesManager.GetLatestVersionOfFeature(name);\n            }\n            else {\n                // try loading the number the string represents\n                versionToLoad = +version;\n            }\n            if (versionToLoad === -1 || isNaN(versionToLoad)) {\n                throw new Error(\"feature not found - \".concat(name, \" (\").concat(version, \")\"));\n            }\n        }\n        else {\n            versionToLoad = version;\n        }\n        // check if there is a feature conflict\n        var conflictingFeature = WebXRFeaturesManager._ConflictingFeatures[name];\n        if (conflictingFeature !== undefined && this.getEnabledFeatures().indexOf(conflictingFeature) !== -1) {\n            throw new Error(\"Feature \".concat(name, \" cannot be enabled while \").concat(conflictingFeature, \" is enabled.\"));\n        }\n        // check if already initialized\n        var feature = this._features[name];\n        var constructFunction = WebXRFeaturesManager.ConstructFeature(name, versionToLoad, this._xrSessionManager, moduleOptions);\n        if (!constructFunction) {\n            // report error?\n            throw new Error(\"feature not found - \".concat(name));\n        }\n        /* If the feature is already enabled, detach and dispose it, and create a new one */\n        if (feature) {\n            this.disableFeature(name);\n        }\n        var constructed = constructFunction();\n        if (constructed.dependsOn) {\n            var dependentsFound = constructed.dependsOn.every(function (featureName) { return !!_this._features[featureName]; });\n            if (!dependentsFound) {\n                throw new Error(\"Dependant features missing. Make sure the following features are enabled - \".concat(constructed.dependsOn.join(\", \")));\n            }\n        }\n        if (constructed.isCompatible()) {\n            this._features[name] = {\n                featureImplementation: constructed,\n                enabled: true,\n                version: versionToLoad,\n                required: required,\n            };\n            if (attachIfPossible) {\n                // if session started already, request and enable\n                if (this._xrSessionManager.session && !this._features[name].featureImplementation.attached) {\n                    // enable feature\n                    this.attachFeature(name);\n                }\n            }\n            else {\n                // disable auto-attach when session starts\n                this._features[name].featureImplementation.disableAutoAttach = true;\n            }\n            return this._features[name].featureImplementation;\n        }\n        else {\n            if (required) {\n                throw new Error(\"required feature not compatible\");\n            }\n            else {\n                Tools.Warn(\"Feature \".concat(name, \" not compatible with the current environment/browser and was not enabled.\"));\n                return constructed;\n            }\n        }\n    };\n    /**\n     * get the implementation of an enabled feature.\n     * @param featureName the name of the feature to load\n     * @returns the feature class, if found\n     */\n    WebXRFeaturesManager.prototype.getEnabledFeature = function (featureName) {\n        return this._features[featureName] && this._features[featureName].featureImplementation;\n    };\n    /**\n     * Get the list of enabled features\n     * @returns an array of enabled features\n     */\n    WebXRFeaturesManager.prototype.getEnabledFeatures = function () {\n        return Object.keys(this._features);\n    };\n    /**\n     * This function will extend the session creation configuration object with enabled features.\n     * If, for example, the anchors feature is enabled, it will be automatically added to the optional or required features list,\n     * according to the defined \"required\" variable, provided during enableFeature call\n     * @param xrSessionInit the xr Session init object to extend\n     *\n     * @returns an extended XRSessionInit object\n     */\n    WebXRFeaturesManager.prototype._extendXRSessionInitObject = function (xrSessionInit) {\n        return __awaiter(this, void 0, void 0, function () {\n            var enabledFeatures, _i, enabledFeatures_1, featureName, feature, nativeName, extended;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        enabledFeatures = this.getEnabledFeatures();\n                        _i = 0, enabledFeatures_1 = enabledFeatures;\n                        _a.label = 1;\n                    case 1:\n                        if (!(_i < enabledFeatures_1.length)) return [3 /*break*/, 4];\n                        featureName = enabledFeatures_1[_i];\n                        feature = this._features[featureName];\n                        nativeName = feature.featureImplementation.xrNativeFeatureName;\n                        if (nativeName) {\n                            if (feature.required) {\n                                xrSessionInit.requiredFeatures = xrSessionInit.requiredFeatures || [];\n                                if (xrSessionInit.requiredFeatures.indexOf(nativeName) === -1) {\n                                    xrSessionInit.requiredFeatures.push(nativeName);\n                                }\n                            }\n                            else {\n                                xrSessionInit.optionalFeatures = xrSessionInit.optionalFeatures || [];\n                                if (xrSessionInit.optionalFeatures.indexOf(nativeName) === -1) {\n                                    xrSessionInit.optionalFeatures.push(nativeName);\n                                }\n                            }\n                        }\n                        if (!feature.featureImplementation.getXRSessionInitExtension) return [3 /*break*/, 3];\n                        return [4 /*yield*/, feature.featureImplementation.getXRSessionInitExtension()];\n                    case 2:\n                        extended = _a.sent();\n                        xrSessionInit = __assign(__assign({}, xrSessionInit), extended);\n                        _a.label = 3;\n                    case 3:\n                        _i++;\n                        return [3 /*break*/, 1];\n                    case 4: return [2 /*return*/, xrSessionInit];\n                }\n            });\n        });\n    };\n    WebXRFeaturesManager._AvailableFeatures = {};\n    /**\n     * The key is the feature to check and the value is the feature that conflicts.\n     */\n    WebXRFeaturesManager._ConflictingFeatures = (_a = {},\n        _a[WebXRFeatureName.TELEPORTATION] = WebXRFeatureName.MOVEMENT,\n        _a[WebXRFeatureName.MOVEMENT] = WebXRFeatureName.TELEPORTATION,\n        _a);\n    return WebXRFeaturesManager;\n}());\nexport { WebXRFeaturesManager };\n//# sourceMappingURL=webXRFeaturesManager.js.map","import { __assign } from \"tslib\";\nimport { Observable } from \"../Misc/observable.js\";\nimport { WebXRInputSource } from \"./webXRInputSource.js\";\nimport { WebXRMotionControllerManager } from \"./motionController/webXRMotionControllerManager.js\";\n/**\n * XR input used to track XR inputs such as controllers/rays\n */\nvar WebXRInput = /** @class */ (function () {\n    /**\n     * Initializes the WebXRInput\n     * @param xrSessionManager the xr session manager for this session\n     * @param xrCamera the WebXR camera for this session. Mainly used for teleportation\n     * @param _options = initialization options for this xr input\n     */\n    function WebXRInput(\n    /**\n     * the xr session manager for this session\n     */\n    xrSessionManager, \n    /**\n     * the WebXR camera for this session. Mainly used for teleportation\n     */\n    xrCamera, _options) {\n        if (_options === void 0) { _options = {}; }\n        var _this = this;\n        this.xrSessionManager = xrSessionManager;\n        this.xrCamera = xrCamera;\n        this._options = _options;\n        /**\n         * XR controllers being tracked\n         */\n        this.controllers = [];\n        /**\n         * Event when a controller has been connected/added\n         */\n        this.onControllerAddedObservable = new Observable();\n        /**\n         * Event when a controller has been removed/disconnected\n         */\n        this.onControllerRemovedObservable = new Observable();\n        this._onInputSourcesChange = function (event) {\n            _this._addAndRemoveControllers(event.added, event.removed);\n        };\n        // Remove controllers when exiting XR\n        this._sessionEndedObserver = this.xrSessionManager.onXRSessionEnded.add(function () {\n            _this._addAndRemoveControllers([], _this.controllers.map(function (c) {\n                return c.inputSource;\n            }));\n        });\n        this._sessionInitObserver = this.xrSessionManager.onXRSessionInit.add(function (session) {\n            session.addEventListener(\"inputsourceschange\", _this._onInputSourcesChange);\n        });\n        this._frameObserver = this.xrSessionManager.onXRFrameObservable.add(function (frame) {\n            // Update controller pose info\n            _this.controllers.forEach(function (controller) {\n                controller.updateFromXRFrame(frame, _this.xrSessionManager.referenceSpace, _this.xrCamera);\n            });\n        });\n        if (this._options.customControllersRepositoryURL) {\n            WebXRMotionControllerManager.BaseRepositoryUrl = this._options.customControllersRepositoryURL;\n        }\n        WebXRMotionControllerManager.UseOnlineRepository = !this._options.disableOnlineControllerRepository;\n        if (WebXRMotionControllerManager.UseOnlineRepository) {\n            // pre-load the profiles list to load the controllers quicker afterwards\n            try {\n                WebXRMotionControllerManager.UpdateProfilesList().catch(function () {\n                    WebXRMotionControllerManager.UseOnlineRepository = false;\n                });\n            }\n            catch (e) {\n                WebXRMotionControllerManager.UseOnlineRepository = false;\n            }\n        }\n    }\n    WebXRInput.prototype._addAndRemoveControllers = function (addInputs, removeInputs) {\n        var _this = this;\n        // Add controllers if they don't already exist\n        var sources = this.controllers.map(function (c) {\n            return c.inputSource;\n        });\n        for (var _i = 0, addInputs_1 = addInputs; _i < addInputs_1.length; _i++) {\n            var input = addInputs_1[_i];\n            if (sources.indexOf(input) === -1) {\n                var controller = new WebXRInputSource(this.xrSessionManager.scene, input, __assign(__assign({}, (this._options.controllerOptions || {})), { forceControllerProfile: this._options.forceInputProfile, doNotLoadControllerMesh: this._options.doNotLoadControllerMeshes, disableMotionControllerAnimation: this._options.disableControllerAnimation }));\n                this.controllers.push(controller);\n                this.onControllerAddedObservable.notifyObservers(controller);\n            }\n        }\n        // Remove and dispose of controllers to be disposed\n        var keepControllers = [];\n        var removedControllers = [];\n        this.controllers.forEach(function (c) {\n            if (removeInputs.indexOf(c.inputSource) === -1) {\n                keepControllers.push(c);\n            }\n            else {\n                removedControllers.push(c);\n            }\n        });\n        this.controllers = keepControllers;\n        removedControllers.forEach(function (c) {\n            _this.onControllerRemovedObservable.notifyObservers(c);\n            c.dispose();\n        });\n    };\n    /**\n     * Disposes of the object\n     */\n    WebXRInput.prototype.dispose = function () {\n        this.controllers.forEach(function (c) {\n            c.dispose();\n        });\n        this.xrSessionManager.onXRFrameObservable.remove(this._frameObserver);\n        this.xrSessionManager.onXRSessionInit.remove(this._sessionInitObserver);\n        this.xrSessionManager.onXRSessionEnded.remove(this._sessionEndedObserver);\n        this.onControllerAddedObservable.clear();\n        this.onControllerRemovedObservable.clear();\n        // clear the controller cache\n        WebXRMotionControllerManager.ClearControllerCache();\n    };\n    return WebXRInput;\n}());\nexport { WebXRInput };\n//# sourceMappingURL=webXRInput.js.map","import { Observable } from \"../Misc/observable.js\";\nimport { AbstractMesh } from \"../Meshes/abstractMesh.js\";\nimport { Quaternion, Vector3 } from \"../Maths/math.vector.js\";\nimport { WebXRMotionControllerManager } from \"./motionController/webXRMotionControllerManager.js\";\nimport { Tools } from \"../Misc/tools.js\";\nvar idCount = 0;\n/**\n * Represents an XR controller\n */\nvar WebXRInputSource = /** @class */ (function () {\n    /**\n     * Creates the input source object\n     * @see https://doc.babylonjs.com/how_to/webxr_controllers_support\n     * @param _scene the scene which the controller should be associated to\n     * @param inputSource the underlying input source for the controller\n     * @param _options options for this controller creation\n     */\n    function WebXRInputSource(_scene, \n    /** The underlying input source for the controller  */\n    inputSource, _options) {\n        if (_options === void 0) { _options = {}; }\n        var _this = this;\n        this._scene = _scene;\n        this.inputSource = inputSource;\n        this._options = _options;\n        this._tmpVector = new Vector3();\n        this._disposed = false;\n        /**\n         * Event that fires when the controller is removed/disposed.\n         * The object provided as event data is this controller, after associated assets were disposed.\n         * uniqueId is still available.\n         */\n        this.onDisposeObservable = new Observable();\n        /**\n         * Will be triggered when the mesh associated with the motion controller is done loading.\n         * It is also possible that this will never trigger (!) if no mesh was loaded, or if the developer decides to load a different mesh\n         * A shortened version of controller -> motion controller -> on mesh loaded.\n         */\n        this.onMeshLoadedObservable = new Observable();\n        /**\n         * Observers registered here will trigger when a motion controller profile was assigned to this xr controller\n         */\n        this.onMotionControllerInitObservable = new Observable();\n        this._uniqueId = \"controller-\".concat(idCount++, \"-\").concat(inputSource.targetRayMode, \"-\").concat(inputSource.handedness);\n        this.pointer = new AbstractMesh(\"\".concat(this._uniqueId, \"-pointer\"), _scene);\n        this.pointer.rotationQuaternion = new Quaternion();\n        if (this.inputSource.gripSpace) {\n            this.grip = new AbstractMesh(\"\".concat(this._uniqueId, \"-grip\"), this._scene);\n            this.grip.rotationQuaternion = new Quaternion();\n        }\n        this._tmpVector.set(0, 0, this._scene.useRightHandedSystem ? -1.0 : 1.0);\n        // for now only load motion controllers if gamepad object available\n        if (this.inputSource.gamepad && this.inputSource.targetRayMode === \"tracked-pointer\") {\n            WebXRMotionControllerManager.GetMotionControllerWithXRInput(inputSource, _scene, this._options.forceControllerProfile).then(function (motionController) {\n                _this.motionController = motionController;\n                _this.onMotionControllerInitObservable.notifyObservers(motionController);\n                // should the model be loaded?\n                if (!_this._options.doNotLoadControllerMesh && !_this.motionController._doNotLoadControllerMesh) {\n                    _this.motionController.loadModel().then(function (success) {\n                        var _a;\n                        if (success && _this.motionController && _this.motionController.rootMesh) {\n                            if (_this._options.renderingGroupId) {\n                                // anything other than 0?\n                                _this.motionController.rootMesh.renderingGroupId = _this._options.renderingGroupId;\n                                _this.motionController.rootMesh.getChildMeshes(false).forEach(function (mesh) { return (mesh.renderingGroupId = _this._options.renderingGroupId); });\n                            }\n                            _this.onMeshLoadedObservable.notifyObservers(_this.motionController.rootMesh);\n                            _this.motionController.rootMesh.parent = _this.grip || _this.pointer;\n                            _this.motionController.disableAnimation = !!_this._options.disableMotionControllerAnimation;\n                        }\n                        // make sure to dispose is the controller is already disposed\n                        if (_this._disposed) {\n                            (_a = _this.motionController) === null || _a === void 0 ? void 0 : _a.dispose();\n                        }\n                    });\n                }\n            }, function () {\n                Tools.Warn(\"Could not find a matching motion controller for the registered input source\");\n            });\n        }\n    }\n    Object.defineProperty(WebXRInputSource.prototype, \"uniqueId\", {\n        /**\n         * Get this controllers unique id\n         */\n        get: function () {\n            return this._uniqueId;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Disposes of the object\n     */\n    WebXRInputSource.prototype.dispose = function () {\n        if (this.grip) {\n            this.grip.dispose(true);\n        }\n        if (this.motionController) {\n            this.motionController.dispose();\n        }\n        this.pointer.dispose(true);\n        this.onMotionControllerInitObservable.clear();\n        this.onMeshLoadedObservable.clear();\n        this.onDisposeObservable.notifyObservers(this);\n        this.onDisposeObservable.clear();\n        this._disposed = true;\n    };\n    /**\n     * Gets a world space ray coming from the pointer or grip\n     * @param result the resulting ray\n     * @param gripIfAvailable use the grip mesh instead of the pointer, if available\n     */\n    WebXRInputSource.prototype.getWorldPointerRayToRef = function (result, gripIfAvailable) {\n        if (gripIfAvailable === void 0) { gripIfAvailable = false; }\n        var object = gripIfAvailable && this.grip ? this.grip : this.pointer;\n        Vector3.TransformNormalToRef(this._tmpVector, object.getWorldMatrix(), result.direction);\n        result.direction.normalize();\n        result.origin.copyFrom(object.absolutePosition);\n        result.length = 1000;\n    };\n    /**\n     * Updates the controller pose based on the given XRFrame\n     * @param xrFrame xr frame to update the pose with\n     * @param referenceSpace reference space to use\n     * @param xrCamera the xr camera, used for parenting\n     */\n    WebXRInputSource.prototype.updateFromXRFrame = function (xrFrame, referenceSpace, xrCamera) {\n        var pose = xrFrame.getPose(this.inputSource.targetRaySpace, referenceSpace);\n        this._lastXRPose = pose;\n        // Update the pointer mesh\n        if (pose) {\n            var pos = pose.transform.position;\n            this.pointer.position.set(pos.x, pos.y, pos.z);\n            var orientation_1 = pose.transform.orientation;\n            this.pointer.rotationQuaternion.set(orientation_1.x, orientation_1.y, orientation_1.z, orientation_1.w);\n            if (!this._scene.useRightHandedSystem) {\n                this.pointer.position.z *= -1;\n                this.pointer.rotationQuaternion.z *= -1;\n                this.pointer.rotationQuaternion.w *= -1;\n            }\n            this.pointer.parent = xrCamera.parent;\n        }\n        // Update the grip mesh if it exists\n        if (this.inputSource.gripSpace && this.grip) {\n            var pose_1 = xrFrame.getPose(this.inputSource.gripSpace, referenceSpace);\n            if (pose_1) {\n                var pos = pose_1.transform.position;\n                var orientation_2 = pose_1.transform.orientation;\n                this.grip.position.set(pos.x, pos.y, pos.z);\n                this.grip.rotationQuaternion.set(orientation_2.x, orientation_2.y, orientation_2.z, orientation_2.w);\n                if (!this._scene.useRightHandedSystem) {\n                    this.grip.position.z *= -1;\n                    this.grip.rotationQuaternion.z *= -1;\n                    this.grip.rotationQuaternion.w *= -1;\n                }\n            }\n            this.grip.parent = xrCamera.parent;\n        }\n        if (this.motionController) {\n            // either update buttons only or also position, if in gamepad mode\n            this.motionController.updateFromXRFrame(xrFrame);\n        }\n    };\n    return WebXRInputSource;\n}());\nexport { WebXRInputSource };\n//# sourceMappingURL=webXRInputSource.js.map","/**\n * Wrapper over subclasses of XRLayer.\n * @hidden\n */\nvar WebXRLayerWrapper = /** @class */ (function () {\n    function WebXRLayerWrapper(\n    /** The width of the layer's framebuffer. */\n    getWidth, \n    /** The height of the layer's framebuffer. */\n    getHeight, \n    /** The XR layer that this WebXRLayerWrapper wraps. */\n    layer, \n    /** The type of XR layer that is being wrapped. */\n    layerType, \n    /** Create a render target provider for the wrapped layer. */\n    createRenderTargetTextureProvider) {\n        this.getWidth = getWidth;\n        this.getHeight = getHeight;\n        this.layer = layer;\n        this.layerType = layerType;\n        this.createRenderTargetTextureProvider = createRenderTargetTextureProvider;\n    }\n    Object.defineProperty(WebXRLayerWrapper.prototype, \"isFixedFoveationSupported\", {\n        /**\n         * Check if fixed foveation is supported on this device\n         */\n        get: function () {\n            return this.layerType == \"XRWebGLLayer\" && typeof this.layer.fixedFoveation == \"number\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebXRLayerWrapper.prototype, \"fixedFoveation\", {\n        /**\n         * Get the fixed foveation currently set, as specified by the webxr specs\n         * If this returns null, then fixed foveation is not supported\n         */\n        get: function () {\n            if (this.isFixedFoveationSupported) {\n                return this.layer.fixedFoveation;\n            }\n            return null;\n        },\n        /**\n         * Set the fixed foveation to the specified value, as specified by the webxr specs\n         * This value will be normalized to be between 0 and 1, 1 being max foveation, 0 being no foveation\n         */\n        set: function (value) {\n            if (this.isFixedFoveationSupported) {\n                var val = Math.max(0, Math.min(1, value || 0));\n                this.layer.fixedFoveation = val;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return WebXRLayerWrapper;\n}());\nexport { WebXRLayerWrapper };\n//# sourceMappingURL=webXRLayerWrapper.js.map","import { __awaiter, __generator } from \"tslib\";\nimport { Observable } from \"../Misc/observable.js\";\nimport { Tools } from \"../Misc/tools.js\";\nimport { WebXRWebGLLayerWrapper } from \"./webXRWebGLLayer.js\";\n/**\n * Configuration object for WebXR output canvas\n */\nvar WebXRManagedOutputCanvasOptions = /** @class */ (function () {\n    function WebXRManagedOutputCanvasOptions() {\n    }\n    /**\n     * Get the default values of the configuration object\n     * @param engine defines the engine to use (can be null)\n     * @returns default values of this configuration object\n     */\n    WebXRManagedOutputCanvasOptions.GetDefaults = function (engine) {\n        var defaults = new WebXRManagedOutputCanvasOptions();\n        defaults.canvasOptions = {\n            antialias: true,\n            depth: true,\n            stencil: engine ? engine.isStencilEnable : true,\n            alpha: true,\n            multiview: false,\n            framebufferScaleFactor: 1,\n        };\n        defaults.newCanvasCssStyle = \"position:absolute; bottom:0px;right:0px;z-index:10;width:90%;height:100%;background-color: #000000;\";\n        return defaults;\n    };\n    return WebXRManagedOutputCanvasOptions;\n}());\nexport { WebXRManagedOutputCanvasOptions };\n/**\n * Creates a canvas that is added/removed from the webpage when entering/exiting XR\n */\nvar WebXRManagedOutputCanvas = /** @class */ (function () {\n    /**\n     * Initializes the canvas to be added/removed upon entering/exiting xr\n     * @param _xrSessionManager The XR Session manager\n     * @param _options optional configuration for this canvas output. defaults will be used if not provided\n     */\n    function WebXRManagedOutputCanvas(_xrSessionManager, _options) {\n        if (_options === void 0) { _options = WebXRManagedOutputCanvasOptions.GetDefaults(); }\n        var _this = this;\n        this._options = _options;\n        this._canvas = null;\n        this._engine = null;\n        /**\n         * xr layer for the canvas\n         */\n        this.xrLayer = null;\n        this._xrLayerWrapper = null;\n        /**\n         * Observers registered here will be triggered when the xr layer was initialized\n         */\n        this.onXRLayerInitObservable = new Observable();\n        this._engine = _xrSessionManager.scene.getEngine();\n        this._engine.onDisposeObservable.addOnce(function () {\n            _this._engine = null;\n        });\n        if (!_options.canvasElement) {\n            var canvas = document.createElement(\"canvas\");\n            canvas.style.cssText = this._options.newCanvasCssStyle || \"position:absolute; bottom:0px;right:0px;\";\n            this._setManagedOutputCanvas(canvas);\n        }\n        else {\n            this._setManagedOutputCanvas(_options.canvasElement);\n        }\n        _xrSessionManager.onXRSessionInit.add(function () {\n            _this._addCanvas();\n        });\n        _xrSessionManager.onXRSessionEnded.add(function () {\n            _this._removeCanvas();\n        });\n    }\n    /**\n     * Disposes of the object\n     */\n    WebXRManagedOutputCanvas.prototype.dispose = function () {\n        this._removeCanvas();\n        this._setManagedOutputCanvas(null);\n    };\n    /**\n     * Initializes a XRWebGLLayer to be used as the session's baseLayer.\n     * @param xrSession xr session\n     * @returns a promise that will resolve once the XR Layer has been created\n     */\n    WebXRManagedOutputCanvas.prototype.initializeXRLayerAsync = function (xrSession) {\n        return __awaiter(this, void 0, void 0, function () {\n            var createLayer;\n            var _this = this;\n            return __generator(this, function (_a) {\n                createLayer = function () {\n                    _this.xrLayer = new XRWebGLLayer(xrSession, _this.canvasContext, _this._options.canvasOptions);\n                    _this._xrLayerWrapper = new WebXRWebGLLayerWrapper(_this.xrLayer);\n                    _this.onXRLayerInitObservable.notifyObservers(_this.xrLayer);\n                    return _this.xrLayer;\n                };\n                // support canvases without makeXRCompatible\n                if (!this.canvasContext.makeXRCompatible) {\n                    return [2 /*return*/, Promise.resolve(createLayer())];\n                }\n                return [2 /*return*/, this.canvasContext\n                        .makeXRCompatible()\n                        .then(\n                    // catch any error and continue. When using the emulator is throws this error for no apparent reason.\n                    function () { }, function () {\n                        // log the error, continue nonetheless!\n                        Tools.Warn(\"Error executing makeXRCompatible. This does not mean that the session will work incorrectly.\");\n                    })\n                        .then(function () {\n                        return createLayer();\n                    })];\n            });\n        });\n    };\n    WebXRManagedOutputCanvas.prototype._addCanvas = function () {\n        var _this = this;\n        if (this._canvas && this._engine && this._canvas !== this._engine.getRenderingCanvas()) {\n            document.body.appendChild(this._canvas);\n        }\n        if (this.xrLayer) {\n            this._setCanvasSize(true);\n        }\n        else {\n            this.onXRLayerInitObservable.addOnce(function () {\n                _this._setCanvasSize(true);\n            });\n        }\n    };\n    WebXRManagedOutputCanvas.prototype._removeCanvas = function () {\n        if (this._canvas && this._engine && document.body.contains(this._canvas) && this._canvas !== this._engine.getRenderingCanvas()) {\n            document.body.removeChild(this._canvas);\n        }\n        this._setCanvasSize(false);\n    };\n    WebXRManagedOutputCanvas.prototype._setCanvasSize = function (init, xrLayer) {\n        if (init === void 0) { init = true; }\n        if (xrLayer === void 0) { xrLayer = this._xrLayerWrapper; }\n        if (!this._canvas || !this._engine) {\n            return;\n        }\n        if (init) {\n            if (xrLayer) {\n                if (this._canvas !== this._engine.getRenderingCanvas()) {\n                    this._canvas.style.width = xrLayer.getWidth() + \"px\";\n                    this._canvas.style.height = xrLayer.getHeight() + \"px\";\n                }\n                else {\n                    this._engine.setSize(xrLayer.getWidth(), xrLayer.getHeight());\n                }\n            }\n        }\n        else {\n            if (this._originalCanvasSize) {\n                if (this._canvas !== this._engine.getRenderingCanvas()) {\n                    this._canvas.style.width = this._originalCanvasSize.width + \"px\";\n                    this._canvas.style.height = this._originalCanvasSize.height + \"px\";\n                }\n                else {\n                    this._engine.setSize(this._originalCanvasSize.width, this._originalCanvasSize.height);\n                }\n            }\n        }\n    };\n    WebXRManagedOutputCanvas.prototype._setManagedOutputCanvas = function (canvas) {\n        this._removeCanvas();\n        if (!canvas) {\n            this._canvas = null;\n            this.canvasContext = null;\n        }\n        else {\n            this._originalCanvasSize = {\n                width: canvas.offsetWidth,\n                height: canvas.offsetHeight,\n            };\n            this._canvas = canvas;\n            this.canvasContext = this._canvas.getContext(\"webgl2\");\n            if (!this.canvasContext) {\n                this.canvasContext = this._canvas.getContext(\"webgl\");\n            }\n        }\n    };\n    return WebXRManagedOutputCanvas;\n}());\nexport { WebXRManagedOutputCanvas };\n//# sourceMappingURL=webXRManagedOutputCanvas.js.map","import { WebGLHardwareTexture } from \"../Engines/WebGL/webGLHardwareTexture.js\";\nimport { InternalTexture, InternalTextureSource } from \"../Materials/Textures/internalTexture.js\";\nimport { MultiviewRenderTarget } from \"../Materials/Textures/MultiviewRenderTarget.js\";\nimport { RenderTargetTexture } from \"../Materials/Textures/renderTargetTexture.js\";\n/**\n * Provides render target textures and other important rendering information for a given XRLayer.\n * @hidden\n */\nvar WebXRLayerRenderTargetTextureProvider = /** @class */ (function () {\n    function WebXRLayerRenderTargetTextureProvider(_scene, layerWrapper) {\n        this._scene = _scene;\n        this.layerWrapper = layerWrapper;\n        this._renderTargetTextures = new Array();\n        this._engine = _scene.getEngine();\n    }\n    WebXRLayerRenderTargetTextureProvider.prototype._createInternalTexture = function (textureSize, texture) {\n        var internalTexture = new InternalTexture(this._engine, InternalTextureSource.Unknown, true);\n        internalTexture.width = textureSize.width;\n        internalTexture.height = textureSize.height;\n        internalTexture._hardwareTexture = new WebGLHardwareTexture(texture, this._engine._gl);\n        internalTexture.isReady = true;\n        return internalTexture;\n    };\n    WebXRLayerRenderTargetTextureProvider.prototype._createRenderTargetTexture = function (width, height, framebuffer, colorTexture, depthStencilTexture, multiview) {\n        if (!this._engine) {\n            throw new Error(\"Engine is disposed\");\n        }\n        var textureSize = { width: width, height: height };\n        // Create render target texture from the internal texture\n        var renderTargetTexture = multiview ? new MultiviewRenderTarget(this._scene, textureSize) : new RenderTargetTexture(\"XR renderTargetTexture\", textureSize, this._scene);\n        var renderTargetWrapper = renderTargetTexture.renderTarget;\n        // Set the framebuffer, make sure it works in all scenarios - emulator, no layers and layers\n        if (framebuffer || !colorTexture) {\n            renderTargetWrapper._framebuffer = framebuffer;\n        }\n        // Create internal texture\n        if (colorTexture) {\n            if (multiview) {\n                renderTargetWrapper._colorTextureArray = colorTexture;\n            }\n            else {\n                var internalTexture = this._createInternalTexture(textureSize, colorTexture);\n                renderTargetWrapper.setTexture(internalTexture, 0);\n                renderTargetTexture._texture = internalTexture;\n            }\n        }\n        if (depthStencilTexture) {\n            if (multiview) {\n                renderTargetWrapper._depthStencilTextureArray = depthStencilTexture;\n            }\n            else {\n                renderTargetWrapper._depthStencilTexture = this._createInternalTexture(textureSize, depthStencilTexture);\n            }\n        }\n        renderTargetTexture.disableRescaling();\n        // Firefox reality fails if skipInitialClear is set to true, so make sure only modern XR implementations set it.\n        if (typeof XRWebGLBinding !== \"undefined\") {\n            // WebXR pre-clears textures\n            renderTargetTexture.skipInitialClear = true;\n        }\n        this._renderTargetTextures.push(renderTargetTexture);\n        return renderTargetTexture;\n    };\n    WebXRLayerRenderTargetTextureProvider.prototype._destroyRenderTargetTexture = function (renderTargetTexture) {\n        this._renderTargetTextures.splice(this._renderTargetTextures.indexOf(renderTargetTexture), 1);\n        renderTargetTexture.dispose();\n    };\n    WebXRLayerRenderTargetTextureProvider.prototype.getFramebufferDimensions = function () {\n        return this._framebufferDimensions;\n    };\n    WebXRLayerRenderTargetTextureProvider.prototype.dispose = function () {\n        this._renderTargetTextures.forEach(function (rtt) { return rtt.dispose(); });\n        this._renderTargetTextures.length = 0;\n    };\n    return WebXRLayerRenderTargetTextureProvider;\n}());\nexport { WebXRLayerRenderTargetTextureProvider };\n//# sourceMappingURL=webXRRenderTargetTextureProvider.js.map","import { Logger } from \"../Misc/logger.js\";\nimport { Observable } from \"../Misc/observable.js\";\nimport { WebXRManagedOutputCanvas, WebXRManagedOutputCanvasOptions } from \"./webXRManagedOutputCanvas.js\";\nimport { NativeXRLayerWrapper, NativeXRRenderTarget } from \"./native/nativeXRRenderTarget.js\";\nimport { WebXRWebGLLayerWrapper } from \"./webXRWebGLLayer.js\";\n/**\n * Manages an XRSession to work with Babylon's engine\n * @see https://doc.babylonjs.com/how_to/webxr_session_manager\n */\nvar WebXRSessionManager = /** @class */ (function () {\n    /**\n     * Constructs a WebXRSessionManager, this must be initialized within a user action before usage\n     * @param scene The scene which the session should be created for\n     */\n    function WebXRSessionManager(\n    /** The scene which the session should be created for */\n    scene) {\n        var _this = this;\n        this.scene = scene;\n        /** WebXR timestamp updated every frame */\n        this.currentTimestamp = -1;\n        /**\n         * Used just in case of a failure to initialize an immersive session.\n         * The viewer reference space is compensated using this height, creating a kind of \"viewer-floor\" reference space\n         */\n        this.defaultHeightCompensation = 1.7;\n        /**\n         * Fires every time a new xrFrame arrives which can be used to update the camera\n         */\n        this.onXRFrameObservable = new Observable();\n        /**\n         * Fires when the reference space changed\n         */\n        this.onXRReferenceSpaceChanged = new Observable();\n        /**\n         * Fires when the xr session is ended either by the device or manually done\n         */\n        this.onXRSessionEnded = new Observable();\n        /**\n         * Fires when the xr session is initialized: right after requestSession was called and returned with a successful result\n         */\n        this.onXRSessionInit = new Observable();\n        /**\n         * Are we currently in the XR loop?\n         */\n        this.inXRFrameLoop = false;\n        /**\n         * Are we in an XR session?\n         */\n        this.inXRSession = false;\n        this._engine = scene.getEngine();\n        this._onEngineDisposedObserver = this._engine.onDisposeObservable.addOnce(function () {\n            _this._engine = null;\n        });\n        scene.onDisposeObservable.addOnce(function () {\n            _this.dispose();\n        });\n    }\n    Object.defineProperty(WebXRSessionManager.prototype, \"referenceSpace\", {\n        /**\n         * The current reference space used in this session. This reference space can constantly change!\n         * It is mainly used to offset the camera's position.\n         */\n        get: function () {\n            return this._referenceSpace;\n        },\n        /**\n         * Set a new reference space and triggers the observable\n         */\n        set: function (newReferenceSpace) {\n            this._referenceSpace = newReferenceSpace;\n            this.onXRReferenceSpaceChanged.notifyObservers(this._referenceSpace);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebXRSessionManager.prototype, \"sessionMode\", {\n        /**\n         * The mode for the managed XR session\n         */\n        get: function () {\n            return this._sessionMode;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Disposes of the session manager\n     * This should be called explicitly by the dev, if required.\n     */\n    WebXRSessionManager.prototype.dispose = function () {\n        var _a;\n        // disposing without leaving XR? Exit XR first\n        if (this.inXRSession) {\n            this.exitXRAsync();\n        }\n        this.onXRFrameObservable.clear();\n        this.onXRSessionEnded.clear();\n        this.onXRReferenceSpaceChanged.clear();\n        this.onXRSessionInit.clear();\n        (_a = this._engine) === null || _a === void 0 ? void 0 : _a.onDisposeObservable.remove(this._onEngineDisposedObserver);\n        this._engine = null;\n    };\n    /**\n     * Stops the xrSession and restores the render loop\n     * @returns Promise which resolves after it exits XR\n     */\n    WebXRSessionManager.prototype.exitXRAsync = function () {\n        if (this.session && this.inXRSession) {\n            this.inXRSession = false;\n            return this.session.end().catch(function () {\n                Logger.Warn(\"Could not end XR session.\");\n            });\n        }\n        return Promise.resolve();\n    };\n    /**\n     * Attempts to set the framebuffer-size-normalized viewport to be rendered this frame for this view.\n     * In the event of a failure, the supplied viewport is not updated.\n     * @param viewport the viewport to which the view will be rendered\n     * @param view the view for which to set the viewport\n     * @returns whether the operation was successful\n     */\n    WebXRSessionManager.prototype.trySetViewportForView = function (viewport, view) {\n        var _a;\n        return ((_a = this._baseLayerRTTProvider) === null || _a === void 0 ? void 0 : _a.trySetViewportForView(viewport, view)) || false;\n    };\n    /**\n     * Gets the correct render target texture to be rendered this frame for this eye\n     * @param eye the eye for which to get the render target\n     * @returns the render target for the specified eye or null if not available\n     */\n    WebXRSessionManager.prototype.getRenderTargetTextureForEye = function (eye) {\n        var _a;\n        return ((_a = this._baseLayerRTTProvider) === null || _a === void 0 ? void 0 : _a.getRenderTargetTextureForEye(eye)) || null;\n    };\n    /**\n     * Gets the correct render target texture to be rendered this frame for this view\n     * @param view the view for which to get the render target\n     * @returns the render target for the specified view or null if not available\n     */\n    WebXRSessionManager.prototype.getRenderTargetTextureForView = function (view) {\n        var _a;\n        return ((_a = this._baseLayerRTTProvider) === null || _a === void 0 ? void 0 : _a.getRenderTargetTextureForView(view)) || null;\n    };\n    /**\n     * Creates a WebXRRenderTarget object for the XR session\n     * @param options optional options to provide when creating a new render target\n     * @returns a WebXR render target to which the session can render\n     */\n    WebXRSessionManager.prototype.getWebXRRenderTarget = function (options) {\n        var engine = this.scene.getEngine();\n        if (this._xrNavigator.xr.native) {\n            return new NativeXRRenderTarget(this);\n        }\n        else {\n            options = options || WebXRManagedOutputCanvasOptions.GetDefaults(engine);\n            options.canvasElement = options.canvasElement || engine.getRenderingCanvas() || undefined;\n            return new WebXRManagedOutputCanvas(this, options);\n        }\n    };\n    /**\n     * Initializes the manager\n     * After initialization enterXR can be called to start an XR session\n     * @returns Promise which resolves after it is initialized\n     */\n    WebXRSessionManager.prototype.initializeAsync = function () {\n        // Check if the browser supports webXR\n        this._xrNavigator = navigator;\n        if (!this._xrNavigator.xr) {\n            return Promise.reject(\"WebXR not available\");\n        }\n        return Promise.resolve();\n    };\n    /**\n     * Initializes an xr session\n     * @param xrSessionMode mode to initialize\n     * @param xrSessionInit defines optional and required values to pass to the session builder\n     * @returns a promise which will resolve once the session has been initialized\n     */\n    WebXRSessionManager.prototype.initializeSessionAsync = function (xrSessionMode, xrSessionInit) {\n        var _this = this;\n        if (xrSessionMode === void 0) { xrSessionMode = \"immersive-vr\"; }\n        if (xrSessionInit === void 0) { xrSessionInit = {}; }\n        return this._xrNavigator.xr.requestSession(xrSessionMode, xrSessionInit).then(function (session) {\n            _this.session = session;\n            _this._sessionMode = xrSessionMode;\n            _this.onXRSessionInit.notifyObservers(session);\n            _this.inXRSession = true;\n            // handle when the session is ended (By calling session.end or device ends its own session eg. pressing home button on phone)\n            _this.session.addEventListener(\"end\", function () {\n                var _a;\n                _this.inXRSession = false;\n                // Notify frame observers\n                _this.onXRSessionEnded.notifyObservers(null);\n                if (_this._engine) {\n                    // make sure dimensions object is restored\n                    _this._engine.framebufferDimensionsObject = null;\n                    // Restore frame buffer to avoid clear on xr framebuffer after session end\n                    _this._engine.restoreDefaultFramebuffer();\n                    // Need to restart render loop as after the session is ended the last request for new frame will never call callback\n                    _this._engine.customAnimationFrameRequester = null;\n                    _this._engine._renderLoop();\n                }\n                // Dispose render target textures.\n                // Only dispose on native because we can't destroy opaque textures on browser.\n                if (_this.isNative) {\n                    (_a = _this._baseLayerRTTProvider) === null || _a === void 0 ? void 0 : _a.dispose();\n                }\n                _this._baseLayerRTTProvider = null;\n                _this._baseLayerWrapper = null;\n            }, { once: true });\n            return _this.session;\n        });\n    };\n    /**\n     * Checks if a session would be supported for the creation options specified\n     * @param sessionMode session mode to check if supported eg. immersive-vr\n     * @returns A Promise that resolves to true if supported and false if not\n     */\n    WebXRSessionManager.prototype.isSessionSupportedAsync = function (sessionMode) {\n        return WebXRSessionManager.IsSessionSupportedAsync(sessionMode);\n    };\n    /**\n     * Resets the reference space to the one started the session\n     */\n    WebXRSessionManager.prototype.resetReferenceSpace = function () {\n        this.referenceSpace = this.baseReferenceSpace;\n    };\n    /**\n     * Starts rendering to the xr layer\n     */\n    WebXRSessionManager.prototype.runXRRenderLoop = function () {\n        var _this = this;\n        var _a;\n        if (!this.inXRSession || !this._engine) {\n            return;\n        }\n        // Tell the engine's render loop to be driven by the xr session's refresh rate and provide xr pose information\n        this._engine.customAnimationFrameRequester = {\n            requestAnimationFrame: this.session.requestAnimationFrame.bind(this.session),\n            renderFunction: function (timestamp, xrFrame) {\n                var _a;\n                if (!_this.inXRSession || !_this._engine) {\n                    return;\n                }\n                // Store the XR frame and timestamp in the session manager\n                _this.currentFrame = xrFrame;\n                _this.currentTimestamp = timestamp;\n                if (xrFrame) {\n                    _this.inXRFrameLoop = true;\n                    _this._engine.framebufferDimensionsObject = ((_a = _this._baseLayerRTTProvider) === null || _a === void 0 ? void 0 : _a.getFramebufferDimensions()) || null;\n                    _this.onXRFrameObservable.notifyObservers(xrFrame);\n                    _this._engine._renderLoop();\n                    _this._engine.framebufferDimensionsObject = null;\n                    _this.inXRFrameLoop = false;\n                }\n            },\n        };\n        this._engine.framebufferDimensionsObject = ((_a = this._baseLayerRTTProvider) === null || _a === void 0 ? void 0 : _a.getFramebufferDimensions()) || null;\n        // Stop window's animation frame and trigger sessions animation frame\n        if (typeof window !== \"undefined\" && window.cancelAnimationFrame) {\n            window.cancelAnimationFrame(this._engine._frameHandler);\n        }\n        this._engine._renderLoop();\n    };\n    /**\n     * Sets the reference space on the xr session\n     * @param referenceSpaceType space to set\n     * @returns a promise that will resolve once the reference space has been set\n     */\n    WebXRSessionManager.prototype.setReferenceSpaceTypeAsync = function (referenceSpaceType) {\n        var _this = this;\n        if (referenceSpaceType === void 0) { referenceSpaceType = \"local-floor\"; }\n        return this.session\n            .requestReferenceSpace(referenceSpaceType)\n            .then(function (referenceSpace) {\n            return referenceSpace;\n        }, function (rejectionReason) {\n            Logger.Error(\"XR.requestReferenceSpace failed for the following reason: \");\n            Logger.Error(rejectionReason);\n            Logger.Log('Defaulting to universally-supported \"viewer\" reference space type.');\n            return _this.session.requestReferenceSpace(\"viewer\").then(function (referenceSpace) {\n                var heightCompensation = new XRRigidTransform({ x: 0, y: -_this.defaultHeightCompensation, z: 0 });\n                return referenceSpace.getOffsetReferenceSpace(heightCompensation);\n            }, function (rejectionReason) {\n                Logger.Error(rejectionReason);\n                throw 'XR initialization failed: required \"viewer\" reference space type not supported.';\n            });\n        })\n            .then(function (referenceSpace) {\n            // create viewer reference space before setting the first reference space\n            return _this.session.requestReferenceSpace(\"viewer\").then(function (viewerReferenceSpace) {\n                _this.viewerReferenceSpace = viewerReferenceSpace;\n                return referenceSpace;\n            });\n        })\n            .then(function (referenceSpace) {\n            // initialize the base and offset (currently the same)\n            _this.referenceSpace = _this.baseReferenceSpace = referenceSpace;\n            return _this.referenceSpace;\n        });\n    };\n    /**\n     * Updates the render state of the session.\n     * Note that this is deprecated in favor of WebXRSessionManager.updateRenderState().\n     * @param state state to set\n     * @returns a promise that resolves once the render state has been updated\n     * @deprecated\n     */\n    WebXRSessionManager.prototype.updateRenderStateAsync = function (state) {\n        return Promise.resolve(this.session.updateRenderState(state));\n    };\n    /**\n     * @param baseLayerWrapper\n     * @hidden\n     */\n    WebXRSessionManager.prototype._setBaseLayerWrapper = function (baseLayerWrapper) {\n        var _a, _b;\n        if (this.isNative) {\n            (_a = this._baseLayerRTTProvider) === null || _a === void 0 ? void 0 : _a.dispose();\n        }\n        this._baseLayerWrapper = baseLayerWrapper;\n        this._baseLayerRTTProvider = ((_b = this._baseLayerWrapper) === null || _b === void 0 ? void 0 : _b.createRenderTargetTextureProvider(this)) || null;\n    };\n    /**\n     * Updates the render state of the session\n     * @param state state to set\n     */\n    WebXRSessionManager.prototype.updateRenderState = function (state) {\n        if (state.baseLayer) {\n            this._setBaseLayerWrapper(this.isNative ? new NativeXRLayerWrapper(state.baseLayer) : new WebXRWebGLLayerWrapper(state.baseLayer));\n        }\n        this.session.updateRenderState(state);\n    };\n    /**\n     * Returns a promise that resolves with a boolean indicating if the provided session mode is supported by this browser\n     * @param sessionMode defines the session to test\n     * @returns a promise with boolean as final value\n     */\n    WebXRSessionManager.IsSessionSupportedAsync = function (sessionMode) {\n        if (!navigator.xr) {\n            return Promise.resolve(false);\n        }\n        // When the specs are final, remove supportsSession!\n        var functionToUse = navigator.xr.isSessionSupported || navigator.xr.supportsSession;\n        if (!functionToUse) {\n            return Promise.resolve(false);\n        }\n        else {\n            return functionToUse\n                .call(navigator.xr, sessionMode)\n                .then(function (result) {\n                var returnValue = typeof result === \"undefined\" ? true : result;\n                return Promise.resolve(returnValue);\n            })\n                .catch(function (e) {\n                Logger.Warn(e);\n                return Promise.resolve(false);\n            });\n        }\n    };\n    Object.defineProperty(WebXRSessionManager.prototype, \"isNative\", {\n        /**\n         * Returns true if Babylon.js is using the BabylonNative backend, otherwise false\n         */\n        get: function () {\n            var _a;\n            return (_a = this._xrNavigator.xr.native) !== null && _a !== void 0 ? _a : false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebXRSessionManager.prototype, \"currentFrameRate\", {\n        /**\n         * The current frame rate as reported by the device\n         */\n        get: function () {\n            var _a;\n            return (_a = this.session) === null || _a === void 0 ? void 0 : _a.frameRate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebXRSessionManager.prototype, \"supportedFrameRates\", {\n        /**\n         * A list of supported frame rates (only available in-session!\n         */\n        get: function () {\n            var _a;\n            return (_a = this.session) === null || _a === void 0 ? void 0 : _a.supportedFrameRates;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Set the framerate of the session.\n     * @param rate the new framerate. This value needs to be in the supportedFrameRates array\n     * @returns a promise that resolves once the framerate has been set\n     */\n    WebXRSessionManager.prototype.updateTargetFrameRate = function (rate) {\n        return this.session.updateTargetFrameRate(rate);\n    };\n    /**\n     * Run a callback in the xr render loop\n     * @param callback the callback to call when in XR Frame\n     * @param ignoreIfNotInSession if no session is currently running, run it first thing on the next session\n     */\n    WebXRSessionManager.prototype.runInXRFrame = function (callback, ignoreIfNotInSession) {\n        if (ignoreIfNotInSession === void 0) { ignoreIfNotInSession = true; }\n        if (this.inXRFrameLoop) {\n            callback();\n        }\n        else if (this.inXRSession || !ignoreIfNotInSession) {\n            this.onXRFrameObservable.addOnce(callback);\n        }\n    };\n    Object.defineProperty(WebXRSessionManager.prototype, \"isFixedFoveationSupported\", {\n        /**\n         * Check if fixed foveation is supported on this device\n         */\n        get: function () {\n            var _a;\n            return ((_a = this._baseLayerWrapper) === null || _a === void 0 ? void 0 : _a.isFixedFoveationSupported) || false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebXRSessionManager.prototype, \"fixedFoveation\", {\n        /**\n         * Get the fixed foveation currently set, as specified by the webxr specs\n         * If this returns null, then fixed foveation is not supported\n         */\n        get: function () {\n            var _a;\n            return ((_a = this._baseLayerWrapper) === null || _a === void 0 ? void 0 : _a.fixedFoveation) || null;\n        },\n        /**\n         * Set the fixed foveation to the specified value, as specified by the webxr specs\n         * This value will be normalized to be between 0 and 1, 1 being max foveation, 0 being no foveation\n         */\n        set: function (value) {\n            var val = Math.max(0, Math.min(1, value || 0));\n            if (this._baseLayerWrapper) {\n                this._baseLayerWrapper.fixedFoveation = val;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return WebXRSessionManager;\n}());\nexport { WebXRSessionManager };\n//# sourceMappingURL=webXRSessionManager.js.map","/**\n * States of the webXR experience\n */\nexport var WebXRState;\n(function (WebXRState) {\n    /**\n     * Transitioning to being in XR mode\n     */\n    WebXRState[WebXRState[\"ENTERING_XR\"] = 0] = \"ENTERING_XR\";\n    /**\n     * Transitioning to non XR mode\n     */\n    WebXRState[WebXRState[\"EXITING_XR\"] = 1] = \"EXITING_XR\";\n    /**\n     * In XR mode and presenting\n     */\n    WebXRState[WebXRState[\"IN_XR\"] = 2] = \"IN_XR\";\n    /**\n     * Not entered XR mode\n     */\n    WebXRState[WebXRState[\"NOT_IN_XR\"] = 3] = \"NOT_IN_XR\";\n})(WebXRState || (WebXRState = {}));\n/**\n * The state of the XR camera's tracking\n */\nexport var WebXRTrackingState;\n(function (WebXRTrackingState) {\n    /**\n     * No transformation received, device is not being tracked\n     */\n    WebXRTrackingState[WebXRTrackingState[\"NOT_TRACKING\"] = 0] = \"NOT_TRACKING\";\n    /**\n     * Tracking lost - using emulated position\n     */\n    WebXRTrackingState[WebXRTrackingState[\"TRACKING_LOST\"] = 1] = \"TRACKING_LOST\";\n    /**\n     * Transformation tracking works normally\n     */\n    WebXRTrackingState[WebXRTrackingState[\"TRACKING\"] = 2] = \"TRACKING\";\n})(WebXRTrackingState || (WebXRTrackingState = {}));\n//# sourceMappingURL=webXRTypes.js.map","import { __extends } from \"tslib\";\nimport { WebXRLayerWrapper } from \"./webXRLayerWrapper.js\";\nimport { WebXRLayerRenderTargetTextureProvider } from \"./webXRRenderTargetTextureProvider.js\";\n/**\n * Wraps xr webgl layers.\n * @hidden\n */\nvar WebXRWebGLLayerWrapper = /** @class */ (function (_super) {\n    __extends(WebXRWebGLLayerWrapper, _super);\n    /**\n     * @param layer is the layer to be wrapped.\n     * @returns a new WebXRLayerWrapper wrapping the provided XRWebGLLayer.\n     */\n    function WebXRWebGLLayerWrapper(layer) {\n        var _this = _super.call(this, function () { return layer.framebufferWidth; }, function () { return layer.framebufferHeight; }, layer, \"XRWebGLLayer\", function (sessionManager) { return new WebXRWebGLLayerRenderTargetTextureProvider(sessionManager.scene, _this); }) || this;\n        _this.layer = layer;\n        return _this;\n    }\n    return WebXRWebGLLayerWrapper;\n}(WebXRLayerWrapper));\nexport { WebXRWebGLLayerWrapper };\n/**\n * Provides render target textures and other important rendering information for a given XRWebGLLayer.\n * @hidden\n */\nvar WebXRWebGLLayerRenderTargetTextureProvider = /** @class */ (function (_super) {\n    __extends(WebXRWebGLLayerRenderTargetTextureProvider, _super);\n    function WebXRWebGLLayerRenderTargetTextureProvider(scene, layerWrapper) {\n        var _this = _super.call(this, scene, layerWrapper) || this;\n        _this.layerWrapper = layerWrapper;\n        _this._layer = layerWrapper.layer;\n        _this._framebufferDimensions = {\n            framebufferWidth: _this._layer.framebufferWidth,\n            framebufferHeight: _this._layer.framebufferHeight,\n        };\n        return _this;\n    }\n    WebXRWebGLLayerRenderTargetTextureProvider.prototype.trySetViewportForView = function (viewport, view) {\n        var xrViewport = this._layer.getViewport(view);\n        var framebufferWidth = this._framebufferDimensions.framebufferWidth;\n        var framebufferHeight = this._framebufferDimensions.framebufferHeight;\n        viewport.x = xrViewport.x / framebufferWidth;\n        viewport.y = xrViewport.y / framebufferHeight;\n        viewport.width = xrViewport.width / framebufferWidth;\n        viewport.height = xrViewport.height / framebufferHeight;\n        return true;\n    };\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    WebXRWebGLLayerRenderTargetTextureProvider.prototype.getRenderTargetTextureForEye = function (eye) {\n        var layerWidth = this._layer.framebufferWidth;\n        var layerHeight = this._layer.framebufferHeight;\n        var framebuffer = this._layer.framebuffer;\n        if (!this._rtt ||\n            layerWidth !== this._framebufferDimensions.framebufferWidth ||\n            layerHeight !== this._framebufferDimensions.framebufferHeight ||\n            framebuffer !== this._framebuffer) {\n            this._rtt = this._createRenderTargetTexture(layerWidth, layerHeight, framebuffer);\n            this._framebufferDimensions.framebufferWidth = layerWidth;\n            this._framebufferDimensions.framebufferHeight = layerHeight;\n            this._framebuffer = framebuffer;\n        }\n        return this._rtt;\n    };\n    WebXRWebGLLayerRenderTargetTextureProvider.prototype.getRenderTargetTextureForView = function (view) {\n        return this.getRenderTargetTextureForEye(view.eye);\n    };\n    return WebXRWebGLLayerRenderTargetTextureProvider;\n}(WebXRLayerRenderTargetTextureProvider));\nexport { WebXRWebGLLayerRenderTargetTextureProvider };\n//# sourceMappingURL=webXRWebGLLayer.js.map","/**\n * Base class of the scene acting as a container for the different elements composing a scene.\n * This class is dynamically extended by the different components of the scene increasing\n * flexibility and reducing coupling\n */\nvar AbstractScene = /** @class */ (function () {\n    function AbstractScene() {\n        /**\n         * Gets the list of root nodes (ie. nodes with no parent)\n         */\n        this.rootNodes = new Array();\n        /** All of the cameras added to this scene\n         * @see https://doc.babylonjs.com/babylon101/cameras\n         */\n        this.cameras = new Array();\n        /**\n         * All of the lights added to this scene\n         * @see https://doc.babylonjs.com/babylon101/lights\n         */\n        this.lights = new Array();\n        /**\n         * All of the (abstract) meshes added to this scene\n         */\n        this.meshes = new Array();\n        /**\n         * The list of skeletons added to the scene\n         * @see https://doc.babylonjs.com/how_to/how_to_use_bones_and_skeletons\n         */\n        this.skeletons = new Array();\n        /**\n         * All of the particle systems added to this scene\n         * @see https://doc.babylonjs.com/babylon101/particles\n         */\n        this.particleSystems = new Array();\n        /**\n         * Gets a list of Animations associated with the scene\n         */\n        this.animations = [];\n        /**\n         * All of the animation groups added to this scene\n         * @see https://doc.babylonjs.com/divingDeeper/animation/groupAnimations\n         */\n        this.animationGroups = new Array();\n        /**\n         * All of the multi-materials added to this scene\n         * @see https://doc.babylonjs.com/how_to/multi_materials\n         */\n        this.multiMaterials = new Array();\n        /**\n         * All of the materials added to this scene\n         * In the context of a Scene, it is not supposed to be modified manually.\n         * Any addition or removal should be done using the addMaterial and removeMaterial Scene methods.\n         * Note also that the order of the Material within the array is not significant and might change.\n         * @see https://doc.babylonjs.com/babylon101/materials\n         */\n        this.materials = new Array();\n        /**\n         * The list of morph target managers added to the scene\n         * @see https://doc.babylonjs.com/how_to/how_to_dynamically_morph_a_mesh\n         */\n        this.morphTargetManagers = new Array();\n        /**\n         * The list of geometries used in the scene.\n         */\n        this.geometries = new Array();\n        /**\n         * All of the transform nodes added to this scene\n         * In the context of a Scene, it is not supposed to be modified manually.\n         * Any addition or removal should be done using the addTransformNode and removeTransformNode Scene methods.\n         * Note also that the order of the TransformNode within the array is not significant and might change.\n         * @see https://doc.babylonjs.com/how_to/transformnode\n         */\n        this.transformNodes = new Array();\n        /**\n         * ActionManagers available on the scene.\n         * @deprecated\n         */\n        this.actionManagers = new Array();\n        /**\n         * Textures to keep.\n         */\n        this.textures = new Array();\n        /** @hidden */\n        this._environmentTexture = null;\n        /**\n         * The list of postprocesses added to the scene\n         */\n        this.postProcesses = new Array();\n    }\n    /**\n     * Adds a parser in the list of available ones\n     * @param name Defines the name of the parser\n     * @param parser Defines the parser to add\n     */\n    AbstractScene.AddParser = function (name, parser) {\n        this._BabylonFileParsers[name] = parser;\n    };\n    /**\n     * Gets a general parser from the list of available ones\n     * @param name Defines the name of the parser\n     * @returns the requested parser or null\n     */\n    AbstractScene.GetParser = function (name) {\n        if (this._BabylonFileParsers[name]) {\n            return this._BabylonFileParsers[name];\n        }\n        return null;\n    };\n    /**\n     * Adds n individual parser in the list of available ones\n     * @param name Defines the name of the parser\n     * @param parser Defines the parser to add\n     */\n    AbstractScene.AddIndividualParser = function (name, parser) {\n        this._IndividualBabylonFileParsers[name] = parser;\n    };\n    /**\n     * Gets an individual parser from the list of available ones\n     * @param name Defines the name of the parser\n     * @returns the requested parser or null\n     */\n    AbstractScene.GetIndividualParser = function (name) {\n        if (this._IndividualBabylonFileParsers[name]) {\n            return this._IndividualBabylonFileParsers[name];\n        }\n        return null;\n    };\n    /**\n     * Parser json data and populate both a scene and its associated container object\n     * @param jsonData Defines the data to parse\n     * @param scene Defines the scene to parse the data for\n     * @param container Defines the container attached to the parsing sequence\n     * @param rootUrl Defines the root url of the data\n     */\n    AbstractScene.Parse = function (jsonData, scene, container, rootUrl) {\n        for (var parserName in this._BabylonFileParsers) {\n            if (Object.prototype.hasOwnProperty.call(this._BabylonFileParsers, parserName)) {\n                this._BabylonFileParsers[parserName](jsonData, scene, container, rootUrl);\n            }\n        }\n    };\n    Object.defineProperty(AbstractScene.prototype, \"environmentTexture\", {\n        /**\n         * Texture used in all pbr material as the reflection texture.\n         * As in the majority of the scene they are the same (exception for multi room and so on),\n         * this is easier to reference from here than from all the materials.\n         */\n        get: function () {\n            return this._environmentTexture;\n        },\n        set: function (value) {\n            this._environmentTexture = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * @returns all meshes, lights, cameras, transformNodes and bones\n     */\n    AbstractScene.prototype.getNodes = function () {\n        var nodes = new Array();\n        nodes = nodes.concat(this.meshes);\n        nodes = nodes.concat(this.lights);\n        nodes = nodes.concat(this.cameras);\n        nodes = nodes.concat(this.transformNodes); // dummies\n        this.skeletons.forEach(function (skeleton) { return (nodes = nodes.concat(skeleton.bones)); });\n        return nodes;\n    };\n    /**\n     * Stores the list of available parsers in the application.\n     */\n    AbstractScene._BabylonFileParsers = {};\n    /**\n     * Stores the list of available individual parsers in the application.\n     */\n    AbstractScene._IndividualBabylonFileParsers = {};\n    return AbstractScene;\n}());\nexport { AbstractScene };\n//# sourceMappingURL=abstractScene.js.map","import { __extends } from \"tslib\";\nimport { AbstractScene } from \"./abstractScene.js\";\nimport { Mesh } from \"./Meshes/mesh.js\";\nimport { Logger } from \"./Misc/logger.js\";\nimport { EngineStore } from \"./Engines/engineStore.js\";\n/**\n * Set of assets to keep when moving a scene into an asset container.\n */\nvar KeepAssets = /** @class */ (function (_super) {\n    __extends(KeepAssets, _super);\n    function KeepAssets() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return KeepAssets;\n}(AbstractScene));\nexport { KeepAssets };\n/**\n * Class used to store the output of the AssetContainer.instantiateAllMeshesToScene function\n */\nvar InstantiatedEntries = /** @class */ (function () {\n    function InstantiatedEntries() {\n        /**\n         * List of new root nodes (eg. nodes with no parent)\n         */\n        this.rootNodes = [];\n        /**\n         * List of new skeletons\n         */\n        this.skeletons = [];\n        /**\n         * List of new animation groups\n         */\n        this.animationGroups = [];\n    }\n    return InstantiatedEntries;\n}());\nexport { InstantiatedEntries };\n/**\n * Container with a set of assets that can be added or removed from a scene.\n */\nvar AssetContainer = /** @class */ (function (_super) {\n    __extends(AssetContainer, _super);\n    /**\n     * Instantiates an AssetContainer.\n     * @param scene The scene the AssetContainer belongs to.\n     */\n    function AssetContainer(scene) {\n        var _this = _super.call(this) || this;\n        _this._wasAddedToScene = false;\n        scene = scene || EngineStore.LastCreatedScene;\n        if (!scene) {\n            return _this;\n        }\n        _this.scene = scene;\n        _this[\"sounds\"] = [];\n        _this[\"effectLayers\"] = [];\n        _this[\"layers\"] = [];\n        _this[\"lensFlareSystems\"] = [];\n        _this[\"proceduralTextures\"] = [];\n        _this[\"reflectionProbes\"] = [];\n        scene.onDisposeObservable.add(function () {\n            if (!_this._wasAddedToScene) {\n                _this.dispose();\n            }\n        });\n        _this._onContextRestoredObserver = scene.getEngine().onContextRestoredObservable.add(function () {\n            for (var _i = 0, _a = _this.geometries; _i < _a.length; _i++) {\n                var geometry = _a[_i];\n                geometry._rebuild();\n            }\n            for (var _b = 0, _c = _this.meshes; _b < _c.length; _b++) {\n                var mesh = _c[_b];\n                mesh._rebuild();\n            }\n            for (var _d = 0, _e = _this.particleSystems; _d < _e.length; _d++) {\n                var system = _e[_d];\n                system.rebuild();\n            }\n            for (var _f = 0, _g = _this.textures; _f < _g.length; _f++) {\n                var texture = _g[_f];\n                texture._rebuild();\n            }\n        });\n        return _this;\n    }\n    /**\n     * Instantiate or clone all meshes and add the new ones to the scene.\n     * Skeletons and animation groups will all be cloned\n     * @param nameFunction defines an optional function used to get new names for clones\n     * @param cloneMaterials defines an optional boolean that defines if materials must be cloned as well (false by default)\n     * @param options defines an optional list of options to control how to instantiate / clone models\n     * @param options.doNotInstantiate defines if the model must be instantiated or just cloned\n     * @param options.predicate defines a predicate used to filter whih mesh to instantiate/clone\n     * @returns a list of rootNodes, skeletons and animation groups that were duplicated\n     */\n    AssetContainer.prototype.instantiateModelsToScene = function (nameFunction, cloneMaterials, options) {\n        var _this = this;\n        if (cloneMaterials === void 0) { cloneMaterials = false; }\n        var convertionMap = {};\n        var storeMap = {};\n        var result = new InstantiatedEntries();\n        var alreadySwappedSkeletons = [];\n        var alreadySwappedMaterials = [];\n        if (!options) {\n            options = {\n                doNotInstantiate: true,\n            };\n        }\n        var onClone = function (source, clone) {\n            convertionMap[source.uniqueId] = clone.uniqueId;\n            storeMap[clone.uniqueId] = clone;\n            if (nameFunction) {\n                clone.name = nameFunction(source.name);\n            }\n            if (clone instanceof Mesh) {\n                var clonedMesh = clone;\n                if (clonedMesh.morphTargetManager) {\n                    var oldMorphTargetManager = source.morphTargetManager;\n                    clonedMesh.morphTargetManager = oldMorphTargetManager.clone();\n                    for (var index = 0; index < oldMorphTargetManager.numTargets; index++) {\n                        var oldTarget = oldMorphTargetManager.getTarget(index);\n                        var newTarget = clonedMesh.morphTargetManager.getTarget(index);\n                        convertionMap[oldTarget.uniqueId] = newTarget.uniqueId;\n                        storeMap[newTarget.uniqueId] = newTarget;\n                    }\n                }\n            }\n        };\n        this.transformNodes.forEach(function (o) {\n            if (options && options.predicate && !options.predicate(o)) {\n                return;\n            }\n            if (!o.parent) {\n                var newOne = o.instantiateHierarchy(null, options, function (source, clone) {\n                    onClone(source, clone);\n                });\n                if (newOne) {\n                    result.rootNodes.push(newOne);\n                }\n            }\n        });\n        this.meshes.forEach(function (o) {\n            if (options && options.predicate && !options.predicate(o)) {\n                return;\n            }\n            if (!o.parent) {\n                var newOne = o.instantiateHierarchy(null, options, function (source, clone) {\n                    onClone(source, clone);\n                    if (clone.material) {\n                        var mesh = clone;\n                        if (mesh.material) {\n                            if (cloneMaterials) {\n                                var sourceMaterial = source.material;\n                                if (alreadySwappedMaterials.indexOf(sourceMaterial) === -1) {\n                                    var swap = sourceMaterial.clone(nameFunction ? nameFunction(sourceMaterial.name) : \"Clone of \" + sourceMaterial.name);\n                                    alreadySwappedMaterials.push(sourceMaterial);\n                                    convertionMap[sourceMaterial.uniqueId] = swap.uniqueId;\n                                    storeMap[swap.uniqueId] = swap;\n                                    if (sourceMaterial.getClassName() === \"MultiMaterial\") {\n                                        var multi = sourceMaterial;\n                                        for (var _i = 0, _a = multi.subMaterials; _i < _a.length; _i++) {\n                                            var material = _a[_i];\n                                            if (!material) {\n                                                continue;\n                                            }\n                                            swap = material.clone(nameFunction ? nameFunction(material.name) : \"Clone of \" + material.name);\n                                            alreadySwappedMaterials.push(material);\n                                            convertionMap[material.uniqueId] = swap.uniqueId;\n                                            storeMap[swap.uniqueId] = swap;\n                                        }\n                                        multi.subMaterials = multi.subMaterials.map(function (m) { return m && storeMap[convertionMap[m.uniqueId]]; });\n                                    }\n                                }\n                                if (mesh.getClassName() !== \"InstancedMesh\") {\n                                    mesh.material = storeMap[convertionMap[sourceMaterial.uniqueId]];\n                                }\n                            }\n                            else {\n                                if (mesh.material.getClassName() === \"MultiMaterial\") {\n                                    if (_this.scene.multiMaterials.indexOf(mesh.material) === -1) {\n                                        _this.scene.addMultiMaterial(mesh.material);\n                                    }\n                                }\n                                else {\n                                    if (_this.scene.materials.indexOf(mesh.material) === -1) {\n                                        _this.scene.addMaterial(mesh.material);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                });\n                if (newOne) {\n                    result.rootNodes.push(newOne);\n                }\n            }\n        });\n        this.skeletons.forEach(function (s) {\n            if (options && options.predicate && !options.predicate(s)) {\n                return;\n            }\n            var clone = s.clone(nameFunction ? nameFunction(s.name) : \"Clone of \" + s.name);\n            for (var _i = 0, _a = _this.meshes; _i < _a.length; _i++) {\n                var m = _a[_i];\n                if (m.skeleton === s && !m.isAnInstance) {\n                    var copy = storeMap[convertionMap[m.uniqueId]];\n                    if (copy.isAnInstance) {\n                        continue;\n                    }\n                    copy.skeleton = clone;\n                    if (alreadySwappedSkeletons.indexOf(clone) !== -1) {\n                        continue;\n                    }\n                    alreadySwappedSkeletons.push(clone);\n                    // Check if bones are mesh linked\n                    for (var _b = 0, _c = clone.bones; _b < _c.length; _b++) {\n                        var bone = _c[_b];\n                        if (bone._linkedTransformNode) {\n                            bone._linkedTransformNode = storeMap[convertionMap[bone._linkedTransformNode.uniqueId]];\n                        }\n                    }\n                }\n            }\n            result.skeletons.push(clone);\n        });\n        this.animationGroups.forEach(function (o) {\n            if (options && options.predicate && !options.predicate(o)) {\n                return;\n            }\n            var clone = o.clone(nameFunction ? nameFunction(o.name) : \"Clone of \" + o.name, function (oldTarget) {\n                var newTarget = storeMap[convertionMap[oldTarget.uniqueId]];\n                return newTarget || oldTarget;\n            });\n            result.animationGroups.push(clone);\n        });\n        return result;\n    };\n    /**\n     * Adds all the assets from the container to the scene.\n     */\n    AssetContainer.prototype.addAllToScene = function () {\n        if (this._wasAddedToScene) {\n            return;\n        }\n        this._wasAddedToScene = true;\n        this.addToScene(null);\n        if (this.environmentTexture) {\n            this.scene.environmentTexture = this.environmentTexture;\n        }\n        for (var _i = 0, _a = this.scene._serializableComponents; _i < _a.length; _i++) {\n            var component = _a[_i];\n            component.addFromContainer(this);\n        }\n        this.scene.getEngine().onContextRestoredObservable.remove(this._onContextRestoredObserver);\n        this._onContextRestoredObserver = null;\n    };\n    /**\n     * Adds assets from the container to the scene.\n     * @param predicate defines a predicate used to select which entity will be added (can be null)\n     */\n    AssetContainer.prototype.addToScene = function (predicate) {\n        var _this = this;\n        if (predicate === void 0) { predicate = null; }\n        this.cameras.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.addCamera(o);\n        });\n        this.lights.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.addLight(o);\n        });\n        this.meshes.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.addMesh(o);\n        });\n        this.skeletons.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.addSkeleton(o);\n        });\n        this.animations.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.addAnimation(o);\n        });\n        this.animationGroups.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.addAnimationGroup(o);\n        });\n        this.multiMaterials.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.addMultiMaterial(o);\n        });\n        this.materials.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.addMaterial(o);\n        });\n        this.morphTargetManagers.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.addMorphTargetManager(o);\n        });\n        this.geometries.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.addGeometry(o);\n        });\n        this.transformNodes.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.addTransformNode(o);\n        });\n        this.actionManagers.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.addActionManager(o);\n        });\n        this.textures.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.addTexture(o);\n        });\n        this.reflectionProbes.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.addReflectionProbe(o);\n        });\n    };\n    /**\n     * Removes all the assets in the container from the scene\n     */\n    AssetContainer.prototype.removeAllFromScene = function () {\n        this._wasAddedToScene = false;\n        this.removeFromScene(null);\n        if (this.environmentTexture === this.scene.environmentTexture) {\n            this.scene.environmentTexture = null;\n        }\n        for (var _i = 0, _a = this.scene._serializableComponents; _i < _a.length; _i++) {\n            var component = _a[_i];\n            component.removeFromContainer(this);\n        }\n    };\n    /**\n     * Removes assets in the container from the scene\n     * @param predicate defines a predicate used to select which entity will be added (can be null)\n     */\n    AssetContainer.prototype.removeFromScene = function (predicate) {\n        var _this = this;\n        if (predicate === void 0) { predicate = null; }\n        this.cameras.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.removeCamera(o);\n        });\n        this.lights.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.removeLight(o);\n        });\n        this.meshes.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.removeMesh(o);\n        });\n        this.skeletons.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.removeSkeleton(o);\n        });\n        this.animations.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.removeAnimation(o);\n        });\n        this.animationGroups.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.removeAnimationGroup(o);\n        });\n        this.multiMaterials.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.removeMultiMaterial(o);\n        });\n        this.materials.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.removeMaterial(o);\n        });\n        this.morphTargetManagers.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.removeMorphTargetManager(o);\n        });\n        this.geometries.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.removeGeometry(o);\n        });\n        this.transformNodes.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.removeTransformNode(o);\n        });\n        this.actionManagers.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.removeActionManager(o);\n        });\n        this.textures.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.removeTexture(o);\n        });\n        this.reflectionProbes.forEach(function (o) {\n            if (predicate && !predicate(o)) {\n                return;\n            }\n            _this.scene.removeReflectionProbe(o);\n        });\n    };\n    /**\n     * Disposes all the assets in the container\n     */\n    AssetContainer.prototype.dispose = function () {\n        this.cameras.slice(0).forEach(function (o) {\n            o.dispose();\n        });\n        this.cameras = [];\n        this.lights.slice(0).forEach(function (o) {\n            o.dispose();\n        });\n        this.lights = [];\n        this.meshes.slice(0).forEach(function (o) {\n            o.dispose();\n        });\n        this.meshes = [];\n        this.skeletons.slice(0).forEach(function (o) {\n            o.dispose();\n        });\n        this.skeletons = [];\n        this.animationGroups.slice(0).forEach(function (o) {\n            o.dispose();\n        });\n        this.animationGroups = [];\n        this.multiMaterials.slice(0).forEach(function (o) {\n            o.dispose();\n        });\n        this.multiMaterials = [];\n        this.materials.slice(0).forEach(function (o) {\n            o.dispose();\n        });\n        this.materials = [];\n        this.geometries.slice(0).forEach(function (o) {\n            o.dispose();\n        });\n        this.geometries = [];\n        this.transformNodes.slice(0).forEach(function (o) {\n            o.dispose();\n        });\n        this.transformNodes = [];\n        this.actionManagers.slice(0).forEach(function (o) {\n            o.dispose();\n        });\n        this.actionManagers = [];\n        this.textures.slice(0).forEach(function (o) {\n            o.dispose();\n        });\n        this.textures = [];\n        this.reflectionProbes.slice(0).forEach(function (o) {\n            o.dispose();\n        });\n        this.reflectionProbes = [];\n        if (this.environmentTexture) {\n            this.environmentTexture.dispose();\n            this.environmentTexture = null;\n        }\n        for (var _i = 0, _a = this.scene._serializableComponents; _i < _a.length; _i++) {\n            var component = _a[_i];\n            component.removeFromContainer(this, true);\n        }\n        if (this._onContextRestoredObserver) {\n            this.scene.getEngine().onContextRestoredObservable.remove(this._onContextRestoredObserver);\n            this._onContextRestoredObserver = null;\n        }\n    };\n    AssetContainer.prototype._moveAssets = function (sourceAssets, targetAssets, keepAssets) {\n        if (!sourceAssets) {\n            return;\n        }\n        for (var _i = 0, sourceAssets_1 = sourceAssets; _i < sourceAssets_1.length; _i++) {\n            var asset = sourceAssets_1[_i];\n            var move = true;\n            if (keepAssets) {\n                for (var _a = 0, keepAssets_1 = keepAssets; _a < keepAssets_1.length; _a++) {\n                    var keepAsset = keepAssets_1[_a];\n                    if (asset === keepAsset) {\n                        move = false;\n                        break;\n                    }\n                }\n            }\n            if (move) {\n                targetAssets.push(asset);\n                asset._parentContainer = this;\n            }\n        }\n    };\n    /**\n     * Removes all the assets contained in the scene and adds them to the container.\n     * @param keepAssets Set of assets to keep in the scene. (default: empty)\n     */\n    AssetContainer.prototype.moveAllFromScene = function (keepAssets) {\n        this._wasAddedToScene = false;\n        if (keepAssets === undefined) {\n            keepAssets = new KeepAssets();\n        }\n        for (var key in this) {\n            if (Object.prototype.hasOwnProperty.call(this, key)) {\n                this[key] = this[key] || (key === \"environmentTexture\" ? null : []);\n                this._moveAssets(this.scene[key], this[key], keepAssets[key]);\n            }\n        }\n        this.environmentTexture = this.scene.environmentTexture;\n        this.removeAllFromScene();\n    };\n    /**\n     * Adds all meshes in the asset container to a root mesh that can be used to position all the contained meshes. The root mesh is then added to the front of the meshes in the assetContainer.\n     * @returns the root mesh\n     */\n    AssetContainer.prototype.createRootMesh = function () {\n        var rootMesh = new Mesh(\"assetContainerRootMesh\", this.scene);\n        this.meshes.forEach(function (m) {\n            if (!m.parent) {\n                rootMesh.addChild(m);\n            }\n        });\n        this.meshes.unshift(rootMesh);\n        return rootMesh;\n    };\n    /**\n     * Merge animations (direct and animation groups) from this asset container into a scene\n     * @param scene is the instance of BABYLON.Scene to append to (default: last created scene)\n     * @param animatables set of animatables to retarget to a node from the scene\n     * @param targetConverter defines a function used to convert animation targets from the asset container to the scene (default: search node by name)\n     * @returns an array of the new AnimationGroup added to the scene (empty array if none)\n     */\n    AssetContainer.prototype.mergeAnimationsTo = function (scene, animatables, targetConverter) {\n        if (scene === void 0) { scene = EngineStore.LastCreatedScene; }\n        if (targetConverter === void 0) { targetConverter = null; }\n        if (!scene) {\n            Logger.Error(\"No scene available to merge animations to\");\n            return [];\n        }\n        var _targetConverter = targetConverter\n            ? targetConverter\n            : function (target) {\n                var node = null;\n                var targetProperty = target.animations.length ? target.animations[0].targetProperty : \"\";\n                /*\n              BabylonJS adds special naming to targets that are children of nodes.\n              This name attempts to remove that special naming to get the parent nodes name in case the target\n              can't be found in the node tree\n\n              Ex: Torso_primitive0 likely points to a Mesh primitive. We take away primitive0 and are left with \"Torso\" which is the name\n              of the primitive's parent.\n          */\n                var name = target.name.split(\".\").join(\"\").split(\"_primitive\")[0];\n                switch (targetProperty) {\n                    case \"position\":\n                    case \"rotationQuaternion\":\n                        node = scene.getTransformNodeByName(target.name) || scene.getTransformNodeByName(name);\n                        break;\n                    case \"influence\":\n                        node = scene.getMorphTargetByName(target.name) || scene.getMorphTargetByName(name);\n                        break;\n                    default:\n                        node = scene.getNodeByName(target.name) || scene.getNodeByName(name);\n                }\n                return node;\n            };\n        // Copy new node animations\n        var nodesInAC = this.getNodes();\n        nodesInAC.forEach(function (nodeInAC) {\n            var nodeInScene = _targetConverter(nodeInAC);\n            if (nodeInScene !== null) {\n                var _loop_1 = function (animationInAC) {\n                    // Doing treatment on an array for safety measure\n                    var animationsWithSameProperty = nodeInScene.animations.filter(function (animationInScene) {\n                        return animationInScene.targetProperty === animationInAC.targetProperty;\n                    });\n                    for (var _b = 0, animationsWithSameProperty_1 = animationsWithSameProperty; _b < animationsWithSameProperty_1.length; _b++) {\n                        var animationWithSameProperty = animationsWithSameProperty_1[_b];\n                        var index = nodeInScene.animations.indexOf(animationWithSameProperty, 0);\n                        if (index > -1) {\n                            nodeInScene.animations.splice(index, 1);\n                        }\n                    }\n                };\n                // Remove old animations with same target property as a new one\n                for (var _i = 0, _a = nodeInAC.animations; _i < _a.length; _i++) {\n                    var animationInAC = _a[_i];\n                    _loop_1(animationInAC);\n                }\n                // Append new animations\n                nodeInScene.animations = nodeInScene.animations.concat(nodeInAC.animations);\n            }\n        });\n        var newAnimationGroups = new Array();\n        // Copy new animation groups\n        this.animationGroups.slice().forEach(function (animationGroupInAC) {\n            // Clone the animation group and all its animatables\n            newAnimationGroups.push(animationGroupInAC.clone(animationGroupInAC.name, _targetConverter));\n            // Remove animatables related to the asset container\n            animationGroupInAC.animatables.forEach(function (animatable) {\n                animatable.stop();\n            });\n        });\n        // Retarget animatables\n        animatables.forEach(function (animatable) {\n            var target = _targetConverter(animatable.target);\n            if (target) {\n                // Clone the animatable and retarget it\n                scene.beginAnimation(target, animatable.fromFrame, animatable.toFrame, animatable.loopAnimation, animatable.speedRatio, animatable.onAnimationEnd ? animatable.onAnimationEnd : undefined, undefined, true, undefined, animatable.onAnimationLoop ? animatable.onAnimationLoop : undefined);\n                // Stop animation for the target in the asset container\n                scene.stopAnimation(animatable.target);\n            }\n        });\n        return newAnimationGroups;\n    };\n    return AssetContainer;\n}(AbstractScene));\nexport { AssetContainer };\n//# sourceMappingURL=assetContainer.js.map","import { __extends } from \"tslib\";\nimport { WebXRFeaturesManager, WebXRFeatureName } from \"../webXRFeaturesManager.js\";\nimport { Observable } from \"../../Misc/observable.js\";\nimport { Vector3, Matrix } from \"../../Maths/math.vector.js\";\nimport { WebXRAbstractFeature } from \"./WebXRAbstractFeature.js\";\nimport { Tools } from \"../../Misc/tools.js\";\n/**\n * The currently-working hit-test module.\n * Hit test (or Ray-casting) is used to interact with the real world.\n * For further information read here - https://github.com/immersive-web/hit-test\n */\nvar WebXRHitTestLegacy = /** @class */ (function (_super) {\n    __extends(WebXRHitTestLegacy, _super);\n    /**\n     * Creates a new instance of the (legacy version) hit test feature\n     * @param _xrSessionManager an instance of WebXRSessionManager\n     * @param options options to use when constructing this feature\n     */\n    function WebXRHitTestLegacy(_xrSessionManager, \n    /**\n     * options to use when constructing this feature\n     */\n    options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, _xrSessionManager) || this;\n        _this.options = options;\n        // in XR space z-forward is negative\n        _this._direction = new Vector3(0, 0, -1);\n        _this._mat = new Matrix();\n        _this._onSelectEnabled = false;\n        _this._origin = new Vector3(0, 0, 0);\n        /**\n         * Populated with the last native XR Hit Results\n         */\n        _this.lastNativeXRHitResults = [];\n        /**\n         * Triggered when new babylon (transformed) hit test results are available\n         */\n        _this.onHitTestResultObservable = new Observable();\n        _this._onHitTestResults = function (xrResults) {\n            var mats = xrResults.map(function (result) {\n                var mat = Matrix.FromArray(result.hitMatrix);\n                if (!_this._xrSessionManager.scene.useRightHandedSystem) {\n                    mat.toggleModelMatrixHandInPlace();\n                }\n                // if (this.options.coordinatesSpace === Space.WORLD) {\n                if (_this.options.worldParentNode) {\n                    mat.multiplyToRef(_this.options.worldParentNode.getWorldMatrix(), mat);\n                }\n                return {\n                    xrHitResult: result,\n                    transformationMatrix: mat,\n                };\n            });\n            _this.lastNativeXRHitResults = xrResults;\n            _this.onHitTestResultObservable.notifyObservers(mats);\n        };\n        // can be done using pointerdown event, and xrSessionManager.currentFrame\n        _this._onSelect = function (event) {\n            if (!_this._onSelectEnabled) {\n                return;\n            }\n            WebXRHitTestLegacy.XRHitTestWithSelectEvent(event, _this._xrSessionManager.referenceSpace);\n        };\n        _this.xrNativeFeatureName = \"hit-test\";\n        Tools.Warn(\"A newer version of this plugin is available\");\n        return _this;\n    }\n    /**\n     * execute a hit test with an XR Ray\n     *\n     * @param xrSession a native xrSession that will execute this hit test\n     * @param xrRay the ray (position and direction) to use for ray-casting\n     * @param referenceSpace native XR reference space to use for the hit-test\n     * @param filter filter function that will filter the results\n     * @returns a promise that resolves with an array of native XR hit result in xr coordinates system\n     */\n    WebXRHitTestLegacy.XRHitTestWithRay = function (xrSession, xrRay, referenceSpace, filter) {\n        return xrSession.requestHitTest(xrRay, referenceSpace).then(function (results) {\n            var filterFunction = filter || (function (result) { return !!result.hitMatrix; });\n            return results.filter(filterFunction);\n        });\n    };\n    /**\n     * Execute a hit test on the current running session using a select event returned from a transient input (such as touch)\n     * @param event the (select) event to use to select with\n     * @param referenceSpace the reference space to use for this hit test\n     * @returns a promise that resolves with an array of native XR hit result in xr coordinates system\n     */\n    WebXRHitTestLegacy.XRHitTestWithSelectEvent = function (event, referenceSpace) {\n        var targetRayPose = event.frame.getPose(event.inputSource.targetRaySpace, referenceSpace);\n        if (!targetRayPose) {\n            return Promise.resolve([]);\n        }\n        var targetRay = new XRRay(targetRayPose.transform);\n        return this.XRHitTestWithRay(event.frame.session, targetRay, referenceSpace);\n    };\n    /**\n     * attach this feature\n     * Will usually be called by the features manager\n     *\n     * @returns true if successful.\n     */\n    WebXRHitTestLegacy.prototype.attach = function () {\n        if (!_super.prototype.attach.call(this)) {\n            return false;\n        }\n        if (this.options.testOnPointerDownOnly) {\n            this._xrSessionManager.session.addEventListener(\"select\", this._onSelect, false);\n        }\n        return true;\n    };\n    /**\n     * detach this feature.\n     * Will usually be called by the features manager\n     *\n     * @returns true if successful.\n     */\n    WebXRHitTestLegacy.prototype.detach = function () {\n        if (!_super.prototype.detach.call(this)) {\n            return false;\n        }\n        // disable select\n        this._onSelectEnabled = false;\n        this._xrSessionManager.session.removeEventListener(\"select\", this._onSelect);\n        return true;\n    };\n    /**\n     * Dispose this feature and all of the resources attached\n     */\n    WebXRHitTestLegacy.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.onHitTestResultObservable.clear();\n    };\n    WebXRHitTestLegacy.prototype._onXRFrame = function (frame) {\n        // make sure we do nothing if (async) not attached\n        if (!this.attached || this.options.testOnPointerDownOnly) {\n            return;\n        }\n        var pose = frame.getViewerPose(this._xrSessionManager.referenceSpace);\n        if (!pose) {\n            return;\n        }\n        Matrix.FromArrayToRef(pose.transform.matrix, 0, this._mat);\n        Vector3.TransformCoordinatesFromFloatsToRef(0, 0, 0, this._mat, this._origin);\n        Vector3.TransformCoordinatesFromFloatsToRef(0, 0, -1, this._mat, this._direction);\n        this._direction.subtractInPlace(this._origin);\n        this._direction.normalize();\n        var ray = new XRRay({ x: this._origin.x, y: this._origin.y, z: this._origin.z, w: 0 }, { x: this._direction.x, y: this._direction.y, z: this._direction.z, w: 0 });\n        WebXRHitTestLegacy.XRHitTestWithRay(this._xrSessionManager.session, ray, this._xrSessionManager.referenceSpace).then(this._onHitTestResults);\n    };\n    /**\n     * The module's name\n     */\n    WebXRHitTestLegacy.Name = WebXRFeatureName.HIT_TEST;\n    /**\n     * The (Babylon) version of this module.\n     * This is an integer representing the implementation version.\n     * This number does not correspond to the WebXR specs version\n     */\n    WebXRHitTestLegacy.Version = 1;\n    return WebXRHitTestLegacy;\n}(WebXRAbstractFeature));\nexport { WebXRHitTestLegacy };\n//register the plugin versions\nWebXRFeaturesManager.AddWebXRFeature(WebXRHitTestLegacy.Name, function (xrSessionManager, options) {\n    return function () { return new WebXRHitTestLegacy(xrSessionManager, options); };\n}, WebXRHitTestLegacy.Version, false);\n//# sourceMappingURL=WebXRHitTestLegacy.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { WebXRFeatureName, WebXRFeaturesManager } from \"../webXRFeaturesManager.js\";\nimport { Observable } from \"../../Misc/observable.js\";\nimport { Matrix, Vector3, Quaternion } from \"../../Maths/math.vector.js\";\nimport { WebXRAbstractFeature } from \"./WebXRAbstractFeature.js\";\nimport { Tools } from \"../../Misc/tools.js\";\nvar anchorIdProvider = 0;\n/**\n * An implementation of the anchor system for WebXR.\n * For further information see https://github.com/immersive-web/anchors/\n */\nvar WebXRAnchorSystem = /** @class */ (function (_super) {\n    __extends(WebXRAnchorSystem, _super);\n    /**\n     * constructs a new anchor system\n     * @param _xrSessionManager an instance of WebXRSessionManager\n     * @param _options configuration object for this feature\n     */\n    function WebXRAnchorSystem(_xrSessionManager, _options) {\n        if (_options === void 0) { _options = {}; }\n        var _this = _super.call(this, _xrSessionManager) || this;\n        _this._options = _options;\n        _this._lastFrameDetected = new Set();\n        _this._trackedAnchors = [];\n        _this._futureAnchors = [];\n        /**\n         * Observers registered here will be executed when a new anchor was added to the session\n         */\n        _this.onAnchorAddedObservable = new Observable();\n        /**\n         * Observers registered here will be executed when an anchor was removed from the session\n         */\n        _this.onAnchorRemovedObservable = new Observable();\n        /**\n         * Observers registered here will be executed when an existing anchor updates\n         * This can execute N times every frame\n         */\n        _this.onAnchorUpdatedObservable = new Observable();\n        _this._tmpVector = new Vector3();\n        _this._tmpQuaternion = new Quaternion();\n        _this.xrNativeFeatureName = \"anchors\";\n        return _this;\n    }\n    Object.defineProperty(WebXRAnchorSystem.prototype, \"referenceSpaceForFrameAnchors\", {\n        /**\n         * Set the reference space to use for anchor creation, when not using a hit test.\n         * Will default to the session's reference space if not defined\n         */\n        set: function (referenceSpace) {\n            this._referenceSpaceForFrameAnchors = referenceSpace;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebXRAnchorSystem.prototype._populateTmpTransformation = function (position, rotationQuaternion) {\n        this._tmpVector.copyFrom(position);\n        this._tmpQuaternion.copyFrom(rotationQuaternion);\n        if (!this._xrSessionManager.scene.useRightHandedSystem) {\n            this._tmpVector.z *= -1;\n            this._tmpQuaternion.z *= -1;\n            this._tmpQuaternion.w *= -1;\n        }\n        return {\n            position: this._tmpVector,\n            rotationQuaternion: this._tmpQuaternion,\n        };\n    };\n    /**\n     * Create a new anchor point using a hit test result at a specific point in the scene\n     * An anchor is tracked only after it is added to the trackerAnchors in xrFrame. The promise returned here does not yet guaranty that.\n     * Use onAnchorAddedObservable to get newly added anchors if you require tracking guaranty.\n     *\n     * @param hitTestResult The hit test result to use for this anchor creation\n     * @param position an optional position offset for this anchor\n     * @param rotationQuaternion an optional rotation offset for this anchor\n     * @returns A promise that fulfills when babylon has created the corresponding WebXRAnchor object and tracking has begun\n     */\n    WebXRAnchorSystem.prototype.addAnchorPointUsingHitTestResultAsync = function (hitTestResult, position, rotationQuaternion) {\n        if (position === void 0) { position = new Vector3(); }\n        if (rotationQuaternion === void 0) { rotationQuaternion = new Quaternion(); }\n        return __awaiter(this, void 0, void 0, function () {\n            var m, nativeAnchor_1, error_1;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // convert to XR space (right handed) if needed\n                        this._populateTmpTransformation(position, rotationQuaternion);\n                        m = new XRRigidTransform({ x: this._tmpVector.x, y: this._tmpVector.y, z: this._tmpVector.z }, { x: this._tmpQuaternion.x, y: this._tmpQuaternion.y, z: this._tmpQuaternion.z, w: this._tmpQuaternion.w });\n                        if (!!hitTestResult.xrHitResult.createAnchor) return [3 /*break*/, 1];\n                        this.detach();\n                        throw new Error(\"Anchors not enabled in this environment/browser\");\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, hitTestResult.xrHitResult.createAnchor(m)];\n                    case 2:\n                        nativeAnchor_1 = _a.sent();\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\n                                _this._futureAnchors.push({\n                                    nativeAnchor: nativeAnchor_1,\n                                    resolved: false,\n                                    submitted: true,\n                                    xrTransformation: m,\n                                    resolve: resolve,\n                                    reject: reject,\n                                });\n                            })];\n                    case 3:\n                        error_1 = _a.sent();\n                        throw new Error(error_1);\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * Add a new anchor at a specific position and rotation\n     * This function will add a new anchor per default in the next available frame. Unless forced, the createAnchor function\n     * will be called in the next xrFrame loop to make sure that the anchor can be created correctly.\n     * An anchor is tracked only after it is added to the trackerAnchors in xrFrame. The promise returned here does not yet guaranty that.\n     * Use onAnchorAddedObservable to get newly added anchors if you require tracking guaranty.\n     *\n     * @param position the position in which to add an anchor\n     * @param rotationQuaternion an optional rotation for the anchor transformation\n     * @param forceCreateInCurrentFrame force the creation of this anchor in the current frame. Must be called inside xrFrame loop!\n     * @returns A promise that fulfills when babylon has created the corresponding WebXRAnchor object and tracking has begun\n     */\n    WebXRAnchorSystem.prototype.addAnchorAtPositionAndRotationAsync = function (position, rotationQuaternion, forceCreateInCurrentFrame) {\n        if (rotationQuaternion === void 0) { rotationQuaternion = new Quaternion(); }\n        if (forceCreateInCurrentFrame === void 0) { forceCreateInCurrentFrame = false; }\n        return __awaiter(this, void 0, void 0, function () {\n            var xrTransformation, xrAnchor, _a;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        // convert to XR space (right handed) if needed\n                        this._populateTmpTransformation(position, rotationQuaternion);\n                        xrTransformation = new XRRigidTransform({ x: this._tmpVector.x, y: this._tmpVector.y, z: this._tmpVector.z }, { x: this._tmpQuaternion.x, y: this._tmpQuaternion.y, z: this._tmpQuaternion.z, w: this._tmpQuaternion.w });\n                        if (!(forceCreateInCurrentFrame && this.attached && this._xrSessionManager.currentFrame)) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this._createAnchorAtTransformation(xrTransformation, this._xrSessionManager.currentFrame)];\n                    case 1:\n                        _a = _b.sent();\n                        return [3 /*break*/, 3];\n                    case 2:\n                        _a = undefined;\n                        _b.label = 3;\n                    case 3:\n                        xrAnchor = _a;\n                        // add the transformation to the future anchors list\n                        return [2 /*return*/, new Promise(function (resolve, reject) {\n                                _this._futureAnchors.push({\n                                    nativeAnchor: xrAnchor,\n                                    resolved: false,\n                                    submitted: false,\n                                    xrTransformation: xrTransformation,\n                                    resolve: resolve,\n                                    reject: reject,\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    Object.defineProperty(WebXRAnchorSystem.prototype, \"anchors\", {\n        /**\n         * Get the list of anchors currently being tracked by the system\n         */\n        get: function () {\n            return this._trackedAnchors;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * detach this feature.\n     * Will usually be called by the features manager\n     *\n     * @returns true if successful.\n     */\n    WebXRAnchorSystem.prototype.detach = function () {\n        if (!_super.prototype.detach.call(this)) {\n            return false;\n        }\n        if (!this._options.doNotRemoveAnchorsOnSessionEnded) {\n            while (this._trackedAnchors.length) {\n                var toRemove = this._trackedAnchors.pop();\n                if (toRemove) {\n                    try {\n                        // try to natively remove it as well\n                        toRemove.remove();\n                    }\n                    catch (e) {\n                        // no-op\n                    }\n                    // as the xr frame loop is removed, we need to notify manually\n                    this.onAnchorRemovedObservable.notifyObservers(toRemove);\n                }\n            }\n        }\n        return true;\n    };\n    /**\n     * Dispose this feature and all of the resources attached\n     */\n    WebXRAnchorSystem.prototype.dispose = function () {\n        this._futureAnchors.length = 0;\n        _super.prototype.dispose.call(this);\n        this.onAnchorAddedObservable.clear();\n        this.onAnchorRemovedObservable.clear();\n        this.onAnchorUpdatedObservable.clear();\n    };\n    WebXRAnchorSystem.prototype._onXRFrame = function (frame) {\n        var _this = this;\n        if (!this.attached || !frame) {\n            return;\n        }\n        var trackedAnchors = frame.trackedAnchors;\n        if (trackedAnchors) {\n            var toRemove = this._trackedAnchors\n                .filter(function (anchor) { return !trackedAnchors.has(anchor.xrAnchor); })\n                .map(function (anchor) {\n                var index = _this._trackedAnchors.indexOf(anchor);\n                return index;\n            });\n            var idxTracker_1 = 0;\n            toRemove.forEach(function (index) {\n                var anchor = _this._trackedAnchors.splice(index - idxTracker_1, 1)[0];\n                _this.onAnchorRemovedObservable.notifyObservers(anchor);\n                idxTracker_1++;\n            });\n            // now check for new ones\n            trackedAnchors.forEach(function (xrAnchor) {\n                if (!_this._lastFrameDetected.has(xrAnchor)) {\n                    var newAnchor = {\n                        id: anchorIdProvider++,\n                        xrAnchor: xrAnchor,\n                        remove: function () { return xrAnchor.delete(); },\n                    };\n                    var anchor = _this._updateAnchorWithXRFrame(xrAnchor, newAnchor, frame);\n                    _this._trackedAnchors.push(anchor);\n                    _this.onAnchorAddedObservable.notifyObservers(anchor);\n                    // search for the future anchor promise that matches this\n                    var results = _this._futureAnchors.filter(function (futureAnchor) { return futureAnchor.nativeAnchor === xrAnchor; });\n                    var result = results[0];\n                    if (result) {\n                        result.resolve(anchor);\n                        result.resolved = true;\n                    }\n                }\n                else {\n                    var index = _this._findIndexInAnchorArray(xrAnchor);\n                    var anchor = _this._trackedAnchors[index];\n                    try {\n                        // anchors update every frame\n                        _this._updateAnchorWithXRFrame(xrAnchor, anchor, frame);\n                        if (anchor.attachedNode) {\n                            anchor.attachedNode.rotationQuaternion = anchor.attachedNode.rotationQuaternion || new Quaternion();\n                            anchor.transformationMatrix.decompose(anchor.attachedNode.scaling, anchor.attachedNode.rotationQuaternion, anchor.attachedNode.position);\n                        }\n                        _this.onAnchorUpdatedObservable.notifyObservers(anchor);\n                    }\n                    catch (e) {\n                        Tools.Warn(\"Anchor could not be updated\");\n                    }\n                }\n            });\n            this._lastFrameDetected = trackedAnchors;\n        }\n        // process future anchors\n        this._futureAnchors.forEach(function (futureAnchor) {\n            if (!futureAnchor.resolved && !futureAnchor.submitted) {\n                _this._createAnchorAtTransformation(futureAnchor.xrTransformation, frame).then(function (nativeAnchor) {\n                    futureAnchor.nativeAnchor = nativeAnchor;\n                }, function (error) {\n                    futureAnchor.resolved = true;\n                    futureAnchor.reject(error);\n                });\n                futureAnchor.submitted = true;\n            }\n        });\n    };\n    /**\n     * avoiding using Array.find for global support.\n     * @param xrAnchor the plane to find in the array\n     */\n    WebXRAnchorSystem.prototype._findIndexInAnchorArray = function (xrAnchor) {\n        for (var i = 0; i < this._trackedAnchors.length; ++i) {\n            if (this._trackedAnchors[i].xrAnchor === xrAnchor) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    WebXRAnchorSystem.prototype._updateAnchorWithXRFrame = function (xrAnchor, anchor, xrFrame) {\n        // matrix\n        var pose = xrFrame.getPose(xrAnchor.anchorSpace, this._xrSessionManager.referenceSpace);\n        if (pose) {\n            var mat = anchor.transformationMatrix || new Matrix();\n            Matrix.FromArrayToRef(pose.transform.matrix, 0, mat);\n            if (!this._xrSessionManager.scene.useRightHandedSystem) {\n                mat.toggleModelMatrixHandInPlace();\n            }\n            anchor.transformationMatrix = mat;\n            if (!this._options.worldParentNode) {\n                // Logger.Warn(\"Please provide a world parent node to apply world transformation\");\n            }\n            else {\n                mat.multiplyToRef(this._options.worldParentNode.getWorldMatrix(), mat);\n            }\n        }\n        return anchor;\n    };\n    WebXRAnchorSystem.prototype._createAnchorAtTransformation = function (xrTransformation, xrFrame) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_b) {\n                if (xrFrame.createAnchor) {\n                    try {\n                        return [2 /*return*/, xrFrame.createAnchor(xrTransformation, (_a = this._referenceSpaceForFrameAnchors) !== null && _a !== void 0 ? _a : this._xrSessionManager.referenceSpace)];\n                    }\n                    catch (error) {\n                        throw new Error(error);\n                    }\n                }\n                else {\n                    this.detach();\n                    throw new Error(\"Anchors are not enabled in your browser\");\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    /**\n     * The module's name\n     */\n    WebXRAnchorSystem.Name = WebXRFeatureName.ANCHOR_SYSTEM;\n    /**\n     * The (Babylon) version of this module.\n     * This is an integer representing the implementation version.\n     * This number does not correspond to the WebXR specs version\n     */\n    WebXRAnchorSystem.Version = 1;\n    return WebXRAnchorSystem;\n}(WebXRAbstractFeature));\nexport { WebXRAnchorSystem };\n// register the plugin\nWebXRFeaturesManager.AddWebXRFeature(WebXRAnchorSystem.Name, function (xrSessionManager, options) {\n    return function () { return new WebXRAnchorSystem(xrSessionManager, options); };\n}, WebXRAnchorSystem.Version);\n//# sourceMappingURL=WebXRAnchorSystem.js.map","import { __extends } from \"tslib\";\nimport { WebXRFeaturesManager, WebXRFeatureName } from \"../webXRFeaturesManager.js\";\nimport { Observable } from \"../../Misc/observable.js\";\nimport { Vector3, Matrix } from \"../../Maths/math.vector.js\";\nimport { WebXRAbstractFeature } from \"./WebXRAbstractFeature.js\";\nvar planeIdProvider = 0;\n/**\n * The plane detector is used to detect planes in the real world when in AR\n * For more information see https://github.com/immersive-web/real-world-geometry/\n */\nvar WebXRPlaneDetector = /** @class */ (function (_super) {\n    __extends(WebXRPlaneDetector, _super);\n    /**\n     * construct a new Plane Detector\n     * @param _xrSessionManager an instance of xr Session manager\n     * @param _options configuration to use when constructing this feature\n     */\n    function WebXRPlaneDetector(_xrSessionManager, _options) {\n        if (_options === void 0) { _options = {}; }\n        var _this = _super.call(this, _xrSessionManager) || this;\n        _this._options = _options;\n        _this._detectedPlanes = [];\n        _this._enabled = false;\n        _this._lastFrameDetected = new Set();\n        /**\n         * Observers registered here will be executed when a new plane was added to the session\n         */\n        _this.onPlaneAddedObservable = new Observable();\n        /**\n         * Observers registered here will be executed when a plane is no longer detected in the session\n         */\n        _this.onPlaneRemovedObservable = new Observable();\n        /**\n         * Observers registered here will be executed when an existing plane updates (for example - expanded)\n         * This can execute N times every frame\n         */\n        _this.onPlaneUpdatedObservable = new Observable();\n        _this.xrNativeFeatureName = \"plane-detection\";\n        if (_this._xrSessionManager.session) {\n            _this._init();\n        }\n        else {\n            _this._xrSessionManager.onXRSessionInit.addOnce(function () {\n                _this._init();\n            });\n        }\n        return _this;\n    }\n    /**\n     * detach this feature.\n     * Will usually be called by the features manager\n     *\n     * @returns true if successful.\n     */\n    WebXRPlaneDetector.prototype.detach = function () {\n        if (!_super.prototype.detach.call(this)) {\n            return false;\n        }\n        if (!this._options.doNotRemovePlanesOnSessionEnded) {\n            while (this._detectedPlanes.length) {\n                var toRemove = this._detectedPlanes.pop();\n                if (toRemove) {\n                    this.onPlaneRemovedObservable.notifyObservers(toRemove);\n                }\n            }\n        }\n        return true;\n    };\n    /**\n     * Dispose this feature and all of the resources attached\n     */\n    WebXRPlaneDetector.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.onPlaneAddedObservable.clear();\n        this.onPlaneRemovedObservable.clear();\n        this.onPlaneUpdatedObservable.clear();\n    };\n    /**\n     * Check if the needed objects are defined.\n     * This does not mean that the feature is enabled, but that the objects needed are well defined.\n     */\n    WebXRPlaneDetector.prototype.isCompatible = function () {\n        return typeof XRPlane !== \"undefined\";\n    };\n    WebXRPlaneDetector.prototype._onXRFrame = function (frame) {\n        var _this = this;\n        var _a;\n        if (!this.attached || !this._enabled || !frame) {\n            return;\n        }\n        var detectedPlanes = frame.detectedPlanes || ((_a = frame.worldInformation) === null || _a === void 0 ? void 0 : _a.detectedPlanes);\n        if (detectedPlanes) {\n            // remove all planes that are not currently detected in the frame\n            for (var planeIdx = 0; planeIdx < this._detectedPlanes.length; planeIdx++) {\n                var plane = this._detectedPlanes[planeIdx];\n                if (!detectedPlanes.has(plane.xrPlane)) {\n                    this._detectedPlanes.splice(planeIdx--, 1);\n                    this.onPlaneRemovedObservable.notifyObservers(plane);\n                }\n            }\n            // now check for new ones\n            detectedPlanes.forEach(function (xrPlane) {\n                if (!_this._lastFrameDetected.has(xrPlane)) {\n                    var newPlane = {\n                        id: planeIdProvider++,\n                        xrPlane: xrPlane,\n                        polygonDefinition: [],\n                    };\n                    var plane = _this._updatePlaneWithXRPlane(xrPlane, newPlane, frame);\n                    _this._detectedPlanes.push(plane);\n                    _this.onPlaneAddedObservable.notifyObservers(plane);\n                }\n                else {\n                    // updated?\n                    if (xrPlane.lastChangedTime === _this._xrSessionManager.currentTimestamp) {\n                        var index = _this._findIndexInPlaneArray(xrPlane);\n                        var plane = _this._detectedPlanes[index];\n                        _this._updatePlaneWithXRPlane(xrPlane, plane, frame);\n                        _this.onPlaneUpdatedObservable.notifyObservers(plane);\n                    }\n                }\n            });\n            this._lastFrameDetected = detectedPlanes;\n        }\n    };\n    WebXRPlaneDetector.prototype._init = function () {\n        var _this = this;\n        var internalInit = function () {\n            _this._enabled = true;\n            if (_this._detectedPlanes.length) {\n                _this._detectedPlanes.length = 0;\n            }\n        };\n        // Only supported by BabylonNative\n        if (!!this._xrSessionManager.isNative && !!this._options.preferredDetectorOptions && !!this._xrSessionManager.session.trySetPreferredPlaneDetectorOptions) {\n            this._xrSessionManager.session.trySetPreferredPlaneDetectorOptions(this._options.preferredDetectorOptions);\n        }\n        if (!this._xrSessionManager.session.updateWorldTrackingState) {\n            internalInit();\n            return;\n        }\n        this._xrSessionManager.session.updateWorldTrackingState({ planeDetectionState: { enabled: true } });\n        internalInit();\n    };\n    WebXRPlaneDetector.prototype._updatePlaneWithXRPlane = function (xrPlane, plane, xrFrame) {\n        var _this = this;\n        plane.polygonDefinition = xrPlane.polygon.map(function (xrPoint) {\n            var rightHandedSystem = _this._xrSessionManager.scene.useRightHandedSystem ? 1 : -1;\n            return new Vector3(xrPoint.x, xrPoint.y, xrPoint.z * rightHandedSystem);\n        });\n        // matrix\n        var pose = xrFrame.getPose(xrPlane.planeSpace, this._xrSessionManager.referenceSpace);\n        if (pose) {\n            var mat = plane.transformationMatrix || new Matrix();\n            Matrix.FromArrayToRef(pose.transform.matrix, 0, mat);\n            if (!this._xrSessionManager.scene.useRightHandedSystem) {\n                mat.toggleModelMatrixHandInPlace();\n            }\n            plane.transformationMatrix = mat;\n            if (this._options.worldParentNode) {\n                mat.multiplyToRef(this._options.worldParentNode.getWorldMatrix(), mat);\n            }\n        }\n        return plane;\n    };\n    /**\n     * avoiding using Array.find for global support.\n     * @param xrPlane the plane to find in the array\n     */\n    WebXRPlaneDetector.prototype._findIndexInPlaneArray = function (xrPlane) {\n        for (var i = 0; i < this._detectedPlanes.length; ++i) {\n            if (this._detectedPlanes[i].xrPlane === xrPlane) {\n                return i;\n            }\n        }\n        return -1;\n    };\n    /**\n     * The module's name\n     */\n    WebXRPlaneDetector.Name = WebXRFeatureName.PLANE_DETECTION;\n    /**\n     * The (Babylon) version of this module.\n     * This is an integer representing the implementation version.\n     * This number does not correspond to the WebXR specs version\n     */\n    WebXRPlaneDetector.Version = 1;\n    return WebXRPlaneDetector;\n}(WebXRAbstractFeature));\nexport { WebXRPlaneDetector };\n//register the plugin\nWebXRFeaturesManager.AddWebXRFeature(WebXRPlaneDetector.Name, function (xrSessionManager, options) {\n    return function () { return new WebXRPlaneDetector(xrSessionManager, options); };\n}, WebXRPlaneDetector.Version);\n//# sourceMappingURL=WebXRPlaneDetector.js.map","import { __extends } from \"tslib\";\nimport { WebXRFeaturesManager, WebXRFeatureName } from \"../webXRFeaturesManager.js\";\nimport { Observable } from \"../../Misc/observable.js\";\nimport { WebXRAbstractFeature } from \"./WebXRAbstractFeature.js\";\n/**\n * A module that will automatically disable background meshes when entering AR and will enable them when leaving AR.\n */\nvar WebXRBackgroundRemover = /** @class */ (function (_super) {\n    __extends(WebXRBackgroundRemover, _super);\n    /**\n     * constructs a new background remover module\n     * @param _xrSessionManager the session manager for this module\n     * @param options read-only options to be used in this module\n     */\n    function WebXRBackgroundRemover(_xrSessionManager, \n    /**\n     * read-only options to be used in this module\n     */\n    options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, _xrSessionManager) || this;\n        _this.options = options;\n        /**\n         * registered observers will be triggered when the background state changes\n         */\n        _this.onBackgroundStateChangedObservable = new Observable();\n        return _this;\n    }\n    /**\n     * attach this feature\n     * Will usually be called by the features manager\n     *\n     * @returns true if successful.\n     */\n    WebXRBackgroundRemover.prototype.attach = function () {\n        this._setBackgroundState(false);\n        return _super.prototype.attach.call(this);\n    };\n    /**\n     * detach this feature.\n     * Will usually be called by the features manager\n     *\n     * @returns true if successful.\n     */\n    WebXRBackgroundRemover.prototype.detach = function () {\n        this._setBackgroundState(true);\n        return _super.prototype.detach.call(this);\n    };\n    /**\n     * Dispose this feature and all of the resources attached\n     */\n    WebXRBackgroundRemover.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.onBackgroundStateChangedObservable.clear();\n    };\n    WebXRBackgroundRemover.prototype._onXRFrame = function (_xrFrame) {\n        // no-op\n    };\n    WebXRBackgroundRemover.prototype._setBackgroundState = function (newState) {\n        var scene = this._xrSessionManager.scene;\n        if (!this.options.ignoreEnvironmentHelper) {\n            if (this.options.environmentHelperRemovalFlags) {\n                if (this.options.environmentHelperRemovalFlags.skyBox) {\n                    var backgroundSkybox = scene.getMeshByName(\"BackgroundSkybox\");\n                    if (backgroundSkybox) {\n                        backgroundSkybox.setEnabled(newState);\n                    }\n                }\n                if (this.options.environmentHelperRemovalFlags.ground) {\n                    var backgroundPlane = scene.getMeshByName(\"BackgroundPlane\");\n                    if (backgroundPlane) {\n                        backgroundPlane.setEnabled(newState);\n                    }\n                }\n            }\n            else {\n                var backgroundHelper = scene.getMeshByName(\"BackgroundHelper\");\n                if (backgroundHelper) {\n                    backgroundHelper.setEnabled(newState);\n                }\n            }\n        }\n        if (this.options.backgroundMeshes) {\n            this.options.backgroundMeshes.forEach(function (mesh) { return mesh.setEnabled(newState); });\n        }\n        this.onBackgroundStateChangedObservable.notifyObservers(newState);\n    };\n    /**\n     * The module's name\n     */\n    WebXRBackgroundRemover.Name = WebXRFeatureName.BACKGROUND_REMOVER;\n    /**\n     * The (Babylon) version of this module.\n     * This is an integer representing the implementation version.\n     * This number does not correspond to the WebXR specs version\n     */\n    WebXRBackgroundRemover.Version = 1;\n    return WebXRBackgroundRemover;\n}(WebXRAbstractFeature));\nexport { WebXRBackgroundRemover };\n//register the plugin\nWebXRFeaturesManager.AddWebXRFeature(WebXRBackgroundRemover.Name, function (xrSessionManager, options) {\n    return function () { return new WebXRBackgroundRemover(xrSessionManager, options); };\n}, WebXRBackgroundRemover.Version, true);\n//# sourceMappingURL=WebXRBackgroundRemover.js.map","import { __assign, __extends } from \"tslib\";\nimport { WebXRAbstractFeature } from \"./WebXRAbstractFeature.js\";\nimport { Vector3, Quaternion } from \"../../Maths/math.vector.js\";\nimport { PhysicsImpostor } from \"../../Physics/physicsImpostor.js\";\nimport { CreateSphere } from \"../../Meshes/Builders/sphereBuilder.js\";\nimport { WebXRFeatureName, WebXRFeaturesManager } from \"../webXRFeaturesManager.js\";\nimport { Logger } from \"../../Misc/logger.js\";\n/**\n * Options for the controller physics feature\n */\nvar IWebXRControllerPhysicsOptions = /** @class */ (function () {\n    function IWebXRControllerPhysicsOptions() {\n    }\n    return IWebXRControllerPhysicsOptions;\n}());\nexport { IWebXRControllerPhysicsOptions };\n/**\n * Add physics impostor to your webxr controllers,\n * including naive calculation of their linear and angular velocity\n */\nvar WebXRControllerPhysics = /** @class */ (function (_super) {\n    __extends(WebXRControllerPhysics, _super);\n    /**\n     * Construct a new Controller Physics Feature\n     * @param _xrSessionManager the corresponding xr session manager\n     * @param _options options to create this feature with\n     */\n    function WebXRControllerPhysics(_xrSessionManager, _options) {\n        var _this = _super.call(this, _xrSessionManager) || this;\n        _this._options = _options;\n        _this._attachController = function (xrController) {\n            if (_this._controllers[xrController.uniqueId]) {\n                // already attached\n                return;\n            }\n            if (!_this._xrSessionManager.scene.isPhysicsEnabled()) {\n                Logger.Warn(\"physics engine not enabled, skipped. Please add this controller manually.\");\n            }\n            // if no motion controller available, create impostors!\n            if (_this._options.physicsProperties.useControllerMesh && xrController.inputSource.gamepad) {\n                xrController.onMotionControllerInitObservable.addOnce(function (motionController) {\n                    if (!motionController._doNotLoadControllerMesh) {\n                        motionController.onModelLoadedObservable.addOnce(function () {\n                            var impostor = new PhysicsImpostor(motionController.rootMesh, PhysicsImpostor.MeshImpostor, __assign({ mass: 0 }, _this._options.physicsProperties));\n                            var controllerMesh = xrController.grip || xrController.pointer;\n                            _this._controllers[xrController.uniqueId] = {\n                                xrController: xrController,\n                                impostor: impostor,\n                                oldPos: controllerMesh.position.clone(),\n                                oldRotation: controllerMesh.rotationQuaternion.clone(),\n                            };\n                        });\n                    }\n                    else {\n                        // This controller isn't using a model, create impostors instead\n                        _this._createPhysicsImpostor(xrController);\n                    }\n                });\n            }\n            else {\n                _this._createPhysicsImpostor(xrController);\n            }\n        };\n        _this._controllers = {};\n        _this._debugMode = false;\n        _this._delta = 0;\n        _this._lastTimestamp = 0;\n        _this._tmpQuaternion = new Quaternion();\n        _this._tmpVector = new Vector3();\n        if (!_this._options.physicsProperties) {\n            _this._options.physicsProperties = {};\n        }\n        return _this;\n    }\n    WebXRControllerPhysics.prototype._createPhysicsImpostor = function (xrController) {\n        var impostorType = this._options.physicsProperties.impostorType || PhysicsImpostor.SphereImpostor;\n        var impostorSize = this._options.physicsProperties.impostorSize || 0.1;\n        var impostorMesh = CreateSphere(\"impostor-mesh-\" + xrController.uniqueId, {\n            diameterX: typeof impostorSize === \"number\" ? impostorSize : impostorSize.width,\n            diameterY: typeof impostorSize === \"number\" ? impostorSize : impostorSize.height,\n            diameterZ: typeof impostorSize === \"number\" ? impostorSize : impostorSize.depth,\n        });\n        impostorMesh.isVisible = this._debugMode;\n        impostorMesh.isPickable = false;\n        impostorMesh.rotationQuaternion = new Quaternion();\n        var controllerMesh = xrController.grip || xrController.pointer;\n        impostorMesh.position.copyFrom(controllerMesh.position);\n        impostorMesh.rotationQuaternion.copyFrom(controllerMesh.rotationQuaternion);\n        var impostor = new PhysicsImpostor(impostorMesh, impostorType, __assign({ mass: 0 }, this._options.physicsProperties));\n        this._controllers[xrController.uniqueId] = {\n            xrController: xrController,\n            impostor: impostor,\n            impostorMesh: impostorMesh,\n        };\n    };\n    /**\n     * @hidden\n     * enable debugging - will show console outputs and the impostor mesh\n     */\n    WebXRControllerPhysics.prototype._enablePhysicsDebug = function () {\n        var _this = this;\n        this._debugMode = true;\n        Object.keys(this._controllers).forEach(function (controllerId) {\n            var controllerData = _this._controllers[controllerId];\n            if (controllerData.impostorMesh) {\n                controllerData.impostorMesh.isVisible = true;\n            }\n        });\n    };\n    /**\n     * Manually add a controller (if no xrInput was provided or physics engine was not enabled)\n     * @param xrController the controller to add\n     */\n    WebXRControllerPhysics.prototype.addController = function (xrController) {\n        this._attachController(xrController);\n    };\n    /**\n     * attach this feature\n     * Will usually be called by the features manager\n     *\n     * @returns true if successful.\n     */\n    WebXRControllerPhysics.prototype.attach = function () {\n        var _this = this;\n        if (!_super.prototype.attach.call(this)) {\n            return false;\n        }\n        if (!this._options.xrInput) {\n            return true;\n        }\n        this._options.xrInput.controllers.forEach(this._attachController);\n        this._addNewAttachObserver(this._options.xrInput.onControllerAddedObservable, this._attachController);\n        this._addNewAttachObserver(this._options.xrInput.onControllerRemovedObservable, function (controller) {\n            // REMOVE the controller\n            _this._detachController(controller.uniqueId);\n        });\n        if (this._options.enableHeadsetImpostor) {\n            var params = this._options.headsetImpostorParams || {\n                impostorType: PhysicsImpostor.SphereImpostor,\n                restitution: 0.8,\n                impostorSize: 0.3,\n            };\n            var impostorSize = params.impostorSize || 0.3;\n            this._headsetMesh = CreateSphere(\"headset-mesh\", {\n                diameterX: typeof impostorSize === \"number\" ? impostorSize : impostorSize.width,\n                diameterY: typeof impostorSize === \"number\" ? impostorSize : impostorSize.height,\n                diameterZ: typeof impostorSize === \"number\" ? impostorSize : impostorSize.depth,\n            });\n            this._headsetMesh.rotationQuaternion = new Quaternion();\n            this._headsetMesh.isVisible = false;\n            this._headsetImpostor = new PhysicsImpostor(this._headsetMesh, params.impostorType, __assign({ mass: 0 }, params));\n        }\n        return true;\n    };\n    /**\n     * detach this feature.\n     * Will usually be called by the features manager\n     *\n     * @returns true if successful.\n     */\n    WebXRControllerPhysics.prototype.detach = function () {\n        var _this = this;\n        if (!_super.prototype.detach.call(this)) {\n            return false;\n        }\n        Object.keys(this._controllers).forEach(function (controllerId) {\n            _this._detachController(controllerId);\n        });\n        if (this._headsetMesh) {\n            this._headsetMesh.dispose();\n        }\n        return true;\n    };\n    /**\n     * Get the headset impostor, if enabled\n     * @returns the impostor\n     */\n    WebXRControllerPhysics.prototype.getHeadsetImpostor = function () {\n        return this._headsetImpostor;\n    };\n    /**\n     * Get the physics impostor of a specific controller.\n     * The impostor is not attached to a mesh because a mesh for each controller is not obligatory\n     * @param controller the controller or the controller id of which to get the impostor\n     * @returns the impostor or null\n     */\n    WebXRControllerPhysics.prototype.getImpostorForController = function (controller) {\n        var id = typeof controller === \"string\" ? controller : controller.uniqueId;\n        if (this._controllers[id]) {\n            return this._controllers[id].impostor;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Update the physics properties provided in the constructor\n     * @param newProperties the new properties object\n     * @param newProperties.impostorType\n     * @param newProperties.impostorSize\n     * @param newProperties.friction\n     * @param newProperties.restitution\n     */\n    WebXRControllerPhysics.prototype.setPhysicsProperties = function (newProperties) {\n        this._options.physicsProperties = __assign(__assign({}, this._options.physicsProperties), newProperties);\n    };\n    WebXRControllerPhysics.prototype._onXRFrame = function (_xrFrame) {\n        var _this = this;\n        var _a, _b;\n        this._delta = this._xrSessionManager.currentTimestamp - this._lastTimestamp;\n        this._lastTimestamp = this._xrSessionManager.currentTimestamp;\n        if (this._headsetMesh && this._headsetImpostor) {\n            this._headsetMesh.position.copyFrom(this._options.xrInput.xrCamera.globalPosition);\n            this._headsetMesh.rotationQuaternion.copyFrom(this._options.xrInput.xrCamera.absoluteRotation);\n            if ((_a = this._options.xrInput.xrCamera._lastXRViewerPose) === null || _a === void 0 ? void 0 : _a.linearVelocity) {\n                var lv = this._options.xrInput.xrCamera._lastXRViewerPose.linearVelocity;\n                this._tmpVector.set(lv.x, lv.y, lv.z);\n                this._headsetImpostor.setLinearVelocity(this._tmpVector);\n            }\n            if ((_b = this._options.xrInput.xrCamera._lastXRViewerPose) === null || _b === void 0 ? void 0 : _b.angularVelocity) {\n                var av = this._options.xrInput.xrCamera._lastXRViewerPose.angularVelocity;\n                this._tmpVector.set(av.x, av.y, av.z);\n                this._headsetImpostor.setAngularVelocity(this._tmpVector);\n            }\n        }\n        Object.keys(this._controllers).forEach(function (controllerId) {\n            var _a, _b;\n            var controllerData = _this._controllers[controllerId];\n            var controllerMesh = controllerData.xrController.grip || controllerData.xrController.pointer;\n            var comparedPosition = controllerData.oldPos || controllerData.impostorMesh.position;\n            if ((_a = controllerData.xrController._lastXRPose) === null || _a === void 0 ? void 0 : _a.linearVelocity) {\n                var lv = controllerData.xrController._lastXRPose.linearVelocity;\n                _this._tmpVector.set(lv.x, lv.y, lv.z);\n                controllerData.impostor.setLinearVelocity(_this._tmpVector);\n            }\n            else {\n                controllerMesh.position.subtractToRef(comparedPosition, _this._tmpVector);\n                _this._tmpVector.scaleInPlace(1000 / _this._delta);\n                controllerData.impostor.setLinearVelocity(_this._tmpVector);\n            }\n            comparedPosition.copyFrom(controllerMesh.position);\n            if (_this._debugMode) {\n                console.log(_this._tmpVector, \"linear\");\n            }\n            var comparedQuaternion = controllerData.oldRotation || controllerData.impostorMesh.rotationQuaternion;\n            if ((_b = controllerData.xrController._lastXRPose) === null || _b === void 0 ? void 0 : _b.angularVelocity) {\n                var av = controllerData.xrController._lastXRPose.angularVelocity;\n                _this._tmpVector.set(av.x, av.y, av.z);\n                controllerData.impostor.setAngularVelocity(_this._tmpVector);\n            }\n            else {\n                if (!comparedQuaternion.equalsWithEpsilon(controllerMesh.rotationQuaternion)) {\n                    // roughly based on this - https://www.gamedev.net/forums/topic/347752-quaternion-and-angular-velocity/\n                    comparedQuaternion.conjugateInPlace().multiplyToRef(controllerMesh.rotationQuaternion, _this._tmpQuaternion);\n                    var len = Math.sqrt(_this._tmpQuaternion.x * _this._tmpQuaternion.x + _this._tmpQuaternion.y * _this._tmpQuaternion.y + _this._tmpQuaternion.z * _this._tmpQuaternion.z);\n                    _this._tmpVector.set(_this._tmpQuaternion.x, _this._tmpQuaternion.y, _this._tmpQuaternion.z);\n                    // define a better epsilon\n                    if (len < 0.001) {\n                        _this._tmpVector.scaleInPlace(2);\n                    }\n                    else {\n                        var angle = 2 * Math.atan2(len, _this._tmpQuaternion.w);\n                        _this._tmpVector.scaleInPlace(angle / (len * (_this._delta / 1000)));\n                    }\n                    controllerData.impostor.setAngularVelocity(_this._tmpVector);\n                }\n            }\n            comparedQuaternion.copyFrom(controllerMesh.rotationQuaternion);\n            if (_this._debugMode) {\n                console.log(_this._tmpVector, _this._tmpQuaternion, \"angular\");\n            }\n        });\n    };\n    WebXRControllerPhysics.prototype._detachController = function (xrControllerUniqueId) {\n        var controllerData = this._controllers[xrControllerUniqueId];\n        if (!controllerData) {\n            return;\n        }\n        if (controllerData.impostorMesh) {\n            controllerData.impostorMesh.dispose();\n        }\n        // remove from the map\n        delete this._controllers[xrControllerUniqueId];\n    };\n    /**\n     * The module's name\n     */\n    WebXRControllerPhysics.Name = WebXRFeatureName.PHYSICS_CONTROLLERS;\n    /**\n     * The (Babylon) version of this module.\n     * This is an integer representing the implementation version.\n     * This number does not correspond to the webxr specs version\n     */\n    WebXRControllerPhysics.Version = 1;\n    return WebXRControllerPhysics;\n}(WebXRAbstractFeature));\nexport { WebXRControllerPhysics };\n//register the plugin\nWebXRFeaturesManager.AddWebXRFeature(WebXRControllerPhysics.Name, function (xrSessionManager, options) {\n    return function () { return new WebXRControllerPhysics(xrSessionManager, options); };\n}, WebXRControllerPhysics.Version, true);\n//# sourceMappingURL=WebXRControllerPhysics.js.map","import { __extends } from \"tslib\";\nimport { WebXRFeaturesManager, WebXRFeatureName } from \"../webXRFeaturesManager.js\";\nimport { Observable } from \"../../Misc/observable.js\";\nimport { Vector3, Matrix, Quaternion } from \"../../Maths/math.vector.js\";\nimport { WebXRAbstractFeature } from \"./WebXRAbstractFeature.js\";\nimport { Tools } from \"../../Misc/tools.js\";\n/**\n * The currently-working hit-test module.\n * Hit test (or Ray-casting) is used to interact with the real world.\n * For further information read here - https://github.com/immersive-web/hit-test\n *\n * Tested on chrome (mobile) 80.\n */\nvar WebXRHitTest = /** @class */ (function (_super) {\n    __extends(WebXRHitTest, _super);\n    /**\n     * Creates a new instance of the hit test feature\n     * @param _xrSessionManager an instance of WebXRSessionManager\n     * @param options options to use when constructing this feature\n     */\n    function WebXRHitTest(_xrSessionManager, \n    /**\n     * options to use when constructing this feature\n     */\n    options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, _xrSessionManager) || this;\n        _this.options = options;\n        _this._tmpMat = new Matrix();\n        _this._tmpPos = new Vector3();\n        _this._tmpQuat = new Quaternion();\n        _this._initHitTestSource = function (referenceSpace) {\n            if (!referenceSpace) {\n                return;\n            }\n            var offsetRay = new XRRay(_this.options.offsetRay || {});\n            var hitTestOptions = {\n                space: _this.options.useReferenceSpace ? referenceSpace : _this._xrSessionManager.viewerReferenceSpace,\n                offsetRay: offsetRay,\n            };\n            if (_this.options.entityTypes) {\n                hitTestOptions.entityTypes = _this.options.entityTypes;\n            }\n            if (!hitTestOptions.space) {\n                Tools.Warn(\"waiting for viewer reference space to initialize\");\n                return;\n            }\n            _this._xrSessionManager.session.requestHitTestSource(hitTestOptions).then(function (hitTestSource) {\n                if (_this._xrHitTestSource) {\n                    _this._xrHitTestSource.cancel();\n                }\n                _this._xrHitTestSource = hitTestSource;\n            });\n        };\n        /**\n         * When set to true, each hit test will have its own position/rotation objects\n         * When set to false, position and rotation objects will be reused for each hit test. It is expected that\n         * the developers will clone them or copy them as they see fit.\n         */\n        _this.autoCloneTransformation = false;\n        /**\n         * Triggered when new babylon (transformed) hit test results are available\n         * Note - this will be called when results come back from the device. It can be an empty array!!\n         */\n        _this.onHitTestResultObservable = new Observable();\n        /**\n         * Use this to temporarily pause hit test checks.\n         */\n        _this.paused = false;\n        _this.xrNativeFeatureName = \"hit-test\";\n        Tools.Warn(\"Hit test is an experimental and unstable feature.\");\n        return _this;\n    }\n    /**\n     * attach this feature\n     * Will usually be called by the features manager\n     *\n     * @returns true if successful.\n     */\n    WebXRHitTest.prototype.attach = function () {\n        var _this = this;\n        if (!_super.prototype.attach.call(this)) {\n            return false;\n        }\n        // Feature enabled, but not available\n        if (!this._xrSessionManager.session.requestHitTestSource) {\n            return false;\n        }\n        if (!this.options.disablePermanentHitTest) {\n            if (this._xrSessionManager.referenceSpace) {\n                this._initHitTestSource(this._xrSessionManager.referenceSpace);\n            }\n            this._xrSessionManager.onXRReferenceSpaceChanged.add(this._initHitTestSource);\n        }\n        if (this.options.enableTransientHitTest) {\n            var offsetRay = new XRRay(this.options.transientOffsetRay || {});\n            this._xrSessionManager.session.requestHitTestSourceForTransientInput({\n                profile: this.options.transientHitTestProfile || \"generic-touchscreen\",\n                offsetRay: offsetRay,\n                entityTypes: this.options.entityTypes,\n            }).then(function (hitSource) {\n                _this._transientXrHitTestSource = hitSource;\n            });\n        }\n        return true;\n    };\n    /**\n     * detach this feature.\n     * Will usually be called by the features manager\n     *\n     * @returns true if successful.\n     */\n    WebXRHitTest.prototype.detach = function () {\n        if (!_super.prototype.detach.call(this)) {\n            return false;\n        }\n        if (this._xrHitTestSource) {\n            this._xrHitTestSource.cancel();\n            this._xrHitTestSource = null;\n        }\n        this._xrSessionManager.onXRReferenceSpaceChanged.removeCallback(this._initHitTestSource);\n        if (this._transientXrHitTestSource) {\n            this._transientXrHitTestSource.cancel();\n            this._transientXrHitTestSource = null;\n        }\n        return true;\n    };\n    /**\n     * Dispose this feature and all of the resources attached\n     */\n    WebXRHitTest.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.onHitTestResultObservable.clear();\n    };\n    WebXRHitTest.prototype._onXRFrame = function (frame) {\n        var _this = this;\n        // make sure we do nothing if (async) not attached\n        if (!this.attached || this.paused) {\n            return;\n        }\n        if (this._xrHitTestSource) {\n            var results = frame.getHitTestResults(this._xrHitTestSource);\n            this._processWebXRHitTestResult(results);\n        }\n        if (this._transientXrHitTestSource) {\n            var hitTestResultsPerInputSource = frame.getHitTestResultsForTransientInput(this._transientXrHitTestSource);\n            hitTestResultsPerInputSource.forEach(function (resultsPerInputSource) {\n                _this._processWebXRHitTestResult(resultsPerInputSource.results, resultsPerInputSource.inputSource);\n            });\n        }\n    };\n    WebXRHitTest.prototype._processWebXRHitTestResult = function (hitTestResults, inputSource) {\n        var _this = this;\n        var results = [];\n        hitTestResults.forEach(function (hitTestResult) {\n            var pose = hitTestResult.getPose(_this._xrSessionManager.referenceSpace);\n            if (!pose) {\n                return;\n            }\n            var pos = pose.transform.position;\n            var quat = pose.transform.orientation;\n            _this._tmpPos.set(pos.x, pos.y, pos.z);\n            _this._tmpQuat.set(quat.x, quat.y, quat.z, quat.w);\n            Matrix.FromFloat32ArrayToRefScaled(pose.transform.matrix, 0, 1, _this._tmpMat);\n            if (!_this._xrSessionManager.scene.useRightHandedSystem) {\n                _this._tmpPos.z *= -1;\n                _this._tmpQuat.z *= -1;\n                _this._tmpQuat.w *= -1;\n                _this._tmpMat.toggleModelMatrixHandInPlace();\n            }\n            var result = {\n                position: _this.autoCloneTransformation ? _this._tmpPos.clone() : _this._tmpPos,\n                rotationQuaternion: _this.autoCloneTransformation ? _this._tmpQuat.clone() : _this._tmpQuat,\n                transformationMatrix: _this.autoCloneTransformation ? _this._tmpMat.clone() : _this._tmpMat,\n                inputSource: inputSource,\n                isTransient: !!inputSource,\n                xrHitResult: hitTestResult,\n            };\n            results.push(result);\n        });\n        this.onHitTestResultObservable.notifyObservers(results);\n    };\n    /**\n     * The module's name\n     */\n    WebXRHitTest.Name = WebXRFeatureName.HIT_TEST;\n    /**\n     * The (Babylon) version of this module.\n     * This is an integer representing the implementation version.\n     * This number does not correspond to the WebXR specs version\n     */\n    WebXRHitTest.Version = 2;\n    return WebXRHitTest;\n}(WebXRAbstractFeature));\nexport { WebXRHitTest };\n//register the plugin versions\nWebXRFeaturesManager.AddWebXRFeature(WebXRHitTest.Name, function (xrSessionManager, options) {\n    return function () { return new WebXRHitTest(xrSessionManager, options); };\n}, WebXRHitTest.Version, false);\n//# sourceMappingURL=WebXRHitTest.js.map","import { __extends } from \"tslib\";\nimport { WebXRFeaturesManager, WebXRFeatureName } from \"../webXRFeaturesManager.js\";\nimport { Observable } from \"../../Misc/observable.js\";\nimport { Vector3 } from \"../../Maths/math.vector.js\";\nimport { WebXRAbstractFeature } from \"./WebXRAbstractFeature.js\";\n/**\n * The feature point system is used to detect feature points from real world geometry.\n * This feature is currently experimental and only supported on BabylonNative, and should not be used in the browser.\n * The newly introduced API can be seen in webxr.nativeextensions.d.ts and described in FeaturePoints.md.\n */\nvar WebXRFeaturePointSystem = /** @class */ (function (_super) {\n    __extends(WebXRFeaturePointSystem, _super);\n    /**\n     * construct the feature point system\n     * @param _xrSessionManager an instance of xr Session manager\n     */\n    function WebXRFeaturePointSystem(_xrSessionManager) {\n        var _this = _super.call(this, _xrSessionManager) || this;\n        _this._enabled = false;\n        _this._featurePointCloud = [];\n        /**\n         * Observers registered here will be executed whenever new feature points are added (on XRFrame while the session is tracking).\n         * Will notify the observers about which feature points have been added.\n         */\n        _this.onFeaturePointsAddedObservable = new Observable();\n        /**\n         * Observers registered here will be executed whenever a feature point has been updated (on XRFrame while the session is tracking).\n         * Will notify the observers about which feature points have been updated.\n         */\n        _this.onFeaturePointsUpdatedObservable = new Observable();\n        _this.xrNativeFeatureName = \"bjsfeature-points\";\n        if (_this._xrSessionManager.session) {\n            _this._init();\n        }\n        else {\n            _this._xrSessionManager.onXRSessionInit.addOnce(function () {\n                _this._init();\n            });\n        }\n        return _this;\n    }\n    Object.defineProperty(WebXRFeaturePointSystem.prototype, \"featurePointCloud\", {\n        /**\n         * The current feature point cloud maintained across frames.\n         */\n        get: function () {\n            return this._featurePointCloud;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Detach this feature.\n     * Will usually be called by the features manager\n     *\n     * @returns true if successful.\n     */\n    WebXRFeaturePointSystem.prototype.detach = function () {\n        if (!_super.prototype.detach.call(this)) {\n            return false;\n        }\n        this.featurePointCloud.length = 0;\n        return true;\n    };\n    /**\n     * Dispose this feature and all of the resources attached\n     */\n    WebXRFeaturePointSystem.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._featurePointCloud.length = 0;\n        this.onFeaturePointsUpdatedObservable.clear();\n        this.onFeaturePointsAddedObservable.clear();\n    };\n    /**\n     * On receiving a new XR frame if this feature is attached notify observers new feature point data is available.\n     * @param frame\n     */\n    WebXRFeaturePointSystem.prototype._onXRFrame = function (frame) {\n        if (!this.attached || !this._enabled || !frame) {\n            return;\n        }\n        var featurePointRawData = frame.featurePointCloud;\n        if (!featurePointRawData || featurePointRawData.length === 0) {\n            return;\n        }\n        else {\n            if (featurePointRawData.length % 5 !== 0) {\n                throw new Error(\"Received malformed feature point cloud of length: \" + featurePointRawData.length);\n            }\n            var numberOfFeaturePoints = featurePointRawData.length / 5;\n            var updatedFeaturePoints = new Array();\n            var addedFeaturePoints = new Array();\n            for (var i = 0; i < numberOfFeaturePoints; i++) {\n                var rawIndex = i * 5;\n                var id = featurePointRawData[rawIndex + 4];\n                // IDs should be durable across frames and strictly increasing from 0 up, so use them as indexing into the feature point array.\n                if (!this._featurePointCloud[id]) {\n                    this._featurePointCloud[id] = { position: new Vector3(), confidenceValue: 0 };\n                    addedFeaturePoints.push(id);\n                }\n                else {\n                    updatedFeaturePoints.push(id);\n                }\n                // Set the feature point values.\n                this._featurePointCloud[id].position.x = featurePointRawData[rawIndex];\n                this._featurePointCloud[id].position.y = featurePointRawData[rawIndex + 1];\n                this._featurePointCloud[id].position.z = featurePointRawData[rawIndex + 2];\n                this._featurePointCloud[id].confidenceValue = featurePointRawData[rawIndex + 3];\n            }\n            // Signal observers that feature points have been added if necessary.\n            if (addedFeaturePoints.length > 0) {\n                this.onFeaturePointsAddedObservable.notifyObservers(addedFeaturePoints);\n            }\n            // Signal observers that feature points have been updated if necessary.\n            if (updatedFeaturePoints.length > 0) {\n                this.onFeaturePointsUpdatedObservable.notifyObservers(updatedFeaturePoints);\n            }\n        }\n    };\n    /**\n     * Initializes the feature. If the feature point feature is not available for this environment do not mark the feature as enabled.\n     */\n    WebXRFeaturePointSystem.prototype._init = function () {\n        if (!this._xrSessionManager.session.trySetFeaturePointCloudEnabled || !this._xrSessionManager.session.trySetFeaturePointCloudEnabled(true)) {\n            // fail silently\n            return;\n        }\n        this._enabled = true;\n    };\n    /**\n     * The module's name\n     */\n    WebXRFeaturePointSystem.Name = WebXRFeatureName.FEATURE_POINTS;\n    /**\n     * The (Babylon) version of this module.\n     * This is an integer representing the implementation version.\n     * This number does not correspond to the WebXR specs version\n     */\n    WebXRFeaturePointSystem.Version = 1;\n    return WebXRFeaturePointSystem;\n}(WebXRAbstractFeature));\nexport { WebXRFeaturePointSystem };\n// register the plugin\nWebXRFeaturesManager.AddWebXRFeature(WebXRFeaturePointSystem.Name, function (xrSessionManager) {\n    return function () { return new WebXRFeaturePointSystem(xrSessionManager); };\n}, WebXRFeaturePointSystem.Version);\n//# sourceMappingURL=WebXRFeaturePointSystem.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { WebXRFeaturesManager, WebXRFeatureName } from \"../webXRFeaturesManager.js\";\nimport { Observable } from \"../../Misc/observable.js\";\nimport { WebXRAbstractFeature } from \"./WebXRAbstractFeature.js\";\nimport { Matrix } from \"../../Maths/math.vector.js\";\nimport { Tools } from \"../../Misc/tools.js\";\n/**\n * Enum that describes the state of the image trackability score status for this session.\n */\nvar ImageTrackingScoreStatus;\n(function (ImageTrackingScoreStatus) {\n    // AR Session has not yet assessed image trackability scores.\n    ImageTrackingScoreStatus[ImageTrackingScoreStatus[\"NotReceived\"] = 0] = \"NotReceived\";\n    // A request to retrieve trackability scores has been sent, but no response has been received.\n    ImageTrackingScoreStatus[ImageTrackingScoreStatus[\"Waiting\"] = 1] = \"Waiting\";\n    // Image trackability scores have been received for this session\n    ImageTrackingScoreStatus[ImageTrackingScoreStatus[\"Received\"] = 2] = \"Received\";\n})(ImageTrackingScoreStatus || (ImageTrackingScoreStatus = {}));\n/**\n * Image tracking for immersive AR sessions.\n * Providing a list of images and their estimated widths will enable tracking those images in the real world.\n */\nvar WebXRImageTracking = /** @class */ (function (_super) {\n    __extends(WebXRImageTracking, _super);\n    /**\n     * constructs the image tracking feature\n     * @param _xrSessionManager the session manager for this module\n     * @param options read-only options to be used in this module\n     */\n    function WebXRImageTracking(_xrSessionManager, \n    /**\n     * read-only options to be used in this module\n     */\n    options) {\n        var _this = _super.call(this, _xrSessionManager) || this;\n        _this.options = options;\n        /**\n         * This will be triggered if the underlying system deems an image untrackable.\n         * The index is the index of the image from the array used to initialize the feature.\n         */\n        _this.onUntrackableImageFoundObservable = new Observable();\n        /**\n         * An image was deemed trackable, and the system will start tracking it.\n         */\n        _this.onTrackableImageFoundObservable = new Observable();\n        /**\n         * The image was found and its state was updated.\n         */\n        _this.onTrackedImageUpdatedObservable = new Observable();\n        _this._trackableScoreStatus = ImageTrackingScoreStatus.NotReceived;\n        _this._trackedImages = [];\n        _this.xrNativeFeatureName = \"image-tracking\";\n        return _this;\n    }\n    /**\n     * attach this feature\n     * Will usually be called by the features manager\n     *\n     * @returns true if successful.\n     */\n    WebXRImageTracking.prototype.attach = function () {\n        return _super.prototype.attach.call(this);\n    };\n    /**\n     * detach this feature.\n     * Will usually be called by the features manager\n     *\n     * @returns true if successful.\n     */\n    WebXRImageTracking.prototype.detach = function () {\n        return _super.prototype.detach.call(this);\n    };\n    /**\n     * Get a tracked image by its ID.\n     *\n     * @param id the id of the image to load (position in the init array)\n     * @returns a trackable image, if exists in this location\n     */\n    WebXRImageTracking.prototype.getTrackedImageById = function (id) {\n        return this._trackedImages[id] || null;\n    };\n    /**\n     * Dispose this feature and all of the resources attached\n     */\n    WebXRImageTracking.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._trackedImages.forEach(function (trackedImage) {\n            trackedImage.originalBitmap.close();\n        });\n        this._trackedImages.length = 0;\n        this.onTrackableImageFoundObservable.clear();\n        this.onUntrackableImageFoundObservable.clear();\n        this.onTrackedImageUpdatedObservable.clear();\n    };\n    /**\n     * Extends the session init object if needed\n     * @returns augmentation object fo the xr session init object.\n     */\n    WebXRImageTracking.prototype.getXRSessionInitExtension = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var promises, images, ex_1;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this.options.images || !this.options.images.length) {\n                            return [2 /*return*/, {}];\n                        }\n                        promises = this.options.images.map(function (image) {\n                            if (typeof image.src === \"string\") {\n                                return _this._xrSessionManager.scene.getEngine()._createImageBitmapFromSource(image.src);\n                            }\n                            else {\n                                return Promise.resolve(image.src); // resolve is probably unneeded\n                            }\n                        });\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, Promise.all(promises)];\n                    case 2:\n                        images = _a.sent();\n                        this._originalTrackingRequest = images.map(function (image, idx) {\n                            return {\n                                image: image,\n                                widthInMeters: _this.options.images[idx].estimatedRealWorldWidth,\n                            };\n                        });\n                        return [2 /*return*/, {\n                                trackedImages: this._originalTrackingRequest,\n                            }];\n                    case 3:\n                        ex_1 = _a.sent();\n                        Tools.Error(\"Error loading images for tracking, WebXRImageTracking disabled for this session.\");\n                        return [2 /*return*/, {}];\n                    case 4: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    WebXRImageTracking.prototype._onXRFrame = function (_xrFrame) {\n        if (!_xrFrame.getImageTrackingResults || this._trackableScoreStatus === ImageTrackingScoreStatus.Waiting) {\n            return;\n        }\n        // Image tracking scores may be generated a few frames after the XR Session initializes.\n        // If we haven't received scores yet, then kick off the task to check scores and return immediately.\n        if (this._trackableScoreStatus === ImageTrackingScoreStatus.NotReceived) {\n            this._checkScoresAsync();\n            return;\n        }\n        var imageTrackedResults = _xrFrame.getImageTrackingResults();\n        for (var _i = 0, imageTrackedResults_1 = imageTrackedResults; _i < imageTrackedResults_1.length; _i++) {\n            var result = imageTrackedResults_1[_i];\n            var changed = false;\n            var imageIndex = result.index;\n            var imageObject = this._trackedImages[imageIndex];\n            if (!imageObject) {\n                // something went wrong!\n                continue;\n            }\n            imageObject.xrTrackingResult = result;\n            if (imageObject.realWorldWidth !== result.measuredWidthInMeters) {\n                imageObject.realWorldWidth = result.measuredWidthInMeters;\n                changed = true;\n            }\n            // Get the pose of the image relative to a reference space.\n            var pose = _xrFrame.getPose(result.imageSpace, this._xrSessionManager.referenceSpace);\n            if (pose) {\n                var mat = imageObject.transformationMatrix;\n                Matrix.FromArrayToRef(pose.transform.matrix, 0, mat);\n                if (!this._xrSessionManager.scene.useRightHandedSystem) {\n                    mat.toggleModelMatrixHandInPlace();\n                }\n                changed = true;\n            }\n            var state = result.trackingState;\n            var emulated = state === \"emulated\";\n            if (imageObject.emulated !== emulated) {\n                imageObject.emulated = emulated;\n                changed = true;\n            }\n            if (changed) {\n                this.onTrackedImageUpdatedObservable.notifyObservers(imageObject);\n            }\n        }\n    };\n    WebXRImageTracking.prototype._checkScoresAsync = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var imageScores, idx, originalBitmap, imageObject;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this._xrSessionManager.session.getTrackedImageScores || this._trackableScoreStatus !== ImageTrackingScoreStatus.NotReceived) {\n                            return [2 /*return*/];\n                        }\n                        this._trackableScoreStatus = ImageTrackingScoreStatus.Waiting;\n                        return [4 /*yield*/, this._xrSessionManager.session.getTrackedImageScores()];\n                    case 1:\n                        imageScores = _a.sent();\n                        if (!imageScores || imageScores.length === 0) {\n                            this._trackableScoreStatus = ImageTrackingScoreStatus.NotReceived;\n                            return [2 /*return*/];\n                        }\n                        // check the scores for all\n                        for (idx = 0; idx < imageScores.length; ++idx) {\n                            if (imageScores[idx] == \"untrackable\") {\n                                this.onUntrackableImageFoundObservable.notifyObservers(idx);\n                            }\n                            else {\n                                originalBitmap = this._originalTrackingRequest[idx].image;\n                                imageObject = {\n                                    id: idx,\n                                    originalBitmap: originalBitmap,\n                                    transformationMatrix: new Matrix(),\n                                    ratio: originalBitmap.width / originalBitmap.height,\n                                };\n                                this._trackedImages[idx] = imageObject;\n                                this.onTrackableImageFoundObservable.notifyObservers(imageObject);\n                            }\n                        }\n                        this._trackableScoreStatus = imageScores.length > 0 ? ImageTrackingScoreStatus.Received : ImageTrackingScoreStatus.NotReceived;\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * The module's name\n     */\n    WebXRImageTracking.Name = WebXRFeatureName.IMAGE_TRACKING;\n    /**\n     * The (Babylon) version of this module.\n     * This is an integer representing the implementation version.\n     * This number does not correspond to the WebXR specs version\n     */\n    WebXRImageTracking.Version = 1;\n    return WebXRImageTracking;\n}(WebXRAbstractFeature));\nexport { WebXRImageTracking };\n//register the plugin\nWebXRFeaturesManager.AddWebXRFeature(WebXRImageTracking.Name, function (xrSessionManager, options) {\n    return function () { return new WebXRImageTracking(xrSessionManager, options); };\n}, WebXRImageTracking.Version, false);\n//# sourceMappingURL=WebXRImageTracking.js.map","import { __extends } from \"tslib\";\nimport { WebXRFeaturesManager, WebXRFeatureName } from \"../webXRFeaturesManager.js\";\nimport { WebXRAbstractFeature } from \"./WebXRAbstractFeature.js\";\nimport { Matrix } from \"../../Maths/math.js\";\nimport { Observable } from \"../../Misc/observable.js\";\nvar meshIdProvider = 0;\n/**\n * The mesh detector is used to detect meshes in the real world when in AR\n */\nvar WebXRMeshDetector = /** @class */ (function (_super) {\n    __extends(WebXRMeshDetector, _super);\n    function WebXRMeshDetector(_xrSessionManager, _options) {\n        if (_options === void 0) { _options = {}; }\n        var _this = _super.call(this, _xrSessionManager) || this;\n        _this._options = _options;\n        _this._detectedMeshes = new Map();\n        /**\n         * Observers registered here will be executed when a new mesh was added to the session\n         */\n        _this.onMeshAddedObservable = new Observable();\n        /**\n         * Observers registered here will be executed when a mesh is no longer detected in the session\n         */\n        _this.onMeshRemovedObservable = new Observable();\n        /**\n         * Observers registered here will be executed when an existing mesh updates\n         */\n        _this.onMeshUpdatedObservable = new Observable();\n        _this.xrNativeFeatureName = \"mesh-detection\";\n        if (_this._xrSessionManager.session) {\n            _this._init();\n        }\n        else {\n            _this._xrSessionManager.onXRSessionInit.addOnce(function () {\n                _this._init();\n            });\n        }\n        return _this;\n    }\n    WebXRMeshDetector.prototype.detach = function () {\n        var _this = this;\n        if (!_super.prototype.detach.call(this)) {\n            return false;\n        }\n        // Only supported by BabylonNative\n        if (!!this._xrSessionManager.isNative && !!this._xrSessionManager.session.trySetMeshDetectorEnabled) {\n            this._xrSessionManager.session.trySetMeshDetectorEnabled(false);\n        }\n        if (!this._options.doNotRemoveMeshesOnSessionEnded) {\n            this._detectedMeshes.forEach(function (mesh) {\n                _this.onMeshRemovedObservable.notifyObservers(mesh);\n            });\n            this._detectedMeshes.clear();\n        }\n        return true;\n    };\n    WebXRMeshDetector.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.onMeshAddedObservable.clear();\n        this.onMeshRemovedObservable.clear();\n        this.onMeshUpdatedObservable.clear();\n    };\n    WebXRMeshDetector.prototype._onXRFrame = function (frame) {\n        var _this = this;\n        var _a;\n        // TODO remove try catch\n        try {\n            if (!this.attached || !frame) {\n                return;\n            }\n            var detectedMeshes_1 = (_a = frame.worldInformation) === null || _a === void 0 ? void 0 : _a.detectedMeshes;\n            if (detectedMeshes_1) {\n                var toRemove_1 = new Set();\n                this._detectedMeshes.forEach(function (vertexData, xrMesh) {\n                    if (!detectedMeshes_1.has(xrMesh)) {\n                        toRemove_1.add(xrMesh);\n                    }\n                });\n                toRemove_1.forEach(function (xrMesh) {\n                    var vertexData = _this._detectedMeshes.get(xrMesh);\n                    if (vertexData) {\n                        _this.onMeshRemovedObservable.notifyObservers(vertexData);\n                        _this._detectedMeshes.delete(xrMesh);\n                    }\n                });\n                // now check for new ones\n                detectedMeshes_1.forEach(function (xrMesh) {\n                    if (!_this._detectedMeshes.has(xrMesh)) {\n                        var partialVertexData = {\n                            id: meshIdProvider++,\n                            xrMesh: xrMesh,\n                        };\n                        var vertexData = _this._updateVertexDataWithXRMesh(xrMesh, partialVertexData, frame);\n                        _this._detectedMeshes.set(xrMesh, vertexData);\n                        _this.onMeshAddedObservable.notifyObservers(vertexData);\n                    }\n                    else {\n                        // updated?\n                        if (xrMesh.lastChangedTime === _this._xrSessionManager.currentTimestamp) {\n                            var vertexData = _this._detectedMeshes.get(xrMesh);\n                            if (vertexData) {\n                                _this._updateVertexDataWithXRMesh(xrMesh, vertexData, frame);\n                                _this.onMeshUpdatedObservable.notifyObservers(vertexData);\n                            }\n                        }\n                    }\n                });\n            }\n        }\n        catch (error) {\n            console.log(error.stack);\n        }\n    };\n    WebXRMeshDetector.prototype._init = function () {\n        // Only supported by BabylonNative\n        if (this._xrSessionManager.isNative) {\n            if (this._xrSessionManager.session.trySetMeshDetectorEnabled) {\n                this._xrSessionManager.session.trySetMeshDetectorEnabled(true);\n            }\n            if (!!this._options.preferredDetectorOptions && !!this._xrSessionManager.session.trySetPreferredMeshDetectorOptions) {\n                this._xrSessionManager.session.trySetPreferredMeshDetectorOptions(this._options.preferredDetectorOptions);\n            }\n        }\n    };\n    WebXRMeshDetector.prototype._updateVertexDataWithXRMesh = function (xrMesh, mesh, xrFrame) {\n        mesh.xrMesh = xrMesh;\n        mesh.worldParentNode = this._options.worldParentNode;\n        if (this._options.convertCoordinateSystems) {\n            if (!this._xrSessionManager.scene.useRightHandedSystem) {\n                mesh.positions = new Float32Array(xrMesh.positions.length);\n                for (var i = 0; i < xrMesh.positions.length; i += 3) {\n                    mesh.positions[i] = xrMesh.positions[i];\n                    mesh.positions[i + 1] = xrMesh.positions[i + 1];\n                    mesh.positions[i + 2] = -1 * xrMesh.positions[i + 2];\n                }\n                if (xrMesh.normals) {\n                    mesh.normals = new Float32Array(xrMesh.normals.length);\n                    for (var i = 0; i < xrMesh.normals.length; i += 3) {\n                        mesh.normals[i] = xrMesh.normals[i];\n                        mesh.normals[i + 1] = xrMesh.normals[i + 1];\n                        mesh.normals[i + 2] = -1 * xrMesh.normals[i + 2];\n                    }\n                }\n            }\n            else {\n                mesh.positions = xrMesh.positions;\n                mesh.normals = xrMesh.normals;\n            }\n            // WebXR should provide indices in a counterclockwise winding order regardless of coordinate system handedness\n            mesh.indices = xrMesh.indices;\n            // matrix\n            var pose = xrFrame.getPose(xrMesh.meshSpace, this._xrSessionManager.referenceSpace);\n            if (pose) {\n                var mat = mesh.transformationMatrix || new Matrix();\n                Matrix.FromArrayToRef(pose.transform.matrix, 0, mat);\n                if (!this._xrSessionManager.scene.useRightHandedSystem) {\n                    mat.toggleModelMatrixHandInPlace();\n                }\n                mesh.transformationMatrix = mat;\n                if (this._options.worldParentNode) {\n                    mat.multiplyToRef(this._options.worldParentNode.getWorldMatrix(), mat);\n                }\n            }\n        }\n        return mesh;\n    };\n    /**\n     * The module's name\n     */\n    WebXRMeshDetector.Name = WebXRFeatureName.MESH_DETECTION;\n    /**\n     * The (Babylon) version of this module.\n     * This is an integer representing the implementation version.\n     * This number does not correspond to the WebXR specs version\n     */\n    WebXRMeshDetector.Version = 1;\n    return WebXRMeshDetector;\n}(WebXRAbstractFeature));\nexport { WebXRMeshDetector };\nWebXRFeaturesManager.AddWebXRFeature(WebXRMeshDetector.Name, function (xrSessionManager, options) {\n    return function () { return new WebXRMeshDetector(xrSessionManager, options); };\n}, WebXRMeshDetector.Version, false);\n//# sourceMappingURL=WebXRMeshDetector.js.map","import { __awaiter, __extends, __generator } from \"tslib\";\nimport { Tools } from \"../../Misc/tools.js\";\nimport { WebXRFeatureName, WebXRFeaturesManager } from \"../webXRFeaturesManager.js\";\nimport { WebXRAbstractFeature } from \"./WebXRAbstractFeature.js\";\n/**\n * DOM Overlay Feature\n *\n * @since 5.0.0\n */\nvar WebXRDomOverlay = /** @class */ (function (_super) {\n    __extends(WebXRDomOverlay, _super);\n    /**\n     * Creates a new instance of the dom-overlay feature\n     * @param _xrSessionManager an instance of WebXRSessionManager\n     * @param options options to use when constructing this feature\n     */\n    function WebXRDomOverlay(_xrSessionManager, \n    /**\n     * options to use when constructing this feature\n     */\n    options) {\n        var _this = _super.call(this, _xrSessionManager) || this;\n        _this.options = options;\n        /**\n         * Type of overlay - non-null when available\n         */\n        _this._domOverlayType = null;\n        /**\n         * Event Listener to supress \"beforexrselect\" events.\n         */\n        _this._beforeXRSelectListener = null;\n        /**\n         * Element used for overlay\n         */\n        _this._element = null;\n        _this.xrNativeFeatureName = \"dom-overlay\";\n        // https://immersive-web.github.io/dom-overlays/\n        Tools.Warn(\"dom-overlay is an experimental and unstable feature.\");\n        return _this;\n    }\n    /**\n     * attach this feature\n     * Will usually be called by the features manager\n     *\n     * @returns true if successful.\n     */\n    WebXRDomOverlay.prototype.attach = function () {\n        if (!_super.prototype.attach.call(this)) {\n            return false;\n        }\n        // Feature not available\n        if (!this._xrSessionManager.session.domOverlayState || this._xrSessionManager.session.domOverlayState.type === null) {\n            return false;\n        }\n        this._domOverlayType = this._xrSessionManager.session.domOverlayState.type;\n        if (this._element !== null && this.options.supressXRSelectEvents === true) {\n            this._beforeXRSelectListener = function (ev) {\n                ev.preventDefault();\n            };\n            this._element.addEventListener(\"beforexrselect\", this._beforeXRSelectListener);\n        }\n        return true;\n    };\n    Object.defineProperty(WebXRDomOverlay.prototype, \"domOverlayType\", {\n        /**\n         * The type of DOM overlay (null when not supported).  Provided by UA and remains unchanged for duration of session.\n         */\n        get: function () {\n            return this._domOverlayType;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Dispose this feature and all of the resources attached\n     */\n    WebXRDomOverlay.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        if (this._element !== null && this._beforeXRSelectListener) {\n            this._element.removeEventListener(\"beforexrselect\", this._beforeXRSelectListener);\n        }\n    };\n    WebXRDomOverlay.prototype._onXRFrame = function (_xrFrame) {\n        /* empty */\n    };\n    /**\n     * Extends the session init object if needed\n     * @returns augmentation object for the xr session init object.\n     */\n    WebXRDomOverlay.prototype.getXRSessionInitExtension = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var selectedElement;\n            return __generator(this, function (_a) {\n                if (this.options.element === undefined) {\n                    Tools.Warn('\"element\" option must be provided to attach xr-dom-overlay feature.');\n                    return [2 /*return*/, {}];\n                }\n                else if (typeof this.options.element === \"string\") {\n                    selectedElement = document.querySelector(this.options.element);\n                    if (selectedElement === null) {\n                        Tools.Warn(\"element not found '\".concat(this.options.element, \"' (not requesting xr-dom-overlay)\"));\n                        return [2 /*return*/, {}];\n                    }\n                    this._element = selectedElement;\n                }\n                else {\n                    this._element = this.options.element;\n                }\n                return [2 /*return*/, {\n                        domOverlay: {\n                            root: this._element,\n                        },\n                    }];\n            });\n        });\n    };\n    /**\n     * The module's name\n     */\n    WebXRDomOverlay.Name = WebXRFeatureName.DOM_OVERLAY;\n    /**\n     * The (Babylon) version of this module.\n     * This is an integer representing the implementation version.\n     * This number does not correspond to the WebXR specs version\n     */\n    WebXRDomOverlay.Version = 1;\n    return WebXRDomOverlay;\n}(WebXRAbstractFeature));\nexport { WebXRDomOverlay };\n//register the plugin\nWebXRFeaturesManager.AddWebXRFeature(WebXRDomOverlay.Name, function (xrSessionManager, options) {\n    return function () { return new WebXRDomOverlay(xrSessionManager, options); };\n}, WebXRDomOverlay.Version, false);\n//# sourceMappingURL=WebXRDOMOverlay.js.map","import { __extends } from \"tslib\";\nimport { WebXRFeaturesManager, WebXRFeatureName } from \"../webXRFeaturesManager.js\";\nimport { WebXRControllerComponent } from \"../motionController/webXRControllerComponent.js\";\nimport { Matrix, Quaternion, Vector3 } from \"../../Maths/math.vector.js\";\nimport { WebXRAbstractFeature } from \"./WebXRAbstractFeature.js\";\nimport { Tools } from \"../../Misc/tools.js\";\n/**\n * This is a movement feature to be used with WebXR-enabled motion controllers.\n * When enabled and attached, the feature will allow a user to move around and rotate in the scene using\n * the input of the attached controllers.\n */\nvar WebXRControllerMovement = /** @class */ (function (_super) {\n    __extends(WebXRControllerMovement, _super);\n    /**\n     * constructs a new movement controller system\n     * @param _xrSessionManager an instance of WebXRSessionManager\n     * @param options configuration object for this feature\n     */\n    function WebXRControllerMovement(_xrSessionManager, options) {\n        var _this = this;\n        var _a, _b, _c, _d, _e, _f;\n        _this = _super.call(this, _xrSessionManager) || this;\n        _this._controllers = {};\n        _this._currentRegistrationConfigurations = [];\n        // forward direction for movement, which may differ from viewer pose.\n        _this._movementDirection = null;\n        // unused\n        _this._tmpRotationMatrix = Matrix.Identity();\n        _this._tmpTranslationDirection = new Vector3();\n        _this._tmpMovementTranslation = new Vector3();\n        _this._attachController = function (xrController) {\n            if (_this._controllers[xrController.uniqueId]) {\n                // already attached\n                return;\n            }\n            _this._controllers[xrController.uniqueId] = {\n                xrController: xrController,\n                registeredComponents: [],\n            };\n            var controllerData = _this._controllers[xrController.uniqueId];\n            // movement controller only available to gamepad-enabled input sources.\n            if (controllerData.xrController.inputSource.targetRayMode === \"tracked-pointer\" && controllerData.xrController.inputSource.gamepad) {\n                // motion controller support\n                var initController_1 = function () {\n                    if (xrController.motionController) {\n                        var _loop_1 = function (registration) {\n                            var component = null;\n                            if (registration.allowedComponentTypes) {\n                                for (var _b = 0, _c = registration.allowedComponentTypes; _b < _c.length; _b++) {\n                                    var componentType = _c[_b];\n                                    var componentOfType = xrController.motionController.getComponentOfType(componentType);\n                                    if (componentOfType !== null) {\n                                        component = componentOfType;\n                                        break;\n                                    }\n                                }\n                            }\n                            if (registration.mainComponentOnly) {\n                                var mainComponent = xrController.motionController.getMainComponent();\n                                if (mainComponent === null) {\n                                    return \"continue\";\n                                }\n                                component = mainComponent;\n                            }\n                            if (typeof registration.componentSelectionPredicate === \"function\") {\n                                // if does not match we do want to ignore a previously found component\n                                component = registration.componentSelectionPredicate(xrController);\n                            }\n                            if (component && registration.forceHandedness) {\n                                if (xrController.inputSource.handedness !== registration.forceHandedness) {\n                                    return \"continue\";\n                                }\n                            }\n                            if (component === null) {\n                                return \"continue\";\n                            }\n                            var registeredComponent = {\n                                registrationConfiguration: registration,\n                                component: component,\n                            };\n                            controllerData.registeredComponents.push(registeredComponent);\n                            if (\"axisChangedHandler\" in registration) {\n                                registeredComponent.onAxisChangedObserver = component.onAxisValueChangedObservable.add(function (axesData) {\n                                    registration.axisChangedHandler(axesData, _this._movementState, _this._featureContext, _this._xrInput);\n                                });\n                            }\n                            if (\"buttonChangedhandler\" in registration) {\n                                registeredComponent.onButtonChangedObserver = component.onButtonStateChangedObservable.add(function () {\n                                    if (component.changes.pressed) {\n                                        registration.buttonChangedhandler(component.changes.pressed, _this._movementState, _this._featureContext, _this._xrInput);\n                                    }\n                                });\n                            }\n                        };\n                        for (var _i = 0, _a = _this._currentRegistrationConfigurations; _i < _a.length; _i++) {\n                            var registration = _a[_i];\n                            _loop_1(registration);\n                        }\n                    }\n                };\n                if (xrController.motionController) {\n                    initController_1();\n                }\n                else {\n                    xrController.onMotionControllerInitObservable.addOnce(function () {\n                        initController_1();\n                    });\n                }\n            }\n        };\n        if (!options || options.xrInput === undefined) {\n            Tools.Error('WebXRControllerMovement feature requires \"xrInput\" option.');\n            return _this;\n        }\n        if (Array.isArray(options.customRegistrationConfigurations)) {\n            _this._currentRegistrationConfigurations = options.customRegistrationConfigurations;\n        }\n        else {\n            _this._currentRegistrationConfigurations = WebXRControllerMovement.REGISTRATIONS.default;\n        }\n        // synchronized from feature setter properties\n        _this._featureContext = {\n            movementEnabled: options.movementEnabled || true,\n            movementOrientationFollowsViewerPose: (_a = options.movementOrientationFollowsViewerPose) !== null && _a !== void 0 ? _a : true,\n            movementSpeed: (_b = options.movementSpeed) !== null && _b !== void 0 ? _b : 1,\n            movementThreshold: (_c = options.movementThreshold) !== null && _c !== void 0 ? _c : 0.25,\n            rotationEnabled: (_d = options.rotationEnabled) !== null && _d !== void 0 ? _d : true,\n            rotationSpeed: (_e = options.rotationSpeed) !== null && _e !== void 0 ? _e : 1.0,\n            rotationThreshold: (_f = options.rotationThreshold) !== null && _f !== void 0 ? _f : 0.25,\n        };\n        _this._movementState = {\n            moveX: 0,\n            moveY: 0,\n            rotateX: 0,\n            rotateY: 0,\n        };\n        _this._xrInput = options.xrInput;\n        return _this;\n    }\n    Object.defineProperty(WebXRControllerMovement.prototype, \"movementDirection\", {\n        /**\n         * Current movement direction.  Will be null before XR Frames have been processed.\n         */\n        get: function () {\n            return this._movementDirection;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebXRControllerMovement.prototype, \"movementEnabled\", {\n        /**\n         * Is movement enabled\n         */\n        get: function () {\n            return this._featureContext.movementEnabled;\n        },\n        /**\n         * Sets whether movement is enabled or not\n         * @param enabled is movement enabled\n         */\n        set: function (enabled) {\n            this._featureContext.movementEnabled = enabled;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebXRControllerMovement.prototype, \"movementOrientationFollowsViewerPose\", {\n        /**\n         * If movement follows viewer pose\n         */\n        get: function () {\n            return this._featureContext.movementOrientationFollowsViewerPose;\n        },\n        /**\n         * Sets whether movement follows viewer pose\n         * @param followsPose is movement should follow viewer pose\n         */\n        set: function (followsPose) {\n            this._featureContext.movementOrientationFollowsViewerPose = followsPose;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebXRControllerMovement.prototype, \"movementSpeed\", {\n        /**\n         * Gets movement speed\n         */\n        get: function () {\n            return this._featureContext.movementSpeed;\n        },\n        /**\n         * Sets movement speed\n         * @param movementSpeed movement speed\n         */\n        set: function (movementSpeed) {\n            this._featureContext.movementSpeed = movementSpeed;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebXRControllerMovement.prototype, \"movementThreshold\", {\n        /**\n         * Gets minimum threshold the controller's thumbstick/touchpad must pass before being recognized for movement (avoids jitter/unintentional movement)\n         */\n        get: function () {\n            return this._featureContext.movementThreshold;\n        },\n        /**\n         * Sets minimum threshold the controller's thumbstick/touchpad must pass before being recognized for movement (avoids jitter/unintentional movement)\n         * @param movementThreshold new threshold\n         */\n        set: function (movementThreshold) {\n            this._featureContext.movementThreshold = movementThreshold;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebXRControllerMovement.prototype, \"rotationEnabled\", {\n        /**\n         * Is rotation enabled\n         */\n        get: function () {\n            return this._featureContext.rotationEnabled;\n        },\n        /**\n         * Sets whether rotation is enabled or not\n         * @param enabled is rotation enabled\n         */\n        set: function (enabled) {\n            this._featureContext.rotationEnabled = enabled;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebXRControllerMovement.prototype, \"rotationSpeed\", {\n        /**\n         * Gets rotation speed factor\n         */\n        get: function () {\n            return this._featureContext.rotationSpeed;\n        },\n        /**\n         * Sets rotation speed factor (1.0 is default)\n         * @param rotationSpeed new rotation speed factor\n         */\n        set: function (rotationSpeed) {\n            this._featureContext.rotationSpeed = rotationSpeed;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebXRControllerMovement.prototype, \"rotationThreshold\", {\n        /**\n         * Gets minimum threshold the controller's thumbstick/touchpad must pass before being recognized for rotation (avoids jitter/unintentional rotation)\n         */\n        get: function () {\n            return this._featureContext.rotationThreshold;\n        },\n        /**\n         * Sets minimum threshold the controller's thumbstick/touchpad must pass before being recognized for rotation (avoids jitter/unintentional rotation)\n         * @param threshold new threshold\n         */\n        set: function (threshold) {\n            this._featureContext.rotationThreshold = threshold;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebXRControllerMovement.prototype.attach = function () {\n        var _this = this;\n        if (!_super.prototype.attach.call(this)) {\n            return false;\n        }\n        this._xrInput.controllers.forEach(this._attachController);\n        this._addNewAttachObserver(this._xrInput.onControllerAddedObservable, this._attachController);\n        this._addNewAttachObserver(this._xrInput.onControllerRemovedObservable, function (controller) {\n            // REMOVE the controller\n            _this._detachController(controller.uniqueId);\n        });\n        return true;\n    };\n    WebXRControllerMovement.prototype.detach = function () {\n        var _this = this;\n        if (!_super.prototype.detach.call(this)) {\n            return false;\n        }\n        Object.keys(this._controllers).forEach(function (controllerId) {\n            _this._detachController(controllerId);\n        });\n        this._controllers = {};\n        return true;\n    };\n    /**\n     * Occurs on every XR frame.\n     * @param _xrFrame\n     */\n    WebXRControllerMovement.prototype._onXRFrame = function (_xrFrame) {\n        if (!this.attach) {\n            return;\n        }\n        if (this._movementDirection === null) {\n            this._movementDirection = this._xrInput.xrCamera.rotationQuaternion.clone();\n        }\n        if (this._movementState.rotateX !== 0 && this._featureContext.rotationEnabled) {\n            // smooth rotation\n            var deltaMillis = this._xrSessionManager.scene.getEngine().getDeltaTime();\n            var rotationY = deltaMillis * 0.001 * this._featureContext.rotationSpeed * this._movementState.rotateX * (this._xrSessionManager.scene.useRightHandedSystem ? -1 : 1);\n            if (this._featureContext.movementOrientationFollowsViewerPose === true) {\n                this._xrInput.xrCamera.cameraRotation.y += rotationY;\n                this._movementDirection = this._xrInput.xrCamera.rotationQuaternion.multiply(Quaternion.RotationYawPitchRoll(rotationY, 0, 0));\n            }\n            else {\n                // movement orientation direction does not affect camera.  We use rotation speed multiplier\n                // otherwise need to implement inertia and constraints for same feel as TargetCamera.\n                this._movementDirection.multiplyInPlace(Quaternion.RotationYawPitchRoll(rotationY * 3.0, 0, 0));\n            }\n        }\n        else if (this._featureContext.movementOrientationFollowsViewerPose === true) {\n            this._movementDirection.copyFrom(this._xrInput.xrCamera.rotationQuaternion);\n        }\n        if ((this._movementState.moveX !== 0 || this._movementState.moveY !== 0) && this._featureContext.movementEnabled) {\n            Matrix.FromQuaternionToRef(this._movementDirection, this._tmpRotationMatrix);\n            this._tmpTranslationDirection.set(this._movementState.moveX, 0, this._movementState.moveY * (this._xrSessionManager.scene.useRightHandedSystem ? 1.0 : -1.0));\n            // move according to forward direction based on camera speed\n            Vector3.TransformCoordinatesToRef(this._tmpTranslationDirection, this._tmpRotationMatrix, this._tmpMovementTranslation);\n            this._tmpMovementTranslation.scaleInPlace(this._xrInput.xrCamera._computeLocalCameraSpeed() * this._featureContext.movementSpeed);\n            this._xrInput.xrCamera.cameraDirection.addInPlace(this._tmpMovementTranslation);\n        }\n    };\n    WebXRControllerMovement.prototype._detachController = function (xrControllerUniqueId) {\n        var controllerData = this._controllers[xrControllerUniqueId];\n        if (!controllerData) {\n            return;\n        }\n        for (var _i = 0, _a = controllerData.registeredComponents; _i < _a.length; _i++) {\n            var registeredComponent = _a[_i];\n            if (registeredComponent.onAxisChangedObserver) {\n                registeredComponent.component.onAxisValueChangedObservable.remove(registeredComponent.onAxisChangedObserver);\n            }\n            if (registeredComponent.onButtonChangedObserver) {\n                registeredComponent.component.onButtonStateChangedObservable.remove(registeredComponent.onButtonChangedObserver);\n            }\n        }\n        // remove from the map\n        delete this._controllers[xrControllerUniqueId];\n    };\n    /**\n     * The module's name\n     */\n    WebXRControllerMovement.Name = WebXRFeatureName.MOVEMENT;\n    /**\n     * Standard controller configurations.\n     */\n    WebXRControllerMovement.REGISTRATIONS = {\n        default: [\n            {\n                allowedComponentTypes: [WebXRControllerComponent.THUMBSTICK_TYPE, WebXRControllerComponent.TOUCHPAD_TYPE],\n                forceHandedness: \"left\",\n                axisChangedHandler: function (axes, movementState, featureContext) {\n                    movementState.rotateX = Math.abs(axes.x) > featureContext.rotationThreshold ? axes.x : 0;\n                    movementState.rotateY = Math.abs(axes.y) > featureContext.rotationThreshold ? axes.y : 0;\n                },\n            },\n            {\n                allowedComponentTypes: [WebXRControllerComponent.THUMBSTICK_TYPE, WebXRControllerComponent.TOUCHPAD_TYPE],\n                forceHandedness: \"right\",\n                axisChangedHandler: function (axes, movementState, featureContext) {\n                    movementState.moveX = Math.abs(axes.x) > featureContext.movementThreshold ? axes.x : 0;\n                    movementState.moveY = Math.abs(axes.y) > featureContext.movementThreshold ? axes.y : 0;\n                },\n            },\n        ],\n    };\n    /**\n     * The (Babylon) version of this module.\n     * This is an integer representing the implementation version.\n     * This number does not correspond to the webxr specs version\n     */\n    WebXRControllerMovement.Version = 1;\n    return WebXRControllerMovement;\n}(WebXRAbstractFeature));\nexport { WebXRControllerMovement };\nWebXRFeaturesManager.AddWebXRFeature(WebXRControllerMovement.Name, function (xrSessionManager, options) {\n    return function () { return new WebXRControllerMovement(xrSessionManager, options); };\n}, WebXRControllerMovement.Version, true);\n//# sourceMappingURL=WebXRControllerMovement.js.map","import { __extends } from \"tslib\";\nimport { WebGLHardwareTexture } from \"../../Engines/WebGL/webGLHardwareTexture.js\";\nimport { InternalTexture, InternalTextureSource } from \"../../Materials/Textures/internalTexture.js\";\nimport { Observable } from \"../../Misc/observable.js\";\nimport { Tools } from \"../../Misc/tools.js\";\nimport { WebXRFeatureName, WebXRFeaturesManager } from \"../webXRFeaturesManager.js\";\nimport { WebXRAbstractFeature } from \"./WebXRAbstractFeature.js\";\n\nimport { Color3 } from \"../../Maths/math.color.js\";\nimport { Vector3 } from \"../../Maths/math.vector.js\";\nimport { DirectionalLight } from \"../../Lights/directionalLight.js\";\nimport { BaseTexture } from \"../../Materials/Textures/baseTexture.js\";\nimport { SphericalHarmonics, SphericalPolynomial } from \"../../Maths/sphericalPolynomial.js\";\nimport { LightConstants } from \"../../Lights/lightConstants.js\";\n/**\n * Light Estimation Feature\n *\n * @since 5.0.0\n */\nvar WebXRLightEstimation = /** @class */ (function (_super) {\n    __extends(WebXRLightEstimation, _super);\n    /**\n     * Creates a new instance of the light estimation feature\n     * @param _xrSessionManager an instance of WebXRSessionManager\n     * @param options options to use when constructing this feature\n     */\n    function WebXRLightEstimation(_xrSessionManager, \n    /**\n     * options to use when constructing this feature\n     */\n    options) {\n        var _this = _super.call(this, _xrSessionManager) || this;\n        _this.options = options;\n        _this._canvasContext = null;\n        _this._reflectionCubeMap = null;\n        _this._xrLightEstimate = null;\n        _this._xrLightProbe = null;\n        _this._xrWebGLBinding = null;\n        _this._lightDirection = Vector3.Up().negateInPlace();\n        _this._lightColor = Color3.White();\n        _this._intensity = 1;\n        _this._sphericalHarmonics = new SphericalHarmonics();\n        _this._cubeMapPollTime = Date.now();\n        _this._lightEstimationPollTime = Date.now();\n        /**\n         * ARCore's reflection cube map size is 16x16.\n         * Once other systems support this feature we will need to change this to be dynamic.\n         * see https://github.com/immersive-web/lighting-estimation/blob/main/lighting-estimation-explainer.md#cube-map-open-questions\n         */\n        _this._reflectionCubeMapTextureSize = 16;\n        /**\n         * If createDirectionalLightSource is set to true this light source will be created automatically.\n         * Otherwise this can be set with an external directional light source.\n         * This light will be updated whenever the light estimation values change.\n         */\n        _this.directionalLight = null;\n        /**\n         * This observable will notify when the reflection cube map is updated.\n         */\n        _this.onReflectionCubeMapUpdatedObservable = new Observable();\n        /**\n         * Event Listener for \"reflectionchange\" events.\n         */\n        _this._updateReflectionCubeMap = function () {\n            var _a;\n            if (!_this._xrLightProbe) {\n                return;\n            }\n            // check poll time, do not update if it has not been long enough\n            if (_this.options.cubeMapPollInterval) {\n                var now = Date.now();\n                if (now - _this._cubeMapPollTime < _this.options.cubeMapPollInterval) {\n                    return;\n                }\n                _this._cubeMapPollTime = now;\n            }\n            var lp = _this._getXRGLBinding().getReflectionCubeMap(_this._xrLightProbe);\n            if (lp && _this._reflectionCubeMap) {\n                if (!_this._reflectionCubeMap._texture) {\n                    var internalTexture = new InternalTexture(_this._xrSessionManager.scene.getEngine(), InternalTextureSource.Unknown);\n                    internalTexture.isCube = true;\n                    internalTexture.invertY = false;\n                    internalTexture._useSRGBBuffer = _this.options.reflectionFormat === \"srgba8\";\n                    internalTexture.format = 5;\n                    internalTexture.generateMipMaps = true;\n                    internalTexture.type = _this.options.reflectionFormat !== \"srgba8\" ? 2 : 0;\n                    internalTexture.samplingMode = 3;\n                    internalTexture.width = _this._reflectionCubeMapTextureSize;\n                    internalTexture.height = _this._reflectionCubeMapTextureSize;\n                    internalTexture._cachedWrapU = 1;\n                    internalTexture._cachedWrapV = 1;\n                    internalTexture._hardwareTexture = new WebGLHardwareTexture(lp, _this._getCanvasContext());\n                    _this._reflectionCubeMap._texture = internalTexture;\n                }\n                else {\n                    (_a = _this._reflectionCubeMap._texture._hardwareTexture) === null || _a === void 0 ? void 0 : _a.set(lp);\n                    _this._reflectionCubeMap._texture.getEngine().resetTextureCache();\n                }\n                _this._reflectionCubeMap._texture.isReady = true;\n                _this._xrSessionManager.scene.markAllMaterialsAsDirty(1);\n                _this.onReflectionCubeMapUpdatedObservable.notifyObservers(_this._reflectionCubeMap);\n            }\n        };\n        _this.xrNativeFeatureName = \"light-estimation\";\n        if (_this.options.createDirectionalLightSource) {\n            _this.directionalLight = new DirectionalLight(\"light estimation directional\", _this._lightDirection, _this._xrSessionManager.scene);\n            _this.directionalLight.position = new Vector3(0, 8, 0);\n            // intensity will be set later\n            _this.directionalLight.intensity = 0;\n            _this.directionalLight.falloffType = LightConstants.FALLOFF_GLTF;\n        }\n        // https://immersive-web.github.io/lighting-estimation/\n        Tools.Warn(\"light-estimation is an experimental and unstable feature.\");\n        return _this;\n    }\n    Object.defineProperty(WebXRLightEstimation.prototype, \"reflectionCubeMapTexture\", {\n        /**\n         * While the estimated cube map is expected to update over time to better reflect the user's environment as they move around those changes are unlikely to happen with every XRFrame.\n         * Since creating and processing the cube map is potentially expensive, especially if mip maps are needed, you can listen to the onReflectionCubeMapUpdatedObservable to determine\n         * when it has been updated.\n         */\n        get: function () {\n            return this._reflectionCubeMap;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebXRLightEstimation.prototype, \"xrLightingEstimate\", {\n        /**\n         * The most recent light estimate.  Available starting on the first frame where the device provides a light probe.\n         */\n        get: function () {\n            if (this._xrLightEstimate) {\n                return {\n                    lightColor: this._lightColor,\n                    lightDirection: this._lightDirection,\n                    lightIntensity: this._intensity,\n                    sphericalHarmonics: this._sphericalHarmonics,\n                };\n            }\n            return this._xrLightEstimate;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WebXRLightEstimation.prototype._getCanvasContext = function () {\n        if (this._canvasContext === null) {\n            this._canvasContext = this._xrSessionManager.scene.getEngine()._gl;\n        }\n        return this._canvasContext;\n    };\n    WebXRLightEstimation.prototype._getXRGLBinding = function () {\n        if (this._xrWebGLBinding === null) {\n            var context_1 = this._getCanvasContext();\n            this._xrWebGLBinding = new XRWebGLBinding(this._xrSessionManager.session, context_1);\n        }\n        return this._xrWebGLBinding;\n    };\n    /**\n     * attach this feature\n     * Will usually be called by the features manager\n     *\n     * @returns true if successful.\n     */\n    WebXRLightEstimation.prototype.attach = function () {\n        var _this = this;\n        var _a;\n        if (!_super.prototype.attach.call(this)) {\n            return false;\n        }\n        var reflectionFormat = (_a = this.options.reflectionFormat) !== null && _a !== void 0 ? _a : (this._xrSessionManager.session.preferredReflectionFormat || \"srgba8\");\n        this.options.reflectionFormat = reflectionFormat;\n        this._xrSessionManager.session\n            .requestLightProbe({\n            reflectionFormat: reflectionFormat,\n        })\n            .then(function (xrLightProbe) {\n            _this._xrLightProbe = xrLightProbe;\n            if (!_this.options.disableCubeMapReflection) {\n                if (!_this._reflectionCubeMap) {\n                    _this._reflectionCubeMap = new BaseTexture(_this._xrSessionManager.scene);\n                    _this._reflectionCubeMap.isCube = true;\n                    _this._reflectionCubeMap.coordinatesMode = 3;\n                    if (_this.options.setSceneEnvironmentTexture) {\n                        _this._xrSessionManager.scene.environmentTexture = _this._reflectionCubeMap;\n                    }\n                }\n                _this._xrLightProbe.addEventListener(\"reflectionchange\", _this._updateReflectionCubeMap);\n            }\n        });\n        return true;\n    };\n    /**\n     * detach this feature.\n     * Will usually be called by the features manager\n     *\n     * @returns true if successful.\n     */\n    WebXRLightEstimation.prototype.detach = function () {\n        var detached = _super.prototype.detach.call(this);\n        if (this._xrLightProbe !== null && !this.options.disableCubeMapReflection) {\n            this._xrLightProbe.removeEventListener(\"reflectionchange\", this._updateReflectionCubeMap);\n            this._xrLightProbe = null;\n        }\n        this._canvasContext = null;\n        this._xrLightEstimate = null;\n        // When the session ends (on detach) we must clear our XRWebGLBinging instance, which references the ended session.\n        this._xrWebGLBinding = null;\n        return detached;\n    };\n    /**\n     * Dispose this feature and all of the resources attached\n     */\n    WebXRLightEstimation.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.onReflectionCubeMapUpdatedObservable.clear();\n        if (this.directionalLight) {\n            this.directionalLight.dispose();\n            this.directionalLight = null;\n        }\n        if (this._reflectionCubeMap !== null) {\n            if (this._reflectionCubeMap._texture) {\n                this._reflectionCubeMap._texture.dispose();\n            }\n            this._reflectionCubeMap.dispose();\n            this._reflectionCubeMap = null;\n        }\n    };\n    WebXRLightEstimation.prototype._onXRFrame = function (_xrFrame) {\n        var _a;\n        if (this._xrLightProbe !== null) {\n            if (this.options.lightEstimationPollInterval) {\n                var now = Date.now();\n                if (now - this._lightEstimationPollTime < this.options.lightEstimationPollInterval) {\n                    return;\n                }\n                this._lightEstimationPollTime = now;\n            }\n            this._xrLightEstimate = _xrFrame.getLightEstimate(this._xrLightProbe);\n            if (this._xrLightEstimate) {\n                this._intensity = Math.max(1.0, this._xrLightEstimate.primaryLightIntensity.x, this._xrLightEstimate.primaryLightIntensity.y, this._xrLightEstimate.primaryLightIntensity.z);\n                var rhsFactor = this._xrSessionManager.scene.useRightHandedSystem ? 1.0 : -1.0;\n                // recreate the vector caches, so that the last one provided to the user will persist\n                if (this.options.disableVectorReuse) {\n                    this._lightDirection = new Vector3();\n                    this._lightColor = new Color3();\n                    if (this.directionalLight) {\n                        this.directionalLight.direction = this._lightDirection;\n                        this.directionalLight.diffuse = this._lightColor;\n                    }\n                }\n                this._lightDirection.copyFromFloats(this._xrLightEstimate.primaryLightDirection.x, this._xrLightEstimate.primaryLightDirection.y, this._xrLightEstimate.primaryLightDirection.z * rhsFactor);\n                this._lightColor.copyFromFloats(this._xrLightEstimate.primaryLightIntensity.x / this._intensity, this._xrLightEstimate.primaryLightIntensity.y / this._intensity, this._xrLightEstimate.primaryLightIntensity.z / this._intensity);\n                this._sphericalHarmonics.updateFromFloatsArray(this._xrLightEstimate.sphericalHarmonicsCoefficients);\n                if (this._reflectionCubeMap && !this.options.disableSphericalPolynomial) {\n                    this._reflectionCubeMap.sphericalPolynomial = this._reflectionCubeMap.sphericalPolynomial || new SphericalPolynomial();\n                    (_a = this._reflectionCubeMap.sphericalPolynomial) === null || _a === void 0 ? void 0 : _a.updateFromHarmonics(this._sphericalHarmonics);\n                }\n                // direction from instead of direction to\n                this._lightDirection.negateInPlace();\n                // set the values after calculating them\n                if (this.directionalLight) {\n                    this.directionalLight.direction.copyFrom(this._lightDirection);\n                    this.directionalLight.intensity = Math.min(this._intensity, 1.0);\n                    this.directionalLight.diffuse.copyFrom(this._lightColor);\n                }\n            }\n        }\n    };\n    /**\n     * The module's name\n     */\n    WebXRLightEstimation.Name = WebXRFeatureName.LIGHT_ESTIMATION;\n    /**\n     * The (Babylon) version of this module.\n     * This is an integer representing the implementation version.\n     * This number does not correspond to the WebXR specs version\n     */\n    WebXRLightEstimation.Version = 1;\n    return WebXRLightEstimation;\n}(WebXRAbstractFeature));\nexport { WebXRLightEstimation };\n// register the plugin\nWebXRFeaturesManager.AddWebXRFeature(WebXRLightEstimation.Name, function (xrSessionManager, options) {\n    return function () { return new WebXRLightEstimation(xrSessionManager, options); };\n}, WebXRLightEstimation.Version, false);\n//# sourceMappingURL=WebXRLightEstimation.js.map","import { __extends } from \"tslib\";\nimport { WebXRFeaturesManager, WebXRFeatureName } from \"../webXRFeaturesManager.js\";\nimport { WebXRAbstractFeature } from \"./WebXRAbstractFeature.js\";\nimport { Observable } from \"../../Misc/observable.js\";\nimport { Vector3, TmpVectors } from \"../../Maths/math.vector.js\";\nimport { Ray } from \"../../Culling/ray.js\";\n/**\n * The WebXR Eye Tracking feature grabs eye data from the device and provides it in an easy-access format.\n * Currently only enabled for BabylonNative applications.\n */\nvar WebXREyeTracking = /** @class */ (function (_super) {\n    __extends(WebXREyeTracking, _super);\n    /**\n     * Creates a new instance of the XR eye tracking feature.\n     * @param _xrSessionManager An instance of WebXRSessionManager.\n     */\n    function WebXREyeTracking(_xrSessionManager) {\n        var _this = _super.call(this, _xrSessionManager) || this;\n        /**\n         * This observable will notify registered observers when eye tracking starts\n         */\n        _this.onEyeTrackingStartedObservable = new Observable();\n        /**\n         * This observable will notify registered observers when eye tracking ends\n         */\n        _this.onEyeTrackingEndedObservable = new Observable();\n        /**\n         * This observable will notify registered observers on each frame that has valid tracking\n         */\n        _this.onEyeTrackingFrameUpdateObservable = new Observable();\n        _this._eyeTrackingStartListener = function (event) {\n            _this._latestEyeSpace = event.gazeSpace;\n            _this._gazeRay = new Ray(Vector3.Zero(), Vector3.Forward());\n            _this.onEyeTrackingStartedObservable.notifyObservers(_this._gazeRay);\n        };\n        _this._eyeTrackingEndListener = function () {\n            _this._latestEyeSpace = null;\n            _this._gazeRay = null;\n            _this.onEyeTrackingEndedObservable.notifyObservers();\n        };\n        _this.xrNativeFeatureName = \"eye-tracking\";\n        if (_this._xrSessionManager.session) {\n            _this._init();\n        }\n        else {\n            _this._xrSessionManager.onXRSessionInit.addOnce(function () {\n                _this._init();\n            });\n        }\n        return _this;\n    }\n    /**\n     * Dispose this feature and all of the resources attached.\n     */\n    WebXREyeTracking.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this._xrSessionManager.session.removeEventListener(\"eyetrackingstart\", this._eyeTrackingStartListener);\n        this._xrSessionManager.session.removeEventListener(\"eyetrackingend\", this._eyeTrackingEndListener);\n        this.onEyeTrackingStartedObservable.clear();\n        this.onEyeTrackingEndedObservable.clear();\n        this.onEyeTrackingFrameUpdateObservable.clear();\n    };\n    Object.defineProperty(WebXREyeTracking.prototype, \"isEyeGazeValid\", {\n        /**\n         * Returns whether the gaze data is valid or not\n         * @returns true if the data is valid\n         */\n        get: function () {\n            return !!this._gazeRay;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Get a reference to the gaze ray. This data is valid while eye tracking persists, and will be set to null when gaze data is no longer available\n     * @returns a reference to the gaze ray if it exists and is valid, returns null otherwise.\n     */\n    WebXREyeTracking.prototype.getEyeGaze = function () {\n        return this._gazeRay;\n    };\n    WebXREyeTracking.prototype._onXRFrame = function (frame) {\n        if (!this.attached || !frame) {\n            return;\n        }\n        if (this._latestEyeSpace && this._gazeRay) {\n            var pose = frame.getPose(this._latestEyeSpace, this._xrSessionManager.referenceSpace);\n            if (pose) {\n                this._gazeRay.origin.set(pose.transform.position.x, pose.transform.position.y, pose.transform.position.z);\n                var quat = pose.transform.orientation;\n                TmpVectors.Quaternion[0].set(quat.x, quat.y, quat.z, quat.w);\n                if (!this._xrSessionManager.scene.useRightHandedSystem) {\n                    this._gazeRay.origin.z *= -1;\n                    TmpVectors.Quaternion[0].z *= -1;\n                    TmpVectors.Quaternion[0].w *= -1;\n                    Vector3.LeftHandedForwardReadOnly.rotateByQuaternionToRef(TmpVectors.Quaternion[0], this._gazeRay.direction);\n                }\n                else {\n                    Vector3.RightHandedForwardReadOnly.rotateByQuaternionToRef(TmpVectors.Quaternion[0], this._gazeRay.direction);\n                }\n                this.onEyeTrackingFrameUpdateObservable.notifyObservers(this._gazeRay);\n            }\n        }\n    };\n    WebXREyeTracking.prototype._init = function () {\n        // Only supported by BabylonNative\n        if (this._xrSessionManager.isNative) {\n            this._xrSessionManager.session.addEventListener(\"eyetrackingstart\", this._eyeTrackingStartListener);\n            this._xrSessionManager.session.addEventListener(\"eyetrackingend\", this._eyeTrackingEndListener);\n        }\n    };\n    /**\n     * The module's name\n     */\n    WebXREyeTracking.Name = WebXRFeatureName.EYE_TRACKING;\n    /**\n     * The (Babylon) version of this module.\n     * This is an integer representing the implementation version.\n     * This number does not correspond to the WebXR specs version\n     */\n    WebXREyeTracking.Version = 1;\n    return WebXREyeTracking;\n}(WebXRAbstractFeature));\nexport { WebXREyeTracking };\nWebXRFeaturesManager.AddWebXRFeature(WebXREyeTracking.Name, function (xrSessionManager) {\n    return function () { return new WebXREyeTracking(xrSessionManager); };\n}, WebXREyeTracking.Version, false);\n//# sourceMappingURL=WebXREyeTracking.js.map","import { __extends } from \"tslib\";\nimport { TmpVectors, Vector2, Vector3 } from \"../../Maths/math.vector.js\";\nimport { Logger } from \"../../Misc/logger.js\";\nimport { Observable } from \"../../Misc/observable.js\";\nimport { WebXRFeatureName, WebXRFeaturesManager } from \"../webXRFeaturesManager.js\";\nimport { WebXRAbstractFeature } from \"./WebXRAbstractFeature.js\";\nvar CircleBuffer = /** @class */ (function () {\n    function CircleBuffer(numSamples, initializer) {\n        this._samples = [];\n        this._idx = 0;\n        for (var idx = 0; idx < numSamples; ++idx) {\n            this._samples.push(initializer ? initializer() : Vector2.Zero());\n        }\n    }\n    Object.defineProperty(CircleBuffer.prototype, \"length\", {\n        get: function () {\n            return this._samples.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CircleBuffer.prototype.push = function (x, y) {\n        this._idx = (this._idx + this._samples.length - 1) % this._samples.length;\n        this.at(0).copyFromFloats(x, y);\n    };\n    CircleBuffer.prototype.at = function (idx) {\n        if (idx >= this._samples.length) {\n            throw new Error(\"Index out of bounds\");\n        }\n        return this._samples[(this._idx + idx) % this._samples.length];\n    };\n    return CircleBuffer;\n}());\nvar FirstStepDetector = /** @class */ (function () {\n    function FirstStepDetector() {\n        this._samples = new CircleBuffer(20);\n        this._entropy = 0;\n        this.onFirstStepDetected = new Observable();\n    }\n    FirstStepDetector.prototype.update = function (posX, posY, forwardX, forwardY) {\n        this._samples.push(posX, posY);\n        var origin = this._samples.at(0);\n        this._entropy *= this._entropyDecayFactor;\n        this._entropy += Vector2.Distance(origin, this._samples.at(1));\n        if (this._entropy > this._entropyThreshold) {\n            return;\n        }\n        var samePointIdx;\n        for (samePointIdx = this._samePointCheckStartIdx; samePointIdx < this._samples.length; ++samePointIdx) {\n            if (Vector2.DistanceSquared(origin, this._samples.at(samePointIdx)) < this._samePointSquaredDistanceThreshold) {\n                break;\n            }\n        }\n        if (samePointIdx === this._samples.length) {\n            return;\n        }\n        var apexDistSquared = -1;\n        var apexIdx = 0;\n        for (var distSquared = void 0, idx = 1; idx < samePointIdx; ++idx) {\n            distSquared = Vector2.DistanceSquared(origin, this._samples.at(idx));\n            if (distSquared > apexDistSquared) {\n                apexIdx = idx;\n                apexDistSquared = distSquared;\n            }\n        }\n        if (apexDistSquared < this._apexSquaredDistanceThreshold) {\n            return;\n        }\n        var apex = this._samples.at(apexIdx);\n        var axis = apex.subtract(origin);\n        axis.normalize();\n        var vec = TmpVectors.Vector2[0];\n        var dot;\n        var sample;\n        var sumSquaredProjectionDistances = 0;\n        for (var idx = 1; idx < samePointIdx; ++idx) {\n            sample = this._samples.at(idx);\n            sample.subtractToRef(origin, vec);\n            dot = Vector2.Dot(axis, vec);\n            sumSquaredProjectionDistances += vec.lengthSquared() - dot * dot;\n        }\n        if (sumSquaredProjectionDistances > samePointIdx * this._squaredProjectionDistanceThreshold) {\n            return;\n        }\n        var forwardVec = TmpVectors.Vector3[0];\n        forwardVec.set(forwardX, forwardY, 0);\n        var axisVec = TmpVectors.Vector3[1];\n        axisVec.set(axis.x, axis.y, 0);\n        var isApexLeft = Vector3.Cross(forwardVec, axisVec).z > 0;\n        var leftApex = origin.clone();\n        var rightApex = origin.clone();\n        apex.subtractToRef(origin, axis);\n        if (isApexLeft) {\n            axis.scaleAndAddToRef(this._axisToApexShrinkFactor, leftApex);\n            axis.scaleAndAddToRef(this._axisToApexExtendFactor, rightApex);\n        }\n        else {\n            axis.scaleAndAddToRef(this._axisToApexExtendFactor, leftApex);\n            axis.scaleAndAddToRef(this._axisToApexShrinkFactor, rightApex);\n        }\n        this.onFirstStepDetected.notifyObservers({\n            leftApex: leftApex,\n            rightApex: rightApex,\n            currentPosition: origin,\n            currentStepDirection: isApexLeft ? \"right\" : \"left\",\n        });\n    };\n    FirstStepDetector.prototype.reset = function () {\n        for (var idx = 0; idx < this._samples.length; ++idx) {\n            this._samples.at(idx).copyFromFloats(0, 0);\n        }\n    };\n    Object.defineProperty(FirstStepDetector.prototype, \"_samePointCheckStartIdx\", {\n        get: function () {\n            return Math.floor(this._samples.length / 3);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FirstStepDetector.prototype, \"_samePointSquaredDistanceThreshold\", {\n        get: function () {\n            return 0.03 * 0.03;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FirstStepDetector.prototype, \"_apexSquaredDistanceThreshold\", {\n        get: function () {\n            return 0.09 * 0.09;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FirstStepDetector.prototype, \"_squaredProjectionDistanceThreshold\", {\n        get: function () {\n            return 0.03 * 0.03;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FirstStepDetector.prototype, \"_axisToApexShrinkFactor\", {\n        get: function () {\n            return 0.8;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FirstStepDetector.prototype, \"_axisToApexExtendFactor\", {\n        get: function () {\n            return -1.6;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FirstStepDetector.prototype, \"_entropyDecayFactor\", {\n        get: function () {\n            return 0.93;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(FirstStepDetector.prototype, \"_entropyThreshold\", {\n        get: function () {\n            return 0.4;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return FirstStepDetector;\n}());\nvar WalkingTracker = /** @class */ (function () {\n    function WalkingTracker(leftApex, rightApex, currentPosition, currentStepDirection) {\n        this._leftApex = new Vector2();\n        this._rightApex = new Vector2();\n        this._currentPosition = new Vector2();\n        this._axis = new Vector2();\n        this._axisLength = -1;\n        this._forward = new Vector2();\n        this._steppingLeft = false;\n        this._t = -1;\n        this._maxT = -1;\n        this._maxTPosition = new Vector2();\n        this._vitality = 0;\n        this.onMovement = new Observable();\n        this.onFootfall = new Observable();\n        this._reset(leftApex, rightApex, currentPosition, currentStepDirection === \"left\");\n    }\n    WalkingTracker.prototype._reset = function (leftApex, rightApex, currentPosition, steppingLeft) {\n        this._leftApex.copyFrom(leftApex);\n        this._rightApex.copyFrom(rightApex);\n        this._steppingLeft = steppingLeft;\n        if (this._steppingLeft) {\n            this._leftApex.subtractToRef(this._rightApex, this._axis);\n            this._forward.copyFromFloats(-this._axis.y, this._axis.x);\n        }\n        else {\n            this._rightApex.subtractToRef(this._leftApex, this._axis);\n            this._forward.copyFromFloats(this._axis.y, -this._axis.x);\n        }\n        this._axisLength = this._axis.length();\n        this._forward.scaleInPlace(1 / this._axisLength);\n        this._updateTAndVitality(currentPosition.x, currentPosition.y);\n        this._maxT = this._t;\n        this._maxTPosition.copyFrom(currentPosition);\n        this._vitality = 1;\n    };\n    WalkingTracker.prototype._updateTAndVitality = function (x, y) {\n        this._currentPosition.copyFromFloats(x, y);\n        if (this._steppingLeft) {\n            this._currentPosition.subtractInPlace(this._rightApex);\n        }\n        else {\n            this._currentPosition.subtractInPlace(this._leftApex);\n        }\n        var priorT = this._t;\n        var dot = Vector2.Dot(this._currentPosition, this._axis);\n        this._t = dot / (this._axisLength * this._axisLength);\n        var projDistSquared = this._currentPosition.lengthSquared() - (dot / this._axisLength) * (dot / this._axisLength);\n        // TODO: Extricate the magic.\n        this._vitality *= 0.92 - 100 * Math.max(projDistSquared - 0.0016, 0) + Math.max(this._t - priorT, 0);\n    };\n    WalkingTracker.prototype.update = function (x, y) {\n        if (this._vitality < this._vitalityThreshold) {\n            return false;\n        }\n        var priorT = this._t;\n        this._updateTAndVitality(x, y);\n        if (this._t > this._maxT) {\n            this._maxT = this._t;\n            this._maxTPosition.copyFromFloats(x, y);\n        }\n        if (this._vitality < this._vitalityThreshold) {\n            return false;\n        }\n        if (this._t > priorT) {\n            this.onMovement.notifyObservers({ deltaT: this._t - priorT });\n            if (priorT < 0.5 && this._t >= 0.5) {\n                this.onFootfall.notifyObservers({ foot: this._steppingLeft ? \"left\" : \"right\" });\n            }\n        }\n        if (this._t < 0.95 * this._maxT) {\n            this._currentPosition.copyFromFloats(x, y);\n            if (this._steppingLeft) {\n                this._leftApex.copyFrom(this._maxTPosition);\n            }\n            else {\n                this._rightApex.copyFrom(this._maxTPosition);\n            }\n            this._reset(this._leftApex, this._rightApex, this._currentPosition, !this._steppingLeft);\n        }\n        if (this._axisLength < 0.03) {\n            return false;\n        }\n        return true;\n    };\n    Object.defineProperty(WalkingTracker.prototype, \"_vitalityThreshold\", {\n        get: function () {\n            return 0.1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WalkingTracker.prototype, \"forward\", {\n        get: function () {\n            return this._forward;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return WalkingTracker;\n}());\nvar Walker = /** @class */ (function () {\n    function Walker(engine) {\n        var _this = this;\n        this._detector = new FirstStepDetector();\n        this._walker = null;\n        this._movement = new Vector2();\n        this._millisecondsSinceLastUpdate = Walker._MillisecondsPerUpdate;\n        this.movementThisFrame = Vector3.Zero();\n        this._engine = engine;\n        this._detector.onFirstStepDetected.add(function (event) {\n            if (!_this._walker) {\n                _this._walker = new WalkingTracker(event.leftApex, event.rightApex, event.currentPosition, event.currentStepDirection);\n                _this._walker.onFootfall.add(function () {\n                    console.log(\"Footfall!\");\n                });\n                _this._walker.onMovement.add(function (event) {\n                    _this._walker.forward.scaleAndAddToRef(0.024 * event.deltaT, _this._movement);\n                });\n            }\n        });\n    }\n    Object.defineProperty(Walker, \"_MillisecondsPerUpdate\", {\n        get: function () {\n            // 15 FPS\n            return 1000 / 15;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Walker.prototype.update = function (position, forward) {\n        forward.y = 0;\n        forward.normalize();\n        // Enforce reduced framerate\n        this._millisecondsSinceLastUpdate += this._engine.getDeltaTime();\n        if (this._millisecondsSinceLastUpdate >= Walker._MillisecondsPerUpdate) {\n            this._millisecondsSinceLastUpdate -= Walker._MillisecondsPerUpdate;\n            this._detector.update(position.x, position.z, forward.x, forward.z);\n            if (this._walker) {\n                var updated = this._walker.update(position.x, position.z);\n                if (!updated) {\n                    this._walker = null;\n                }\n            }\n            this._movement.scaleInPlace(0.85);\n        }\n        this.movementThisFrame.set(this._movement.x, 0, this._movement.y);\n    };\n    return Walker;\n}());\n/**\n * A module that will enable VR locomotion by detecting when the user walks in place.\n */\nvar WebXRWalkingLocomotion = /** @class */ (function (_super) {\n    __extends(WebXRWalkingLocomotion, _super);\n    /**\n     * Construct a new Walking Locomotion feature.\n     * @param sessionManager manager for the current XR session\n     * @param options creation options, prominently including the vector target for locomotion\n     */\n    function WebXRWalkingLocomotion(sessionManager, options) {\n        var _this = _super.call(this, sessionManager) || this;\n        _this._up = new Vector3();\n        _this._forward = new Vector3();\n        _this._position = new Vector3();\n        _this._movement = new Vector3();\n        _this._sessionManager = sessionManager;\n        _this.locomotionTarget = options.locomotionTarget;\n        if (_this._isLocomotionTargetWebXRCamera) {\n            Logger.Warn(\"Using walking locomotion directly on a WebXRCamera may have unintended interactions with other XR techniques. Using an XR space parent is highly recommended\");\n        }\n        return _this;\n    }\n    Object.defineProperty(WebXRWalkingLocomotion, \"Name\", {\n        /**\n         * The module's name.\n         */\n        get: function () {\n            return WebXRFeatureName.WALKING_LOCOMOTION;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebXRWalkingLocomotion, \"Version\", {\n        /**\n         * The (Babylon) version of this module.\n         * This is an integer representing the implementation version.\n         * This number has no external basis.\n         */\n        get: function () {\n            return 1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WebXRWalkingLocomotion.prototype, \"locomotionTarget\", {\n        /**\n         * The target to be articulated by walking locomotion.\n         * When the walking locomotion feature detects walking in place, this element's\n         * X and Z coordinates will be modified to reflect locomotion. This target should\n         * be either the XR space's origin (i.e., the parent node of the WebXRCamera) or\n         * the WebXRCamera itself. Note that the WebXRCamera path will modify the position\n         * of the WebXRCamera directly and is thus discouraged.\n         */\n        get: function () {\n            return this._locomotionTarget;\n        },\n        /**\n         * The target to be articulated by walking locomotion.\n         * When the walking locomotion feature detects walking in place, this element's\n         * X and Z coordinates will be modified to reflect locomotion. This target should\n         * be either the XR space's origin (i.e., the parent node of the WebXRCamera) or\n         * the WebXRCamera itself. Note that the WebXRCamera path will modify the position\n         * of the WebXRCamera directly and is thus discouraged.\n         */\n        set: function (locomotionTarget) {\n            this._locomotionTarget = locomotionTarget;\n            this._isLocomotionTargetWebXRCamera = this._locomotionTarget.getClassName() === \"WebXRCamera\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Checks whether this feature is compatible with the current WebXR session.\n     * Walking locomotion is only compatible with \"immersive-vr\" sessions.\n     * @returns true if compatible, false otherwise\n     */\n    WebXRWalkingLocomotion.prototype.isCompatible = function () {\n        return this._sessionManager.sessionMode === undefined || this._sessionManager.sessionMode === \"immersive-vr\";\n    };\n    /**\n     * Attaches the feature.\n     * Typically called automatically by the features manager.\n     * @returns true if attach succeeded, false otherwise\n     */\n    WebXRWalkingLocomotion.prototype.attach = function () {\n        if (!this.isCompatible || !_super.prototype.attach.call(this)) {\n            return false;\n        }\n        this._walker = new Walker(this._sessionManager.scene.getEngine());\n        return true;\n    };\n    /**\n     * Detaches the feature.\n     * Typically called automatically by the features manager.\n     * @returns true if detach succeeded, false otherwise\n     */\n    WebXRWalkingLocomotion.prototype.detach = function () {\n        if (!_super.prototype.detach.call(this)) {\n            return false;\n        }\n        this._walker = null;\n        return true;\n    };\n    WebXRWalkingLocomotion.prototype._onXRFrame = function (frame) {\n        var pose = frame.getViewerPose(this._sessionManager.baseReferenceSpace);\n        if (!pose) {\n            return;\n        }\n        var handednessScalar = this.locomotionTarget.getScene().useRightHandedSystem ? 1 : -1;\n        var m = pose.transform.matrix;\n        this._up.copyFromFloats(m[4], m[5], handednessScalar * m[6]);\n        this._forward.copyFromFloats(m[8], m[9], handednessScalar * m[10]);\n        this._position.copyFromFloats(m[12], m[13], handednessScalar * m[14]);\n        // Compute the nape position\n        this._forward.scaleAndAddToRef(0.05, this._position);\n        this._up.scaleAndAddToRef(-0.05, this._position);\n        this._walker.update(this._position, this._forward);\n        this._movement.copyFrom(this._walker.movementThisFrame);\n        if (!this._isLocomotionTargetWebXRCamera) {\n            Vector3.TransformNormalToRef(this._movement, this.locomotionTarget.getWorldMatrix(), this._movement);\n        }\n        this.locomotionTarget.position.addInPlace(this._movement);\n    };\n    return WebXRWalkingLocomotion;\n}(WebXRAbstractFeature));\nexport { WebXRWalkingLocomotion };\n//register the plugin\nWebXRFeaturesManager.AddWebXRFeature(WebXRWalkingLocomotion.Name, function (xrSessionManager, options) {\n    return function () { return new WebXRWalkingLocomotion(xrSessionManager, options); };\n}, WebXRWalkingLocomotion.Version, false);\n//# sourceMappingURL=WebXRWalkingLocomotion.js.map","import { __assign, __extends, __spreadArray } from \"tslib\";\nimport { WebXRFeatureName, WebXRFeaturesManager } from \"../webXRFeaturesManager.js\";\nimport { WebXRAbstractFeature } from \"./WebXRAbstractFeature.js\";\nimport { WebXRLayerRenderTargetTextureProvider } from \"../webXRRenderTargetTextureProvider.js\";\nimport { WebXRLayerWrapper } from \"../webXRLayerWrapper.js\";\nimport { WebXRWebGLLayerWrapper } from \"../webXRWebGLLayer.js\";\n/**\n * Wraps xr composition layers.\n * @hidden\n */\nvar WebXRCompositionLayerWrapper = /** @class */ (function (_super) {\n    __extends(WebXRCompositionLayerWrapper, _super);\n    function WebXRCompositionLayerWrapper(getWidth, getHeight, layer, layerType, isMultiview, createRTTProvider) {\n        var _this = _super.call(this, getWidth, getHeight, layer, layerType, createRTTProvider) || this;\n        _this.getWidth = getWidth;\n        _this.getHeight = getHeight;\n        _this.layer = layer;\n        _this.layerType = layerType;\n        _this.isMultiview = isMultiview;\n        _this.createRTTProvider = createRTTProvider;\n        return _this;\n    }\n    return WebXRCompositionLayerWrapper;\n}(WebXRLayerWrapper));\nexport { WebXRCompositionLayerWrapper };\n/**\n * Provides render target textures and other important rendering information for a given XRCompositionLayer.\n * @hidden\n */\nvar WebXRCompositionLayerRenderTargetTextureProvider = /** @class */ (function (_super) {\n    __extends(WebXRCompositionLayerRenderTargetTextureProvider, _super);\n    function WebXRCompositionLayerRenderTargetTextureProvider(_xrSessionManager, _xrWebGLBinding, layerWrapper) {\n        var _this = _super.call(this, _xrSessionManager.scene, layerWrapper) || this;\n        _this._xrSessionManager = _xrSessionManager;\n        _this._xrWebGLBinding = _xrWebGLBinding;\n        _this.layerWrapper = layerWrapper;\n        _this._lastSubImages = new Map();\n        _this._compositionLayer = layerWrapper.layer;\n        return _this;\n    }\n    WebXRCompositionLayerRenderTargetTextureProvider.prototype._getRenderTargetForSubImage = function (subImage, eye) {\n        var lastSubImage = this._lastSubImages.get(eye);\n        var eyeIndex = eye == \"left\" ? 0 : 1;\n        if (!this._renderTargetTextures[eyeIndex] || (lastSubImage === null || lastSubImage === void 0 ? void 0 : lastSubImage.textureWidth) !== subImage.textureWidth || (lastSubImage === null || lastSubImage === void 0 ? void 0 : lastSubImage.textureHeight) != subImage.textureHeight) {\n            this._renderTargetTextures[eyeIndex] = this._createRenderTargetTexture(subImage.textureWidth, subImage.textureHeight, null, subImage.colorTexture, subImage.depthStencilTexture, this.layerWrapper.isMultiview);\n            this._framebufferDimensions = {\n                framebufferWidth: subImage.textureWidth,\n                framebufferHeight: subImage.textureHeight,\n            };\n        }\n        this._lastSubImages.set(eye, subImage);\n        return this._renderTargetTextures[eyeIndex];\n    };\n    WebXRCompositionLayerRenderTargetTextureProvider.prototype._getSubImageForEye = function (eye) {\n        var currentFrame = this._xrSessionManager.currentFrame;\n        if (currentFrame) {\n            return this._xrWebGLBinding.getSubImage(this._compositionLayer, currentFrame, eye);\n        }\n        return null;\n    };\n    WebXRCompositionLayerRenderTargetTextureProvider.prototype.getRenderTargetTextureForEye = function (eye) {\n        var subImage = this._getSubImageForEye(eye);\n        if (subImage) {\n            return this._getRenderTargetForSubImage(subImage, eye);\n        }\n        return null;\n    };\n    WebXRCompositionLayerRenderTargetTextureProvider.prototype.getRenderTargetTextureForView = function (view) {\n        return this.getRenderTargetTextureForEye(view.eye);\n    };\n    WebXRCompositionLayerRenderTargetTextureProvider.prototype._setViewportForSubImage = function (viewport, subImage) {\n        var textureWidth = subImage.textureWidth;\n        var textureHeight = subImage.textureHeight;\n        var xrViewport = subImage.viewport;\n        viewport.x = xrViewport.x / textureWidth;\n        viewport.y = xrViewport.y / textureHeight;\n        viewport.width = xrViewport.width / textureWidth;\n        viewport.height = xrViewport.height / textureHeight;\n    };\n    WebXRCompositionLayerRenderTargetTextureProvider.prototype.trySetViewportForView = function (viewport, view) {\n        var subImage = this._lastSubImages.get(view.eye) || this._getSubImageForEye(view.eye);\n        if (subImage) {\n            this._setViewportForSubImage(viewport, subImage);\n            return true;\n        }\n        return false;\n    };\n    return WebXRCompositionLayerRenderTargetTextureProvider;\n}(WebXRLayerRenderTargetTextureProvider));\n/**\n * Wraps xr projection layers.\n * @hidden\n */\nvar WebXRProjectionLayerWrapper = /** @class */ (function (_super) {\n    __extends(WebXRProjectionLayerWrapper, _super);\n    function WebXRProjectionLayerWrapper(layer, isMultiview, xrGLBinding) {\n        var _this = _super.call(this, function () { return layer.textureWidth; }, function () { return layer.textureHeight; }, layer, \"XRProjectionLayer\", isMultiview, function (sessionManager) { return new WebXRProjectionLayerRenderTargetTextureProvider(sessionManager, xrGLBinding, _this); }) || this;\n        _this.layer = layer;\n        return _this;\n    }\n    return WebXRProjectionLayerWrapper;\n}(WebXRCompositionLayerWrapper));\nexport { WebXRProjectionLayerWrapper };\n/**\n * Provides render target textures and other important rendering information for a given XRProjectionLayer.\n * @hidden\n */\nvar WebXRProjectionLayerRenderTargetTextureProvider = /** @class */ (function (_super) {\n    __extends(WebXRProjectionLayerRenderTargetTextureProvider, _super);\n    function WebXRProjectionLayerRenderTargetTextureProvider(_xrSessionManager, _xrWebGLBinding, layerWrapper) {\n        var _this = _super.call(this, _xrSessionManager, _xrWebGLBinding, layerWrapper) || this;\n        _this.layerWrapper = layerWrapper;\n        _this._projectionLayer = layerWrapper.layer;\n        return _this;\n    }\n    WebXRProjectionLayerRenderTargetTextureProvider.prototype._getSubImageForView = function (view) {\n        return this._xrWebGLBinding.getViewSubImage(this._projectionLayer, view);\n    };\n    WebXRProjectionLayerRenderTargetTextureProvider.prototype.getRenderTargetTextureForView = function (view) {\n        return this._getRenderTargetForSubImage(this._getSubImageForView(view), view.eye);\n    };\n    WebXRProjectionLayerRenderTargetTextureProvider.prototype.getRenderTargetTextureForEye = function (eye) {\n        var lastSubImage = this._lastSubImages.get(eye);\n        if (lastSubImage) {\n            return this._getRenderTargetForSubImage(lastSubImage, eye);\n        }\n        return null;\n    };\n    WebXRProjectionLayerRenderTargetTextureProvider.prototype.trySetViewportForView = function (viewport, view) {\n        var subImage = this._lastSubImages.get(view.eye) || this._getSubImageForView(view);\n        if (subImage) {\n            this._setViewportForSubImage(viewport, subImage);\n            return true;\n        }\n        return false;\n    };\n    return WebXRProjectionLayerRenderTargetTextureProvider;\n}(WebXRCompositionLayerRenderTargetTextureProvider));\nvar defaultXRWebGLLayerInit = {};\nvar defaultXRProjectionLayerInit = {\n    textureType: \"texture\",\n    colorFormat: 0x1908 /* WebGLRenderingContext.RGBA */,\n    depthFormat: 0x88f0 /* WebGLRenderingContext.DEPTH24_STENCIL8 */,\n    scaleFactor: 1.0,\n};\n/**\n * Exposes the WebXR Layers API.\n */\nvar WebXRLayers = /** @class */ (function (_super) {\n    __extends(WebXRLayers, _super);\n    function WebXRLayers(_xrSessionManager, _options) {\n        if (_options === void 0) { _options = {}; }\n        var _this = _super.call(this, _xrSessionManager) || this;\n        _this._options = _options;\n        /**\n         * Already-created layers\n         */\n        _this._existingLayers = [];\n        _this.xrNativeFeatureName = \"layers\";\n        return _this;\n    }\n    /**\n     * Attach this feature.\n     * Will usually be called by the features manager.\n     *\n     * @returns true if successful.\n     */\n    WebXRLayers.prototype.attach = function () {\n        if (!_super.prototype.attach.call(this)) {\n            return false;\n        }\n        var engine = this._xrSessionManager.scene.getEngine();\n        this._glContext = engine._gl;\n        this._xrWebGLBinding = new XRWebGLBinding(this._xrSessionManager.session, this._glContext);\n        this._existingLayers = [];\n        var projectionLayerInit = __assign({}, defaultXRProjectionLayerInit);\n        var projectionLayerMultiview = this._options.preferMultiviewOnInit && engine.getCaps().multiview;\n        if (projectionLayerMultiview) {\n            projectionLayerInit.textureType = \"texture-array\";\n        }\n        this.addXRSessionLayer(this.createProjectionLayer(projectionLayerInit, projectionLayerMultiview));\n        return true;\n    };\n    WebXRLayers.prototype.detach = function () {\n        if (!_super.prototype.detach.call(this)) {\n            return false;\n        }\n        this._existingLayers.length = 0;\n        return true;\n    };\n    /**\n     * Creates a new XRWebGLLayer.\n     * @param params an object providing configuration options for the new XRWebGLLayer\n     * @returns the XRWebGLLayer\n     */\n    WebXRLayers.prototype.createXRWebGLLayer = function (params) {\n        if (params === void 0) { params = defaultXRWebGLLayerInit; }\n        var layer = new XRWebGLLayer(this._xrSessionManager.session, this._glContext, params);\n        return new WebXRWebGLLayerWrapper(layer);\n    };\n    /**\n     * Creates a new XRProjectionLayer.\n     * @param params an object providing configuration options for the new XRProjectionLayer.\n     * @param multiview whether the projection layer should render with multiview.\n     * @returns the projection layer\n     */\n    WebXRLayers.prototype.createProjectionLayer = function (params, multiview) {\n        if (params === void 0) { params = defaultXRProjectionLayerInit; }\n        if (multiview === void 0) { multiview = false; }\n        if (multiview && params.textureType !== \"texture-array\") {\n            throw new Error(\"Projection layers can only be made multiview if they use texture arrays. Set the textureType parameter to 'texture-array'.\");\n        }\n        // TODO (rgerd): Support RTT's that are bound to sub-images in the texture array.\n        if (!multiview && params.textureType === \"texture-array\") {\n            throw new Error(\"We currently only support multiview rendering when the textureType parameter is set to 'texture-array'.\");\n        }\n        var projLayer = this._xrWebGLBinding.createProjectionLayer(params);\n        return new WebXRProjectionLayerWrapper(projLayer, multiview, this._xrWebGLBinding);\n    };\n    /**\n     * Add a new layer to the already-existing list of layers\n     * @param wrappedLayer the new layer to add to the existing ones\n     */\n    WebXRLayers.prototype.addXRSessionLayer = function (wrappedLayer) {\n        this.setXRSessionLayers(__spreadArray(__spreadArray([], this._existingLayers, true), [wrappedLayer], false));\n    };\n    /**\n     * Sets the layers to be used by the XR session.\n     * Note that you must call this function with any layers you wish to render to\n     * since it adds them to the XR session's render state\n     * (replacing any layers that were added in a previous call to setXRSessionLayers or updateRenderState).\n     * This method also sets up the session manager's render target texture provider\n     * as the first layer in the array, which feeds the WebXR camera(s) attached to the session.\n     * @param wrappedLayers An array of WebXRLayerWrapper, usually returned from the WebXRLayers createLayer functions.\n     */\n    WebXRLayers.prototype.setXRSessionLayers = function (wrappedLayers) {\n        this._existingLayers = wrappedLayers;\n        var renderStateInit = __assign({}, this._xrSessionManager.session.renderState);\n        // Clear out the layer-related fields.\n        renderStateInit.baseLayer = undefined;\n        renderStateInit.layers = wrappedLayers.map(function (wrappedLayer) { return wrappedLayer.layer; });\n        this._xrSessionManager.updateRenderState(renderStateInit);\n        this._xrSessionManager._setBaseLayerWrapper(wrappedLayers.length > 0 ? wrappedLayers[0] : null);\n    };\n    WebXRLayers.prototype.isCompatible = function () {\n        // TODO (rgerd): Add native support.\n        return !this._xrSessionManager.isNative && typeof XRWebGLBinding !== \"undefined\" && !!XRWebGLBinding.prototype.createProjectionLayer;\n    };\n    /**\n     * Dispose this feature and all of the resources attached.\n     */\n    WebXRLayers.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n    };\n    WebXRLayers.prototype._onXRFrame = function (_xrFrame) {\n        /* empty */\n    };\n    /**\n     * The module's name\n     */\n    WebXRLayers.Name = WebXRFeatureName.LAYERS;\n    /**\n     * The (Babylon) version of this module.\n     * This is an integer representing the implementation version.\n     * This number does not correspond to the WebXR specs version\n     */\n    WebXRLayers.Version = 1;\n    return WebXRLayers;\n}(WebXRAbstractFeature));\nexport { WebXRLayers };\n//register the plugin\nWebXRFeaturesManager.AddWebXRFeature(WebXRLayers.Name, function (xrSessionManager, options) {\n    return function () { return new WebXRLayers(xrSessionManager, options); };\n}, WebXRLayers.Version, false);\n//# sourceMappingURL=WebXRLayers.js.map","import { __extends } from \"tslib\";\nimport { WebXRAbstractMotionController } from \"./webXRAbstractMotionController.js\";\nimport { WebXRMotionControllerManager } from \"./webXRMotionControllerManager.js\";\n/**\n * A generic hand controller class that supports select and a secondary grasp\n */\nvar WebXRGenericHandController = /** @class */ (function (_super) {\n    __extends(WebXRGenericHandController, _super);\n    /**\n     * Create a new hand controller object, without loading a controller model\n     * @param scene the scene to use to create this controller\n     * @param gamepadObject the corresponding gamepad object\n     * @param handedness the handedness of the controller\n     */\n    function WebXRGenericHandController(scene, gamepadObject, handedness) {\n        var _this = \n        // Don't load the controller model - for now, hands have no real model.\n        _super.call(this, scene, GenericHandSelectGraspProfile[handedness], gamepadObject, handedness, true) || this;\n        _this.profileId = \"generic-hand-select-grasp\";\n        return _this;\n    }\n    WebXRGenericHandController.prototype._getFilenameAndPath = function () {\n        return {\n            filename: \"generic.babylon\",\n            path: \"https://controllers.babylonjs.com/generic/\",\n        };\n    };\n    WebXRGenericHandController.prototype._getModelLoadingConstraints = function () {\n        return true;\n    };\n    WebXRGenericHandController.prototype._processLoadedModel = function (_meshes) {\n        // no-op\n    };\n    WebXRGenericHandController.prototype._setRootMesh = function (meshes) {\n        // no-op\n    };\n    WebXRGenericHandController.prototype._updateModel = function () {\n        // no-op\n    };\n    return WebXRGenericHandController;\n}(WebXRAbstractMotionController));\nexport { WebXRGenericHandController };\n// register the profiles\nWebXRMotionControllerManager.RegisterController(\"generic-hand-select-grasp\", function (xrInput, scene) {\n    return new WebXRGenericHandController(scene, xrInput.gamepad, xrInput.handedness);\n});\n// https://github.com/immersive-web/webxr-input-profiles/blob/main/packages/registry/profiles/generic/generic-hand-select-grasp.json\nvar GenericHandSelectGraspProfile = {\n    left: {\n        selectComponentId: \"xr-standard-trigger\",\n        components: {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            \"xr-standard-trigger\": {\n                type: \"trigger\",\n                gamepadIndices: {\n                    button: 0,\n                },\n                rootNodeName: \"xr-standard-trigger\",\n                visualResponses: {},\n            },\n            grasp: {\n                type: \"trigger\",\n                gamepadIndices: {\n                    button: 4,\n                },\n                rootNodeName: \"grasp\",\n                visualResponses: {},\n            },\n        },\n        gamepadMapping: \"xr-standard\",\n        rootNodeName: \"generic-hand-select-grasp-left\",\n        assetPath: \"left.glb\",\n    },\n    right: {\n        selectComponentId: \"xr-standard-trigger\",\n        components: {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            \"xr-standard-trigger\": {\n                type: \"trigger\",\n                gamepadIndices: {\n                    button: 0,\n                },\n                rootNodeName: \"xr-standard-trigger\",\n                visualResponses: {},\n            },\n            grasp: {\n                type: \"trigger\",\n                gamepadIndices: {\n                    button: 4,\n                },\n                rootNodeName: \"grasp\",\n                visualResponses: {},\n            },\n        },\n        gamepadMapping: \"xr-standard\",\n        rootNodeName: \"generic-hand-select-grasp-right\",\n        assetPath: \"right.glb\",\n    },\n    none: {\n        selectComponentId: \"xr-standard-trigger\",\n        components: {\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            \"xr-standard-trigger\": {\n                type: \"trigger\",\n                gamepadIndices: {\n                    button: 0,\n                },\n                rootNodeName: \"xr-standard-trigger\",\n                visualResponses: {},\n            },\n            grasp: {\n                type: \"trigger\",\n                gamepadIndices: {\n                    button: 4,\n                },\n                rootNodeName: \"grasp\",\n                visualResponses: {},\n            },\n        },\n        gamepadMapping: \"xr-standard\",\n        rootNodeName: \"generic-hand-select-grasp-none\",\n        assetPath: \"none.glb\",\n    },\n};\n//# sourceMappingURL=webXRGenericHandController.js.map","import { __extends } from \"tslib\";\nimport { WebXRAbstractMotionController } from \"./webXRAbstractMotionController.js\";\nimport { WebXRMotionControllerManager } from \"./webXRMotionControllerManager.js\";\nimport { Mesh } from \"../../Meshes/mesh.js\";\nimport { Quaternion } from \"../../Maths/math.vector.js\";\nimport { SceneLoader } from \"../../Loading/sceneLoader.js\";\nimport { Logger } from \"../../Misc/logger.js\";\n/**\n * The motion controller class for all microsoft mixed reality controllers\n */\nvar WebXRMicrosoftMixedRealityController = /** @class */ (function (_super) {\n    __extends(WebXRMicrosoftMixedRealityController, _super);\n    function WebXRMicrosoftMixedRealityController(scene, gamepadObject, handedness) {\n        var _this = _super.call(this, scene, MixedRealityProfile[\"left-right\"], gamepadObject, handedness) || this;\n        // use this in the future - https://github.com/immersive-web/webxr-input-profiles/tree/master/packages/assets/profiles/microsoft\n        _this._mapping = {\n            defaultButton: {\n                valueNodeName: \"VALUE\",\n                unpressedNodeName: \"UNPRESSED\",\n                pressedNodeName: \"PRESSED\",\n            },\n            defaultAxis: {\n                valueNodeName: \"VALUE\",\n                minNodeName: \"MIN\",\n                maxNodeName: \"MAX\",\n            },\n            buttons: {\n                \"xr-standard-trigger\": {\n                    rootNodeName: \"SELECT\",\n                    componentProperty: \"button\",\n                    states: [\"default\", \"touched\", \"pressed\"],\n                },\n                \"xr-standard-squeeze\": {\n                    rootNodeName: \"GRASP\",\n                    componentProperty: \"state\",\n                    states: [\"pressed\"],\n                },\n                \"xr-standard-touchpad\": {\n                    rootNodeName: \"TOUCHPAD_PRESS\",\n                    labelAnchorNodeName: \"squeeze-label\",\n                    touchPointNodeName: \"TOUCH\", // TODO - use this for visual feedback\n                },\n                \"xr-standard-thumbstick\": {\n                    rootNodeName: \"THUMBSTICK_PRESS\",\n                    componentProperty: \"state\",\n                    states: [\"pressed\"],\n                },\n            },\n            axes: {\n                \"xr-standard-touchpad\": {\n                    \"x-axis\": {\n                        rootNodeName: \"TOUCHPAD_TOUCH_X\",\n                    },\n                    \"y-axis\": {\n                        rootNodeName: \"TOUCHPAD_TOUCH_Y\",\n                    },\n                },\n                \"xr-standard-thumbstick\": {\n                    \"x-axis\": {\n                        rootNodeName: \"THUMBSTICK_X\",\n                    },\n                    \"y-axis\": {\n                        rootNodeName: \"THUMBSTICK_Y\",\n                    },\n                },\n            },\n        };\n        _this.profileId = \"microsoft-mixed-reality\";\n        return _this;\n    }\n    WebXRMicrosoftMixedRealityController.prototype._getFilenameAndPath = function () {\n        var filename = \"\";\n        if (this.handedness === \"left\") {\n            filename = WebXRMicrosoftMixedRealityController.MODEL_LEFT_FILENAME;\n        }\n        else {\n            // Right is the default if no hand is specified\n            filename = WebXRMicrosoftMixedRealityController.MODEL_RIGHT_FILENAME;\n        }\n        var device = \"default\";\n        var path = WebXRMicrosoftMixedRealityController.MODEL_BASE_URL + device + \"/\";\n        return {\n            filename: filename,\n            path: path,\n        };\n    };\n    WebXRMicrosoftMixedRealityController.prototype._getModelLoadingConstraints = function () {\n        var glbLoaded = SceneLoader.IsPluginForExtensionAvailable(\".glb\");\n        if (!glbLoaded) {\n            Logger.Warn(\"glTF / glb loaded was not registered, using generic controller instead\");\n        }\n        return glbLoaded;\n    };\n    WebXRMicrosoftMixedRealityController.prototype._processLoadedModel = function (_meshes) {\n        var _this = this;\n        if (!this.rootMesh) {\n            return;\n        }\n        // Button Meshes\n        this.getComponentIds().forEach(function (id, i) {\n            if (_this.disableAnimation) {\n                return;\n            }\n            if (id && _this.rootMesh) {\n                var buttonMap_1 = _this._mapping.buttons[id];\n                var buttonMeshName = buttonMap_1.rootNodeName;\n                if (!buttonMeshName) {\n                    Logger.Log(\"Skipping unknown button at index: \" + i + \" with mapped name: \" + id);\n                    return;\n                }\n                var buttonMesh = _this._getChildByName(_this.rootMesh, buttonMeshName);\n                if (!buttonMesh) {\n                    Logger.Warn(\"Missing button mesh with name: \" + buttonMeshName);\n                    return;\n                }\n                buttonMap_1.valueMesh = _this._getImmediateChildByName(buttonMesh, _this._mapping.defaultButton.valueNodeName);\n                buttonMap_1.pressedMesh = _this._getImmediateChildByName(buttonMesh, _this._mapping.defaultButton.pressedNodeName);\n                buttonMap_1.unpressedMesh = _this._getImmediateChildByName(buttonMesh, _this._mapping.defaultButton.unpressedNodeName);\n                if (buttonMap_1.valueMesh && buttonMap_1.pressedMesh && buttonMap_1.unpressedMesh) {\n                    var comp = _this.getComponent(id);\n                    if (comp) {\n                        comp.onButtonStateChangedObservable.add(function (component) {\n                            _this._lerpTransform(buttonMap_1, component.value);\n                        }, undefined, true);\n                    }\n                }\n                else {\n                    // If we didn't find the mesh, it simply means this button won't have transforms applied as mapped button value changes.\n                    Logger.Warn(\"Missing button submesh under mesh with name: \" + buttonMeshName);\n                }\n            }\n        });\n        // Axis Meshes\n        this.getComponentIds().forEach(function (id) {\n            var comp = _this.getComponent(id);\n            if (!comp.isAxes()) {\n                return;\n            }\n            [\"x-axis\", \"y-axis\"].forEach(function (axis) {\n                if (!_this.rootMesh) {\n                    return;\n                }\n                var axisMap = _this._mapping.axes[id][axis];\n                var axisMesh = _this._getChildByName(_this.rootMesh, axisMap.rootNodeName);\n                if (!axisMesh) {\n                    Logger.Warn(\"Missing axis mesh with name: \" + axisMap.rootNodeName);\n                    return;\n                }\n                axisMap.valueMesh = _this._getImmediateChildByName(axisMesh, _this._mapping.defaultAxis.valueNodeName);\n                axisMap.minMesh = _this._getImmediateChildByName(axisMesh, _this._mapping.defaultAxis.minNodeName);\n                axisMap.maxMesh = _this._getImmediateChildByName(axisMesh, _this._mapping.defaultAxis.maxNodeName);\n                if (axisMap.valueMesh && axisMap.minMesh && axisMap.maxMesh) {\n                    if (comp) {\n                        comp.onAxisValueChangedObservable.add(function (axisValues) {\n                            var value = axis === \"x-axis\" ? axisValues.x : axisValues.y;\n                            _this._lerpTransform(axisMap, value, true);\n                        }, undefined, true);\n                    }\n                }\n                else {\n                    // If we didn't find the mesh, it simply means this button won't have transforms applied as mapped button value changes.\n                    Logger.Warn(\"Missing axis submesh under mesh with name: \" + axisMap.rootNodeName);\n                }\n            });\n        });\n    };\n    WebXRMicrosoftMixedRealityController.prototype._setRootMesh = function (meshes) {\n        this.rootMesh = new Mesh(this.profileId + \" \" + this.handedness, this.scene);\n        this.rootMesh.isPickable = false;\n        var rootMesh;\n        // Find the root node in the loaded glTF scene, and attach it as a child of 'parentMesh'\n        for (var i = 0; i < meshes.length; i++) {\n            var mesh = meshes[i];\n            mesh.isPickable = false;\n            if (!mesh.parent) {\n                // Handle root node, attach to the new parentMesh\n                rootMesh = mesh;\n            }\n        }\n        if (rootMesh) {\n            rootMesh.setParent(this.rootMesh);\n        }\n        if (!this.scene.useRightHandedSystem) {\n            this.rootMesh.rotationQuaternion = Quaternion.FromEulerAngles(0, Math.PI, 0);\n        }\n    };\n    WebXRMicrosoftMixedRealityController.prototype._updateModel = function () {\n        // no-op. model is updated using observables.\n    };\n    /**\n     * The base url used to load the left and right controller models\n     */\n    WebXRMicrosoftMixedRealityController.MODEL_BASE_URL = \"https://controllers.babylonjs.com/microsoft/\";\n    /**\n     * The name of the left controller model file\n     */\n    WebXRMicrosoftMixedRealityController.MODEL_LEFT_FILENAME = \"left.glb\";\n    /**\n     * The name of the right controller model file\n     */\n    WebXRMicrosoftMixedRealityController.MODEL_RIGHT_FILENAME = \"right.glb\";\n    return WebXRMicrosoftMixedRealityController;\n}(WebXRAbstractMotionController));\nexport { WebXRMicrosoftMixedRealityController };\n// register the profile\nWebXRMotionControllerManager.RegisterController(\"windows-mixed-reality\", function (xrInput, scene) {\n    return new WebXRMicrosoftMixedRealityController(scene, xrInput.gamepad, xrInput.handedness);\n});\n// https://github.com/immersive-web/webxr-input-profiles/blob/master/packages/registry/profiles/microsoft/microsoft-mixed-reality.json\nvar MixedRealityProfile = {\n    left: {\n        selectComponentId: \"xr-standard-trigger\",\n        components: {\n            \"xr-standard-trigger\": {\n                type: \"trigger\",\n                gamepadIndices: {\n                    button: 0,\n                },\n                rootNodeName: \"xr_standard_trigger\",\n                visualResponses: {\n                    xr_standard_trigger_pressed: {\n                        componentProperty: \"button\",\n                        states: [\"default\", \"touched\", \"pressed\"],\n                        valueNodeProperty: \"transform\",\n                        valueNodeName: \"xr_standard_trigger_pressed_value\",\n                        minNodeName: \"xr_standard_trigger_pressed_min\",\n                        maxNodeName: \"xr_standard_trigger_pressed_max\",\n                    },\n                },\n            },\n            \"xr-standard-squeeze\": {\n                type: \"squeeze\",\n                gamepadIndices: {\n                    button: 1,\n                },\n                rootNodeName: \"xr_standard_squeeze\",\n                visualResponses: {\n                    xr_standard_squeeze_pressed: {\n                        componentProperty: \"button\",\n                        states: [\"default\", \"touched\", \"pressed\"],\n                        valueNodeProperty: \"transform\",\n                        valueNodeName: \"xr_standard_squeeze_pressed_value\",\n                        minNodeName: \"xr_standard_squeeze_pressed_min\",\n                        maxNodeName: \"xr_standard_squeeze_pressed_max\",\n                    },\n                },\n            },\n            \"xr-standard-touchpad\": {\n                type: \"touchpad\",\n                gamepadIndices: {\n                    button: 2,\n                    xAxis: 0,\n                    yAxis: 1,\n                },\n                rootNodeName: \"xr_standard_touchpad\",\n                visualResponses: {\n                    xr_standard_touchpad_pressed: {\n                        componentProperty: \"button\",\n                        states: [\"default\", \"touched\", \"pressed\"],\n                        valueNodeProperty: \"transform\",\n                        valueNodeName: \"xr_standard_touchpad_pressed_value\",\n                        minNodeName: \"xr_standard_touchpad_pressed_min\",\n                        maxNodeName: \"xr_standard_touchpad_pressed_max\",\n                    },\n                    xr_standard_touchpad_xaxis_pressed: {\n                        componentProperty: \"xAxis\",\n                        states: [\"default\", \"touched\", \"pressed\"],\n                        valueNodeProperty: \"transform\",\n                        valueNodeName: \"xr_standard_touchpad_xaxis_pressed_value\",\n                        minNodeName: \"xr_standard_touchpad_xaxis_pressed_min\",\n                        maxNodeName: \"xr_standard_touchpad_xaxis_pressed_max\",\n                    },\n                    xr_standard_touchpad_yaxis_pressed: {\n                        componentProperty: \"yAxis\",\n                        states: [\"default\", \"touched\", \"pressed\"],\n                        valueNodeProperty: \"transform\",\n                        valueNodeName: \"xr_standard_touchpad_yaxis_pressed_value\",\n                        minNodeName: \"xr_standard_touchpad_yaxis_pressed_min\",\n                        maxNodeName: \"xr_standard_touchpad_yaxis_pressed_max\",\n                    },\n                    xr_standard_touchpad_xaxis_touched: {\n                        componentProperty: \"xAxis\",\n                        states: [\"default\", \"touched\", \"pressed\"],\n                        valueNodeProperty: \"transform\",\n                        valueNodeName: \"xr_standard_touchpad_xaxis_touched_value\",\n                        minNodeName: \"xr_standard_touchpad_xaxis_touched_min\",\n                        maxNodeName: \"xr_standard_touchpad_xaxis_touched_max\",\n                    },\n                    xr_standard_touchpad_yaxis_touched: {\n                        componentProperty: \"yAxis\",\n                        states: [\"default\", \"touched\", \"pressed\"],\n                        valueNodeProperty: \"transform\",\n                        valueNodeName: \"xr_standard_touchpad_yaxis_touched_value\",\n                        minNodeName: \"xr_standard_touchpad_yaxis_touched_min\",\n                        maxNodeName: \"xr_standard_touchpad_yaxis_touched_max\",\n                    },\n                    xr_standard_touchpad_axes_touched: {\n                        componentProperty: \"state\",\n                        states: [\"touched\", \"pressed\"],\n                        valueNodeProperty: \"visibility\",\n                        valueNodeName: \"xr_standard_touchpad_axes_touched_value\",\n                    },\n                },\n                touchPointNodeName: \"xr_standard_touchpad_axes_touched_value\",\n            },\n            \"xr-standard-thumbstick\": {\n                type: \"thumbstick\",\n                gamepadIndices: {\n                    button: 3,\n                    xAxis: 2,\n                    yAxis: 3,\n                },\n                rootNodeName: \"xr_standard_thumbstick\",\n                visualResponses: {\n                    xr_standard_thumbstick_pressed: {\n                        componentProperty: \"button\",\n                        states: [\"default\", \"touched\", \"pressed\"],\n                        valueNodeProperty: \"transform\",\n                        valueNodeName: \"xr_standard_thumbstick_pressed_value\",\n                        minNodeName: \"xr_standard_thumbstick_pressed_min\",\n                        maxNodeName: \"xr_standard_thumbstick_pressed_max\",\n                    },\n                    xr_standard_thumbstick_xaxis_pressed: {\n                        componentProperty: \"xAxis\",\n                        states: [\"default\", \"touched\", \"pressed\"],\n                        valueNodeProperty: \"transform\",\n                        valueNodeName: \"xr_standard_thumbstick_xaxis_pressed_value\",\n                        minNodeName: \"xr_standard_thumbstick_xaxis_pressed_min\",\n                        maxNodeName: \"xr_standard_thumbstick_xaxis_pressed_max\",\n                    },\n                    xr_standard_thumbstick_yaxis_pressed: {\n                        componentProperty: \"yAxis\",\n                        states: [\"default\", \"touched\", \"pressed\"],\n                        valueNodeProperty: \"transform\",\n                        valueNodeName: \"xr_standard_thumbstick_yaxis_pressed_value\",\n                        minNodeName: \"xr_standard_thumbstick_yaxis_pressed_min\",\n                        maxNodeName: \"xr_standard_thumbstick_yaxis_pressed_max\",\n                    },\n                },\n            },\n        },\n        gamepadMapping: \"xr-standard\",\n        rootNodeName: \"microsoft-mixed-reality-left\",\n        assetPath: \"left.glb\",\n    },\n    right: {\n        selectComponentId: \"xr-standard-trigger\",\n        components: {\n            \"xr-standard-trigger\": {\n                type: \"trigger\",\n                gamepadIndices: {\n                    button: 0,\n                },\n                rootNodeName: \"xr_standard_trigger\",\n                visualResponses: {\n                    xr_standard_trigger_pressed: {\n                        componentProperty: \"button\",\n                        states: [\"default\", \"touched\", \"pressed\"],\n                        valueNodeProperty: \"transform\",\n                        valueNodeName: \"xr_standard_trigger_pressed_value\",\n                        minNodeName: \"xr_standard_trigger_pressed_min\",\n                        maxNodeName: \"xr_standard_trigger_pressed_max\",\n                    },\n                },\n            },\n            \"xr-standard-squeeze\": {\n                type: \"squeeze\",\n                gamepadIndices: {\n                    button: 1,\n                },\n                rootNodeName: \"xr_standard_squeeze\",\n                visualResponses: {\n                    xr_standard_squeeze_pressed: {\n                        componentProperty: \"button\",\n                        states: [\"default\", \"touched\", \"pressed\"],\n                        valueNodeProperty: \"transform\",\n                        valueNodeName: \"xr_standard_squeeze_pressed_value\",\n                        minNodeName: \"xr_standard_squeeze_pressed_min\",\n                        maxNodeName: \"xr_standard_squeeze_pressed_max\",\n                    },\n                },\n            },\n            \"xr-standard-touchpad\": {\n                type: \"touchpad\",\n                gamepadIndices: {\n                    button: 2,\n                    xAxis: 0,\n                    yAxis: 1,\n                },\n                rootNodeName: \"xr_standard_touchpad\",\n                visualResponses: {\n                    xr_standard_touchpad_pressed: {\n                        componentProperty: \"button\",\n                        states: [\"default\", \"touched\", \"pressed\"],\n                        valueNodeProperty: \"transform\",\n                        valueNodeName: \"xr_standard_touchpad_pressed_value\",\n                        minNodeName: \"xr_standard_touchpad_pressed_min\",\n                        maxNodeName: \"xr_standard_touchpad_pressed_max\",\n                    },\n                    xr_standard_touchpad_xaxis_pressed: {\n                        componentProperty: \"xAxis\",\n                        states: [\"default\", \"touched\", \"pressed\"],\n                        valueNodeProperty: \"transform\",\n                        valueNodeName: \"xr_standard_touchpad_xaxis_pressed_value\",\n                        minNodeName: \"xr_standard_touchpad_xaxis_pressed_min\",\n                        maxNodeName: \"xr_standard_touchpad_xaxis_pressed_max\",\n                    },\n                    xr_standard_touchpad_yaxis_pressed: {\n                        componentProperty: \"yAxis\",\n                        states: [\"default\", \"touched\", \"pressed\"],\n                        valueNodeProperty: \"transform\",\n                        valueNodeName: \"xr_standard_touchpad_yaxis_pressed_value\",\n                        minNodeName: \"xr_standard_touchpad_yaxis_pressed_min\",\n                        maxNodeName: \"xr_standard_touchpad_yaxis_pressed_max\",\n                    },\n                    xr_standard_touchpad_xaxis_touched: {\n                        componentProperty: \"xAxis\",\n                        states: [\"default\", \"touched\", \"pressed\"],\n                        valueNodeProperty: \"transform\",\n                        valueNodeName: \"xr_standard_touchpad_xaxis_touched_value\",\n                        minNodeName: \"xr_standard_touchpad_xaxis_touched_min\",\n                        maxNodeName: \"xr_standard_touchpad_xaxis_touched_max\",\n                    },\n                    xr_standard_touchpad_yaxis_touched: {\n                        componentProperty: \"yAxis\",\n                        states: [\"default\", \"touched\", \"pressed\"],\n                        valueNodeProperty: \"transform\",\n                        valueNodeName: \"xr_standard_touchpad_yaxis_touched_value\",\n                        minNodeName: \"xr_standard_touchpad_yaxis_touched_min\",\n                        maxNodeName: \"xr_standard_touchpad_yaxis_touched_max\",\n                    },\n                    xr_standard_touchpad_axes_touched: {\n                        componentProperty: \"state\",\n                        states: [\"touched\", \"pressed\"],\n                        valueNodeProperty: \"visibility\",\n                        valueNodeName: \"xr_standard_touchpad_axes_touched_value\",\n                    },\n                },\n                touchPointNodeName: \"xr_standard_touchpad_axes_touched_value\",\n            },\n            \"xr-standard-thumbstick\": {\n                type: \"thumbstick\",\n                gamepadIndices: {\n                    button: 3,\n                    xAxis: 2,\n                    yAxis: 3,\n                },\n                rootNodeName: \"xr_standard_thumbstick\",\n                visualResponses: {\n                    xr_standard_thumbstick_pressed: {\n                        componentProperty: \"button\",\n                        states: [\"default\", \"touched\", \"pressed\"],\n                        valueNodeProperty: \"transform\",\n                        valueNodeName: \"xr_standard_thumbstick_pressed_value\",\n                        minNodeName: \"xr_standard_thumbstick_pressed_min\",\n                        maxNodeName: \"xr_standard_thumbstick_pressed_max\",\n                    },\n                    xr_standard_thumbstick_xaxis_pressed: {\n                        componentProperty: \"xAxis\",\n                        states: [\"default\", \"touched\", \"pressed\"],\n                        valueNodeProperty: \"transform\",\n                        valueNodeName: \"xr_standard_thumbstick_xaxis_pressed_value\",\n                        minNodeName: \"xr_standard_thumbstick_xaxis_pressed_min\",\n                        maxNodeName: \"xr_standard_thumbstick_xaxis_pressed_max\",\n                    },\n                    xr_standard_thumbstick_yaxis_pressed: {\n                        componentProperty: \"yAxis\",\n                        states: [\"default\", \"touched\", \"pressed\"],\n                        valueNodeProperty: \"transform\",\n                        valueNodeName: \"xr_standard_thumbstick_yaxis_pressed_value\",\n                        minNodeName: \"xr_standard_thumbstick_yaxis_pressed_min\",\n                        maxNodeName: \"xr_standard_thumbstick_yaxis_pressed_max\",\n                    },\n                },\n            },\n        },\n        gamepadMapping: \"xr-standard\",\n        rootNodeName: \"microsoft-mixed-reality-right\",\n        assetPath: \"right.glb\",\n    },\n};\n//# sourceMappingURL=webXRMicrosoftMixedRealityController.js.map","import { __extends } from \"tslib\";\nimport { WebXRAbstractMotionController } from \"./webXRAbstractMotionController.js\";\nimport { WebXRMotionControllerManager } from \"./webXRMotionControllerManager.js\";\nimport { Mesh } from \"../../Meshes/mesh.js\";\nimport { Quaternion } from \"../../Maths/math.vector.js\";\n/**\n * The motion controller class for oculus touch (quest, rift).\n * This class supports legacy mapping as well the standard xr mapping\n */\nvar WebXROculusTouchMotionController = /** @class */ (function (_super) {\n    __extends(WebXROculusTouchMotionController, _super);\n    function WebXROculusTouchMotionController(scene, gamepadObject, handedness, _legacyMapping, _forceLegacyControllers) {\n        if (_legacyMapping === void 0) { _legacyMapping = false; }\n        if (_forceLegacyControllers === void 0) { _forceLegacyControllers = false; }\n        var _this = _super.call(this, scene, OculusTouchLayouts[handedness], gamepadObject, handedness) || this;\n        _this._forceLegacyControllers = _forceLegacyControllers;\n        _this.profileId = \"oculus-touch\";\n        return _this;\n    }\n    WebXROculusTouchMotionController.prototype._getFilenameAndPath = function () {\n        var filename = \"\";\n        if (this.handedness === \"left\") {\n            filename = WebXROculusTouchMotionController.MODEL_LEFT_FILENAME;\n        }\n        else {\n            // Right is the default if no hand is specified\n            filename = WebXROculusTouchMotionController.MODEL_RIGHT_FILENAME;\n        }\n        var path = this._isQuest() ? WebXROculusTouchMotionController.QUEST_MODEL_BASE_URL : WebXROculusTouchMotionController.MODEL_BASE_URL;\n        return {\n            filename: filename,\n            path: path,\n        };\n    };\n    WebXROculusTouchMotionController.prototype._getModelLoadingConstraints = function () {\n        return true;\n    };\n    WebXROculusTouchMotionController.prototype._processLoadedModel = function (_meshes) {\n        var _this = this;\n        var isQuest = this._isQuest();\n        var triggerDirection = this.handedness === \"right\" ? -1 : 1;\n        this.getComponentIds().forEach(function (id) {\n            var comp = id && _this.getComponent(id);\n            if (comp) {\n                comp.onButtonStateChangedObservable.add(function (component) {\n                    if (!_this.rootMesh || _this.disableAnimation) {\n                        return;\n                    }\n                    switch (id) {\n                        case \"xr-standard-trigger\": // index trigger\n                            if (!isQuest) {\n                                _this._modelRootNode.getChildren()[3].rotation.x = -component.value * 0.2;\n                                _this._modelRootNode.getChildren()[3].position.y = -component.value * 0.005;\n                                _this._modelRootNode.getChildren()[3].position.z = -component.value * 0.005;\n                            }\n                            return;\n                        case \"xr-standard-squeeze\": // secondary trigger\n                            if (!isQuest) {\n                                _this._modelRootNode.getChildren()[4].position.x = triggerDirection * component.value * 0.0035;\n                            }\n                            return;\n                        case \"xr-standard-thumbstick\": // thumbstick\n                            return;\n                        case \"a-button\":\n                        case \"x-button\":\n                            if (!isQuest) {\n                                if (component.pressed) {\n                                    _this._modelRootNode.getChildren()[1].position.y = -0.001;\n                                }\n                                else {\n                                    _this._modelRootNode.getChildren()[1].position.y = 0;\n                                }\n                            }\n                            return;\n                        case \"b-button\":\n                        case \"y-button\":\n                            if (!isQuest) {\n                                if (component.pressed) {\n                                    _this._modelRootNode.getChildren()[2].position.y = -0.001;\n                                }\n                                else {\n                                    _this._modelRootNode.getChildren()[2].position.y = 0;\n                                }\n                            }\n                            return;\n                    }\n                }, undefined, true);\n            }\n        });\n    };\n    WebXROculusTouchMotionController.prototype._setRootMesh = function (meshes) {\n        this.rootMesh = new Mesh(this.profileId + \" \" + this.handedness, this.scene);\n        if (!this.scene.useRightHandedSystem) {\n            this.rootMesh.rotationQuaternion = Quaternion.FromEulerAngles(0, Math.PI, 0);\n        }\n        meshes.forEach(function (mesh) {\n            mesh.isPickable = false;\n        });\n        if (this._isQuest()) {\n            this._modelRootNode = meshes[0];\n        }\n        else {\n            this._modelRootNode = meshes[1];\n            this.rootMesh.position.y = 0.034;\n            this.rootMesh.position.z = 0.052;\n        }\n        this._modelRootNode.parent = this.rootMesh;\n    };\n    WebXROculusTouchMotionController.prototype._updateModel = function () {\n        // no-op. model is updated using observables.\n    };\n    /**\n     * Is this the new type of oculus touch. At the moment both have the same profile and it is impossible to differentiate\n     * between the touch and touch 2.\n     */\n    WebXROculusTouchMotionController.prototype._isQuest = function () {\n        // this is SADLY the only way to currently check. Until proper profiles will be available.\n        return !!navigator.userAgent.match(/Quest/gi) && !this._forceLegacyControllers;\n    };\n    /**\n     * The base url used to load the left and right controller models\n     */\n    WebXROculusTouchMotionController.MODEL_BASE_URL = \"https://controllers.babylonjs.com/oculus/\";\n    /**\n     * The name of the left controller model file\n     */\n    WebXROculusTouchMotionController.MODEL_LEFT_FILENAME = \"left.babylon\";\n    /**\n     * The name of the right controller model file\n     */\n    WebXROculusTouchMotionController.MODEL_RIGHT_FILENAME = \"right.babylon\";\n    /**\n     * Base Url for the Quest controller model.\n     */\n    WebXROculusTouchMotionController.QUEST_MODEL_BASE_URL = \"https://controllers.babylonjs.com/oculusQuest/\";\n    return WebXROculusTouchMotionController;\n}(WebXRAbstractMotionController));\nexport { WebXROculusTouchMotionController };\n// register the profile\nWebXRMotionControllerManager.RegisterController(\"oculus-touch\", function (xrInput, scene) {\n    return new WebXROculusTouchMotionController(scene, xrInput.gamepad, xrInput.handedness);\n});\nWebXRMotionControllerManager.RegisterController(\"oculus-touch-legacy\", function (xrInput, scene) {\n    return new WebXROculusTouchMotionController(scene, xrInput.gamepad, xrInput.handedness, true);\n});\nvar OculusTouchLayouts = {\n    left: {\n        selectComponentId: \"xr-standard-trigger\",\n        components: {\n            \"xr-standard-trigger\": {\n                type: \"trigger\",\n                gamepadIndices: {\n                    button: 0,\n                },\n                rootNodeName: \"xr_standard_trigger\",\n                visualResponses: {},\n            },\n            \"xr-standard-squeeze\": {\n                type: \"squeeze\",\n                gamepadIndices: {\n                    button: 1,\n                },\n                rootNodeName: \"xr_standard_squeeze\",\n                visualResponses: {},\n            },\n            \"xr-standard-thumbstick\": {\n                type: \"thumbstick\",\n                gamepadIndices: {\n                    button: 3,\n                    xAxis: 2,\n                    yAxis: 3,\n                },\n                rootNodeName: \"xr_standard_thumbstick\",\n                visualResponses: {},\n            },\n            \"x-button\": {\n                type: \"button\",\n                gamepadIndices: {\n                    button: 4,\n                },\n                rootNodeName: \"x_button\",\n                visualResponses: {},\n            },\n            \"y-button\": {\n                type: \"button\",\n                gamepadIndices: {\n                    button: 5,\n                },\n                rootNodeName: \"y_button\",\n                visualResponses: {},\n            },\n            thumbrest: {\n                type: \"button\",\n                gamepadIndices: {\n                    button: 6,\n                },\n                rootNodeName: \"thumbrest\",\n                visualResponses: {},\n            },\n        },\n        gamepadMapping: \"xr-standard\",\n        rootNodeName: \"oculus-touch-v2-left\",\n        assetPath: \"left.glb\",\n    },\n    right: {\n        selectComponentId: \"xr-standard-trigger\",\n        components: {\n            \"xr-standard-trigger\": {\n                type: \"trigger\",\n                gamepadIndices: {\n                    button: 0,\n                },\n                rootNodeName: \"xr_standard_trigger\",\n                visualResponses: {},\n            },\n            \"xr-standard-squeeze\": {\n                type: \"squeeze\",\n                gamepadIndices: {\n                    button: 1,\n                },\n                rootNodeName: \"xr_standard_squeeze\",\n                visualResponses: {},\n            },\n            \"xr-standard-thumbstick\": {\n                type: \"thumbstick\",\n                gamepadIndices: {\n                    button: 3,\n                    xAxis: 2,\n                    yAxis: 3,\n                },\n                rootNodeName: \"xr_standard_thumbstick\",\n                visualResponses: {},\n            },\n            \"a-button\": {\n                type: \"button\",\n                gamepadIndices: {\n                    button: 4,\n                },\n                rootNodeName: \"a_button\",\n                visualResponses: {},\n            },\n            \"b-button\": {\n                type: \"button\",\n                gamepadIndices: {\n                    button: 5,\n                },\n                rootNodeName: \"b_button\",\n                visualResponses: {},\n            },\n            thumbrest: {\n                type: \"button\",\n                gamepadIndices: {\n                    button: 6,\n                },\n                rootNodeName: \"thumbrest\",\n                visualResponses: {},\n            },\n        },\n        gamepadMapping: \"xr-standard\",\n        rootNodeName: \"oculus-touch-v2-right\",\n        assetPath: \"right.glb\",\n    },\n};\n//# sourceMappingURL=webXROculusTouchMotionController.js.map","import { __extends } from \"tslib\";\nimport { WebXRAbstractMotionController } from \"./webXRAbstractMotionController.js\";\nimport { Mesh } from \"../../Meshes/mesh.js\";\nimport { Quaternion } from \"../../Maths/math.vector.js\";\nimport { WebXRMotionControllerManager } from \"./webXRMotionControllerManager.js\";\n/**\n * The motion controller class for the standard HTC-Vive controllers\n */\nvar WebXRHTCViveMotionController = /** @class */ (function (_super) {\n    __extends(WebXRHTCViveMotionController, _super);\n    /**\n     * Create a new Vive motion controller object\n     * @param scene the scene to use to create this controller\n     * @param gamepadObject the corresponding gamepad object\n     * @param handedness the handedness of the controller\n     */\n    function WebXRHTCViveMotionController(scene, gamepadObject, handedness) {\n        var _this = _super.call(this, scene, HTCViveLayout[handedness], gamepadObject, handedness) || this;\n        _this.profileId = \"htc-vive\";\n        return _this;\n    }\n    WebXRHTCViveMotionController.prototype._getFilenameAndPath = function () {\n        var filename = WebXRHTCViveMotionController.MODEL_FILENAME;\n        var path = WebXRHTCViveMotionController.MODEL_BASE_URL;\n        return {\n            filename: filename,\n            path: path,\n        };\n    };\n    WebXRHTCViveMotionController.prototype._getModelLoadingConstraints = function () {\n        return true;\n    };\n    WebXRHTCViveMotionController.prototype._processLoadedModel = function (_meshes) {\n        var _this = this;\n        this.getComponentIds().forEach(function (id) {\n            var comp = id && _this.getComponent(id);\n            if (comp) {\n                comp.onButtonStateChangedObservable.add(function (component) {\n                    if (!_this.rootMesh || _this.disableAnimation) {\n                        return;\n                    }\n                    switch (id) {\n                        case \"xr-standard-trigger\":\n                            _this._modelRootNode.getChildren()[6].rotation.x = -component.value * 0.15;\n                            return;\n                        case \"xr-standard-touchpad\":\n                            return;\n                        case \"xr-standard-squeeze\":\n                            return;\n                    }\n                }, undefined, true);\n            }\n        });\n    };\n    WebXRHTCViveMotionController.prototype._setRootMesh = function (meshes) {\n        this.rootMesh = new Mesh(this.profileId + \" \" + this.handedness, this.scene);\n        meshes.forEach(function (mesh) {\n            mesh.isPickable = false;\n        });\n        this._modelRootNode = meshes[1];\n        this._modelRootNode.parent = this.rootMesh;\n        if (!this.scene.useRightHandedSystem) {\n            this.rootMesh.rotationQuaternion = Quaternion.FromEulerAngles(0, Math.PI, 0);\n        }\n    };\n    WebXRHTCViveMotionController.prototype._updateModel = function () {\n        // no-op. model is updated using observables.\n    };\n    /**\n     * The base url used to load the left and right controller models\n     */\n    WebXRHTCViveMotionController.MODEL_BASE_URL = \"https://controllers.babylonjs.com/vive/\";\n    /**\n     * File name for the controller model.\n     */\n    WebXRHTCViveMotionController.MODEL_FILENAME = \"wand.babylon\";\n    return WebXRHTCViveMotionController;\n}(WebXRAbstractMotionController));\nexport { WebXRHTCViveMotionController };\n// register the profile\nWebXRMotionControllerManager.RegisterController(\"htc-vive\", function (xrInput, scene) {\n    return new WebXRHTCViveMotionController(scene, xrInput.gamepad, xrInput.handedness);\n});\n// WebXRMotionControllerManager.RegisterController(\"htc-vive-legacy\", (xrInput: XRInputSource, scene: Scene) => {\n//     return new WebXRHTCViveMotionController(scene, <any>(xrInput.gamepad), xrInput.handedness, true);\n// });\nvar HTCViveLayout = {\n    left: {\n        selectComponentId: \"xr-standard-trigger\",\n        components: {\n            \"xr-standard-trigger\": {\n                type: \"trigger\",\n                gamepadIndices: {\n                    button: 0,\n                },\n                rootNodeName: \"xr_standard_trigger\",\n                visualResponses: {},\n            },\n            \"xr-standard-squeeze\": {\n                type: \"squeeze\",\n                gamepadIndices: {\n                    button: 1,\n                },\n                rootNodeName: \"xr_standard_squeeze\",\n                visualResponses: {},\n            },\n            \"xr-standard-touchpad\": {\n                type: \"touchpad\",\n                gamepadIndices: {\n                    button: 2,\n                    xAxis: 0,\n                    yAxis: 1,\n                },\n                rootNodeName: \"xr_standard_touchpad\",\n                visualResponses: {},\n            },\n            menu: {\n                type: \"button\",\n                gamepadIndices: {\n                    button: 4,\n                },\n                rootNodeName: \"menu\",\n                visualResponses: {},\n            },\n        },\n        gamepadMapping: \"xr-standard\",\n        rootNodeName: \"htc_vive_none\",\n        assetPath: \"none.glb\",\n    },\n    right: {\n        selectComponentId: \"xr-standard-trigger\",\n        components: {\n            \"xr-standard-trigger\": {\n                type: \"trigger\",\n                gamepadIndices: {\n                    button: 0,\n                },\n                rootNodeName: \"xr_standard_trigger\",\n                visualResponses: {},\n            },\n            \"xr-standard-squeeze\": {\n                type: \"squeeze\",\n                gamepadIndices: {\n                    button: 1,\n                },\n                rootNodeName: \"xr_standard_squeeze\",\n                visualResponses: {},\n            },\n            \"xr-standard-touchpad\": {\n                type: \"touchpad\",\n                gamepadIndices: {\n                    button: 2,\n                    xAxis: 0,\n                    yAxis: 1,\n                },\n                rootNodeName: \"xr_standard_touchpad\",\n                visualResponses: {},\n            },\n            menu: {\n                type: \"button\",\n                gamepadIndices: {\n                    button: 4,\n                },\n                rootNodeName: \"menu\",\n                visualResponses: {},\n            },\n        },\n        gamepadMapping: \"xr-standard\",\n        rootNodeName: \"htc_vive_none\",\n        assetPath: \"none.glb\",\n    },\n    none: {\n        selectComponentId: \"xr-standard-trigger\",\n        components: {\n            \"xr-standard-trigger\": {\n                type: \"trigger\",\n                gamepadIndices: {\n                    button: 0,\n                },\n                rootNodeName: \"xr_standard_trigger\",\n                visualResponses: {},\n            },\n            \"xr-standard-squeeze\": {\n                type: \"squeeze\",\n                gamepadIndices: {\n                    button: 1,\n                },\n                rootNodeName: \"xr_standard_squeeze\",\n                visualResponses: {},\n            },\n            \"xr-standard-touchpad\": {\n                type: \"touchpad\",\n                gamepadIndices: {\n                    button: 2,\n                    xAxis: 0,\n                    yAxis: 1,\n                },\n                rootNodeName: \"xr_standard_touchpad\",\n                visualResponses: {},\n            },\n            menu: {\n                type: \"button\",\n                gamepadIndices: {\n                    button: 4,\n                },\n                rootNodeName: \"menu\",\n                visualResponses: {},\n            },\n        },\n        gamepadMapping: \"xr-standard\",\n        rootNodeName: \"htc-vive-none\",\n        assetPath: \"none.glb\",\n    },\n};\n//# sourceMappingURL=webXRHTCViveMotionController.js.map","import { RegisterNativeTypeAsync } from \"../../Engines/nativeEngine.js\";\n/** @hidden */\nvar NativeXRFrame = /** @class */ (function () {\n    function NativeXRFrame(_nativeImpl) {\n        var _this = this;\n        this._nativeImpl = _nativeImpl;\n        this._xrTransform = new XRRigidTransform();\n        this._xrPose = {\n            transform: this._xrTransform,\n            emulatedPosition: false,\n        };\n        // Enough space for position, orientation\n        this._xrPoseVectorData = new Float32Array(4 + 4);\n        this.fillPoses = this._nativeImpl.fillPoses.bind(this._nativeImpl);\n        this.getViewerPose = this._nativeImpl.getViewerPose.bind(this._nativeImpl);\n        this.getHitTestResults = this._nativeImpl.getHitTestResults.bind(this._nativeImpl);\n        this.getHitTestResultsForTransientInput = function () {\n            throw new Error(\"XRFrame.getHitTestResultsForTransientInput not supported on native.\");\n        };\n        this.createAnchor = this._nativeImpl.createAnchor.bind(this._nativeImpl);\n        this.getJointPose = this._nativeImpl.getJointPose.bind(this._nativeImpl);\n        this.fillJointRadii = this._nativeImpl.fillJointRadii.bind(this._nativeImpl);\n        this.getLightEstimate = function () {\n            throw new Error(\"XRFrame.getLightEstimate not supported on native.\");\n        };\n        this.getImageTrackingResults = function () {\n            var _a;\n            return (_a = _this._nativeImpl._imageTrackingResults) !== null && _a !== void 0 ? _a : [];\n        };\n    }\n    Object.defineProperty(NativeXRFrame.prototype, \"session\", {\n        get: function () {\n            return this._nativeImpl.session;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    NativeXRFrame.prototype.getPose = function (space, baseSpace) {\n        if (!this._nativeImpl.getPoseData(space, baseSpace, this._xrPoseVectorData.buffer, this._xrTransform.matrix.buffer)) {\n            return undefined;\n        }\n        var position = this._xrTransform.position;\n        position.x = this._xrPoseVectorData[0];\n        position.y = this._xrPoseVectorData[1];\n        position.z = this._xrPoseVectorData[2];\n        position.w = this._xrPoseVectorData[3];\n        var orientation = this._xrTransform.orientation;\n        orientation.x = this._xrPoseVectorData[4];\n        orientation.y = this._xrPoseVectorData[5];\n        orientation.z = this._xrPoseVectorData[6];\n        orientation.w = this._xrPoseVectorData[7];\n        return this._xrPose;\n    };\n    Object.defineProperty(NativeXRFrame.prototype, \"trackedAnchors\", {\n        get: function () {\n            return this._nativeImpl.trackedAnchors;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NativeXRFrame.prototype, \"worldInformation\", {\n        get: function () {\n            return this._nativeImpl.worldInformation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NativeXRFrame.prototype, \"detectedPlanes\", {\n        get: function () {\n            return this._nativeImpl.detectedPlanes;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(NativeXRFrame.prototype, \"featurePointCloud\", {\n        get: function () {\n            return this._nativeImpl.featurePointCloud;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return NativeXRFrame;\n}());\nexport { NativeXRFrame };\nRegisterNativeTypeAsync(\"NativeXRFrame\", NativeXRFrame);\n//# sourceMappingURL=nativeXRFrame.js.map","import { __decorate } from \"tslib\";\nimport { Matrix, Vector3 } from \"./Maths/math.vector.js\";\nimport { serialize } from \"./Misc/decorators.js\";\nimport { Observable } from \"./Misc/observable.js\";\nimport { EngineStore } from \"./Engines/engineStore.js\";\nimport { _WarnImport } from \"./Misc/devTools.js\";\n/** @hidden */\nvar _InternalNodeDataInfo = /** @class */ (function () {\n    function _InternalNodeDataInfo() {\n        this._doNotSerialize = false;\n        this._isDisposed = false;\n        this._sceneRootNodesIndex = -1;\n        this._isEnabled = true;\n        this._isParentEnabled = true;\n        this._isReady = true;\n        this._onEnabledStateChangedObservable = new Observable();\n        this._onClonedObservable = new Observable();\n    }\n    return _InternalNodeDataInfo;\n}());\n/**\n * Node is the basic class for all scene objects (Mesh, Light, Camera.)\n */\nvar Node = /** @class */ (function () {\n    /**\n     * Creates a new Node\n     * @param name the name and id to be given to this node\n     * @param scene the scene this node will be added to\n     */\n    function Node(name, scene) {\n        if (scene === void 0) { scene = null; }\n        this._isDirty = false;\n        this._nodeDataStorage = new _InternalNodeDataInfo();\n        /**\n         * Gets or sets a string used to store user defined state for the node\n         */\n        this.state = \"\";\n        /**\n         * Gets or sets an object used to store user defined information for the node\n         */\n        this.metadata = null;\n        /**\n         * For internal use only. Please do not use.\n         */\n        this.reservedDataStore = null;\n        /** @hidden */\n        this._parentContainer = null;\n        /**\n         * Gets a list of Animations associated with the node\n         */\n        this.animations = new Array();\n        this._ranges = {};\n        /**\n         * Callback raised when the node is ready to be used\n         */\n        this.onReady = null;\n        /** @hidden */\n        this._currentRenderId = -1;\n        this._parentUpdateId = -1;\n        /** @hidden */\n        this._childUpdateId = -1;\n        /** @hidden */\n        this._waitingParentId = null;\n        /** @hidden */\n        this._cache = {};\n        this._parentNode = null;\n        /** @hidden */\n        this._children = null;\n        /** @hidden */\n        this._worldMatrix = Matrix.Identity();\n        /** @hidden */\n        this._worldMatrixDeterminant = 0;\n        /** @hidden */\n        this._worldMatrixDeterminantIsDirty = true;\n        this._animationPropertiesOverride = null;\n        /** @hidden */\n        this._isNode = true;\n        /**\n         * An event triggered when the mesh is disposed\n         */\n        this.onDisposeObservable = new Observable();\n        this._onDisposeObserver = null;\n        // Behaviors\n        this._behaviors = new Array();\n        this.name = name;\n        this.id = name;\n        this._scene = (scene || EngineStore.LastCreatedScene);\n        this.uniqueId = this._scene.getUniqueId();\n        this._initCache();\n    }\n    /**\n     * Add a new node constructor\n     * @param type defines the type name of the node to construct\n     * @param constructorFunc defines the constructor function\n     */\n    Node.AddNodeConstructor = function (type, constructorFunc) {\n        this._NodeConstructors[type] = constructorFunc;\n    };\n    /**\n     * Returns a node constructor based on type name\n     * @param type defines the type name\n     * @param name defines the new node name\n     * @param scene defines the hosting scene\n     * @param options defines optional options to transmit to constructors\n     * @returns the new constructor or null\n     */\n    Node.Construct = function (type, name, scene, options) {\n        var constructorFunc = this._NodeConstructors[type];\n        if (!constructorFunc) {\n            return null;\n        }\n        return constructorFunc(name, scene, options);\n    };\n    Object.defineProperty(Node.prototype, \"doNotSerialize\", {\n        /**\n         * Gets or sets a boolean used to define if the node must be serialized\n         */\n        get: function () {\n            if (this._nodeDataStorage._doNotSerialize) {\n                return true;\n            }\n            if (this._parentNode) {\n                return this._parentNode.doNotSerialize;\n            }\n            return false;\n        },\n        set: function (value) {\n            this._nodeDataStorage._doNotSerialize = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Gets a boolean indicating if the node has been disposed\n     * @returns true if the node was disposed\n     */\n    Node.prototype.isDisposed = function () {\n        return this._nodeDataStorage._isDisposed;\n    };\n    Object.defineProperty(Node.prototype, \"parent\", {\n        get: function () {\n            return this._parentNode;\n        },\n        /**\n         * Gets or sets the parent of the node (without keeping the current position in the scene)\n         * @see https://doc.babylonjs.com/how_to/parenting\n         */\n        set: function (parent) {\n            if (this._parentNode === parent) {\n                return;\n            }\n            var previousParentNode = this._parentNode;\n            // Remove self from list of children of parent\n            if (this._parentNode && this._parentNode._children !== undefined && this._parentNode._children !== null) {\n                var index = this._parentNode._children.indexOf(this);\n                if (index !== -1) {\n                    this._parentNode._children.splice(index, 1);\n                }\n                if (!parent && !this._nodeDataStorage._isDisposed) {\n                    this._addToSceneRootNodes();\n                }\n            }\n            // Store new parent\n            this._parentNode = parent;\n            // Add as child to new parent\n            if (this._parentNode) {\n                if (this._parentNode._children === undefined || this._parentNode._children === null) {\n                    this._parentNode._children = new Array();\n                }\n                this._parentNode._children.push(this);\n                if (!previousParentNode) {\n                    this._removeFromSceneRootNodes();\n                }\n            }\n            // Enabled state\n            this._syncParentEnabledState();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /** @hidden */\n    Node.prototype._addToSceneRootNodes = function () {\n        if (this._nodeDataStorage._sceneRootNodesIndex === -1) {\n            this._nodeDataStorage._sceneRootNodesIndex = this._scene.rootNodes.length;\n            this._scene.rootNodes.push(this);\n        }\n    };\n    /** @hidden */\n    Node.prototype._removeFromSceneRootNodes = function () {\n        if (this._nodeDataStorage._sceneRootNodesIndex !== -1) {\n            var rootNodes = this._scene.rootNodes;\n            var lastIdx = rootNodes.length - 1;\n            rootNodes[this._nodeDataStorage._sceneRootNodesIndex] = rootNodes[lastIdx];\n            rootNodes[this._nodeDataStorage._sceneRootNodesIndex]._nodeDataStorage._sceneRootNodesIndex = this._nodeDataStorage._sceneRootNodesIndex;\n            this._scene.rootNodes.pop();\n            this._nodeDataStorage._sceneRootNodesIndex = -1;\n        }\n    };\n    Object.defineProperty(Node.prototype, \"animationPropertiesOverride\", {\n        /**\n         * Gets or sets the animation properties override\n         */\n        get: function () {\n            if (!this._animationPropertiesOverride) {\n                return this._scene.animationPropertiesOverride;\n            }\n            return this._animationPropertiesOverride;\n        },\n        set: function (value) {\n            this._animationPropertiesOverride = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Gets a string identifying the name of the class\n     * @returns \"Node\" string\n     */\n    Node.prototype.getClassName = function () {\n        return \"Node\";\n    };\n    Object.defineProperty(Node.prototype, \"onDispose\", {\n        /**\n         * Sets a callback that will be raised when the node will be disposed\n         */\n        set: function (callback) {\n            if (this._onDisposeObserver) {\n                this.onDisposeObservable.remove(this._onDisposeObserver);\n            }\n            this._onDisposeObserver = this.onDisposeObservable.add(callback);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"onEnabledStateChangedObservable\", {\n        /**\n         * An event triggered when the enabled state of the node changes\n         */\n        get: function () {\n            return this._nodeDataStorage._onEnabledStateChangedObservable;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"onClonedObservable\", {\n        /**\n         * An event triggered when the node is cloned\n         */\n        get: function () {\n            return this._nodeDataStorage._onClonedObservable;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Gets the scene of the node\n     * @returns a scene\n     */\n    Node.prototype.getScene = function () {\n        return this._scene;\n    };\n    /**\n     * Gets the engine of the node\n     * @returns a Engine\n     */\n    Node.prototype.getEngine = function () {\n        return this._scene.getEngine();\n    };\n    /**\n     * Attach a behavior to the node\n     * @see https://doc.babylonjs.com/features/behaviour\n     * @param behavior defines the behavior to attach\n     * @param attachImmediately defines that the behavior must be attached even if the scene is still loading\n     * @returns the current Node\n     */\n    Node.prototype.addBehavior = function (behavior, attachImmediately) {\n        var _this = this;\n        if (attachImmediately === void 0) { attachImmediately = false; }\n        var index = this._behaviors.indexOf(behavior);\n        if (index !== -1) {\n            return this;\n        }\n        behavior.init();\n        if (this._scene.isLoading && !attachImmediately) {\n            // We defer the attach when the scene will be loaded\n            this._scene.onDataLoadedObservable.addOnce(function () {\n                behavior.attach(_this);\n            });\n        }\n        else {\n            behavior.attach(this);\n        }\n        this._behaviors.push(behavior);\n        return this;\n    };\n    /**\n     * Remove an attached behavior\n     * @see https://doc.babylonjs.com/features/behaviour\n     * @param behavior defines the behavior to attach\n     * @returns the current Node\n     */\n    Node.prototype.removeBehavior = function (behavior) {\n        var index = this._behaviors.indexOf(behavior);\n        if (index === -1) {\n            return this;\n        }\n        this._behaviors[index].detach();\n        this._behaviors.splice(index, 1);\n        return this;\n    };\n    Object.defineProperty(Node.prototype, \"behaviors\", {\n        /**\n         * Gets the list of attached behaviors\n         * @see https://doc.babylonjs.com/features/behaviour\n         */\n        get: function () {\n            return this._behaviors;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Gets an attached behavior by name\n     * @param name defines the name of the behavior to look for\n     * @see https://doc.babylonjs.com/features/behaviour\n     * @returns null if behavior was not found else the requested behavior\n     */\n    Node.prototype.getBehaviorByName = function (name) {\n        for (var _i = 0, _a = this._behaviors; _i < _a.length; _i++) {\n            var behavior = _a[_i];\n            if (behavior.name === name) {\n                return behavior;\n            }\n        }\n        return null;\n    };\n    /**\n     * Returns the latest update of the World matrix\n     * @returns a Matrix\n     */\n    Node.prototype.getWorldMatrix = function () {\n        if (this._currentRenderId !== this._scene.getRenderId()) {\n            this.computeWorldMatrix();\n        }\n        return this._worldMatrix;\n    };\n    /** @hidden */\n    Node.prototype._getWorldMatrixDeterminant = function () {\n        if (this._worldMatrixDeterminantIsDirty) {\n            this._worldMatrixDeterminantIsDirty = false;\n            this._worldMatrixDeterminant = this._worldMatrix.determinant();\n        }\n        return this._worldMatrixDeterminant;\n    };\n    Object.defineProperty(Node.prototype, \"worldMatrixFromCache\", {\n        /**\n         * Returns directly the latest state of the mesh World matrix.\n         * A Matrix is returned.\n         */\n        get: function () {\n            return this._worldMatrix;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // override it in derived class if you add new variables to the cache\n    // and call the parent class method\n    /** @hidden */\n    Node.prototype._initCache = function () {\n        this._cache = {};\n        this._cache.parent = undefined;\n    };\n    /**\n     * @param force\n     * @hidden\n     */\n    Node.prototype.updateCache = function (force) {\n        if (!force && this.isSynchronized()) {\n            return;\n        }\n        this._cache.parent = this.parent;\n        this._updateCache();\n    };\n    /**\n     * @param trigger\n     * @param initialCall\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Node.prototype._getActionManagerForTrigger = function (trigger, initialCall) {\n        if (initialCall === void 0) { initialCall = true; }\n        if (!this.parent) {\n            return null;\n        }\n        return this.parent._getActionManagerForTrigger(trigger, false);\n    };\n    // override it in derived class if you add new variables to the cache\n    // and call the parent class method if !ignoreParentClass\n    /**\n     * @param ignoreParentClass\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Node.prototype._updateCache = function (ignoreParentClass) { };\n    // override it in derived class if you add new variables to the cache\n    /** @hidden */\n    Node.prototype._isSynchronized = function () {\n        return true;\n    };\n    /** @hidden */\n    Node.prototype._markSyncedWithParent = function () {\n        if (this._parentNode) {\n            this._parentUpdateId = this._parentNode._childUpdateId;\n        }\n    };\n    /** @hidden */\n    Node.prototype.isSynchronizedWithParent = function () {\n        if (!this._parentNode) {\n            return true;\n        }\n        if (this._parentNode._isDirty || this._parentUpdateId !== this._parentNode._childUpdateId) {\n            return false;\n        }\n        return this._parentNode.isSynchronized();\n    };\n    /** @hidden */\n    Node.prototype.isSynchronized = function () {\n        if (this._cache.parent !== this._parentNode) {\n            this._cache.parent = this._parentNode;\n            return false;\n        }\n        if (this._parentNode && !this.isSynchronizedWithParent()) {\n            return false;\n        }\n        return this._isSynchronized();\n    };\n    /**\n     * Is this node ready to be used/rendered\n     * @param completeCheck defines if a complete check (including materials and lights) has to be done (false by default)\n     * @return true if the node is ready\n     */\n    Node.prototype.isReady = function (completeCheck) {\n        if (completeCheck === void 0) { completeCheck = false; }\n        return this._nodeDataStorage._isReady;\n    };\n    /**\n     * Flag the  node as dirty (Forcing it to update everything)\n     * @param property helps children apply precise \"dirtyfication\"\n     * @returns this node\n     */\n    Node.prototype.markAsDirty = function (property) {\n        this._currentRenderId = Number.MAX_VALUE;\n        this._isDirty = true;\n        return this;\n    };\n    /**\n     * Is this node enabled?\n     * If the node has a parent, all ancestors will be checked and false will be returned if any are false (not enabled), otherwise will return true\n     * @param checkAncestors indicates if this method should check the ancestors. The default is to check the ancestors. If set to false, the method will return the value of this node without checking ancestors\n     * @return whether this node (and its parent) is enabled\n     */\n    Node.prototype.isEnabled = function (checkAncestors) {\n        if (checkAncestors === void 0) { checkAncestors = true; }\n        if (checkAncestors === false) {\n            return this._nodeDataStorage._isEnabled;\n        }\n        if (!this._nodeDataStorage._isEnabled) {\n            return false;\n        }\n        return this._nodeDataStorage._isParentEnabled;\n    };\n    /** @hidden */\n    Node.prototype._syncParentEnabledState = function () {\n        this._nodeDataStorage._isParentEnabled = this._parentNode ? this._parentNode.isEnabled() : true;\n        if (this._children) {\n            this._children.forEach(function (c) {\n                c._syncParentEnabledState(); // Force children to update accordingly\n            });\n        }\n    };\n    /**\n     * Set the enabled state of this node\n     * @param value defines the new enabled state\n     */\n    Node.prototype.setEnabled = function (value) {\n        if (this._nodeDataStorage._isEnabled === value) {\n            return;\n        }\n        this._nodeDataStorage._isEnabled = value;\n        this._nodeDataStorage._onEnabledStateChangedObservable.notifyObservers(value);\n        this._syncParentEnabledState();\n    };\n    /**\n     * Is this node a descendant of the given node?\n     * The function will iterate up the hierarchy until the ancestor was found or no more parents defined\n     * @param ancestor defines the parent node to inspect\n     * @returns a boolean indicating if this node is a descendant of the given node\n     */\n    Node.prototype.isDescendantOf = function (ancestor) {\n        if (this.parent) {\n            if (this.parent === ancestor) {\n                return true;\n            }\n            return this.parent.isDescendantOf(ancestor);\n        }\n        return false;\n    };\n    /**\n     * @param results\n     * @param directDescendantsOnly\n     * @param predicate\n     * @hidden\n     */\n    Node.prototype._getDescendants = function (results, directDescendantsOnly, predicate) {\n        if (directDescendantsOnly === void 0) { directDescendantsOnly = false; }\n        if (!this._children) {\n            return;\n        }\n        for (var index = 0; index < this._children.length; index++) {\n            var item = this._children[index];\n            if (!predicate || predicate(item)) {\n                results.push(item);\n            }\n            if (!directDescendantsOnly) {\n                item._getDescendants(results, false, predicate);\n            }\n        }\n    };\n    /**\n     * Will return all nodes that have this node as ascendant\n     * @param directDescendantsOnly defines if true only direct descendants of 'this' will be considered, if false direct and also indirect (children of children, an so on in a recursive manner) descendants of 'this' will be considered\n     * @param predicate defines an optional predicate that will be called on every evaluated child, the predicate must return true for a given child to be part of the result, otherwise it will be ignored\n     * @return all children nodes of all types\n     */\n    Node.prototype.getDescendants = function (directDescendantsOnly, predicate) {\n        var results = new Array();\n        this._getDescendants(results, directDescendantsOnly, predicate);\n        return results;\n    };\n    /**\n     * Get all child-meshes of this node\n     * @param directDescendantsOnly defines if true only direct descendants of 'this' will be considered, if false direct and also indirect (children of children, an so on in a recursive manner) descendants of 'this' will be considered (Default: false)\n     * @param predicate defines an optional predicate that will be called on every evaluated child, the predicate must return true for a given child to be part of the result, otherwise it will be ignored\n     * @returns an array of AbstractMesh\n     */\n    Node.prototype.getChildMeshes = function (directDescendantsOnly, predicate) {\n        var results = [];\n        this._getDescendants(results, directDescendantsOnly, function (node) {\n            return (!predicate || predicate(node)) && node.cullingStrategy !== undefined;\n        });\n        return results;\n    };\n    /**\n     * Get all direct children of this node\n     * @param predicate defines an optional predicate that will be called on every evaluated child, the predicate must return true for a given child to be part of the result, otherwise it will be ignored\n     * @param directDescendantsOnly defines if true only direct descendants of 'this' will be considered, if false direct and also indirect (children of children, an so on in a recursive manner) descendants of 'this' will be considered (Default: true)\n     * @returns an array of Node\n     */\n    Node.prototype.getChildren = function (predicate, directDescendantsOnly) {\n        if (directDescendantsOnly === void 0) { directDescendantsOnly = true; }\n        return this.getDescendants(directDescendantsOnly, predicate);\n    };\n    /**\n     * @param state\n     * @hidden\n     */\n    Node.prototype._setReady = function (state) {\n        if (state === this._nodeDataStorage._isReady) {\n            return;\n        }\n        if (!state) {\n            this._nodeDataStorage._isReady = false;\n            return;\n        }\n        if (this.onReady) {\n            this.onReady(this);\n        }\n        this._nodeDataStorage._isReady = true;\n    };\n    /**\n     * Get an animation by name\n     * @param name defines the name of the animation to look for\n     * @returns null if not found else the requested animation\n     */\n    Node.prototype.getAnimationByName = function (name) {\n        for (var i = 0; i < this.animations.length; i++) {\n            var animation = this.animations[i];\n            if (animation.name === name) {\n                return animation;\n            }\n        }\n        return null;\n    };\n    /**\n     * Creates an animation range for this node\n     * @param name defines the name of the range\n     * @param from defines the starting key\n     * @param to defines the end key\n     */\n    Node.prototype.createAnimationRange = function (name, from, to) {\n        // check name not already in use\n        if (!this._ranges[name]) {\n            this._ranges[name] = Node._AnimationRangeFactory(name, from, to);\n            for (var i = 0, nAnimations = this.animations.length; i < nAnimations; i++) {\n                if (this.animations[i]) {\n                    this.animations[i].createRange(name, from, to);\n                }\n            }\n        }\n    };\n    /**\n     * Delete a specific animation range\n     * @param name defines the name of the range to delete\n     * @param deleteFrames defines if animation frames from the range must be deleted as well\n     */\n    Node.prototype.deleteAnimationRange = function (name, deleteFrames) {\n        if (deleteFrames === void 0) { deleteFrames = true; }\n        for (var i = 0, nAnimations = this.animations.length; i < nAnimations; i++) {\n            if (this.animations[i]) {\n                this.animations[i].deleteRange(name, deleteFrames);\n            }\n        }\n        this._ranges[name] = null; // said much faster than 'delete this._range[name]'\n    };\n    /**\n     * Get an animation range by name\n     * @param name defines the name of the animation range to look for\n     * @returns null if not found else the requested animation range\n     */\n    Node.prototype.getAnimationRange = function (name) {\n        return this._ranges[name] || null;\n    };\n    /**\n     * Gets the list of all animation ranges defined on this node\n     * @returns an array\n     */\n    Node.prototype.getAnimationRanges = function () {\n        var animationRanges = [];\n        var name;\n        for (name in this._ranges) {\n            animationRanges.push(this._ranges[name]);\n        }\n        return animationRanges;\n    };\n    /**\n     * Will start the animation sequence\n     * @param name defines the range frames for animation sequence\n     * @param loop defines if the animation should loop (false by default)\n     * @param speedRatio defines the speed factor in which to run the animation (1 by default)\n     * @param onAnimationEnd defines a function to be executed when the animation ended (undefined by default)\n     * @returns the object created for this animation. If range does not exist, it will return null\n     */\n    Node.prototype.beginAnimation = function (name, loop, speedRatio, onAnimationEnd) {\n        var range = this.getAnimationRange(name);\n        if (!range) {\n            return null;\n        }\n        return this._scene.beginAnimation(this, range.from, range.to, loop, speedRatio, onAnimationEnd);\n    };\n    /**\n     * Serialize animation ranges into a JSON compatible object\n     * @returns serialization object\n     */\n    Node.prototype.serializeAnimationRanges = function () {\n        var serializationRanges = [];\n        for (var name_1 in this._ranges) {\n            var localRange = this._ranges[name_1];\n            if (!localRange) {\n                continue;\n            }\n            var range = {};\n            range.name = name_1;\n            range.from = localRange.from;\n            range.to = localRange.to;\n            serializationRanges.push(range);\n        }\n        return serializationRanges;\n    };\n    /**\n     * Computes the world matrix of the node\n     * @param force defines if the cache version should be invalidated forcing the world matrix to be created from scratch\n     * @returns the world matrix\n     */\n    Node.prototype.computeWorldMatrix = function (force) {\n        if (!this._worldMatrix) {\n            this._worldMatrix = Matrix.Identity();\n        }\n        return this._worldMatrix;\n    };\n    /**\n     * Releases resources associated with this node.\n     * @param doNotRecurse Set to true to not recurse into each children (recurse into each children by default)\n     * @param disposeMaterialAndTextures Set to true to also dispose referenced materials and textures (false by default)\n     */\n    Node.prototype.dispose = function (doNotRecurse, disposeMaterialAndTextures) {\n        if (disposeMaterialAndTextures === void 0) { disposeMaterialAndTextures = false; }\n        this._nodeDataStorage._isDisposed = true;\n        if (!doNotRecurse) {\n            var nodes = this.getDescendants(true);\n            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                var node = nodes_1[_i];\n                node.dispose(doNotRecurse, disposeMaterialAndTextures);\n            }\n        }\n        if (!this.parent) {\n            this._removeFromSceneRootNodes();\n        }\n        else {\n            this.parent = null;\n        }\n        // Callback\n        this.onDisposeObservable.notifyObservers(this);\n        this.onDisposeObservable.clear();\n        this.onEnabledStateChangedObservable.clear();\n        this.onClonedObservable.clear();\n        // Behaviors\n        for (var _a = 0, _b = this._behaviors; _a < _b.length; _a++) {\n            var behavior = _b[_a];\n            behavior.detach();\n        }\n        this._behaviors = [];\n        this.metadata = null;\n    };\n    /**\n     * Parse animation range data from a serialization object and store them into a given node\n     * @param node defines where to store the animation ranges\n     * @param parsedNode defines the serialization object to read data from\n     * @param scene defines the hosting scene\n     */\n    Node.ParseAnimationRanges = function (node, parsedNode, scene) {\n        if (parsedNode.ranges) {\n            for (var index = 0; index < parsedNode.ranges.length; index++) {\n                var data = parsedNode.ranges[index];\n                node.createAnimationRange(data.name, data.from, data.to);\n            }\n        }\n    };\n    /**\n     * Return the minimum and maximum world vectors of the entire hierarchy under current node\n     * @param includeDescendants Include bounding info from descendants as well (true by default)\n     * @param predicate defines a callback function that can be customize to filter what meshes should be included in the list used to compute the bounding vectors\n     * @returns the new bounding vectors\n     */\n    Node.prototype.getHierarchyBoundingVectors = function (includeDescendants, predicate) {\n        if (includeDescendants === void 0) { includeDescendants = true; }\n        if (predicate === void 0) { predicate = null; }\n        // Ensures that all world matrix will be recomputed.\n        this.getScene().incrementRenderId();\n        this.computeWorldMatrix(true);\n        var min;\n        var max;\n        var thisAbstractMesh = this;\n        if (thisAbstractMesh.getBoundingInfo && thisAbstractMesh.subMeshes) {\n            // If this is an abstract mesh get its bounding info\n            var boundingInfo = thisAbstractMesh.getBoundingInfo();\n            min = boundingInfo.boundingBox.minimumWorld.clone();\n            max = boundingInfo.boundingBox.maximumWorld.clone();\n        }\n        else {\n            min = new Vector3(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n            max = new Vector3(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n        }\n        if (includeDescendants) {\n            var descendants = this.getDescendants(false);\n            for (var _i = 0, descendants_1 = descendants; _i < descendants_1.length; _i++) {\n                var descendant = descendants_1[_i];\n                var childMesh = descendant;\n                childMesh.computeWorldMatrix(true);\n                // Filters meshes based on custom predicate function.\n                if (predicate && !predicate(childMesh)) {\n                    continue;\n                }\n                //make sure we have the needed params to get mix and max\n                if (!childMesh.getBoundingInfo || childMesh.getTotalVertices() === 0) {\n                    continue;\n                }\n                var childBoundingInfo = childMesh.getBoundingInfo();\n                var boundingBox = childBoundingInfo.boundingBox;\n                var minBox = boundingBox.minimumWorld;\n                var maxBox = boundingBox.maximumWorld;\n                Vector3.CheckExtends(minBox, min, max);\n                Vector3.CheckExtends(maxBox, min, max);\n            }\n        }\n        return {\n            min: min,\n            max: max,\n        };\n    };\n    /**\n     * @param name\n     * @param from\n     * @param to\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    Node._AnimationRangeFactory = function (name, from, to) {\n        throw _WarnImport(\"AnimationRange\");\n    };\n    Node._NodeConstructors = {};\n    __decorate([\n        serialize()\n    ], Node.prototype, \"name\", void 0);\n    __decorate([\n        serialize()\n    ], Node.prototype, \"id\", void 0);\n    __decorate([\n        serialize()\n    ], Node.prototype, \"uniqueId\", void 0);\n    __decorate([\n        serialize()\n    ], Node.prototype, \"state\", void 0);\n    __decorate([\n        serialize()\n    ], Node.prototype, \"metadata\", void 0);\n    return Node;\n}());\nexport { Node };\n//# sourceMappingURL=node.js.map","import { __assign, __extends } from \"tslib\";\nimport { Tools } from \"./Misc/tools.js\";\nimport { PrecisionDate } from \"./Misc/precisionDate.js\";\nimport { Observable } from \"./Misc/observable.js\";\nimport { SmartArrayNoDuplicate, SmartArray } from \"./Misc/smartArray.js\";\nimport { StringDictionary } from \"./Misc/stringDictionary.js\";\nimport { Tags } from \"./Misc/tags.js\";\nimport { Vector3, Matrix, TmpVectors } from \"./Maths/math.vector.js\";\nimport { AbstractScene } from \"./abstractScene.js\";\nimport { ImageProcessingConfiguration } from \"./Materials/imageProcessingConfiguration.js\";\nimport { UniformBuffer } from \"./Materials/uniformBuffer.js\";\nimport { PickingInfo } from \"./Collisions/pickingInfo.js\";\nimport { ActionEvent } from \"./Actions/actionEvent.js\";\nimport { PostProcessManager } from \"./PostProcesses/postProcessManager.js\";\nimport { RenderingManager } from \"./Rendering/renderingManager.js\";\nimport { Stage } from \"./sceneComponent.js\";\n\nimport { IsWindowObjectExist } from \"./Misc/domManagement.js\";\nimport { EngineStore } from \"./Engines/engineStore.js\";\nimport { _WarnImport } from \"./Misc/devTools.js\";\nimport { InputManager } from \"./Inputs/scene.inputManager.js\";\nimport { PerfCounter } from \"./Misc/perfCounter.js\";\nimport { Color4, Color3 } from \"./Maths/math.color.js\";\nimport { Frustum } from \"./Maths/math.frustum.js\";\nimport { UniqueIdGenerator } from \"./Misc/uniqueIdGenerator.js\";\nimport { ReadFile, RequestFile, LoadFile } from \"./Misc/fileTools.js\";\nimport { LightConstants } from \"./Lights/lightConstants.js\";\nimport { ComputePressureObserverWrapper } from \"./Misc/computePressure.js\";\n/**\n * Represents a scene to be rendered by the engine.\n * @see https://doc.babylonjs.com/features/scene\n */\nvar Scene = /** @class */ (function (_super) {\n    __extends(Scene, _super);\n    /**\n     * Creates a new Scene\n     * @param engine defines the engine to use to render this scene\n     * @param options defines the scene options\n     */\n    function Scene(engine, options) {\n        var _this = _super.call(this) || this;\n        // Members\n        /** @hidden */\n        _this._inputManager = new InputManager(_this);\n        /** Define this parameter if you are using multiple cameras and you want to specify which one should be used for pointer position */\n        _this.cameraToUseForPointers = null;\n        /** @hidden */\n        _this._isScene = true;\n        /** @hidden */\n        _this._blockEntityCollection = false;\n        /**\n         * Gets or sets a boolean that indicates if the scene must clear the render buffer before rendering a frame\n         */\n        _this.autoClear = true;\n        /**\n         * Gets or sets a boolean that indicates if the scene must clear the depth and stencil buffers before rendering a frame\n         */\n        _this.autoClearDepthAndStencil = true;\n        /**\n         * Defines the color used to clear the render buffer (Default is (0.2, 0.2, 0.3, 1.0))\n         */\n        _this.clearColor = new Color4(0.2, 0.2, 0.3, 1.0);\n        /**\n         * Defines the color used to simulate the ambient color (Default is (0, 0, 0))\n         */\n        _this.ambientColor = new Color3(0, 0, 0);\n        /**\n         * Intensity of the environment in all pbr material.\n         * This dims or reinforces the IBL lighting overall (reflection and diffuse).\n         * As in the majority of the scene they are the same (exception for multi room and so on),\n         * this is easier to reference from here than from all the materials.\n         */\n        _this.environmentIntensity = 1;\n        _this._forceWireframe = false;\n        _this._skipFrustumClipping = false;\n        _this._forcePointsCloud = false;\n        /**\n         * Gets or sets a boolean indicating if animations are enabled\n         */\n        _this.animationsEnabled = true;\n        _this._animationPropertiesOverride = null;\n        /**\n         * Gets or sets a boolean indicating if a constant deltatime has to be used\n         * This is mostly useful for testing purposes when you do not want the animations to scale with the framerate\n         */\n        _this.useConstantAnimationDeltaTime = false;\n        /**\n         * Gets or sets a boolean indicating if the scene must keep the meshUnderPointer property updated\n         * Please note that it requires to run a ray cast through the scene on every frame\n         */\n        _this.constantlyUpdateMeshUnderPointer = false;\n        /**\n         * Defines the HTML cursor to use when hovering over interactive elements\n         */\n        _this.hoverCursor = \"pointer\";\n        /**\n         * Defines the HTML default cursor to use (empty by default)\n         */\n        _this.defaultCursor = \"\";\n        /**\n         * Defines whether cursors are handled by the scene.\n         */\n        _this.doNotHandleCursors = false;\n        /**\n         * This is used to call preventDefault() on pointer down\n         * in order to block unwanted artifacts like system double clicks\n         */\n        _this.preventDefaultOnPointerDown = true;\n        /**\n         * This is used to call preventDefault() on pointer up\n         * in order to block unwanted artifacts like system double clicks\n         */\n        _this.preventDefaultOnPointerUp = true;\n        // Metadata\n        /**\n         * Gets or sets user defined metadata\n         */\n        _this.metadata = null;\n        /**\n         * For internal use only. Please do not use.\n         */\n        _this.reservedDataStore = null;\n        /**\n         * Use this array to add regular expressions used to disable offline support for specific urls\n         */\n        _this.disableOfflineSupportExceptionRules = new Array();\n        /**\n         * An event triggered when the scene is disposed.\n         */\n        _this.onDisposeObservable = new Observable();\n        _this._onDisposeObserver = null;\n        /**\n         * An event triggered before rendering the scene (right after animations and physics)\n         */\n        _this.onBeforeRenderObservable = new Observable();\n        _this._onBeforeRenderObserver = null;\n        /**\n         * An event triggered after rendering the scene\n         */\n        _this.onAfterRenderObservable = new Observable();\n        /**\n         * An event triggered after rendering the scene for an active camera (When scene.render is called this will be called after each camera)\n         */\n        _this.onAfterRenderCameraObservable = new Observable();\n        _this._onAfterRenderObserver = null;\n        /**\n         * An event triggered before animating the scene\n         */\n        _this.onBeforeAnimationsObservable = new Observable();\n        /**\n         * An event triggered after animations processing\n         */\n        _this.onAfterAnimationsObservable = new Observable();\n        /**\n         * An event triggered before draw calls are ready to be sent\n         */\n        _this.onBeforeDrawPhaseObservable = new Observable();\n        /**\n         * An event triggered after draw calls have been sent\n         */\n        _this.onAfterDrawPhaseObservable = new Observable();\n        /**\n         * An event triggered when the scene is ready\n         */\n        _this.onReadyObservable = new Observable();\n        /**\n         * An event triggered before rendering a camera\n         */\n        _this.onBeforeCameraRenderObservable = new Observable();\n        _this._onBeforeCameraRenderObserver = null;\n        /**\n         * An event triggered after rendering a camera\n         */\n        _this.onAfterCameraRenderObservable = new Observable();\n        _this._onAfterCameraRenderObserver = null;\n        /**\n         * An event triggered when active meshes evaluation is about to start\n         */\n        _this.onBeforeActiveMeshesEvaluationObservable = new Observable();\n        /**\n         * An event triggered when active meshes evaluation is done\n         */\n        _this.onAfterActiveMeshesEvaluationObservable = new Observable();\n        /**\n         * An event triggered when particles rendering is about to start\n         * Note: This event can be trigger more than once per frame (because particles can be rendered by render target textures as well)\n         */\n        _this.onBeforeParticlesRenderingObservable = new Observable();\n        /**\n         * An event triggered when particles rendering is done\n         * Note: This event can be trigger more than once per frame (because particles can be rendered by render target textures as well)\n         */\n        _this.onAfterParticlesRenderingObservable = new Observable();\n        /**\n         * An event triggered when SceneLoader.Append or SceneLoader.Load or SceneLoader.ImportMesh were successfully executed\n         */\n        _this.onDataLoadedObservable = new Observable();\n        /**\n         * An event triggered when a camera is created\n         */\n        _this.onNewCameraAddedObservable = new Observable();\n        /**\n         * An event triggered when a camera is removed\n         */\n        _this.onCameraRemovedObservable = new Observable();\n        /**\n         * An event triggered when a light is created\n         */\n        _this.onNewLightAddedObservable = new Observable();\n        /**\n         * An event triggered when a light is removed\n         */\n        _this.onLightRemovedObservable = new Observable();\n        /**\n         * An event triggered when a geometry is created\n         */\n        _this.onNewGeometryAddedObservable = new Observable();\n        /**\n         * An event triggered when a geometry is removed\n         */\n        _this.onGeometryRemovedObservable = new Observable();\n        /**\n         * An event triggered when a transform node is created\n         */\n        _this.onNewTransformNodeAddedObservable = new Observable();\n        /**\n         * An event triggered when a transform node is removed\n         */\n        _this.onTransformNodeRemovedObservable = new Observable();\n        /**\n         * An event triggered when a mesh is created\n         */\n        _this.onNewMeshAddedObservable = new Observable();\n        /**\n         * An event triggered when a mesh is removed\n         */\n        _this.onMeshRemovedObservable = new Observable();\n        /**\n         * An event triggered when a skeleton is created\n         */\n        _this.onNewSkeletonAddedObservable = new Observable();\n        /**\n         * An event triggered when a skeleton is removed\n         */\n        _this.onSkeletonRemovedObservable = new Observable();\n        /**\n         * An event triggered when a material is created\n         */\n        _this.onNewMaterialAddedObservable = new Observable();\n        /**\n         * An event triggered when a multi material is created\n         */\n        _this.onNewMultiMaterialAddedObservable = new Observable();\n        /**\n         * An event triggered when a material is removed\n         */\n        _this.onMaterialRemovedObservable = new Observable();\n        /**\n         * An event triggered when a multi material is removed\n         */\n        _this.onMultiMaterialRemovedObservable = new Observable();\n        /**\n         * An event triggered when a texture is created\n         */\n        _this.onNewTextureAddedObservable = new Observable();\n        /**\n         * An event triggered when a texture is removed\n         */\n        _this.onTextureRemovedObservable = new Observable();\n        /**\n         * An event triggered when render targets are about to be rendered\n         * Can happen multiple times per frame.\n         */\n        _this.onBeforeRenderTargetsRenderObservable = new Observable();\n        /**\n         * An event triggered when render targets were rendered.\n         * Can happen multiple times per frame.\n         */\n        _this.onAfterRenderTargetsRenderObservable = new Observable();\n        /**\n         * An event triggered before calculating deterministic simulation step\n         */\n        _this.onBeforeStepObservable = new Observable();\n        /**\n         * An event triggered after calculating deterministic simulation step\n         */\n        _this.onAfterStepObservable = new Observable();\n        /**\n         * An event triggered when the activeCamera property is updated\n         */\n        _this.onActiveCameraChanged = new Observable();\n        /**\n         * This Observable will be triggered before rendering each renderingGroup of each rendered camera.\n         * The RenderingGroupInfo class contains all the information about the context in which the observable is called\n         * If you wish to register an Observer only for a given set of renderingGroup, use the mask with a combination of the renderingGroup index elevated to the power of two (1 for renderingGroup 0, 2 for renderingrOup1, 4 for 2 and 8 for 3)\n         */\n        _this.onBeforeRenderingGroupObservable = new Observable();\n        /**\n         * This Observable will be triggered after rendering each renderingGroup of each rendered camera.\n         * The RenderingGroupInfo class contains all the information about the context in which the observable is called\n         * If you wish to register an Observer only for a given set of renderingGroup, use the mask with a combination of the renderingGroup index elevated to the power of two (1 for renderingGroup 0, 2 for renderingrOup1, 4 for 2 and 8 for 3)\n         */\n        _this.onAfterRenderingGroupObservable = new Observable();\n        /**\n         * This Observable will when a mesh has been imported into the scene.\n         */\n        _this.onMeshImportedObservable = new Observable();\n        /**\n         * This Observable will when an animation file has been imported into the scene.\n         */\n        _this.onAnimationFileImportedObservable = new Observable();\n        // Animations\n        /** @hidden */\n        _this._registeredForLateAnimationBindings = new SmartArrayNoDuplicate(256);\n        /**\n         * Gets or sets a boolean indicating if the user want to entirely skip the picking phase when a pointer move event occurs.\n         */\n        _this.skipPointerMovePicking = false;\n        /**\n         * Gets or sets a boolean indicating if the user want to entirely skip the picking phase when a pointer down event occurs.\n         */\n        _this.skipPointerDownPicking = false;\n        /**\n         * Gets or sets a boolean indicating if the user want to entirely skip the picking phase when a pointer up event occurs.  Off by default.\n         */\n        _this.skipPointerUpPicking = false;\n        /**\n         * This observable event is triggered when any ponter event is triggered. It is registered during Scene.attachControl() and it is called BEFORE the 3D engine process anything (mesh/sprite picking for instance).\n         * You have the possibility to skip the process and the call to onPointerObservable by setting PointerInfoPre.skipOnPointerObservable to true\n         */\n        _this.onPrePointerObservable = new Observable();\n        /**\n         * Observable event triggered each time an input event is received from the rendering canvas\n         */\n        _this.onPointerObservable = new Observable();\n        // Keyboard\n        /**\n         * This observable event is triggered when any keyboard event si raised and registered during Scene.attachControl()\n         * You have the possibility to skip the process and the call to onKeyboardObservable by setting KeyboardInfoPre.skipOnPointerObservable to true\n         */\n        _this.onPreKeyboardObservable = new Observable();\n        /**\n         * Observable event triggered each time an keyboard event is received from the hosting window\n         */\n        _this.onKeyboardObservable = new Observable();\n        // Coordinates system\n        _this._useRightHandedSystem = false;\n        // Deterministic lockstep\n        _this._timeAccumulator = 0;\n        _this._currentStepId = 0;\n        _this._currentInternalStep = 0;\n        // Fog\n        _this._fogEnabled = true;\n        _this._fogMode = Scene.FOGMODE_NONE;\n        /**\n         * Gets or sets the fog color to use\n         * @see https://doc.babylonjs.com/babylon101/environment#fog\n         * (Default is Color3(0.2, 0.2, 0.3))\n         */\n        _this.fogColor = new Color3(0.2, 0.2, 0.3);\n        /**\n         * Gets or sets the fog density to use\n         * @see https://doc.babylonjs.com/babylon101/environment#fog\n         * (Default is 0.1)\n         */\n        _this.fogDensity = 0.1;\n        /**\n         * Gets or sets the fog start distance to use\n         * @see https://doc.babylonjs.com/babylon101/environment#fog\n         * (Default is 0)\n         */\n        _this.fogStart = 0;\n        /**\n         * Gets or sets the fog end distance to use\n         * @see https://doc.babylonjs.com/babylon101/environment#fog\n         * (Default is 1000)\n         */\n        _this.fogEnd = 1000.0;\n        /**\n         * Flag indicating if we need to store previous matrices when rendering\n         */\n        _this.needsPreviousWorldMatrices = false;\n        // Lights\n        _this._shadowsEnabled = true;\n        _this._lightsEnabled = true;\n        /** All of the active cameras added to this scene. */\n        _this.activeCameras = new Array();\n        // Textures\n        _this._texturesEnabled = true;\n        // Physics\n        /**\n         * Gets or sets a boolean indicating if physic engines are enabled on this scene\n         */\n        _this.physicsEnabled = true;\n        // Particles\n        /**\n         * Gets or sets a boolean indicating if particles are enabled on this scene\n         */\n        _this.particlesEnabled = true;\n        // Sprites\n        /**\n         * Gets or sets a boolean indicating if sprites are enabled on this scene\n         */\n        _this.spritesEnabled = true;\n        // Skeletons\n        _this._skeletonsEnabled = true;\n        // Lens flares\n        /**\n         * Gets or sets a boolean indicating if lens flares are enabled on this scene\n         */\n        _this.lensFlaresEnabled = true;\n        // Collisions\n        /**\n         * Gets or sets a boolean indicating if collisions are enabled on this scene\n         * @see https://doc.babylonjs.com/babylon101/cameras,_mesh_collisions_and_gravity\n         */\n        _this.collisionsEnabled = true;\n        /**\n         * Defines the gravity applied to this scene (used only for collisions)\n         * @see https://doc.babylonjs.com/babylon101/cameras,_mesh_collisions_and_gravity\n         */\n        _this.gravity = new Vector3(0, -9.807, 0);\n        // Postprocesses\n        /**\n         * Gets or sets a boolean indicating if postprocesses are enabled on this scene\n         */\n        _this.postProcessesEnabled = true;\n        // Customs render targets\n        /**\n         * Gets or sets a boolean indicating if render targets are enabled on this scene\n         */\n        _this.renderTargetsEnabled = true;\n        /**\n         * Gets or sets a boolean indicating if next render targets must be dumped as image for debugging purposes\n         * We recommend not using it and instead rely on Spector.js: http://spector.babylonjs.com\n         */\n        _this.dumpNextRenderTargets = false;\n        /**\n         * The list of user defined render targets added to the scene\n         */\n        _this.customRenderTargets = new Array();\n        /**\n         * Gets the list of meshes imported to the scene through SceneLoader\n         */\n        _this.importedMeshesFiles = new Array();\n        // Probes\n        /**\n         * Gets or sets a boolean indicating if probes are enabled on this scene\n         */\n        _this.probesEnabled = true;\n        _this._meshesForIntersections = new SmartArrayNoDuplicate(256);\n        // Procedural textures\n        /**\n         * Gets or sets a boolean indicating if procedural textures are enabled on this scene\n         */\n        _this.proceduralTexturesEnabled = true;\n        // Performance counters\n        _this._totalVertices = new PerfCounter();\n        /** @hidden */\n        _this._activeIndices = new PerfCounter();\n        /** @hidden */\n        _this._activeParticles = new PerfCounter();\n        /** @hidden */\n        _this._activeBones = new PerfCounter();\n        /** @hidden */\n        _this._animationTime = 0;\n        /**\n         * Gets or sets a general scale for animation speed\n         * @see https://www.babylonjs-playground.com/#IBU2W7#3\n         */\n        _this.animationTimeScale = 1;\n        _this._renderId = 0;\n        _this._frameId = 0;\n        _this._executeWhenReadyTimeoutId = null;\n        _this._intermediateRendering = false;\n        _this._defaultFrameBufferCleared = false;\n        _this._viewUpdateFlag = -1;\n        _this._projectionUpdateFlag = -1;\n        /** @hidden */\n        _this._toBeDisposed = new Array(256);\n        _this._activeRequests = new Array();\n        /** @hidden */\n        _this._pendingData = new Array();\n        _this._isDisposed = false;\n        /**\n         * Gets or sets a boolean indicating that all submeshes of active meshes must be rendered\n         * Use this boolean to avoid computing frustum clipping on submeshes (This could help when you are CPU bound)\n         */\n        _this.dispatchAllSubMeshesOfActiveMeshes = false;\n        _this._activeMeshes = new SmartArray(256);\n        _this._processedMaterials = new SmartArray(256);\n        _this._renderTargets = new SmartArrayNoDuplicate(256);\n        _this._materialsRenderTargets = new SmartArrayNoDuplicate(256);\n        /** @hidden */\n        _this._activeParticleSystems = new SmartArray(256);\n        _this._activeSkeletons = new SmartArrayNoDuplicate(32);\n        _this._softwareSkinnedMeshes = new SmartArrayNoDuplicate(32);\n        /** @hidden */\n        _this._activeAnimatables = new Array();\n        _this._transformMatrix = Matrix.Zero();\n        /**\n         * Gets or sets a boolean indicating if lights must be sorted by priority (off by default)\n         * This is useful if there are more lights that the maximum simulteanous authorized\n         */\n        _this.requireLightSorting = false;\n        /**\n         * @hidden\n         * Backing store of defined scene components.\n         */\n        _this._components = [];\n        /**\n         * @hidden\n         * Backing store of defined scene components.\n         */\n        _this._serializableComponents = [];\n        /**\n         * List of components to register on the next registration step.\n         */\n        _this._transientComponents = [];\n        /**\n         * @hidden\n         * Defines the actions happening before camera updates.\n         */\n        _this._beforeCameraUpdateStage = Stage.Create();\n        /**\n         * @hidden\n         * Defines the actions happening before clear the canvas.\n         */\n        _this._beforeClearStage = Stage.Create();\n        /**\n         * @hidden\n         * Defines the actions happening before clear the canvas.\n         */\n        _this._beforeRenderTargetClearStage = Stage.Create();\n        /**\n         * @hidden\n         * Defines the actions when collecting render targets for the frame.\n         */\n        _this._gatherRenderTargetsStage = Stage.Create();\n        /**\n         * @hidden\n         * Defines the actions happening for one camera in the frame.\n         */\n        _this._gatherActiveCameraRenderTargetsStage = Stage.Create();\n        /**\n         * @hidden\n         * Defines the actions happening during the per mesh ready checks.\n         */\n        _this._isReadyForMeshStage = Stage.Create();\n        /**\n         * @hidden\n         * Defines the actions happening before evaluate active mesh checks.\n         */\n        _this._beforeEvaluateActiveMeshStage = Stage.Create();\n        /**\n         * @hidden\n         * Defines the actions happening during the evaluate sub mesh checks.\n         */\n        _this._evaluateSubMeshStage = Stage.Create();\n        /**\n         * @hidden\n         * Defines the actions happening during the active mesh stage.\n         */\n        _this._preActiveMeshStage = Stage.Create();\n        /**\n         * @hidden\n         * Defines the actions happening during the per camera render target step.\n         */\n        _this._cameraDrawRenderTargetStage = Stage.Create();\n        /**\n         * @hidden\n         * Defines the actions happening just before the active camera is drawing.\n         */\n        _this._beforeCameraDrawStage = Stage.Create();\n        /**\n         * @hidden\n         * Defines the actions happening just before a render target is drawing.\n         */\n        _this._beforeRenderTargetDrawStage = Stage.Create();\n        /**\n         * @hidden\n         * Defines the actions happening just before a rendering group is drawing.\n         */\n        _this._beforeRenderingGroupDrawStage = Stage.Create();\n        /**\n         * @hidden\n         * Defines the actions happening just before a mesh is drawing.\n         */\n        _this._beforeRenderingMeshStage = Stage.Create();\n        /**\n         * @hidden\n         * Defines the actions happening just after a mesh has been drawn.\n         */\n        _this._afterRenderingMeshStage = Stage.Create();\n        /**\n         * @hidden\n         * Defines the actions happening just after a rendering group has been drawn.\n         */\n        _this._afterRenderingGroupDrawStage = Stage.Create();\n        /**\n         * @hidden\n         * Defines the actions happening just after the active camera has been drawn.\n         */\n        _this._afterCameraDrawStage = Stage.Create();\n        /**\n         * @hidden\n         * Defines the actions happening just after a render target has been drawn.\n         */\n        _this._afterRenderTargetDrawStage = Stage.Create();\n        /**\n         * @hidden\n         * Defines the actions happening just after rendering all cameras and computing intersections.\n         */\n        _this._afterRenderStage = Stage.Create();\n        /**\n         * @hidden\n         * Defines the actions happening when a pointer move event happens.\n         */\n        _this._pointerMoveStage = Stage.Create();\n        /**\n         * @hidden\n         * Defines the actions happening when a pointer down event happens.\n         */\n        _this._pointerDownStage = Stage.Create();\n        /**\n         * @hidden\n         * Defines the actions happening when a pointer up event happens.\n         */\n        _this._pointerUpStage = Stage.Create();\n        /**\n         * an optional map from Geometry Id to Geometry index in the 'geometries' array\n         */\n        _this._geometriesByUniqueId = null;\n        _this._defaultMeshCandidates = {\n            data: [],\n            length: 0\n        };\n        _this._defaultSubMeshCandidates = {\n            data: [],\n            length: 0\n        };\n        _this._preventFreeActiveMeshesAndRenderingGroups = false;\n        /** @hidden */\n        _this._activeMeshesFrozen = false;\n        _this._activeMeshesFrozenButKeepClipping = false;\n        _this._skipEvaluateActiveMeshesCompletely = false;\n        /** @hidden */\n        _this._allowPostProcessClearColor = true;\n        /**\n         * User updatable function that will return a deterministic frame time when engine is in deterministic lock step mode\n         */\n        _this.getDeterministicFrameTime = function () {\n            return _this._engine.getTimeStep();\n        };\n        _this._blockMaterialDirtyMechanism = false;\n        /**\n         * Internal perfCollector instance used for sharing between inspector and playground.\n         * Marked as protected to allow sharing between prototype extensions, but disallow access at toplevel.\n         */\n        _this._perfCollector = null;\n        /**\n         * An event triggered when the cpu usage/speed meets certain thresholds.\n         * Note: Compute pressure is an experimental API.\n         */\n        _this.onComputePressureChanged = new Observable();\n        var fullOptions = __assign({ useGeometryUniqueIdsMap: true, useMaterialMeshMap: true, useClonedMeshMap: true, virtual: false }, options);\n        _this._engine = engine || EngineStore.LastCreatedEngine;\n        if (!fullOptions.virtual) {\n            EngineStore._LastCreatedScene = _this;\n            _this._engine.scenes.push(_this);\n        }\n        else {\n            _this._engine._virtualScenes.push(_this);\n        }\n        _this._uid = null;\n        _this._renderingManager = new RenderingManager(_this);\n        if (PostProcessManager) {\n            _this.postProcessManager = new PostProcessManager(_this);\n        }\n        if (IsWindowObjectExist()) {\n            _this.attachControl();\n        }\n        // Uniform Buffer\n        _this._createUbo();\n        // Default Image processing definition\n        if (ImageProcessingConfiguration) {\n            _this._imageProcessingConfiguration = new ImageProcessingConfiguration();\n        }\n        _this.setDefaultCandidateProviders();\n        if (fullOptions.useGeometryUniqueIdsMap) {\n            _this._geometriesByUniqueId = {};\n        }\n        _this.useMaterialMeshMap = fullOptions.useMaterialMeshMap;\n        _this.useClonedMeshMap = fullOptions.useClonedMeshMap;\n        if (!options || !options.virtual) {\n            _this._engine.onNewSceneAddedObservable.notifyObservers(_this);\n        }\n        if (ComputePressureObserverWrapper.IsAvailable) {\n            _this._computePressureObserver = new ComputePressureObserverWrapper(function (update) {\n                _this.onComputePressureChanged.notifyObservers(update);\n            }, {\n                // Thresholds divide the interval [0.0 .. 1.0] into ranges.\n                cpuUtilizationThresholds: [0.25, 0.5, 0.75, 0.9],\n                cpuSpeedThresholds: [0.5]\n            });\n            _this._computePressureObserver.observe();\n        }\n        return _this;\n    }\n    /**\n     * Factory used to create the default material.\n     * @param scene The scene to create the material for\n     * @returns The default material\n     */\n    Scene.DefaultMaterialFactory = function (scene) {\n        throw _WarnImport(\"StandardMaterial\");\n    };\n    /**\n     * Factory used to create the a collision coordinator.\n     * @returns The collision coordinator\n     */\n    Scene.CollisionCoordinatorFactory = function () {\n        throw _WarnImport(\"DefaultCollisionCoordinator\");\n    };\n    Object.defineProperty(Scene.prototype, \"environmentTexture\", {\n        /**\n         * Texture used in all pbr material as the reflection texture.\n         * As in the majority of the scene they are the same (exception for multi room and so on),\n         * this is easier to reference from here than from all the materials.\n         */\n        get: function () {\n            return this._environmentTexture;\n        },\n        /**\n         * Texture used in all pbr material as the reflection texture.\n         * As in the majority of the scene they are the same (exception for multi room and so on),\n         * this is easier to set here than in all the materials.\n         */\n        set: function (value) {\n            if (this._environmentTexture === value) {\n                return;\n            }\n            this._environmentTexture = value;\n            this.markAllMaterialsAsDirty(1);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"imageProcessingConfiguration\", {\n        /**\n         * Default image processing configuration used either in the rendering\n         * Forward main pass or through the imageProcessingPostProcess if present.\n         * As in the majority of the scene they are the same (exception for multi camera),\n         * this is easier to reference from here than from all the materials and post process.\n         *\n         * No setter as we it is a shared configuration, you can set the values instead.\n         */\n        get: function () {\n            return this._imageProcessingConfiguration;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"forceWireframe\", {\n        get: function () {\n            return this._forceWireframe;\n        },\n        /**\n         * Gets or sets a boolean indicating if all rendering must be done in wireframe\n         */\n        set: function (value) {\n            if (this._forceWireframe === value) {\n                return;\n            }\n            this._forceWireframe = value;\n            this.markAllMaterialsAsDirty(16);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"skipFrustumClipping\", {\n        get: function () {\n            return this._skipFrustumClipping;\n        },\n        /**\n         * Gets or sets a boolean indicating if we should skip the frustum clipping part of the active meshes selection\n         */\n        set: function (value) {\n            if (this._skipFrustumClipping === value) {\n                return;\n            }\n            this._skipFrustumClipping = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"forcePointsCloud\", {\n        get: function () {\n            return this._forcePointsCloud;\n        },\n        /**\n         * Gets or sets a boolean indicating if all rendering must be done in point cloud\n         */\n        set: function (value) {\n            if (this._forcePointsCloud === value) {\n                return;\n            }\n            this._forcePointsCloud = value;\n            this.markAllMaterialsAsDirty(16);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"animationPropertiesOverride\", {\n        /**\n         * Gets or sets the animation properties override\n         */\n        get: function () {\n            return this._animationPropertiesOverride;\n        },\n        set: function (value) {\n            this._animationPropertiesOverride = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"onDispose\", {\n        /** Sets a function to be executed when this scene is disposed. */\n        set: function (callback) {\n            if (this._onDisposeObserver) {\n                this.onDisposeObservable.remove(this._onDisposeObserver);\n            }\n            this._onDisposeObserver = this.onDisposeObservable.add(callback);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"beforeRender\", {\n        /** Sets a function to be executed before rendering this scene */\n        set: function (callback) {\n            if (this._onBeforeRenderObserver) {\n                this.onBeforeRenderObservable.remove(this._onBeforeRenderObserver);\n            }\n            if (callback) {\n                this._onBeforeRenderObserver = this.onBeforeRenderObservable.add(callback);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"afterRender\", {\n        /** Sets a function to be executed after rendering this scene */\n        set: function (callback) {\n            if (this._onAfterRenderObserver) {\n                this.onAfterRenderObservable.remove(this._onAfterRenderObserver);\n            }\n            if (callback) {\n                this._onAfterRenderObserver = this.onAfterRenderObservable.add(callback);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"beforeCameraRender\", {\n        /** Sets a function to be executed before rendering a camera*/\n        set: function (callback) {\n            if (this._onBeforeCameraRenderObserver) {\n                this.onBeforeCameraRenderObservable.remove(this._onBeforeCameraRenderObserver);\n            }\n            this._onBeforeCameraRenderObserver = this.onBeforeCameraRenderObservable.add(callback);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"afterCameraRender\", {\n        /** Sets a function to be executed after rendering a camera*/\n        set: function (callback) {\n            if (this._onAfterCameraRenderObserver) {\n                this.onAfterCameraRenderObservable.remove(this._onAfterCameraRenderObserver);\n            }\n            this._onAfterCameraRenderObserver = this.onAfterCameraRenderObservable.add(callback);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"unTranslatedPointer\", {\n        /**\n         * Gets the pointer coordinates without any translation (ie. straight out of the pointer event)\n         */\n        get: function () {\n            return this._inputManager.unTranslatedPointer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene, \"DragMovementThreshold\", {\n        /**\n         * Gets or sets the distance in pixel that you have to move to prevent some events. Default is 10 pixels\n         */\n        get: function () {\n            return InputManager.DragMovementThreshold;\n        },\n        set: function (value) {\n            InputManager.DragMovementThreshold = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene, \"LongPressDelay\", {\n        /**\n         * Time in milliseconds to wait to raise long press events if button is still pressed. Default is 500 ms\n         */\n        get: function () {\n            return InputManager.LongPressDelay;\n        },\n        set: function (value) {\n            InputManager.LongPressDelay = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene, \"DoubleClickDelay\", {\n        /**\n         * Time in milliseconds to wait to raise long press events if button is still pressed. Default is 300 ms\n         */\n        get: function () {\n            return InputManager.DoubleClickDelay;\n        },\n        set: function (value) {\n            InputManager.DoubleClickDelay = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene, \"ExclusiveDoubleClickMode\", {\n        /** If you need to check double click without raising a single click at first click, enable this flag */\n        get: function () {\n            return InputManager.ExclusiveDoubleClickMode;\n        },\n        set: function (value) {\n            InputManager.ExclusiveDoubleClickMode = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Bind the current view position to an effect.\n     * @param effect The effect to be bound\n     * @param variableName name of the shader variable that will hold the eye position\n     * @param isVector3 true to indicates that variableName is a Vector3 and not a Vector4\n     * @return the computed eye position\n     */\n    Scene.prototype.bindEyePosition = function (effect, variableName, isVector3) {\n        var _a;\n        if (variableName === void 0) { variableName = \"vEyePosition\"; }\n        if (isVector3 === void 0) { isVector3 = false; }\n        var eyePosition = this._forcedViewPosition\n            ? this._forcedViewPosition\n            : this._mirroredCameraPosition\n                ? this._mirroredCameraPosition\n                : (_a = this.activeCamera.globalPosition) !== null && _a !== void 0 ? _a : this.activeCamera.devicePosition;\n        var invertNormal = this.useRightHandedSystem === (this._mirroredCameraPosition != null);\n        TmpVectors.Vector4[0].set(eyePosition.x, eyePosition.y, eyePosition.z, invertNormal ? -1 : 1);\n        if (effect) {\n            if (isVector3) {\n                effect.setFloat3(variableName, TmpVectors.Vector4[0].x, TmpVectors.Vector4[0].y, TmpVectors.Vector4[0].z);\n            }\n            else {\n                effect.setVector4(variableName, TmpVectors.Vector4[0]);\n            }\n        }\n        return TmpVectors.Vector4[0];\n    };\n    /**\n     * Update the scene ubo before it can be used in rendering processing\n     * @returns the scene UniformBuffer\n     */\n    Scene.prototype.finalizeSceneUbo = function () {\n        var ubo = this.getSceneUniformBuffer();\n        var eyePosition = this.bindEyePosition(null);\n        ubo.updateFloat4(\"vEyePosition\", eyePosition.x, eyePosition.y, eyePosition.z, eyePosition.w);\n        ubo.update();\n        return ubo;\n    };\n    Object.defineProperty(Scene.prototype, \"useRightHandedSystem\", {\n        get: function () {\n            return this._useRightHandedSystem;\n        },\n        /**\n         * Gets or sets a boolean indicating if the scene must use right-handed coordinates system\n         */\n        set: function (value) {\n            if (this._useRightHandedSystem === value) {\n                return;\n            }\n            this._useRightHandedSystem = value;\n            this.markAllMaterialsAsDirty(16);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Sets the step Id used by deterministic lock step\n     * @see https://doc.babylonjs.com/babylon101/animations#deterministic-lockstep\n     * @param newStepId defines the step Id\n     */\n    Scene.prototype.setStepId = function (newStepId) {\n        this._currentStepId = newStepId;\n    };\n    /**\n     * Gets the step Id used by deterministic lock step\n     * @see https://doc.babylonjs.com/babylon101/animations#deterministic-lockstep\n     * @returns the step Id\n     */\n    Scene.prototype.getStepId = function () {\n        return this._currentStepId;\n    };\n    /**\n     * Gets the internal step used by deterministic lock step\n     * @see https://doc.babylonjs.com/babylon101/animations#deterministic-lockstep\n     * @returns the internal step\n     */\n    Scene.prototype.getInternalStep = function () {\n        return this._currentInternalStep;\n    };\n    Object.defineProperty(Scene.prototype, \"fogEnabled\", {\n        get: function () {\n            return this._fogEnabled;\n        },\n        /**\n         * Gets or sets a boolean indicating if fog is enabled on this scene\n         * @see https://doc.babylonjs.com/babylon101/environment#fog\n         * (Default is true)\n         */\n        set: function (value) {\n            if (this._fogEnabled === value) {\n                return;\n            }\n            this._fogEnabled = value;\n            this.markAllMaterialsAsDirty(16);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"fogMode\", {\n        get: function () {\n            return this._fogMode;\n        },\n        /**\n         * Gets or sets the fog mode to use\n         * @see https://doc.babylonjs.com/babylon101/environment#fog\n         * | mode | value |\n         * | --- | --- |\n         * | FOGMODE_NONE | 0 |\n         * | FOGMODE_EXP | 1 |\n         * | FOGMODE_EXP2 | 2 |\n         * | FOGMODE_LINEAR | 3 |\n         */\n        set: function (value) {\n            if (this._fogMode === value) {\n                return;\n            }\n            this._fogMode = value;\n            this.markAllMaterialsAsDirty(16);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"prePass\", {\n        /**\n         * Flag indicating that the frame buffer binding is handled by another component\n         */\n        get: function () {\n            return !!this.prePassRenderer && this.prePassRenderer.defaultRT.enabled;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"shadowsEnabled\", {\n        get: function () {\n            return this._shadowsEnabled;\n        },\n        /**\n         * Gets or sets a boolean indicating if shadows are enabled on this scene\n         */\n        set: function (value) {\n            if (this._shadowsEnabled === value) {\n                return;\n            }\n            this._shadowsEnabled = value;\n            this.markAllMaterialsAsDirty(2);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"lightsEnabled\", {\n        get: function () {\n            return this._lightsEnabled;\n        },\n        /**\n         * Gets or sets a boolean indicating if lights are enabled on this scene\n         */\n        set: function (value) {\n            if (this._lightsEnabled === value) {\n                return;\n            }\n            this._lightsEnabled = value;\n            this.markAllMaterialsAsDirty(2);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"activeCamera\", {\n        /** Gets or sets the current active camera */\n        get: function () {\n            return this._activeCamera;\n        },\n        set: function (value) {\n            if (value === this._activeCamera) {\n                return;\n            }\n            this._activeCamera = value;\n            this.onActiveCameraChanged.notifyObservers(this);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"defaultMaterial\", {\n        /** The default material used on meshes when no material is affected */\n        get: function () {\n            if (!this._defaultMaterial) {\n                this._defaultMaterial = Scene.DefaultMaterialFactory(this);\n            }\n            return this._defaultMaterial;\n        },\n        /** The default material used on meshes when no material is affected */\n        set: function (value) {\n            this._defaultMaterial = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"texturesEnabled\", {\n        get: function () {\n            return this._texturesEnabled;\n        },\n        /**\n         * Gets or sets a boolean indicating if textures are enabled on this scene\n         */\n        set: function (value) {\n            if (this._texturesEnabled === value) {\n                return;\n            }\n            this._texturesEnabled = value;\n            this.markAllMaterialsAsDirty(1);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"skeletonsEnabled\", {\n        get: function () {\n            return this._skeletonsEnabled;\n        },\n        /**\n         * Gets or sets a boolean indicating if skeletons are enabled on this scene\n         */\n        set: function (value) {\n            if (this._skeletonsEnabled === value) {\n                return;\n            }\n            this._skeletonsEnabled = value;\n            this.markAllMaterialsAsDirty(8);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"collisionCoordinator\", {\n        /** @hidden */\n        get: function () {\n            if (!this._collisionCoordinator) {\n                this._collisionCoordinator = Scene.CollisionCoordinatorFactory();\n                this._collisionCoordinator.init(this);\n            }\n            return this._collisionCoordinator;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"frustumPlanes\", {\n        /**\n         * Gets the list of frustum planes (built from the active camera)\n         */\n        get: function () {\n            return this._frustumPlanes;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Registers the transient components if needed.\n     */\n    Scene.prototype._registerTransientComponents = function () {\n        // Register components that have been associated lately to the scene.\n        if (this._transientComponents.length > 0) {\n            for (var _i = 0, _a = this._transientComponents; _i < _a.length; _i++) {\n                var component = _a[_i];\n                component.register();\n            }\n            this._transientComponents = [];\n        }\n    };\n    /**\n     * @hidden\n     * Add a component to the scene.\n     * Note that the ccomponent could be registered on th next frame if this is called after\n     * the register component stage.\n     * @param component Defines the component to add to the scene\n     */\n    Scene.prototype._addComponent = function (component) {\n        this._components.push(component);\n        this._transientComponents.push(component);\n        var serializableComponent = component;\n        if (serializableComponent.addFromContainer && serializableComponent.serialize) {\n            this._serializableComponents.push(serializableComponent);\n        }\n    };\n    /**\n     * @hidden\n     * Gets a component from the scene.\n     * @param name defines the name of the component to retrieve\n     * @returns the component or null if not present\n     */\n    Scene.prototype._getComponent = function (name) {\n        for (var _i = 0, _a = this._components; _i < _a.length; _i++) {\n            var component = _a[_i];\n            if (component.name === name) {\n                return component;\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a string identifying the name of the class\n     * @returns \"Scene\" string\n     */\n    Scene.prototype.getClassName = function () {\n        return \"Scene\";\n    };\n    /**\n     * @hidden\n     */\n    Scene.prototype._getDefaultMeshCandidates = function () {\n        this._defaultMeshCandidates.data = this.meshes;\n        this._defaultMeshCandidates.length = this.meshes.length;\n        return this._defaultMeshCandidates;\n    };\n    /**\n     * @param mesh\n     * @hidden\n     */\n    Scene.prototype._getDefaultSubMeshCandidates = function (mesh) {\n        this._defaultSubMeshCandidates.data = mesh.subMeshes;\n        this._defaultSubMeshCandidates.length = mesh.subMeshes.length;\n        return this._defaultSubMeshCandidates;\n    };\n    /**\n     * Sets the default candidate providers for the scene.\n     * This sets the getActiveMeshCandidates, getActiveSubMeshCandidates, getIntersectingSubMeshCandidates\n     * and getCollidingSubMeshCandidates to their default function\n     */\n    Scene.prototype.setDefaultCandidateProviders = function () {\n        this.getActiveMeshCandidates = this._getDefaultMeshCandidates.bind(this);\n        this.getActiveSubMeshCandidates = this._getDefaultSubMeshCandidates.bind(this);\n        this.getIntersectingSubMeshCandidates = this._getDefaultSubMeshCandidates.bind(this);\n        this.getCollidingSubMeshCandidates = this._getDefaultSubMeshCandidates.bind(this);\n    };\n    Object.defineProperty(Scene.prototype, \"meshUnderPointer\", {\n        /**\n         * Gets the mesh that is currently under the pointer\n         */\n        get: function () {\n            return this._inputManager.meshUnderPointer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"pointerX\", {\n        /**\n         * Gets or sets the current on-screen X position of the pointer\n         */\n        get: function () {\n            return this._inputManager.pointerX;\n        },\n        set: function (value) {\n            this._inputManager.pointerX = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Scene.prototype, \"pointerY\", {\n        /**\n         * Gets or sets the current on-screen Y position of the pointer\n         */\n        get: function () {\n            return this._inputManager.pointerY;\n        },\n        set: function (value) {\n            this._inputManager.pointerY = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Gets the cached material (ie. the latest rendered one)\n     * @returns the cached material\n     */\n    Scene.prototype.getCachedMaterial = function () {\n        return this._cachedMaterial;\n    };\n    /**\n     * Gets the cached effect (ie. the latest rendered one)\n     * @returns the cached effect\n     */\n    Scene.prototype.getCachedEffect = function () {\n        return this._cachedEffect;\n    };\n    /**\n     * Gets the cached visibility state (ie. the latest rendered one)\n     * @returns the cached visibility state\n     */\n    Scene.prototype.getCachedVisibility = function () {\n        return this._cachedVisibility;\n    };\n    /**\n     * Gets a boolean indicating if the current material / effect / visibility must be bind again\n     * @param material defines the current material\n     * @param effect defines the current effect\n     * @param visibility defines the current visibility state\n     * @returns true if one parameter is not cached\n     */\n    Scene.prototype.isCachedMaterialInvalid = function (material, effect, visibility) {\n        if (visibility === void 0) { visibility = 1; }\n        return this._cachedEffect !== effect || this._cachedMaterial !== material || this._cachedVisibility !== visibility;\n    };\n    /**\n     * Gets the engine associated with the scene\n     * @returns an Engine\n     */\n    Scene.prototype.getEngine = function () {\n        return this._engine;\n    };\n    /**\n     * Gets the total number of vertices rendered per frame\n     * @returns the total number of vertices rendered per frame\n     */\n    Scene.prototype.getTotalVertices = function () {\n        return this._totalVertices.current;\n    };\n    Object.defineProperty(Scene.prototype, \"totalVerticesPerfCounter\", {\n        /**\n         * Gets the performance counter for total vertices\n         * @see https://doc.babylonjs.com/how_to/optimizing_your_scene#instrumentation\n         */\n        get: function () {\n            return this._totalVertices;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Gets the total number of active indices rendered per frame (You can deduce the number of rendered triangles by dividing this number by 3)\n     * @returns the total number of active indices rendered per frame\n     */\n    Scene.prototype.getActiveIndices = function () {\n        return this._activeIndices.current;\n    };\n    Object.defineProperty(Scene.prototype, \"totalActiveIndicesPerfCounter\", {\n        /**\n         * Gets the performance counter for active indices\n         * @see https://doc.babylonjs.com/how_to/optimizing_your_scene#instrumentation\n         */\n        get: function () {\n            return this._activeIndices;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Gets the total number of active particles rendered per frame\n     * @returns the total number of active particles rendered per frame\n     */\n    Scene.prototype.getActiveParticles = function () {\n        return this._activeParticles.current;\n    };\n    Object.defineProperty(Scene.prototype, \"activeParticlesPerfCounter\", {\n        /**\n         * Gets the performance counter for active particles\n         * @see https://doc.babylonjs.com/how_to/optimizing_your_scene#instrumentation\n         */\n        get: function () {\n            return this._activeParticles;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Gets the total number of active bones rendered per frame\n     * @returns the total number of active bones rendered per frame\n     */\n    Scene.prototype.getActiveBones = function () {\n        return this._activeBones.current;\n    };\n    Object.defineProperty(Scene.prototype, \"activeBonesPerfCounter\", {\n        /**\n         * Gets the performance counter for active bones\n         * @see https://doc.babylonjs.com/how_to/optimizing_your_scene#instrumentation\n         */\n        get: function () {\n            return this._activeBones;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Gets the array of active meshes\n     * @returns an array of AbstractMesh\n     */\n    Scene.prototype.getActiveMeshes = function () {\n        return this._activeMeshes;\n    };\n    /**\n     * Gets the animation ratio (which is 1.0 is the scene renders at 60fps and 2 if the scene renders at 30fps, etc.)\n     * @returns a number\n     */\n    Scene.prototype.getAnimationRatio = function () {\n        return this._animationRatio !== undefined ? this._animationRatio : 1;\n    };\n    /**\n     * Gets an unique Id for the current render phase\n     * @returns a number\n     */\n    Scene.prototype.getRenderId = function () {\n        return this._renderId;\n    };\n    /**\n     * Gets an unique Id for the current frame\n     * @returns a number\n     */\n    Scene.prototype.getFrameId = function () {\n        return this._frameId;\n    };\n    /** Call this function if you want to manually increment the render Id*/\n    Scene.prototype.incrementRenderId = function () {\n        this._renderId++;\n    };\n    Scene.prototype._createUbo = function () {\n        this.setSceneUniformBuffer(this.createSceneUniformBuffer());\n    };\n    /**\n     * Use this method to simulate a pointer move on a mesh\n     * The pickResult parameter can be obtained from a scene.pick or scene.pickWithRay\n     * @param pickResult pickingInfo of the object wished to simulate pointer event on\n     * @param pointerEventInit pointer event state to be used when simulating the pointer event (eg. pointer id for multitouch)\n     * @returns the current scene\n     */\n    Scene.prototype.simulatePointerMove = function (pickResult, pointerEventInit) {\n        this._inputManager.simulatePointerMove(pickResult, pointerEventInit);\n        return this;\n    };\n    /**\n     * Use this method to simulate a pointer down on a mesh\n     * The pickResult parameter can be obtained from a scene.pick or scene.pickWithRay\n     * @param pickResult pickingInfo of the object wished to simulate pointer event on\n     * @param pointerEventInit pointer event state to be used when simulating the pointer event (eg. pointer id for multitouch)\n     * @returns the current scene\n     */\n    Scene.prototype.simulatePointerDown = function (pickResult, pointerEventInit) {\n        this._inputManager.simulatePointerDown(pickResult, pointerEventInit);\n        return this;\n    };\n    /**\n     * Use this method to simulate a pointer up on a mesh\n     * The pickResult parameter can be obtained from a scene.pick or scene.pickWithRay\n     * @param pickResult pickingInfo of the object wished to simulate pointer event on\n     * @param pointerEventInit pointer event state to be used when simulating the pointer event (eg. pointer id for multitouch)\n     * @param doubleTap indicates that the pointer up event should be considered as part of a double click (false by default)\n     * @returns the current scene\n     */\n    Scene.prototype.simulatePointerUp = function (pickResult, pointerEventInit, doubleTap) {\n        this._inputManager.simulatePointerUp(pickResult, pointerEventInit, doubleTap);\n        return this;\n    };\n    /**\n     * Gets a boolean indicating if the current pointer event is captured (meaning that the scene has already handled the pointer down)\n     * @param pointerId defines the pointer id to use in a multi-touch scenario (0 by default)\n     * @returns true if the pointer was captured\n     */\n    Scene.prototype.isPointerCaptured = function (pointerId) {\n        if (pointerId === void 0) { pointerId = 0; }\n        return this._inputManager.isPointerCaptured(pointerId);\n    };\n    /**\n     * Attach events to the canvas (To handle actionManagers triggers and raise onPointerMove, onPointerDown and onPointerUp\n     * @param attachUp defines if you want to attach events to pointerup\n     * @param attachDown defines if you want to attach events to pointerdown\n     * @param attachMove defines if you want to attach events to pointermove\n     */\n    Scene.prototype.attachControl = function (attachUp, attachDown, attachMove) {\n        if (attachUp === void 0) { attachUp = true; }\n        if (attachDown === void 0) { attachDown = true; }\n        if (attachMove === void 0) { attachMove = true; }\n        this._inputManager.attachControl(attachUp, attachDown, attachMove);\n    };\n    /** Detaches all event handlers*/\n    Scene.prototype.detachControl = function () {\n        this._inputManager.detachControl();\n    };\n    /**\n     * This function will check if the scene can be rendered (textures are loaded, shaders are compiled)\n     * Delay loaded resources are not taking in account\n     * @param checkRenderTargets true to also check that the meshes rendered as part of a render target are ready (default: true)\n     * @return true if all required resources are ready\n     */\n    Scene.prototype.isReady = function (checkRenderTargets) {\n        if (checkRenderTargets === void 0) { checkRenderTargets = true; }\n        if (this._isDisposed) {\n            return false;\n        }\n        var index;\n        var engine = this.getEngine();\n        var isReady = true;\n        // Pending data\n        if (this._pendingData.length > 0) {\n            isReady = false;\n        }\n        // Meshes\n        if (checkRenderTargets) {\n            this._processedMaterials.reset();\n            this._materialsRenderTargets.reset();\n        }\n        for (index = 0; index < this.meshes.length; index++) {\n            var mesh = this.meshes[index];\n            if (!mesh.subMeshes || mesh.subMeshes.length === 0) {\n                continue;\n            }\n            if (!mesh.isReady(true)) {\n                isReady = false;\n                continue;\n            }\n            var hardwareInstancedRendering = mesh.hasThinInstances ||\n                mesh.getClassName() === \"InstancedMesh\" ||\n                mesh.getClassName() === \"InstancedLinesMesh\" ||\n                (engine.getCaps().instancedArrays && mesh.instances.length > 0);\n            // Is Ready For Mesh\n            for (var _i = 0, _a = this._isReadyForMeshStage; _i < _a.length; _i++) {\n                var step = _a[_i];\n                if (!step.action(mesh, hardwareInstancedRendering)) {\n                    isReady = false;\n                }\n            }\n            if (!checkRenderTargets) {\n                continue;\n            }\n            var mat = mesh.material || this.defaultMaterial;\n            if (mat) {\n                if (mat._storeEffectOnSubMeshes) {\n                    for (var _b = 0, _c = mesh.subMeshes; _b < _c.length; _b++) {\n                        var subMesh = _c[_b];\n                        var material = subMesh.getMaterial();\n                        if (material && material.hasRenderTargetTextures && material.getRenderTargetTextures != null) {\n                            if (this._processedMaterials.indexOf(material) === -1) {\n                                this._processedMaterials.push(material);\n                                this._materialsRenderTargets.concatWithNoDuplicate(material.getRenderTargetTextures());\n                            }\n                        }\n                    }\n                }\n                else {\n                    if (mat.hasRenderTargetTextures && mat.getRenderTargetTextures != null) {\n                        if (this._processedMaterials.indexOf(mat) === -1) {\n                            this._processedMaterials.push(mat);\n                            this._materialsRenderTargets.concatWithNoDuplicate(mat.getRenderTargetTextures());\n                        }\n                    }\n                }\n            }\n        }\n        if (!isReady) {\n            return false;\n        }\n        // Effects\n        if (!engine.areAllEffectsReady()) {\n            return false;\n        }\n        // Render targets\n        if (checkRenderTargets) {\n            for (index = 0; index < this._materialsRenderTargets.length; ++index) {\n                var rtt = this._materialsRenderTargets.data[index];\n                if (!rtt.isReadyForRendering()) {\n                    return false;\n                }\n            }\n        }\n        // Geometries\n        for (index = 0; index < this.geometries.length; index++) {\n            var geometry = this.geometries[index];\n            if (geometry.delayLoadState === 2) {\n                return false;\n            }\n        }\n        // Post-processes\n        if (this.activeCameras && this.activeCameras.length > 0) {\n            for (var _d = 0, _e = this.activeCameras; _d < _e.length; _d++) {\n                var camera = _e[_d];\n                if (!camera.isReady(true)) {\n                    return false;\n                }\n            }\n        }\n        else if (this.activeCamera) {\n            if (!this.activeCamera.isReady(true)) {\n                return false;\n            }\n        }\n        // Particles\n        for (var _f = 0, _g = this.particleSystems; _f < _g.length; _f++) {\n            var particleSystem = _g[_f];\n            if (!particleSystem.isReady()) {\n                return false;\n            }\n        }\n        return true;\n    };\n    /** Resets all cached information relative to material (including effect and visibility) */\n    Scene.prototype.resetCachedMaterial = function () {\n        this._cachedMaterial = null;\n        this._cachedEffect = null;\n        this._cachedVisibility = null;\n    };\n    /**\n     * Registers a function to be called before every frame render\n     * @param func defines the function to register\n     */\n    Scene.prototype.registerBeforeRender = function (func) {\n        this.onBeforeRenderObservable.add(func);\n    };\n    /**\n     * Unregisters a function called before every frame render\n     * @param func defines the function to unregister\n     */\n    Scene.prototype.unregisterBeforeRender = function (func) {\n        this.onBeforeRenderObservable.removeCallback(func);\n    };\n    /**\n     * Registers a function to be called after every frame render\n     * @param func defines the function to register\n     */\n    Scene.prototype.registerAfterRender = function (func) {\n        this.onAfterRenderObservable.add(func);\n    };\n    /**\n     * Unregisters a function called after every frame render\n     * @param func defines the function to unregister\n     */\n    Scene.prototype.unregisterAfterRender = function (func) {\n        this.onAfterRenderObservable.removeCallback(func);\n    };\n    Scene.prototype._executeOnceBeforeRender = function (func) {\n        var _this = this;\n        var execFunc = function () {\n            func();\n            setTimeout(function () {\n                _this.unregisterBeforeRender(execFunc);\n            });\n        };\n        this.registerBeforeRender(execFunc);\n    };\n    /**\n     * The provided function will run before render once and will be disposed afterwards.\n     * A timeout delay can be provided so that the function will be executed in N ms.\n     * The timeout is using the browser's native setTimeout so time percision cannot be guaranteed.\n     * @param func The function to be executed.\n     * @param timeout optional delay in ms\n     */\n    Scene.prototype.executeOnceBeforeRender = function (func, timeout) {\n        var _this = this;\n        if (timeout !== undefined) {\n            setTimeout(function () {\n                _this._executeOnceBeforeRender(func);\n            }, timeout);\n        }\n        else {\n            this._executeOnceBeforeRender(func);\n        }\n    };\n    /**\n     * @param data\n     * @hidden\n     */\n    Scene.prototype._addPendingData = function (data) {\n        this._pendingData.push(data);\n    };\n    /**\n     * @param data\n     * @hidden\n     */\n    Scene.prototype._removePendingData = function (data) {\n        var wasLoading = this.isLoading;\n        var index = this._pendingData.indexOf(data);\n        if (index !== -1) {\n            this._pendingData.splice(index, 1);\n        }\n        if (wasLoading && !this.isLoading) {\n            this.onDataLoadedObservable.notifyObservers(this);\n        }\n    };\n    /**\n     * Returns the number of items waiting to be loaded\n     * @returns the number of items waiting to be loaded\n     */\n    Scene.prototype.getWaitingItemsCount = function () {\n        return this._pendingData.length;\n    };\n    Object.defineProperty(Scene.prototype, \"isLoading\", {\n        /**\n         * Returns a boolean indicating if the scene is still loading data\n         */\n        get: function () {\n            return this._pendingData.length > 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Registers a function to be executed when the scene is ready\n     * @param {Function} func - the function to be executed\n     * @param checkRenderTargets true to also check that the meshes rendered as part of a render target are ready (default: false)\n     */\n    Scene.prototype.executeWhenReady = function (func, checkRenderTargets) {\n        if (checkRenderTargets === void 0) { checkRenderTargets = false; }\n        this.onReadyObservable.add(func);\n        if (this._executeWhenReadyTimeoutId !== null) {\n            return;\n        }\n        this._checkIsReady(checkRenderTargets);\n    };\n    /**\n     * Returns a promise that resolves when the scene is ready\n     * @param checkRenderTargets true to also check that the meshes rendered as part of a render target are ready (default: false)\n     * @returns A promise that resolves when the scene is ready\n     */\n    Scene.prototype.whenReadyAsync = function (checkRenderTargets) {\n        var _this = this;\n        if (checkRenderTargets === void 0) { checkRenderTargets = false; }\n        return new Promise(function (resolve) {\n            _this.executeWhenReady(function () {\n                resolve();\n            }, checkRenderTargets);\n        });\n    };\n    /**\n     * @param checkRenderTargets\n     * @hidden\n     */\n    Scene.prototype._checkIsReady = function (checkRenderTargets) {\n        var _this = this;\n        if (checkRenderTargets === void 0) { checkRenderTargets = false; }\n        this._registerTransientComponents();\n        if (this.isReady(checkRenderTargets)) {\n            this.onReadyObservable.notifyObservers(this);\n            this.onReadyObservable.clear();\n            this._executeWhenReadyTimeoutId = null;\n            return;\n        }\n        if (this._isDisposed) {\n            this.onReadyObservable.clear();\n            this._executeWhenReadyTimeoutId = null;\n            return;\n        }\n        this._executeWhenReadyTimeoutId = setTimeout(function () {\n            _this._checkIsReady(checkRenderTargets);\n        }, 100);\n    };\n    Object.defineProperty(Scene.prototype, \"animatables\", {\n        /**\n         * Gets all animatable attached to the scene\n         */\n        get: function () {\n            return this._activeAnimatables;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Resets the last animation time frame.\n     * Useful to override when animations start running when loading a scene for the first time.\n     */\n    Scene.prototype.resetLastAnimationTimeFrame = function () {\n        this._animationTimeLast = PrecisionDate.Now;\n    };\n    // Matrix\n    /**\n     * Gets the current view matrix\n     * @returns a Matrix\n     */\n    Scene.prototype.getViewMatrix = function () {\n        return this._viewMatrix;\n    };\n    /**\n     * Gets the current projection matrix\n     * @returns a Matrix\n     */\n    Scene.prototype.getProjectionMatrix = function () {\n        return this._projectionMatrix;\n    };\n    /**\n     * Gets the current transform matrix\n     * @returns a Matrix made of View * Projection\n     */\n    Scene.prototype.getTransformMatrix = function () {\n        return this._transformMatrix;\n    };\n    /**\n     * Sets the current transform matrix\n     * @param viewL defines the View matrix to use\n     * @param projectionL defines the Projection matrix to use\n     * @param viewR defines the right View matrix to use (if provided)\n     * @param projectionR defines the right Projection matrix to use (if provided)\n     */\n    Scene.prototype.setTransformMatrix = function (viewL, projectionL, viewR, projectionR) {\n        // clear the multiviewSceneUbo if no viewR and projectionR are defined\n        if (!viewR && !projectionR && this._multiviewSceneUbo) {\n            this._multiviewSceneUbo.dispose();\n            this._multiviewSceneUbo = null;\n        }\n        if (this._viewUpdateFlag === viewL.updateFlag && this._projectionUpdateFlag === projectionL.updateFlag) {\n            return;\n        }\n        this._viewUpdateFlag = viewL.updateFlag;\n        this._projectionUpdateFlag = projectionL.updateFlag;\n        this._viewMatrix = viewL;\n        this._projectionMatrix = projectionL;\n        this._viewMatrix.multiplyToRef(this._projectionMatrix, this._transformMatrix);\n        // Update frustum\n        if (!this._frustumPlanes) {\n            this._frustumPlanes = Frustum.GetPlanes(this._transformMatrix);\n        }\n        else {\n            Frustum.GetPlanesToRef(this._transformMatrix, this._frustumPlanes);\n        }\n        if (this._multiviewSceneUbo && this._multiviewSceneUbo.useUbo) {\n            this._updateMultiviewUbo(viewR, projectionR);\n        }\n        else if (this._sceneUbo.useUbo) {\n            this._sceneUbo.updateMatrix(\"viewProjection\", this._transformMatrix);\n            this._sceneUbo.updateMatrix(\"view\", this._viewMatrix);\n            this._sceneUbo.updateMatrix(\"projection\", this._projectionMatrix);\n        }\n    };\n    /**\n     * Gets the uniform buffer used to store scene data\n     * @returns a UniformBuffer\n     */\n    Scene.prototype.getSceneUniformBuffer = function () {\n        return this._multiviewSceneUbo ? this._multiviewSceneUbo : this._sceneUbo;\n    };\n    /**\n     * Creates a scene UBO\n     * @param name name of the uniform buffer (optional, for debugging purpose only)\n     * @returns a new ubo\n     */\n    Scene.prototype.createSceneUniformBuffer = function (name) {\n        var sceneUbo = new UniformBuffer(this._engine, undefined, false, name !== null && name !== void 0 ? name : \"scene\");\n        sceneUbo.addUniform(\"viewProjection\", 16);\n        sceneUbo.addUniform(\"view\", 16);\n        sceneUbo.addUniform(\"projection\", 16);\n        sceneUbo.addUniform(\"vEyePosition\", 4);\n        return sceneUbo;\n    };\n    /**\n     * Sets the scene ubo\n     * @param ubo the ubo to set for the scene\n     */\n    Scene.prototype.setSceneUniformBuffer = function (ubo) {\n        this._sceneUbo = ubo;\n        this._viewUpdateFlag = -1;\n        this._projectionUpdateFlag = -1;\n    };\n    /**\n     * Gets an unique (relatively to the current scene) Id\n     * @returns an unique number for the scene\n     */\n    Scene.prototype.getUniqueId = function () {\n        return UniqueIdGenerator.UniqueId;\n    };\n    /**\n     * Add a mesh to the list of scene's meshes\n     * @param newMesh defines the mesh to add\n     * @param recursive if all child meshes should also be added to the scene\n     */\n    Scene.prototype.addMesh = function (newMesh, recursive) {\n        var _this = this;\n        if (recursive === void 0) { recursive = false; }\n        if (this._blockEntityCollection) {\n            return;\n        }\n        this.meshes.push(newMesh);\n        newMesh._resyncLightSources();\n        if (!newMesh.parent) {\n            newMesh._addToSceneRootNodes();\n        }\n        this.onNewMeshAddedObservable.notifyObservers(newMesh);\n        if (recursive) {\n            newMesh.getChildMeshes().forEach(function (m) {\n                _this.addMesh(m);\n            });\n        }\n    };\n    /**\n     * Remove a mesh for the list of scene's meshes\n     * @param toRemove defines the mesh to remove\n     * @param recursive if all child meshes should also be removed from the scene\n     * @returns the index where the mesh was in the mesh list\n     */\n    Scene.prototype.removeMesh = function (toRemove, recursive) {\n        var _this = this;\n        if (recursive === void 0) { recursive = false; }\n        var index = this.meshes.indexOf(toRemove);\n        if (index !== -1) {\n            // Remove from the scene if mesh found\n            this.meshes[index] = this.meshes[this.meshes.length - 1];\n            this.meshes.pop();\n            if (!toRemove.parent) {\n                toRemove._removeFromSceneRootNodes();\n            }\n        }\n        this._inputManager._invalidateMesh(toRemove);\n        this.onMeshRemovedObservable.notifyObservers(toRemove);\n        if (recursive) {\n            toRemove.getChildMeshes().forEach(function (m) {\n                _this.removeMesh(m);\n            });\n        }\n        return index;\n    };\n    /**\n     * Add a transform node to the list of scene's transform nodes\n     * @param newTransformNode defines the transform node to add\n     */\n    Scene.prototype.addTransformNode = function (newTransformNode) {\n        if (this._blockEntityCollection) {\n            return;\n        }\n        if (newTransformNode.getScene() === this && newTransformNode._indexInSceneTransformNodesArray !== -1) {\n            // Already there?\n            return;\n        }\n        newTransformNode._indexInSceneTransformNodesArray = this.transformNodes.length;\n        this.transformNodes.push(newTransformNode);\n        if (!newTransformNode.parent) {\n            newTransformNode._addToSceneRootNodes();\n        }\n        this.onNewTransformNodeAddedObservable.notifyObservers(newTransformNode);\n    };\n    /**\n     * Remove a transform node for the list of scene's transform nodes\n     * @param toRemove defines the transform node to remove\n     * @returns the index where the transform node was in the transform node list\n     */\n    Scene.prototype.removeTransformNode = function (toRemove) {\n        var index = toRemove._indexInSceneTransformNodesArray;\n        if (index !== -1) {\n            if (index !== this.transformNodes.length - 1) {\n                var lastNode = this.transformNodes[this.transformNodes.length - 1];\n                this.transformNodes[index] = lastNode;\n                lastNode._indexInSceneTransformNodesArray = index;\n            }\n            toRemove._indexInSceneTransformNodesArray = -1;\n            this.transformNodes.pop();\n            if (!toRemove.parent) {\n                toRemove._removeFromSceneRootNodes();\n            }\n        }\n        this.onTransformNodeRemovedObservable.notifyObservers(toRemove);\n        return index;\n    };\n    /**\n     * Remove a skeleton for the list of scene's skeletons\n     * @param toRemove defines the skeleton to remove\n     * @returns the index where the skeleton was in the skeleton list\n     */\n    Scene.prototype.removeSkeleton = function (toRemove) {\n        var index = this.skeletons.indexOf(toRemove);\n        if (index !== -1) {\n            // Remove from the scene if found\n            this.skeletons.splice(index, 1);\n            this.onSkeletonRemovedObservable.notifyObservers(toRemove);\n            // Clean active container\n            this._executeActiveContainerCleanup(this._activeSkeletons);\n        }\n        return index;\n    };\n    /**\n     * Remove a morph target for the list of scene's morph targets\n     * @param toRemove defines the morph target to remove\n     * @returns the index where the morph target was in the morph target list\n     */\n    Scene.prototype.removeMorphTargetManager = function (toRemove) {\n        var index = this.morphTargetManagers.indexOf(toRemove);\n        if (index !== -1) {\n            // Remove from the scene if found\n            this.morphTargetManagers.splice(index, 1);\n        }\n        return index;\n    };\n    /**\n     * Remove a light for the list of scene's lights\n     * @param toRemove defines the light to remove\n     * @returns the index where the light was in the light list\n     */\n    Scene.prototype.removeLight = function (toRemove) {\n        var index = this.lights.indexOf(toRemove);\n        if (index !== -1) {\n            // Remove from meshes\n            for (var _i = 0, _a = this.meshes; _i < _a.length; _i++) {\n                var mesh = _a[_i];\n                mesh._removeLightSource(toRemove, false);\n            }\n            // Remove from the scene if mesh found\n            this.lights.splice(index, 1);\n            this.sortLightsByPriority();\n            if (!toRemove.parent) {\n                toRemove._removeFromSceneRootNodes();\n            }\n        }\n        this.onLightRemovedObservable.notifyObservers(toRemove);\n        return index;\n    };\n    /**\n     * Remove a camera for the list of scene's cameras\n     * @param toRemove defines the camera to remove\n     * @returns the index where the camera was in the camera list\n     */\n    Scene.prototype.removeCamera = function (toRemove) {\n        var index = this.cameras.indexOf(toRemove);\n        if (index !== -1) {\n            // Remove from the scene if mesh found\n            this.cameras.splice(index, 1);\n            if (!toRemove.parent) {\n                toRemove._removeFromSceneRootNodes();\n            }\n        }\n        // Remove from activeCameras\n        if (this.activeCameras) {\n            var index2 = this.activeCameras.indexOf(toRemove);\n            if (index2 !== -1) {\n                // Remove from the scene if mesh found\n                this.activeCameras.splice(index2, 1);\n            }\n        }\n        // Reset the activeCamera\n        if (this.activeCamera === toRemove) {\n            if (this.cameras.length > 0) {\n                this.activeCamera = this.cameras[0];\n            }\n            else {\n                this.activeCamera = null;\n            }\n        }\n        this.onCameraRemovedObservable.notifyObservers(toRemove);\n        return index;\n    };\n    /**\n     * Remove a particle system for the list of scene's particle systems\n     * @param toRemove defines the particle system to remove\n     * @returns the index where the particle system was in the particle system list\n     */\n    Scene.prototype.removeParticleSystem = function (toRemove) {\n        var index = this.particleSystems.indexOf(toRemove);\n        if (index !== -1) {\n            this.particleSystems.splice(index, 1);\n            // Clean active container\n            this._executeActiveContainerCleanup(this._activeParticleSystems);\n        }\n        return index;\n    };\n    /**\n     * Remove a animation for the list of scene's animations\n     * @param toRemove defines the animation to remove\n     * @returns the index where the animation was in the animation list\n     */\n    Scene.prototype.removeAnimation = function (toRemove) {\n        var index = this.animations.indexOf(toRemove);\n        if (index !== -1) {\n            this.animations.splice(index, 1);\n        }\n        return index;\n    };\n    /**\n     * Will stop the animation of the given target\n     * @param target - the target\n     * @param animationName - the name of the animation to stop (all animations will be stopped if both this and targetMask are empty)\n     * @param targetMask - a function that determines if the animation should be stopped based on its target (all animations will be stopped if both this and animationName are empty)\n     */\n    Scene.prototype.stopAnimation = function (target, animationName, targetMask) {\n        // Do nothing as code will be provided by animation component\n    };\n    /**\n     * Removes the given animation group from this scene.\n     * @param toRemove The animation group to remove\n     * @returns The index of the removed animation group\n     */\n    Scene.prototype.removeAnimationGroup = function (toRemove) {\n        var index = this.animationGroups.indexOf(toRemove);\n        if (index !== -1) {\n            this.animationGroups.splice(index, 1);\n        }\n        return index;\n    };\n    /**\n     * Removes the given multi-material from this scene.\n     * @param toRemove The multi-material to remove\n     * @returns The index of the removed multi-material\n     */\n    Scene.prototype.removeMultiMaterial = function (toRemove) {\n        var index = this.multiMaterials.indexOf(toRemove);\n        if (index !== -1) {\n            this.multiMaterials.splice(index, 1);\n        }\n        this.onMultiMaterialRemovedObservable.notifyObservers(toRemove);\n        return index;\n    };\n    /**\n     * Removes the given material from this scene.\n     * @param toRemove The material to remove\n     * @returns The index of the removed material\n     */\n    Scene.prototype.removeMaterial = function (toRemove) {\n        var index = toRemove._indexInSceneMaterialArray;\n        if (index !== -1 && index < this.materials.length) {\n            if (index !== this.materials.length - 1) {\n                var lastMaterial = this.materials[this.materials.length - 1];\n                this.materials[index] = lastMaterial;\n                lastMaterial._indexInSceneMaterialArray = index;\n            }\n            toRemove._indexInSceneMaterialArray = -1;\n            this.materials.pop();\n        }\n        this.onMaterialRemovedObservable.notifyObservers(toRemove);\n        return index;\n    };\n    /**\n     * Removes the given action manager from this scene.\n     * @deprecated\n     * @param toRemove The action manager to remove\n     * @returns The index of the removed action manager\n     */\n    Scene.prototype.removeActionManager = function (toRemove) {\n        var index = this.actionManagers.indexOf(toRemove);\n        if (index !== -1) {\n            this.actionManagers.splice(index, 1);\n        }\n        return index;\n    };\n    /**\n     * Removes the given texture from this scene.\n     * @param toRemove The texture to remove\n     * @returns The index of the removed texture\n     */\n    Scene.prototype.removeTexture = function (toRemove) {\n        var index = this.textures.indexOf(toRemove);\n        if (index !== -1) {\n            this.textures.splice(index, 1);\n        }\n        this.onTextureRemovedObservable.notifyObservers(toRemove);\n        return index;\n    };\n    /**\n     * Adds the given light to this scene\n     * @param newLight The light to add\n     */\n    Scene.prototype.addLight = function (newLight) {\n        if (this._blockEntityCollection) {\n            return;\n        }\n        this.lights.push(newLight);\n        this.sortLightsByPriority();\n        if (!newLight.parent) {\n            newLight._addToSceneRootNodes();\n        }\n        // Add light to all meshes (To support if the light is removed and then re-added)\n        for (var _i = 0, _a = this.meshes; _i < _a.length; _i++) {\n            var mesh = _a[_i];\n            if (mesh.lightSources.indexOf(newLight) === -1) {\n                mesh.lightSources.push(newLight);\n                mesh._resyncLightSources();\n            }\n        }\n        this.onNewLightAddedObservable.notifyObservers(newLight);\n    };\n    /**\n     * Sorts the list list based on light priorities\n     */\n    Scene.prototype.sortLightsByPriority = function () {\n        if (this.requireLightSorting) {\n            this.lights.sort(LightConstants.CompareLightsPriority);\n        }\n    };\n    /**\n     * Adds the given camera to this scene\n     * @param newCamera The camera to add\n     */\n    Scene.prototype.addCamera = function (newCamera) {\n        if (this._blockEntityCollection) {\n            return;\n        }\n        this.cameras.push(newCamera);\n        this.onNewCameraAddedObservable.notifyObservers(newCamera);\n        if (!newCamera.parent) {\n            newCamera._addToSceneRootNodes();\n        }\n    };\n    /**\n     * Adds the given skeleton to this scene\n     * @param newSkeleton The skeleton to add\n     */\n    Scene.prototype.addSkeleton = function (newSkeleton) {\n        if (this._blockEntityCollection) {\n            return;\n        }\n        this.skeletons.push(newSkeleton);\n        this.onNewSkeletonAddedObservable.notifyObservers(newSkeleton);\n    };\n    /**\n     * Adds the given particle system to this scene\n     * @param newParticleSystem The particle system to add\n     */\n    Scene.prototype.addParticleSystem = function (newParticleSystem) {\n        if (this._blockEntityCollection) {\n            return;\n        }\n        this.particleSystems.push(newParticleSystem);\n    };\n    /**\n     * Adds the given animation to this scene\n     * @param newAnimation The animation to add\n     */\n    Scene.prototype.addAnimation = function (newAnimation) {\n        if (this._blockEntityCollection) {\n            return;\n        }\n        this.animations.push(newAnimation);\n    };\n    /**\n     * Adds the given animation group to this scene.\n     * @param newAnimationGroup The animation group to add\n     */\n    Scene.prototype.addAnimationGroup = function (newAnimationGroup) {\n        if (this._blockEntityCollection) {\n            return;\n        }\n        this.animationGroups.push(newAnimationGroup);\n    };\n    /**\n     * Adds the given multi-material to this scene\n     * @param newMultiMaterial The multi-material to add\n     */\n    Scene.prototype.addMultiMaterial = function (newMultiMaterial) {\n        if (this._blockEntityCollection) {\n            return;\n        }\n        this.multiMaterials.push(newMultiMaterial);\n        this.onNewMultiMaterialAddedObservable.notifyObservers(newMultiMaterial);\n    };\n    /**\n     * Adds the given material to this scene\n     * @param newMaterial The material to add\n     */\n    Scene.prototype.addMaterial = function (newMaterial) {\n        if (this._blockEntityCollection) {\n            return;\n        }\n        if (newMaterial.getScene() === this && newMaterial._indexInSceneMaterialArray !== -1) {\n            // Already there??\n            return;\n        }\n        newMaterial._indexInSceneMaterialArray = this.materials.length;\n        this.materials.push(newMaterial);\n        this.onNewMaterialAddedObservable.notifyObservers(newMaterial);\n    };\n    /**\n     * Adds the given morph target to this scene\n     * @param newMorphTargetManager The morph target to add\n     */\n    Scene.prototype.addMorphTargetManager = function (newMorphTargetManager) {\n        if (this._blockEntityCollection) {\n            return;\n        }\n        this.morphTargetManagers.push(newMorphTargetManager);\n    };\n    /**\n     * Adds the given geometry to this scene\n     * @param newGeometry The geometry to add\n     */\n    Scene.prototype.addGeometry = function (newGeometry) {\n        if (this._blockEntityCollection) {\n            return;\n        }\n        if (this._geometriesByUniqueId) {\n            this._geometriesByUniqueId[newGeometry.uniqueId] = this.geometries.length;\n        }\n        this.geometries.push(newGeometry);\n    };\n    /**\n     * Adds the given action manager to this scene\n     * @deprecated\n     * @param newActionManager The action manager to add\n     */\n    Scene.prototype.addActionManager = function (newActionManager) {\n        this.actionManagers.push(newActionManager);\n    };\n    /**\n     * Adds the given texture to this scene.\n     * @param newTexture The texture to add\n     */\n    Scene.prototype.addTexture = function (newTexture) {\n        if (this._blockEntityCollection) {\n            return;\n        }\n        this.textures.push(newTexture);\n        this.onNewTextureAddedObservable.notifyObservers(newTexture);\n    };\n    /**\n     * Switch active camera\n     * @param newCamera defines the new active camera\n     * @param attachControl defines if attachControl must be called for the new active camera (default: true)\n     */\n    Scene.prototype.switchActiveCamera = function (newCamera, attachControl) {\n        if (attachControl === void 0) { attachControl = true; }\n        var canvas = this._engine.getInputElement();\n        if (!canvas) {\n            return;\n        }\n        if (this.activeCamera) {\n            this.activeCamera.detachControl();\n        }\n        this.activeCamera = newCamera;\n        if (attachControl) {\n            newCamera.attachControl();\n        }\n    };\n    /**\n     * sets the active camera of the scene using its Id\n     * @param id defines the camera's Id\n     * @return the new active camera or null if none found.\n     */\n    Scene.prototype.setActiveCameraById = function (id) {\n        var camera = this.getCameraById(id);\n        if (camera) {\n            this.activeCamera = camera;\n            return camera;\n        }\n        return null;\n    };\n    /**\n     * sets the active camera of the scene using its name\n     * @param name defines the camera's name\n     * @returns the new active camera or null if none found.\n     */\n    Scene.prototype.setActiveCameraByName = function (name) {\n        var camera = this.getCameraByName(name);\n        if (camera) {\n            this.activeCamera = camera;\n            return camera;\n        }\n        return null;\n    };\n    /**\n     * get an animation group using its name\n     * @param name defines the material's name\n     * @return the animation group or null if none found.\n     */\n    Scene.prototype.getAnimationGroupByName = function (name) {\n        for (var index = 0; index < this.animationGroups.length; index++) {\n            if (this.animationGroups[index].name === name) {\n                return this.animationGroups[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Get a material using its unique id\n     * @param uniqueId defines the material's unique id\n     * @return the material or null if none found.\n     */\n    Scene.prototype.getMaterialByUniqueID = function (uniqueId) {\n        for (var index = 0; index < this.materials.length; index++) {\n            if (this.materials[index].uniqueId === uniqueId) {\n                return this.materials[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * get a material using its id\n     * @param id defines the material's Id\n     * @return the material or null if none found.\n     */\n    Scene.prototype.getMaterialById = function (id) {\n        for (var index = 0; index < this.materials.length; index++) {\n            if (this.materials[index].id === id) {\n                return this.materials[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a the last added material using a given id\n     * @param id defines the material's Id\n     * @param allowMultiMaterials determines whether multimaterials should be considered\n     * @return the last material with the given id or null if none found.\n     */\n    Scene.prototype.getLastMaterialById = function (id, allowMultiMaterials) {\n        if (allowMultiMaterials === void 0) { allowMultiMaterials = false; }\n        for (var index = this.materials.length - 1; index >= 0; index--) {\n            if (this.materials[index].id === id) {\n                return this.materials[index];\n            }\n        }\n        if (allowMultiMaterials) {\n            for (var index = this.multiMaterials.length - 1; index >= 0; index--) {\n                if (this.multiMaterials[index].id === id) {\n                    return this.multiMaterials[index];\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a material using its name\n     * @param name defines the material's name\n     * @return the material or null if none found.\n     */\n    Scene.prototype.getMaterialByName = function (name) {\n        for (var index = 0; index < this.materials.length; index++) {\n            if (this.materials[index].name === name) {\n                return this.materials[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Get a texture using its unique id\n     * @param uniqueId defines the texture's unique id\n     * @return the texture or null if none found.\n     */\n    Scene.prototype.getTextureByUniqueId = function (uniqueId) {\n        for (var index = 0; index < this.textures.length; index++) {\n            if (this.textures[index].uniqueId === uniqueId) {\n                return this.textures[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a texture using its name\n     * @param name defines the texture's name\n     * @return the texture or null if none found.\n     */\n    Scene.prototype.getTextureByName = function (name) {\n        for (var index = 0; index < this.textures.length; index++) {\n            if (this.textures[index].name === name) {\n                return this.textures[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a camera using its Id\n     * @param id defines the Id to look for\n     * @returns the camera or null if not found\n     */\n    Scene.prototype.getCameraById = function (id) {\n        for (var index = 0; index < this.cameras.length; index++) {\n            if (this.cameras[index].id === id) {\n                return this.cameras[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a camera using its unique Id\n     * @param uniqueId defines the unique Id to look for\n     * @returns the camera or null if not found\n     */\n    Scene.prototype.getCameraByUniqueId = function (uniqueId) {\n        for (var index = 0; index < this.cameras.length; index++) {\n            if (this.cameras[index].uniqueId === uniqueId) {\n                return this.cameras[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a camera using its name\n     * @param name defines the camera's name\n     * @return the camera or null if none found.\n     */\n    Scene.prototype.getCameraByName = function (name) {\n        for (var index = 0; index < this.cameras.length; index++) {\n            if (this.cameras[index].name === name) {\n                return this.cameras[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a bone using its Id\n     * @param id defines the bone's Id\n     * @return the bone or null if not found\n     */\n    Scene.prototype.getBoneById = function (id) {\n        for (var skeletonIndex = 0; skeletonIndex < this.skeletons.length; skeletonIndex++) {\n            var skeleton = this.skeletons[skeletonIndex];\n            for (var boneIndex = 0; boneIndex < skeleton.bones.length; boneIndex++) {\n                if (skeleton.bones[boneIndex].id === id) {\n                    return skeleton.bones[boneIndex];\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a bone using its id\n     * @param name defines the bone's name\n     * @return the bone or null if not found\n     */\n    Scene.prototype.getBoneByName = function (name) {\n        for (var skeletonIndex = 0; skeletonIndex < this.skeletons.length; skeletonIndex++) {\n            var skeleton = this.skeletons[skeletonIndex];\n            for (var boneIndex = 0; boneIndex < skeleton.bones.length; boneIndex++) {\n                if (skeleton.bones[boneIndex].name === name) {\n                    return skeleton.bones[boneIndex];\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a light node using its name\n     * @param name defines the the light's name\n     * @return the light or null if none found.\n     */\n    Scene.prototype.getLightByName = function (name) {\n        for (var index = 0; index < this.lights.length; index++) {\n            if (this.lights[index].name === name) {\n                return this.lights[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a light node using its Id\n     * @param id defines the light's Id\n     * @return the light or null if none found.\n     */\n    Scene.prototype.getLightById = function (id) {\n        for (var index = 0; index < this.lights.length; index++) {\n            if (this.lights[index].id === id) {\n                return this.lights[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a light node using its scene-generated unique Id\n     * @param uniqueId defines the light's unique Id\n     * @return the light or null if none found.\n     */\n    Scene.prototype.getLightByUniqueId = function (uniqueId) {\n        for (var index = 0; index < this.lights.length; index++) {\n            if (this.lights[index].uniqueId === uniqueId) {\n                return this.lights[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a particle system by Id\n     * @param id defines the particle system Id\n     * @return the corresponding system or null if none found\n     */\n    Scene.prototype.getParticleSystemById = function (id) {\n        for (var index = 0; index < this.particleSystems.length; index++) {\n            if (this.particleSystems[index].id === id) {\n                return this.particleSystems[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a geometry using its Id\n     * @param id defines the geometry's Id\n     * @return the geometry or null if none found.\n     */\n    Scene.prototype.getGeometryById = function (id) {\n        for (var index = 0; index < this.geometries.length; index++) {\n            if (this.geometries[index].id === id) {\n                return this.geometries[index];\n            }\n        }\n        return null;\n    };\n    Scene.prototype._getGeometryByUniqueId = function (uniqueId) {\n        if (this._geometriesByUniqueId) {\n            var index = this._geometriesByUniqueId[uniqueId];\n            if (index !== undefined) {\n                return this.geometries[index];\n            }\n        }\n        else {\n            for (var index = 0; index < this.geometries.length; index++) {\n                if (this.geometries[index].uniqueId === uniqueId) {\n                    return this.geometries[index];\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * Add a new geometry to this scene\n     * @param geometry defines the geometry to be added to the scene.\n     * @param force defines if the geometry must be pushed even if a geometry with this id already exists\n     * @return a boolean defining if the geometry was added or not\n     */\n    Scene.prototype.pushGeometry = function (geometry, force) {\n        if (!force && this._getGeometryByUniqueId(geometry.uniqueId)) {\n            return false;\n        }\n        this.addGeometry(geometry);\n        this.onNewGeometryAddedObservable.notifyObservers(geometry);\n        return true;\n    };\n    /**\n     * Removes an existing geometry\n     * @param geometry defines the geometry to be removed from the scene\n     * @return a boolean defining if the geometry was removed or not\n     */\n    Scene.prototype.removeGeometry = function (geometry) {\n        var index;\n        if (this._geometriesByUniqueId) {\n            index = this._geometriesByUniqueId[geometry.uniqueId];\n            if (index === undefined) {\n                return false;\n            }\n        }\n        else {\n            index = this.geometries.indexOf(geometry);\n            if (index < 0) {\n                return false;\n            }\n        }\n        if (index !== this.geometries.length - 1) {\n            var lastGeometry = this.geometries[this.geometries.length - 1];\n            if (lastGeometry) {\n                this.geometries[index] = lastGeometry;\n                if (this._geometriesByUniqueId) {\n                    this._geometriesByUniqueId[lastGeometry.uniqueId] = index;\n                    this._geometriesByUniqueId[geometry.uniqueId] = undefined;\n                }\n            }\n        }\n        this.geometries.pop();\n        this.onGeometryRemovedObservable.notifyObservers(geometry);\n        return true;\n    };\n    /**\n     * Gets the list of geometries attached to the scene\n     * @returns an array of Geometry\n     */\n    Scene.prototype.getGeometries = function () {\n        return this.geometries;\n    };\n    /**\n     * Gets the first added mesh found of a given Id\n     * @param id defines the Id to search for\n     * @return the mesh found or null if not found at all\n     */\n    Scene.prototype.getMeshById = function (id) {\n        for (var index = 0; index < this.meshes.length; index++) {\n            if (this.meshes[index].id === id) {\n                return this.meshes[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a list of meshes using their Id\n     * @param id defines the Id to search for\n     * @returns a list of meshes\n     */\n    Scene.prototype.getMeshesById = function (id) {\n        return this.meshes.filter(function (m) {\n            return m.id === id;\n        });\n    };\n    /**\n     * Gets the first added transform node found of a given Id\n     * @param id defines the Id to search for\n     * @return the found transform node or null if not found at all.\n     */\n    Scene.prototype.getTransformNodeById = function (id) {\n        for (var index = 0; index < this.transformNodes.length; index++) {\n            if (this.transformNodes[index].id === id) {\n                return this.transformNodes[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a transform node with its auto-generated unique Id\n     * @param uniqueId defines the unique Id to search for\n     * @return the found transform node or null if not found at all.\n     */\n    Scene.prototype.getTransformNodeByUniqueId = function (uniqueId) {\n        for (var index = 0; index < this.transformNodes.length; index++) {\n            if (this.transformNodes[index].uniqueId === uniqueId) {\n                return this.transformNodes[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a list of transform nodes using their Id\n     * @param id defines the Id to search for\n     * @returns a list of transform nodes\n     */\n    Scene.prototype.getTransformNodesById = function (id) {\n        return this.transformNodes.filter(function (m) {\n            return m.id === id;\n        });\n    };\n    /**\n     * Gets a mesh with its auto-generated unique Id\n     * @param uniqueId defines the unique Id to search for\n     * @return the found mesh or null if not found at all.\n     */\n    Scene.prototype.getMeshByUniqueId = function (uniqueId) {\n        for (var index = 0; index < this.meshes.length; index++) {\n            if (this.meshes[index].uniqueId === uniqueId) {\n                return this.meshes[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a the last added mesh using a given Id\n     * @param id defines the Id to search for\n     * @return the found mesh or null if not found at all.\n     */\n    Scene.prototype.getLastMeshById = function (id) {\n        for (var index = this.meshes.length - 1; index >= 0; index--) {\n            if (this.meshes[index].id === id) {\n                return this.meshes[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a the last added node (Mesh, Camera, Light) using a given Id\n     * @param id defines the Id to search for\n     * @return the found node or null if not found at all\n     */\n    Scene.prototype.getLastEntryById = function (id) {\n        var index;\n        for (index = this.meshes.length - 1; index >= 0; index--) {\n            if (this.meshes[index].id === id) {\n                return this.meshes[index];\n            }\n        }\n        for (index = this.transformNodes.length - 1; index >= 0; index--) {\n            if (this.transformNodes[index].id === id) {\n                return this.transformNodes[index];\n            }\n        }\n        for (index = this.cameras.length - 1; index >= 0; index--) {\n            if (this.cameras[index].id === id) {\n                return this.cameras[index];\n            }\n        }\n        for (index = this.lights.length - 1; index >= 0; index--) {\n            if (this.lights[index].id === id) {\n                return this.lights[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a node (Mesh, Camera, Light) using a given Id\n     * @param id defines the Id to search for\n     * @return the found node or null if not found at all\n     */\n    Scene.prototype.getNodeById = function (id) {\n        var mesh = this.getMeshById(id);\n        if (mesh) {\n            return mesh;\n        }\n        var transformNode = this.getTransformNodeById(id);\n        if (transformNode) {\n            return transformNode;\n        }\n        var light = this.getLightById(id);\n        if (light) {\n            return light;\n        }\n        var camera = this.getCameraById(id);\n        if (camera) {\n            return camera;\n        }\n        var bone = this.getBoneById(id);\n        if (bone) {\n            return bone;\n        }\n        return null;\n    };\n    /**\n     * Gets a node (Mesh, Camera, Light) using a given name\n     * @param name defines the name to search for\n     * @return the found node or null if not found at all.\n     */\n    Scene.prototype.getNodeByName = function (name) {\n        var mesh = this.getMeshByName(name);\n        if (mesh) {\n            return mesh;\n        }\n        var transformNode = this.getTransformNodeByName(name);\n        if (transformNode) {\n            return transformNode;\n        }\n        var light = this.getLightByName(name);\n        if (light) {\n            return light;\n        }\n        var camera = this.getCameraByName(name);\n        if (camera) {\n            return camera;\n        }\n        var bone = this.getBoneByName(name);\n        if (bone) {\n            return bone;\n        }\n        return null;\n    };\n    /**\n     * Gets a mesh using a given name\n     * @param name defines the name to search for\n     * @return the found mesh or null if not found at all.\n     */\n    Scene.prototype.getMeshByName = function (name) {\n        for (var index = 0; index < this.meshes.length; index++) {\n            if (this.meshes[index].name === name) {\n                return this.meshes[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a transform node using a given name\n     * @param name defines the name to search for\n     * @return the found transform node or null if not found at all.\n     */\n    Scene.prototype.getTransformNodeByName = function (name) {\n        for (var index = 0; index < this.transformNodes.length; index++) {\n            if (this.transformNodes[index].name === name) {\n                return this.transformNodes[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a skeleton using a given Id (if many are found, this function will pick the last one)\n     * @param id defines the Id to search for\n     * @return the found skeleton or null if not found at all.\n     */\n    Scene.prototype.getLastSkeletonById = function (id) {\n        for (var index = this.skeletons.length - 1; index >= 0; index--) {\n            if (this.skeletons[index].id === id) {\n                return this.skeletons[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a skeleton using a given auto generated unique id\n     * @param  uniqueId defines the unique id to search for\n     * @return the found skeleton or null if not found at all.\n     */\n    Scene.prototype.getSkeletonByUniqueId = function (uniqueId) {\n        for (var index = 0; index < this.skeletons.length; index++) {\n            if (this.skeletons[index].uniqueId === uniqueId) {\n                return this.skeletons[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a skeleton using a given id (if many are found, this function will pick the first one)\n     * @param id defines the id to search for\n     * @return the found skeleton or null if not found at all.\n     */\n    Scene.prototype.getSkeletonById = function (id) {\n        for (var index = 0; index < this.skeletons.length; index++) {\n            if (this.skeletons[index].id === id) {\n                return this.skeletons[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a skeleton using a given name\n     * @param name defines the name to search for\n     * @return the found skeleton or null if not found at all.\n     */\n    Scene.prototype.getSkeletonByName = function (name) {\n        for (var index = 0; index < this.skeletons.length; index++) {\n            if (this.skeletons[index].name === name) {\n                return this.skeletons[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a morph target manager  using a given id (if many are found, this function will pick the last one)\n     * @param id defines the id to search for\n     * @return the found morph target manager or null if not found at all.\n     */\n    Scene.prototype.getMorphTargetManagerById = function (id) {\n        for (var index = 0; index < this.morphTargetManagers.length; index++) {\n            if (this.morphTargetManagers[index].uniqueId === id) {\n                return this.morphTargetManagers[index];\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a morph target using a given id (if many are found, this function will pick the first one)\n     * @param id defines the id to search for\n     * @return the found morph target or null if not found at all.\n     */\n    Scene.prototype.getMorphTargetById = function (id) {\n        for (var managerIndex = 0; managerIndex < this.morphTargetManagers.length; ++managerIndex) {\n            var morphTargetManager = this.morphTargetManagers[managerIndex];\n            for (var index = 0; index < morphTargetManager.numTargets; ++index) {\n                var target = morphTargetManager.getTarget(index);\n                if (target.id === id) {\n                    return target;\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a morph target using a given name (if many are found, this function will pick the first one)\n     * @param name defines the name to search for\n     * @return the found morph target or null if not found at all.\n     */\n    Scene.prototype.getMorphTargetByName = function (name) {\n        for (var managerIndex = 0; managerIndex < this.morphTargetManagers.length; ++managerIndex) {\n            var morphTargetManager = this.morphTargetManagers[managerIndex];\n            for (var index = 0; index < morphTargetManager.numTargets; ++index) {\n                var target = morphTargetManager.getTarget(index);\n                if (target.name === name) {\n                    return target;\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a post process using a given name (if many are found, this function will pick the first one)\n     * @param name defines the name to search for\n     * @return the found post process or null if not found at all.\n     */\n    Scene.prototype.getPostProcessByName = function (name) {\n        for (var postProcessIndex = 0; postProcessIndex < this.postProcesses.length; ++postProcessIndex) {\n            var postProcess = this.postProcesses[postProcessIndex];\n            if (postProcess.name === name) {\n                return postProcess;\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a boolean indicating if the given mesh is active\n     * @param mesh defines the mesh to look for\n     * @returns true if the mesh is in the active list\n     */\n    Scene.prototype.isActiveMesh = function (mesh) {\n        return this._activeMeshes.indexOf(mesh) !== -1;\n    };\n    Object.defineProperty(Scene.prototype, \"uid\", {\n        /**\n         * Return a unique id as a string which can serve as an identifier for the scene\n         */\n        get: function () {\n            if (!this._uid) {\n                this._uid = Tools.RandomId();\n            }\n            return this._uid;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Add an externally attached data from its key.\n     * This method call will fail and return false, if such key already exists.\n     * If you don't care and just want to get the data no matter what, use the more convenient getOrAddExternalDataWithFactory() method.\n     * @param key the unique key that identifies the data\n     * @param data the data object to associate to the key for this Engine instance\n     * @return true if no such key were already present and the data was added successfully, false otherwise\n     */\n    Scene.prototype.addExternalData = function (key, data) {\n        if (!this._externalData) {\n            this._externalData = new StringDictionary();\n        }\n        return this._externalData.add(key, data);\n    };\n    /**\n     * Get an externally attached data from its key\n     * @param key the unique key that identifies the data\n     * @return the associated data, if present (can be null), or undefined if not present\n     */\n    Scene.prototype.getExternalData = function (key) {\n        if (!this._externalData) {\n            return null;\n        }\n        return this._externalData.get(key);\n    };\n    /**\n     * Get an externally attached data from its key, create it using a factory if it's not already present\n     * @param key the unique key that identifies the data\n     * @param factory the factory that will be called to create the instance if and only if it doesn't exists\n     * @return the associated data, can be null if the factory returned null.\n     */\n    Scene.prototype.getOrAddExternalDataWithFactory = function (key, factory) {\n        if (!this._externalData) {\n            this._externalData = new StringDictionary();\n        }\n        return this._externalData.getOrAddWithFactory(key, factory);\n    };\n    /**\n     * Remove an externally attached data from the Engine instance\n     * @param key the unique key that identifies the data\n     * @return true if the data was successfully removed, false if it doesn't exist\n     */\n    Scene.prototype.removeExternalData = function (key) {\n        return this._externalData.remove(key);\n    };\n    Scene.prototype._evaluateSubMesh = function (subMesh, mesh, initialMesh) {\n        if (initialMesh.hasInstances ||\n            initialMesh.isAnInstance ||\n            this.dispatchAllSubMeshesOfActiveMeshes ||\n            this._skipFrustumClipping ||\n            mesh.alwaysSelectAsActiveMesh ||\n            mesh.subMeshes.length === 1 ||\n            subMesh.isInFrustum(this._frustumPlanes)) {\n            for (var _i = 0, _a = this._evaluateSubMeshStage; _i < _a.length; _i++) {\n                var step = _a[_i];\n                step.action(mesh, subMesh);\n            }\n            var material = subMesh.getMaterial();\n            if (material !== null && material !== undefined) {\n                // Render targets\n                if (material.hasRenderTargetTextures && material.getRenderTargetTextures != null) {\n                    if (this._processedMaterials.indexOf(material) === -1) {\n                        this._processedMaterials.push(material);\n                        this._materialsRenderTargets.concatWithNoDuplicate(material.getRenderTargetTextures());\n                    }\n                }\n                // Dispatch\n                this._renderingManager.dispatch(subMesh, mesh, material);\n            }\n        }\n    };\n    /**\n     * Clear the processed materials smart array preventing retention point in material dispose.\n     */\n    Scene.prototype.freeProcessedMaterials = function () {\n        this._processedMaterials.dispose();\n    };\n    Object.defineProperty(Scene.prototype, \"blockfreeActiveMeshesAndRenderingGroups\", {\n        /** Gets or sets a boolean blocking all the calls to freeActiveMeshes and freeRenderingGroups\n         * It can be used in order to prevent going through methods freeRenderingGroups and freeActiveMeshes several times to improve performance\n         * when disposing several meshes in a row or a hierarchy of meshes.\n         * When used, it is the responsibility of the user to blockfreeActiveMeshesAndRenderingGroups back to false.\n         */\n        get: function () {\n            return this._preventFreeActiveMeshesAndRenderingGroups;\n        },\n        set: function (value) {\n            if (this._preventFreeActiveMeshesAndRenderingGroups === value) {\n                return;\n            }\n            if (value) {\n                this.freeActiveMeshes();\n                this.freeRenderingGroups();\n            }\n            this._preventFreeActiveMeshesAndRenderingGroups = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Clear the active meshes smart array preventing retention point in mesh dispose.\n     */\n    Scene.prototype.freeActiveMeshes = function () {\n        if (this.blockfreeActiveMeshesAndRenderingGroups) {\n            return;\n        }\n        this._activeMeshes.dispose();\n        if (this.activeCamera && this.activeCamera._activeMeshes) {\n            this.activeCamera._activeMeshes.dispose();\n        }\n        if (this.activeCameras) {\n            for (var i = 0; i < this.activeCameras.length; i++) {\n                var activeCamera = this.activeCameras[i];\n                if (activeCamera && activeCamera._activeMeshes) {\n                    activeCamera._activeMeshes.dispose();\n                }\n            }\n        }\n    };\n    /**\n     * Clear the info related to rendering groups preventing retention points during dispose.\n     */\n    Scene.prototype.freeRenderingGroups = function () {\n        if (this.blockfreeActiveMeshesAndRenderingGroups) {\n            return;\n        }\n        if (this._renderingManager) {\n            this._renderingManager.freeRenderingGroups();\n        }\n        if (this.textures) {\n            for (var i = 0; i < this.textures.length; i++) {\n                var texture = this.textures[i];\n                if (texture && texture.renderList) {\n                    texture.freeRenderingGroups();\n                }\n            }\n        }\n    };\n    /** @hidden */\n    Scene.prototype._isInIntermediateRendering = function () {\n        return this._intermediateRendering;\n    };\n    /**\n     * Use this function to stop evaluating active meshes. The current list will be keep alive between frames\n     * @param skipEvaluateActiveMeshes defines an optional boolean indicating that the evaluate active meshes step must be completely skipped\n     * @param onSuccess optional success callback\n     * @param onError optional error callback\n     * @param freezeMeshes defines if meshes should be frozen (true by default)\n     * @param keepFrustumCulling defines if you want to keep running the frustum clipping (false by default)\n     * @returns the current scene\n     */\n    Scene.prototype.freezeActiveMeshes = function (skipEvaluateActiveMeshes, onSuccess, onError, freezeMeshes, keepFrustumCulling) {\n        var _this = this;\n        if (skipEvaluateActiveMeshes === void 0) { skipEvaluateActiveMeshes = false; }\n        if (freezeMeshes === void 0) { freezeMeshes = true; }\n        if (keepFrustumCulling === void 0) { keepFrustumCulling = false; }\n        this.executeWhenReady(function () {\n            if (!_this.activeCamera) {\n                onError && onError(\"No active camera found\");\n                return;\n            }\n            if (!_this._frustumPlanes) {\n                _this.updateTransformMatrix();\n            }\n            _this._evaluateActiveMeshes();\n            _this._activeMeshesFrozen = true;\n            _this._activeMeshesFrozenButKeepClipping = keepFrustumCulling;\n            _this._skipEvaluateActiveMeshesCompletely = skipEvaluateActiveMeshes;\n            if (freezeMeshes) {\n                for (var index = 0; index < _this._activeMeshes.length; index++) {\n                    _this._activeMeshes.data[index]._freeze();\n                }\n            }\n            onSuccess && onSuccess();\n        });\n        return this;\n    };\n    /**\n     * Use this function to restart evaluating active meshes on every frame\n     * @returns the current scene\n     */\n    Scene.prototype.unfreezeActiveMeshes = function () {\n        for (var index = 0; index < this.meshes.length; index++) {\n            var mesh = this.meshes[index];\n            if (mesh._internalAbstractMeshDataInfo) {\n                mesh._internalAbstractMeshDataInfo._isActive = false;\n            }\n        }\n        for (var index = 0; index < this._activeMeshes.length; index++) {\n            this._activeMeshes.data[index]._unFreeze();\n        }\n        this._activeMeshesFrozen = false;\n        return this;\n    };\n    Scene.prototype._executeActiveContainerCleanup = function (container) {\n        var isInFastMode = this._engine.snapshotRendering && this._engine.snapshotRenderingMode === 1;\n        if (!isInFastMode && this._activeMeshesFrozen && this._activeMeshes.length) {\n            return; // Do not execute in frozen mode\n        }\n        // We need to ensure we are not in the rendering loop\n        this.onBeforeRenderObservable.addOnce(function () { return container.dispose(); });\n    };\n    Scene.prototype._evaluateActiveMeshes = function () {\n        var _a;\n        if (this._engine.snapshotRendering && this._engine.snapshotRenderingMode === 1) {\n            if (this._activeMeshes.length > 0) {\n                (_a = this.activeCamera) === null || _a === void 0 ? void 0 : _a._activeMeshes.reset();\n                this._activeMeshes.reset();\n                this._renderingManager.reset();\n                this._processedMaterials.reset();\n                this._activeParticleSystems.reset();\n                this._activeSkeletons.reset();\n                this._softwareSkinnedMeshes.reset();\n            }\n            return;\n        }\n        if (this._activeMeshesFrozen && this._activeMeshes.length) {\n            if (!this._skipEvaluateActiveMeshesCompletely) {\n                var len_1 = this._activeMeshes.length;\n                for (var i = 0; i < len_1; i++) {\n                    var mesh = this._activeMeshes.data[i];\n                    mesh.computeWorldMatrix();\n                }\n            }\n            if (this._activeParticleSystems) {\n                var psLength = this._activeParticleSystems.length;\n                for (var i = 0; i < psLength; i++) {\n                    this._activeParticleSystems.data[i].animate();\n                }\n            }\n            return;\n        }\n        if (!this.activeCamera) {\n            return;\n        }\n        this.onBeforeActiveMeshesEvaluationObservable.notifyObservers(this);\n        this.activeCamera._activeMeshes.reset();\n        this._activeMeshes.reset();\n        this._renderingManager.reset();\n        this._processedMaterials.reset();\n        this._activeParticleSystems.reset();\n        this._activeSkeletons.reset();\n        this._softwareSkinnedMeshes.reset();\n        this._materialsRenderTargets.reset();\n        for (var _i = 0, _b = this._beforeEvaluateActiveMeshStage; _i < _b.length; _i++) {\n            var step = _b[_i];\n            step.action();\n        }\n        // Determine mesh candidates\n        var meshes = this.getActiveMeshCandidates();\n        // Check each mesh\n        var len = meshes.length;\n        for (var i = 0; i < len; i++) {\n            var mesh = meshes.data[i];\n            mesh._internalAbstractMeshDataInfo._currentLODIsUpToDate = false;\n            if (mesh.isBlocked) {\n                continue;\n            }\n            this._totalVertices.addCount(mesh.getTotalVertices(), false);\n            if (!mesh.isReady() || !mesh.isEnabled() || mesh.scaling.hasAZeroComponent) {\n                continue;\n            }\n            mesh.computeWorldMatrix();\n            // Intersections\n            if (mesh.actionManager && mesh.actionManager.hasSpecificTriggers2(12, 13)) {\n                this._meshesForIntersections.pushNoDuplicate(mesh);\n            }\n            // Switch to current LOD\n            var meshToRender = this.customLODSelector ? this.customLODSelector(mesh, this.activeCamera) : mesh.getLOD(this.activeCamera);\n            mesh._internalAbstractMeshDataInfo._currentLOD = meshToRender;\n            mesh._internalAbstractMeshDataInfo._currentLODIsUpToDate = true;\n            if (meshToRender === undefined || meshToRender === null) {\n                continue;\n            }\n            // Compute world matrix if LOD is billboard\n            if (meshToRender !== mesh && meshToRender.billboardMode !== 0) {\n                meshToRender.computeWorldMatrix();\n            }\n            mesh._preActivate();\n            if (mesh.isVisible &&\n                mesh.visibility > 0 &&\n                (mesh.layerMask & this.activeCamera.layerMask) !== 0 &&\n                (this._skipFrustumClipping || mesh.alwaysSelectAsActiveMesh || mesh.isInFrustum(this._frustumPlanes))) {\n                this._activeMeshes.push(mesh);\n                this.activeCamera._activeMeshes.push(mesh);\n                if (meshToRender !== mesh) {\n                    meshToRender._activate(this._renderId, false);\n                }\n                for (var _c = 0, _d = this._preActiveMeshStage; _c < _d.length; _c++) {\n                    var step = _d[_c];\n                    step.action(mesh);\n                }\n                if (mesh._activate(this._renderId, false)) {\n                    if (!mesh.isAnInstance) {\n                        meshToRender._internalAbstractMeshDataInfo._onlyForInstances = false;\n                    }\n                    else {\n                        if (mesh._internalAbstractMeshDataInfo._actAsRegularMesh) {\n                            meshToRender = mesh;\n                        }\n                    }\n                    meshToRender._internalAbstractMeshDataInfo._isActive = true;\n                    this._activeMesh(mesh, meshToRender);\n                }\n                mesh._postActivate();\n            }\n        }\n        this.onAfterActiveMeshesEvaluationObservable.notifyObservers(this);\n        // Particle systems\n        if (this.particlesEnabled) {\n            this.onBeforeParticlesRenderingObservable.notifyObservers(this);\n            for (var particleIndex = 0; particleIndex < this.particleSystems.length; particleIndex++) {\n                var particleSystem = this.particleSystems[particleIndex];\n                if (!particleSystem.isStarted() || !particleSystem.emitter) {\n                    continue;\n                }\n                var emitter = particleSystem.emitter;\n                if (!emitter.position || emitter.isEnabled()) {\n                    this._activeParticleSystems.push(particleSystem);\n                    particleSystem.animate();\n                    this._renderingManager.dispatchParticles(particleSystem);\n                }\n            }\n            this.onAfterParticlesRenderingObservable.notifyObservers(this);\n        }\n    };\n    Scene.prototype._activeMesh = function (sourceMesh, mesh) {\n        if (this._skeletonsEnabled && mesh.skeleton !== null && mesh.skeleton !== undefined) {\n            if (this._activeSkeletons.pushNoDuplicate(mesh.skeleton)) {\n                mesh.skeleton.prepare();\n                this._activeBones.addCount(mesh.skeleton.bones.length, false);\n            }\n            if (!mesh.computeBonesUsingShaders) {\n                this._softwareSkinnedMeshes.pushNoDuplicate(mesh);\n            }\n        }\n        if (mesh && mesh.subMeshes && mesh.subMeshes.length > 0) {\n            var subMeshes = this.getActiveSubMeshCandidates(mesh);\n            var len = subMeshes.length;\n            for (var i = 0; i < len; i++) {\n                var subMesh = subMeshes.data[i];\n                this._evaluateSubMesh(subMesh, mesh, sourceMesh);\n            }\n        }\n    };\n    /**\n     * Update the transform matrix to update from the current active camera\n     * @param force defines a boolean used to force the update even if cache is up to date\n     */\n    Scene.prototype.updateTransformMatrix = function (force) {\n        if (!this.activeCamera) {\n            return;\n        }\n        if (this.activeCamera._renderingMultiview) {\n            var leftCamera = this.activeCamera._rigCameras[0];\n            var rightCamera = this.activeCamera._rigCameras[1];\n            this.setTransformMatrix(leftCamera.getViewMatrix(), leftCamera.getProjectionMatrix(force), rightCamera.getViewMatrix(), rightCamera.getProjectionMatrix(force));\n        }\n        else {\n            this.setTransformMatrix(this.activeCamera.getViewMatrix(), this.activeCamera.getProjectionMatrix(force));\n        }\n    };\n    Scene.prototype._bindFrameBuffer = function (camera, clear) {\n        if (clear === void 0) { clear = true; }\n        if (camera && camera._multiviewTexture) {\n            camera._multiviewTexture._bindFrameBuffer();\n        }\n        else if (camera && camera.outputRenderTarget) {\n            camera.outputRenderTarget._bindFrameBuffer();\n        }\n        else {\n            if (!this._engine._currentFrameBufferIsDefaultFrameBuffer()) {\n                this._engine.restoreDefaultFramebuffer();\n            }\n        }\n        if (clear) {\n            this._clearFrameBuffer(camera);\n        }\n    };\n    Scene.prototype._clearFrameBuffer = function (camera) {\n        // we assume the framebuffer currently bound is the right one\n        if (camera && camera._multiviewTexture) {\n            // no clearing?\n        }\n        else if (camera && camera.outputRenderTarget) {\n            var rtt = camera.outputRenderTarget;\n            if (rtt.onClearObservable.hasObservers()) {\n                rtt.onClearObservable.notifyObservers(this._engine);\n            }\n            else if (!rtt.skipInitialClear) {\n                this._engine.clear(rtt.clearColor || this.clearColor, !rtt._cleared, true, true);\n                rtt._cleared = true;\n            }\n        }\n        else {\n            if (!this._defaultFrameBufferCleared) {\n                this._defaultFrameBufferCleared = true;\n                this._clear();\n            }\n            else {\n                this._engine.clear(null, false, true, true);\n            }\n        }\n    };\n    /**\n     * @param camera\n     * @param rigParent\n     * @param bindFrameBuffer\n     * @hidden\n     */\n    Scene.prototype._renderForCamera = function (camera, rigParent, bindFrameBuffer) {\n        var _a, _b, _c;\n        if (bindFrameBuffer === void 0) { bindFrameBuffer = true; }\n        if (camera && camera._skipRendering) {\n            return;\n        }\n        var engine = this._engine;\n        // Use _activeCamera instead of activeCamera to avoid onActiveCameraChanged\n        this._activeCamera = camera;\n        if (!this.activeCamera) {\n            throw new Error(\"Active camera not set\");\n        }\n        // Viewport\n        engine.setViewport(this.activeCamera.viewport);\n        // Camera\n        this.resetCachedMaterial();\n        this._renderId++;\n        if (!this.prePass && bindFrameBuffer) {\n            var skipInitialClear = true;\n            if (camera._renderingMultiview && camera.outputRenderTarget) {\n                skipInitialClear = camera.outputRenderTarget.skipInitialClear;\n                if (this.autoClear) {\n                    camera.outputRenderTarget.skipInitialClear = false;\n                }\n            }\n            this._bindFrameBuffer(this._activeCamera);\n            if (camera._renderingMultiview && camera.outputRenderTarget) {\n                camera.outputRenderTarget.skipInitialClear = skipInitialClear;\n            }\n        }\n        this.updateTransformMatrix();\n        this.onBeforeCameraRenderObservable.notifyObservers(this.activeCamera);\n        // Meshes\n        this._evaluateActiveMeshes();\n        // Software skinning\n        for (var softwareSkinnedMeshIndex = 0; softwareSkinnedMeshIndex < this._softwareSkinnedMeshes.length; softwareSkinnedMeshIndex++) {\n            var mesh = this._softwareSkinnedMeshes.data[softwareSkinnedMeshIndex];\n            mesh.applySkeleton(mesh.skeleton);\n        }\n        // Render targets\n        this.onBeforeRenderTargetsRenderObservable.notifyObservers(this);\n        this._renderTargets.concatWithNoDuplicate(this._materialsRenderTargets);\n        if (camera.customRenderTargets && camera.customRenderTargets.length > 0) {\n            this._renderTargets.concatWithNoDuplicate(camera.customRenderTargets);\n        }\n        if (rigParent && rigParent.customRenderTargets && rigParent.customRenderTargets.length > 0) {\n            this._renderTargets.concatWithNoDuplicate(rigParent.customRenderTargets);\n        }\n        if (this.environmentTexture && this.environmentTexture.isRenderTarget) {\n            this._renderTargets.pushNoDuplicate(this.environmentTexture);\n        }\n        // Collects render targets from external components.\n        for (var _i = 0, _d = this._gatherActiveCameraRenderTargetsStage; _i < _d.length; _i++) {\n            var step = _d[_i];\n            step.action(this._renderTargets);\n        }\n        var needRebind = false;\n        if (this.renderTargetsEnabled) {\n            this._intermediateRendering = true;\n            if (this._renderTargets.length > 0) {\n                Tools.StartPerformanceCounter(\"Render targets\", this._renderTargets.length > 0);\n                for (var renderIndex = 0; renderIndex < this._renderTargets.length; renderIndex++) {\n                    var renderTarget = this._renderTargets.data[renderIndex];\n                    if (renderTarget._shouldRender()) {\n                        this._renderId++;\n                        var hasSpecialRenderTargetCamera = renderTarget.activeCamera && renderTarget.activeCamera !== this.activeCamera;\n                        renderTarget.render(hasSpecialRenderTargetCamera, this.dumpNextRenderTargets);\n                        needRebind = true;\n                    }\n                }\n                Tools.EndPerformanceCounter(\"Render targets\", this._renderTargets.length > 0);\n                this._renderId++;\n            }\n            for (var _e = 0, _f = this._cameraDrawRenderTargetStage; _e < _f.length; _e++) {\n                var step = _f[_e];\n                needRebind = step.action(this.activeCamera) || needRebind;\n            }\n            this._intermediateRendering = false;\n        }\n        this._engine.currentRenderPassId = (_c = (_b = (_a = camera.outputRenderTarget) === null || _a === void 0 ? void 0 : _a.renderPassId) !== null && _b !== void 0 ? _b : camera.renderPassId) !== null && _c !== void 0 ? _c : 0;\n        // Restore framebuffer after rendering to targets\n        if (needRebind && !this.prePass) {\n            this._bindFrameBuffer(this._activeCamera, false);\n        }\n        this.onAfterRenderTargetsRenderObservable.notifyObservers(this);\n        // Prepare Frame\n        if (this.postProcessManager && !camera._multiviewTexture && !this.prePass) {\n            this.postProcessManager._prepareFrame();\n        }\n        // Before Camera Draw\n        for (var _g = 0, _h = this._beforeCameraDrawStage; _g < _h.length; _g++) {\n            var step = _h[_g];\n            step.action(this.activeCamera);\n        }\n        // Render\n        this.onBeforeDrawPhaseObservable.notifyObservers(this);\n        if (engine.snapshotRendering && engine.snapshotRenderingMode === 1) {\n            this.finalizeSceneUbo();\n        }\n        this._renderingManager.render(null, null, true, true);\n        this.onAfterDrawPhaseObservable.notifyObservers(this);\n        // After Camera Draw\n        for (var _j = 0, _k = this._afterCameraDrawStage; _j < _k.length; _j++) {\n            var step = _k[_j];\n            step.action(this.activeCamera);\n        }\n        // Finalize frame\n        if (this.postProcessManager && !camera._multiviewTexture) {\n            // if the camera has an output render target, render the post process to the render target\n            var texture = camera.outputRenderTarget ? camera.outputRenderTarget.renderTarget : undefined;\n            this.postProcessManager._finalizeFrame(camera.isIntermediate, texture);\n        }\n        // Reset some special arrays\n        this._renderTargets.reset();\n        this.onAfterCameraRenderObservable.notifyObservers(this.activeCamera);\n    };\n    Scene.prototype._processSubCameras = function (camera, bindFrameBuffer) {\n        if (bindFrameBuffer === void 0) { bindFrameBuffer = true; }\n        if (camera.cameraRigMode === 0 || camera._renderingMultiview) {\n            if (camera._renderingMultiview && !this._multiviewSceneUbo) {\n                this._createMultiviewUbo();\n            }\n            this._renderForCamera(camera, undefined, bindFrameBuffer);\n            this.onAfterRenderCameraObservable.notifyObservers(camera);\n            return;\n        }\n        if (camera._useMultiviewToSingleView) {\n            this._renderMultiviewToSingleView(camera);\n        }\n        else {\n            // rig cameras\n            this.onBeforeCameraRenderObservable.notifyObservers(camera);\n            for (var index = 0; index < camera._rigCameras.length; index++) {\n                this._renderForCamera(camera._rigCameras[index], camera);\n            }\n        }\n        // Use _activeCamera instead of activeCamera to avoid onActiveCameraChanged\n        this._activeCamera = camera;\n        this.updateTransformMatrix();\n        this.onAfterRenderCameraObservable.notifyObservers(camera);\n    };\n    Scene.prototype._checkIntersections = function () {\n        for (var index = 0; index < this._meshesForIntersections.length; index++) {\n            var sourceMesh = this._meshesForIntersections.data[index];\n            if (!sourceMesh.actionManager) {\n                continue;\n            }\n            var _loop_1 = function (actionIndex) {\n                var action = sourceMesh.actionManager.actions[actionIndex];\n                if (action.trigger === 12 || action.trigger === 13) {\n                    var parameters = action.getTriggerParameter();\n                    var otherMesh_1 = parameters.mesh ? parameters.mesh : parameters;\n                    var areIntersecting = otherMesh_1.intersectsMesh(sourceMesh, parameters.usePreciseIntersection);\n                    var currentIntersectionInProgress = sourceMesh._intersectionsInProgress.indexOf(otherMesh_1);\n                    if (areIntersecting && currentIntersectionInProgress === -1) {\n                        if (action.trigger === 12) {\n                            action._executeCurrent(ActionEvent.CreateNew(sourceMesh, undefined, otherMesh_1));\n                            sourceMesh._intersectionsInProgress.push(otherMesh_1);\n                        }\n                        else if (action.trigger === 13) {\n                            sourceMesh._intersectionsInProgress.push(otherMesh_1);\n                        }\n                    }\n                    else if (!areIntersecting && currentIntersectionInProgress > -1) {\n                        //They intersected, and now they don't.\n                        //is this trigger an exit trigger? execute an event.\n                        if (action.trigger === 13) {\n                            action._executeCurrent(ActionEvent.CreateNew(sourceMesh, undefined, otherMesh_1));\n                        }\n                        //if this is an exit trigger, or no exit trigger exists, remove the id from the intersection in progress array.\n                        if (!sourceMesh.actionManager.hasSpecificTrigger(13, function (parameter) {\n                            var parameterMesh = parameter.mesh ? parameter.mesh : parameter;\n                            return otherMesh_1 === parameterMesh;\n                        }) ||\n                            action.trigger === 13) {\n                            sourceMesh._intersectionsInProgress.splice(currentIntersectionInProgress, 1);\n                        }\n                    }\n                }\n            };\n            for (var actionIndex = 0; sourceMesh.actionManager && actionIndex < sourceMesh.actionManager.actions.length; actionIndex++) {\n                _loop_1(actionIndex);\n            }\n        }\n    };\n    /**\n     * @param step\n     * @hidden\n     */\n    Scene.prototype._advancePhysicsEngineStep = function (step) {\n        // Do nothing. Code will be replaced if physics engine component is referenced\n    };\n    /** @hidden */\n    Scene.prototype._animate = function () {\n        // Nothing to do as long as Animatable have not been imported.\n    };\n    /** Execute all animations (for a frame) */\n    Scene.prototype.animate = function () {\n        if (this._engine.isDeterministicLockStep()) {\n            var deltaTime = Math.max(Scene.MinDeltaTime, Math.min(this._engine.getDeltaTime(), Scene.MaxDeltaTime)) + this._timeAccumulator;\n            var defaultFrameTime = this._engine.getTimeStep();\n            var defaultFPS = 1000.0 / defaultFrameTime / 1000.0;\n            var stepsTaken = 0;\n            var maxSubSteps = this._engine.getLockstepMaxSteps();\n            var internalSteps = Math.floor(deltaTime / defaultFrameTime);\n            internalSteps = Math.min(internalSteps, maxSubSteps);\n            while (deltaTime > 0 && stepsTaken < internalSteps) {\n                this.onBeforeStepObservable.notifyObservers(this);\n                // Animations\n                this._animationRatio = defaultFrameTime * defaultFPS;\n                this._animate();\n                this.onAfterAnimationsObservable.notifyObservers(this);\n                // Physics\n                if (this.physicsEnabled) {\n                    this._advancePhysicsEngineStep(defaultFrameTime);\n                }\n                this.onAfterStepObservable.notifyObservers(this);\n                this._currentStepId++;\n                stepsTaken++;\n                deltaTime -= defaultFrameTime;\n            }\n            this._timeAccumulator = deltaTime < 0 ? 0 : deltaTime;\n        }\n        else {\n            // Animations\n            var deltaTime = this.useConstantAnimationDeltaTime ? 16 : Math.max(Scene.MinDeltaTime, Math.min(this._engine.getDeltaTime(), Scene.MaxDeltaTime));\n            this._animationRatio = deltaTime * (60.0 / 1000.0);\n            this._animate();\n            this.onAfterAnimationsObservable.notifyObservers(this);\n            // Physics\n            if (this.physicsEnabled) {\n                this._advancePhysicsEngineStep(deltaTime);\n            }\n        }\n    };\n    Scene.prototype._clear = function () {\n        if (this.autoClearDepthAndStencil || this.autoClear) {\n            this._engine.clear(this.clearColor, this.autoClear || this.forceWireframe || this.forcePointsCloud, this.autoClearDepthAndStencil, this.autoClearDepthAndStencil);\n        }\n    };\n    Scene.prototype._checkCameraRenderTarget = function (camera) {\n        var _a;\n        if ((camera === null || camera === void 0 ? void 0 : camera.outputRenderTarget) && !(camera === null || camera === void 0 ? void 0 : camera.isRigCamera)) {\n            camera.outputRenderTarget._cleared = false;\n        }\n        if ((_a = camera === null || camera === void 0 ? void 0 : camera.rigCameras) === null || _a === void 0 ? void 0 : _a.length) {\n            for (var i = 0; i < camera.rigCameras.length; ++i) {\n                var rtt = camera.rigCameras[i].outputRenderTarget;\n                if (rtt) {\n                    rtt._cleared = false;\n                }\n            }\n        }\n    };\n    /**\n     * Resets the draw wrappers cache of all meshes\n     * @param passId If provided, releases only the draw wrapper corresponding to this render pass id\n     */\n    Scene.prototype.resetDrawCache = function (passId) {\n        if (!this.meshes) {\n            return;\n        }\n        for (var _i = 0, _a = this.meshes; _i < _a.length; _i++) {\n            var mesh = _a[_i];\n            mesh.resetDrawCache(passId);\n        }\n    };\n    /**\n     * Render the scene\n     * @param updateCameras defines a boolean indicating if cameras must update according to their inputs (true by default)\n     * @param ignoreAnimations defines a boolean indicating if animations should not be executed (false by default)\n     */\n    Scene.prototype.render = function (updateCameras, ignoreAnimations) {\n        var _a, _b, _c;\n        if (updateCameras === void 0) { updateCameras = true; }\n        if (ignoreAnimations === void 0) { ignoreAnimations = false; }\n        if (this.isDisposed) {\n            return;\n        }\n        if (this.onReadyObservable.hasObservers() && this._executeWhenReadyTimeoutId === null) {\n            this._checkIsReady();\n        }\n        this._frameId++;\n        this._defaultFrameBufferCleared = false;\n        this._checkCameraRenderTarget(this.activeCamera);\n        if ((_a = this.activeCameras) === null || _a === void 0 ? void 0 : _a.length) {\n            this.activeCameras.forEach(this._checkCameraRenderTarget);\n        }\n        // Register components that have been associated lately to the scene.\n        this._registerTransientComponents();\n        this._activeParticles.fetchNewFrame();\n        this._totalVertices.fetchNewFrame();\n        this._activeIndices.fetchNewFrame();\n        this._activeBones.fetchNewFrame();\n        this._meshesForIntersections.reset();\n        this.resetCachedMaterial();\n        this.onBeforeAnimationsObservable.notifyObservers(this);\n        // Actions\n        if (this.actionManager) {\n            this.actionManager.processTrigger(11);\n        }\n        // Animations\n        if (!ignoreAnimations) {\n            this.animate();\n        }\n        // Before camera update steps\n        for (var _i = 0, _d = this._beforeCameraUpdateStage; _i < _d.length; _i++) {\n            var step = _d[_i];\n            step.action();\n        }\n        // Update Cameras\n        if (updateCameras) {\n            if (this.activeCameras && this.activeCameras.length > 0) {\n                for (var cameraIndex = 0; cameraIndex < this.activeCameras.length; cameraIndex++) {\n                    var camera = this.activeCameras[cameraIndex];\n                    camera.update();\n                    if (camera.cameraRigMode !== 0) {\n                        // rig cameras\n                        for (var index = 0; index < camera._rigCameras.length; index++) {\n                            camera._rigCameras[index].update();\n                        }\n                    }\n                }\n            }\n            else if (this.activeCamera) {\n                this.activeCamera.update();\n                if (this.activeCamera.cameraRigMode !== 0) {\n                    // rig cameras\n                    for (var index = 0; index < this.activeCamera._rigCameras.length; index++) {\n                        this.activeCamera._rigCameras[index].update();\n                    }\n                }\n            }\n        }\n        // Before render\n        this.onBeforeRenderObservable.notifyObservers(this);\n        var engine = this.getEngine();\n        // Customs render targets\n        this.onBeforeRenderTargetsRenderObservable.notifyObservers(this);\n        var currentActiveCamera = ((_b = this.activeCameras) === null || _b === void 0 ? void 0 : _b.length) ? this.activeCameras[0] : this.activeCamera;\n        if (this.renderTargetsEnabled) {\n            Tools.StartPerformanceCounter(\"Custom render targets\", this.customRenderTargets.length > 0);\n            this._intermediateRendering = true;\n            for (var customIndex = 0; customIndex < this.customRenderTargets.length; customIndex++) {\n                var renderTarget = this.customRenderTargets[customIndex];\n                if (renderTarget._shouldRender()) {\n                    this._renderId++;\n                    this.activeCamera = renderTarget.activeCamera || this.activeCamera;\n                    if (!this.activeCamera) {\n                        throw new Error(\"Active camera not set\");\n                    }\n                    // Viewport\n                    engine.setViewport(this.activeCamera.viewport);\n                    // Camera\n                    this.updateTransformMatrix();\n                    renderTarget.render(currentActiveCamera !== this.activeCamera, this.dumpNextRenderTargets);\n                }\n            }\n            Tools.EndPerformanceCounter(\"Custom render targets\", this.customRenderTargets.length > 0);\n            this._intermediateRendering = false;\n            this._renderId++;\n        }\n        this._engine.currentRenderPassId = (_c = currentActiveCamera === null || currentActiveCamera === void 0 ? void 0 : currentActiveCamera.renderPassId) !== null && _c !== void 0 ? _c : 0;\n        // Restore back buffer\n        this.activeCamera = currentActiveCamera;\n        if (this._activeCamera && this._activeCamera.cameraRigMode !== 22 && !this.prePass) {\n            this._bindFrameBuffer(this._activeCamera, false);\n        }\n        this.onAfterRenderTargetsRenderObservable.notifyObservers(this);\n        for (var _e = 0, _f = this._beforeClearStage; _e < _f.length; _e++) {\n            var step = _f[_e];\n            step.action();\n        }\n        // Clear\n        this._clearFrameBuffer(this.activeCamera);\n        // Collects render targets from external components.\n        for (var _g = 0, _h = this._gatherRenderTargetsStage; _g < _h.length; _g++) {\n            var step = _h[_g];\n            step.action(this._renderTargets);\n        }\n        // Multi-cameras?\n        if (this.activeCameras && this.activeCameras.length > 0) {\n            for (var cameraIndex = 0; cameraIndex < this.activeCameras.length; cameraIndex++) {\n                this._processSubCameras(this.activeCameras[cameraIndex], cameraIndex > 0);\n            }\n        }\n        else {\n            if (!this.activeCamera) {\n                throw new Error(\"No camera defined\");\n            }\n            this._processSubCameras(this.activeCamera, !!this.activeCamera.outputRenderTarget);\n        }\n        // Intersection checks\n        this._checkIntersections();\n        // Executes the after render stage actions.\n        for (var _j = 0, _k = this._afterRenderStage; _j < _k.length; _j++) {\n            var step = _k[_j];\n            step.action();\n        }\n        // After render\n        if (this.afterRender) {\n            this.afterRender();\n        }\n        this.onAfterRenderObservable.notifyObservers(this);\n        // Cleaning\n        if (this._toBeDisposed.length) {\n            for (var index = 0; index < this._toBeDisposed.length; index++) {\n                var data = this._toBeDisposed[index];\n                if (data) {\n                    data.dispose();\n                }\n            }\n            this._toBeDisposed = [];\n        }\n        if (this.dumpNextRenderTargets) {\n            this.dumpNextRenderTargets = false;\n        }\n        this._activeBones.addCount(0, true);\n        this._activeIndices.addCount(0, true);\n        this._activeParticles.addCount(0, true);\n        this._engine.restoreDefaultFramebuffer();\n    };\n    /**\n     * Freeze all materials\n     * A frozen material will not be updatable but should be faster to render\n     */\n    Scene.prototype.freezeMaterials = function () {\n        for (var i = 0; i < this.materials.length; i++) {\n            this.materials[i].freeze();\n        }\n    };\n    /**\n     * Unfreeze all materials\n     * A frozen material will not be updatable but should be faster to render\n     */\n    Scene.prototype.unfreezeMaterials = function () {\n        for (var i = 0; i < this.materials.length; i++) {\n            this.materials[i].unfreeze();\n        }\n    };\n    /**\n     * Releases all held resources\n     */\n    Scene.prototype.dispose = function () {\n        var _a;\n        if (this.isDisposed) {\n            return;\n        }\n        this.beforeRender = null;\n        this.afterRender = null;\n        this.metadata = null;\n        this.skeletons = [];\n        this.morphTargetManagers = [];\n        this._transientComponents = [];\n        this._isReadyForMeshStage.clear();\n        this._beforeEvaluateActiveMeshStage.clear();\n        this._evaluateSubMeshStage.clear();\n        this._preActiveMeshStage.clear();\n        this._cameraDrawRenderTargetStage.clear();\n        this._beforeCameraDrawStage.clear();\n        this._beforeRenderTargetDrawStage.clear();\n        this._beforeRenderingGroupDrawStage.clear();\n        this._beforeRenderingMeshStage.clear();\n        this._afterRenderingMeshStage.clear();\n        this._afterRenderingGroupDrawStage.clear();\n        this._afterCameraDrawStage.clear();\n        this._afterRenderTargetDrawStage.clear();\n        this._afterRenderStage.clear();\n        this._beforeCameraUpdateStage.clear();\n        this._beforeClearStage.clear();\n        this._gatherRenderTargetsStage.clear();\n        this._gatherActiveCameraRenderTargetsStage.clear();\n        this._pointerMoveStage.clear();\n        this._pointerDownStage.clear();\n        this._pointerUpStage.clear();\n        this.importedMeshesFiles = new Array();\n        if (this.stopAllAnimations) {\n            this.stopAllAnimations();\n        }\n        this.resetCachedMaterial();\n        // Smart arrays\n        if (this.activeCamera) {\n            this.activeCamera._activeMeshes.dispose();\n            this.activeCamera = null;\n        }\n        this._activeMeshes.dispose();\n        this._renderingManager.dispose();\n        this._processedMaterials.dispose();\n        this._activeParticleSystems.dispose();\n        this._activeSkeletons.dispose();\n        this._softwareSkinnedMeshes.dispose();\n        this._renderTargets.dispose();\n        this._materialsRenderTargets.dispose();\n        this._registeredForLateAnimationBindings.dispose();\n        this._meshesForIntersections.dispose();\n        this._toBeDisposed = [];\n        // Abort active requests\n        var activeRequests = this._activeRequests.slice();\n        for (var _i = 0, activeRequests_1 = activeRequests; _i < activeRequests_1.length; _i++) {\n            var request = activeRequests_1[_i];\n            request.abort();\n        }\n        this._activeRequests = [];\n        // Events\n        this.onDisposeObservable.notifyObservers(this);\n        this.onDisposeObservable.clear();\n        this.onBeforeRenderObservable.clear();\n        this.onAfterRenderObservable.clear();\n        this.onBeforeRenderTargetsRenderObservable.clear();\n        this.onAfterRenderTargetsRenderObservable.clear();\n        this.onAfterStepObservable.clear();\n        this.onBeforeStepObservable.clear();\n        this.onBeforeActiveMeshesEvaluationObservable.clear();\n        this.onAfterActiveMeshesEvaluationObservable.clear();\n        this.onBeforeParticlesRenderingObservable.clear();\n        this.onAfterParticlesRenderingObservable.clear();\n        this.onBeforeDrawPhaseObservable.clear();\n        this.onAfterDrawPhaseObservable.clear();\n        this.onBeforeAnimationsObservable.clear();\n        this.onAfterAnimationsObservable.clear();\n        this.onDataLoadedObservable.clear();\n        this.onBeforeRenderingGroupObservable.clear();\n        this.onAfterRenderingGroupObservable.clear();\n        this.onMeshImportedObservable.clear();\n        this.onBeforeCameraRenderObservable.clear();\n        this.onAfterCameraRenderObservable.clear();\n        this.onReadyObservable.clear();\n        this.onNewCameraAddedObservable.clear();\n        this.onCameraRemovedObservable.clear();\n        this.onNewLightAddedObservable.clear();\n        this.onLightRemovedObservable.clear();\n        this.onNewGeometryAddedObservable.clear();\n        this.onGeometryRemovedObservable.clear();\n        this.onNewTransformNodeAddedObservable.clear();\n        this.onTransformNodeRemovedObservable.clear();\n        this.onNewMeshAddedObservable.clear();\n        this.onMeshRemovedObservable.clear();\n        this.onNewSkeletonAddedObservable.clear();\n        this.onSkeletonRemovedObservable.clear();\n        this.onNewMaterialAddedObservable.clear();\n        this.onNewMultiMaterialAddedObservable.clear();\n        this.onMaterialRemovedObservable.clear();\n        this.onMultiMaterialRemovedObservable.clear();\n        this.onNewTextureAddedObservable.clear();\n        this.onTextureRemovedObservable.clear();\n        this.onPrePointerObservable.clear();\n        this.onPointerObservable.clear();\n        this.onPreKeyboardObservable.clear();\n        this.onKeyboardObservable.clear();\n        this.onActiveCameraChanged.clear();\n        this.onComputePressureChanged.clear();\n        (_a = this._computePressureObserver) === null || _a === void 0 ? void 0 : _a.unobserve();\n        this._computePressureObserver = undefined;\n        this.detachControl();\n        // Detach cameras\n        var canvas = this._engine.getInputElement();\n        if (canvas) {\n            for (var index_1 = 0; index_1 < this.cameras.length; index_1++) {\n                this.cameras[index_1].detachControl();\n            }\n        }\n        // Release animation groups\n        this._disposeList(this.animationGroups);\n        // Release lights\n        this._disposeList(this.lights);\n        // Release meshes\n        this._disposeList(this.meshes, function (item) { return item.dispose(true); });\n        this._disposeList(this.transformNodes, function (item) { return item.dispose(true); });\n        // Release cameras\n        this._disposeList(this.cameras);\n        // Release materials\n        if (this._defaultMaterial) {\n            this._defaultMaterial.dispose();\n        }\n        this._disposeList(this.multiMaterials);\n        this._disposeList(this.materials);\n        // Release particles\n        this._disposeList(this.particleSystems);\n        // Release postProcesses\n        this._disposeList(this.postProcesses);\n        // Release textures\n        this._disposeList(this.textures);\n        // Release morph targets\n        this._disposeList(this.morphTargetManagers);\n        // Release UBO\n        this._sceneUbo.dispose();\n        if (this._multiviewSceneUbo) {\n            this._multiviewSceneUbo.dispose();\n        }\n        // Post-processes\n        this.postProcessManager.dispose();\n        // Components\n        this._disposeList(this._components);\n        // Remove from engine\n        var index = this._engine.scenes.indexOf(this);\n        if (index > -1) {\n            this._engine.scenes.splice(index, 1);\n        }\n        if (EngineStore._LastCreatedScene === this) {\n            if (this._engine.scenes.length > 0) {\n                EngineStore._LastCreatedScene = this._engine.scenes[this._engine.scenes.length - 1];\n            }\n            else {\n                EngineStore._LastCreatedScene = null;\n            }\n        }\n        index = this._engine._virtualScenes.indexOf(this);\n        if (index > -1) {\n            this._engine._virtualScenes.splice(index, 1);\n        }\n        this._engine.wipeCaches(true);\n        this._isDisposed = true;\n    };\n    Scene.prototype._disposeList = function (items, callback) {\n        var itemsCopy = items.slice(0);\n        callback = callback !== null && callback !== void 0 ? callback : (function (item) { return item.dispose(); });\n        for (var _i = 0, itemsCopy_1 = itemsCopy; _i < itemsCopy_1.length; _i++) {\n            var item = itemsCopy_1[_i];\n            callback(item);\n        }\n        items.length = 0;\n    };\n    Object.defineProperty(Scene.prototype, \"isDisposed\", {\n        /**\n         * Gets if the scene is already disposed\n         */\n        get: function () {\n            return this._isDisposed;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Call this function to reduce memory footprint of the scene.\n     * Vertex buffers will not store CPU data anymore (this will prevent picking, collisions or physics to work correctly)\n     */\n    Scene.prototype.clearCachedVertexData = function () {\n        for (var meshIndex = 0; meshIndex < this.meshes.length; meshIndex++) {\n            var mesh = this.meshes[meshIndex];\n            var geometry = mesh.geometry;\n            if (geometry) {\n                geometry.clearCachedData();\n            }\n        }\n    };\n    /**\n     * This function will remove the local cached buffer data from texture.\n     * It will save memory but will prevent the texture from being rebuilt\n     */\n    Scene.prototype.cleanCachedTextureBuffer = function () {\n        for (var _i = 0, _a = this.textures; _i < _a.length; _i++) {\n            var baseTexture = _a[_i];\n            var buffer = baseTexture._buffer;\n            if (buffer) {\n                baseTexture._buffer = null;\n            }\n        }\n    };\n    /**\n     * Get the world extend vectors with an optional filter\n     *\n     * @param filterPredicate the predicate - which meshes should be included when calculating the world size\n     * @returns {{ min: Vector3; max: Vector3 }} min and max vectors\n     */\n    Scene.prototype.getWorldExtends = function (filterPredicate) {\n        var min = new Vector3(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n        var max = new Vector3(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n        filterPredicate = filterPredicate || (function () { return true; });\n        this.meshes.filter(filterPredicate).forEach(function (mesh) {\n            mesh.computeWorldMatrix(true);\n            if (!mesh.subMeshes || mesh.subMeshes.length === 0 || mesh.infiniteDistance) {\n                return;\n            }\n            var boundingInfo = mesh.getBoundingInfo();\n            var minBox = boundingInfo.boundingBox.minimumWorld;\n            var maxBox = boundingInfo.boundingBox.maximumWorld;\n            Vector3.CheckExtends(minBox, min, max);\n            Vector3.CheckExtends(maxBox, min, max);\n        });\n        return {\n            min: min,\n            max: max\n        };\n    };\n    // Picking\n    /**\n     * Creates a ray that can be used to pick in the scene\n     * @param x defines the x coordinate of the origin (on-screen)\n     * @param y defines the y coordinate of the origin (on-screen)\n     * @param world defines the world matrix to use if you want to pick in object space (instead of world space)\n     * @param camera defines the camera to use for the picking\n     * @param cameraViewSpace defines if picking will be done in view space (false by default)\n     * @returns a Ray\n     */\n    Scene.prototype.createPickingRay = function (x, y, world, camera, cameraViewSpace) {\n        if (cameraViewSpace === void 0) { cameraViewSpace = false; }\n        throw _WarnImport(\"Ray\");\n    };\n    /**\n     * Creates a ray that can be used to pick in the scene\n     * @param x defines the x coordinate of the origin (on-screen)\n     * @param y defines the y coordinate of the origin (on-screen)\n     * @param world defines the world matrix to use if you want to pick in object space (instead of world space)\n     * @param result defines the ray where to store the picking ray\n     * @param camera defines the camera to use for the picking\n     * @param cameraViewSpace defines if picking will be done in view space (false by default)\n     * @param enableDistantPicking defines if picking should handle large values for mesh position/scaling (false by default)\n     * @returns the current scene\n     */\n    Scene.prototype.createPickingRayToRef = function (x, y, world, result, camera, cameraViewSpace, enableDistantPicking) {\n        if (cameraViewSpace === void 0) { cameraViewSpace = false; }\n        if (enableDistantPicking === void 0) { enableDistantPicking = false; }\n        throw _WarnImport(\"Ray\");\n    };\n    /**\n     * Creates a ray that can be used to pick in the scene\n     * @param x defines the x coordinate of the origin (on-screen)\n     * @param y defines the y coordinate of the origin (on-screen)\n     * @param camera defines the camera to use for the picking\n     * @returns a Ray\n     */\n    Scene.prototype.createPickingRayInCameraSpace = function (x, y, camera) {\n        throw _WarnImport(\"Ray\");\n    };\n    /**\n     * Creates a ray that can be used to pick in the scene\n     * @param x defines the x coordinate of the origin (on-screen)\n     * @param y defines the y coordinate of the origin (on-screen)\n     * @param result defines the ray where to store the picking ray\n     * @param camera defines the camera to use for the picking\n     * @returns the current scene\n     */\n    Scene.prototype.createPickingRayInCameraSpaceToRef = function (x, y, result, camera) {\n        throw _WarnImport(\"Ray\");\n    };\n    /** Launch a ray to try to pick a mesh in the scene\n     * @param x position on screen\n     * @param y position on screen\n     * @param predicate Predicate function used to determine eligible meshes. Can be set to null. In this case, a mesh must be enabled, visible and with isPickable set to true\n     * @param fastCheck defines if the first intersection will be used (and not the closest)\n     * @param camera to use for computing the picking ray. Can be set to null. In this case, the scene.activeCamera will be used\n     * @param trianglePredicate defines an optional predicate used to select faces when a mesh intersection is detected\n     * @returns a PickingInfo\n     */\n    Scene.prototype.pick = function (x, y, predicate, fastCheck, camera, trianglePredicate) {\n        // Dummy info if picking as not been imported\n        var pi = new PickingInfo();\n        pi._pickingUnavailable = true;\n        return pi;\n    };\n    /** Launch a ray to try to pick a mesh in the scene using only bounding information of the main mesh (not using submeshes)\n     * @param x position on screen\n     * @param y position on screen\n     * @param predicate Predicate function used to determine eligible meshes. Can be set to null. In this case, a mesh must be enabled, visible and with isPickable set to true\n     * @param fastCheck defines if the first intersection will be used (and not the closest)\n     * @param camera to use for computing the picking ray. Can be set to null. In this case, the scene.activeCamera will be used\n     * @returns a PickingInfo (Please note that some info will not be set like distance, bv, bu and everything that cannot be capture by only using bounding infos)\n     */\n    Scene.prototype.pickWithBoundingInfo = function (x, y, predicate, fastCheck, camera) {\n        // Dummy info if picking as not been imported\n        var pi = new PickingInfo();\n        pi._pickingUnavailable = true;\n        return pi;\n    };\n    /** Use the given ray to pick a mesh in the scene\n     * @param ray The ray to use to pick meshes\n     * @param predicate Predicate function used to determine eligible meshes. Can be set to null. In this case, a mesh must have isPickable set to true\n     * @param fastCheck defines if the first intersection will be used (and not the closest)\n     * @param trianglePredicate defines an optional predicate used to select faces when a mesh intersection is detected\n     * @returns a PickingInfo\n     */\n    Scene.prototype.pickWithRay = function (ray, predicate, fastCheck, trianglePredicate) {\n        throw _WarnImport(\"Ray\");\n    };\n    /**\n     * Launch a ray to try to pick a mesh in the scene\n     * @param x X position on screen\n     * @param y Y position on screen\n     * @param predicate Predicate function used to determine eligible meshes. Can be set to null. In this case, a mesh must be enabled, visible and with isPickable set to true\n     * @param camera camera to use for computing the picking ray. Can be set to null. In this case, the scene.activeCamera will be used\n     * @param trianglePredicate defines an optional predicate used to select faces when a mesh intersection is detected\n     * @returns an array of PickingInfo\n     */\n    Scene.prototype.multiPick = function (x, y, predicate, camera, trianglePredicate) {\n        throw _WarnImport(\"Ray\");\n    };\n    /**\n     * Launch a ray to try to pick a mesh in the scene\n     * @param ray Ray to use\n     * @param predicate Predicate function used to determine eligible meshes. Can be set to null. In this case, a mesh must be enabled, visible and with isPickable set to true\n     * @param trianglePredicate defines an optional predicate used to select faces when a mesh intersection is detected\n     * @returns an array of PickingInfo\n     */\n    Scene.prototype.multiPickWithRay = function (ray, predicate, trianglePredicate) {\n        throw _WarnImport(\"Ray\");\n    };\n    /**\n     * Force the value of meshUnderPointer\n     * @param mesh defines the mesh to use\n     * @param pointerId optional pointer id when using more than one pointer\n     * @param pickResult optional pickingInfo data used to find mesh\n     */\n    Scene.prototype.setPointerOverMesh = function (mesh, pointerId, pickResult) {\n        this._inputManager.setPointerOverMesh(mesh, pointerId, pickResult);\n    };\n    /**\n     * Gets the mesh under the pointer\n     * @returns a Mesh or null if no mesh is under the pointer\n     */\n    Scene.prototype.getPointerOverMesh = function () {\n        return this._inputManager.getPointerOverMesh();\n    };\n    // Misc.\n    /** @hidden */\n    Scene.prototype._rebuildGeometries = function () {\n        for (var _i = 0, _a = this.geometries; _i < _a.length; _i++) {\n            var geometry = _a[_i];\n            geometry._rebuild();\n        }\n        for (var _b = 0, _c = this.meshes; _b < _c.length; _b++) {\n            var mesh = _c[_b];\n            mesh._rebuild();\n        }\n        if (this.postProcessManager) {\n            this.postProcessManager._rebuild();\n        }\n        for (var _d = 0, _e = this._components; _d < _e.length; _d++) {\n            var component = _e[_d];\n            component.rebuild();\n        }\n        for (var _f = 0, _g = this.particleSystems; _f < _g.length; _f++) {\n            var system = _g[_f];\n            system.rebuild();\n        }\n        if (this.spriteManagers) {\n            for (var _h = 0, _j = this.spriteManagers; _h < _j.length; _h++) {\n                var spriteMgr = _j[_h];\n                spriteMgr.rebuild();\n            }\n        }\n    };\n    /** @hidden */\n    Scene.prototype._rebuildTextures = function () {\n        for (var _i = 0, _a = this.textures; _i < _a.length; _i++) {\n            var texture = _a[_i];\n            texture._rebuild();\n        }\n        this.markAllMaterialsAsDirty(1);\n    };\n    // Tags\n    Scene.prototype._getByTags = function (list, tagsQuery, forEach) {\n        if (tagsQuery === undefined) {\n            // returns the complete list (could be done with Tags.MatchesQuery but no need to have a for-loop here)\n            return list;\n        }\n        var listByTags = [];\n        forEach =\n            forEach ||\n                (function (item) {\n                    return;\n                });\n        for (var i in list) {\n            var item = list[i];\n            if (Tags && Tags.MatchesQuery(item, tagsQuery)) {\n                listByTags.push(item);\n                forEach(item);\n            }\n        }\n        return listByTags;\n    };\n    /**\n     * Get a list of meshes by tags\n     * @param tagsQuery defines the tags query to use\n     * @param forEach defines a predicate used to filter results\n     * @returns an array of Mesh\n     */\n    Scene.prototype.getMeshesByTags = function (tagsQuery, forEach) {\n        return this._getByTags(this.meshes, tagsQuery, forEach);\n    };\n    /**\n     * Get a list of cameras by tags\n     * @param tagsQuery defines the tags query to use\n     * @param forEach defines a predicate used to filter results\n     * @returns an array of Camera\n     */\n    Scene.prototype.getCamerasByTags = function (tagsQuery, forEach) {\n        return this._getByTags(this.cameras, tagsQuery, forEach);\n    };\n    /**\n     * Get a list of lights by tags\n     * @param tagsQuery defines the tags query to use\n     * @param forEach defines a predicate used to filter results\n     * @returns an array of Light\n     */\n    Scene.prototype.getLightsByTags = function (tagsQuery, forEach) {\n        return this._getByTags(this.lights, tagsQuery, forEach);\n    };\n    /**\n     * Get a list of materials by tags\n     * @param tagsQuery defines the tags query to use\n     * @param forEach defines a predicate used to filter results\n     * @returns an array of Material\n     */\n    Scene.prototype.getMaterialByTags = function (tagsQuery, forEach) {\n        return this._getByTags(this.materials, tagsQuery, forEach).concat(this._getByTags(this.multiMaterials, tagsQuery, forEach));\n    };\n    /**\n     * Get a list of transform nodes by tags\n     * @param tagsQuery defines the tags query to use\n     * @param forEach defines a predicate used to filter results\n     * @returns an array of TransformNode\n     */\n    Scene.prototype.getTransformNodesByTags = function (tagsQuery, forEach) {\n        return this._getByTags(this.transformNodes, tagsQuery, forEach);\n    };\n    /**\n     * Overrides the default sort function applied in the rendering group to prepare the meshes.\n     * This allowed control for front to back rendering or reversly depending of the special needs.\n     *\n     * @param renderingGroupId The rendering group id corresponding to its index\n     * @param opaqueSortCompareFn The opaque queue comparison function use to sort.\n     * @param alphaTestSortCompareFn The alpha test queue comparison function use to sort.\n     * @param transparentSortCompareFn The transparent queue comparison function use to sort.\n     */\n    Scene.prototype.setRenderingOrder = function (renderingGroupId, opaqueSortCompareFn, alphaTestSortCompareFn, transparentSortCompareFn) {\n        if (opaqueSortCompareFn === void 0) { opaqueSortCompareFn = null; }\n        if (alphaTestSortCompareFn === void 0) { alphaTestSortCompareFn = null; }\n        if (transparentSortCompareFn === void 0) { transparentSortCompareFn = null; }\n        this._renderingManager.setRenderingOrder(renderingGroupId, opaqueSortCompareFn, alphaTestSortCompareFn, transparentSortCompareFn);\n    };\n    /**\n     * Specifies whether or not the stencil and depth buffer are cleared between two rendering groups.\n     *\n     * @param renderingGroupId The rendering group id corresponding to its index\n     * @param autoClearDepthStencil Automatically clears depth and stencil between groups if true.\n     * @param depth Automatically clears depth between groups if true and autoClear is true.\n     * @param stencil Automatically clears stencil between groups if true and autoClear is true.\n     */\n    Scene.prototype.setRenderingAutoClearDepthStencil = function (renderingGroupId, autoClearDepthStencil, depth, stencil) {\n        if (depth === void 0) { depth = true; }\n        if (stencil === void 0) { stencil = true; }\n        this._renderingManager.setRenderingAutoClearDepthStencil(renderingGroupId, autoClearDepthStencil, depth, stencil);\n    };\n    /**\n     * Gets the current auto clear configuration for one rendering group of the rendering\n     * manager.\n     * @param index the rendering group index to get the information for\n     * @returns The auto clear setup for the requested rendering group\n     */\n    Scene.prototype.getAutoClearDepthStencilSetup = function (index) {\n        return this._renderingManager.getAutoClearDepthStencilSetup(index);\n    };\n    Object.defineProperty(Scene.prototype, \"blockMaterialDirtyMechanism\", {\n        /** Gets or sets a boolean blocking all the calls to markAllMaterialsAsDirty (ie. the materials won't be updated if they are out of sync) */\n        get: function () {\n            return this._blockMaterialDirtyMechanism;\n        },\n        set: function (value) {\n            if (this._blockMaterialDirtyMechanism === value) {\n                return;\n            }\n            this._blockMaterialDirtyMechanism = value;\n            if (!value) {\n                // Do a complete update\n                this.markAllMaterialsAsDirty(63);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Will flag all materials as dirty to trigger new shader compilation\n     * @param flag defines the flag used to specify which material part must be marked as dirty\n     * @param predicate If not null, it will be used to specify if a material has to be marked as dirty\n     */\n    Scene.prototype.markAllMaterialsAsDirty = function (flag, predicate) {\n        if (this._blockMaterialDirtyMechanism) {\n            return;\n        }\n        for (var _i = 0, _a = this.materials; _i < _a.length; _i++) {\n            var material = _a[_i];\n            if (predicate && !predicate(material)) {\n                continue;\n            }\n            material.markAsDirty(flag);\n        }\n    };\n    /**\n     * @param fileOrUrl\n     * @param onSuccess\n     * @param onProgress\n     * @param useOfflineSupport\n     * @param useArrayBuffer\n     * @param onError\n     * @param onOpened\n     * @hidden\n     */\n    Scene.prototype._loadFile = function (fileOrUrl, onSuccess, onProgress, useOfflineSupport, useArrayBuffer, onError, onOpened) {\n        var _this = this;\n        var request = LoadFile(fileOrUrl, onSuccess, onProgress, useOfflineSupport ? this.offlineProvider : undefined, useArrayBuffer, onError, onOpened);\n        this._activeRequests.push(request);\n        request.onCompleteObservable.add(function (request) {\n            _this._activeRequests.splice(_this._activeRequests.indexOf(request), 1);\n        });\n        return request;\n    };\n    /**\n     * @param fileOrUrl\n     * @param onProgress\n     * @param useOfflineSupport\n     * @param useArrayBuffer\n     * @param onOpened\n     * @hidden\n     */\n    Scene.prototype._loadFileAsync = function (fileOrUrl, onProgress, useOfflineSupport, useArrayBuffer, onOpened) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._loadFile(fileOrUrl, function (data) {\n                resolve(data);\n            }, onProgress, useOfflineSupport, useArrayBuffer, function (request, exception) {\n                reject(exception);\n            }, onOpened);\n        });\n    };\n    /**\n     * @param url\n     * @param onSuccess\n     * @param onProgress\n     * @param useOfflineSupport\n     * @param useArrayBuffer\n     * @param onError\n     * @param onOpened\n     * @hidden\n     */\n    Scene.prototype._requestFile = function (url, onSuccess, onProgress, useOfflineSupport, useArrayBuffer, onError, onOpened) {\n        var _this = this;\n        var request = RequestFile(url, onSuccess, onProgress, useOfflineSupport ? this.offlineProvider : undefined, useArrayBuffer, onError, onOpened);\n        this._activeRequests.push(request);\n        request.onCompleteObservable.add(function (request) {\n            _this._activeRequests.splice(_this._activeRequests.indexOf(request), 1);\n        });\n        return request;\n    };\n    /**\n     * @param url\n     * @param onProgress\n     * @param useOfflineSupport\n     * @param useArrayBuffer\n     * @param onOpened\n     * @hidden\n     */\n    Scene.prototype._requestFileAsync = function (url, onProgress, useOfflineSupport, useArrayBuffer, onOpened) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._requestFile(url, function (data) {\n                resolve(data);\n            }, onProgress, useOfflineSupport, useArrayBuffer, function (error) {\n                reject(error);\n            }, onOpened);\n        });\n    };\n    /**\n     * @param file\n     * @param onSuccess\n     * @param onProgress\n     * @param useArrayBuffer\n     * @param onError\n     * @hidden\n     */\n    Scene.prototype._readFile = function (file, onSuccess, onProgress, useArrayBuffer, onError) {\n        var _this = this;\n        var request = ReadFile(file, onSuccess, onProgress, useArrayBuffer, onError);\n        this._activeRequests.push(request);\n        request.onCompleteObservable.add(function (request) {\n            _this._activeRequests.splice(_this._activeRequests.indexOf(request), 1);\n        });\n        return request;\n    };\n    /**\n     * @param file\n     * @param onProgress\n     * @param useArrayBuffer\n     * @hidden\n     */\n    Scene.prototype._readFileAsync = function (file, onProgress, useArrayBuffer) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            _this._readFile(file, function (data) {\n                resolve(data);\n            }, onProgress, useArrayBuffer, function (error) {\n                reject(error);\n            });\n        });\n    };\n    /**\n     * This method gets the performance collector belonging to the scene, which is generally shared with the inspector.\n     * @returns the perf collector belonging to the scene.\n     */\n    Scene.prototype.getPerfCollector = function () {\n        throw _WarnImport(\"performanceViewerSceneExtension\");\n    };\n    /** The fog is deactivated */\n    Scene.FOGMODE_NONE = 0;\n    /** The fog density is following an exponential function */\n    Scene.FOGMODE_EXP = 1;\n    /** The fog density is following an exponential function faster than FOGMODE_EXP */\n    Scene.FOGMODE_EXP2 = 2;\n    /** The fog density is following a linear function. */\n    Scene.FOGMODE_LINEAR = 3;\n    /**\n     * Gets or sets the minimum deltatime when deterministic lock step is enabled\n     * @see https://doc.babylonjs.com/babylon101/animations#deterministic-lockstep\n     */\n    Scene.MinDeltaTime = 1.0;\n    /**\n     * Gets or sets the maximum deltatime when deterministic lock step is enabled\n     * @see https://doc.babylonjs.com/babylon101/animations#deterministic-lockstep\n     */\n    Scene.MaxDeltaTime = 1000.0;\n    return Scene;\n}(AbstractScene));\nexport { Scene };\n/**\n * @param id\n * @hidden\n */\nScene.prototype.setActiveCameraByID = function (id) {\n    return this.setActiveCameraById(id);\n};\nScene.prototype.getLastMaterialByID = function (id) {\n    return this.getLastMaterialById(id);\n};\nScene.prototype.getMaterialByID = function (id) {\n    return this.getMaterialById(id);\n};\nScene.prototype.getTextureByUniqueID = function (uniqueId) {\n    return this.getTextureByUniqueId(uniqueId);\n};\nScene.prototype.getCameraByID = function (id) {\n    return this.getCameraById(id);\n};\nScene.prototype.getCameraByUniqueID = function (uniqueId) {\n    return this.getCameraByUniqueId(uniqueId);\n};\nScene.prototype.getBoneByID = function (id) {\n    return this.getBoneById(id);\n};\nScene.prototype.getLightByID = function (id) {\n    return this.getLightById(id);\n};\nScene.prototype.getLightByUniqueID = function (uniqueId) {\n    return this.getLightByUniqueId(uniqueId);\n};\nScene.prototype.getParticleSystemByID = function (id) {\n    return this.getParticleSystemById(id);\n};\nScene.prototype.getGeometryByID = function (id) {\n    return this.getGeometryById(id);\n};\nScene.prototype.getMeshByID = function (id) {\n    return this.getMeshById(id);\n};\nScene.prototype.getMeshesByID = function (id) {\n    return this.getMeshesById(id);\n};\nScene.prototype.getTransformNodeByID = function (id) {\n    return this.getTransformNodeById(id);\n};\nScene.prototype.getTransformNodeByUniqueID = function (uniqueId) {\n    return this.getTransformNodeByUniqueId(uniqueId);\n};\nScene.prototype.getTransformNodesByID = function (id) {\n    return this.getTransformNodesById(id);\n};\nScene.prototype.getMeshByUniqueID = function (uniqueId) {\n    return this.getMeshByUniqueId(uniqueId);\n};\nScene.prototype.getLastMeshByID = function (id) {\n    return this.getLastMeshById(id);\n};\nScene.prototype.getLastEntryByID = function (id) {\n    return this.getLastEntryById(id);\n};\nScene.prototype.getNodeByID = function (id) {\n    return this.getNodeById(id);\n};\nScene.prototype.getLastSkeletonByID = function (id) {\n    return this.getLastSkeletonById(id);\n};\n//# sourceMappingURL=scene.js.map","import { __extends } from \"tslib\";\n/**\n * Groups all the scene component constants in one place to ease maintenance.\n * @hidden\n */\nvar SceneComponentConstants = /** @class */ (function () {\n    function SceneComponentConstants() {\n    }\n    SceneComponentConstants.NAME_EFFECTLAYER = \"EffectLayer\";\n    SceneComponentConstants.NAME_LAYER = \"Layer\";\n    SceneComponentConstants.NAME_LENSFLARESYSTEM = \"LensFlareSystem\";\n    SceneComponentConstants.NAME_BOUNDINGBOXRENDERER = \"BoundingBoxRenderer\";\n    SceneComponentConstants.NAME_PARTICLESYSTEM = \"ParticleSystem\";\n    SceneComponentConstants.NAME_GAMEPAD = \"Gamepad\";\n    SceneComponentConstants.NAME_SIMPLIFICATIONQUEUE = \"SimplificationQueue\";\n    SceneComponentConstants.NAME_GEOMETRYBUFFERRENDERER = \"GeometryBufferRenderer\";\n    SceneComponentConstants.NAME_PREPASSRENDERER = \"PrePassRenderer\";\n    SceneComponentConstants.NAME_DEPTHRENDERER = \"DepthRenderer\";\n    SceneComponentConstants.NAME_DEPTHPEELINGRENDERER = \"DepthPeelingRenderer\";\n    SceneComponentConstants.NAME_POSTPROCESSRENDERPIPELINEMANAGER = \"PostProcessRenderPipelineManager\";\n    SceneComponentConstants.NAME_SPRITE = \"Sprite\";\n    SceneComponentConstants.NAME_SUBSURFACE = \"SubSurface\";\n    SceneComponentConstants.NAME_OUTLINERENDERER = \"Outline\";\n    SceneComponentConstants.NAME_PROCEDURALTEXTURE = \"ProceduralTexture\";\n    SceneComponentConstants.NAME_SHADOWGENERATOR = \"ShadowGenerator\";\n    SceneComponentConstants.NAME_OCTREE = \"Octree\";\n    SceneComponentConstants.NAME_PHYSICSENGINE = \"PhysicsEngine\";\n    SceneComponentConstants.NAME_AUDIO = \"Audio\";\n    SceneComponentConstants.STEP_ISREADYFORMESH_EFFECTLAYER = 0;\n    SceneComponentConstants.STEP_BEFOREEVALUATEACTIVEMESH_BOUNDINGBOXRENDERER = 0;\n    SceneComponentConstants.STEP_EVALUATESUBMESH_BOUNDINGBOXRENDERER = 0;\n    SceneComponentConstants.STEP_PREACTIVEMESH_BOUNDINGBOXRENDERER = 0;\n    SceneComponentConstants.STEP_CAMERADRAWRENDERTARGET_EFFECTLAYER = 1;\n    SceneComponentConstants.STEP_BEFORECAMERADRAW_PREPASS = 0;\n    SceneComponentConstants.STEP_BEFORECAMERADRAW_EFFECTLAYER = 1;\n    SceneComponentConstants.STEP_BEFORECAMERADRAW_LAYER = 2;\n    SceneComponentConstants.STEP_BEFORERENDERTARGETDRAW_PREPASS = 0;\n    SceneComponentConstants.STEP_BEFORERENDERTARGETDRAW_LAYER = 1;\n    SceneComponentConstants.STEP_BEFORERENDERINGMESH_PREPASS = 0;\n    SceneComponentConstants.STEP_BEFORERENDERINGMESH_OUTLINE = 1;\n    SceneComponentConstants.STEP_AFTERRENDERINGMESH_PREPASS = 0;\n    SceneComponentConstants.STEP_AFTERRENDERINGMESH_OUTLINE = 1;\n    SceneComponentConstants.STEP_AFTERRENDERINGGROUPDRAW_EFFECTLAYER_DRAW = 0;\n    SceneComponentConstants.STEP_AFTERRENDERINGGROUPDRAW_BOUNDINGBOXRENDERER = 1;\n    SceneComponentConstants.STEP_BEFORECAMERAUPDATE_SIMPLIFICATIONQUEUE = 0;\n    SceneComponentConstants.STEP_BEFORECAMERAUPDATE_GAMEPAD = 1;\n    SceneComponentConstants.STEP_BEFORECLEAR_PROCEDURALTEXTURE = 0;\n    SceneComponentConstants.STEP_BEFORECLEAR_PREPASS = 1;\n    SceneComponentConstants.STEP_BEFORERENDERTARGETCLEAR_PREPASS = 0;\n    SceneComponentConstants.STEP_AFTERRENDERTARGETDRAW_PREPASS = 0;\n    SceneComponentConstants.STEP_AFTERRENDERTARGETDRAW_LAYER = 1;\n    SceneComponentConstants.STEP_AFTERCAMERADRAW_PREPASS = 0;\n    SceneComponentConstants.STEP_AFTERCAMERADRAW_EFFECTLAYER = 1;\n    SceneComponentConstants.STEP_AFTERCAMERADRAW_LENSFLARESYSTEM = 2;\n    SceneComponentConstants.STEP_AFTERCAMERADRAW_EFFECTLAYER_DRAW = 3;\n    SceneComponentConstants.STEP_AFTERCAMERADRAW_LAYER = 4;\n    SceneComponentConstants.STEP_AFTERRENDER_AUDIO = 0;\n    SceneComponentConstants.STEP_GATHERRENDERTARGETS_DEPTHRENDERER = 0;\n    SceneComponentConstants.STEP_GATHERRENDERTARGETS_GEOMETRYBUFFERRENDERER = 1;\n    SceneComponentConstants.STEP_GATHERRENDERTARGETS_SHADOWGENERATOR = 2;\n    SceneComponentConstants.STEP_GATHERRENDERTARGETS_POSTPROCESSRENDERPIPELINEMANAGER = 3;\n    SceneComponentConstants.STEP_GATHERACTIVECAMERARENDERTARGETS_DEPTHRENDERER = 0;\n    SceneComponentConstants.STEP_POINTERMOVE_SPRITE = 0;\n    SceneComponentConstants.STEP_POINTERDOWN_SPRITE = 0;\n    SceneComponentConstants.STEP_POINTERUP_SPRITE = 0;\n    return SceneComponentConstants;\n}());\nexport { SceneComponentConstants };\n/**\n * Representation of a stage in the scene (Basically a list of ordered steps)\n * @hidden\n */\nvar Stage = /** @class */ (function (_super) {\n    __extends(Stage, _super);\n    /**\n     * Hide ctor from the rest of the world.\n     * @param items The items to add.\n     */\n    function Stage(items) {\n        return _super.apply(this, items) || this;\n    }\n    /**\n     * Creates a new Stage.\n     * @returns A new instance of a Stage\n     */\n    Stage.Create = function () {\n        return Object.create(Stage.prototype);\n    };\n    /**\n     * Registers a step in an ordered way in the targeted stage.\n     * @param index Defines the position to register the step in\n     * @param component Defines the component attached to the step\n     * @param action Defines the action to launch during the step\n     */\n    Stage.prototype.registerStep = function (index, component, action) {\n        var i = 0;\n        var maxIndex = Number.MAX_VALUE;\n        for (; i < this.length; i++) {\n            var step = this[i];\n            maxIndex = step.index;\n            if (index < maxIndex) {\n                break;\n            }\n        }\n        this.splice(i, 0, { index: index, component: component, action: action.bind(component) });\n    };\n    /**\n     * Clears all the steps from the stage.\n     */\n    Stage.prototype.clear = function () {\n        this.length = 0;\n    };\n    return Stage;\n}(Array));\nexport { Stage };\n//# sourceMappingURL=sceneComponent.js.map"],"names":["StencilState","this","reset","prototype","enabled","mask","func","ALWAYS","funcRef","funcMask","opStencilFail","KEEP","opDepthFail","opStencilDepthPass","REPLACE","Object","defineProperty","get","set","value","enumerable","configurable","StencilStateComposer","_isStencilTestDirty","_isStencilMaskDirty","_isStencilFuncDirty","_isStencilOpDirty","useStencilGlobalOnly","_func","_funcRef","_funcMask","_opStencilFail","_opDepthFail","_opStencilDepthPass","_mask","_enabled","_a","stencilMaterial","undefined","stencilGlobal","apply","gl","stencilMaterialEnabled","isDirty","enable","STENCIL_TEST","disable","stencilMask","stencilFunc","stencilOp","WebXRAbstractFeature","_xrSessionManager","_attached","_removeOnDetach","isDisposed","disableAutoAttach","xrNativeFeatureName","attach","force","_this","attached","detach","_addNewAttachObserver","onXRFrameObservable","frame","_onXRFrame","forEach","toRemove","observable","remove","observer","dispose","isCompatible","callback","push","add","WebXRControllerPointerSelection","_super","_options","call","_attachController","xrController","_controllers","uniqueId","_generateNewMeshPair","pointer","laserPointer","selectionMesh","meshUnderPointer","pick","tmpRay","disabledByNearInteraction","id","_IdCounter","_attachedController","enablePointerSelectionOnAllControllers","preferredHandedness","inputSource","handedness","targetRayMode","_attachTrackedPointerRayMode","_attachGazeMode","_attachScreenRayMode","_tmpVectorForPickCompare","disablePointerLighting","disableSelectionMeshLighting","displayLaserPointer","displaySelectionMesh","laserPointerPickedColor","laserPointerDefaultColor","selectionMeshDefaultColor","selectionMeshPickedColor","_identityMatrix","_screenCoordinatesRef","_viewportRef","_scene","scene","xrInput","controllers","onControllerAddedObservable","onControllerRemovedObservable","controller","_detachController","constantlyUpdateMeshUnderPointer","gazeCamera","webXRCamera","keys","controllerId","getMeshUnderPointer","getXRControllerByPointerId","i","length","_getPointerSelectionDisabledByPointerId","_setPointerSelectionDisabledByPointerId","state","_xrFrame","controllerGlobalPosition","controllerData","isVisible","position","getWorldPointerRayToRef","getForwardRayToRef","maxPointerDistance","disableScenePointerVectorUpdate","camera","xrCamera","viewport","toGlobalToRef","getEngine","getRenderWidth","getRenderHeight","getTransformMatrix","x","y","isNaN","pointerX","pointerY","screenCoordinates","utilityScenePick","_utilityLayerScene","pickWithRay","pointerMovePredicate","raySelectionPredicate","originalScenePick","hit","distance","aimTransform","gripTransform","grip","pickedPoint","_updatePointerDistance","copyFrom","scaling","Math","sqrt","z","pickNormal","_convertNormalToDirectionOfRay","getNormal","axis1","axis2","rotation","addInPlace","scale","pickedMesh","customUtilityLayerScene","timeToSelect","sceneToRenderTo","useUtilityLayer","oldPick","discMesh","diameter","thickness","tessellation","isPickable","parent","timer","downTriggered","pointerEventInit","pointerId","pointerType","onFrameObserver","_augmentPointerInit","material","alpha","_pickingMoved","disablePointerUpOnTouchOut","simulatePointerUp","getDeltaTime","simulatePointerDown","scaleFactor","simulatePointerMove","renderingGroupId","onDisposeObservable","addOnce","finalPointerUpTriggered","pointerDownTriggered","runInXRFrame","forceGazeMode","disableLighting","gamepad","init","motionController","overrideButtonId","selectionComponent","getComponent","getMainComponent","onButtonChangedObserver","onButtonStateChangedObservable","component","changes","pressed","current","emissiveColor","disableSwitchOnClick","onMotionControllerInitObservable","selectStartListener","event","selectEndListener","eventListeners","selectend","selectstart","session","addEventListener","normal","ray","acos","direction","PI","scaleInPlace","xrControllerUniqueId","eventName","removeEventListener","pointerEventInit_1","onBeforeRenderObservable","e","meshParent","customLasterPointerMeshGenerator","height","diameterTop","diameterBottom","subdivisions","laserPointerMaterial","customSelectionMeshGenerator","bakeCurrentTransformIntoVertices","targetMat","specularColor","backFaceCulling","newPick","subtractToRef","abs","delta","gazeModePointerMovedFactor","_laserPointer","useRightHandedSystem","screenX","screenY","Name","Version","xrSessionManager","options","WebXRMotionControllerTeleportation","_snappedToPoint","_tmpRay","_tmpVector","_tmpQuaternion","skipNextTeleportation","backwardsMovementEnabled","backwardsTeleportationDistance","parabolicCheckRadius","parabolicRayEnabled","straightRayEnabled","rotationAngle","onTargetMeshPositionUpdatedObservable","teleportationEnabled","_rotationEnabled","forceHandedness","teleportationState","forward","backwards","rotating","currentRotation","baseRotation","initMotionController_1","movementController","getComponentOfType","useMainComponentOnly","mainComponent_1","teleportationComponent","_currentTeleportationControllerId","rotationQuaternion","toEulerAngles","timeToTeleport","timeout","contextObservable","breakCondition","onEnded","_teleportForward","onAxisChangedObserver","onAxisValueChangedObservable","axesData","snapPointsOnly","toEulerAnglesToRef","rotateByQuaternionToRef","origin","realWorldHeight","o","_floorMeshes","indexOf","rotationEnabled","setTimeout","atan2","multiplyToRef","onPointerObservable","pointerInfo","type","teleportationTargetMesh","_createDefaultTargetMesh","floorMeshes","_snapToPositions","snapPositions","_setTargetMeshVisibility","children","getChildMeshes","node","name","setEnabled","snapToPoints","addFloorMesh","mesh","addBlockerMesh","pickBlockerMeshes","addSnapPoint","newSnapPoint","removeFloorMesh","index","splice","removeBlockerMesh","removeFloorMeshByName","getMeshByName","removeSnapPoint","snapPointToRemove","equals","setSelectionFeature","selectionFeature","_selectionFeature","currentFrame","targetMesh","hitPossible","absolutePosition","globalPosition","_setTargetMeshPosition","_showParabolicPath","xRotation","compensation","radius","addToRef","normalize","defaultTargetMeshOptions","teleportationTarget","width","dynamicTexture","hasAlpha","context","getContext","beginPath","arc","fillStyle","teleportationFillColor","fill","lineWidth","strokeStyle","teleportationBorderColor","stroke","closePath","update","teleportationCircleMaterial","diffuseTexture","torus","disableAnimation","animationInnerCircle","setKeys","easingFunction","setEasingMode","setEasingFunction","animations","beginAnimation","cone","rotate","torusArrowMaterial","torusConeMaterial","diffuseColor","_teleportationRingMaterial","_findClosestSnapPointWithRadius","realPosition","snapToPositionRadius","closestPoint","closestDistance","Number","MAX_VALUE","radiusSquared_1","dist","pickInfo","newPosition","snapPosition","notifyObservers","visible","getChildren","m","_quadraticBezierCurve","quadraticBezierVectors","generateRayPathMesh","getPoints","points","instance","updatable","onBeforeCameraTeleport","onAfterCameraTeleport","HandPart","XRHandJoint","handJointReferenceArray","WRIST","THUMB_METACARPAL","THUMB_PHALANX_PROXIMAL","THUMB_PHALANX_DISTAL","THUMB_TIP","INDEX_FINGER_METACARPAL","INDEX_FINGER_PHALANX_PROXIMAL","INDEX_FINGER_PHALANX_INTERMEDIATE","INDEX_FINGER_PHALANX_DISTAL","INDEX_FINGER_TIP","MIDDLE_FINGER_METACARPAL","MIDDLE_FINGER_PHALANX_PROXIMAL","MIDDLE_FINGER_PHALANX_INTERMEDIATE","MIDDLE_FINGER_PHALANX_DISTAL","MIDDLE_FINGER_TIP","RING_FINGER_METACARPAL","RING_FINGER_PHALANX_PROXIMAL","RING_FINGER_PHALANX_INTERMEDIATE","RING_FINGER_PHALANX_DISTAL","RING_FINGER_TIP","PINKY_FINGER_METACARPAL","PINKY_FINGER_PHALANX_PROXIMAL","PINKY_FINGER_PHALANX_INTERMEDIATE","PINKY_FINGER_PHALANX_DISTAL","PINKY_FINGER_TIP","handPartsDefinition","THUMB","INDEX","MIDDLE","RING","LITTLE","WebXRHand","_jointMeshes","_handMesh","rigMapping","_leftHandedMeshes","_jointsInvisible","_jointScaleFactor","_jointTransforms","Array","_jointTransformMatrices","Float32Array","_tempJointMatrix","_jointRadii","getScene","jointIdx","setHandMesh","rootMesh","onModelLoadedObservable","getHandPartMeshes","part","map","getJointMesh","jointName","handMesh","alwaysSelectAsActiveMesh","skeleton","handMeshSkeleton_1","jointBoneIdx","getBoneIndexByName","bones","linkTransformNode","updateFromXRFrame","xrFrame","referenceSpace","hand","anyHand","jointSpaces","trackingSuccessful","fillPoses","fillJointRadii","getJointPose","jointPose","transform","matrix","_jointName","jointTransform","decompose","scaledJointRadius","jointMesh","setAll","w","WebXRHandTracking","_attachedHands","_trackingHands","left","right","_handResources","jointMeshes","handMeshes","rigMappings","onHandAddedObservable","onHandRemovedObservable","_attachHand","_b","_c","webxrHand","meshesUseLeftHandedCoordinates","invisible","_detachHand","_detachHandById","anyJointMeshOptions","disableDefaultHandMesh","disableDefaultMeshes","customMeshes","leftHandedSystemMeshes","leftRigMapping","rightRigMapping","rigMappingTuple","legacyRigMapping","modelJointName","customRigMappings","_GenerateTrackedJointMeshes","featureOptions","meshes","_d","_e","trackedMeshes","originalMesh","sourceMesh","_ICOSPHERE_PARAMS","keepOriginalVisible","newInstance","createInstance","concat","onHandJointMeshGenerated","returnedMesh","enablePhysics","props","physicsProps","impostorType","physicsImpostor","mass","_GenerateDefaultHandMeshesAsync","Promise","resolve","riggedMeshes","handsDefined","handGLBs","handShader","handColors","handNodes","_f","label","_RightHandGLB","_LeftHandGLB","all","DEFAULT_HAND_MODEL_BASE_URL","DEFAULT_HAND_MODEL_RIGHT_FILENAME","DEFAULT_HAND_MODEL_LEFT_FILENAME","sent","emitComments","loadAsync","DEFAULT_HAND_MODEL_SHADER_URL","needDepthPrePass","transparencyMode","alphaMode","build","base","fresnel","fingerColor","tipFresnel","customColors","getBlockByName","handGLB","Error","_internalAbstractMeshDataInfo","_computeBonesUsingShaders","clone","_GenerateDefaultHandMeshRigMapping","H","XRHand","getHandByControllerId","getHandByHandedness","then","defaultHandMeshes","clear","trackedMesh","flat","ControllerOrbAnimationState","WebXRNearControllerMode","WebXRNearInteraction","_generateNewTouchPointMesh","touchCollisionMesh","touchCollisionMeshFunction","hydrateCollisionMeshFunction","_generateVisualCue","nearInteractionTargetMesh","stalePick","currentAnimationState","DEHYDRATED","grabRay","hoverInteraction","nearInteraction","grabInteraction","pickedPointVisualCue","enableNearInteractionOnAllControllers","_attachNearInteractionMode","_farInteractionFeature","_hoverRadius","_pickRadius","_controllerPickRadius","_nearGrabLengthScale","nearInteractionControllerMode","CENTERED_IN_FRONT","farInteractionFeature","setFarInteractionFeature","_nearPickPredicate","isEnabled","isNearPickable","_nearGrabPredicate","isNearGrabbable","_nearInteractionPredicate","_controllerAvailablePredicate","reservedDataStore","excludedControllerId","_handleTransitionAnimation","newState","HOVER","TOUCH","_processTouchPoint","orientation","handData","xrIndexTip","indexTipPose","axisRHSMultiplier","DISABLED","controllerPose","CENTERED_ON_CONTROLLER","accuratePickInfo","populateNearInteractionInfo","nearInteractionInfo","result","nearInteractionAtOrigin","utilitySceneHoverPick","_pickWithSphere","hoverPickInfo","utilitySceneNearPick","nearPick","_isControllerReadyForNearInteraction","grabCheck","squeezeComponent","onSqueezeButtonChangedObserver","meshCreationScene","motionControllerOrbMaterial","nodeMaterial","hoverSizeVec","touchSize","touchSizeVec","hydrateTransitionSize","hydrateTransitionSizeVec","touchHoverTransitionSize","touchHoverTransitionSizeVec","hoverTouchTransitionSize","touchKeys","releaseKeys","hydrateKeys","dehydrateKeys","touchAction","releaseAction","hydrateAction","dehydrateAction","isTouch","action","beginDirectAnimation","isHydration","sceneToUse","predicate","pickingInfo","Infinity","sphere","meshIndex","PickMeshWithSphere","originMesh","skipBoundingInfo","subMeshes","pi","boundingInfo","getBoundingInfo","_generatePointsArray","boundingSphere","tmp","tmpDistanceSphereToCenter","tmpDistanceSurfaceToCenter","tmpVec","center","worldToMesh","getWorldMatrix","invert","projectToRef","_positions","getIndices","getAbsolutePosition","WebXRAbstractMotionController","layout","gamepadObject","_doNotLoadControllerMesh","_controllerCache","_initComponent","componentDef","components","buttonIndex","gamepadIndices","button","axes","xAxis","yAxis","_modelReady","getComponentIds","getAllComponentsOfType","filter","selectComponentId","loadModel","useGeneric","loadingParams","_getModelLoadingConstraints","_getGenericFilenameAndPath","_getFilenameAndPath","reject","meshesLoaded","_getGenericParentMesh","_setRootMesh","_processLoadedModel","found","c","filename","path","message","Log","profileId","updateModel","pulse","duration","hapticActuatorIndex","hapticActuators","_getChildByName","n","_getImmediateChildByName","_lerpTransform","axisMap","axisValue","fixValueCoordinates","minMesh","maxMesh","valueMesh","lerpValue","_updateModel","setParent","WebXRControllerComponent","_buttonIndex","_axesIndices","_axes","_changes","_currentValue","_hasChanges","_pressed","_touched","isAxes","isButton","nativeController","buttonUpdated","axesUpdate","buttons","previous","touched","BUTTON_TYPE","SQUEEZE_TYPE","THUMBSTICK_TYPE","TOUCHPAD_TYPE","TRIGGER_TYPE","WebXRGenericTriggerMotionController","GenericTriggerLayout","ProfileId","rootNodeName","visualResponses","gamepadMapping","assetPath","none","controllerCache","WebXRMotionControllerManager","ClearProfilesCache","_ProfilesList","_ProfileLoadingPromises","DefaultFallbacks","RegisterFallbacksForProfileId","FindFallbackWithProfileId","returnArray","_Fallbacks","unshift","GetMotionControllerWithXRInput","forceProfile","profileArray","profiles","pop","match","windowsMRIdx","UseOnlineRepository","firstFunction","PrioritizeOnlineRepository","_LoadProfileFromRepository","_LoadProfilesFromAvailableControllers","secondFunction_1","catch","RegisterController","constructFunction","_AvailableControllers","fallbacks","UpdateProfilesList","BaseRepositoryUrl","data","JSON","parse","toString","ClearControllerCache","cacheItem","profilesList","profileToLoad","profile","DisableControllerCache","j","constructionFunction","WebXRProfiledMotionController","_profile","_repositoryUrl","layouts","_buttonMeshMapping","_touchDots","visResKey","glbLoaded","_meshes","componentInLayout","mainMesh","states","visualResponseKey","visResponse","valueNodeProperty","valueNodeName","minNodeName","maxNodeName","nameOfMesh","touchPointNodeName","dot","segments","hasChanges","componentProperty","NativeXRLayerWrapper","layer","framebufferWidth","framebufferHeight","sessionManager","NativeXRLayerRenderTargetTextureProvider","layerWrapper","_nativeRTTProvider","navigator","xr","getNativeRenderTargetProvider","_createRenderTargetTexture","bind","_destroyRenderTargetTexture","_nativeLayer","trySetViewportForView","getRenderTargetTextureForEye","eye","getRenderTargetForEye","getRenderTargetTextureForView","view","getFramebufferDimensions","NativeXRRenderTarget","_nativeRenderTarget","getWebXRRenderTarget","initializeXRLayerAsync","xrSession","xrLayer","WebXRCamera","_firstFrame","_referenceQuaternion","_referencedPosition","_trackingState","onTrackingStateChanged","compensateOnFirstFrame","_rotate180","minZ","cameraRigMode","updateUpVectorFromRotation","_updateNumberOfRigCameras","freezeProjectionMatrix","onXRSessionInit","copyFromFloats","_updateFromXRSession","_updateReferenceSpace","_setTrackingState","basePose","getViewerPose","baseReferenceSpace","_updateForDualEyeDebugging","rigCameras","outputRenderTarget","setTransformationFromNonVRCamera","otherCamera","resetToBaseReferenceSpace","activeCamera","computeWorldMatrix","resetReferenceSpace","getClassName","_lastXRViewerPose","pose","trackingState","emulatedPosition","orientation_1","pos","views","currentRig","isLeftCamera","isRightCamera","_isRightCamera","_isLeftCamera","multiplyInPlace","projectionMatrix","_projectionMatrix","toggleProjectionMatrixHandInPlace","renderTargetTexture","_renderingMultiview","_texture","isMultiview","viewCount","newCamera","isRigCamera","rigParent","removedCamera","referencedMat","poseMat","transformMat","_ScaleReadOnly","toggleModelMatrixHandInPlace","XRRigidTransform","getOffsetReferenceSpace","WebXRDefaultExperienceOptions","WebXRDefaultExperience","CreateAsync","disableDefaultUI","uiOptions","renderTarget","optionalFeatures","enterExitUI","xrHelper","baseExperience","ignoreNativeCameraTransformation","input","controllerOptions","inputOptions","disablePointerSelection","pointerSelectionOptions","pointerSelection","featuresManager","enableFeature","useStablePlugins","disableTeleportation","teleportation","disableNearInteraction","outputCanvasOptions","setHelperAsync","error","WebXREnterExitUIButton","element","sessionMode","referenceSpaceType","activeButton","WebXREnterExitUIOptions","WebXREnterExitUI","_activeButton","_buttons","activeButtonChangedObservable","_onSessionGranted","evt","_helper","_enterXRWithButtonIndex","overlay","document","createElement","classList","style","cssText","ignoreSessionGrantedEvent","window","location","protocol","hostname","customButtons","css","SVGSVGElement","appendChild","createTextNode","getElementsByTagName","hmdBtn_1","className","title","display","_updateButtons","renderCanvas","getInputElement","parentNode","helper","supportedPromises","_renderTarget","btn","isSessionSupportedAsync","onStateChangedObservable","supported","onclick","ui","idx","e_1","prevTitle","exitXRAsync","trys","enterXRAsync","requiredFeatures","onError","contains","removeChild","b","WebXRExperienceHelper","_nonVRCamera","_attachedToElement","_spectatorCamera","_originalSceneAutoClear","_supported","_spectatorMode","onInitialXRPoseSetObservable","initializeAsync","_setState","sessionCreationOptions","baseLayer","xrRenderState","_extendXRSessionInitObject","initializeSessionAsync","setReferenceSpaceTypeAsync","depthFar","maxZ","depthNear","getEnabledFeature","updateRenderState","runXRRenderLoop","autoClear","inputs","attachedToElement","detachControl","_nonXRToXRCamera","onXRSessionEnded","attachControl","noPreventDefault","setPosition","enableSpectatorMode","updateSpectatorCamera_1","absoluteRotation","onStateChanged","activeCameras","onAfterRenderCameraObservable","framebufferDimensionsObject","removeCallback","val","WebXRFeatureName","ANCHOR_SYSTEM","BACKGROUND_REMOVER","HIT_TEST","MESH_DETECTION","PHYSICS_CONTROLLERS","PLANE_DETECTION","POINTER_SELECTION","TELEPORTATION","FEATURE_POINTS","HAND_TRACKING","IMAGE_TRACKING","NEAR_INTERACTION","DOM_OVERLAY","MOVEMENT","LIGHT_ESTIMATION","EYE_TRACKING","WALKING_LOCOMOTION","LAYERS","WebXRFeaturesManager","_features","getEnabledFeatures","featureName","feature","featureImplementation","attachFeature","detachFeature","AddWebXRFeature","constructorFunction","version","stable","_AvailableFeatures","latest","ConstructFeature","GetAvailableFeatures","GetAvailableVersions","GetLatestVersionOfFeature","GetStableVersionOfFeature","disableFeature","moduleOptions","attachIfPossible","required","versionToLoad","conflictingFeature","_ConflictingFeatures","constructed","dependsOn","dependentsFound","every","join","xrSessionInit","enabledFeatures","_i","enabledFeatures_1","nativeName","extended","getXRSessionInitExtension","WebXRInput","_onInputSourcesChange","_addAndRemoveControllers","added","removed","_sessionEndedObserver","_sessionInitObserver","_frameObserver","customControllersRepositoryURL","disableOnlineControllerRepository","addInputs","removeInputs","sources","addInputs_1","forceControllerProfile","forceInputProfile","doNotLoadControllerMesh","doNotLoadControllerMeshes","disableMotionControllerAnimation","disableControllerAnimation","keepControllers","removedControllers","idCount","WebXRInputSource","_disposed","onMeshLoadedObservable","_uniqueId","gripSpace","success","gripIfAvailable","object","getPose","targetRaySpace","_lastXRPose","pose_1","orientation_2","WebXRLayerWrapper","getWidth","getHeight","layerType","createRenderTargetTextureProvider","fixedFoveation","isFixedFoveationSupported","max","min","WebXRManagedOutputCanvasOptions","GetDefaults","engine","defaults","canvasOptions","antialias","depth","stencil","isStencilEnable","multiview","framebufferScaleFactor","newCanvasCssStyle","WebXRManagedOutputCanvas","_canvas","_engine","_xrLayerWrapper","onXRLayerInitObservable","canvasElement","_setManagedOutputCanvas","canvas","_addCanvas","_removeCanvas","createLayer","XRWebGLLayer","canvasContext","makeXRCompatible","getRenderingCanvas","body","_setCanvasSize","setSize","_originalCanvasSize","offsetWidth","offsetHeight","WebXRLayerRenderTargetTextureProvider","_renderTargetTextures","_createInternalTexture","textureSize","texture","internalTexture","_hardwareTexture","_gl","isReady","framebuffer","colorTexture","depthStencilTexture","renderTargetWrapper","_framebuffer","_colorTextureArray","setTexture","_depthStencilTextureArray","_depthStencilTexture","disableRescaling","XRWebGLBinding","skipInitialClear","_framebufferDimensions","rtt","WebXRSessionManager","currentTimestamp","defaultHeightCompensation","onXRReferenceSpaceChanged","inXRFrameLoop","inXRSession","_onEngineDisposedObserver","_referenceSpace","newReferenceSpace","_sessionMode","end","_baseLayerRTTProvider","_xrNavigator","native","xrSessionMode","requestSession","restoreDefaultFramebuffer","customAnimationFrameRequester","_renderLoop","isNative","_baseLayerWrapper","once","IsSessionSupportedAsync","requestAnimationFrame","renderFunction","timestamp","cancelAnimationFrame","_frameHandler","requestReferenceSpace","rejectionReason","heightCompensation","viewerReferenceSpace","updateRenderStateAsync","_setBaseLayerWrapper","baseLayerWrapper","functionToUse","isSessionSupported","supportsSession","returnValue","frameRate","supportedFrameRates","updateTargetFrameRate","rate","ignoreIfNotInSession","WebXRState","WebXRTrackingState","WebXRWebGLLayerWrapper","WebXRWebGLLayerRenderTargetTextureProvider","_layer","xrViewport","getViewport","layerWidth","layerHeight","_rtt","AbstractScene","rootNodes","cameras","lights","skeletons","particleSystems","animationGroups","multiMaterials","materials","morphTargetManagers","geometries","transformNodes","actionManagers","textures","_environmentTexture","postProcesses","AddParser","parser","_BabylonFileParsers","GetParser","AddIndividualParser","_IndividualBabylonFileParsers","GetIndividualParser","Parse","jsonData","container","rootUrl","parserName","hasOwnProperty","getNodes","nodes","KeepAssets","arguments","InstantiatedEntries","AssetContainer","_wasAddedToScene","_onContextRestoredObserver","onContextRestoredObservable","_rebuild","rebuild","_g","instantiateModelsToScene","nameFunction","cloneMaterials","convertionMap","storeMap","alreadySwappedSkeletons","alreadySwappedMaterials","doNotInstantiate","onClone","source","clonedMesh","morphTargetManager","oldMorphTargetManager","numTargets","oldTarget","getTarget","newTarget","newOne","instantiateHierarchy","sourceMaterial","swap","multi","subMaterials","addMultiMaterial","addMaterial","s","isAnInstance","copy","bone","_linkedTransformNode","addAllToScene","addToScene","environmentTexture","_serializableComponents","addFromContainer","addCamera","addLight","addMesh","addSkeleton","addAnimation","addAnimationGroup","addMorphTargetManager","addGeometry","addTransformNode","addActionManager","addTexture","reflectionProbes","addReflectionProbe","removeAllFromScene","removeFromScene","removeFromContainer","removeCamera","removeLight","removeMesh","removeSkeleton","removeAnimation","removeAnimationGroup","removeMultiMaterial","removeMaterial","removeMorphTargetManager","removeGeometry","removeTransformNode","removeActionManager","removeTexture","removeReflectionProbe","slice","_moveAssets","sourceAssets","targetAssets","keepAssets","sourceAssets_1","asset","move","keepAssets_1","_parentContainer","moveAllFromScene","key","createRootMesh","addChild","mergeAnimationsTo","animatables","targetConverter","_targetConverter","target","targetProperty","split","getTransformNodeByName","getMorphTargetByName","getNodeByName","nodeInAC","nodeInScene","_loop_1","animationInAC","animationsWithSameProperty_1","animationInScene","animationWithSameProperty","newAnimationGroups","animationGroupInAC","animatable","stop","fromFrame","toFrame","loopAnimation","speedRatio","onAnimationEnd","onAnimationLoop","stopAnimation","WebXRHitTestLegacy","_direction","_mat","_onSelectEnabled","_origin","lastNativeXRHitResults","onHitTestResultObservable","_onHitTestResults","xrResults","mats","mat","hitMatrix","worldParentNode","xrHitResult","transformationMatrix","_onSelect","XRHitTestWithSelectEvent","XRHitTestWithRay","xrRay","requestHitTest","results","filterFunction","targetRayPose","targetRay","XRRay","testOnPointerDownOnly","subtractInPlace","anchorIdProvider","WebXRAnchorSystem","_lastFrameDetected","Set","_trackedAnchors","_futureAnchors","onAnchorAddedObservable","onAnchorRemovedObservable","onAnchorUpdatedObservable","_referenceSpaceForFrameAnchors","_populateTmpTransformation","addAnchorPointUsingHitTestResultAsync","hitTestResult","nativeAnchor_1","error_1","createAnchor","nativeAnchor","resolved","submitted","xrTransformation","addAnchorAtPositionAndRotationAsync","forceCreateInCurrentFrame","xrAnchor","_createAnchorAtTransformation","doNotRemoveAnchorsOnSessionEnded","trackedAnchors","anchor","has","idxTracker_1","_findIndexInAnchorArray","_updateAnchorWithXRFrame","attachedNode","newAnchor","delete","futureAnchor","anchorSpace","planeIdProvider","WebXRPlaneDetector","_detectedPlanes","onPlaneAddedObservable","onPlaneRemovedObservable","onPlaneUpdatedObservable","_init","doNotRemovePlanesOnSessionEnded","XRPlane","detectedPlanes","worldInformation","planeIdx","plane","xrPlane","lastChangedTime","_findIndexInPlaneArray","_updatePlaneWithXRPlane","newPlane","polygonDefinition","internalInit","preferredDetectorOptions","trySetPreferredPlaneDetectorOptions","updateWorldTrackingState","planeDetectionState","polygon","xrPoint","rightHandedSystem","planeSpace","WebXRBackgroundRemover","onBackgroundStateChangedObservable","_setBackgroundState","ignoreEnvironmentHelper","environmentHelperRemovalFlags","skyBox","backgroundSkybox","ground","backgroundPlane","backgroundHelper","backgroundMeshes","IWebXRControllerPhysicsOptions","WebXRControllerPhysics","isPhysicsEnabled","physicsProperties","useControllerMesh","_createPhysicsImpostor","impostor","controllerMesh","oldPos","oldRotation","_debugMode","_delta","_lastTimestamp","impostorSize","impostorMesh","diameterX","diameterY","diameterZ","_enablePhysicsDebug","addController","enableHeadsetImpostor","params","headsetImpostorParams","restitution","_headsetMesh","_headsetImpostor","getHeadsetImpostor","getImpostorForController","setPhysicsProperties","newProperties","linearVelocity","lv","setLinearVelocity","angularVelocity","av","setAngularVelocity","comparedPosition","comparedQuaternion","equalsWithEpsilon","conjugateInPlace","len","angle","WebXRHitTest","_tmpMat","_tmpPos","_tmpQuat","_initHitTestSource","offsetRay","hitTestOptions","space","useReferenceSpace","entityTypes","requestHitTestSource","hitTestSource","_xrHitTestSource","cancel","autoCloneTransformation","paused","disablePermanentHitTest","enableTransientHitTest","transientOffsetRay","requestHitTestSourceForTransientInput","transientHitTestProfile","hitSource","_transientXrHitTestSource","getHitTestResults","_processWebXRHitTestResult","getHitTestResultsForTransientInput","resultsPerInputSource","hitTestResults","quat","isTransient","WebXRFeaturePointSystem","_featurePointCloud","onFeaturePointsAddedObservable","onFeaturePointsUpdatedObservable","featurePointCloud","featurePointRawData","numberOfFeaturePoints","updatedFeaturePoints","addedFeaturePoints","rawIndex","confidenceValue","trySetFeaturePointCloudEnabled","ImageTrackingScoreStatus","meshIdProvider","WebXRMeshDetector","_detectedMeshes","Map","onMeshAddedObservable","onMeshRemovedObservable","onMeshUpdatedObservable","trySetMeshDetectorEnabled","doNotRemoveMeshesOnSessionEnded","detectedMeshes_1","detectedMeshes","toRemove_1","vertexData","xrMesh","_updateVertexDataWithXRMesh","partialVertexData","trySetPreferredMeshDetectorOptions","convertCoordinateSystems","positions","normals","indices","meshSpace","WebXRImageTracking","onUntrackableImageFoundObservable","onTrackableImageFoundObservable","onTrackedImageUpdatedObservable","_trackableScoreStatus","NotReceived","_trackedImages","getTrackedImageById","trackedImage","originalBitmap","close","promises","images","image","src","_createImageBitmapFromSource","_originalTrackingRequest","widthInMeters","estimatedRealWorldWidth","trackedImages","getImageTrackingResults","Waiting","imageTrackedResults_1","changed","imageIndex","imageObject","xrTrackingResult","realWorldWidth","measuredWidthInMeters","imageSpace","emulated","_checkScoresAsync","imageScores","getTrackedImageScores","ratio","Received","WebXRDomOverlay","_domOverlayType","_beforeXRSelectListener","_element","domOverlayState","supressXRSelectEvents","ev","preventDefault","selectedElement","querySelector","domOverlay","root","WebXRControllerMovement","_currentRegistrationConfigurations","_movementDirection","_tmpRotationMatrix","_tmpTranslationDirection","_tmpMovementTranslation","registeredComponents","initController_1","registration","allowedComponentTypes","componentType","componentOfType","mainComponentOnly","mainComponent","componentSelectionPredicate","registeredComponent","registrationConfiguration","axisChangedHandler","_movementState","_featureContext","_xrInput","buttonChangedhandler","isArray","customRegistrationConfigurations","REGISTRATIONS","default","movementEnabled","movementOrientationFollowsViewerPose","movementSpeed","movementThreshold","rotationSpeed","rotationThreshold","moveX","moveY","rotateX","rotateY","followsPose","threshold","rotationY","cameraRotation","multiply","_computeLocalCameraSpeed","cameraDirection","movementState","featureContext","WebXRLightEstimation","_canvasContext","_reflectionCubeMap","_xrLightEstimate","_xrLightProbe","_xrWebGLBinding","_lightDirection","negateInPlace","_lightColor","_intensity","_sphericalHarmonics","_cubeMapPollTime","Date","now","_lightEstimationPollTime","_reflectionCubeMapTextureSize","directionalLight","onReflectionCubeMapUpdatedObservable","_updateReflectionCubeMap","cubeMapPollInterval","lp","_getXRGLBinding","getReflectionCubeMap","resetTextureCache","isCube","invertY","_useSRGBBuffer","reflectionFormat","format","generateMipMaps","samplingMode","_cachedWrapU","_cachedWrapV","_getCanvasContext","markAllMaterialsAsDirty","createDirectionalLightSource","intensity","falloffType","lightColor","lightDirection","lightIntensity","sphericalHarmonics","context_1","preferredReflectionFormat","requestLightProbe","xrLightProbe","disableCubeMapReflection","coordinatesMode","setSceneEnvironmentTexture","detached","lightEstimationPollInterval","getLightEstimate","primaryLightIntensity","rhsFactor","disableVectorReuse","diffuse","primaryLightDirection","updateFromFloatsArray","sphericalHarmonicsCoefficients","disableSphericalPolynomial","sphericalPolynomial","updateFromHarmonics","WebXREyeTracking","onEyeTrackingStartedObservable","onEyeTrackingEndedObservable","onEyeTrackingFrameUpdateObservable","_eyeTrackingStartListener","_latestEyeSpace","gazeSpace","_gazeRay","_eyeTrackingEndListener","getEyeGaze","CircleBuffer","numSamples","initializer","_samples","_idx","at","FirstStepDetector","_entropy","onFirstStepDetected","posX","posY","forwardX","forwardY","_entropyDecayFactor","_entropyThreshold","samePointIdx","_samePointCheckStartIdx","_samePointSquaredDistanceThreshold","apexDistSquared","apexIdx","distSquared","_apexSquaredDistanceThreshold","apex","axis","subtract","vec","sumSquaredProjectionDistances","lengthSquared","_squaredProjectionDistanceThreshold","forwardVec","axisVec","isApexLeft","leftApex","rightApex","scaleAndAddToRef","_axisToApexShrinkFactor","_axisToApexExtendFactor","currentPosition","currentStepDirection","floor","WalkingTracker","_leftApex","_rightApex","_currentPosition","_axis","_axisLength","_forward","_steppingLeft","_t","_maxT","_maxTPosition","_vitality","onMovement","onFootfall","_reset","steppingLeft","_updateTAndVitality","priorT","projDistSquared","_vitalityThreshold","deltaT","foot","Walker","_detector","_walker","_movement","_millisecondsSinceLastUpdate","_MillisecondsPerUpdate","movementThisFrame","WebXRWalkingLocomotion","_up","_position","_sessionManager","locomotionTarget","_isLocomotionTargetWebXRCamera","_locomotionTarget","handednessScalar","WebXRCompositionLayerWrapper","createRTTProvider","WebXRCompositionLayerRenderTargetTextureProvider","_lastSubImages","_compositionLayer","_getRenderTargetForSubImage","subImage","lastSubImage","eyeIndex","textureWidth","textureHeight","_getSubImageForEye","getSubImage","_setViewportForSubImage","WebXRProjectionLayerWrapper","xrGLBinding","WebXRProjectionLayerRenderTargetTextureProvider","_projectionLayer","_getSubImageForView","getViewSubImage","defaultXRWebGLLayerInit","defaultXRProjectionLayerInit","textureType","colorFormat","depthFormat","WebXRLayers","_existingLayers","_glContext","projectionLayerInit","projectionLayerMultiview","preferMultiviewOnInit","getCaps","addXRSessionLayer","createProjectionLayer","createXRWebGLLayer","projLayer","wrappedLayer","setXRSessionLayers","wrappedLayers","renderStateInit","renderState","layers","WebXRGenericHandController","GenericHandSelectGraspProfile","grasp","WebXRMicrosoftMixedRealityController","MixedRealityProfile","_mapping","defaultButton","unpressedNodeName","pressedNodeName","defaultAxis","labelAnchorNodeName","MODEL_LEFT_FILENAME","MODEL_RIGHT_FILENAME","MODEL_BASE_URL","buttonMap_1","buttonMeshName","buttonMesh","pressedMesh","unpressedMesh","comp","axisMesh","axisValues","xr_standard_trigger_pressed","xr_standard_squeeze_pressed","xr_standard_touchpad_pressed","xr_standard_touchpad_xaxis_pressed","xr_standard_touchpad_yaxis_pressed","xr_standard_touchpad_xaxis_touched","xr_standard_touchpad_yaxis_touched","xr_standard_touchpad_axes_touched","xr_standard_thumbstick_pressed","xr_standard_thumbstick_xaxis_pressed","xr_standard_thumbstick_yaxis_pressed","WebXROculusTouchMotionController","_legacyMapping","_forceLegacyControllers","OculusTouchLayouts","_isQuest","QUEST_MODEL_BASE_URL","isQuest","triggerDirection","_modelRootNode","userAgent","thumbrest","WebXRHTCViveMotionController","HTCViveLayout","MODEL_FILENAME","menu","NativeXRFrame","_nativeImpl","_xrTransform","_xrPose","_xrPoseVectorData","_imageTrackingResults","baseSpace","getPoseData","buffer","_InternalNodeDataInfo","_doNotSerialize","_isDisposed","_sceneRootNodesIndex","_isEnabled","_isParentEnabled","_isReady","_onEnabledStateChangedObservable","_onClonedObservable","Node","_isDirty","_nodeDataStorage","metadata","_ranges","onReady","_currentRenderId","_parentUpdateId","_childUpdateId","_waitingParentId","_cache","_parentNode","_children","_worldMatrix","_worldMatrixDeterminant","_worldMatrixDeterminantIsDirty","_animationPropertiesOverride","_isNode","_onDisposeObserver","_behaviors","getUniqueId","_initCache","AddNodeConstructor","constructorFunc","_NodeConstructors","Construct","doNotSerialize","previousParentNode","_addToSceneRootNodes","_removeFromSceneRootNodes","_syncParentEnabledState","lastIdx","animationPropertiesOverride","addBehavior","behavior","attachImmediately","isLoading","onDataLoadedObservable","removeBehavior","getBehaviorByName","getRenderId","_getWorldMatrixDeterminant","determinant","updateCache","isSynchronized","_updateCache","_getActionManagerForTrigger","trigger","initialCall","ignoreParentClass","_isSynchronized","_markSyncedWithParent","isSynchronizedWithParent","completeCheck","markAsDirty","property","checkAncestors","isDescendantOf","ancestor","_getDescendants","directDescendantsOnly","item","getDescendants","cullingStrategy","_setReady","getAnimationByName","animation","createAnimationRange","from","to","_AnimationRangeFactory","nAnimations","createRange","deleteAnimationRange","deleteFrames","deleteRange","getAnimationRange","getAnimationRanges","animationRanges","loop","range","serializeAnimationRanges","serializationRanges","name_1","localRange","doNotRecurse","disposeMaterialAndTextures","nodes_1","onEnabledStateChangedObservable","onClonedObservable","ParseAnimationRanges","parsedNode","ranges","getHierarchyBoundingVectors","includeDescendants","incrementRenderId","thisAbstractMesh","boundingBox","minimumWorld","maximumWorld","descendants_1","childMesh","getTotalVertices","minBox","maxBox","Scene","_inputManager","cameraToUseForPointers","_isScene","_blockEntityCollection","autoClearDepthAndStencil","clearColor","ambientColor","environmentIntensity","_forceWireframe","_skipFrustumClipping","_forcePointsCloud","animationsEnabled","useConstantAnimationDeltaTime","hoverCursor","defaultCursor","doNotHandleCursors","preventDefaultOnPointerDown","preventDefaultOnPointerUp","disableOfflineSupportExceptionRules","_onBeforeRenderObserver","onAfterRenderObservable","_onAfterRenderObserver","onBeforeAnimationsObservable","onAfterAnimationsObservable","onBeforeDrawPhaseObservable","onAfterDrawPhaseObservable","onReadyObservable","onBeforeCameraRenderObservable","_onBeforeCameraRenderObserver","onAfterCameraRenderObservable","_onAfterCameraRenderObserver","onBeforeActiveMeshesEvaluationObservable","onAfterActiveMeshesEvaluationObservable","onBeforeParticlesRenderingObservable","onAfterParticlesRenderingObservable","onNewCameraAddedObservable","onCameraRemovedObservable","onNewLightAddedObservable","onLightRemovedObservable","onNewGeometryAddedObservable","onGeometryRemovedObservable","onNewTransformNodeAddedObservable","onTransformNodeRemovedObservable","onNewMeshAddedObservable","onNewSkeletonAddedObservable","onSkeletonRemovedObservable","onNewMaterialAddedObservable","onNewMultiMaterialAddedObservable","onMaterialRemovedObservable","onMultiMaterialRemovedObservable","onNewTextureAddedObservable","onTextureRemovedObservable","onBeforeRenderTargetsRenderObservable","onAfterRenderTargetsRenderObservable","onBeforeStepObservable","onAfterStepObservable","onActiveCameraChanged","onBeforeRenderingGroupObservable","onAfterRenderingGroupObservable","onMeshImportedObservable","onAnimationFileImportedObservable","_registeredForLateAnimationBindings","skipPointerMovePicking","skipPointerDownPicking","skipPointerUpPicking","onPrePointerObservable","onPreKeyboardObservable","onKeyboardObservable","_useRightHandedSystem","_timeAccumulator","_currentStepId","_currentInternalStep","_fogEnabled","_fogMode","FOGMODE_NONE","fogColor","fogDensity","fogStart","fogEnd","needsPreviousWorldMatrices","_shadowsEnabled","_lightsEnabled","_texturesEnabled","physicsEnabled","particlesEnabled","spritesEnabled","_skeletonsEnabled","lensFlaresEnabled","collisionsEnabled","gravity","postProcessesEnabled","renderTargetsEnabled","dumpNextRenderTargets","customRenderTargets","importedMeshesFiles","probesEnabled","_meshesForIntersections","proceduralTexturesEnabled","_totalVertices","_activeIndices","_activeParticles","_activeBones","_animationTime","animationTimeScale","_renderId","_frameId","_executeWhenReadyTimeoutId","_intermediateRendering","_defaultFrameBufferCleared","_viewUpdateFlag","_projectionUpdateFlag","_toBeDisposed","_activeRequests","_pendingData","dispatchAllSubMeshesOfActiveMeshes","_activeMeshes","_processedMaterials","_renderTargets","_materialsRenderTargets","_activeParticleSystems","_activeSkeletons","_softwareSkinnedMeshes","_activeAnimatables","_transformMatrix","requireLightSorting","_components","_transientComponents","_beforeCameraUpdateStage","_beforeClearStage","_beforeRenderTargetClearStage","_gatherRenderTargetsStage","_gatherActiveCameraRenderTargetsStage","_isReadyForMeshStage","_beforeEvaluateActiveMeshStage","_evaluateSubMeshStage","_preActiveMeshStage","_cameraDrawRenderTargetStage","_beforeCameraDrawStage","_beforeRenderTargetDrawStage","_beforeRenderingGroupDrawStage","_beforeRenderingMeshStage","_afterRenderingMeshStage","_afterRenderingGroupDrawStage","_afterCameraDrawStage","_afterRenderTargetDrawStage","_afterRenderStage","_pointerMoveStage","_pointerDownStage","_pointerUpStage","_geometriesByUniqueId","_defaultMeshCandidates","_defaultSubMeshCandidates","_preventFreeActiveMeshesAndRenderingGroups","_activeMeshesFrozen","_activeMeshesFrozenButKeepClipping","_skipEvaluateActiveMeshesCompletely","_allowPostProcessClearColor","getDeterministicFrameTime","getTimeStep","_blockMaterialDirtyMechanism","_perfCollector","onComputePressureChanged","fullOptions","useGeometryUniqueIdsMap","useMaterialMeshMap","useClonedMeshMap","virtual","_virtualScenes","scenes","_uid","_renderingManager","postProcessManager","_createUbo","_imageProcessingConfiguration","setDefaultCandidateProviders","onNewSceneAddedObservable","_computePressureObserver","cpuUtilizationThresholds","cpuSpeedThresholds","observe","DefaultMaterialFactory","CollisionCoordinatorFactory","unTranslatedPointer","bindEyePosition","effect","variableName","isVector3","eyePosition","_forcedViewPosition","_mirroredCameraPosition","devicePosition","invertNormal","setFloat3","setVector4","finalizeSceneUbo","ubo","getSceneUniformBuffer","updateFloat4","setStepId","newStepId","getStepId","getInternalStep","prePassRenderer","defaultRT","_activeCamera","_defaultMaterial","_collisionCoordinator","_frustumPlanes","_registerTransientComponents","register","_addComponent","serializableComponent","serialize","_getComponent","_getDefaultMeshCandidates","_getDefaultSubMeshCandidates","getActiveMeshCandidates","getActiveSubMeshCandidates","getIntersectingSubMeshCandidates","getCollidingSubMeshCandidates","getCachedMaterial","_cachedMaterial","getCachedEffect","_cachedEffect","getCachedVisibility","_cachedVisibility","isCachedMaterialInvalid","visibility","getActiveIndices","getActiveParticles","getActiveBones","getActiveMeshes","getAnimationRatio","_animationRatio","getFrameId","setSceneUniformBuffer","createSceneUniformBuffer","pickResult","doubleTap","isPointerCaptured","attachUp","attachDown","attachMove","checkRenderTargets","hardwareInstancedRendering","hasThinInstances","instancedArrays","instances","defaultMaterial","_storeEffectOnSubMeshes","getMaterial","hasRenderTargetTextures","getRenderTargetTextures","concatWithNoDuplicate","areAllEffectsReady","isReadyForRendering","delayLoadState","resetCachedMaterial","registerBeforeRender","unregisterBeforeRender","registerAfterRender","unregisterAfterRender","_executeOnceBeforeRender","execFunc","executeOnceBeforeRender","_addPendingData","_removePendingData","wasLoading","getWaitingItemsCount","executeWhenReady","_checkIsReady","whenReadyAsync","resetLastAnimationTimeFrame","_animationTimeLast","getViewMatrix","_viewMatrix","getProjectionMatrix","setTransformMatrix","viewL","projectionL","viewR","projectionR","_multiviewSceneUbo","updateFlag","useUbo","_updateMultiviewUbo","_sceneUbo","updateMatrix","sceneUbo","addUniform","UniqueId","newMesh","recursive","_resyncLightSources","_invalidateMesh","newTransformNode","_indexInSceneTransformNodesArray","lastNode","_executeActiveContainerCleanup","_removeLightSource","sortLightsByPriority","index2","removeParticleSystem","animationName","targetMask","_indexInSceneMaterialArray","lastMaterial","newLight","lightSources","sort","newSkeleton","addParticleSystem","newParticleSystem","newAnimation","newAnimationGroup","newMultiMaterial","newMaterial","newMorphTargetManager","newGeometry","newActionManager","newTexture","switchActiveCamera","setActiveCameraById","getCameraById","setActiveCameraByName","getCameraByName","getAnimationGroupByName","getMaterialByUniqueID","getMaterialById","getLastMaterialById","allowMultiMaterials","getMaterialByName","getTextureByUniqueId","getTextureByName","getCameraByUniqueId","getBoneById","skeletonIndex","boneIndex","getBoneByName","getLightByName","getLightById","getLightByUniqueId","getParticleSystemById","getGeometryById","_getGeometryByUniqueId","pushGeometry","geometry","lastGeometry","getGeometries","getMeshById","getMeshesById","getTransformNodeById","getTransformNodeByUniqueId","getTransformNodesById","getMeshByUniqueId","getLastMeshById","getLastEntryById","getNodeById","transformNode","light","getLastSkeletonById","getSkeletonByUniqueId","getSkeletonById","getSkeletonByName","getMorphTargetManagerById","getMorphTargetById","managerIndex","getPostProcessByName","postProcessIndex","postProcess","isActiveMesh","addExternalData","_externalData","getExternalData","getOrAddExternalDataWithFactory","factory","getOrAddWithFactory","removeExternalData","_evaluateSubMesh","subMesh","initialMesh","hasInstances","isInFrustum","dispatch","freeProcessedMaterials","freeActiveMeshes","freeRenderingGroups","blockfreeActiveMeshesAndRenderingGroups","renderList","_isInIntermediateRendering","freezeActiveMeshes","skipEvaluateActiveMeshes","onSuccess","freezeMeshes","keepFrustumCulling","updateTransformMatrix","_evaluateActiveMeshes","_freeze","unfreezeActiveMeshes","_isActive","_unFreeze","snapshotRendering","snapshotRenderingMode","len_1","psLength","animate","_currentLODIsUpToDate","isBlocked","addCount","hasAZeroComponent","actionManager","hasSpecificTriggers2","pushNoDuplicate","meshToRender","customLODSelector","getLOD","_currentLOD","billboardMode","_preActivate","layerMask","_activate","_actAsRegularMesh","_onlyForInstances","_activeMesh","_postActivate","particleIndex","particleSystem","isStarted","emitter","dispatchParticles","prepare","computeBonesUsingShaders","leftCamera","_rigCameras","rightCamera","_bindFrameBuffer","_multiviewTexture","_currentFrameBufferIsDefaultFrameBuffer","_clearFrameBuffer","onClearObservable","hasObservers","_cleared","_clear","_renderForCamera","bindFrameBuffer","_skipRendering","setViewport","prePass","softwareSkinnedMeshIndex","applySkeleton","isRenderTarget","needRebind","renderIndex","_shouldRender","hasSpecialRenderTargetCamera","render","currentRenderPassId","renderPassId","_prepareFrame","_h","_j","_k","_finalizeFrame","isIntermediate","_processSubCameras","_createMultiviewUbo","_useMultiviewToSingleView","_renderMultiviewToSingleView","_checkIntersections","actionIndex","actions","parameters","getTriggerParameter","otherMesh_1","areIntersecting","intersectsMesh","usePreciseIntersection","currentIntersectionInProgress","_intersectionsInProgress","_executeCurrent","hasSpecificTrigger","parameter","parameterMesh","_advancePhysicsEngineStep","step","_animate","isDeterministicLockStep","deltaTime","MinDeltaTime","MaxDeltaTime","defaultFrameTime","defaultFPS","stepsTaken","maxSubSteps","getLockstepMaxSteps","internalSteps","forceWireframe","forcePointsCloud","_checkCameraRenderTarget","resetDrawCache","passId","updateCameras","ignoreAnimations","fetchNewFrame","processTrigger","cameraIndex","currentActiveCamera","customIndex","afterRender","freezeMaterials","freeze","unfreezeMaterials","unfreeze","beforeRender","stopAllAnimations","activeRequests_1","abort","unobserve","index_1","_disposeList","wipeCaches","items","itemsCopy_1","clearCachedVertexData","clearCachedData","cleanCachedTextureBuffer","baseTexture","_buffer","getWorldExtends","filterPredicate","infiniteDistance","createPickingRay","world","cameraViewSpace","createPickingRayToRef","enableDistantPicking","createPickingRayInCameraSpace","createPickingRayInCameraSpaceToRef","fastCheck","trianglePredicate","_pickingUnavailable","pickWithBoundingInfo","multiPick","multiPickWithRay","setPointerOverMesh","getPointerOverMesh","_rebuildGeometries","spriteManagers","_rebuildTextures","_getByTags","list","tagsQuery","listByTags","getMeshesByTags","getCamerasByTags","getLightsByTags","getMaterialByTags","getTransformNodesByTags","setRenderingOrder","opaqueSortCompareFn","alphaTestSortCompareFn","transparentSortCompareFn","setRenderingAutoClearDepthStencil","autoClearDepthStencil","getAutoClearDepthStencilSetup","flag","_loadFile","fileOrUrl","onProgress","useOfflineSupport","useArrayBuffer","onOpened","request","offlineProvider","onCompleteObservable","_loadFileAsync","exception","_requestFile","url","_requestFileAsync","_readFile","file","_readFileAsync","getPerfCollector","FOGMODE_EXP","FOGMODE_EXP2","FOGMODE_LINEAR","setActiveCameraByID","getLastMaterialByID","getMaterialByID","getTextureByUniqueID","getCameraByID","getCameraByUniqueID","getBoneByID","getLightByID","getLightByUniqueID","getParticleSystemByID","getGeometryByID","getMeshByID","getMeshesByID","getTransformNodeByID","getTransformNodeByUniqueID","getTransformNodesByID","getMeshByUniqueID","getLastMeshByID","getLastEntryByID","getNodeByID","getLastSkeletonByID","SceneComponentConstants","NAME_EFFECTLAYER","NAME_LAYER","NAME_LENSFLARESYSTEM","NAME_BOUNDINGBOXRENDERER","NAME_PARTICLESYSTEM","NAME_GAMEPAD","NAME_SIMPLIFICATIONQUEUE","NAME_GEOMETRYBUFFERRENDERER","NAME_PREPASSRENDERER","NAME_DEPTHRENDERER","NAME_DEPTHPEELINGRENDERER","NAME_POSTPROCESSRENDERPIPELINEMANAGER","NAME_SPRITE","NAME_SUBSURFACE","NAME_OUTLINERENDERER","NAME_PROCEDURALTEXTURE","NAME_SHADOWGENERATOR","NAME_OCTREE","NAME_PHYSICSENGINE","NAME_AUDIO","STEP_ISREADYFORMESH_EFFECTLAYER","STEP_BEFOREEVALUATEACTIVEMESH_BOUNDINGBOXRENDERER","STEP_EVALUATESUBMESH_BOUNDINGBOXRENDERER","STEP_PREACTIVEMESH_BOUNDINGBOXRENDERER","STEP_CAMERADRAWRENDERTARGET_EFFECTLAYER","STEP_BEFORECAMERADRAW_PREPASS","STEP_BEFORECAMERADRAW_EFFECTLAYER","STEP_BEFORECAMERADRAW_LAYER","STEP_BEFORERENDERTARGETDRAW_PREPASS","STEP_BEFORERENDERTARGETDRAW_LAYER","STEP_BEFORERENDERINGMESH_PREPASS","STEP_BEFORERENDERINGMESH_OUTLINE","STEP_AFTERRENDERINGMESH_PREPASS","STEP_AFTERRENDERINGMESH_OUTLINE","STEP_AFTERRENDERINGGROUPDRAW_EFFECTLAYER_DRAW","STEP_AFTERRENDERINGGROUPDRAW_BOUNDINGBOXRENDERER","STEP_BEFORECAMERAUPDATE_SIMPLIFICATIONQUEUE","STEP_BEFORECAMERAUPDATE_GAMEPAD","STEP_BEFORECLEAR_PROCEDURALTEXTURE","STEP_BEFORECLEAR_PREPASS","STEP_BEFORERENDERTARGETCLEAR_PREPASS","STEP_AFTERRENDERTARGETDRAW_PREPASS","STEP_AFTERRENDERTARGETDRAW_LAYER","STEP_AFTERCAMERADRAW_PREPASS","STEP_AFTERCAMERADRAW_EFFECTLAYER","STEP_AFTERCAMERADRAW_LENSFLARESYSTEM","STEP_AFTERCAMERADRAW_EFFECTLAYER_DRAW","STEP_AFTERCAMERADRAW_LAYER","STEP_AFTERRENDER_AUDIO","STEP_GATHERRENDERTARGETS_DEPTHRENDERER","STEP_GATHERRENDERTARGETS_GEOMETRYBUFFERRENDERER","STEP_GATHERRENDERTARGETS_SHADOWGENERATOR","STEP_GATHERRENDERTARGETS_POSTPROCESSRENDERPIPELINEMANAGER","STEP_GATHERACTIVECAMERARENDERTARGETS_DEPTHRENDERER","STEP_POINTERMOVE_SPRITE","STEP_POINTERDOWN_SPRITE","STEP_POINTERUP_SPRITE","Stage","Create","create","registerStep"],"sourceRoot":""}