{"version":3,"file":"js/9469.b3e05bb0.js","mappings":"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","sources":["webpack:///./components/CardList/Items/Model.tsx","webpack:///./components/CardList/Model.tsx","webpack:///./components/QueryPane/index.tsx","webpack:///./components/SMenu/modules/FileTreeItem.tsx","webpack:///./components/SMenu/FileTree.tsx","webpack:///./components/SModal/index.tsx","webpack:///./components/SPagination/index.tsx","webpack:///./views/list/Component.tsx","webpack:///./views/list/modules/ModelEdit.tsx","webpack:///./views/list/modules/Preview.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport { commonStore } from \"~/stores/commonStore\";\r\nimport { validateImage } from \"~/utils/utils\";\r\nimport SIcon from \"~/components/SIcon\";\r\n\r\nconst SelfCard = styled(Card)(({ theme }) => ({\r\n  position: \"relative\",\r\n}));\r\n\r\nconst CardIcon = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  width: \"100%\",\r\n  height: \"90%\",\r\n  \"& i\": {\r\n    fontSize: \"10em\",\r\n    color: \"rgb(255, 208, 129)\",\r\n  },\r\n}));\r\n\r\nconst ActionMenu = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"flex-end\",\r\n  alignItems: \"center\",\r\n  width: \"calc((100% - 32px) / 2)\",\r\n  height: \"9%\",\r\n  // background: \"rgba(0, 0, 0, .2)\",\r\n  position: \"absolute\",\r\n  right: \"16px\",\r\n  zIndex: 100,\r\n  \"& .action-menu-item\": {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: 30,\r\n    height: 30,\r\n    // border: \"2px solid #fff\",\r\n    margin: \"0 5px\",\r\n    borderRadius: \"50%\",\r\n    // \"& i\": {\r\n    //   cursor: \"pointer\",\r\n    //   fontSize: \"18px\",\r\n    //   color: \"#fff\",\r\n    // },\r\n  },\r\n  // \"& .action-menu-item:hover\": {\r\n  //   borderColor: \"#1890ff\",\r\n  //   \"& i\": {\r\n  //     color: \"#1890ff\",\r\n  //   },\r\n  // },\r\n}));\r\n\r\nconst ButtonPane = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  height: \"100%\",\r\n  width: \"calc(100% / 3)\",\r\n  // borderRight: \"1px solid #fff\",\r\n  // \"&:last-child\": {\r\n  //   borderRight: \"none\",\r\n  // },\r\n}));\r\n\r\nconst SelfIconButton = styled(IconButton)(({ theme }) => ({\r\n  width: 40,\r\n  height: 40,\r\n  margin: \"0 15px\",\r\n}));\r\n\r\ntype MenuObj = {\r\n  key: string | number;\r\n  title: string;\r\n  icon?: string;\r\n  type?: string;\r\n};\r\n\r\ntype DataItemObj = {\r\n  id?: string | number;\r\n  pic_key?: string;\r\n  uuid?: string;\r\n  name?: string;\r\n  node_type?: string;\r\n  file_key?: string;\r\n  pid?: string | number;\r\n};\r\n\r\ntype FormatObj = {\r\n  id?: string;\r\n  name?: string;\r\n  count?: string;\r\n  createdTime?: string;\r\n  updatedTime?: string;\r\n  img?: string;\r\n  key?: string;\r\n};\r\n\r\ninterface CardListProps {\r\n  dataItem?: DataItemObj;\r\n  dataIndex?: number;\r\n  ipagenation?: {\r\n    pageNum: number;\r\n    pageSize: number;\r\n    pageSizeOptions?: Array<number>;\r\n  };\r\n  menuList?: Array<MenuObj>;\r\n  sx?: object;\r\n  total?: number;\r\n  keyFormat?: FormatObj;\r\n  moreList?: Array<MenuObj>;\r\n  doubleClick?: Function;\r\n  handleClick?: Function;\r\n  handleChangePage?: (pageNum: number) => void;\r\n  handleChangeRowsPerPage?: (pageSize: number) => void;\r\n  add?: () => void;\r\n}\r\n\r\nconst initMenuList = [\r\n  {\r\n    key: \"preview\",\r\n    title: \"预览\",\r\n    icon: \"icon-3Dyulan-dakai1\",\r\n    type: \"dir-file\",\r\n  },\r\n  {\r\n    key: \"rename\",\r\n    title: \"重命名\",\r\n    icon: \"icon-3Dbianji\",\r\n    type: \"dir-file\",\r\n  },\r\n  {\r\n    key: \"edit\",\r\n    title: \"编辑\",\r\n    icon: \"icon-3Dshezhi\",\r\n    type: \"dir-file\",\r\n  },\r\n  {\r\n    key: \"delete\",\r\n    title: \"删除\",\r\n    icon: \"icon-3Ddel\",\r\n    type: \"dir-file\",\r\n  },\r\n];\r\n\r\nconst defaultFormat = {\r\n  id: \"id\",\r\n  name: \"name\",\r\n  count: \"count\",\r\n  createdTime: \"createdTime\",\r\n  updatedTime: \"updatedTime\",\r\n  img: \"img\",\r\n};\r\nlet count = 0;\r\nconst CardList: React.FC<CardListProps> = ({\r\n  dataItem,\r\n  dataIndex,\r\n  handleClick,\r\n  menuList,\r\n  keyFormat,\r\n  doubleClick,\r\n  moreList,\r\n}) => {\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const [currentItem, setCurrentItem] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const clickItem = (type, record, index) => {\r\n    closeMenu();\r\n    handleClick && handleClick(type, record, index);\r\n  };\r\n\r\n  const activeCard = () => {\r\n    count += 1;\r\n    setTimeout(() => {\r\n      if (count === 1) {\r\n        handleClick && handleClick(dataItem, dataIndex);\r\n      } else if (count === 2) {\r\n        doubleClick && doubleClick(dataItem, dataIndex);\r\n      }\r\n      count = 0;\r\n    }, 300);\r\n  };\r\n\r\n  const renderItem = () => {\r\n    let format = Object.assign(defaultFormat, keyFormat || {});\r\n    let menus = menuList || initMenuList;\r\n    let renderMenuList = menus.filter(\r\n      (menuItem) => menuItem.type.indexOf(dataItem.node_type) !== -1\r\n    );\r\n\r\n    return (\r\n      <SelfCard>\r\n        <CardContent\r\n          sx={{ width: \"100%\", height: \"300px\", userSelect: \"none\" }}\r\n          onClick={activeCard}\r\n        >\r\n          <ActionMenu>\r\n            {renderMenuList.map((item, index) => (\r\n              <ButtonPane key={index}>\r\n                <SelfIconButton\r\n                  title={item.title}\r\n                  color=\"primary\"\r\n                  onClick={(e) => menuClick(e, dataItem, dataIndex, item.key)}\r\n                >\r\n                  <SIcon type={item.icon}></SIcon>\r\n                </SelfIconButton>\r\n                {item.key === \"more\" ? renderMenu(dataItem[format.id]) : null}\r\n              </ButtonPane>\r\n            ))}\r\n          </ActionMenu>\r\n          <Typography\r\n            align=\"left\"\r\n            variant=\"body2\"\r\n            color=\"text.secondary\"\r\n            sx={{\r\n              color: \"#222\",\r\n              fontSize: \"15px\",\r\n              fontWeight: \"bold\",\r\n              width: \"50%\",\r\n              overflow: \"hidden\",\r\n              textOverflow: \"ellipsis\",\r\n              whiteSpace: \"nowrap\",\r\n            }}\r\n          >\r\n            {dataItem[format.name]}\r\n          </Typography>\r\n          <CardIcon>\r\n            {dataItem.node_type === \"file\" ? (\r\n              dataItem[format.img] &&\r\n              validateImage(\r\n                commonStore.prefix +\r\n                  dataItem[format.key] +\r\n                  \"/\" +\r\n                  dataItem[format.img]\r\n              ) ? (\r\n                <img\r\n                  src={`${commonStore.prefix}${dataItem[format.key]}/${\r\n                    dataItem[format.img]\r\n                  }?t=${new Date().getTime()}`}\r\n                  style={{ height: \"80%\" }}\r\n                />\r\n              ) : (\r\n                <img src=\"/static/images/bg.png\" />\r\n              )\r\n            ) : (\r\n              <SIcon type=\"icon-3Dxiangmu\"></SIcon>\r\n            )}\r\n          </CardIcon>\r\n        </CardContent>\r\n      </SelfCard>\r\n    );\r\n  };\r\n\r\n  const renderMenu = (id) => {\r\n    const style = {\r\n      fontSize: \"13px\",\r\n    };\r\n    return (\r\n      <Menu\r\n        id={\"basic-menu\" + id}\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={closeMenu}\r\n        MenuListProps={{\r\n          \"aria-labelledby\": \"basic-button\",\r\n        }}\r\n      >\r\n        {moreList &&\r\n          moreList.map((item, index) => (\r\n            <MenuItem\r\n              sx={style}\r\n              key={index}\r\n              onClick={() => clickItem(item.key, currentItem, index)}\r\n            >\r\n              <i className={\"iconfont \" + item.icon}></i>\r\n              {item.title}\r\n            </MenuItem>\r\n          ))}\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  const menuClick = (event, dataItem, index, key) => {\r\n    if (key === \"more\") {\r\n      showMenu(event, dataItem);\r\n    } else {\r\n      clickItem(key, dataItem, index);\r\n    }\r\n  };\r\n\r\n  const closeMenu = () => {\r\n    setAnchorEl(null);\r\n    setCurrentItem({});\r\n  };\r\n\r\n  const showMenu = (event: React.MouseEvent<HTMLDivElement>, item) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setCurrentItem(item);\r\n  };\r\n\r\n  return renderItem();\r\n};\r\n\r\nexport default CardList;\r\n","import * as React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardActionArea,\r\n  CardMedia,\r\n  Box,\r\n  Paper,\r\n} from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport CardItem from \"./Items/Model\";\r\nimport SPagination from \"~/components/SPagination\";\r\n\r\nconst CardPane = styled(\"div\")(({ theme }) => ({\r\n  padding: \"20px\",\r\n  display: \"grid\",\r\n  flexWrap: \"wrap\",\r\n  gridTemplateColumns: \"repeat(auto-fill, calc((100% - 25px * 3) / 4))\",\r\n  gridGap: \"25px 25px\",\r\n  \"& .projectCardItem\": {\r\n    width: \"100%\",\r\n    maxHeight: 300,\r\n    boxShadow: \"0px 0px 8px 0px rgba(0, 0, 0, 0.08)\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  \"& .activePane\": {\r\n    boxShadow: \"0px 0px 8px 0px rgba(7, 95, 184, 0.46)\",\r\n  },\r\n  \"& .activeIcon\": {\r\n    color: \"#1890ff\",\r\n  },\r\n  \"& .projectCardItem:hover\": {\r\n    boxShadow: \"0px 0px 8px 0px rgba(7, 95, 184, 0.46)\",\r\n    \"& .hover-icon\": {\r\n      color: \"#1890ff\",\r\n    },\r\n  },\r\n  \"& .MuiCardContent-root:last-child\": {\r\n    paddingBottom: \"16px\",\r\n  },\r\n}));\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n  height: \"100%\",\r\n  width: \"100%\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  cursor: \"pointer\",\r\n}));\r\n\r\nconst NoData = styled(\"div\")(({ theme }) => ({\r\n  textAlign: \"center\",\r\n  fontSize: \"14px\",\r\n  padding: \"20px 0\",\r\n  \"& img\": {\r\n    width: 300,\r\n    height: 300,\r\n  },\r\n  \"& p\": {\r\n    margin: 0,\r\n  },\r\n}));\r\n\r\ntype MenuObj = {\r\n  key: string | number;\r\n  title: string;\r\n  icon?: string;\r\n  type?: string;\r\n};\r\n\r\ninterface CardListProps {\r\n  dataSource: Array<any>;\r\n  ipagenation?: {\r\n    pageNum: number;\r\n    pageSize: number;\r\n    pageSizeOptions?: Array<number>;\r\n  };\r\n  menuList?: Array<MenuObj>;\r\n  sx?: object;\r\n  total?: number;\r\n  keyFormat?: object;\r\n  moreList?: Array<MenuObj>;\r\n  doubleClick?: Function;\r\n  handleClick?: Function;\r\n  handleChangePage?: (pageNum: number) => void;\r\n  handleChangeRowsPerPage?: (pageSize: number) => void;\r\n  add?: (evt?: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst CardList: React.FC<CardListProps> = ({\r\n  dataSource,\r\n  handleClick,\r\n  ipagenation,\r\n  handleChangePage,\r\n  handleChangeRowsPerPage,\r\n  add,\r\n  menuList,\r\n  sx,\r\n  total,\r\n  keyFormat,\r\n  doubleClick,\r\n  moreList,\r\n}) => {\r\n  const addMenu = () => {\r\n    add && add();\r\n  };\r\n  return (\r\n    <>\r\n      <CardPane sx={sx}>\r\n        {add ? (\r\n          // <Card onClick={addMenu} className=\"projectCardItem\" title=\"新建文件\">\r\n          //   <CardActionArea sx={{ height: \"100%\" }}>\r\n          //     <CardContent\r\n          //       sx={{\r\n          //         display: \"flex\",\r\n          //         justifyContent: \"center\",\r\n          //         alignItems: \"center\",\r\n          //       }}\r\n          //     >\r\n          //       <CardMedia\r\n          //         component=\"img\"\r\n          //         sx={{ width: \"70%\" }}\r\n          //         image=\"/static/images/add.png\"\r\n          //         alt=\"green iguana\"\r\n          //       />\r\n          //     </CardContent>\r\n          //   </CardActionArea>\r\n          // </Card>\r\n          <Box\r\n            sx={{\r\n              position: \"relative\",\r\n              display: \"flex\",\r\n              height: 300,\r\n              \"& > :not(style)\": {\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n              },\r\n            }}\r\n          >\r\n            <label\r\n              style={{\r\n                cursor: \"pointer\",\r\n                opacity: 0,\r\n                position: \"absolute\",\r\n              }}\r\n            >\r\n              <input\r\n                multiple\r\n                type=\"file\"\r\n                onChange={add}\r\n                accept=\".zip\"\r\n                style={{ display: \"none\" }}\r\n              />\r\n            </label>\r\n            <Item elevation={3}>\r\n              <img src=\"/static/images/add.png\" width=\"60%\"></img>\r\n            </Item>\r\n          </Box>\r\n        ) : null}\r\n        {dataSource &&\r\n          dataSource.map((dataItem, dataIndex) => (\r\n            <CardItem\r\n              key={dataIndex}\r\n              dataIndex={dataIndex}\r\n              dataItem={dataItem}\r\n              menuList={menuList}\r\n              moreList={moreList}\r\n              keyFormat={keyFormat}\r\n              handleClick={handleClick}\r\n              doubleClick={doubleClick}\r\n            ></CardItem>\r\n          ))}\r\n      </CardPane>\r\n      {ipagenation && total > 0 ? (\r\n        <SPagination\r\n          pagenation={ipagenation}\r\n          total={total}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      ) : null}\r\n      {!dataSource || dataSource.length === 0 ? (\r\n        <NoData>\r\n          <img src=\"/static/images/nodata.svg\" />\r\n          <p>暂无数据</p>\r\n        </NoData>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Paper, InputBase } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nconst SelfPaper = styled(Paper)(({ theme }) => ({\r\n  border: \"1px solid #E2E2E2\",\r\n  p: \"0 0 0 4px\",\r\n  display: \"inline-flex\",\r\n  alignItems: \"center\",\r\n  width: 400,\r\n  height: 36,\r\n  boxShadow: \"none\",\r\n  borderRadius: \"5px\",\r\n}));\r\n\r\nconst SearchPane = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  padding: \"0 3px\",\r\n  background: \"#075FB8\",\r\n  height: \"100%\",\r\n  width: 36,\r\n  color: \"#fff\",\r\n  borderRadius: \"0 5px 5px 0\",\r\n  cursor: \"pointer\",\r\n}));\r\n\r\nexport default function QueryPane(props) {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleClick = () => {\r\n    const { search } = props;\r\n    search && search(value);\r\n  };\r\n\r\n  const changeVal = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const keyEvent = (e) => {\r\n    if (e.keyCode !== 13) {\r\n      return;\r\n    }\r\n    handleClick();\r\n  };\r\n\r\n  return (\r\n    <SelfPaper>\r\n      <InputBase\r\n        sx={{ ml: 1, flex: 1 }}\r\n        placeholder=\"搜索\"\r\n        value={value}\r\n        onChange={changeVal}\r\n        onKeyUp={keyEvent}\r\n      />\r\n      <SearchPane onClick={handleClick}>\r\n        <SearchIcon />\r\n      </SearchPane>\r\n    </SelfPaper>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport SIcon from \"~/components/SIcon\";\r\n\r\ntype listItem = {\r\n  key?: string | number;\r\n  label?: string;\r\n  type?: string;\r\n  children?: Array<listItem>;\r\n  open?: boolean;\r\n  icon?: string;\r\n};\r\n\r\ntype MenuItemFormat = {\r\n  key: string | number;\r\n  title: string;\r\n  icon?: string;\r\n};\r\n\r\ninterface FileTreeProps {\r\n  dataList?: Array<listItem>;\r\n  currentObj?: object;\r\n  dataItem?: listItem;\r\n  dataIndex?: number;\r\n  menuItemArr?: Array<MenuItemFormat>;\r\n  onExpand?: (record: listItem, e) => void;\r\n  handleClick?: (record: listItem, e) => void;\r\n  onMenuClick?: (key: string | number, item: object) => void;\r\n}\r\n\r\nconst SelfListItemButton = styled(ListItemButton)(({ theme }) => ({\r\n  height: 40,\r\n  paddingRight: 0,\r\n  \"& .label-style span\": {\r\n    fontSize: \"13px\",\r\n    overflow: \"hidden\",\r\n    textOverflow: \"ellipsis\",\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n}));\r\n\r\nconst FileTree: React.FC<FileTreeProps> = ({\r\n  currentObj,\r\n  dataItem,\r\n  dataIndex,\r\n  menuItemArr,\r\n  handleClick,\r\n  onMenuClick,\r\n}) => {\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const visible = Boolean(anchorEl);\r\n\r\n  const showMenu = (e) => {\r\n    setAnchorEl(e.currentTarget);\r\n    e.stopPropagation();\r\n  };\r\n\r\n  const closeMenu = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const clickMenu = (menuItem) => {\r\n    onMenuClick && onMenuClick(menuItem.key, dataItem);\r\n    closeMenu();\r\n  };\r\n\r\n  const renderItem = (pl?: number) => {\r\n    let objKey: string | number = \"\";\r\n    if (currentObj && Object.keys(currentObj).length > 0) {\r\n      objKey = currentObj[\"key\"];\r\n    }\r\n\r\n    let { key, label, type, children, open, icon } = dataItem;\r\n    console.log(icon);\r\n    return (\r\n      <React.Fragment key={dataIndex}>\r\n        <SelfListItemButton\r\n          sx={{ pl }}\r\n          className={objKey === key ? \"SelfList active\" : \"SelfList\"}\r\n          onClick={(e) => {\r\n            handleClick && handleClick(dataItem, e);\r\n          }}\r\n        >\r\n          {icon ? (\r\n            <ListItemIcon sx={{ minWidth: \"30px\" }}>\r\n              <SIcon type={icon}></SIcon>\r\n            </ListItemIcon>\r\n          ) : null}\r\n          <ListItemText className=\"label-style\" title={label} primary={label} />\r\n          <IconButton onClick={showMenu}>\r\n            <SIcon\r\n              sx={{ fontSize: \"20px\", color: \"#333\" }}\r\n              type=\"icon-3Dgengduo\"\r\n            ></SIcon>\r\n          </IconButton>\r\n        </SelfListItemButton>\r\n        <Menu\r\n          id={\"actionMenu-\" + key}\r\n          anchorEl={anchorEl}\r\n          open={visible}\r\n          onClose={closeMenu}\r\n          MenuListProps={{\r\n            \"aria-labelledby\": \"basic-button\",\r\n          }}\r\n        >\r\n          {menuItemArr &&\r\n            menuItemArr.map((menuItem, index) => (\r\n              <MenuItem\r\n                sx={{ fontSize: \"13px\" }}\r\n                key={index}\r\n                onClick={() => clickMenu(menuItem)}\r\n              >\r\n                {menuItem.icon ? (\r\n                  <SIcon\r\n                    sx={{ fontSize: \"18px\", marginRight: \"5px\" }}\r\n                    type={menuItem.icon}\r\n                  ></SIcon>\r\n                ) : null}\r\n                {menuItem.title}\r\n              </MenuItem>\r\n            ))}\r\n        </Menu>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n\r\n  return renderItem(2);\r\n};\r\n\r\nexport default FileTree;\r\n","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  List,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Collapse,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport { ExpandLess, ExpandMore } from \"@mui/icons-material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport FileTreeItem from \"./modules/FileTreeItem\";\r\n\r\ntype listItem = {\r\n  key?: string | number;\r\n  label?: string;\r\n  type?: string;\r\n  children?: Array<listItem>;\r\n  open?: boolean;\r\n  icon?: string;\r\n};\r\n\r\ninterface FileTreeProps {\r\n  onExpand?: (record: listItem, e) => void;\r\n  handleClick?: (record: listItem, e) => void;\r\n  dataList?: Array<listItem>;\r\n  currentObj?: object;\r\n  onMenuClick?: (key: string, dataItem: object) => void;\r\n}\r\n\r\nconst SelfList = styled(List)(({ theme }) => ({\r\n  width: \"100%\",\r\n  maxWidth: 360,\r\n  bgcolor: \"background.paper\",\r\n  \"& .active, & .SelfList:hover\": {\r\n    backgroundColor: \"rgba(25, 118, 210, 0.2)\",\r\n  },\r\n}));\r\n\r\nconst SelfListItemButton = styled(ListItemButton)(({ theme }) => ({\r\n  fontSize: \"12px\",\r\n  height: 40,\r\n  \"& .label-style span\": {\r\n    fontSize: \"13px\",\r\n  },\r\n}));\r\n\r\ntype MenuItemFormat = {\r\n  key: string | number;\r\n  title: string;\r\n  icon?: string;\r\n};\r\nconst menuItemArr: Array<MenuItemFormat> = [\r\n  {\r\n    key: \"rename\",\r\n    title: \"重命名\",\r\n    icon: \"icon-3Dbianji1\",\r\n  },\r\n  {\r\n    key: \"delete\",\r\n    title: \"删除\",\r\n    icon: \"icon-3Ddel\",\r\n  },\r\n];\r\n\r\nconst FileTree: React.FC<FileTreeProps> = ({\r\n  dataList,\r\n  handleClick,\r\n  currentObj,\r\n  onMenuClick,\r\n}) => {\r\n  return (\r\n    <SelfList\r\n      sx={{\r\n        width: \"100%\",\r\n        maxWidth: 360,\r\n        bgcolor: \"background.paper\",\r\n      }}\r\n      // component=\"nav\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n    >\r\n      {dataList &&\r\n        dataList.map((item, index) => (\r\n          <FileTreeItem\r\n            key={index}\r\n            dataItem={item}\r\n            dataIndex={index}\r\n            menuItemArr={menuItemArr}\r\n            currentObj={currentObj}\r\n            onMenuClick={onMenuClick}\r\n            handleClick={handleClick}\r\n          ></FileTreeItem>\r\n        ))}\r\n    </SelfList>\r\n  );\r\n};\r\n\r\nexport default FileTree;\r\n","import * as React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Paper, { PaperProps } from \"@mui/material/Paper\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Draggable from \"react-draggable\";\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  \"& .MuiDialogContent-root\": {\r\n    padding: theme.spacing(2),\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n  id: string;\r\n  children?: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst BootstrapDialogTitle = (props: DialogTitleProps) => {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 2, cursor: \"move\" }} {...other}>\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n};\r\n\r\nconst PaperComponent = (props: PaperProps) => {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n};\r\n\r\ninterface SModalProps {\r\n  visible?: boolean;\r\n  title?: string;\r\n  size?: any;\r\n  width?: number;\r\n  children?: any;\r\n  header?: any;\r\n  footer?: any;\r\n  fullWidth?: boolean;\r\n  sx?: object;\r\n  height?: string | number;\r\n  hideFooter?: boolean;\r\n  handleClose?: Function;\r\n  handleOk?: Function;\r\n}\r\n\r\nconst SModal: React.FC<SModalProps> = ({\r\n  title,\r\n  visible,\r\n  size,\r\n  children,\r\n  header,\r\n  footer,\r\n  fullWidth,\r\n  sx,\r\n  height,\r\n  hideFooter,\r\n  handleOk,\r\n  handleClose,\r\n}) => {\r\n  const closeMethod = () => {\r\n    handleClose && handleClose();\r\n  };\r\n\r\n  const okMethod = () => {\r\n    handleOk && handleOk();\r\n  };\r\n  return (\r\n    <BootstrapDialog\r\n      // onClose={closeMethod}\r\n      open={visible}\r\n      maxWidth={size}\r\n      fullWidth={fullWidth}\r\n      PaperComponent={PaperComponent}\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n    >\r\n      {header ? (\r\n        header\r\n      ) : (\r\n        <BootstrapDialogTitle id=\"draggable-dialog-title\" onClose={closeMethod}>\r\n          {title}\r\n        </BootstrapDialogTitle>\r\n      )}\r\n      <DialogContent\r\n        sx={{\r\n          // minHeight: `${minHeight}px`,\r\n          height: `${height ? height + \"px\" : \"auto\"}`,\r\n        }}\r\n        dividers\r\n      >\r\n        {children}\r\n      </DialogContent>\r\n      {hideFooter ? null : (\r\n        <DialogActions>\r\n          {footer ? (\r\n            footer\r\n          ) : (\r\n            <>\r\n              <Button onClick={closeMethod}>取消</Button>\r\n              <Button onClick={okMethod}>确定</Button>\r\n            </>\r\n          )}\r\n        </DialogActions>\r\n      )}\r\n    </BootstrapDialog>\r\n  );\r\n};\r\n\r\nexport default SModal;\r\n","import React from \"react\";\r\n\r\nimport { TablePagination } from \"@mui/material\";\r\n\r\ninterface STableProp {\r\n  total?: number;\r\n  pagenation?: {\r\n    pageNum?: number;\r\n    pageSize?: number;\r\n    pageSizeOptions?: Array<number>;\r\n  };\r\n  onPageChange?: (pageNum: number) => void;\r\n  onRowsPerPageChange?: (pageSize: number) => void;\r\n}\r\n\r\nconst STable: React.FC<STableProp> = ({\r\n  total,\r\n  pagenation,\r\n  onPageChange,\r\n  onRowsPerPageChange,\r\n}) => {\r\n  const { pageNum, pageSize, pageSizeOptions } = pagenation;\r\n\r\n  const changePage = (event: unknown, newPage: number) => {\r\n    onPageChange && onPageChange(newPage + 1);\r\n  };\r\n\r\n  const changeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    onRowsPerPageChange &&\r\n      onRowsPerPageChange(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  return (\r\n    <TablePagination\r\n      rowsPerPageOptions={pageSizeOptions || []}\r\n      component=\"div\"\r\n      count={total}\r\n      rowsPerPage={pageSize}\r\n      page={pageNum > 0 ? pageNum - 1 : 0}\r\n      onPageChange={changePage}\r\n      onRowsPerPageChange={changeRowsPerPage}\r\n      labelRowsPerPage=\"每页条数：\"\r\n      labelDisplayedRows={({ from, to }) => {\r\n        return `${from}–${to} 共 ${Math.ceil(total / pageSize)}页, ${total}条`;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default STable;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\nimport {\r\n  Button,\r\n  Grid,\r\n  TextField,\r\n  IconButton,\r\n  Box,\r\n  Select,\r\n  Breadcrumbs,\r\n  Link,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport CreateNewFolderIcon from \"@mui/icons-material/CreateNewFolder\";\r\n\r\nimport CardList from \"~/components/CardList/Model\";\r\nimport SMenu from \"~/components/SMenu/FileTree\";\r\nimport PublishModal from \"~/components/publish/publishModal\";\r\nimport QueryPane from \"~/components/QueryPane\";\r\n\r\nimport { getAction, deleteAction } from \"~/apis/manage\";\r\nimport { message } from \"~/utils/message\";\r\nimport { confirm } from \"~/utils/confirm\";\r\nimport { IDataItemProps } from \"~/components/dataList/types\";\r\nimport ModelEdit from \"./modules/ModelEdit\";\r\nimport Preview from \"./modules/Preview\";\r\n\r\nconst Nav = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  height: \"50px\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  fontSize: \"15px\",\r\n  padding: \"15px 8px\",\r\n  borderBottom: \"1px solid #f0f0f0\",\r\n}));\r\n\r\nconst url = {\r\n  list: \"editor/file/private/list\",\r\n  add: \"editor/file/upload\",\r\n  edit: \"editor/file/edit\",\r\n  delete: \"editor/file/delete\",\r\n};\r\n\r\ntype FormModel = {\r\n  name?: string;\r\n  pid?: string | number;\r\n  pic_key?: string;\r\n  source_type?: string;\r\n  node_type?: string;\r\n  files?: string | object;\r\n  status?: string | number;\r\n  resources?: string;\r\n  project_type?: string;\r\n};\r\n\r\ntype DataSourceItemObj = {\r\n  id?: string | number;\r\n  pic_key?: string;\r\n  uuid?: string;\r\n  name?: string;\r\n  node_type?: string;\r\n  file_key?: string;\r\n  pid?: string | number;\r\n  key?: string | number;\r\n  label?: string;\r\n  type?: string;\r\n  open?: boolean;\r\n  children?: Array<DataSourceItemObj>;\r\n};\r\n\r\nconst fileForm: FormModel = {\r\n  name: \"\",\r\n  pid: \"\",\r\n  // pic_key: \"icon.png\",\r\n  source_type: \"components\",\r\n  node_type: \"file\",\r\n  // files: \"\",\r\n  status: 1,\r\n  // resources: \"\",\r\n  project_type: \"3d\",\r\n};\r\n\r\nconst dirForm: FormModel = {\r\n  name: \"\",\r\n  pid: 0,\r\n  source_type: \"components\",\r\n  node_type: \"dir\",\r\n  status: 1,\r\n  project_type: \"3d\",\r\n};\r\n\r\nconst menuList = [\r\n  {\r\n    key: \"preview\",\r\n    title: \"预览\",\r\n    icon: \"icon-3Dsousuo\",\r\n    type: \"file\",\r\n  },\r\n  {\r\n    key: \"rename\",\r\n    title: \"编辑\",\r\n    icon: \"icon-3Dbianji1\",\r\n    type: \"dir-file\",\r\n  },\r\n  {\r\n    key: \"more\",\r\n    title: \"更多\",\r\n    icon: \"icon-3Dgengduo\",\r\n    type: \"file\",\r\n  },\r\n  {\r\n    key: \"delete\",\r\n    title: \"删除\",\r\n    icon: \"icon-3Ddel\",\r\n    type: \"dir\",\r\n  },\r\n];\r\n\r\nconst moreList = [\r\n  {\r\n    key: \"publish\",\r\n    title: \"发布\",\r\n    icon: \"icon-3Dgongnengdingyi\",\r\n    type: \"file\",\r\n  },\r\n  {\r\n    key: \"delete\",\r\n    title: \"删除\",\r\n    icon: \"icon-3Ddel\",\r\n    type: \"file\",\r\n  },\r\n];\r\n\r\ntype NavArr = {\r\n  id?: string | number;\r\n  name?: string | number;\r\n  pid?: string | number;\r\n};\r\n\r\nconst defaultNavList: Array<NavArr> = [];\r\n\r\nexport default function Model(props) {\r\n  const [dataSource, setDataSource] = useState<Array<DataSourceItemObj>>([]);\r\n  const [ipagenation, setIpagenation] = useState({\r\n    pageNum: 0,\r\n    pageSize: 5,\r\n    pageSizeOptions: [5, 10],\r\n  });\r\n  const [fileTree, setFileTree] = useState([]);\r\n  const [currentObj, setCurrentObj] = useState(null);\r\n  const [pid, setPid] = useState<string | number>(0);\r\n  const [previewURL, setPreviewURL] = useState(\"\");\r\n  const [targetPublish, setTargetPublish] = useState<IDataItemProps>(null);\r\n  const [navList, setNavList] = useState(defaultNavList);\r\n  const previewRef = useRef(null);\r\n  const modelRef = useRef(null);\r\n\r\n  const clickMenu = (type, item) => {\r\n    if (type === \"delete\") {\r\n      delData(item);\r\n    } else if (type === \"rename\") {\r\n      rename(item);\r\n    }\r\n  };\r\n\r\n  // 新增\r\n  const add = (form) => {\r\n    modelRef.current.init(form, false, \"新增\");\r\n  };\r\n\r\n  // 重命名\r\n  const rename = (record) => {\r\n    if (!record || Object.keys(record).length === 0) {\r\n      message.warn(\"请选择要重命名的项！\");\r\n    } else {\r\n      modelRef.current.init({ ...record }, true, \"重命名\");\r\n    }\r\n  };\r\n\r\n  /* --start */\r\n  // 获取列表\r\n  const getDataList = (\r\n    formData?: {},\r\n    item?: DataSourceItemObj | null,\r\n    dataType?: string\r\n  ) => {\r\n    let param = {\r\n      source_type: \"components\",\r\n      project_type: \"3d\",\r\n      pid: 0,\r\n      ...formData,\r\n    };\r\n    let type = dataType || \"both\";\r\n    getAction(url.list, param).then((res) => {\r\n      if (res[\"code\"] === 0) {\r\n        let list = res.data;\r\n        if (list && list.length > 0) {\r\n          for (let listItem of list) {\r\n            listItem.children = [];\r\n          }\r\n          if (type === \"both\" || type === \"tree\") {\r\n            if (item) {\r\n              item.children = [];\r\n              for (let listItem of list) {\r\n                let obj = {\r\n                  key: listItem.id,\r\n                  label: listItem.name,\r\n                  type: listItem.node_type,\r\n                  open: false,\r\n                  icon: \"icon-3Dweb\",\r\n                  ...listItem,\r\n                };\r\n                item.children.push(obj);\r\n              }\r\n              let treeList = JSON.parse(JSON.stringify(fileTree));\r\n              setFileTree(treeList);\r\n            } else {\r\n              let arr = [];\r\n              for (let listItem of list) {\r\n                let obj = {\r\n                  key: listItem.id,\r\n                  label: listItem.name,\r\n                  type: listItem.node_type,\r\n                  open: false,\r\n                  icon: \"icon-3Dweb\",\r\n                  ...listItem,\r\n                };\r\n                arr.push(obj);\r\n              }\r\n              setFileTree(arr);\r\n            }\r\n          }\r\n          if (type === \"both\" || type === \"list\") {\r\n            setDataSource(list);\r\n          }\r\n        } else {\r\n          if (type === \"both\" || type === \"tree\") {\r\n            if (!item) {\r\n              setFileTree([]);\r\n            }\r\n          }\r\n          if (type === \"both\" || type === \"list\") {\r\n            setDataSource([]);\r\n          }\r\n        }\r\n      }\r\n    });\r\n    // }\r\n  };\r\n\r\n  const getTreeList = (formData?: {}) => {\r\n    let param = {\r\n      source_type: \"components\",\r\n      project_type: \"3d\",\r\n      pid: pid,\r\n      ...formData,\r\n    };\r\n    getAction(url.list, param).then((res) => {\r\n      if (res[\"code\"] === 0) {\r\n        let list = res.data;\r\n        if (list && list.length > 0) {\r\n          let arr = [];\r\n          for (let listItem of list) {\r\n            let obj = {\r\n              key: listItem.id,\r\n              label: listItem.name,\r\n              type: listItem.node_type,\r\n              open: false,\r\n              icon: \"icon-3Dweb\",\r\n              ...listItem,\r\n            };\r\n            arr.push(obj);\r\n          }\r\n          setFileTree(arr);\r\n          setCurrentObj(arr[0]);\r\n          setNavList([{ id: arr[0].id, name: arr[0].name, pid }]);\r\n          getDataList({ pid: arr[0].id }, null, \"list\");\r\n        } else {\r\n          setFileTree([]);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const delData = (record) => {\r\n    if (!record || Object.keys(record).length === 0) {\r\n      message.warn(\"请选择要删除的项！\");\r\n    } else {\r\n      let formData = {\r\n        id: record.id,\r\n      };\r\n      confirm({\r\n        title: \"提示\",\r\n        content: `确定删除“${record.name}”吗？`,\r\n        onOk: () => {\r\n          delMethod(formData, record.node_type);\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const delMethod = (formData, type) => {\r\n    deleteAction(url.delete, formData).then((res) => {\r\n      if (res[\"code\"] === 0) {\r\n        if (type === \"dir\") {\r\n          getDataList({ pid: 0 }, null, \"tree\");\r\n        }\r\n        getDataList({ pid: currentObj.id }, null, \"list\");\r\n        message.success(\"删除成功\");\r\n      }\r\n    });\r\n  };\r\n  /* --end */\r\n\r\n  useEffect(() => {\r\n    getTreeList();\r\n  }, []);\r\n\r\n  const menuClick = (type, dataItem) => {\r\n    if (type === \"rename\") {\r\n      rename(dataItem);\r\n    } else if (type === \"preview\") {\r\n      previewMethod(dataItem);\r\n    } else if (type === \"delete\") {\r\n      delData(dataItem);\r\n    } else if (type === \"move\") {\r\n    } else if (type === \"deploy\") {\r\n    } else if (type === \"publish\") {\r\n      let { id, uuid, name, pic_key, file_key } = dataItem;\r\n      let obj = {\r\n        id: id,\r\n        uuid: uuid,\r\n        title: name,\r\n        preview: uuid + \"/\" + pic_key,\r\n      };\r\n      setTargetPublish(obj);\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (page) => {\r\n    setIpagenation({\r\n      pageNum: page,\r\n      pageSize: ipagenation.pageSize,\r\n      pageSizeOptions: ipagenation.pageSizeOptions,\r\n    });\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    setIpagenation({\r\n      pageNum: 0,\r\n      pageSize: rowsPerPage,\r\n      pageSizeOptions: ipagenation.pageSizeOptions,\r\n    });\r\n  };\r\n\r\n  const expandTree = (record, evt) => {\r\n    record.open = !record.open;\r\n    if (record.open) {\r\n      getDataList({ pid: record.id }, record, \"tree\");\r\n    } else {\r\n      let treeList = JSON.parse(JSON.stringify(fileTree));\r\n      setFileTree(treeList);\r\n    }\r\n  };\r\n\r\n  const clickTree = (record, evt) => {\r\n    setCurrentObj(record);\r\n    if (record.node_type === \"dir\") {\r\n      const { id, name, pid } = record;\r\n      setPid(id);\r\n      setNavList([{ id, name, pid }]);\r\n      getDataList({ pid: id }, null, \"list\");\r\n    }\r\n  };\r\n\r\n  const doubleClick = (item, index) => {\r\n    if (item.node_type === \"dir\") {\r\n      const { id, name, pid } = item;\r\n      setPid(id);\r\n      setNavList([{ id, name, pid }]);\r\n      getDataList({ pid: id }, null, \"list\");\r\n    } else {\r\n      previewMethod(item);\r\n    }\r\n  };\r\n\r\n  const init = () => {\r\n    setPid(0);\r\n    setCurrentObj(null);\r\n    setNavList(defaultNavList);\r\n    getDataList({ pid: 0 });\r\n  };\r\n\r\n  const previewMethod = (item) => {\r\n    previewRef.current.open();\r\n    setPreviewURL(`/preview.html?&component=${item.id}`);\r\n  };\r\n\r\n  const closePulish = () => {\r\n    setTargetPublish(null);\r\n  };\r\n\r\n  const search = (val) => {\r\n    if (val) {\r\n      searchList({ name: val });\r\n    } else {\r\n      getDataList({}, null, \"list\");\r\n    }\r\n  };\r\n\r\n  const searchList = (formData?: {}) => {\r\n    let param = {\r\n      source_type: \"components\",\r\n      project_type: \"3d\",\r\n      ...formData,\r\n    };\r\n    getAction(url.list, param).then((res) => {\r\n      if (res[\"code\"] === 0) {\r\n        let list = res.data;\r\n        if (list && list.length > 0) {\r\n          let arr = [];\r\n          for (let listItem of list) {\r\n            if (listItem.node_type === \"file\") {\r\n              let obj = {\r\n                key: listItem.id,\r\n                label: listItem.name,\r\n                type: listItem.node_type,\r\n                open: false,\r\n                ...listItem,\r\n              };\r\n              arr.push(obj);\r\n            }\r\n          }\r\n          setDataSource(arr);\r\n        } else {\r\n          setDataSource([]);\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const modelClick = (data) => {\r\n    if (data) {\r\n      const { id, name, pid } = data;\r\n      setNavList([{ id, name, pid }]);\r\n      getDataList({ pid: currentObj.id }, null, \"list\");\r\n      getDataList({ pid: 0 }, null, \"tree\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid columns={8} container sx={{ height: \"100%\" }} spacing={0}>\r\n        <Grid\r\n          item\r\n          xs={1}\r\n          sx={{\r\n            height: \"100%\",\r\n            padding: \"10px\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Button\r\n              variant=\"outlined\"\r\n              sx={{\r\n                height: \"32px\",\r\n                fontSize: \"12px\",\r\n                overflow: \"hidden\",\r\n                textOverflow: \"ellipsis\",\r\n                whiteSpace: \"nowrap\",\r\n              }}\r\n              onClick={init}\r\n            >\r\n              我的组件\r\n            </Button>\r\n            <IconButton\r\n              title=\"新建目录\"\r\n              color=\"primary\"\r\n              onClick={() => add(dirForm)}\r\n            >\r\n              <CreateNewFolderIcon />\r\n            </IconButton>\r\n          </Box>\r\n          <SMenu\r\n            dataList={fileTree}\r\n            currentObj={currentObj}\r\n            handleClick={clickTree}\r\n            onMenuClick={clickMenu}\r\n          ></SMenu>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={7}\r\n          sx={{\r\n            borderLeft: \"1px solid #aaa\",\r\n          }}\r\n        >\r\n          <Nav>\r\n            <Breadcrumbs>\r\n              {/* <Link\r\n                sx={{ fontWeight: \"bold\", cursor: \"pointer\" }}\r\n                underline=\"hover\"\r\n                color=\"inherit\"\r\n                onClick={init}\r\n              >\r\n                我的组件\r\n              </Link> */}\r\n              <Typography>我的组件</Typography>\r\n              {navList &&\r\n                navList.map((item, index) => (\r\n                  <Typography key={index}>{item.name}</Typography>\r\n                ))}\r\n            </Breadcrumbs>\r\n            <QueryPane search={search}></QueryPane>\r\n          </Nav>\r\n          <CardList\r\n            dataSource={dataSource}\r\n            // add={() => add(fileForm)}\r\n            ipagenation={ipagenation}\r\n            handleChangePage={handleChangePage}\r\n            handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n            handleClick={menuClick}\r\n            keyFormat={{ img: \"pic_key\", key: \"uuid\" }}\r\n            doubleClick={doubleClick}\r\n            menuList={menuList}\r\n            moreList={moreList}\r\n          ></CardList>\r\n        </Grid>\r\n      </Grid>\r\n      <ModelEdit\r\n        dataRef={modelRef}\r\n        onOk={modelClick}\r\n        onClose={modelClick}\r\n      ></ModelEdit>\r\n      <Preview previewRef={previewRef} url={previewURL}></Preview>\r\n      {targetPublish && Object.keys(targetPublish).length > 0 ? (\r\n        <PublishModal\r\n          category=\"M0004\"\r\n          type=\"file\"\r\n          onClose={closePulish}\r\n          target={targetPublish.id}\r\n          targetObj={targetPublish}\r\n        ></PublishModal>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState, useImperativeHandle, FC } from \"react\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Grid, TextField, Box, MenuItem, Select, Paper } from \"@mui/material\";\r\nimport { SelectChangeEvent } from \"@mui/material/Select\";\r\n\r\nimport SModal from \"~/components/SModal\";\r\n\r\nimport { httpAction, getAction } from \"~/apis/manage\";\r\nimport { message } from \"~/utils/message\";\r\n\r\nconst Nav = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  height: \"50px\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  fontSize: \"15px\",\r\n  padding: \"15px 8px\",\r\n  borderBottom: \"1px solid #f0f0f0\",\r\n}));\r\n\r\nconst Input = styled(TextField)(({ theme }) => ({\r\n  \"& input\": {\r\n    height: \"1em\",\r\n    width: \"300px\",\r\n  },\r\n}));\r\n\r\nconst url = {\r\n  list: \"editor/file/private/list\",\r\n  add: \"editor/file/upload\",\r\n  edit: \"editor/file/edit\",\r\n  delete: \"editor/file/delete\",\r\n};\r\n\r\nconst SelfSelect = styled(Select)(({ theme }) => ({\r\n  height: \"30px\",\r\n  width: \"330px\",\r\n}));\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n  ...theme.typography.body2,\r\n  textAlign: \"center\",\r\n  color: theme.palette.text.secondary,\r\n  height: 128,\r\n  lineHeight: \"128px\",\r\n  cursor: \"pointer\",\r\n}));\r\n\r\ntype FormModel = {\r\n  name?: string;\r\n  pid?: string | number;\r\n  pic_key?: string;\r\n  source_type?: string;\r\n  node_type?: string;\r\n  files?: string;\r\n  status?: string | number;\r\n  resources?: string;\r\n  project_type?: string;\r\n};\r\n\r\nconst fileForm: FormModel = {\r\n  name: \"\",\r\n  pid: \"\",\r\n  pic_key: \"icon.png\",\r\n  source_type: \"models\",\r\n  node_type: \"file\",\r\n  files: \"\",\r\n  status: 1,\r\n  resources: \"\",\r\n  project_type: \"3d\",\r\n};\r\n\r\nconst dirForm: FormModel = {\r\n  name: \"\",\r\n  pid: 0,\r\n  source_type: \"models\",\r\n  node_type: \"dir\",\r\n  status: 1,\r\n  project_type: \"3d\",\r\n};\r\n\r\ntype NavArr = {\r\n  id?: string | number;\r\n  name?: string | number;\r\n  pid?: string | number;\r\n};\r\n\r\ninterface ModelProps {\r\n  onOk?: (data?: any) => void;\r\n  onClose?: (data?: any) => void;\r\n  dataRef?: any;\r\n}\r\n\r\nconst Model: FC<ModelProps> = ({ onOk, onClose, dataRef }) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [formData, setFormData] = useState<FormModel>({});\r\n  const [actionType, setActionType] = useState(false); // true 编辑；false 新增\r\n  const [title, setTitle] = useState(\"\");\r\n  const [dirList, setDirList] = useState([]);\r\n  const [accept, setAccept] = useState(\"*\");\r\n  const [picKey, setPicKey] = useState(\"\");\r\n  const [picData, setPicData] = useState(\"\");\r\n\r\n  useImperativeHandle(dataRef, () => ({\r\n    init,\r\n  }));\r\n\r\n  const init = (data?: FormModel, type?: boolean, title?: string) => {\r\n    let form = JSON.parse(JSON.stringify(data));\r\n    setVisible(true);\r\n    setFormData(form);\r\n    setActionType(type);\r\n    setTitle(title);\r\n    getDirList();\r\n  };\r\n\r\n  // 点击确认回调\r\n  const handleOk = () => {\r\n    addOrEditData(formData);\r\n  };\r\n\r\n  // 改变输入框值\r\n  const changeValue = (event, type) => {\r\n    let obj = { ...formData };\r\n    obj[type] = event.target.value;\r\n    setFormData(obj);\r\n  };\r\n\r\n  // 点击取消回调\r\n  const handleClose = () => {\r\n    setVisible(false);\r\n    onClose && onClose();\r\n  };\r\n\r\n  const getDirList = () => {\r\n    let param = {\r\n      source_type: \"models\",\r\n      project_type: \"3d\",\r\n      pid: 0,\r\n    };\r\n    getAction(url.list, param)\r\n      .then((res) => {\r\n        if (res[\"code\"] === 0) {\r\n          let list = res.data;\r\n          if (list && list.length > 0) {\r\n            let arr = [];\r\n            for (let item of list) {\r\n              if (item.node_type === \"dir\") {\r\n                arr.push({\r\n                  value: item.id,\r\n                  label: item.name,\r\n                });\r\n              }\r\n            }\r\n            setDirList(arr);\r\n          } else {\r\n            setDirList([]);\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // }\r\n  };\r\n\r\n  // 新增、编辑项目\r\n  const addOrEditData = (data) => {\r\n    let type = \"\",\r\n      dataUrl = \"\";\r\n    if (actionType) {\r\n      type = \"put\";\r\n      dataUrl = url.edit;\r\n    } else {\r\n      type = \"post\";\r\n      dataUrl = url.add;\r\n    }\r\n    httpAction(dataUrl, data, type).then((res) => {\r\n      if (res[\"code\"] === 0) {\r\n        message.success(\"操作成功\");\r\n        setVisible(false);\r\n        onOk && onOk(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  const changeDir = (event: SelectChangeEvent) => {\r\n    let pid = event.target.value || 0;\r\n    let obj = {\r\n      ...formData,\r\n      pid,\r\n    };\r\n    setFormData(obj);\r\n  };\r\n\r\n  const onChangeFile = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) {\r\n      return;\r\n    }\r\n    setPicKey(file.name);\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = function (e) {\r\n      if (typeof e.target.result === \"string\") {\r\n        setPicData(e.target.result);\r\n        let obj = {\r\n          ...formData,\r\n          files: e.target.result,\r\n        };\r\n        setFormData(obj);\r\n      }\r\n    };\r\n  };\r\n\r\n  return (\r\n    <SModal\r\n      size=\"sm\"\r\n      title={title}\r\n      visible={visible}\r\n      handleOk={handleOk}\r\n      handleClose={handleClose}\r\n      fullWidth={true}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sx={{\r\n            display: \"inline-flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            height: \"80px\",\r\n          }}\r\n        >\r\n          <div style={{ fontSize: \"14px\", width: \"100px\", textAlign: \"right\" }}>\r\n            {formData.node_type === \"dir\" ? \"目录\" : \"文件\"}名称：\r\n          </div>\r\n          <Input\r\n            size=\"small\"\r\n            value={formData.name}\r\n            onChange={(event) => {\r\n              changeValue(event, \"name\");\r\n            }}\r\n          ></Input>\r\n        </Grid>\r\n        {formData.node_type === \"file\" ? (\r\n          <>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              sx={{\r\n                display: \"inline-flex\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                height: \"80px\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  fontSize: \"14px\",\r\n                  width: \"100px\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                选择文件夹：\r\n              </div>\r\n              <SelfSelect\r\n                value={formData.pid}\r\n                placeholder=\"请选择\"\r\n                onChange={changeDir}\r\n              >\r\n                {dirList &&\r\n                  dirList.map((item, index) => (\r\n                    <MenuItem key={index} value={item.value}>\r\n                      {item.label}\r\n                    </MenuItem>\r\n                  ))}\r\n              </SelfSelect>\r\n            </Grid>\r\n            {/* <Grid\r\n              item\r\n              xs={12}\r\n              sx={{\r\n                display: \"inline-flex\",\r\n                alignItems: \"space-between\",\r\n                justifyContent: \"center\",\r\n                height: \"180px\",\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  fontSize: \"14px\",\r\n                  width: \"100px\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                选择上传文件：\r\n              </div>\r\n              <Box\r\n                sx={{\r\n                  display: \"flex\",\r\n                  \"& > :not(style)\": {\r\n                    // m: 1,\r\n                    width: 330,\r\n                    height: 128,\r\n                  },\r\n                }}\r\n              >\r\n                <label\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                    opacity: 0,\r\n                    position: \"absolute\",\r\n                  }}\r\n                >\r\n                  <input\r\n                    type=\"file\"\r\n                    onChange={onChangeFile}\r\n                    accept={accept}\r\n                    style={{ display: \"none\" }}\r\n                  />\r\n                </label>\r\n                <Item elevation={3}>\r\n                  {!formData.files && \"文件上传\"}\r\n                  {formData.files && (\r\n                    <img src={formData.files} height={\"100%\"}></img>\r\n                  )}\r\n                </Item>\r\n              </Box>\r\n            </Grid> */}\r\n          </>\r\n        ) : null}\r\n      </Grid>\r\n    </SModal>\r\n  );\r\n};\r\n\r\nexport default Model;\r\n","import React, { useImperativeHandle, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport SModal from \"~/components/SModal\";\r\nimport { previewChannel } from \"~/utils/previewChannel\";\r\n\r\ninterface FileTreeProps {\r\n  url?: string;\r\n  previewRef?: any;\r\n  code?: string | number;\r\n}\r\n\r\nconst SelfIframe = styled(\"iframe\")(({ theme }) => ({\r\n  width: \"100%\",\r\n  height: \"calc(100% - 32px)\",\r\n  border: \"none\",\r\n  margin: \"0\",\r\n  padding: \"0\",\r\n}));\r\n\r\nconst Preview: React.FC<FileTreeProps> = ({ url, previewRef }) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useImperativeHandle(previewRef, () => ({\r\n    open,\r\n  }));\r\n\r\n  const handleOk = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const open = (code?: null) => {\r\n    setVisible(true);\r\n    respFuc(code);\r\n  };\r\n\r\n  const respFuc = (code?: null) => {\r\n    console.log(\"code1: \", code);\r\n    previewChannel.addEventListener(\"message\", (e) => {\r\n      console.log(e);\r\n      const { type } = e.data;\r\n      if (type === \"close_preview\") {\r\n        setVisible(false);\r\n      } else if (type === \"apply-shop\") {\r\n        // setTimeout(() => {\r\n        navigate(\"/editor?code=\" + code);\r\n        handleClose();\r\n        //   console.log(\"code2: \", code);\r\n        // }, 10);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <SModal\r\n      size=\"xl\"\r\n      title=\"预览\"\r\n      visible={visible}\r\n      handleOk={handleOk}\r\n      handleClose={handleClose}\r\n      fullWidth={true}\r\n      height={800}\r\n      hideFooter={true}\r\n    >\r\n      <SelfIframe src={url}></SelfIframe>\r\n    </SModal>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n"],"names":["SelfCard","styled","Card","theme","position","CardIcon","display","justifyContent","alignItems","width","height","fontSize","color","ActionMenu","right","zIndex","margin","borderRadius","ButtonPane","SelfIconButton","IconButton","initMenuList","key","title","icon","type","defaultFormat","id","name","count","createdTime","updatedTime","img","dataItem","dataIndex","handleClick","menuList","keyFormat","doubleClick","moreList","anchorEl","setAnchorEl","useState","currentItem","setCurrentItem","open","Boolean","clickItem","record","index","closeMenu","activeCard","renderMenu","style","Menu","onClose","MenuListProps","item","MenuItem","sx","onClick","className","menuClick","event","showMenu","currentTarget","format","menus","renderMenuList","menuItem","node_type","CardContent","userSelect","e","SIcon","Typography","align","variant","fontWeight","overflow","textOverflow","whiteSpace","validateImage","commonStore","src","Date","getTime","renderItem","CardPane","padding","flexWrap","gridTemplateColumns","gridGap","maxHeight","boxShadow","paddingBottom","Item","Paper","typography","body2","textAlign","palette","text","secondary","cursor","NoData","dataSource","ipagenation","handleChangePage","handleChangeRowsPerPage","add","total","Box","opacity","multiple","onChange","accept","elevation","SPagination","pagenation","onPageChange","onRowsPerPageChange","length","SelfPaper","border","p","SearchPane","background","QueryPane","props","value","setValue","search","ml","flex","placeholder","target","onKeyUp","keyCode","SelfListItemButton","ListItemButton","paddingRight","currentObj","menuItemArr","onMenuClick","visible","stopPropagation","pl","objKey","label","children","ListItemIcon","minWidth","ListItemText","primary","clickMenu","marginRight","SelfList","List","maxWidth","bgcolor","backgroundColor","dataList","FileTreeItem","BootstrapDialog","Dialog","spacing","BootstrapDialogTitle","other","m","top","grey","PaperComponent","handle","cancel","size","header","footer","fullWidth","hideFooter","handleOk","handleClose","closeMethod","dividers","pageNum","pageSize","pageSizeOptions","rowsPerPageOptions","component","rowsPerPage","page","newPage","labelRowsPerPage","labelDisplayedRows","from","to","Math","ceil","Nav","borderBottom","url","dirForm","pid","source_type","status","project_type","defaultNavList","Model","setDataSource","setIpagenation","fileTree","setFileTree","setCurrentObj","setPid","previewURL","setPreviewURL","targetPublish","setTargetPublish","navList","setNavList","previewRef","useRef","modelRef","rename","current","init","message","getDataList","formData","dataType","param","getAction","then","res","list","data","listItem","obj","push","treeList","JSON","parse","arr","delData","confirm","content","onOk","delMethod","deleteAction","useEffect","getTreeList","previewMethod","searchList","modelClick","columns","container","xs","form","evt","borderLeft","val","uuid","pic_key","file_key","preview","dataRef","category","targetObj","Input","TextField","SelfSelect","Select","lineHeight","setVisible","setFormData","actionType","setActionType","setTitle","dirList","setDirList","setAccept","picKey","setPicKey","picData","setPicData","useImperativeHandle","getDirList","catch","err","addOrEditData","dataUrl","httpAction","changeValue","SelfIframe","navigate","useNavigate","code","respFuc","previewChannel"],"sourceRoot":""}