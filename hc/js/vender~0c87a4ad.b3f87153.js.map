{"version":3,"file":"js/vender~0c87a4ad.b3f87153.js","mappings":"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","sources":["webpack:///../../../node_modules/@babylonjs/gui/2D/adtInstrumentation.js","webpack:///../../../node_modules/@babylonjs/gui/2D/advancedDynamicTexture.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/button.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/container.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/control.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/image.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/checkbox.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/inputText.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/grid.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/colorpicker.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/ellipse.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/focusableButton.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/inputPassword.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/line.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/multiLine.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/radioButton.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/sliders/baseSlider.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/sliders/slider.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/selector.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/scrollViewers/scrollViewerWindow.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/sliders/scrollBar.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/sliders/imageScrollBar.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/scrollViewers/scrollViewer.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/displayGrid.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/sliders/imageBasedSlider.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/statics.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/rectangle.js","webpack:///../../../node_modules/@babylonjs/gui/2D/controls/stackPanel.js"],"sourcesContent":["import { PerfCounter } from \"@babylonjs/core/Misc/perfCounter.js\";\n/**\n * This class can be used to get instrumentation data from a AdvancedDynamicTexture object\n */\nvar AdvancedDynamicTextureInstrumentation = /** @class */ (function () {\n    /**\n     * Instantiates a new advanced dynamic texture instrumentation.\n     * This class can be used to get instrumentation data from an AdvancedDynamicTexture object\n     * @param texture Defines the AdvancedDynamicTexture to instrument\n     */\n    function AdvancedDynamicTextureInstrumentation(\n    /**\n     * Define the instrumented AdvancedDynamicTexture.\n     */\n    texture) {\n        this.texture = texture;\n        this._captureRenderTime = false;\n        this._renderTime = new PerfCounter();\n        this._captureLayoutTime = false;\n        this._layoutTime = new PerfCounter();\n        // Observers\n        this._onBeginRenderObserver = null;\n        this._onEndRenderObserver = null;\n        this._onBeginLayoutObserver = null;\n        this._onEndLayoutObserver = null;\n    }\n    Object.defineProperty(AdvancedDynamicTextureInstrumentation.prototype, \"renderTimeCounter\", {\n        // Properties\n        /**\n         * Gets the perf counter used to capture render time\n         */\n        get: function () {\n            return this._renderTime;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AdvancedDynamicTextureInstrumentation.prototype, \"layoutTimeCounter\", {\n        /**\n         * Gets the perf counter used to capture layout time\n         */\n        get: function () {\n            return this._layoutTime;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AdvancedDynamicTextureInstrumentation.prototype, \"captureRenderTime\", {\n        /**\n         * Enable or disable the render time capture\n         */\n        get: function () {\n            return this._captureRenderTime;\n        },\n        set: function (value) {\n            var _this = this;\n            if (value === this._captureRenderTime) {\n                return;\n            }\n            this._captureRenderTime = value;\n            if (value) {\n                this._onBeginRenderObserver = this.texture.onBeginRenderObservable.add(function () {\n                    _this._renderTime.beginMonitoring();\n                });\n                this._onEndRenderObserver = this.texture.onEndRenderObservable.add(function () {\n                    _this._renderTime.endMonitoring(true);\n                });\n            }\n            else {\n                this.texture.onBeginRenderObservable.remove(this._onBeginRenderObserver);\n                this._onBeginRenderObserver = null;\n                this.texture.onEndRenderObservable.remove(this._onEndRenderObserver);\n                this._onEndRenderObserver = null;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AdvancedDynamicTextureInstrumentation.prototype, \"captureLayoutTime\", {\n        /**\n         * Enable or disable the layout time capture\n         */\n        get: function () {\n            return this._captureLayoutTime;\n        },\n        set: function (value) {\n            var _this = this;\n            if (value === this._captureLayoutTime) {\n                return;\n            }\n            this._captureLayoutTime = value;\n            if (value) {\n                this._onBeginLayoutObserver = this.texture.onBeginLayoutObservable.add(function () {\n                    _this._layoutTime.beginMonitoring();\n                });\n                this._onEndLayoutObserver = this.texture.onEndLayoutObservable.add(function () {\n                    _this._layoutTime.endMonitoring(true);\n                });\n            }\n            else {\n                this.texture.onBeginLayoutObservable.remove(this._onBeginLayoutObserver);\n                this._onBeginLayoutObserver = null;\n                this.texture.onEndLayoutObservable.remove(this._onEndLayoutObserver);\n                this._onEndLayoutObserver = null;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Dispose and release associated resources.\n     */\n    AdvancedDynamicTextureInstrumentation.prototype.dispose = function () {\n        this.texture.onBeginRenderObservable.remove(this._onBeginRenderObserver);\n        this._onBeginRenderObserver = null;\n        this.texture.onEndRenderObservable.remove(this._onEndRenderObserver);\n        this._onEndRenderObserver = null;\n        this.texture.onBeginLayoutObservable.remove(this._onBeginLayoutObserver);\n        this._onBeginLayoutObserver = null;\n        this.texture.onEndLayoutObservable.remove(this._onEndLayoutObserver);\n        this._onEndLayoutObserver = null;\n        this.texture = null;\n    };\n    return AdvancedDynamicTextureInstrumentation;\n}());\nexport { AdvancedDynamicTextureInstrumentation };\n//# sourceMappingURL=adtInstrumentation.js.map","import { __extends } from \"tslib\";\nimport { Observable } from \"@babylonjs/core/Misc/observable.js\";\nimport { Vector2, Vector3 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { Tools } from \"@babylonjs/core/Misc/tools.js\";\nimport { PointerEventTypes } from \"@babylonjs/core/Events/pointerEvents.js\";\nimport { ClipboardEventTypes, ClipboardInfo } from \"@babylonjs/core/Events/clipboardEvents.js\";\nimport { KeyboardEventTypes } from \"@babylonjs/core/Events/keyboardEvents.js\";\nimport { Texture } from \"@babylonjs/core/Materials/Textures/texture.js\";\nimport { DynamicTexture } from \"@babylonjs/core/Materials/Textures/dynamicTexture.js\";\nimport { Layer } from \"@babylonjs/core/Layers/layer.js\";\nimport { Container } from \"./controls/container.js\";\nimport { Control } from \"./controls/control.js\";\nimport { Style } from \"./style.js\";\nimport { Measure } from \"./measure.js\";\nimport { Constants } from \"@babylonjs/core/Engines/constants.js\";\nimport { Viewport } from \"@babylonjs/core/Maths/math.viewport.js\";\nimport { Color3 } from \"@babylonjs/core/Maths/math.color.js\";\nimport { WebRequest } from \"@babylonjs/core/Misc/webRequest.js\";\nimport { RandomGUID } from \"@babylonjs/core/Misc/guid.js\";\nimport { GetClass } from \"@babylonjs/core/Misc/typeStore.js\";\n/**\n * Class used to create texture to support 2D GUI elements\n * @see https://doc.babylonjs.com/how_to/gui\n */\nvar AdvancedDynamicTexture = /** @class */ (function (_super) {\n    __extends(AdvancedDynamicTexture, _super);\n    /**\n     * Creates a new AdvancedDynamicTexture\n     * @param name defines the name of the texture\n     * @param width defines the width of the texture\n     * @param height defines the height of the texture\n     * @param scene defines the hosting scene\n     * @param generateMipMaps defines a boolean indicating if mipmaps must be generated (false by default)\n     * @param samplingMode defines the texture sampling mode (Texture.NEAREST_SAMPLINGMODE by default)\n     * @param invertY defines if the texture needs to be inverted on the y axis during loading (true by default)\n     */\n    function AdvancedDynamicTexture(name, width, height, scene, generateMipMaps, samplingMode, invertY) {\n        if (width === void 0) { width = 0; }\n        if (height === void 0) { height = 0; }\n        if (generateMipMaps === void 0) { generateMipMaps = false; }\n        if (samplingMode === void 0) { samplingMode = Texture.NEAREST_SAMPLINGMODE; }\n        if (invertY === void 0) { invertY = true; }\n        var _this = _super.call(this, name, { width: width, height: height }, scene, generateMipMaps, samplingMode, Constants.TEXTUREFORMAT_RGBA, invertY) || this;\n        _this._isDirty = false;\n        /** @hidden */\n        _this._rootContainer = new Container(\"root\");\n        /** @hidden */\n        _this._lastControlOver = {};\n        /** @hidden */\n        _this._lastControlDown = {};\n        /** @hidden */\n        _this._capturingControl = {};\n        /** @hidden */\n        _this._linkedControls = new Array();\n        _this._isFullscreen = false;\n        _this._fullscreenViewport = new Viewport(0, 0, 1, 1);\n        _this._idealWidth = 0;\n        _this._idealHeight = 0;\n        _this._useSmallestIdeal = false;\n        _this._renderAtIdealSize = false;\n        _this._blockNextFocusCheck = false;\n        _this._renderScale = 1;\n        _this._cursorChanged = false;\n        _this._defaultMousePointerId = 0;\n        /** @hidden */\n        _this._numLayoutCalls = 0;\n        /** @hidden */\n        _this._numRenderCalls = 0;\n        /**\n         * Define type to string to ensure compatibility across browsers\n         * Safari doesn't support DataTransfer constructor\n         */\n        _this._clipboardData = \"\";\n        /**\n         * Observable event triggered each time an clipboard event is received from the rendering canvas\n         */\n        _this.onClipboardObservable = new Observable();\n        /**\n         * Observable event triggered each time a pointer down is intercepted by a control\n         */\n        _this.onControlPickedObservable = new Observable();\n        /**\n         * Observable event triggered before layout is evaluated\n         */\n        _this.onBeginLayoutObservable = new Observable();\n        /**\n         * Observable event triggered after the layout was evaluated\n         */\n        _this.onEndLayoutObservable = new Observable();\n        /**\n         * Observable event triggered before the texture is rendered\n         */\n        _this.onBeginRenderObservable = new Observable();\n        /**\n         * Observable event triggered after the texture was rendered\n         */\n        _this.onEndRenderObservable = new Observable();\n        /**\n         * Gets or sets a boolean defining if alpha is stored as premultiplied\n         */\n        _this.premulAlpha = false;\n        /**\n         * Gets or sets a boolean indicating that the canvas must be reverted on Y when updating the texture\n         */\n        _this.applyYInversionOnUpdate = true;\n        /**\n         * If set to true, every scene render will trigger a pointer event for the GUI\n         * if it is linked to a mesh or has controls linked to a mesh. This will allow\n         * you to catch the pointer moving around the GUI due to camera or mesh movements,\n         * but it has a performance cost.\n         */\n        _this.checkPointerEveryFrame = false;\n        _this._useInvalidateRectOptimization = true;\n        // Invalidated rectangle which is the combination of all invalidated controls after they have been rotated into absolute position\n        _this._invalidatedRectangle = null;\n        _this._clearMeasure = new Measure(0, 0, 0, 0);\n        /**\n         * @param rawEvt\n         * @hidden\n         */\n        _this._onClipboardCopy = function (rawEvt) {\n            var evt = rawEvt;\n            var ev = new ClipboardInfo(ClipboardEventTypes.COPY, evt);\n            _this.onClipboardObservable.notifyObservers(ev);\n            evt.preventDefault();\n        };\n        /**\n         * @param rawEvt\n         * @hidden\n         */\n        _this._onClipboardCut = function (rawEvt) {\n            var evt = rawEvt;\n            var ev = new ClipboardInfo(ClipboardEventTypes.CUT, evt);\n            _this.onClipboardObservable.notifyObservers(ev);\n            evt.preventDefault();\n        };\n        /**\n         * @param rawEvt\n         * @hidden\n         */\n        _this._onClipboardPaste = function (rawEvt) {\n            var evt = rawEvt;\n            var ev = new ClipboardInfo(ClipboardEventTypes.PASTE, evt);\n            _this.onClipboardObservable.notifyObservers(ev);\n            evt.preventDefault();\n        };\n        scene = _this.getScene();\n        if (!scene || !_this._texture) {\n            return _this;\n        }\n        _this.applyYInversionOnUpdate = invertY;\n        _this._rootElement = scene.getEngine().getInputElement();\n        _this._renderObserver = scene.onBeforeCameraRenderObservable.add(function (camera) { return _this._checkUpdate(camera); });\n        _this._preKeyboardObserver = scene.onPreKeyboardObservable.add(function (info) {\n            if (!_this._focusedControl) {\n                return;\n            }\n            if (info.type === KeyboardEventTypes.KEYDOWN) {\n                _this._focusedControl.processKeyboard(info.event);\n            }\n            info.skipOnPointerObservable = true;\n        });\n        _this._rootContainer._link(_this);\n        _this.hasAlpha = true;\n        if (!width || !height) {\n            _this._resizeObserver = scene.getEngine().onResizeObservable.add(function () { return _this._onResize(); });\n            _this._onResize();\n        }\n        _this._texture.isReady = true;\n        return _this;\n    }\n    Object.defineProperty(AdvancedDynamicTexture.prototype, \"numLayoutCalls\", {\n        /** Gets the number of layout calls made the last time the ADT has been rendered */\n        get: function () {\n            return this._numLayoutCalls;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AdvancedDynamicTexture.prototype, \"numRenderCalls\", {\n        /** Gets the number of render calls made the last time the ADT has been rendered */\n        get: function () {\n            return this._numRenderCalls;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AdvancedDynamicTexture.prototype, \"renderScale\", {\n        /**\n         * Gets or sets a number used to scale rendering size (2 means that the texture will be twice bigger).\n         * Useful when you want more antialiasing\n         */\n        get: function () {\n            return this._renderScale;\n        },\n        set: function (value) {\n            if (value === this._renderScale) {\n                return;\n            }\n            this._renderScale = value;\n            this._onResize();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AdvancedDynamicTexture.prototype, \"background\", {\n        /** Gets or sets the background color */\n        get: function () {\n            return this._background;\n        },\n        set: function (value) {\n            if (this._background === value) {\n                return;\n            }\n            this._background = value;\n            this.markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AdvancedDynamicTexture.prototype, \"idealWidth\", {\n        /**\n         * Gets or sets the ideal width used to design controls.\n         * The GUI will then rescale everything accordingly\n         * @see https://doc.babylonjs.com/how_to/gui#adaptive-scaling\n         */\n        get: function () {\n            return this._idealWidth;\n        },\n        set: function (value) {\n            if (this._idealWidth === value) {\n                return;\n            }\n            this._idealWidth = value;\n            this.markAsDirty();\n            this._rootContainer._markAllAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AdvancedDynamicTexture.prototype, \"idealHeight\", {\n        /**\n         * Gets or sets the ideal height used to design controls.\n         * The GUI will then rescale everything accordingly\n         * @see https://doc.babylonjs.com/how_to/gui#adaptive-scaling\n         */\n        get: function () {\n            return this._idealHeight;\n        },\n        set: function (value) {\n            if (this._idealHeight === value) {\n                return;\n            }\n            this._idealHeight = value;\n            this.markAsDirty();\n            this._rootContainer._markAllAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AdvancedDynamicTexture.prototype, \"useSmallestIdeal\", {\n        /**\n         * Gets or sets a boolean indicating if the smallest ideal value must be used if idealWidth and idealHeight are both set\n         * @see https://doc.babylonjs.com/how_to/gui#adaptive-scaling\n         */\n        get: function () {\n            return this._useSmallestIdeal;\n        },\n        set: function (value) {\n            if (this._useSmallestIdeal === value) {\n                return;\n            }\n            this._useSmallestIdeal = value;\n            this.markAsDirty();\n            this._rootContainer._markAllAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AdvancedDynamicTexture.prototype, \"renderAtIdealSize\", {\n        /**\n         * Gets or sets a boolean indicating if adaptive scaling must be used\n         * @see https://doc.babylonjs.com/how_to/gui#adaptive-scaling\n         */\n        get: function () {\n            return this._renderAtIdealSize;\n        },\n        set: function (value) {\n            if (this._renderAtIdealSize === value) {\n                return;\n            }\n            this._renderAtIdealSize = value;\n            this._onResize();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AdvancedDynamicTexture.prototype, \"idealRatio\", {\n        /**\n         * Gets the ratio used when in \"ideal mode\"\n         * @see https://doc.babylonjs.com/how_to/gui#adaptive-scaling\n         * */\n        get: function () {\n            var rwidth = 0;\n            var rheight = 0;\n            if (this._idealWidth) {\n                rwidth = this.getSize().width / this._idealWidth;\n            }\n            if (this._idealHeight) {\n                rheight = this.getSize().height / this._idealHeight;\n            }\n            if (this._useSmallestIdeal && this._idealWidth && this._idealHeight) {\n                return window.innerWidth < window.innerHeight ? rwidth : rheight;\n            }\n            if (this._idealWidth) {\n                // horizontal\n                return rwidth;\n            }\n            if (this._idealHeight) {\n                // vertical\n                return rheight;\n            }\n            return 1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AdvancedDynamicTexture.prototype, \"layer\", {\n        /**\n         * Gets the underlying layer used to render the texture when in fullscreen mode\n         */\n        get: function () {\n            return this._layerToDispose;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AdvancedDynamicTexture.prototype, \"rootContainer\", {\n        /**\n         * Gets the root container control\n         */\n        get: function () {\n            return this._rootContainer;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Returns an array containing the root container.\n     * This is mostly used to let the Inspector introspects the ADT\n     * @returns an array containing the rootContainer\n     */\n    AdvancedDynamicTexture.prototype.getChildren = function () {\n        return [this._rootContainer];\n    };\n    /**\n     * Will return all controls that are inside this texture\n     * @param directDescendantsOnly defines if true only direct descendants of 'this' will be considered, if false direct and also indirect (children of children, an so on in a recursive manner) descendants of 'this' will be considered\n     * @param predicate defines an optional predicate that will be called on every evaluated child, the predicate must return true for a given child to be part of the result, otherwise it will be ignored\n     * @return all child controls\n     */\n    AdvancedDynamicTexture.prototype.getDescendants = function (directDescendantsOnly, predicate) {\n        return this._rootContainer.getDescendants(directDescendantsOnly, predicate);\n    };\n    /**\n     * Will return all controls with the given type name\n     * @param typeName defines the type name to search for\n     * @returns an array of all controls found\n     */\n    AdvancedDynamicTexture.prototype.getControlsByType = function (typeName) {\n        return this._rootContainer.getDescendants(false, function (control) { return control.typeName === typeName; });\n    };\n    /**\n     * Will return the first control with the given name\n     * @param name defines the name to search for\n     * @return the first control found or null\n     */\n    AdvancedDynamicTexture.prototype.getControlByName = function (name) {\n        return this._getControlByKey(\"name\", name);\n    };\n    AdvancedDynamicTexture.prototype._getControlByKey = function (key, value) {\n        return this._rootContainer.getDescendants().find(function (control) { return control[key] === value; }) || null;\n    };\n    Object.defineProperty(AdvancedDynamicTexture.prototype, \"focusedControl\", {\n        /**\n         * Gets or sets the current focused control\n         */\n        get: function () {\n            return this._focusedControl;\n        },\n        set: function (control) {\n            if (this._focusedControl == control) {\n                return;\n            }\n            if (this._focusedControl) {\n                this._focusedControl.onBlur();\n            }\n            if (control) {\n                control.onFocus();\n            }\n            this._focusedControl = control;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AdvancedDynamicTexture.prototype, \"isForeground\", {\n        /**\n         * Gets or sets a boolean indicating if the texture must be rendered in background or foreground when in fullscreen mode\n         */\n        get: function () {\n            if (!this.layer) {\n                return true;\n            }\n            return !this.layer.isBackground;\n        },\n        set: function (value) {\n            if (!this.layer) {\n                return;\n            }\n            if (this.layer.isBackground === !value) {\n                return;\n            }\n            this.layer.isBackground = !value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(AdvancedDynamicTexture.prototype, \"clipboardData\", {\n        /**\n         * Gets or set information about clipboardData\n         */\n        get: function () {\n            return this._clipboardData;\n        },\n        set: function (value) {\n            this._clipboardData = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Get the current class name of the texture useful for serialization or dynamic coding.\n     * @returns \"AdvancedDynamicTexture\"\n     */\n    AdvancedDynamicTexture.prototype.getClassName = function () {\n        return \"AdvancedDynamicTexture\";\n    };\n    /**\n     * Function used to execute a function on all controls\n     * @param func defines the function to execute\n     * @param container defines the container where controls belong. If null the root container will be used\n     */\n    AdvancedDynamicTexture.prototype.executeOnAllControls = function (func, container) {\n        if (!container) {\n            container = this._rootContainer;\n        }\n        func(container);\n        for (var _i = 0, _a = container.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            if (child.children) {\n                this.executeOnAllControls(func, child);\n                continue;\n            }\n            func(child);\n        }\n    };\n    Object.defineProperty(AdvancedDynamicTexture.prototype, \"useInvalidateRectOptimization\", {\n        /**\n         * Gets or sets a boolean indicating if the InvalidateRect optimization should be turned on\n         */\n        get: function () {\n            return this._useInvalidateRectOptimization;\n        },\n        set: function (value) {\n            this._useInvalidateRectOptimization = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Invalidates a rectangle area on the gui texture\n     * @param invalidMinX left most position of the rectangle to invalidate in the texture\n     * @param invalidMinY top most position of the rectangle to invalidate in the texture\n     * @param invalidMaxX right most position of the rectangle to invalidate in the texture\n     * @param invalidMaxY bottom most position of the rectangle to invalidate in the texture\n     */\n    AdvancedDynamicTexture.prototype.invalidateRect = function (invalidMinX, invalidMinY, invalidMaxX, invalidMaxY) {\n        if (!this._useInvalidateRectOptimization) {\n            return;\n        }\n        if (!this._invalidatedRectangle) {\n            this._invalidatedRectangle = new Measure(invalidMinX, invalidMinY, invalidMaxX - invalidMinX + 1, invalidMaxY - invalidMinY + 1);\n        }\n        else {\n            // Compute intersection\n            var maxX = Math.ceil(Math.max(this._invalidatedRectangle.left + this._invalidatedRectangle.width - 1, invalidMaxX));\n            var maxY = Math.ceil(Math.max(this._invalidatedRectangle.top + this._invalidatedRectangle.height - 1, invalidMaxY));\n            this._invalidatedRectangle.left = Math.floor(Math.min(this._invalidatedRectangle.left, invalidMinX));\n            this._invalidatedRectangle.top = Math.floor(Math.min(this._invalidatedRectangle.top, invalidMinY));\n            this._invalidatedRectangle.width = maxX - this._invalidatedRectangle.left + 1;\n            this._invalidatedRectangle.height = maxY - this._invalidatedRectangle.top + 1;\n        }\n    };\n    /**\n     * Marks the texture as dirty forcing a complete update\n     */\n    AdvancedDynamicTexture.prototype.markAsDirty = function () {\n        this._isDirty = true;\n    };\n    /**\n     * Helper function used to create a new style\n     * @returns a new style\n     * @see https://doc.babylonjs.com/how_to/gui#styles\n     */\n    AdvancedDynamicTexture.prototype.createStyle = function () {\n        return new Style(this);\n    };\n    /**\n     * Adds a new control to the root container\n     * @param control defines the control to add\n     * @returns the current texture\n     */\n    AdvancedDynamicTexture.prototype.addControl = function (control) {\n        this._rootContainer.addControl(control);\n        return this;\n    };\n    /**\n     * Removes a control from the root container\n     * @param control defines the control to remove\n     * @returns the current texture\n     */\n    AdvancedDynamicTexture.prototype.removeControl = function (control) {\n        this._rootContainer.removeControl(control);\n        return this;\n    };\n    /**\n     * Moves overlapped controls towards a position where it is not overlapping anymore.\n     * Please note that this method alters linkOffsetXInPixels and linkOffsetYInPixels.\n     * @param overlapGroup the overlap group which will be processed or undefined to process all overlap groups\n     * @param deltaStep the step size (speed) to reach the target non overlapping position (default 0.1)\n     * @param repelFactor how much is the control repelled by other controls\n     */\n    AdvancedDynamicTexture.prototype.moveToNonOverlappedPosition = function (overlapGroup, deltaStep, repelFactor) {\n        if (deltaStep === void 0) { deltaStep = 1; }\n        if (repelFactor === void 0) { repelFactor = 1; }\n        var controlsForGroup;\n        if (Array.isArray(overlapGroup)) {\n            controlsForGroup = overlapGroup;\n        }\n        else {\n            var descendants = this.getDescendants(true);\n            // get only the controls with an overlapGroup property set\n            // if the overlapGroup parameter is set, filter the controls and get only the controls belonging to that overlapGroup\n            controlsForGroup = overlapGroup === undefined ? descendants.filter(function (c) { return c.overlapGroup !== undefined; }) : descendants.filter(function (c) { return c.overlapGroup === overlapGroup; });\n        }\n        controlsForGroup.forEach(function (control1) {\n            var _a;\n            var velocity = Vector2.Zero();\n            var center = new Vector2(control1.centerX, control1.centerY);\n            controlsForGroup.forEach(function (control2) {\n                if (control1 !== control2 && AdvancedDynamicTexture._Overlaps(control1, control2)) {\n                    // if the two controls overlaps get a direction vector from one control's center to another control's center\n                    var diff = center.subtract(new Vector2(control2.centerX, control2.centerY));\n                    var diffLength = diff.length();\n                    if (diffLength > 0) {\n                        // calculate the velocity\n                        velocity = velocity.add(diff.normalize().scale(repelFactor / diffLength));\n                    }\n                }\n            });\n            if (velocity.length() > 0) {\n                // move the control along the direction vector away from the overlapping control\n                velocity = velocity.normalize().scale(deltaStep * ((_a = control1.overlapDeltaMultiplier) !== null && _a !== void 0 ? _a : 1));\n                control1.linkOffsetXInPixels += velocity.x;\n                control1.linkOffsetYInPixels += velocity.y;\n            }\n        });\n    };\n    /**\n     * Release all resources\n     */\n    AdvancedDynamicTexture.prototype.dispose = function () {\n        var scene = this.getScene();\n        if (!scene) {\n            return;\n        }\n        this._rootElement = null;\n        scene.onBeforeCameraRenderObservable.remove(this._renderObserver);\n        if (this._resizeObserver) {\n            scene.getEngine().onResizeObservable.remove(this._resizeObserver);\n        }\n        if (this._pointerMoveObserver) {\n            scene.onPrePointerObservable.remove(this._pointerMoveObserver);\n        }\n        if (this._sceneRenderObserver) {\n            scene.onBeforeRenderObservable.remove(this._sceneRenderObserver);\n        }\n        if (this._pointerObserver) {\n            scene.onPointerObservable.remove(this._pointerObserver);\n        }\n        if (this._preKeyboardObserver) {\n            scene.onPreKeyboardObservable.remove(this._preKeyboardObserver);\n        }\n        if (this._canvasPointerOutObserver) {\n            scene.getEngine().onCanvasPointerOutObservable.remove(this._canvasPointerOutObserver);\n        }\n        if (this._canvasBlurObserver) {\n            scene.getEngine().onCanvasBlurObservable.remove(this._canvasBlurObserver);\n        }\n        if (this._layerToDispose) {\n            this._layerToDispose.texture = null;\n            this._layerToDispose.dispose();\n            this._layerToDispose = null;\n        }\n        this._rootContainer.dispose();\n        this.onClipboardObservable.clear();\n        this.onControlPickedObservable.clear();\n        this.onBeginRenderObservable.clear();\n        this.onEndRenderObservable.clear();\n        this.onBeginLayoutObservable.clear();\n        this.onEndLayoutObservable.clear();\n        _super.prototype.dispose.call(this);\n    };\n    AdvancedDynamicTexture.prototype._onResize = function () {\n        var scene = this.getScene();\n        if (!scene) {\n            return;\n        }\n        // Check size\n        var engine = scene.getEngine();\n        var textureSize = this.getSize();\n        var renderWidth = engine.getRenderWidth() * this._renderScale;\n        var renderHeight = engine.getRenderHeight() * this._renderScale;\n        if (this._renderAtIdealSize) {\n            if (this._idealWidth) {\n                renderHeight = (renderHeight * this._idealWidth) / renderWidth;\n                renderWidth = this._idealWidth;\n            }\n            else if (this._idealHeight) {\n                renderWidth = (renderWidth * this._idealHeight) / renderHeight;\n                renderHeight = this._idealHeight;\n            }\n        }\n        if (textureSize.width !== renderWidth || textureSize.height !== renderHeight) {\n            this.scaleTo(renderWidth, renderHeight);\n            this.markAsDirty();\n            if (this._idealWidth || this._idealHeight) {\n                this._rootContainer._markAllAsDirty();\n            }\n        }\n        this.invalidateRect(0, 0, textureSize.width - 1, textureSize.height - 1);\n    };\n    /** @hidden */\n    AdvancedDynamicTexture.prototype._getGlobalViewport = function () {\n        var size = this.getSize();\n        var globalViewPort = this._fullscreenViewport.toGlobal(size.width, size.height);\n        var targetX = Math.round(globalViewPort.width * (1 / this.rootContainer.scaleX));\n        var targetY = Math.round(globalViewPort.height * (1 / this.rootContainer.scaleY));\n        globalViewPort.x += (globalViewPort.width - targetX) / 2;\n        globalViewPort.y += (globalViewPort.height - targetY) / 2;\n        globalViewPort.width = targetX;\n        globalViewPort.height = targetY;\n        return globalViewPort;\n    };\n    /**\n     * Get screen coordinates for a vector3\n     * @param position defines the position to project\n     * @param worldMatrix defines the world matrix to use\n     * @returns the projected position\n     */\n    AdvancedDynamicTexture.prototype.getProjectedPosition = function (position, worldMatrix) {\n        var result = this.getProjectedPositionWithZ(position, worldMatrix);\n        return new Vector2(result.x, result.y);\n    };\n    /**\n     * Get screen coordinates for a vector3\n     * @param position defines the position to project\n     * @param worldMatrix defines the world matrix to use\n     * @returns the projected position with Z\n     */\n    AdvancedDynamicTexture.prototype.getProjectedPositionWithZ = function (position, worldMatrix) {\n        var scene = this.getScene();\n        if (!scene) {\n            return Vector3.Zero();\n        }\n        var globalViewport = this._getGlobalViewport();\n        var projectedPosition = Vector3.Project(position, worldMatrix, scene.getTransformMatrix(), globalViewport);\n        return new Vector3(projectedPosition.x, projectedPosition.y, projectedPosition.z);\n    };\n    AdvancedDynamicTexture.prototype._checkUpdate = function (camera) {\n        if (this._layerToDispose) {\n            if ((camera.layerMask & this._layerToDispose.layerMask) === 0) {\n                return;\n            }\n        }\n        if (this._isFullscreen && this._linkedControls.length) {\n            var scene = this.getScene();\n            if (!scene) {\n                return;\n            }\n            var globalViewport = this._getGlobalViewport();\n            var _loop_1 = function (control) {\n                if (!control.isVisible) {\n                    return \"continue\";\n                }\n                var mesh = control._linkedMesh;\n                if (!mesh || mesh.isDisposed()) {\n                    Tools.SetImmediate(function () {\n                        control.linkWithMesh(null);\n                    });\n                    return \"continue\";\n                }\n                var position = mesh.getBoundingInfo ? mesh.getBoundingInfo().boundingSphere.center : Vector3.ZeroReadOnly;\n                var projectedPosition = Vector3.Project(position, mesh.getWorldMatrix(), scene.getTransformMatrix(), globalViewport);\n                if (projectedPosition.z < 0 || projectedPosition.z > 1) {\n                    control.notRenderable = true;\n                    return \"continue\";\n                }\n                control.notRenderable = false;\n                control._moveToProjectedPosition(projectedPosition);\n            };\n            for (var _i = 0, _a = this._linkedControls; _i < _a.length; _i++) {\n                var control = _a[_i];\n                _loop_1(control);\n            }\n        }\n        if (!this._isDirty && !this._rootContainer.isDirty) {\n            return;\n        }\n        this._isDirty = false;\n        this._render();\n        this.update(this.applyYInversionOnUpdate, this.premulAlpha, AdvancedDynamicTexture.AllowGPUOptimizations);\n    };\n    AdvancedDynamicTexture.prototype._render = function () {\n        var textureSize = this.getSize();\n        var renderWidth = textureSize.width;\n        var renderHeight = textureSize.height;\n        var context = this.getContext();\n        context.font = \"18px Arial\";\n        context.strokeStyle = \"white\";\n        // Layout\n        this.onBeginLayoutObservable.notifyObservers(this);\n        var measure = new Measure(0, 0, renderWidth, renderHeight);\n        this._numLayoutCalls = 0;\n        this._rootContainer._layout(measure, context);\n        this.onEndLayoutObservable.notifyObservers(this);\n        this._isDirty = false; // Restoring the dirty state that could have been set by controls during layout processing\n        // Clear\n        if (this._invalidatedRectangle) {\n            this._clearMeasure.copyFrom(this._invalidatedRectangle);\n        }\n        else {\n            this._clearMeasure.copyFromFloats(0, 0, renderWidth, renderHeight);\n        }\n        context.clearRect(this._clearMeasure.left, this._clearMeasure.top, this._clearMeasure.width, this._clearMeasure.height);\n        if (this._background) {\n            context.save();\n            context.fillStyle = this._background;\n            context.fillRect(this._clearMeasure.left, this._clearMeasure.top, this._clearMeasure.width, this._clearMeasure.height);\n            context.restore();\n        }\n        // Render\n        this.onBeginRenderObservable.notifyObservers(this);\n        this._numRenderCalls = 0;\n        this._rootContainer._render(context, this._invalidatedRectangle);\n        this.onEndRenderObservable.notifyObservers(this);\n        this._invalidatedRectangle = null;\n    };\n    /**\n     * @param cursor\n     * @hidden\n     */\n    AdvancedDynamicTexture.prototype._changeCursor = function (cursor) {\n        if (this._rootElement) {\n            this._rootElement.style.cursor = cursor;\n            this._cursorChanged = true;\n        }\n    };\n    /**\n     * @param control\n     * @param pointerId\n     * @hidden\n     */\n    AdvancedDynamicTexture.prototype._registerLastControlDown = function (control, pointerId) {\n        this._lastControlDown[pointerId] = control;\n        this.onControlPickedObservable.notifyObservers(control);\n    };\n    AdvancedDynamicTexture.prototype._doPicking = function (x, y, pi, type, pointerId, buttonIndex, deltaX, deltaY) {\n        var scene = this.getScene();\n        if (!scene) {\n            return;\n        }\n        var engine = scene.getEngine();\n        var textureSize = this.getSize();\n        if (this._isFullscreen) {\n            var camera = scene.cameraToUseForPointers || scene.activeCamera;\n            if (!camera) {\n                return;\n            }\n            var viewport = camera.viewport;\n            x = x * (textureSize.width / (engine.getRenderWidth() * viewport.width));\n            y = y * (textureSize.height / (engine.getRenderHeight() * viewport.height));\n        }\n        if (this._capturingControl[pointerId]) {\n            this._capturingControl[pointerId]._processObservables(type, x, y, pi, pointerId, buttonIndex);\n            return;\n        }\n        this._cursorChanged = false;\n        if (!this._rootContainer._processPicking(x, y, pi, type, pointerId, buttonIndex, deltaX, deltaY)) {\n            if (!scene.doNotHandleCursors) {\n                this._changeCursor(\"\");\n            }\n            if (type === PointerEventTypes.POINTERMOVE) {\n                if (this._lastControlOver[pointerId]) {\n                    this._lastControlOver[pointerId]._onPointerOut(this._lastControlOver[pointerId], pi);\n                    delete this._lastControlOver[pointerId];\n                }\n            }\n        }\n        if (!this._cursorChanged && !scene.doNotHandleCursors) {\n            this._changeCursor(\"\");\n        }\n        this._manageFocus();\n    };\n    /**\n     * @param list\n     * @param control\n     * @hidden\n     */\n    AdvancedDynamicTexture.prototype._cleanControlAfterRemovalFromList = function (list, control) {\n        for (var pointerId in list) {\n            if (!Object.prototype.hasOwnProperty.call(list, pointerId)) {\n                continue;\n            }\n            var lastControlOver = list[pointerId];\n            if (lastControlOver === control) {\n                delete list[pointerId];\n            }\n        }\n    };\n    /**\n     * @param control\n     * @hidden\n     */\n    AdvancedDynamicTexture.prototype._cleanControlAfterRemoval = function (control) {\n        this._cleanControlAfterRemovalFromList(this._lastControlDown, control);\n        this._cleanControlAfterRemovalFromList(this._lastControlOver, control);\n    };\n    AdvancedDynamicTexture.prototype._translateToPicking = function (scene, tempViewport, pi) {\n        var camera = scene.cameraToUseForPointers || scene.activeCamera;\n        var engine = scene.getEngine();\n        var originalCameraToUseForPointers = scene.cameraToUseForPointers;\n        if (!camera) {\n            tempViewport.x = 0;\n            tempViewport.y = 0;\n            tempViewport.width = engine.getRenderWidth();\n            tempViewport.height = engine.getRenderHeight();\n        }\n        else {\n            if (camera.rigCameras.length) {\n                // rig camera - we need to find the camera to use for this event\n                var rigViewport_1 = new Viewport(0, 0, 1, 1);\n                camera.rigCameras.forEach(function (rigCamera) {\n                    // generate the viewport of this camera\n                    rigCamera.viewport.toGlobalToRef(engine.getRenderWidth(), engine.getRenderHeight(), rigViewport_1);\n                    var x = scene.pointerX / engine.getHardwareScalingLevel() - rigViewport_1.x;\n                    var y = scene.pointerY / engine.getHardwareScalingLevel() - (engine.getRenderHeight() - rigViewport_1.y - rigViewport_1.height);\n                    // check if the pointer is in the camera's viewport\n                    if (x < 0 || y < 0 || x > rigViewport_1.width || y > rigViewport_1.height) {\n                        // out of viewport - don't use this camera\n                        return;\n                    }\n                    // set the camera to use for pointers until this pointer loop is over\n                    scene.cameraToUseForPointers = rigCamera;\n                    // set the viewport\n                    tempViewport.x = rigViewport_1.x;\n                    tempViewport.y = rigViewport_1.y;\n                    tempViewport.width = rigViewport_1.width;\n                    tempViewport.height = rigViewport_1.height;\n                });\n            }\n            else {\n                camera.viewport.toGlobalToRef(engine.getRenderWidth(), engine.getRenderHeight(), tempViewport);\n            }\n        }\n        var x = scene.pointerX / engine.getHardwareScalingLevel() - tempViewport.x;\n        var y = scene.pointerY / engine.getHardwareScalingLevel() - (engine.getRenderHeight() - tempViewport.y - tempViewport.height);\n        this._shouldBlockPointer = false;\n        // Do picking modifies _shouldBlockPointer\n        if (pi) {\n            var pointerId = pi.event.pointerId || this._defaultMousePointerId;\n            this._doPicking(x, y, pi, pi.type, pointerId, pi.event.button, pi.event.deltaX, pi.event.deltaY);\n            // Avoid overwriting a true skipOnPointerObservable to false\n            if (this._shouldBlockPointer || this._capturingControl[pointerId]) {\n                pi.skipOnPointerObservable = true;\n            }\n        }\n        else {\n            this._doPicking(x, y, null, PointerEventTypes.POINTERMOVE, this._defaultMousePointerId, 0);\n        }\n        // if overridden by a rig camera - reset back to the original value\n        scene.cameraToUseForPointers = originalCameraToUseForPointers;\n    };\n    /** Attach to all scene events required to support pointer events */\n    AdvancedDynamicTexture.prototype.attach = function () {\n        var _this = this;\n        var scene = this.getScene();\n        if (!scene) {\n            return;\n        }\n        var tempViewport = new Viewport(0, 0, 0, 0);\n        this._pointerMoveObserver = scene.onPrePointerObservable.add(function (pi) {\n            if (scene.isPointerCaptured(pi.event.pointerId)) {\n                return;\n            }\n            if (pi.type !== PointerEventTypes.POINTERMOVE &&\n                pi.type !== PointerEventTypes.POINTERUP &&\n                pi.type !== PointerEventTypes.POINTERDOWN &&\n                pi.type !== PointerEventTypes.POINTERWHEEL) {\n                return;\n            }\n            if (pi.type === PointerEventTypes.POINTERMOVE && pi.event.pointerId) {\n                _this._defaultMousePointerId = pi.event.pointerId; // This is required to make sure we have the correct pointer ID for wheel\n            }\n            _this._translateToPicking(scene, tempViewport, pi);\n        });\n        this._attachPickingToSceneRender(scene, function () { return _this._translateToPicking(scene, tempViewport, null); }, false);\n        this._attachToOnPointerOut(scene);\n        this._attachToOnBlur(scene);\n    };\n    /**\n     * Register the clipboard Events onto the canvas\n     */\n    AdvancedDynamicTexture.prototype.registerClipboardEvents = function () {\n        self.addEventListener(\"copy\", this._onClipboardCopy, false);\n        self.addEventListener(\"cut\", this._onClipboardCut, false);\n        self.addEventListener(\"paste\", this._onClipboardPaste, false);\n    };\n    /**\n     * Unregister the clipboard Events from the canvas\n     */\n    AdvancedDynamicTexture.prototype.unRegisterClipboardEvents = function () {\n        self.removeEventListener(\"copy\", this._onClipboardCopy);\n        self.removeEventListener(\"cut\", this._onClipboardCut);\n        self.removeEventListener(\"paste\", this._onClipboardPaste);\n    };\n    /**\n     * Connect the texture to a hosting mesh to enable interactions\n     * @param mesh defines the mesh to attach to\n     * @param supportPointerMove defines a boolean indicating if pointer move events must be catched as well\n     */\n    AdvancedDynamicTexture.prototype.attachToMesh = function (mesh, supportPointerMove) {\n        var _this = this;\n        if (supportPointerMove === void 0) { supportPointerMove = true; }\n        var scene = this.getScene();\n        if (!scene) {\n            return;\n        }\n        this._pointerObserver = scene.onPointerObservable.add(function (pi) {\n            if (pi.type !== PointerEventTypes.POINTERMOVE &&\n                pi.type !== PointerEventTypes.POINTERUP &&\n                pi.type !== PointerEventTypes.POINTERDOWN &&\n                pi.type !== PointerEventTypes.POINTERWHEEL) {\n                return;\n            }\n            if (pi.type === PointerEventTypes.POINTERMOVE && pi.event.pointerId) {\n                _this._defaultMousePointerId = pi.event.pointerId; // This is required to make sure we have the correct pointer ID for wheel\n            }\n            var pointerId = pi.event.pointerId || _this._defaultMousePointerId;\n            if (pi.pickInfo && pi.pickInfo.hit && pi.pickInfo.pickedMesh === mesh) {\n                var uv = pi.pickInfo.getTextureCoordinates();\n                if (uv) {\n                    var size = _this.getSize();\n                    _this._doPicking(uv.x * size.width, (_this.applyYInversionOnUpdate ? 1.0 - uv.y : uv.y) * size.height, pi, pi.type, pointerId, pi.event.button, pi.event.deltaX, pi.event.deltaY);\n                }\n            }\n            else if (pi.type === PointerEventTypes.POINTERUP) {\n                if (_this._lastControlDown[pointerId]) {\n                    _this._lastControlDown[pointerId]._forcePointerUp(pointerId);\n                }\n                delete _this._lastControlDown[pointerId];\n                if (_this.focusedControl) {\n                    var friendlyControls = _this.focusedControl.keepsFocusWith();\n                    var canMoveFocus = true;\n                    if (friendlyControls) {\n                        for (var _i = 0, friendlyControls_1 = friendlyControls; _i < friendlyControls_1.length; _i++) {\n                            var control = friendlyControls_1[_i];\n                            // Same host, no need to keep the focus\n                            if (_this === control._host) {\n                                continue;\n                            }\n                            // Different hosts\n                            var otherHost = control._host;\n                            if (otherHost._lastControlOver[pointerId] && otherHost._lastControlOver[pointerId].isAscendant(control)) {\n                                canMoveFocus = false;\n                                break;\n                            }\n                        }\n                    }\n                    if (canMoveFocus) {\n                        _this.focusedControl = null;\n                    }\n                }\n            }\n            else if (pi.type === PointerEventTypes.POINTERMOVE) {\n                if (_this._lastControlOver[pointerId]) {\n                    _this._lastControlOver[pointerId]._onPointerOut(_this._lastControlOver[pointerId], pi, true);\n                }\n                delete _this._lastControlOver[pointerId];\n            }\n        });\n        mesh.enablePointerMoveEvents = supportPointerMove;\n        this._attachPickingToSceneRender(scene, function () {\n            var pointerId = _this._defaultMousePointerId;\n            var pick = scene === null || scene === void 0 ? void 0 : scene.pick(scene.pointerX, scene.pointerY);\n            if (pick && pick.hit && pick.pickedMesh === mesh) {\n                var uv = pick.getTextureCoordinates();\n                if (uv) {\n                    var size = _this.getSize();\n                    _this._doPicking(uv.x * size.width, (_this.applyYInversionOnUpdate ? 1.0 - uv.y : uv.y) * size.height, null, PointerEventTypes.POINTERMOVE, pointerId, 0);\n                }\n            }\n            else {\n                if (_this._lastControlOver[pointerId]) {\n                    _this._lastControlOver[pointerId]._onPointerOut(_this._lastControlOver[pointerId], null, true);\n                }\n                delete _this._lastControlOver[pointerId];\n            }\n        }, true);\n        this._attachToOnPointerOut(scene);\n        this._attachToOnBlur(scene);\n    };\n    /**\n     * Move the focus to a specific control\n     * @param control defines the control which will receive the focus\n     */\n    AdvancedDynamicTexture.prototype.moveFocusToControl = function (control) {\n        this.focusedControl = control;\n        this._lastPickedControl = control;\n        this._blockNextFocusCheck = true;\n    };\n    AdvancedDynamicTexture.prototype._manageFocus = function () {\n        if (this._blockNextFocusCheck) {\n            this._blockNextFocusCheck = false;\n            this._lastPickedControl = this._focusedControl;\n            return;\n        }\n        // Focus management\n        if (this._focusedControl) {\n            if (this._focusedControl !== this._lastPickedControl) {\n                if (this._lastPickedControl.isFocusInvisible) {\n                    return;\n                }\n                this.focusedControl = null;\n            }\n        }\n    };\n    AdvancedDynamicTexture.prototype._attachPickingToSceneRender = function (scene, pickFunction, forcePicking) {\n        var _this = this;\n        this._sceneRenderObserver = scene.onBeforeRenderObservable.add(function () {\n            if (!_this.checkPointerEveryFrame) {\n                return;\n            }\n            if (_this._linkedControls.length > 0 || forcePicking) {\n                pickFunction();\n            }\n        });\n    };\n    AdvancedDynamicTexture.prototype._attachToOnPointerOut = function (scene) {\n        var _this = this;\n        this._canvasPointerOutObserver = scene.getEngine().onCanvasPointerOutObservable.add(function (pointerEvent) {\n            if (_this._lastControlOver[pointerEvent.pointerId]) {\n                _this._lastControlOver[pointerEvent.pointerId]._onPointerOut(_this._lastControlOver[pointerEvent.pointerId], null);\n            }\n            delete _this._lastControlOver[pointerEvent.pointerId];\n            if (_this._lastControlDown[pointerEvent.pointerId] && _this._lastControlDown[pointerEvent.pointerId] !== _this._capturingControl[pointerEvent.pointerId]) {\n                _this._lastControlDown[pointerEvent.pointerId]._forcePointerUp();\n                delete _this._lastControlDown[pointerEvent.pointerId];\n            }\n        });\n    };\n    AdvancedDynamicTexture.prototype._attachToOnBlur = function (scene) {\n        var _this = this;\n        this._canvasBlurObserver = scene.getEngine().onCanvasBlurObservable.add(function () {\n            Object.entries(_this._lastControlDown).forEach(function (_a) {\n                var value = _a[1];\n                value._onCanvasBlur();\n            });\n            _this.focusedControl = null;\n            _this._lastControlDown = {};\n        });\n    };\n    /**\n     * Serializes the entire GUI system\n     * @returns an object with the JSON serialized data\n     */\n    AdvancedDynamicTexture.prototype.serializeContent = function () {\n        var size = this.getSize();\n        var serializationObject = {\n            root: {},\n            width: size.width,\n            height: size.height,\n        };\n        this._rootContainer.serialize(serializationObject.root);\n        return serializationObject;\n    };\n    /**\n     * Recreate the content of the ADT from a JSON object\n     * @param serializedObject define the JSON serialized object to restore from\n     * @param scaleToSize defines whether to scale to texture to the saved size\n     */\n    AdvancedDynamicTexture.prototype.parseContent = function (serializedObject, scaleToSize) {\n        this._rootContainer = Control.Parse(serializedObject.root, this);\n        if (scaleToSize) {\n            var width = serializedObject.width;\n            var height = serializedObject.height;\n            if (typeof width === \"number\" && typeof height === \"number\" && width >= 0 && height >= 0) {\n                this.scaleTo(width, height);\n            }\n            else {\n                // scales the GUI to a default size if none was available in the serialized content\n                this.scaleTo(1920, 1080);\n            }\n        }\n    };\n    /**\n     * Recreate the content of the ADT from a snippet saved by the GUI editor\n     * @param snippetId defines the snippet to load\n     * @param scaleToSize defines whether to scale to texture to the saved size\n     * @returns a promise that will resolve on success\n     */\n    AdvancedDynamicTexture.prototype.parseFromSnippetAsync = function (snippetId, scaleToSize) {\n        var _this = this;\n        if (snippetId === \"_BLANK\") {\n            return Promise.resolve();\n        }\n        return new Promise(function (resolve, reject) {\n            var request = new WebRequest();\n            request.addEventListener(\"readystatechange\", function () {\n                if (request.readyState == 4) {\n                    if (request.status == 200) {\n                        var snippet = JSON.parse(JSON.parse(request.responseText).jsonPayload);\n                        var serializationObject = JSON.parse(snippet.gui);\n                        _this.parseContent(serializationObject, scaleToSize);\n                        _this.snippetId = snippetId;\n                        resolve();\n                    }\n                    else {\n                        reject(\"Unable to load the snippet \" + snippetId);\n                    }\n                }\n            });\n            request.open(\"GET\", AdvancedDynamicTexture.SnippetUrl + \"/\" + snippetId.replace(/#/g, \"/\"));\n            request.send();\n        });\n    };\n    /**\n     * Recreate the content of the ADT from a url json\n     * @param url defines the url to load\n     * @param scaleToSize defines whether to scale to texture to the saved size\n     * @returns a promise that will resolve on success\n     */\n    AdvancedDynamicTexture.prototype.parseFromURLAsync = function (url, scaleToSize) {\n        var _this = this;\n        if (url === \"\") {\n            return Promise.resolve();\n        }\n        return new Promise(function (resolve, reject) {\n            var request = new WebRequest();\n            request.addEventListener(\"readystatechange\", function () {\n                if (request.readyState == 4) {\n                    if (request.status == 200) {\n                        var gui = request.responseText;\n                        var serializationObject = JSON.parse(gui);\n                        _this.parseContent(serializationObject, scaleToSize);\n                        resolve();\n                    }\n                    else {\n                        reject(\"Unable to load\");\n                    }\n                }\n            });\n            request.open(\"GET\", url);\n            request.send();\n        });\n    };\n    // Statics\n    /**\n     * Compares two rectangle based controls for pixel overlap\n     * @param control1 The first control to compare\n     * @param control2 The second control to compare\n     * @returns true if overlaps, otherwise false\n     */\n    AdvancedDynamicTexture._Overlaps = function (control1, control2) {\n        return !(control1.centerX > control2.centerX + control2.widthInPixels ||\n            control1.centerX + control1.widthInPixels < control2.centerX ||\n            control1.centerY + control1.heightInPixels < control2.centerY ||\n            control1.centerY > control2.centerY + control2.heightInPixels);\n    };\n    /**\n     * Creates a new AdvancedDynamicTexture in projected mode (ie. attached to a mesh)\n     * @param mesh defines the mesh which will receive the texture\n     * @param width defines the texture width (1024 by default)\n     * @param height defines the texture height (1024 by default)\n     * @param supportPointerMove defines a boolean indicating if the texture must capture move events (true by default)\n     * @param onlyAlphaTesting defines a boolean indicating that alpha blending will not be used (only alpha testing) (false by default)\n     * @param invertY defines if the texture needs to be inverted on the y axis during loading (true by default)\n     * @param materialSetupCallback defines a custom way of creating and setting up the material on the mesh\n     * @returns a new AdvancedDynamicTexture\n     */\n    AdvancedDynamicTexture.CreateForMesh = function (mesh, width, height, supportPointerMove, onlyAlphaTesting, invertY, materialSetupCallback) {\n        if (width === void 0) { width = 1024; }\n        if (height === void 0) { height = 1024; }\n        if (supportPointerMove === void 0) { supportPointerMove = true; }\n        if (onlyAlphaTesting === void 0) { onlyAlphaTesting = false; }\n        if (materialSetupCallback === void 0) { materialSetupCallback = this._CreateMaterial; }\n        // use a unique ID in name so serialization will work even if you create two ADTs for a single mesh\n        var uniqueId = RandomGUID();\n        var result = new AdvancedDynamicTexture(\"AdvancedDynamicTexture for \".concat(mesh.name, \" [\").concat(uniqueId, \"]\"), width, height, mesh.getScene(), true, Texture.TRILINEAR_SAMPLINGMODE, invertY);\n        materialSetupCallback(mesh, uniqueId, result, onlyAlphaTesting);\n        result.attachToMesh(mesh, supportPointerMove);\n        return result;\n    };\n    AdvancedDynamicTexture._CreateMaterial = function (mesh, uniqueId, texture, onlyAlphaTesting) {\n        var internalClassType = GetClass(\"BABYLON.StandardMaterial\");\n        if (!internalClassType) {\n            throw \"StandardMaterial needs to be imported before as it contains a side-effect required by your code.\";\n        }\n        var material = new internalClassType(\"AdvancedDynamicTextureMaterial for \".concat(mesh.name, \" [\").concat(uniqueId, \"]\"), mesh.getScene());\n        material.backFaceCulling = false;\n        material.diffuseColor = Color3.Black();\n        material.specularColor = Color3.Black();\n        if (onlyAlphaTesting) {\n            material.diffuseTexture = texture;\n            material.emissiveTexture = texture;\n            texture.hasAlpha = true;\n        }\n        else {\n            material.emissiveTexture = texture;\n            material.opacityTexture = texture;\n        }\n        mesh.material = material;\n    };\n    /**\n     * Creates a new AdvancedDynamicTexture in projected mode (ie. attached to a mesh) BUT do not create a new material for the mesh. You will be responsible for connecting the texture\n     * @param mesh defines the mesh which will receive the texture\n     * @param width defines the texture width (1024 by default)\n     * @param height defines the texture height (1024 by default)\n     * @param supportPointerMove defines a boolean indicating if the texture must capture move events (true by default)\n     * @param invertY defines if the texture needs to be inverted on the y axis during loading (true by default)\n     * @returns a new AdvancedDynamicTexture\n     */\n    AdvancedDynamicTexture.CreateForMeshTexture = function (mesh, width, height, supportPointerMove, invertY) {\n        if (width === void 0) { width = 1024; }\n        if (height === void 0) { height = 1024; }\n        if (supportPointerMove === void 0) { supportPointerMove = true; }\n        var result = new AdvancedDynamicTexture(mesh.name + \" AdvancedDynamicTexture\", width, height, mesh.getScene(), true, Texture.TRILINEAR_SAMPLINGMODE, invertY);\n        result.attachToMesh(mesh, supportPointerMove);\n        return result;\n    };\n    /**\n     * Creates a new AdvancedDynamicTexture in fullscreen mode.\n     * In this mode the texture will rely on a layer for its rendering.\n     * This allows it to be treated like any other layer.\n     * As such, if you have a multi camera setup, you can set the layerMask on the GUI as well.\n     * LayerMask is set through advancedTexture.layer.layerMask\n     * @param name defines name for the texture\n     * @param foreground defines a boolean indicating if the texture must be rendered in foreground (default is true)\n     * @param scene defines the hosting scene\n     * @param sampling defines the texture sampling mode (Texture.BILINEAR_SAMPLINGMODE by default)\n     * @param adaptiveScaling defines whether to automatically scale root to match hardwarescaling (false by default)\n     * @returns a new AdvancedDynamicTexture\n     */\n    AdvancedDynamicTexture.CreateFullscreenUI = function (name, foreground, scene, sampling, adaptiveScaling) {\n        if (foreground === void 0) { foreground = true; }\n        if (scene === void 0) { scene = null; }\n        if (sampling === void 0) { sampling = Texture.BILINEAR_SAMPLINGMODE; }\n        if (adaptiveScaling === void 0) { adaptiveScaling = false; }\n        var result = new AdvancedDynamicTexture(name, 0, 0, scene, false, sampling);\n        // Display\n        var resultScene = result.getScene();\n        var layer = new Layer(name + \"_layer\", null, resultScene, !foreground);\n        layer.texture = result;\n        result._layerToDispose = layer;\n        result._isFullscreen = true;\n        if (adaptiveScaling && resultScene) {\n            var newScale = 1 / resultScene.getEngine().getHardwareScalingLevel();\n            result._rootContainer.scaleX = newScale;\n            result._rootContainer.scaleY = newScale;\n        }\n        // Attach\n        result.attach();\n        return result;\n    };\n    /**\n     * Scales the texture\n     * @param ratio the scale factor to apply to both width and height\n     */\n    AdvancedDynamicTexture.prototype.scale = function (ratio) {\n        _super.prototype.scale.call(this, ratio);\n        this.markAsDirty();\n    };\n    /**\n     * Resizes the texture\n     * @param width the new width\n     * @param height the new height\n     */\n    AdvancedDynamicTexture.prototype.scaleTo = function (width, height) {\n        _super.prototype.scaleTo.call(this, width, height);\n        this.markAsDirty();\n    };\n    /** Define the Uurl to load snippets */\n    AdvancedDynamicTexture.SnippetUrl = Constants.SnippetUrl;\n    /** Indicates if some optimizations can be performed in GUI GPU management (the downside is additional memory/GPU texture memory used) */\n    AdvancedDynamicTexture.AllowGPUOptimizations = true;\n    return AdvancedDynamicTexture;\n}(DynamicTexture));\nexport { AdvancedDynamicTexture };\n//# sourceMappingURL=advancedDynamicTexture.js.map","import { __extends } from \"tslib\";\nimport { Rectangle } from \"./rectangle.js\";\nimport { Control } from \"./control.js\";\nimport { TextBlock } from \"./textBlock.js\";\nimport { Image } from \"./image.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\n/**\n * Class used to create 2D buttons\n */\nvar Button = /** @class */ (function (_super) {\n    __extends(Button, _super);\n    /**\n     * Creates a new Button\n     * @param name defines the name of the button\n     */\n    function Button(name) {\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        /**\n         * Gets or sets a boolean indicating that the button will let internal controls handle picking instead of doing it directly using its bounding info\n         */\n        _this.delegatePickingToChildren = false;\n        _this.thickness = 1;\n        _this.isPointerBlocker = true;\n        var alphaStore = null;\n        _this.pointerEnterAnimation = function () {\n            alphaStore = _this.alpha;\n            _this.alpha -= 0.1;\n        };\n        _this.pointerOutAnimation = function () {\n            if (alphaStore !== null) {\n                _this.alpha = alphaStore;\n            }\n        };\n        _this.pointerDownAnimation = function () {\n            _this.scaleX -= 0.05;\n            _this.scaleY -= 0.05;\n        };\n        _this.pointerUpAnimation = function () {\n            _this.scaleX += 0.05;\n            _this.scaleY += 0.05;\n        };\n        return _this;\n    }\n    Object.defineProperty(Button.prototype, \"image\", {\n        /**\n         * Returns the image part of the button (if any)\n         */\n        get: function () {\n            return this._image;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Button.prototype, \"textBlock\", {\n        /**\n         * Returns the image part of the button (if any)\n         */\n        get: function () {\n            return this._textBlock;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Button.prototype._getTypeName = function () {\n        return \"Button\";\n    };\n    // While being a container, the button behaves like a control.\n    /**\n     * @param x\n     * @param y\n     * @param pi\n     * @param type\n     * @param pointerId\n     * @param buttonIndex\n     * @param deltaX\n     * @param deltaY\n     * @hidden\n     */\n    Button.prototype._processPicking = function (x, y, pi, type, pointerId, buttonIndex, deltaX, deltaY) {\n        if (!this._isEnabled || !this.isHitTestVisible || !this.isVisible || this.notRenderable) {\n            return false;\n        }\n        if (!_super.prototype.contains.call(this, x, y)) {\n            return false;\n        }\n        if (this.delegatePickingToChildren) {\n            var contains = false;\n            for (var index = this._children.length - 1; index >= 0; index--) {\n                var child = this._children[index];\n                if (child.isEnabled && child.isHitTestVisible && child.isVisible && !child.notRenderable && child.contains(x, y)) {\n                    contains = true;\n                    break;\n                }\n            }\n            if (!contains) {\n                return false;\n            }\n        }\n        this._processObservables(type, x, y, pi, pointerId, buttonIndex, deltaX, deltaY);\n        return true;\n    };\n    /**\n     * @param target\n     * @param pi\n     * @hidden\n     */\n    Button.prototype._onPointerEnter = function (target, pi) {\n        if (!_super.prototype._onPointerEnter.call(this, target, pi)) {\n            return false;\n        }\n        if (!this.isReadOnly && this.pointerEnterAnimation) {\n            this.pointerEnterAnimation();\n        }\n        return true;\n    };\n    /**\n     * @param target\n     * @param pi\n     * @param force\n     * @hidden\n     */\n    Button.prototype._onPointerOut = function (target, pi, force) {\n        if (force === void 0) { force = false; }\n        if (!this.isReadOnly && this.pointerOutAnimation) {\n            this.pointerOutAnimation();\n        }\n        _super.prototype._onPointerOut.call(this, target, pi, force);\n    };\n    /**\n     * @param target\n     * @param coordinates\n     * @param pointerId\n     * @param buttonIndex\n     * @param pi\n     * @hidden\n     */\n    Button.prototype._onPointerDown = function (target, coordinates, pointerId, buttonIndex, pi) {\n        if (!_super.prototype._onPointerDown.call(this, target, coordinates, pointerId, buttonIndex, pi)) {\n            return false;\n        }\n        if (!this.isReadOnly && this.pointerDownAnimation) {\n            this.pointerDownAnimation();\n        }\n        return true;\n    };\n    /**\n     * @param target\n     * @param coordinates\n     * @param pointerId\n     * @param buttonIndex\n     * @param notifyClick\n     * @param pi\n     * @hidden\n     */\n    Button.prototype._onPointerUp = function (target, coordinates, pointerId, buttonIndex, notifyClick, pi) {\n        if (!this.isReadOnly && this.pointerUpAnimation) {\n            this.pointerUpAnimation();\n        }\n        _super.prototype._onPointerUp.call(this, target, coordinates, pointerId, buttonIndex, notifyClick, pi);\n    };\n    /**\n     * Serializes the current button\n     * @param serializationObject defines the JSON serialized object\n     */\n    Button.prototype.serialize = function (serializationObject) {\n        _super.prototype.serialize.call(this, serializationObject);\n        if (this._textBlock) {\n            serializationObject.textBlockName = this._textBlock.name;\n        }\n        if (this._image) {\n            serializationObject.imageName = this._image.name;\n        }\n    };\n    /**\n     * @param serializedObject\n     * @param host\n     * @hidden\n     */\n    Button.prototype._parseFromContent = function (serializedObject, host) {\n        _super.prototype._parseFromContent.call(this, serializedObject, host);\n        if (serializedObject.textBlockName) {\n            this._textBlock = this.getChildByName(serializedObject.textBlockName);\n        }\n        if (serializedObject.imageName) {\n            this._image = this.getChildByName(serializedObject.imageName);\n        }\n    };\n    // Statics\n    /**\n     * Creates a new button made with an image and a text\n     * @param name defines the name of the button\n     * @param text defines the text of the button\n     * @param imageUrl defines the url of the image\n     * @returns a new Button\n     */\n    Button.CreateImageButton = function (name, text, imageUrl) {\n        var result = new this(name);\n        // Adding text\n        var textBlock = new TextBlock(name + \"_button\", text);\n        textBlock.textWrapping = true;\n        textBlock.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\n        textBlock.paddingLeft = \"20%\";\n        result.addControl(textBlock);\n        // Adding image\n        var iconImage = new Image(name + \"_icon\", imageUrl);\n        iconImage.width = \"20%\";\n        iconImage.stretch = Image.STRETCH_UNIFORM;\n        iconImage.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        result.addControl(iconImage);\n        // Store\n        result._image = iconImage;\n        result._textBlock = textBlock;\n        return result;\n    };\n    /**\n     * Creates a new button made with an image\n     * @param name defines the name of the button\n     * @param imageUrl defines the url of the image\n     * @returns a new Button\n     */\n    Button.CreateImageOnlyButton = function (name, imageUrl) {\n        var result = new this(name);\n        // Adding image\n        var iconImage = new Image(name + \"_icon\", imageUrl);\n        iconImage.stretch = Image.STRETCH_FILL;\n        iconImage.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        result.addControl(iconImage);\n        // Store\n        result._image = iconImage;\n        return result;\n    };\n    /**\n     * Creates a new button made with a text\n     * @param name defines the name of the button\n     * @param text defines the text of the button\n     * @returns a new Button\n     */\n    Button.CreateSimpleButton = function (name, text) {\n        var result = new this(name);\n        // Adding text\n        var textBlock = new TextBlock(name + \"_button\", text);\n        textBlock.textWrapping = true;\n        textBlock.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\n        result.addControl(textBlock);\n        // Store\n        result._textBlock = textBlock;\n        return result;\n    };\n    /**\n     * Creates a new button made with an image and a centered text\n     * @param name defines the name of the button\n     * @param text defines the text of the button\n     * @param imageUrl defines the url of the image\n     * @returns a new Button\n     */\n    Button.CreateImageWithCenterTextButton = function (name, text, imageUrl) {\n        var result = new this(name);\n        // Adding image\n        var iconImage = new Image(name + \"_icon\", imageUrl);\n        iconImage.stretch = Image.STRETCH_FILL;\n        result.addControl(iconImage);\n        // Adding text\n        var textBlock = new TextBlock(name + \"_button\", text);\n        textBlock.textWrapping = true;\n        textBlock.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\n        result.addControl(textBlock);\n        // Store\n        result._image = iconImage;\n        result._textBlock = textBlock;\n        return result;\n    };\n    return Button;\n}(Rectangle));\nexport { Button };\nRegisterClass(\"BABYLON.GUI.Button\", Button);\n//# sourceMappingURL=button.js.map","import { __decorate, __extends } from \"tslib\";\nimport { Logger } from \"@babylonjs/core/Misc/logger.js\";\nimport { Control } from \"./control.js\";\nimport { Measure } from \"../measure.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { serialize } from \"@babylonjs/core/Misc/decorators.js\";\nimport { DynamicTexture } from \"@babylonjs/core/Materials/Textures/dynamicTexture.js\";\nimport { Texture } from \"@babylonjs/core/Materials/Textures/texture.js\";\nimport { Constants } from \"@babylonjs/core/Engines/constants.js\";\n/**\n * Root class for 2D containers\n * @see https://doc.babylonjs.com/how_to/gui#containers\n */\nvar Container = /** @class */ (function (_super) {\n    __extends(Container, _super);\n    /**\n     * Creates a new Container\n     * @param name defines the name of the container\n     */\n    function Container(name) {\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        /** @hidden */\n        _this._children = new Array();\n        /** @hidden */\n        _this._measureForChildren = Measure.Empty();\n        /** @hidden */\n        _this._background = \"\";\n        /** @hidden */\n        _this._adaptWidthToChildren = false;\n        /** @hidden */\n        _this._adaptHeightToChildren = false;\n        /** @hidden */\n        _this._renderToIntermediateTexture = false;\n        /** @hidden */\n        _this._intermediateTexture = null;\n        /**\n         * Gets or sets a boolean indicating that layout cycle errors should be displayed on the console\n         */\n        _this.logLayoutCycleErrors = false;\n        /**\n         * Gets or sets the number of layout cycles (a change involved by a control while evaluating the layout) allowed\n         */\n        _this.maxLayoutCycle = 3;\n        return _this;\n    }\n    Object.defineProperty(Container.prototype, \"renderToIntermediateTexture\", {\n        /** Gets or sets boolean indicating if children should be rendered to an intermediate texture rather than directly to host, useful for alpha blending */\n        get: function () {\n            return this._renderToIntermediateTexture;\n        },\n        set: function (value) {\n            if (this._renderToIntermediateTexture === value) {\n                return;\n            }\n            this._renderToIntermediateTexture = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Container.prototype, \"adaptHeightToChildren\", {\n        /** Gets or sets a boolean indicating if the container should try to adapt to its children height */\n        get: function () {\n            return this._adaptHeightToChildren;\n        },\n        set: function (value) {\n            if (this._adaptHeightToChildren === value) {\n                return;\n            }\n            this._adaptHeightToChildren = value;\n            if (value) {\n                this.height = \"100%\";\n            }\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Container.prototype, \"adaptWidthToChildren\", {\n        /** Gets or sets a boolean indicating if the container should try to adapt to its children width */\n        get: function () {\n            return this._adaptWidthToChildren;\n        },\n        set: function (value) {\n            if (this._adaptWidthToChildren === value) {\n                return;\n            }\n            this._adaptWidthToChildren = value;\n            if (value) {\n                this.width = \"100%\";\n            }\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Container.prototype, \"background\", {\n        /** Gets or sets background color */\n        get: function () {\n            return this._background;\n        },\n        set: function (value) {\n            if (this._background === value) {\n                return;\n            }\n            this._background = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Container.prototype, \"children\", {\n        /** Gets the list of children */\n        get: function () {\n            return this._children;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Container.prototype, \"isReadOnly\", {\n        get: function () {\n            return this._isReadOnly;\n        },\n        set: function (value) {\n            this._isReadOnly = value;\n            for (var _i = 0, _a = this._children; _i < _a.length; _i++) {\n                var child = _a[_i];\n                child.isReadOnly = value;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Container.prototype._getTypeName = function () {\n        return \"Container\";\n    };\n    Container.prototype._flagDescendantsAsMatrixDirty = function () {\n        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            child._isClipped = false;\n            child._markMatrixAsDirty();\n        }\n    };\n    /**\n     * Gets a child using its name\n     * @param name defines the child name to look for\n     * @returns the child control if found\n     */\n    Container.prototype.getChildByName = function (name) {\n        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            if (child.name === name) {\n                return child;\n            }\n        }\n        return null;\n    };\n    /**\n     * Gets a child using its type and its name\n     * @param name defines the child name to look for\n     * @param type defines the child type to look for\n     * @returns the child control if found\n     */\n    Container.prototype.getChildByType = function (name, type) {\n        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            if (child.typeName === type) {\n                return child;\n            }\n        }\n        return null;\n    };\n    /**\n     * Search for a specific control in children\n     * @param control defines the control to look for\n     * @returns true if the control is in child list\n     */\n    Container.prototype.containsControl = function (control) {\n        return this.children.indexOf(control) !== -1;\n    };\n    /**\n     * Adds a new control to the current container\n     * @param control defines the control to add\n     * @returns the current container\n     */\n    Container.prototype.addControl = function (control) {\n        if (!control) {\n            return this;\n        }\n        var index = this._children.indexOf(control);\n        if (index !== -1) {\n            return this;\n        }\n        control._link(this._host);\n        control._markAllAsDirty();\n        this._reOrderControl(control);\n        this._markAsDirty();\n        return this;\n    };\n    /**\n     * Removes all controls from the current container\n     * @returns the current container\n     */\n    Container.prototype.clearControls = function () {\n        var children = this.children.slice();\n        for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\n            var child = children_1[_i];\n            this.removeControl(child);\n        }\n        return this;\n    };\n    /**\n     * Removes a control from the current container\n     * @param control defines the control to remove\n     * @returns the current container\n     */\n    Container.prototype.removeControl = function (control) {\n        var index = this._children.indexOf(control);\n        if (index !== -1) {\n            this._children.splice(index, 1);\n            control.parent = null;\n        }\n        control.linkWithMesh(null);\n        if (this._host) {\n            this._host._cleanControlAfterRemoval(control);\n        }\n        this._markAsDirty();\n        return this;\n    };\n    /**\n     * @param control\n     * @hidden\n     */\n    Container.prototype._reOrderControl = function (control) {\n        this.removeControl(control);\n        var wasAdded = false;\n        for (var index = 0; index < this._children.length; index++) {\n            if (this._children[index].zIndex > control.zIndex) {\n                this._children.splice(index, 0, control);\n                wasAdded = true;\n                break;\n            }\n        }\n        if (!wasAdded) {\n            this._children.push(control);\n        }\n        control.parent = this;\n        this._markAsDirty();\n    };\n    /**\n     * @param offset\n     * @hidden\n     */\n    Container.prototype._offsetLeft = function (offset) {\n        _super.prototype._offsetLeft.call(this, offset);\n        for (var _i = 0, _a = this._children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            child._offsetLeft(offset);\n        }\n    };\n    /**\n     * @param offset\n     * @hidden\n     */\n    Container.prototype._offsetTop = function (offset) {\n        _super.prototype._offsetTop.call(this, offset);\n        for (var _i = 0, _a = this._children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            child._offsetTop(offset);\n        }\n    };\n    /** @hidden */\n    Container.prototype._markAllAsDirty = function () {\n        _super.prototype._markAllAsDirty.call(this);\n        for (var index = 0; index < this._children.length; index++) {\n            this._children[index]._markAllAsDirty();\n        }\n    };\n    /**\n     * @param context\n     * @hidden\n     */\n    Container.prototype._localDraw = function (context) {\n        if (this._background) {\n            context.save();\n            if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n                context.shadowColor = this.shadowColor;\n                context.shadowBlur = this.shadowBlur;\n                context.shadowOffsetX = this.shadowOffsetX;\n                context.shadowOffsetY = this.shadowOffsetY;\n            }\n            context.fillStyle = this._background;\n            context.fillRect(this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height);\n            context.restore();\n        }\n    };\n    /**\n     * @param host\n     * @hidden\n     */\n    Container.prototype._link = function (host) {\n        _super.prototype._link.call(this, host);\n        for (var _i = 0, _a = this._children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            child._link(host);\n        }\n    };\n    /** @hidden */\n    Container.prototype._beforeLayout = function () {\n        // Do nothing\n    };\n    /**\n     * @param parentMeasure\n     * @param context\n     * @hidden\n     */\n    Container.prototype._processMeasures = function (parentMeasure, context) {\n        if (this._isDirty || !this._cachedParentMeasure.isEqualsTo(parentMeasure)) {\n            _super.prototype._processMeasures.call(this, parentMeasure, context);\n            this._evaluateClippingState(parentMeasure);\n            if (this._renderToIntermediateTexture) {\n                if (this._intermediateTexture && this._host.getScene() != this._intermediateTexture.getScene()) {\n                    this._intermediateTexture.dispose();\n                    this._intermediateTexture = null;\n                }\n                if (!this._intermediateTexture) {\n                    this._intermediateTexture = new DynamicTexture(\"\", { width: this._currentMeasure.width, height: this._currentMeasure.height }, this._host.getScene(), false, Texture.NEAREST_SAMPLINGMODE, Constants.TEXTUREFORMAT_RGBA, false);\n                    this._intermediateTexture.hasAlpha = true;\n                }\n                else {\n                    this._intermediateTexture.scaleTo(this._currentMeasure.width, this._currentMeasure.height);\n                }\n            }\n        }\n    };\n    /**\n     * @param parentMeasure\n     * @param context\n     * @hidden\n     */\n    Container.prototype._layout = function (parentMeasure, context) {\n        var _a, _b;\n        if (!this.isDirty && (!this.isVisible || this.notRenderable)) {\n            return false;\n        }\n        this.host._numLayoutCalls++;\n        if (this._isDirty) {\n            this._currentMeasure.transformToRef(this._transformMatrix, this._prevCurrentMeasureTransformedIntoGlobalSpace);\n        }\n        var rebuildCount = 0;\n        context.save();\n        this._applyStates(context);\n        this._beforeLayout();\n        do {\n            var computedWidth = -1;\n            var computedHeight = -1;\n            this._rebuildLayout = false;\n            this._processMeasures(parentMeasure, context);\n            if (!this._isClipped) {\n                for (var _i = 0, _c = this._children; _i < _c.length; _i++) {\n                    var child = _c[_i];\n                    child._tempParentMeasure.copyFrom(this._measureForChildren);\n                    if (child._layout(this._measureForChildren, context)) {\n                        if (child.isVisible && !child.notRenderable) {\n                            if (this.adaptWidthToChildren && child._width.isPixel) {\n                                computedWidth = Math.max(computedWidth, child._currentMeasure.width + child._paddingLeftInPixels + child._paddingRightInPixels);\n                            }\n                            if (this.adaptHeightToChildren && child._height.isPixel) {\n                                computedHeight = Math.max(computedHeight, child._currentMeasure.height + child._paddingTopInPixels + child._paddingBottomInPixels);\n                            }\n                        }\n                    }\n                }\n                if (this.adaptWidthToChildren && computedWidth >= 0) {\n                    computedWidth += this.paddingLeftInPixels + this.paddingRightInPixels;\n                    if (this.width !== computedWidth + \"px\") {\n                        (_a = this.parent) === null || _a === void 0 ? void 0 : _a._markAsDirty();\n                        this.width = computedWidth + \"px\";\n                        this._width.ignoreAdaptiveScaling = true;\n                        this._rebuildLayout = true;\n                    }\n                }\n                if (this.adaptHeightToChildren && computedHeight >= 0) {\n                    computedHeight += this.paddingTopInPixels + this.paddingBottomInPixels;\n                    if (this.height !== computedHeight + \"px\") {\n                        (_b = this.parent) === null || _b === void 0 ? void 0 : _b._markAsDirty();\n                        this.height = computedHeight + \"px\";\n                        this._height.ignoreAdaptiveScaling = true;\n                        this._rebuildLayout = true;\n                    }\n                }\n                this._postMeasure();\n            }\n            rebuildCount++;\n        } while (this._rebuildLayout && rebuildCount < this.maxLayoutCycle);\n        if (rebuildCount >= 3 && this.logLayoutCycleErrors) {\n            Logger.Error(\"Layout cycle detected in GUI (Container name=\".concat(this.name, \", uniqueId=\").concat(this.uniqueId, \")\"));\n        }\n        context.restore();\n        if (this._isDirty) {\n            this.invalidateRect();\n            this._isDirty = false;\n        }\n        return true;\n    };\n    Container.prototype._postMeasure = function () {\n        // Do nothing by default\n    };\n    /**\n     * @param context\n     * @param invalidatedRectangle\n     * @hidden\n     */\n    Container.prototype._draw = function (context, invalidatedRectangle) {\n        var renderToIntermediateTextureThisDraw = this._renderToIntermediateTexture && this._intermediateTexture;\n        var contextToDrawTo = renderToIntermediateTextureThisDraw ? this._intermediateTexture.getContext() : context;\n        if (renderToIntermediateTextureThisDraw) {\n            contextToDrawTo.save();\n            contextToDrawTo.translate(-this._currentMeasure.left, -this._currentMeasure.top);\n            if (invalidatedRectangle) {\n                contextToDrawTo.clearRect(invalidatedRectangle.left, invalidatedRectangle.top, invalidatedRectangle.width, invalidatedRectangle.height);\n            }\n            else {\n                contextToDrawTo.clearRect(this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height);\n            }\n        }\n        this._localDraw(contextToDrawTo);\n        context.save();\n        if (this.clipChildren) {\n            this._clipForChildren(contextToDrawTo);\n        }\n        for (var _i = 0, _a = this._children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            // Only redraw parts of the screen that are invalidated\n            if (invalidatedRectangle) {\n                if (!child._intersectsRect(invalidatedRectangle)) {\n                    continue;\n                }\n            }\n            child._render(contextToDrawTo, invalidatedRectangle);\n        }\n        if (renderToIntermediateTextureThisDraw) {\n            contextToDrawTo.restore();\n            context.save();\n            context.globalAlpha = this.alpha;\n            context.drawImage(contextToDrawTo.canvas, this._currentMeasure.left, this._currentMeasure.top);\n            context.restore();\n        }\n        context.restore();\n    };\n    Container.prototype.getDescendantsToRef = function (results, directDescendantsOnly, predicate) {\n        if (directDescendantsOnly === void 0) { directDescendantsOnly = false; }\n        if (!this.children) {\n            return;\n        }\n        for (var index = 0; index < this.children.length; index++) {\n            var item = this.children[index];\n            if (!predicate || predicate(item)) {\n                results.push(item);\n            }\n            if (!directDescendantsOnly) {\n                item.getDescendantsToRef(results, false, predicate);\n            }\n        }\n    };\n    /**\n     * @param x\n     * @param y\n     * @param pi\n     * @param type\n     * @param pointerId\n     * @param buttonIndex\n     * @param deltaX\n     * @param deltaY\n     * @hidden\n     */\n    Container.prototype._processPicking = function (x, y, pi, type, pointerId, buttonIndex, deltaX, deltaY) {\n        if (!this._isEnabled || !this.isVisible || this.notRenderable) {\n            return false;\n        }\n        // checks if the picking position is within the container\n        var contains = _super.prototype.contains.call(this, x, y);\n        // if clipChildren is off, we should still pass picking events to children even if we don't contain the pointer\n        if (!contains && this.clipChildren) {\n            return false;\n        }\n        // Checking backwards to pick closest first\n        for (var index = this._children.length - 1; index >= 0; index--) {\n            var child = this._children[index];\n            if (child._processPicking(x, y, pi, type, pointerId, buttonIndex, deltaX, deltaY)) {\n                if (child.hoverCursor) {\n                    this._host._changeCursor(child.hoverCursor);\n                }\n                return true;\n            }\n        }\n        if (!contains) {\n            return false;\n        }\n        if (!this.isHitTestVisible) {\n            return false;\n        }\n        return this._processObservables(type, x, y, pi, pointerId, buttonIndex, deltaX, deltaY);\n    };\n    /**\n     * @param parentMeasure\n     * @param context\n     * @hidden\n     */\n    Container.prototype._additionalProcessing = function (parentMeasure, context) {\n        _super.prototype._additionalProcessing.call(this, parentMeasure, context);\n        this._measureForChildren.copyFrom(this._currentMeasure);\n    };\n    /**\n     * Serializes the current control\n     * @param serializationObject defined the JSON serialized object\n     */\n    Container.prototype.serialize = function (serializationObject) {\n        _super.prototype.serialize.call(this, serializationObject);\n        if (!this.children.length) {\n            return;\n        }\n        serializationObject.children = [];\n        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            var childSerializationObject = {};\n            child.serialize(childSerializationObject);\n            serializationObject.children.push(childSerializationObject);\n        }\n    };\n    /** Releases associated resources */\n    Container.prototype.dispose = function () {\n        var _a;\n        _super.prototype.dispose.call(this);\n        for (var index = this.children.length - 1; index >= 0; index--) {\n            this.children[index].dispose();\n        }\n        (_a = this._intermediateTexture) === null || _a === void 0 ? void 0 : _a.dispose();\n    };\n    /**\n     * @param serializedObject\n     * @param host\n     * @hidden\n     */\n    Container.prototype._parseFromContent = function (serializedObject, host) {\n        _super.prototype._parseFromContent.call(this, serializedObject, host);\n        this._link(host);\n        if (!serializedObject.children) {\n            return;\n        }\n        for (var _i = 0, _a = serializedObject.children; _i < _a.length; _i++) {\n            var childData = _a[_i];\n            this.addControl(Control.Parse(childData, host));\n        }\n    };\n    __decorate([\n        serialize()\n    ], Container.prototype, \"renderToIntermediateTexture\", null);\n    __decorate([\n        serialize()\n    ], Container.prototype, \"maxLayoutCycle\", void 0);\n    __decorate([\n        serialize()\n    ], Container.prototype, \"adaptHeightToChildren\", null);\n    __decorate([\n        serialize()\n    ], Container.prototype, \"adaptWidthToChildren\", null);\n    __decorate([\n        serialize()\n    ], Container.prototype, \"background\", null);\n    return Container;\n}(Control));\nexport { Container };\nRegisterClass(\"BABYLON.GUI.Container\", Container);\n//# sourceMappingURL=container.js.map","import { __decorate } from \"tslib\";\nimport { Observable } from \"@babylonjs/core/Misc/observable.js\";\nimport { Vector2, Vector3, Matrix } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { PointerEventTypes } from \"@babylonjs/core/Events/pointerEvents.js\";\nimport { Logger } from \"@babylonjs/core/Misc/logger.js\";\nimport { Tools } from \"@babylonjs/core/Misc/tools.js\";\nimport { ValueAndUnit } from \"../valueAndUnit.js\";\nimport { Measure } from \"../measure.js\";\nimport { Matrix2D, Vector2WithInfo } from \"../math2D.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { SerializationHelper, serialize } from \"@babylonjs/core/Misc/decorators.js\";\nimport { EngineStore } from \"@babylonjs/core/Engines/engineStore.js\";\n/**\n * Root class used for all 2D controls\n * @see https://doc.babylonjs.com/how_to/gui#controls\n */\nvar Control = /** @class */ (function () {\n    // Functions\n    /**\n     * Creates a new control\n     * @param name defines the name of the control\n     */\n    function Control(\n    /** defines the name of the control */\n    name) {\n        this.name = name;\n        this._alpha = 1;\n        this._alphaSet = false;\n        this._zIndex = 0;\n        /** @hidden */\n        this._currentMeasure = Measure.Empty();\n        /** @hidden */\n        this._tempPaddingMeasure = Measure.Empty();\n        this._fontFamily = \"Arial\";\n        this._fontStyle = \"\";\n        this._fontWeight = \"\";\n        this._fontSize = new ValueAndUnit(18, ValueAndUnit.UNITMODE_PIXEL, false);\n        /** @hidden */\n        this._width = new ValueAndUnit(1, ValueAndUnit.UNITMODE_PERCENTAGE, false);\n        /** @hidden */\n        this._height = new ValueAndUnit(1, ValueAndUnit.UNITMODE_PERCENTAGE, false);\n        this._color = \"\";\n        this._style = null;\n        /** @hidden */\n        this._horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\n        /** @hidden */\n        this._verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\n        /** @hidden */\n        this._isDirty = true;\n        /** @hidden */\n        this._wasDirty = false;\n        /** @hidden */\n        this._tempParentMeasure = Measure.Empty();\n        /** @hidden */\n        this._prevCurrentMeasureTransformedIntoGlobalSpace = Measure.Empty();\n        /** @hidden */\n        this._cachedParentMeasure = Measure.Empty();\n        this._descendantsOnlyPadding = false;\n        this._paddingLeft = new ValueAndUnit(0);\n        this._paddingRight = new ValueAndUnit(0);\n        this._paddingTop = new ValueAndUnit(0);\n        this._paddingBottom = new ValueAndUnit(0);\n        /** @hidden */\n        this._left = new ValueAndUnit(0);\n        /** @hidden */\n        this._top = new ValueAndUnit(0);\n        this._scaleX = 1.0;\n        this._scaleY = 1.0;\n        this._rotation = 0;\n        this._transformCenterX = 0.5;\n        this._transformCenterY = 0.5;\n        /** @hidden */\n        this._transformMatrix = Matrix2D.Identity();\n        /** @hidden */\n        this._invertTransformMatrix = Matrix2D.Identity();\n        /** @hidden */\n        this._transformedPosition = Vector2.Zero();\n        this._isMatrixDirty = true;\n        this._isVisible = true;\n        this._isHighlighted = false;\n        this._highlightColor = \"#4affff\";\n        this._highlightLineWidth = 2;\n        this._fontSet = false;\n        this._dummyVector2 = Vector2.Zero();\n        this._downCount = 0;\n        this._enterCount = -1;\n        this._doNotRender = false;\n        this._downPointerIds = {};\n        this._evaluatedMeasure = new Measure(0, 0, 0, 0);\n        this._evaluatedParentMeasure = new Measure(0, 0, 0, 0);\n        this._isEnabled = true;\n        this._disabledColor = \"#9a9a9a\";\n        this._disabledColorItem = \"#6a6a6a\";\n        this._isReadOnly = false;\n        /** @hidden */\n        this._rebuildLayout = false;\n        /** @hidden */\n        this._customData = {};\n        /** @hidden */\n        this._isClipped = false;\n        /** @hidden */\n        this._automaticSize = false;\n        /**\n         * Gets or sets an object used to store user defined information for the node\n         */\n        this.metadata = null;\n        /** Gets or sets a boolean indicating if the control can be hit with pointer events */\n        this.isHitTestVisible = true;\n        /** Gets or sets a boolean indicating if the control can block pointer events */\n        this.isPointerBlocker = false;\n        /** Gets or sets a boolean indicating if the control can be focusable */\n        this.isFocusInvisible = false;\n        /**\n         * Gets or sets a boolean indicating if the children are clipped to the current control bounds.\n         * Please note that not clipping children may generate issues with adt.useInvalidateRectOptimization so it is recommended to turn this optimization off if you want to use unclipped children\n         */\n        this.clipChildren = true;\n        /**\n         * Gets or sets a boolean indicating that control content must be clipped\n         * Please note that not clipping children may generate issues with adt.useInvalidateRectOptimization so it is recommended to turn this optimization off if you want to use unclipped children\n         */\n        this.clipContent = true;\n        /**\n         * Gets or sets a boolean indicating that the current control should cache its rendering (useful when the control does not change often)\n         */\n        this.useBitmapCache = false;\n        this._shadowOffsetX = 0;\n        this._shadowOffsetY = 0;\n        this._shadowBlur = 0;\n        this._previousShadowBlur = 0;\n        this._shadowColor = \"black\";\n        /** Gets or sets the cursor to use when the control is hovered */\n        this.hoverCursor = \"\";\n        /** @hidden */\n        this._linkOffsetX = new ValueAndUnit(0);\n        /** @hidden */\n        this._linkOffsetY = new ValueAndUnit(0);\n        /**\n         * An event triggered when pointer wheel is scrolled\n         */\n        this.onWheelObservable = new Observable();\n        /**\n         * An event triggered when the pointer moves over the control.\n         */\n        this.onPointerMoveObservable = new Observable();\n        /**\n         * An event triggered when the pointer moves out of the control.\n         */\n        this.onPointerOutObservable = new Observable();\n        /**\n         * An event triggered when the pointer taps the control\n         */\n        this.onPointerDownObservable = new Observable();\n        /**\n         * An event triggered when pointer up\n         */\n        this.onPointerUpObservable = new Observable();\n        /**\n         * An event triggered when a control is clicked on\n         */\n        this.onPointerClickObservable = new Observable();\n        /**\n         * An event triggered when pointer enters the control\n         */\n        this.onPointerEnterObservable = new Observable();\n        /**\n         * An event triggered when the control is marked as dirty\n         */\n        this.onDirtyObservable = new Observable();\n        /**\n         * An event triggered before drawing the control\n         */\n        this.onBeforeDrawObservable = new Observable();\n        /**\n         * An event triggered after the control was drawn\n         */\n        this.onAfterDrawObservable = new Observable();\n        /**\n         * An event triggered when the control has been disposed\n         */\n        this.onDisposeObservable = new Observable();\n        /**\n         * Gets or sets a fixed ratio for this control.\n         * When different from 0, the ratio is used to compute the \"second\" dimension.\n         * The first dimension used in the computation is the last one set (by setting width / widthInPixels or height / heightInPixels), and the\n         * second dimension is computed as first dimension * fixedRatio\n         */\n        this.fixedRatio = 0;\n        this._fixedRatioMasterIsWidth = true;\n        this._tmpMeasureA = new Measure(0, 0, 0, 0);\n    }\n    Object.defineProperty(Control.prototype, \"isReadOnly\", {\n        /**\n         * Gets or sets a boolean indicating if the control is readonly (default: false).\n         * A readonly control will still raise pointer events but will not react to them\n         */\n        get: function () {\n            return this._isReadOnly;\n        },\n        set: function (value) {\n            this._isReadOnly = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"transformedMeasure\", {\n        /**\n         * Gets the transformed measure, that is the bounding box of the control after applying all transformations\n         */\n        get: function () {\n            return this._evaluatedMeasure;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"shadowOffsetX\", {\n        /** Gets or sets a value indicating the offset to apply on X axis to render the shadow */\n        get: function () {\n            return this._shadowOffsetX;\n        },\n        set: function (value) {\n            if (this._shadowOffsetX === value) {\n                return;\n            }\n            this._shadowOffsetX = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"shadowOffsetY\", {\n        /** Gets or sets a value indicating the offset to apply on Y axis to render the shadow */\n        get: function () {\n            return this._shadowOffsetY;\n        },\n        set: function (value) {\n            if (this._shadowOffsetY === value) {\n                return;\n            }\n            this._shadowOffsetY = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"shadowBlur\", {\n        /** Gets or sets a value indicating the amount of blur to use to render the shadow */\n        get: function () {\n            return this._shadowBlur;\n        },\n        set: function (value) {\n            if (this._shadowBlur === value) {\n                return;\n            }\n            this._previousShadowBlur = this._shadowBlur;\n            this._shadowBlur = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"shadowColor\", {\n        /** Gets or sets a value indicating the color of the shadow (black by default ie. \"#000\") */\n        get: function () {\n            return this._shadowColor;\n        },\n        set: function (value) {\n            if (this._shadowColor === value) {\n                return;\n            }\n            this._shadowColor = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"typeName\", {\n        // Properties\n        /** Gets the control type name */\n        get: function () {\n            return this._getTypeName();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Get the current class name of the control.\n     * @returns current class name\n     */\n    Control.prototype.getClassName = function () {\n        return this._getTypeName();\n    };\n    Object.defineProperty(Control.prototype, \"host\", {\n        /**\n         * Get the hosting AdvancedDynamicTexture\n         */\n        get: function () {\n            return this._host;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"fontOffset\", {\n        /** Gets or set information about font offsets (used to render and align text) */\n        get: function () {\n            return this._fontOffset;\n        },\n        set: function (offset) {\n            this._fontOffset = offset;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"alpha\", {\n        /** Gets or sets alpha value for the control (1 means opaque and 0 means entirely transparent) */\n        get: function () {\n            return this._alpha;\n        },\n        set: function (value) {\n            if (this._alpha === value) {\n                return;\n            }\n            this._alphaSet = true;\n            this._alpha = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"highlightLineWidth\", {\n        /**\n         * Gets or sets a number indicating size of stroke we want to highlight the control with (mostly for debugging purpose)\n         */\n        get: function () {\n            return this._highlightLineWidth;\n        },\n        set: function (value) {\n            if (this._highlightLineWidth === value) {\n                return;\n            }\n            this._highlightLineWidth = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"isHighlighted\", {\n        /**\n         * Gets or sets a boolean indicating that we want to highlight the control (mostly for debugging purpose)\n         */\n        get: function () {\n            return this._isHighlighted;\n        },\n        set: function (value) {\n            if (this._isHighlighted === value) {\n                return;\n            }\n            this._isHighlighted = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"highlightColor\", {\n        /**\n         * Gets or sets a string defining the color to use for highlighting this control\n         */\n        get: function () {\n            return this._highlightColor;\n        },\n        set: function (value) {\n            if (this._highlightColor === value) {\n                return;\n            }\n            this._highlightColor = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"scaleX\", {\n        /** Gets or sets a value indicating the scale factor on X axis (1 by default)\n         * @see https://doc.babylonjs.com/how_to/gui#rotation-and-scaling\n         */\n        get: function () {\n            return this._scaleX;\n        },\n        set: function (value) {\n            if (this._scaleX === value) {\n                return;\n            }\n            this._scaleX = value;\n            this._markAsDirty();\n            this._markMatrixAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"scaleY\", {\n        /** Gets or sets a value indicating the scale factor on Y axis (1 by default)\n         * @see https://doc.babylonjs.com/how_to/gui#rotation-and-scaling\n         */\n        get: function () {\n            return this._scaleY;\n        },\n        set: function (value) {\n            if (this._scaleY === value) {\n                return;\n            }\n            this._scaleY = value;\n            this._markAsDirty();\n            this._markMatrixAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"rotation\", {\n        /** Gets or sets the rotation angle (0 by default)\n         * @see https://doc.babylonjs.com/how_to/gui#rotation-and-scaling\n         */\n        get: function () {\n            return this._rotation;\n        },\n        set: function (value) {\n            if (this._rotation === value) {\n                return;\n            }\n            this._rotation = value;\n            this._markAsDirty();\n            this._markMatrixAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"transformCenterY\", {\n        /** Gets or sets the transformation center on Y axis (0 by default)\n         * @see https://doc.babylonjs.com/how_to/gui#rotation-and-scaling\n         */\n        get: function () {\n            return this._transformCenterY;\n        },\n        set: function (value) {\n            if (this._transformCenterY === value) {\n                return;\n            }\n            this._transformCenterY = value;\n            this._markAsDirty();\n            this._markMatrixAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"transformCenterX\", {\n        /** Gets or sets the transformation center on X axis (0 by default)\n         * @see https://doc.babylonjs.com/how_to/gui#rotation-and-scaling\n         */\n        get: function () {\n            return this._transformCenterX;\n        },\n        set: function (value) {\n            if (this._transformCenterX === value) {\n                return;\n            }\n            this._transformCenterX = value;\n            this._markAsDirty();\n            this._markMatrixAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"horizontalAlignment\", {\n        /**\n         * Gets or sets the horizontal alignment\n         * @see https://doc.babylonjs.com/how_to/gui#alignments\n         */\n        get: function () {\n            return this._horizontalAlignment;\n        },\n        set: function (value) {\n            if (this._horizontalAlignment === value) {\n                return;\n            }\n            this._horizontalAlignment = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"verticalAlignment\", {\n        /**\n         * Gets or sets the vertical alignment\n         * @see https://doc.babylonjs.com/how_to/gui#alignments\n         */\n        get: function () {\n            return this._verticalAlignment;\n        },\n        set: function (value) {\n            if (this._verticalAlignment === value) {\n                return;\n            }\n            this._verticalAlignment = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"width\", {\n        /**\n         * Gets or sets control width\n         * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n         */\n        get: function () {\n            return this._width.toString(this._host);\n        },\n        set: function (value) {\n            this._fixedRatioMasterIsWidth = true;\n            if (this._width.toString(this._host) === value) {\n                return;\n            }\n            if (this._width.fromString(value)) {\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"widthInPixels\", {\n        /**\n         * Gets or sets the control width in pixel\n         * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n         */\n        get: function () {\n            return this._width.getValueInPixel(this._host, this._cachedParentMeasure.width);\n        },\n        set: function (value) {\n            if (isNaN(value)) {\n                return;\n            }\n            this._fixedRatioMasterIsWidth = true;\n            this.width = value + \"px\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"height\", {\n        /**\n         * Gets or sets control height\n         * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n         */\n        get: function () {\n            return this._height.toString(this._host);\n        },\n        set: function (value) {\n            this._fixedRatioMasterIsWidth = false;\n            if (this._height.toString(this._host) === value) {\n                return;\n            }\n            if (this._height.fromString(value)) {\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"heightInPixels\", {\n        /**\n         * Gets or sets control height in pixel\n         * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n         */\n        get: function () {\n            return this._height.getValueInPixel(this._host, this._cachedParentMeasure.height);\n        },\n        set: function (value) {\n            if (isNaN(value)) {\n                return;\n            }\n            this._fixedRatioMasterIsWidth = false;\n            this.height = value + \"px\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"fontFamily\", {\n        /** Gets or set font family */\n        get: function () {\n            return this._fontFamily;\n        },\n        set: function (value) {\n            if (this._fontFamily === value) {\n                return;\n            }\n            this._fontFamily = value;\n            this._resetFontCache();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"fontStyle\", {\n        /** Gets or sets font style */\n        get: function () {\n            return this._fontStyle;\n        },\n        set: function (value) {\n            if (this._fontStyle === value) {\n                return;\n            }\n            this._fontStyle = value;\n            this._resetFontCache();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"fontWeight\", {\n        /** Gets or sets font weight */\n        get: function () {\n            return this._fontWeight;\n        },\n        set: function (value) {\n            if (this._fontWeight === value) {\n                return;\n            }\n            this._fontWeight = value;\n            this._resetFontCache();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"style\", {\n        /**\n         * Gets or sets style\n         * @see https://doc.babylonjs.com/how_to/gui#styles\n         */\n        get: function () {\n            return this._style;\n        },\n        set: function (value) {\n            var _this = this;\n            if (this._style) {\n                this._style.onChangedObservable.remove(this._styleObserver);\n                this._styleObserver = null;\n            }\n            this._style = value;\n            if (this._style) {\n                this._styleObserver = this._style.onChangedObservable.add(function () {\n                    _this._markAsDirty();\n                    _this._resetFontCache();\n                });\n            }\n            this._markAsDirty();\n            this._resetFontCache();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"_isFontSizeInPercentage\", {\n        /** @hidden */\n        get: function () {\n            return this._fontSize.isPercentage;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"fontSizeInPixels\", {\n        /** Gets or sets font size in pixels */\n        get: function () {\n            var fontSizeToUse = this._style ? this._style._fontSize : this._fontSize;\n            if (fontSizeToUse.isPixel) {\n                return fontSizeToUse.getValue(this._host);\n            }\n            return fontSizeToUse.getValueInPixel(this._host, this._tempParentMeasure.height || this._cachedParentMeasure.height);\n        },\n        set: function (value) {\n            if (isNaN(value)) {\n                return;\n            }\n            this.fontSize = value + \"px\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"fontSize\", {\n        /** Gets or sets font size */\n        get: function () {\n            return this._fontSize.toString(this._host);\n        },\n        set: function (value) {\n            if (this._fontSize.toString(this._host) === value) {\n                return;\n            }\n            if (this._fontSize.fromString(value)) {\n                this._markAsDirty();\n                this._resetFontCache();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"color\", {\n        /** Gets or sets foreground color */\n        get: function () {\n            return this._color;\n        },\n        set: function (value) {\n            if (this._color === value) {\n                return;\n            }\n            this._color = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"zIndex\", {\n        /** Gets or sets z index which is used to reorder controls on the z axis */\n        get: function () {\n            return this._zIndex;\n        },\n        set: function (value) {\n            if (this.zIndex === value) {\n                return;\n            }\n            this._zIndex = value;\n            if (this.parent) {\n                this.parent._reOrderControl(this);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"notRenderable\", {\n        /** Gets or sets a boolean indicating if the control can be rendered */\n        get: function () {\n            return this._doNotRender;\n        },\n        set: function (value) {\n            if (this._doNotRender === value) {\n                return;\n            }\n            this._doNotRender = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"isVisible\", {\n        /** Gets or sets a boolean indicating if the control is visible */\n        get: function () {\n            return this._isVisible;\n        },\n        set: function (value) {\n            if (this._isVisible === value) {\n                return;\n            }\n            this._isVisible = value;\n            this._markAsDirty(true);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"isDirty\", {\n        /** Gets a boolean indicating that the control needs to update its rendering */\n        get: function () {\n            return this._isDirty;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"linkedMesh\", {\n        /**\n         * Gets the current linked mesh (or null if none)\n         */\n        get: function () {\n            return this._linkedMesh;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"descendantsOnlyPadding\", {\n        /**\n         * Gets or sets a value indicating the padding should work like in CSS.\n         * Basically, it will add the padding amount on each side of the parent control for its children.\n         */\n        get: function () {\n            return this._descendantsOnlyPadding;\n        },\n        set: function (value) {\n            if (this._descendantsOnlyPadding === value) {\n                return;\n            }\n            this._descendantsOnlyPadding = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"paddingLeft\", {\n        /**\n         * Gets or sets a value indicating the padding to use on the left of the control\n         * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n         */\n        get: function () {\n            return this._paddingLeft.toString(this._host);\n        },\n        set: function (value) {\n            if (this._paddingLeft.fromString(value)) {\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"paddingLeftInPixels\", {\n        /**\n         * Gets or sets a value indicating the padding in pixels to use on the left of the control\n         * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n         */\n        get: function () {\n            return this._paddingLeft.getValueInPixel(this._host, this._cachedParentMeasure.width);\n        },\n        set: function (value) {\n            if (isNaN(value)) {\n                return;\n            }\n            this.paddingLeft = value + \"px\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"_paddingLeftInPixels\", {\n        /** @hidden */\n        get: function () {\n            if (this._descendantsOnlyPadding) {\n                return 0;\n            }\n            return this.paddingLeftInPixels;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"paddingRight\", {\n        /**\n         * Gets or sets a value indicating the padding to use on the right of the control\n         * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n         */\n        get: function () {\n            return this._paddingRight.toString(this._host);\n        },\n        set: function (value) {\n            if (this._paddingRight.fromString(value)) {\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"paddingRightInPixels\", {\n        /**\n         * Gets or sets a value indicating the padding in pixels to use on the right of the control\n         * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n         */\n        get: function () {\n            return this._paddingRight.getValueInPixel(this._host, this._cachedParentMeasure.width);\n        },\n        set: function (value) {\n            if (isNaN(value)) {\n                return;\n            }\n            this.paddingRight = value + \"px\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"_paddingRightInPixels\", {\n        /** @hidden */\n        get: function () {\n            if (this._descendantsOnlyPadding) {\n                return 0;\n            }\n            return this.paddingRightInPixels;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"paddingTop\", {\n        /**\n         * Gets or sets a value indicating the padding to use on the top of the control\n         * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n         */\n        get: function () {\n            return this._paddingTop.toString(this._host);\n        },\n        set: function (value) {\n            if (this._paddingTop.fromString(value)) {\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"paddingTopInPixels\", {\n        /**\n         * Gets or sets a value indicating the padding in pixels to use on the top of the control\n         * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n         */\n        get: function () {\n            return this._paddingTop.getValueInPixel(this._host, this._cachedParentMeasure.height);\n        },\n        set: function (value) {\n            if (isNaN(value)) {\n                return;\n            }\n            this.paddingTop = value + \"px\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"_paddingTopInPixels\", {\n        /** @hidden */\n        get: function () {\n            if (this._descendantsOnlyPadding) {\n                return 0;\n            }\n            return this.paddingTopInPixels;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"paddingBottom\", {\n        /**\n         * Gets or sets a value indicating the padding to use on the bottom of the control\n         * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n         */\n        get: function () {\n            return this._paddingBottom.toString(this._host);\n        },\n        set: function (value) {\n            if (this._paddingBottom.fromString(value)) {\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"paddingBottomInPixels\", {\n        /**\n         * Gets or sets a value indicating the padding in pixels to use on the bottom of the control\n         * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n         */\n        get: function () {\n            return this._paddingBottom.getValueInPixel(this._host, this._cachedParentMeasure.height);\n        },\n        set: function (value) {\n            if (isNaN(value)) {\n                return;\n            }\n            this.paddingBottom = value + \"px\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"_paddingBottomInPixels\", {\n        /** @hidden */\n        get: function () {\n            if (this._descendantsOnlyPadding) {\n                return 0;\n            }\n            return this.paddingBottomInPixels;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"left\", {\n        /**\n         * Gets or sets a value indicating the left coordinate of the control\n         * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n         */\n        get: function () {\n            return this._left.toString(this._host);\n        },\n        set: function (value) {\n            if (this._left.fromString(value)) {\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"leftInPixels\", {\n        /**\n         * Gets or sets a value indicating the left coordinate in pixels of the control\n         * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n         */\n        get: function () {\n            return this._left.getValueInPixel(this._host, this._cachedParentMeasure.width);\n        },\n        set: function (value) {\n            if (isNaN(value)) {\n                return;\n            }\n            this.left = value + \"px\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"top\", {\n        /**\n         * Gets or sets a value indicating the top coordinate of the control\n         * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n         */\n        get: function () {\n            return this._top.toString(this._host);\n        },\n        set: function (value) {\n            if (this._top.fromString(value)) {\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"topInPixels\", {\n        /**\n         * Gets or sets a value indicating the top coordinate in pixels of the control\n         * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n         */\n        get: function () {\n            return this._top.getValueInPixel(this._host, this._cachedParentMeasure.height);\n        },\n        set: function (value) {\n            if (isNaN(value)) {\n                return;\n            }\n            this.top = value + \"px\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"linkOffsetX\", {\n        /**\n         * Gets or sets a value indicating the offset on X axis to the linked mesh\n         * @see https://doc.babylonjs.com/how_to/gui#tracking-positions\n         */\n        get: function () {\n            return this._linkOffsetX.toString(this._host);\n        },\n        set: function (value) {\n            if (this._linkOffsetX.fromString(value)) {\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"linkOffsetXInPixels\", {\n        /**\n         * Gets or sets a value indicating the offset in pixels on X axis to the linked mesh\n         * @see https://doc.babylonjs.com/how_to/gui#tracking-positions\n         */\n        get: function () {\n            return this._linkOffsetX.getValueInPixel(this._host, this._cachedParentMeasure.width);\n        },\n        set: function (value) {\n            if (isNaN(value)) {\n                return;\n            }\n            this.linkOffsetX = value + \"px\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"linkOffsetY\", {\n        /**\n         * Gets or sets a value indicating the offset on Y axis to the linked mesh\n         * @see https://doc.babylonjs.com/how_to/gui#tracking-positions\n         */\n        get: function () {\n            return this._linkOffsetY.toString(this._host);\n        },\n        set: function (value) {\n            if (this._linkOffsetY.fromString(value)) {\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"linkOffsetYInPixels\", {\n        /**\n         * Gets or sets a value indicating the offset in pixels on Y axis to the linked mesh\n         * @see https://doc.babylonjs.com/how_to/gui#tracking-positions\n         */\n        get: function () {\n            return this._linkOffsetY.getValueInPixel(this._host, this._cachedParentMeasure.height);\n        },\n        set: function (value) {\n            if (isNaN(value)) {\n                return;\n            }\n            this.linkOffsetY = value + \"px\";\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"centerX\", {\n        /** Gets the center coordinate on X axis */\n        get: function () {\n            return this._currentMeasure.left + this._currentMeasure.width / 2;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"centerY\", {\n        /** Gets the center coordinate on Y axis */\n        get: function () {\n            return this._currentMeasure.top + this._currentMeasure.height / 2;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"isEnabled\", {\n        /** Gets or sets if control is Enabled */\n        get: function () {\n            return this._isEnabled;\n        },\n        set: function (value) {\n            var _this = this;\n            if (this._isEnabled === value) {\n                return;\n            }\n            this._isEnabled = value;\n            this._markAsDirty();\n            // if this control or any of it's descendants are under a pointer, we need to fire a pointerOut event\n            var recursivelyFirePointerOut = function (control) {\n                if (!control.host) {\n                    return;\n                }\n                for (var pointer in control.host._lastControlOver) {\n                    if (control === _this.host._lastControlOver[pointer]) {\n                        control._onPointerOut(control, null, true);\n                        delete control.host._lastControlOver[pointer];\n                    }\n                }\n                if (control.children !== undefined) {\n                    control.children.forEach(recursivelyFirePointerOut);\n                }\n            };\n            recursivelyFirePointerOut(this);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"disabledColor\", {\n        /** Gets or sets background color of control if it's disabled. Only applies to Button class. */\n        get: function () {\n            return this._disabledColor;\n        },\n        set: function (value) {\n            if (this._disabledColor === value) {\n                return;\n            }\n            this._disabledColor = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control.prototype, \"disabledColorItem\", {\n        /** Gets or sets front color of control if it's disabled. Only applies to Checkbox class. */\n        get: function () {\n            return this._disabledColorItem;\n        },\n        set: function (value) {\n            if (this._disabledColorItem === value) {\n                return;\n            }\n            this._disabledColorItem = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /** @hidden */\n    Control.prototype._getTypeName = function () {\n        return \"Control\";\n    };\n    /**\n     * Gets the first ascendant in the hierarchy of the given type\n     * @param className defines the required type\n     * @returns the ascendant or null if not found\n     */\n    Control.prototype.getAscendantOfClass = function (className) {\n        if (!this.parent) {\n            return null;\n        }\n        if (this.parent.getClassName() === className) {\n            return this.parent;\n        }\n        return this.parent.getAscendantOfClass(className);\n    };\n    /**\n     * Mark control element as dirty\n     * @param force force non visible elements to be marked too\n     */\n    Control.prototype.markAsDirty = function (force) {\n        if (force === void 0) { force = false; }\n        this._markAsDirty(force);\n    };\n    /**\n     * Mark the element and its children as dirty\n     */\n    Control.prototype.markAllAsDirty = function () {\n        this._markAllAsDirty();\n    };\n    /** @hidden */\n    Control.prototype._resetFontCache = function () {\n        this._fontSet = true;\n        this._markAsDirty();\n    };\n    /**\n     * Determines if a container is an ascendant of the current control\n     * @param container defines the container to look for\n     * @returns true if the container is one of the ascendant of the control\n     */\n    Control.prototype.isAscendant = function (container) {\n        if (!this.parent) {\n            return false;\n        }\n        if (this.parent === container) {\n            return true;\n        }\n        return this.parent.isAscendant(container);\n    };\n    /**\n     * Gets coordinates in local control space\n     * @param globalCoordinates defines the coordinates to transform\n     * @returns the new coordinates in local space\n     */\n    Control.prototype.getLocalCoordinates = function (globalCoordinates) {\n        var result = Vector2.Zero();\n        this.getLocalCoordinatesToRef(globalCoordinates, result);\n        return result;\n    };\n    /**\n     * Gets coordinates in local control space\n     * @param globalCoordinates defines the coordinates to transform\n     * @param result defines the target vector2 where to store the result\n     * @returns the current control\n     */\n    Control.prototype.getLocalCoordinatesToRef = function (globalCoordinates, result) {\n        result.x = globalCoordinates.x - this._currentMeasure.left;\n        result.y = globalCoordinates.y - this._currentMeasure.top;\n        return this;\n    };\n    /**\n     * Gets coordinates in parent local control space\n     * @param globalCoordinates defines the coordinates to transform\n     * @returns the new coordinates in parent local space\n     */\n    Control.prototype.getParentLocalCoordinates = function (globalCoordinates) {\n        var result = Vector2.Zero();\n        result.x = globalCoordinates.x - this._cachedParentMeasure.left;\n        result.y = globalCoordinates.y - this._cachedParentMeasure.top;\n        return result;\n    };\n    /**\n     * Move the current control to a vector3 position projected onto the screen.\n     * @param position defines the target position\n     * @param scene defines the hosting scene\n     */\n    Control.prototype.moveToVector3 = function (position, scene) {\n        if (!this._host || this.parent !== this._host._rootContainer) {\n            Tools.Error(\"Cannot move a control to a vector3 if the control is not at root level\");\n            return;\n        }\n        this.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        this.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n        var globalViewport = this._host._getGlobalViewport();\n        var projectedPosition = Vector3.Project(position, Matrix.Identity(), scene.getTransformMatrix(), globalViewport);\n        this._moveToProjectedPosition(projectedPosition);\n        if (projectedPosition.z < 0 || projectedPosition.z > 1) {\n            this.notRenderable = true;\n            return;\n        }\n        this.notRenderable = false;\n    };\n    /**\n     * Will store all controls that have this control as ascendant in a given array\n     * @param results defines the array where to store the descendants\n     * @param directDescendantsOnly defines if true only direct descendants of 'this' will be considered, if false direct and also indirect (children of children, an so on in a recursive manner) descendants of 'this' will be considered\n     * @param predicate defines an optional predicate that will be called on every evaluated child, the predicate must return true for a given child to be part of the result, otherwise it will be ignored\n     */\n    Control.prototype.getDescendantsToRef = function (results, directDescendantsOnly, predicate) {\n        if (directDescendantsOnly === void 0) { directDescendantsOnly = false; }\n        // Do nothing by default\n    };\n    /**\n     * Will return all controls that have this control as ascendant\n     * @param directDescendantsOnly defines if true only direct descendants of 'this' will be considered, if false direct and also indirect (children of children, an so on in a recursive manner) descendants of 'this' will be considered\n     * @param predicate defines an optional predicate that will be called on every evaluated child, the predicate must return true for a given child to be part of the result, otherwise it will be ignored\n     * @return all child controls\n     */\n    Control.prototype.getDescendants = function (directDescendantsOnly, predicate) {\n        var results = new Array();\n        this.getDescendantsToRef(results, directDescendantsOnly, predicate);\n        return results;\n    };\n    /**\n     * Link current control with a target mesh\n     * @param mesh defines the mesh to link with\n     * @see https://doc.babylonjs.com/how_to/gui#tracking-positions\n     */\n    Control.prototype.linkWithMesh = function (mesh) {\n        if (!this._host || (this.parent && this.parent !== this._host._rootContainer)) {\n            if (mesh) {\n                Tools.Error(\"Cannot link a control to a mesh if the control is not at root level\");\n            }\n            return;\n        }\n        var index = this._host._linkedControls.indexOf(this);\n        if (index !== -1) {\n            this._linkedMesh = mesh;\n            if (!mesh) {\n                this._host._linkedControls.splice(index, 1);\n            }\n            return;\n        }\n        else if (!mesh) {\n            return;\n        }\n        this.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        this.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n        this._linkedMesh = mesh;\n        this._host._linkedControls.push(this);\n    };\n    /**\n     * Shorthand function to set the top, right, bottom, and left padding values on the control.\n     * @param { string | number} paddingTop - The value of the top padding.\n     * @param { string | number} paddingRight - The value of the right padding. If omitted, top is used.\n     * @param { string | number} paddingBottom - The value of the bottom padding. If omitted, top is used.\n     * @param { string | number} paddingLeft - The value of the left padding. If omitted, right is used.\n     * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n     */\n    Control.prototype.setPadding = function (paddingTop, paddingRight, paddingBottom, paddingLeft) {\n        var top = paddingTop;\n        var right = paddingRight !== null && paddingRight !== void 0 ? paddingRight : top;\n        var bottom = paddingBottom !== null && paddingBottom !== void 0 ? paddingBottom : top;\n        var left = paddingLeft !== null && paddingLeft !== void 0 ? paddingLeft : right;\n        this.paddingTop = top;\n        this.paddingRight = right;\n        this.paddingBottom = bottom;\n        this.paddingLeft = left;\n    };\n    /**\n     * Shorthand funtion to set the top, right, bottom, and left padding values in pixels on the control.\n     * @param { number} paddingTop - The value in pixels of the top padding.\n     * @param { number} paddingRight - The value in pixels of the right padding. If omitted, top is used.\n     * @param { number} paddingBottom - The value in pixels of the bottom padding. If omitted, top is used.\n     * @param { number} paddingLeft - The value in pixels of the left padding. If omitted, right is used.\n     * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n     */\n    Control.prototype.setPaddingInPixels = function (paddingTop, paddingRight, paddingBottom, paddingLeft) {\n        var top = paddingTop;\n        var right = paddingRight !== null && paddingRight !== void 0 ? paddingRight : top;\n        var bottom = paddingBottom !== null && paddingBottom !== void 0 ? paddingBottom : top;\n        var left = paddingLeft !== null && paddingLeft !== void 0 ? paddingLeft : right;\n        this.paddingTopInPixels = top;\n        this.paddingRightInPixels = right;\n        this.paddingBottomInPixels = bottom;\n        this.paddingLeftInPixels = left;\n    };\n    /**\n     * @param projectedPosition\n     * @hidden\n     */\n    Control.prototype._moveToProjectedPosition = function (projectedPosition) {\n        var _a;\n        var oldLeft = this._left.getValue(this._host);\n        var oldTop = this._top.getValue(this._host);\n        var parentMeasure = (_a = this.parent) === null || _a === void 0 ? void 0 : _a._currentMeasure;\n        if (parentMeasure) {\n            this._processMeasures(parentMeasure, this._host.getContext());\n        }\n        var newLeft = projectedPosition.x + this._linkOffsetX.getValue(this._host) - this._currentMeasure.width / 2;\n        var newTop = projectedPosition.y + this._linkOffsetY.getValue(this._host) - this._currentMeasure.height / 2;\n        if (this._left.ignoreAdaptiveScaling && this._top.ignoreAdaptiveScaling) {\n            if (Math.abs(newLeft - oldLeft) < 0.5) {\n                newLeft = oldLeft;\n            }\n            if (Math.abs(newTop - oldTop) < 0.5) {\n                newTop = oldTop;\n            }\n        }\n        this.left = newLeft + \"px\";\n        this.top = newTop + \"px\";\n        this._left.ignoreAdaptiveScaling = true;\n        this._top.ignoreAdaptiveScaling = true;\n        this._markAsDirty();\n    };\n    /**\n     * @param offset\n     * @hidden\n     */\n    Control.prototype._offsetLeft = function (offset) {\n        this._isDirty = true;\n        this._currentMeasure.left += offset;\n    };\n    /**\n     * @param offset\n     * @hidden\n     */\n    Control.prototype._offsetTop = function (offset) {\n        this._isDirty = true;\n        this._currentMeasure.top += offset;\n    };\n    /** @hidden */\n    Control.prototype._markMatrixAsDirty = function () {\n        this._isMatrixDirty = true;\n        this._flagDescendantsAsMatrixDirty();\n    };\n    /** @hidden */\n    Control.prototype._flagDescendantsAsMatrixDirty = function () {\n        // No child\n    };\n    /**\n     * @param rect\n     * @param context\n     * @hidden\n     */\n    Control.prototype._intersectsRect = function (rect, context) {\n        // make sure we are transformed correctly before checking intersections. no-op if nothing is dirty.\n        this._transform(context);\n        if (this._evaluatedMeasure.left >= rect.left + rect.width) {\n            return false;\n        }\n        if (this._evaluatedMeasure.top >= rect.top + rect.height) {\n            return false;\n        }\n        if (this._evaluatedMeasure.left + this._evaluatedMeasure.width <= rect.left) {\n            return false;\n        }\n        if (this._evaluatedMeasure.top + this._evaluatedMeasure.height <= rect.top) {\n            return false;\n        }\n        return true;\n    };\n    /** @hidden */\n    Control.prototype._computeAdditionnalOffsetX = function () {\n        return 0;\n    };\n    /** @hidden */\n    Control.prototype._computeAdditionnalOffsetY = function () {\n        return 0;\n    };\n    /** @hidden */\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    Control.prototype.invalidateRect = function () {\n        this._transform();\n        if (this.host && this.host.useInvalidateRectOptimization) {\n            // Rotate by transform to get the measure transformed to global space\n            this._currentMeasure.transformToRef(this._transformMatrix, this._tmpMeasureA);\n            // get the boudning box of the current measure and last frames measure in global space and invalidate it\n            // the previous measure is used to properly clear a control that is scaled down\n            Measure.CombineToRef(this._tmpMeasureA, this._prevCurrentMeasureTransformedIntoGlobalSpace, this._tmpMeasureA);\n            // Expand rect based on shadows\n            var shadowOffsetX = this.shadowOffsetX;\n            var shadowOffsetY = this.shadowOffsetY;\n            var shadowBlur = Math.max(this._previousShadowBlur, this.shadowBlur);\n            var leftShadowOffset = Math.min(Math.min(shadowOffsetX, 0) - shadowBlur * 2, 0);\n            var rightShadowOffset = Math.max(Math.max(shadowOffsetX, 0) + shadowBlur * 2, 0);\n            var topShadowOffset = Math.min(Math.min(shadowOffsetY, 0) - shadowBlur * 2, 0);\n            var bottomShadowOffset = Math.max(Math.max(shadowOffsetY, 0) + shadowBlur * 2, 0);\n            var offsetX = this._computeAdditionnalOffsetX();\n            var offsetY = this._computeAdditionnalOffsetY();\n            this.host.invalidateRect(Math.floor(this._tmpMeasureA.left + leftShadowOffset - offsetX), Math.floor(this._tmpMeasureA.top + topShadowOffset - offsetY), Math.ceil(this._tmpMeasureA.left + this._tmpMeasureA.width + rightShadowOffset + offsetX), Math.ceil(this._tmpMeasureA.top + this._tmpMeasureA.height + bottomShadowOffset + offsetY));\n        }\n    };\n    /**\n     * @param force\n     * @hidden\n     */\n    Control.prototype._markAsDirty = function (force) {\n        if (force === void 0) { force = false; }\n        if (!this._isVisible && !force) {\n            return;\n        }\n        this._isDirty = true;\n        this._markMatrixAsDirty();\n        // Redraw only this rectangle\n        if (this._host) {\n            this._host.markAsDirty();\n        }\n    };\n    /** @hidden */\n    Control.prototype._markAllAsDirty = function () {\n        this._markAsDirty();\n        if (this._font) {\n            this._prepareFont();\n        }\n    };\n    /**\n     * @param host\n     * @hidden\n     */\n    Control.prototype._link = function (host) {\n        this._host = host;\n        if (this._host) {\n            this.uniqueId = this._host.getScene().getUniqueId();\n        }\n    };\n    /**\n     * @param context\n     * @hidden\n     */\n    Control.prototype._transform = function (context) {\n        if (!this._isMatrixDirty && this._scaleX === 1 && this._scaleY === 1 && this._rotation === 0) {\n            return;\n        }\n        // postTranslate\n        var offsetX = this._currentMeasure.width * this._transformCenterX + this._currentMeasure.left;\n        var offsetY = this._currentMeasure.height * this._transformCenterY + this._currentMeasure.top;\n        if (context) {\n            context.translate(offsetX, offsetY);\n            // rotate\n            context.rotate(this._rotation);\n            // scale\n            context.scale(this._scaleX, this._scaleY);\n            // preTranslate\n            context.translate(-offsetX, -offsetY);\n        }\n        // Need to update matrices?\n        if (this._isMatrixDirty || this._cachedOffsetX !== offsetX || this._cachedOffsetY !== offsetY) {\n            this._cachedOffsetX = offsetX;\n            this._cachedOffsetY = offsetY;\n            this._isMatrixDirty = false;\n            this._flagDescendantsAsMatrixDirty();\n            Matrix2D.ComposeToRef(-offsetX, -offsetY, this._rotation, this._scaleX, this._scaleY, this.parent ? this.parent._transformMatrix : null, this._transformMatrix);\n            this._transformMatrix.invertToRef(this._invertTransformMatrix);\n            this._currentMeasure.transformToRef(this._transformMatrix, this._evaluatedMeasure);\n        }\n    };\n    /**\n     * @param context\n     * @hidden\n     */\n    Control.prototype._renderHighlight = function (context) {\n        if (!this.isHighlighted) {\n            return;\n        }\n        context.save();\n        context.strokeStyle = this._highlightColor;\n        context.lineWidth = this._highlightLineWidth;\n        this._renderHighlightSpecific(context);\n        context.restore();\n    };\n    /**\n     * @param context\n     * @hidden\n     */\n    Control.prototype._renderHighlightSpecific = function (context) {\n        context.strokeRect(this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height);\n    };\n    /**\n     * @param context\n     * @hidden\n     */\n    Control.prototype._applyStates = function (context) {\n        if (this._isFontSizeInPercentage) {\n            this._fontSet = true;\n        }\n        if (this._host && this._host.useSmallestIdeal && !this._font) {\n            this._fontSet = true;\n        }\n        if (this._fontSet) {\n            this._prepareFont();\n            this._fontSet = false;\n        }\n        if (this._font) {\n            context.font = this._font;\n        }\n        if (this._color) {\n            context.fillStyle = this._color;\n        }\n        if (Control.AllowAlphaInheritance) {\n            context.globalAlpha *= this._alpha;\n        }\n        else if (this._alphaSet) {\n            context.globalAlpha = this.parent && !this.parent.renderToIntermediateTexture ? this.parent.alpha * this._alpha : this._alpha;\n        }\n    };\n    /**\n     * @param parentMeasure\n     * @param context\n     * @hidden\n     */\n    Control.prototype._layout = function (parentMeasure, context) {\n        if (!this.isDirty && (!this.isVisible || this.notRenderable)) {\n            return false;\n        }\n        if (this._isDirty || !this._cachedParentMeasure.isEqualsTo(parentMeasure)) {\n            this.host._numLayoutCalls++;\n            this._currentMeasure.addAndTransformToRef(this._transformMatrix, -this._paddingLeftInPixels | 0, -this._paddingTopInPixels | 0, this._paddingRightInPixels | 0, this._paddingBottomInPixels | 0, this._prevCurrentMeasureTransformedIntoGlobalSpace);\n            context.save();\n            this._applyStates(context);\n            var rebuildCount = 0;\n            do {\n                this._rebuildLayout = false;\n                this._processMeasures(parentMeasure, context);\n                rebuildCount++;\n            } while (this._rebuildLayout && rebuildCount < 3);\n            if (rebuildCount >= 3) {\n                Logger.Error(\"Layout cycle detected in GUI (Control name=\".concat(this.name, \", uniqueId=\").concat(this.uniqueId, \")\"));\n            }\n            context.restore();\n            this.invalidateRect();\n            this._evaluateClippingState(parentMeasure);\n        }\n        this._wasDirty = this._isDirty;\n        this._isDirty = false;\n        return true;\n    };\n    /**\n     * @param parentMeasure\n     * @param context\n     * @hidden\n     */\n    Control.prototype._processMeasures = function (parentMeasure, context) {\n        this._tempPaddingMeasure.copyFrom(parentMeasure);\n        // Apply padding if in correct mode\n        if (this.parent && this.parent.descendantsOnlyPadding) {\n            this._tempPaddingMeasure.left += this.parent.paddingLeftInPixels;\n            this._tempPaddingMeasure.top += this.parent.paddingTopInPixels;\n            this._tempPaddingMeasure.width -= this.parent.paddingLeftInPixels + this.parent.paddingRightInPixels;\n            this._tempPaddingMeasure.height -= this.parent.paddingTopInPixels + this.parent.paddingBottomInPixels;\n        }\n        this._currentMeasure.copyFrom(this._tempPaddingMeasure);\n        // Let children take some pre-measurement actions\n        this._preMeasure(this._tempPaddingMeasure, context);\n        this._measure();\n        this._computeAlignment(this._tempPaddingMeasure, context);\n        // Convert to int values\n        this._currentMeasure.left = this._currentMeasure.left | 0;\n        this._currentMeasure.top = this._currentMeasure.top | 0;\n        this._currentMeasure.width = this._currentMeasure.width | 0;\n        this._currentMeasure.height = this._currentMeasure.height | 0;\n        // Let children add more features\n        this._additionalProcessing(this._tempPaddingMeasure, context);\n        this._cachedParentMeasure.copyFrom(this._tempPaddingMeasure);\n        this._currentMeasure.transformToRef(this._transformMatrix, this._evaluatedMeasure);\n        if (this.onDirtyObservable.hasObservers()) {\n            this.onDirtyObservable.notifyObservers(this);\n        }\n    };\n    Control.prototype._evaluateClippingState = function (parentMeasure) {\n        this._currentMeasure.transformToRef(this._transformMatrix, this._evaluatedMeasure);\n        if (this.parent && this.parent.clipChildren) {\n            parentMeasure.transformToRef(this.parent._transformMatrix, this._evaluatedParentMeasure);\n            // Early clip\n            if (this._evaluatedMeasure.left > this._evaluatedParentMeasure.left + this._evaluatedParentMeasure.width) {\n                this._isClipped = true;\n                return;\n            }\n            if (this._evaluatedMeasure.left + this._evaluatedMeasure.width < this._evaluatedParentMeasure.left) {\n                this._isClipped = true;\n                return;\n            }\n            if (this._evaluatedMeasure.top > this._evaluatedParentMeasure.top + this._evaluatedParentMeasure.height) {\n                this._isClipped = true;\n                return;\n            }\n            if (this._evaluatedMeasure.top + this._evaluatedMeasure.height < this._evaluatedParentMeasure.top) {\n                this._isClipped = true;\n                return;\n            }\n        }\n        this._isClipped = false;\n    };\n    /** @hidden */\n    Control.prototype._measure = function () {\n        // Width / Height\n        if (this._width.isPixel) {\n            this._currentMeasure.width = this._width.getValue(this._host);\n        }\n        else {\n            this._currentMeasure.width *= this._width.getValue(this._host);\n        }\n        if (this._height.isPixel) {\n            this._currentMeasure.height = this._height.getValue(this._host);\n        }\n        else {\n            this._currentMeasure.height *= this._height.getValue(this._host);\n        }\n        if (this.fixedRatio !== 0) {\n            if (this._fixedRatioMasterIsWidth) {\n                this._currentMeasure.height = this._currentMeasure.width * this.fixedRatio;\n            }\n            else {\n                this._currentMeasure.width = this._currentMeasure.height * this.fixedRatio;\n            }\n        }\n    };\n    /**\n     * @param parentMeasure\n     * @param context\n     * @hidden\n     */\n    Control.prototype._computeAlignment = function (parentMeasure, context) {\n        var width = this._currentMeasure.width;\n        var height = this._currentMeasure.height;\n        var parentWidth = parentMeasure.width;\n        var parentHeight = parentMeasure.height;\n        // Left / top\n        var x = 0;\n        var y = 0;\n        switch (this.horizontalAlignment) {\n            case Control.HORIZONTAL_ALIGNMENT_LEFT:\n                x = 0;\n                break;\n            case Control.HORIZONTAL_ALIGNMENT_RIGHT:\n                x = parentWidth - width;\n                break;\n            case Control.HORIZONTAL_ALIGNMENT_CENTER:\n                x = (parentWidth - width) / 2;\n                break;\n        }\n        switch (this.verticalAlignment) {\n            case Control.VERTICAL_ALIGNMENT_TOP:\n                y = 0;\n                break;\n            case Control.VERTICAL_ALIGNMENT_BOTTOM:\n                y = parentHeight - height;\n                break;\n            case Control.VERTICAL_ALIGNMENT_CENTER:\n                y = (parentHeight - height) / 2;\n                break;\n        }\n        if (!this.descendantsOnlyPadding) {\n            if (this._paddingLeft.isPixel) {\n                this._currentMeasure.left += this._paddingLeft.getValue(this._host);\n                this._currentMeasure.width -= this._paddingLeft.getValue(this._host);\n            }\n            else {\n                this._currentMeasure.left += parentWidth * this._paddingLeft.getValue(this._host);\n                this._currentMeasure.width -= parentWidth * this._paddingLeft.getValue(this._host);\n            }\n            if (this._paddingRight.isPixel) {\n                this._currentMeasure.width -= this._paddingRight.getValue(this._host);\n            }\n            else {\n                this._currentMeasure.width -= parentWidth * this._paddingRight.getValue(this._host);\n            }\n            if (this._paddingTop.isPixel) {\n                this._currentMeasure.top += this._paddingTop.getValue(this._host);\n                this._currentMeasure.height -= this._paddingTop.getValue(this._host);\n            }\n            else {\n                this._currentMeasure.top += parentHeight * this._paddingTop.getValue(this._host);\n                this._currentMeasure.height -= parentHeight * this._paddingTop.getValue(this._host);\n            }\n            if (this._paddingBottom.isPixel) {\n                this._currentMeasure.height -= this._paddingBottom.getValue(this._host);\n            }\n            else {\n                this._currentMeasure.height -= parentHeight * this._paddingBottom.getValue(this._host);\n            }\n        }\n        if (this._left.isPixel) {\n            this._currentMeasure.left += this._left.getValue(this._host);\n        }\n        else {\n            this._currentMeasure.left += parentWidth * this._left.getValue(this._host);\n        }\n        if (this._top.isPixel) {\n            this._currentMeasure.top += this._top.getValue(this._host);\n        }\n        else {\n            this._currentMeasure.top += parentHeight * this._top.getValue(this._host);\n        }\n        this._currentMeasure.left += x;\n        this._currentMeasure.top += y;\n    };\n    /**\n     * @param parentMeasure\n     * @param context\n     * @hidden\n     */\n    Control.prototype._preMeasure = function (parentMeasure, context) {\n        // Do nothing\n    };\n    /**\n     * @param parentMeasure\n     * @param context\n     * @hidden\n     */\n    Control.prototype._additionalProcessing = function (parentMeasure, context) {\n        // Do nothing\n    };\n    /**\n     * @param context\n     * @hidden\n     */\n    Control.prototype._clipForChildren = function (context) {\n        // DO nothing\n    };\n    Control.prototype._clip = function (context, invalidatedRectangle) {\n        context.beginPath();\n        Control._ClipMeasure.copyFrom(this._currentMeasure);\n        if (invalidatedRectangle) {\n            // Rotate the invalidated rect into the control's space\n            invalidatedRectangle.transformToRef(this._invertTransformMatrix, this._tmpMeasureA);\n            // Get the intersection of the rect in context space and the current context\n            var intersection = new Measure(0, 0, 0, 0);\n            intersection.left = Math.max(this._tmpMeasureA.left, this._currentMeasure.left);\n            intersection.top = Math.max(this._tmpMeasureA.top, this._currentMeasure.top);\n            intersection.width = Math.min(this._tmpMeasureA.left + this._tmpMeasureA.width, this._currentMeasure.left + this._currentMeasure.width) - intersection.left;\n            intersection.height = Math.min(this._tmpMeasureA.top + this._tmpMeasureA.height, this._currentMeasure.top + this._currentMeasure.height) - intersection.top;\n            Control._ClipMeasure.copyFrom(intersection);\n        }\n        if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n            var shadowOffsetX = this.shadowOffsetX;\n            var shadowOffsetY = this.shadowOffsetY;\n            var shadowBlur = this.shadowBlur;\n            var leftShadowOffset = Math.min(Math.min(shadowOffsetX, 0) - shadowBlur * 2, 0);\n            var rightShadowOffset = Math.max(Math.max(shadowOffsetX, 0) + shadowBlur * 2, 0);\n            var topShadowOffset = Math.min(Math.min(shadowOffsetY, 0) - shadowBlur * 2, 0);\n            var bottomShadowOffset = Math.max(Math.max(shadowOffsetY, 0) + shadowBlur * 2, 0);\n            context.rect(Control._ClipMeasure.left + leftShadowOffset, Control._ClipMeasure.top + topShadowOffset, Control._ClipMeasure.width + rightShadowOffset - leftShadowOffset, Control._ClipMeasure.height + bottomShadowOffset - topShadowOffset);\n        }\n        else {\n            context.rect(Control._ClipMeasure.left, Control._ClipMeasure.top, Control._ClipMeasure.width, Control._ClipMeasure.height);\n        }\n        context.clip();\n    };\n    /**\n     * @param context\n     * @param invalidatedRectangle\n     * @hidden\n     */\n    Control.prototype._render = function (context, invalidatedRectangle) {\n        if (!this.isVisible || this.notRenderable || this._isClipped) {\n            this._isDirty = false;\n            return false;\n        }\n        this.host._numRenderCalls++;\n        context.save();\n        this._applyStates(context);\n        // Transform\n        this._transform(context);\n        // Clip\n        if (this.clipContent) {\n            this._clip(context, invalidatedRectangle);\n        }\n        if (this.onBeforeDrawObservable.hasObservers()) {\n            this.onBeforeDrawObservable.notifyObservers(this);\n        }\n        if (this.useBitmapCache && !this._wasDirty && this._cacheData) {\n            context.putImageData(this._cacheData, this._currentMeasure.left, this._currentMeasure.top);\n        }\n        else {\n            this._draw(context, invalidatedRectangle);\n        }\n        if (this.useBitmapCache && this._wasDirty) {\n            this._cacheData = context.getImageData(this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height);\n        }\n        this._renderHighlight(context);\n        if (this.onAfterDrawObservable.hasObservers()) {\n            this.onAfterDrawObservable.notifyObservers(this);\n        }\n        context.restore();\n        return true;\n    };\n    /**\n     * @param context\n     * @param invalidatedRectangle\n     * @hidden\n     */\n    Control.prototype._draw = function (context, invalidatedRectangle) {\n        // Do nothing\n    };\n    /**\n     * Tests if a given coordinates belong to the current control\n     * @param x defines x coordinate to test\n     * @param y defines y coordinate to test\n     * @returns true if the coordinates are inside the control\n     */\n    Control.prototype.contains = function (x, y) {\n        // Invert transform\n        this._invertTransformMatrix.transformCoordinates(x, y, this._transformedPosition);\n        x = this._transformedPosition.x;\n        y = this._transformedPosition.y;\n        // Check\n        if (x < this._currentMeasure.left) {\n            return false;\n        }\n        if (x > this._currentMeasure.left + this._currentMeasure.width) {\n            return false;\n        }\n        if (y < this._currentMeasure.top) {\n            return false;\n        }\n        if (y > this._currentMeasure.top + this._currentMeasure.height) {\n            return false;\n        }\n        if (this.isPointerBlocker) {\n            this._host._shouldBlockPointer = true;\n        }\n        return true;\n    };\n    /**\n     * @param x\n     * @param y\n     * @param pi\n     * @param type\n     * @param pointerId\n     * @param buttonIndex\n     * @param deltaX\n     * @param deltaY\n     * @hidden\n     */\n    Control.prototype._processPicking = function (x, y, pi, type, pointerId, buttonIndex, deltaX, deltaY) {\n        if (!this._isEnabled) {\n            return false;\n        }\n        if (!this.isHitTestVisible || !this.isVisible || this._doNotRender) {\n            return false;\n        }\n        if (!this.contains(x, y)) {\n            return false;\n        }\n        this._processObservables(type, x, y, pi, pointerId, buttonIndex, deltaX, deltaY);\n        return true;\n    };\n    /**\n     * @param target\n     * @param coordinates\n     * @param pointerId\n     * @param pi\n     * @hidden\n     */\n    Control.prototype._onPointerMove = function (target, coordinates, pointerId, pi) {\n        var canNotify = this.onPointerMoveObservable.notifyObservers(coordinates, -1, target, this, pi);\n        if (canNotify && this.parent != null) {\n            this.parent._onPointerMove(target, coordinates, pointerId, pi);\n        }\n    };\n    /**\n     * @param target\n     * @param pi\n     * @hidden\n     */\n    Control.prototype._onPointerEnter = function (target, pi) {\n        if (!this._isEnabled) {\n            return false;\n        }\n        if (this._enterCount > 0) {\n            return false;\n        }\n        if (this._enterCount === -1) {\n            // -1 is for touch input, we are now sure we are with a mouse or pencil\n            this._enterCount = 0;\n        }\n        this._enterCount++;\n        var canNotify = this.onPointerEnterObservable.notifyObservers(this, -1, target, this, pi);\n        if (canNotify && this.parent != null) {\n            this.parent._onPointerEnter(target, pi);\n        }\n        return true;\n    };\n    /**\n     * @param target\n     * @param pi\n     * @param force\n     * @hidden\n     */\n    Control.prototype._onPointerOut = function (target, pi, force) {\n        if (force === void 0) { force = false; }\n        if (!force && (!this._isEnabled || target === this)) {\n            return;\n        }\n        this._enterCount = 0;\n        var canNotify = true;\n        if (!target.isAscendant(this)) {\n            canNotify = this.onPointerOutObservable.notifyObservers(this, -1, target, this, pi);\n        }\n        if (canNotify && this.parent != null) {\n            this.parent._onPointerOut(target, pi, force);\n        }\n    };\n    /**\n     * @param target\n     * @param coordinates\n     * @param pointerId\n     * @param buttonIndex\n     * @param pi\n     * @hidden\n     */\n    Control.prototype._onPointerDown = function (target, coordinates, pointerId, buttonIndex, pi) {\n        // Prevent pointerout to lose control context.\n        // Event redundancy is checked inside the function.\n        this._onPointerEnter(this, pi);\n        if (this._downCount !== 0) {\n            return false;\n        }\n        this._downCount++;\n        this._downPointerIds[pointerId] = true;\n        var canNotify = this.onPointerDownObservable.notifyObservers(new Vector2WithInfo(coordinates, buttonIndex), -1, target, this, pi);\n        if (canNotify && this.parent != null) {\n            this.parent._onPointerDown(target, coordinates, pointerId, buttonIndex, pi);\n        }\n        return true;\n    };\n    /**\n     * @param target\n     * @param coordinates\n     * @param pointerId\n     * @param buttonIndex\n     * @param notifyClick\n     * @param pi\n     * @hidden\n     */\n    Control.prototype._onPointerUp = function (target, coordinates, pointerId, buttonIndex, notifyClick, pi) {\n        if (!this._isEnabled) {\n            return;\n        }\n        this._downCount = 0;\n        delete this._downPointerIds[pointerId];\n        var canNotifyClick = notifyClick;\n        if (notifyClick && (this._enterCount > 0 || this._enterCount === -1)) {\n            canNotifyClick = this.onPointerClickObservable.notifyObservers(new Vector2WithInfo(coordinates, buttonIndex), -1, target, this, pi);\n        }\n        var canNotify = this.onPointerUpObservable.notifyObservers(new Vector2WithInfo(coordinates, buttonIndex), -1, target, this, pi);\n        if (canNotify && this.parent != null) {\n            this.parent._onPointerUp(target, coordinates, pointerId, buttonIndex, canNotifyClick, pi);\n        }\n    };\n    /**\n     * @param pointerId\n     * @hidden\n     */\n    Control.prototype._forcePointerUp = function (pointerId) {\n        if (pointerId === void 0) { pointerId = null; }\n        if (pointerId !== null) {\n            this._onPointerUp(this, Vector2.Zero(), pointerId, 0, true);\n        }\n        else {\n            for (var key in this._downPointerIds) {\n                this._onPointerUp(this, Vector2.Zero(), +key, 0, true);\n            }\n        }\n    };\n    /**\n     * @param deltaX\n     * @param deltaY\n     * @hidden\n     */\n    Control.prototype._onWheelScroll = function (deltaX, deltaY) {\n        if (!this._isEnabled) {\n            return;\n        }\n        var canNotify = this.onWheelObservable.notifyObservers(new Vector2(deltaX, deltaY));\n        if (canNotify && this.parent != null) {\n            this.parent._onWheelScroll(deltaX, deltaY);\n        }\n    };\n    /** @hidden */\n    Control.prototype._onCanvasBlur = function () { };\n    /**\n     * @param type\n     * @param x\n     * @param y\n     * @param pi\n     * @param pointerId\n     * @param buttonIndex\n     * @param deltaX\n     * @param deltaY\n     * @hidden\n     */\n    Control.prototype._processObservables = function (type, x, y, pi, pointerId, buttonIndex, deltaX, deltaY) {\n        if (!this._isEnabled) {\n            return false;\n        }\n        this._dummyVector2.copyFromFloats(x, y);\n        if (type === PointerEventTypes.POINTERMOVE) {\n            this._onPointerMove(this, this._dummyVector2, pointerId, pi);\n            var previousControlOver = this._host._lastControlOver[pointerId];\n            if (previousControlOver && previousControlOver !== this) {\n                previousControlOver._onPointerOut(this, pi);\n            }\n            if (previousControlOver !== this) {\n                this._onPointerEnter(this, pi);\n            }\n            this._host._lastControlOver[pointerId] = this;\n            return true;\n        }\n        if (type === PointerEventTypes.POINTERDOWN) {\n            this._onPointerDown(this, this._dummyVector2, pointerId, buttonIndex, pi);\n            this._host._registerLastControlDown(this, pointerId);\n            this._host._lastPickedControl = this;\n            return true;\n        }\n        if (type === PointerEventTypes.POINTERUP) {\n            if (this._host._lastControlDown[pointerId]) {\n                this._host._lastControlDown[pointerId]._onPointerUp(this, this._dummyVector2, pointerId, buttonIndex, true, pi);\n            }\n            delete this._host._lastControlDown[pointerId];\n            return true;\n        }\n        if (type === PointerEventTypes.POINTERWHEEL) {\n            if (this._host._lastControlOver[pointerId]) {\n                this._host._lastControlOver[pointerId]._onWheelScroll(deltaX, deltaY);\n                return true;\n            }\n        }\n        return false;\n    };\n    Control.prototype._prepareFont = function () {\n        if (!this._font && !this._fontSet) {\n            return;\n        }\n        if (this._style) {\n            this._font = this._style.fontStyle + \" \" + this._style.fontWeight + \" \" + this.fontSizeInPixels + \"px \" + this._style.fontFamily;\n        }\n        else {\n            this._font = this._fontStyle + \" \" + this._fontWeight + \" \" + this.fontSizeInPixels + \"px \" + this._fontFamily;\n        }\n        this._fontOffset = Control._GetFontOffset(this._font);\n        //children need to be refreshed\n        this.getDescendants().forEach(function (child) { return child._markAllAsDirty(); });\n    };\n    /**\n     * Serializes the current control\n     * @param serializationObject defined the JSON serialized object\n     */\n    Control.prototype.serialize = function (serializationObject) {\n        SerializationHelper.Serialize(this, serializationObject);\n        serializationObject.name = this.name;\n        serializationObject.className = this.getClassName();\n        if (this._font) {\n            serializationObject.fontFamily = this._fontFamily;\n            serializationObject.fontSize = this.fontSize;\n            serializationObject.fontWeight = this.fontWeight;\n            serializationObject.fontStyle = this.fontStyle;\n        }\n    };\n    /**\n     * @param serializedObject\n     * @param host\n     * @hidden\n     */\n    Control.prototype._parseFromContent = function (serializedObject, host) {\n        if (serializedObject.fontFamily) {\n            this.fontFamily = serializedObject.fontFamily;\n        }\n        if (serializedObject.fontSize) {\n            this.fontSize = serializedObject.fontSize;\n        }\n        if (serializedObject.fontWeight) {\n            this.fontWeight = serializedObject.fontWeight;\n        }\n        if (serializedObject.fontStyle) {\n            this.fontStyle = serializedObject.fontStyle;\n        }\n    };\n    /** Releases associated resources */\n    Control.prototype.dispose = function () {\n        this.onDirtyObservable.clear();\n        this.onBeforeDrawObservable.clear();\n        this.onAfterDrawObservable.clear();\n        this.onPointerDownObservable.clear();\n        this.onPointerEnterObservable.clear();\n        this.onPointerMoveObservable.clear();\n        this.onPointerOutObservable.clear();\n        this.onPointerUpObservable.clear();\n        this.onPointerClickObservable.clear();\n        this.onWheelObservable.clear();\n        if (this._styleObserver && this._style) {\n            this._style.onChangedObservable.remove(this._styleObserver);\n            this._styleObserver = null;\n        }\n        if (this.parent) {\n            this.parent.removeControl(this);\n            this.parent = null;\n        }\n        if (this._host) {\n            var index = this._host._linkedControls.indexOf(this);\n            if (index > -1) {\n                this.linkWithMesh(null);\n            }\n        }\n        // Callback\n        this.onDisposeObservable.notifyObservers(this);\n        this.onDisposeObservable.clear();\n    };\n    Object.defineProperty(Control, \"HORIZONTAL_ALIGNMENT_LEFT\", {\n        /** HORIZONTAL_ALIGNMENT_LEFT */\n        get: function () {\n            return Control._HORIZONTAL_ALIGNMENT_LEFT;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control, \"HORIZONTAL_ALIGNMENT_RIGHT\", {\n        /** HORIZONTAL_ALIGNMENT_RIGHT */\n        get: function () {\n            return Control._HORIZONTAL_ALIGNMENT_RIGHT;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control, \"HORIZONTAL_ALIGNMENT_CENTER\", {\n        /** HORIZONTAL_ALIGNMENT_CENTER */\n        get: function () {\n            return Control._HORIZONTAL_ALIGNMENT_CENTER;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control, \"VERTICAL_ALIGNMENT_TOP\", {\n        /** VERTICAL_ALIGNMENT_TOP */\n        get: function () {\n            return Control._VERTICAL_ALIGNMENT_TOP;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control, \"VERTICAL_ALIGNMENT_BOTTOM\", {\n        /** VERTICAL_ALIGNMENT_BOTTOM */\n        get: function () {\n            return Control._VERTICAL_ALIGNMENT_BOTTOM;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Control, \"VERTICAL_ALIGNMENT_CENTER\", {\n        /** VERTICAL_ALIGNMENT_CENTER */\n        get: function () {\n            return Control._VERTICAL_ALIGNMENT_CENTER;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * @param font\n     * @hidden\n     */\n    Control._GetFontOffset = function (font) {\n        if (Control._FontHeightSizes[font]) {\n            return Control._FontHeightSizes[font];\n        }\n        var engine = EngineStore.LastCreatedEngine;\n        if (!engine) {\n            throw new Error(\"Invalid engine. Unable to create a canvas.\");\n        }\n        var result = engine.getFontOffset(font);\n        Control._FontHeightSizes[font] = result;\n        return result;\n    };\n    /**\n     * Creates a Control from parsed data\n     * @param serializedObject defines parsed data\n     * @param host defines the hosting AdvancedDynamicTexture\n     * @returns a new Control\n     */\n    Control.Parse = function (serializedObject, host) {\n        var controlType = Tools.Instantiate(\"BABYLON.GUI.\" + serializedObject.className);\n        var control = SerializationHelper.Parse(function () { return new controlType(); }, serializedObject, null);\n        control.name = serializedObject.name;\n        control._parseFromContent(serializedObject, host);\n        return control;\n    };\n    /**\n     * @param x\n     * @param y\n     * @param width\n     * @param height\n     * @param context\n     * @hidden\n     */\n    Control.drawEllipse = function (x, y, width, height, context) {\n        context.translate(x, y);\n        context.scale(width, height);\n        context.beginPath();\n        context.arc(0, 0, 1, 0, 2 * Math.PI);\n        context.closePath();\n        context.scale(1 / width, 1 / height);\n        context.translate(-x, -y);\n    };\n    /**\n     * Gets or sets a boolean indicating if alpha must be an inherited value (false by default)\n     */\n    Control.AllowAlphaInheritance = false;\n    Control._ClipMeasure = new Measure(0, 0, 0, 0);\n    // Statics\n    Control._HORIZONTAL_ALIGNMENT_LEFT = 0;\n    Control._HORIZONTAL_ALIGNMENT_RIGHT = 1;\n    Control._HORIZONTAL_ALIGNMENT_CENTER = 2;\n    Control._VERTICAL_ALIGNMENT_TOP = 0;\n    Control._VERTICAL_ALIGNMENT_BOTTOM = 1;\n    Control._VERTICAL_ALIGNMENT_CENTER = 2;\n    Control._FontHeightSizes = {};\n    Control.AddHeader = function () { };\n    __decorate([\n        serialize()\n    ], Control.prototype, \"metadata\", void 0);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"isHitTestVisible\", void 0);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"isPointerBlocker\", void 0);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"isFocusInvisible\", void 0);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"clipChildren\", void 0);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"clipContent\", void 0);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"useBitmapCache\", void 0);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"shadowOffsetX\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"shadowOffsetY\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"shadowBlur\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"shadowColor\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"hoverCursor\", void 0);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"fontOffset\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"alpha\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"scaleX\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"scaleY\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"rotation\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"transformCenterY\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"transformCenterX\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"horizontalAlignment\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"verticalAlignment\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"fixedRatio\", void 0);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"width\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"height\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"style\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"color\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"zIndex\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"notRenderable\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"isVisible\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"descendantsOnlyPadding\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"paddingLeft\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"paddingRight\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"paddingTop\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"paddingBottom\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"left\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"top\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"linkOffsetX\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"linkOffsetY\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"isEnabled\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"disabledColor\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"disabledColorItem\", null);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"overlapGroup\", void 0);\n    __decorate([\n        serialize()\n    ], Control.prototype, \"overlapDeltaMultiplier\", void 0);\n    return Control;\n}());\nexport { Control };\nRegisterClass(\"BABYLON.GUI.Control\", Control);\n//# sourceMappingURL=control.js.map","import { __decorate, __extends } from \"tslib\";\nimport { Observable } from \"@babylonjs/core/Misc/observable.js\";\nimport { Tools } from \"@babylonjs/core/Misc/tools.js\";\nimport { Control } from \"./control.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { serialize } from \"@babylonjs/core/Misc/decorators.js\";\nimport { EngineStore } from \"@babylonjs/core/Engines/engineStore.js\";\n/**\n * Class used to create 2D images\n */\nvar Image = /** @class */ (function (_super) {\n    __extends(Image, _super);\n    /**\n     * Creates a new Image\n     * @param name defines the control name\n     * @param url defines the image url\n     */\n    function Image(name, url) {\n        if (url === void 0) { url = null; }\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        _this._workingCanvas = null;\n        _this._loaded = false;\n        _this._stretch = Image.STRETCH_FILL;\n        _this._autoScale = false;\n        _this._sourceLeft = 0;\n        _this._sourceTop = 0;\n        _this._sourceWidth = 0;\n        _this._sourceHeight = 0;\n        _this._svgAttributesComputationCompleted = false;\n        _this._isSVG = false;\n        _this._cellWidth = 0;\n        _this._cellHeight = 0;\n        _this._cellId = -1;\n        _this._populateNinePatchSlicesFromImage = false;\n        _this._imageDataCache = { data: null, key: \"\" };\n        /**\n         * Observable notified when the content is loaded\n         */\n        _this.onImageLoadedObservable = new Observable();\n        /**\n         * Observable notified when _sourceLeft, _sourceTop, _sourceWidth and _sourceHeight are computed\n         */\n        _this.onSVGAttributesComputedObservable = new Observable();\n        _this.source = url;\n        return _this;\n    }\n    Object.defineProperty(Image.prototype, \"isLoaded\", {\n        /**\n         * Gets a boolean indicating that the content is loaded\n         */\n        get: function () {\n            return this._loaded;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Image.prototype, \"detectPointerOnOpaqueOnly\", {\n        /**\n         * Gets or sets a boolean indicating if pointers should only be validated on pixels with alpha > 0.\n         * Beware using this as this will consume more memory as the image has to be stored twice\n         */\n        get: function () {\n            return this._detectPointerOnOpaqueOnly;\n        },\n        set: function (value) {\n            if (this._detectPointerOnOpaqueOnly === value) {\n                return;\n            }\n            this._detectPointerOnOpaqueOnly = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Image.prototype, \"sliceLeft\", {\n        /**\n         * Gets or sets the left value for slicing (9-patch)\n         */\n        get: function () {\n            return this._sliceLeft;\n        },\n        set: function (value) {\n            if (this._sliceLeft === value) {\n                return;\n            }\n            this._sliceLeft = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Image.prototype, \"sliceRight\", {\n        /**\n         * Gets or sets the right value for slicing (9-patch)\n         */\n        get: function () {\n            return this._sliceRight;\n        },\n        set: function (value) {\n            if (this._sliceRight === value) {\n                return;\n            }\n            this._sliceRight = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Image.prototype, \"sliceTop\", {\n        /**\n         * Gets or sets the top value for slicing (9-patch)\n         */\n        get: function () {\n            return this._sliceTop;\n        },\n        set: function (value) {\n            if (this._sliceTop === value) {\n                return;\n            }\n            this._sliceTop = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Image.prototype, \"sliceBottom\", {\n        /**\n         * Gets or sets the bottom value for slicing (9-patch)\n         */\n        get: function () {\n            return this._sliceBottom;\n        },\n        set: function (value) {\n            if (this._sliceBottom === value) {\n                return;\n            }\n            this._sliceBottom = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Image.prototype, \"sourceLeft\", {\n        /**\n         * Gets or sets the left coordinate in the source image\n         */\n        get: function () {\n            return this._sourceLeft;\n        },\n        set: function (value) {\n            if (this._sourceLeft === value) {\n                return;\n            }\n            this._sourceLeft = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Image.prototype, \"sourceTop\", {\n        /**\n         * Gets or sets the top coordinate in the source image\n         */\n        get: function () {\n            return this._sourceTop;\n        },\n        set: function (value) {\n            if (this._sourceTop === value) {\n                return;\n            }\n            this._sourceTop = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Image.prototype, \"sourceWidth\", {\n        /**\n         * Gets or sets the width to capture in the source image\n         */\n        get: function () {\n            return this._sourceWidth;\n        },\n        set: function (value) {\n            if (this._sourceWidth === value) {\n                return;\n            }\n            this._sourceWidth = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Image.prototype, \"sourceHeight\", {\n        /**\n         * Gets or sets the height to capture in the source image\n         */\n        get: function () {\n            return this._sourceHeight;\n        },\n        set: function (value) {\n            if (this._sourceHeight === value) {\n                return;\n            }\n            this._sourceHeight = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Image.prototype, \"imageWidth\", {\n        /**\n         * Gets the image width\n         */\n        get: function () {\n            return this._imageWidth;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Image.prototype, \"imageHeight\", {\n        /**\n         * Gets the image height\n         */\n        get: function () {\n            return this._imageHeight;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Image.prototype, \"populateNinePatchSlicesFromImage\", {\n        /**\n         * Gets or sets a boolean indicating if nine patch slices (left, top, right, bottom) should be read from image data\n         */\n        get: function () {\n            return this._populateNinePatchSlicesFromImage;\n        },\n        set: function (value) {\n            if (this._populateNinePatchSlicesFromImage === value) {\n                return;\n            }\n            this._populateNinePatchSlicesFromImage = value;\n            if (this._populateNinePatchSlicesFromImage && this._loaded) {\n                this._extractNinePatchSliceDataFromImage();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Image.prototype, \"isSVG\", {\n        /** Indicates if the format of the image is SVG */\n        get: function () {\n            return this._isSVG;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Image.prototype, \"svgAttributesComputationCompleted\", {\n        /** Gets the status of the SVG attributes computation (sourceLeft, sourceTop, sourceWidth, sourceHeight) */\n        get: function () {\n            return this._svgAttributesComputationCompleted;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Image.prototype, \"autoScale\", {\n        /**\n         * Gets or sets a boolean indicating if the image can force its container to adapt its size\n         * @see https://doc.babylonjs.com/how_to/gui#image\n         */\n        get: function () {\n            return this._autoScale;\n        },\n        set: function (value) {\n            if (this._autoScale === value) {\n                return;\n            }\n            this._autoScale = value;\n            if (value && this._loaded) {\n                this.synchronizeSizeWithContent();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Image.prototype, \"stretch\", {\n        /** Gets or sets the stretching mode used by the image */\n        get: function () {\n            return this._stretch;\n        },\n        set: function (value) {\n            if (this._stretch === value) {\n                return;\n            }\n            this._stretch = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * @param n\n     * @param preserveProperties\n     * @hidden\n     */\n    Image.prototype._rotate90 = function (n, preserveProperties) {\n        var _a, _b;\n        if (preserveProperties === void 0) { preserveProperties = false; }\n        var width = this._domImage.width;\n        var height = this._domImage.height;\n        // Should abstract platform instead of using LastCreatedEngine\n        var engine = ((_b = (_a = this._host) === null || _a === void 0 ? void 0 : _a.getScene()) === null || _b === void 0 ? void 0 : _b.getEngine()) || EngineStore.LastCreatedEngine;\n        if (!engine) {\n            throw new Error(\"Invalid engine. Unable to create a canvas.\");\n        }\n        var canvas = engine.createCanvas(height, width);\n        var context = canvas.getContext(\"2d\");\n        context.translate(canvas.width / 2, canvas.height / 2);\n        context.rotate((n * Math.PI) / 2);\n        context.drawImage(this._domImage, 0, 0, width, height, -width / 2, -height / 2, width, height);\n        var dataUrl = canvas.toDataURL(\"image/jpg\");\n        var rotatedImage = new Image(this.name + \"rotated\", dataUrl);\n        if (preserveProperties) {\n            rotatedImage._stretch = this._stretch;\n            rotatedImage._autoScale = this._autoScale;\n            rotatedImage._cellId = this._cellId;\n            rotatedImage._cellWidth = n % 1 ? this._cellHeight : this._cellWidth;\n            rotatedImage._cellHeight = n % 1 ? this._cellWidth : this._cellHeight;\n        }\n        this._handleRotationForSVGImage(this, rotatedImage, n);\n        this._imageDataCache.data = null;\n        return rotatedImage;\n    };\n    Image.prototype._handleRotationForSVGImage = function (srcImage, dstImage, n) {\n        var _this = this;\n        if (!srcImage._isSVG) {\n            return;\n        }\n        if (srcImage._svgAttributesComputationCompleted) {\n            this._rotate90SourceProperties(srcImage, dstImage, n);\n            this._markAsDirty();\n        }\n        else {\n            srcImage.onSVGAttributesComputedObservable.addOnce(function () {\n                _this._rotate90SourceProperties(srcImage, dstImage, n);\n                _this._markAsDirty();\n            });\n        }\n    };\n    Image.prototype._rotate90SourceProperties = function (srcImage, dstImage, n) {\n        var _a, _b;\n        var srcLeft = srcImage.sourceLeft, srcTop = srcImage.sourceTop, srcWidth = srcImage.domImage.width, srcHeight = srcImage.domImage.height;\n        var dstLeft = srcLeft, dstTop = srcTop, dstWidth = srcImage.sourceWidth, dstHeight = srcImage.sourceHeight;\n        if (n != 0) {\n            var mult = n < 0 ? -1 : 1;\n            n = n % 4;\n            for (var i = 0; i < Math.abs(n); ++i) {\n                dstLeft = -(srcTop - srcHeight / 2) * mult + srcHeight / 2;\n                dstTop = (srcLeft - srcWidth / 2) * mult + srcWidth / 2;\n                _a = [dstHeight, dstWidth], dstWidth = _a[0], dstHeight = _a[1];\n                if (n < 0) {\n                    dstTop -= dstHeight;\n                }\n                else {\n                    dstLeft -= dstWidth;\n                }\n                srcLeft = dstLeft;\n                srcTop = dstTop;\n                _b = [srcHeight, srcWidth], srcWidth = _b[0], srcHeight = _b[1];\n            }\n        }\n        dstImage.sourceLeft = dstLeft;\n        dstImage.sourceTop = dstTop;\n        dstImage.sourceWidth = dstWidth;\n        dstImage.sourceHeight = dstHeight;\n    };\n    Image.prototype._extractNinePatchSliceDataFromImage = function () {\n        var _a, _b;\n        var width = this._domImage.width;\n        var height = this._domImage.height;\n        if (!this._workingCanvas) {\n            var engine = ((_b = (_a = this._host) === null || _a === void 0 ? void 0 : _a.getScene()) === null || _b === void 0 ? void 0 : _b.getEngine()) || EngineStore.LastCreatedEngine;\n            if (!engine) {\n                throw new Error(\"Invalid engine. Unable to create a canvas.\");\n            }\n            this._workingCanvas = engine.createCanvas(width, height);\n        }\n        var canvas = this._workingCanvas;\n        var context = canvas.getContext(\"2d\");\n        context.drawImage(this._domImage, 0, 0, width, height);\n        var imageData = context.getImageData(0, 0, width, height);\n        // Left and right\n        this._sliceLeft = -1;\n        this._sliceRight = -1;\n        for (var x = 0; x < width; x++) {\n            var alpha = imageData.data[x * 4 + 3];\n            if (alpha > 127 && this._sliceLeft === -1) {\n                this._sliceLeft = x;\n                continue;\n            }\n            if (alpha < 127 && this._sliceLeft > -1) {\n                this._sliceRight = x;\n                break;\n            }\n        }\n        // top and bottom\n        this._sliceTop = -1;\n        this._sliceBottom = -1;\n        for (var y = 0; y < height; y++) {\n            var alpha = imageData.data[y * width * 4 + 3];\n            if (alpha > 127 && this._sliceTop === -1) {\n                this._sliceTop = y;\n                continue;\n            }\n            if (alpha < 127 && this._sliceTop > -1) {\n                this._sliceBottom = y;\n                break;\n            }\n        }\n    };\n    Object.defineProperty(Image.prototype, \"domImage\", {\n        get: function () {\n            return this._domImage;\n        },\n        /**\n         * Gets or sets the internal DOM image used to render the control\n         */\n        set: function (value) {\n            var _this = this;\n            this._domImage = value;\n            this._loaded = false;\n            this._imageDataCache.data = null;\n            if (this._domImage.width) {\n                this._onImageLoaded();\n            }\n            else {\n                this._domImage.onload = function () {\n                    _this._onImageLoaded();\n                };\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Image.prototype._onImageLoaded = function () {\n        this._imageDataCache.data = null;\n        this._imageWidth = this._domImage.width;\n        this._imageHeight = this._domImage.height;\n        this._loaded = true;\n        if (this._populateNinePatchSlicesFromImage) {\n            this._extractNinePatchSliceDataFromImage();\n        }\n        if (this._autoScale) {\n            this.synchronizeSizeWithContent();\n        }\n        this.onImageLoadedObservable.notifyObservers(this);\n        this._markAsDirty();\n    };\n    Object.defineProperty(Image.prototype, \"source\", {\n        /**\n         * Gets the image source url\n         */\n        get: function () {\n            return this._source;\n        },\n        /**\n         * Gets or sets image source url\n         */\n        set: function (value) {\n            var _this = this;\n            var _a, _b;\n            if (this._source === value) {\n                return;\n            }\n            this._loaded = false;\n            this._source = value;\n            this._imageDataCache.data = null;\n            if (value) {\n                value = this._svgCheck(value);\n            }\n            // Should abstract platform instead of using LastCreatedEngine\n            var engine = ((_b = (_a = this._host) === null || _a === void 0 ? void 0 : _a.getScene()) === null || _b === void 0 ? void 0 : _b.getEngine()) || EngineStore.LastCreatedEngine;\n            if (!engine) {\n                throw new Error(\"Invalid engine. Unable to create a canvas.\");\n            }\n            this._domImage = engine.createCanvasImage();\n            this._domImage.onload = function () {\n                _this._onImageLoaded();\n            };\n            if (value) {\n                Tools.SetCorsBehavior(value, this._domImage);\n                this._domImage.src = value;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Checks for svg document with icon id present\n     * @param value\n     */\n    Image.prototype._svgCheck = function (value) {\n        var _this = this;\n        if (window.SVGSVGElement && value.search(/.svg#/gi) !== -1 && value.indexOf(\"#\") === value.lastIndexOf(\"#\")) {\n            this._isSVG = true;\n            var svgsrc_1 = value.split(\"#\")[0];\n            var elemid_1 = value.split(\"#\")[1];\n            // check if object alr exist in document\n            var svgExist_1 = document.body.querySelector('object[data=\"' + svgsrc_1 + '\"]');\n            if (svgExist_1) {\n                var svgDoc = svgExist_1.contentDocument;\n                // get viewbox width and height, get svg document width and height in px\n                if (svgDoc && svgDoc.documentElement) {\n                    var vb = svgDoc.documentElement.getAttribute(\"viewBox\");\n                    var docwidth = Number(svgDoc.documentElement.getAttribute(\"width\"));\n                    var docheight = Number(svgDoc.documentElement.getAttribute(\"height\"));\n                    var elem = svgDoc.getElementById(elemid_1);\n                    if (elem && vb && docwidth && docheight) {\n                        this._getSVGAttribs(svgExist_1, elemid_1);\n                        return value;\n                    }\n                }\n                // wait for object to load\n                svgExist_1.addEventListener(\"load\", function () {\n                    _this._getSVGAttribs(svgExist_1, elemid_1);\n                });\n            }\n            else {\n                // create document object\n                var svgImage = document.createElement(\"object\");\n                svgImage.data = svgsrc_1;\n                svgImage.type = \"image/svg+xml\";\n                svgImage.width = \"0%\";\n                svgImage.height = \"0%\";\n                document.body.appendChild(svgImage);\n                // when the object has loaded, get the element attribs\n                svgImage.onload = function () {\n                    var svgobj = document.body.querySelector('object[data=\"' + svgsrc_1 + '\"]');\n                    if (svgobj) {\n                        _this._getSVGAttribs(svgobj, elemid_1);\n                    }\n                };\n            }\n            return svgsrc_1;\n        }\n        else {\n            return value;\n        }\n    };\n    /**\n     * Sets sourceLeft, sourceTop, sourceWidth, sourceHeight automatically\n     * given external svg file and icon id\n     * @param svgsrc\n     * @param elemid\n     */\n    Image.prototype._getSVGAttribs = function (svgsrc, elemid) {\n        var svgDoc = svgsrc.contentDocument;\n        // get viewbox width and height, get svg document width and height in px\n        if (svgDoc && svgDoc.documentElement) {\n            var vb = svgDoc.documentElement.getAttribute(\"viewBox\");\n            var docwidth = Number(svgDoc.documentElement.getAttribute(\"width\"));\n            var docheight = Number(svgDoc.documentElement.getAttribute(\"height\"));\n            // get element bbox and matrix transform\n            var elem = svgDoc.getElementById(elemid);\n            if (vb && docwidth && docheight && elem) {\n                var vb_width = Number(vb.split(\" \")[2]);\n                var vb_height = Number(vb.split(\" \")[3]);\n                var elem_bbox = elem.getBBox();\n                var elem_matrix_a = 1;\n                var elem_matrix_d = 1;\n                var elem_matrix_e = 0;\n                var elem_matrix_f = 0;\n                var mainMatrix = elem.transform.baseVal.consolidate().matrix;\n                if (elem.transform && elem.transform.baseVal.consolidate()) {\n                    elem_matrix_a = mainMatrix.a;\n                    elem_matrix_d = mainMatrix.d;\n                    elem_matrix_e = mainMatrix.e;\n                    elem_matrix_f = mainMatrix.f;\n                }\n                // compute source coordinates and dimensions\n                this.sourceLeft = ((elem_matrix_a * elem_bbox.x + elem_matrix_e) * docwidth) / vb_width;\n                this.sourceTop = ((elem_matrix_d * elem_bbox.y + elem_matrix_f) * docheight) / vb_height;\n                this.sourceWidth = elem_bbox.width * elem_matrix_a * (docwidth / vb_width);\n                this.sourceHeight = elem_bbox.height * elem_matrix_d * (docheight / vb_height);\n                this._svgAttributesComputationCompleted = true;\n                this.onSVGAttributesComputedObservable.notifyObservers(this);\n            }\n        }\n    };\n    Object.defineProperty(Image.prototype, \"cellWidth\", {\n        /**\n         * Gets or sets the cell width to use when animation sheet is enabled\n         * @see https://doc.babylonjs.com/how_to/gui#image\n         */\n        get: function () {\n            return this._cellWidth;\n        },\n        set: function (value) {\n            if (this._cellWidth === value) {\n                return;\n            }\n            this._cellWidth = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Image.prototype, \"cellHeight\", {\n        /**\n         * Gets or sets the cell height to use when animation sheet is enabled\n         * @see https://doc.babylonjs.com/how_to/gui#image\n         */\n        get: function () {\n            return this._cellHeight;\n        },\n        set: function (value) {\n            if (this._cellHeight === value) {\n                return;\n            }\n            this._cellHeight = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Image.prototype, \"cellId\", {\n        /**\n         * Gets or sets the cell id to use (this will turn on the animation sheet mode)\n         * @see https://doc.babylonjs.com/how_to/gui#image\n         */\n        get: function () {\n            return this._cellId;\n        },\n        set: function (value) {\n            if (this._cellId === value) {\n                return;\n            }\n            this._cellId = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Tests if a given coordinates belong to the current control\n     * @param x defines x coordinate to test\n     * @param y defines y coordinate to test\n     * @returns true if the coordinates are inside the control\n     */\n    Image.prototype.contains = function (x, y) {\n        if (!_super.prototype.contains.call(this, x, y)) {\n            return false;\n        }\n        if (!this._detectPointerOnOpaqueOnly || !this._workingCanvas) {\n            return true;\n        }\n        var width = this._currentMeasure.width | 0;\n        var height = this._currentMeasure.height | 0;\n        var key = width + \"_\" + height;\n        var imageData = this._imageDataCache.data;\n        if (!imageData || this._imageDataCache.key !== key) {\n            var canvas = this._workingCanvas;\n            var context_1 = canvas.getContext(\"2d\");\n            this._imageDataCache.data = imageData = context_1.getImageData(0, 0, width, height).data;\n            this._imageDataCache.key = key;\n        }\n        x = (x - this._currentMeasure.left) | 0;\n        y = (y - this._currentMeasure.top) | 0;\n        var pickedPixel = imageData[(x + y * width) * 4 + 3];\n        return pickedPixel > 0;\n    };\n    Image.prototype._getTypeName = function () {\n        return \"Image\";\n    };\n    /** Force the control to synchronize with its content */\n    Image.prototype.synchronizeSizeWithContent = function () {\n        if (!this._loaded) {\n            return;\n        }\n        this.width = this._domImage.width + \"px\";\n        this.height = this._domImage.height + \"px\";\n    };\n    Image.prototype._processMeasures = function (parentMeasure, context) {\n        if (this._loaded) {\n            switch (this._stretch) {\n                case Image.STRETCH_NONE:\n                    break;\n                case Image.STRETCH_FILL:\n                    break;\n                case Image.STRETCH_UNIFORM:\n                    break;\n                case Image.STRETCH_NINE_PATCH:\n                    break;\n                case Image.STRETCH_EXTEND:\n                    if (this._autoScale) {\n                        this.synchronizeSizeWithContent();\n                    }\n                    if (this.parent && this.parent.parent) {\n                        // Will update root size if root is not the top root\n                        this.parent.adaptWidthToChildren = true;\n                        this.parent.adaptHeightToChildren = true;\n                    }\n                    break;\n            }\n        }\n        _super.prototype._processMeasures.call(this, parentMeasure, context);\n    };\n    Image.prototype._prepareWorkingCanvasForOpaqueDetection = function () {\n        var _a, _b;\n        if (!this._detectPointerOnOpaqueOnly) {\n            return;\n        }\n        var width = this._currentMeasure.width;\n        var height = this._currentMeasure.height;\n        if (!this._workingCanvas) {\n            var engine = ((_b = (_a = this._host) === null || _a === void 0 ? void 0 : _a.getScene()) === null || _b === void 0 ? void 0 : _b.getEngine()) || EngineStore.LastCreatedEngine;\n            if (!engine) {\n                throw new Error(\"Invalid engine. Unable to create a canvas.\");\n            }\n            this._workingCanvas = engine.createCanvas(width, height);\n        }\n        var canvas = this._workingCanvas;\n        var context = canvas.getContext(\"2d\");\n        context.clearRect(0, 0, width, height);\n    };\n    Image.prototype._drawImage = function (context, sx, sy, sw, sh, tx, ty, tw, th) {\n        context.drawImage(this._domImage, sx, sy, sw, sh, tx, ty, tw, th);\n        if (!this._detectPointerOnOpaqueOnly) {\n            return;\n        }\n        var canvas = this._workingCanvas;\n        context = canvas.getContext(\"2d\");\n        context.drawImage(this._domImage, sx, sy, sw, sh, tx - this._currentMeasure.left, ty - this._currentMeasure.top, tw, th);\n    };\n    Image.prototype._draw = function (context) {\n        context.save();\n        if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n            context.shadowColor = this.shadowColor;\n            context.shadowBlur = this.shadowBlur;\n            context.shadowOffsetX = this.shadowOffsetX;\n            context.shadowOffsetY = this.shadowOffsetY;\n        }\n        var x, y, width, height;\n        if (this.cellId == -1) {\n            x = this._sourceLeft;\n            y = this._sourceTop;\n            width = this._sourceWidth ? this._sourceWidth : this._imageWidth;\n            height = this._sourceHeight ? this._sourceHeight : this._imageHeight;\n        }\n        else {\n            var rowCount = this._domImage.naturalWidth / this.cellWidth;\n            var column = (this.cellId / rowCount) >> 0;\n            var row = this.cellId % rowCount;\n            x = this.cellWidth * row;\n            y = this.cellHeight * column;\n            width = this.cellWidth;\n            height = this.cellHeight;\n        }\n        this._prepareWorkingCanvasForOpaqueDetection();\n        this._applyStates(context);\n        if (this._loaded) {\n            switch (this._stretch) {\n                case Image.STRETCH_NONE:\n                    this._drawImage(context, x, y, width, height, this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height);\n                    break;\n                case Image.STRETCH_FILL:\n                    this._drawImage(context, x, y, width, height, this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height);\n                    break;\n                case Image.STRETCH_UNIFORM: {\n                    var hRatio = this._currentMeasure.width / width;\n                    var vRatio = this._currentMeasure.height / height;\n                    var ratio = Math.min(hRatio, vRatio);\n                    var centerX = (this._currentMeasure.width - width * ratio) / 2;\n                    var centerY = (this._currentMeasure.height - height * ratio) / 2;\n                    this._drawImage(context, x, y, width, height, this._currentMeasure.left + centerX, this._currentMeasure.top + centerY, width * ratio, height * ratio);\n                    break;\n                }\n                case Image.STRETCH_EXTEND:\n                    this._drawImage(context, x, y, width, height, this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height);\n                    break;\n                case Image.STRETCH_NINE_PATCH:\n                    this._renderNinePatch(context);\n                    break;\n            }\n        }\n        context.restore();\n    };\n    Image.prototype._renderNinePatch = function (context) {\n        var leftWidth = this._sliceLeft;\n        var topHeight = this._sliceTop;\n        var bottomHeight = this._imageHeight - this._sliceBottom;\n        var rightWidth = this._imageWidth - this._sliceRight;\n        var centerWidth = this._sliceRight - this._sliceLeft;\n        var centerHeight = this._sliceBottom - this._sliceTop;\n        var targetCenterWidth = this._currentMeasure.width - rightWidth - leftWidth + 2;\n        var targetCenterHeight = this._currentMeasure.height - bottomHeight - topHeight + 2;\n        var centerLeftOffset = this._currentMeasure.left + leftWidth - 1;\n        var centerTopOffset = this._currentMeasure.top + topHeight - 1;\n        var rightOffset = this._currentMeasure.left + this._currentMeasure.width - rightWidth;\n        var bottomOffset = this._currentMeasure.top + this._currentMeasure.height - bottomHeight;\n        //Top Left\n        this._drawImage(context, 0, 0, leftWidth, topHeight, this._currentMeasure.left, this._currentMeasure.top, leftWidth, topHeight);\n        //Top\n        context.clearRect(centerLeftOffset, this._currentMeasure.top, targetCenterWidth, topHeight);\n        this._drawImage(context, this._sliceLeft, 0, centerWidth, topHeight, centerLeftOffset, this._currentMeasure.top, targetCenterWidth, topHeight);\n        //Top Right\n        context.clearRect(rightOffset, this._currentMeasure.top, rightWidth, topHeight);\n        this._drawImage(context, this._sliceRight, 0, rightWidth, topHeight, rightOffset, this._currentMeasure.top, rightWidth, topHeight);\n        //Left\n        context.clearRect(this._currentMeasure.left, centerTopOffset, leftWidth, targetCenterHeight);\n        this._drawImage(context, 0, this._sliceTop, leftWidth, centerHeight, this._currentMeasure.left, centerTopOffset, leftWidth, targetCenterHeight);\n        // Center\n        context.clearRect(centerLeftOffset, centerTopOffset, targetCenterWidth, targetCenterHeight);\n        this._drawImage(context, this._sliceLeft, this._sliceTop, centerWidth, centerHeight, centerLeftOffset, centerTopOffset, targetCenterWidth, targetCenterHeight);\n        //Right\n        context.clearRect(rightOffset, centerTopOffset, rightWidth, targetCenterHeight);\n        this._drawImage(context, this._sliceRight, this._sliceTop, rightWidth, centerHeight, rightOffset, centerTopOffset, rightWidth, targetCenterHeight);\n        //Bottom Left\n        context.clearRect(this._currentMeasure.left, bottomOffset, leftWidth, bottomHeight);\n        this._drawImage(context, 0, this._sliceBottom, leftWidth, bottomHeight, this._currentMeasure.left, bottomOffset, leftWidth, bottomHeight);\n        //Bottom\n        context.clearRect(centerLeftOffset, bottomOffset, targetCenterWidth, bottomHeight);\n        this._drawImage(context, this.sliceLeft, this._sliceBottom, centerWidth, bottomHeight, centerLeftOffset, bottomOffset, targetCenterWidth, bottomHeight);\n        //Bottom Right\n        context.clearRect(rightOffset, bottomOffset, rightWidth, bottomHeight);\n        this._drawImage(context, this._sliceRight, this._sliceBottom, rightWidth, bottomHeight, rightOffset, bottomOffset, rightWidth, bottomHeight);\n    };\n    Image.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.onImageLoadedObservable.clear();\n        this.onSVGAttributesComputedObservable.clear();\n    };\n    // Static\n    /** STRETCH_NONE */\n    Image.STRETCH_NONE = 0;\n    /** STRETCH_FILL */\n    Image.STRETCH_FILL = 1;\n    /** STRETCH_UNIFORM */\n    Image.STRETCH_UNIFORM = 2;\n    /** STRETCH_EXTEND */\n    Image.STRETCH_EXTEND = 3;\n    /** NINE_PATCH */\n    Image.STRETCH_NINE_PATCH = 4;\n    __decorate([\n        serialize()\n    ], Image.prototype, \"detectPointerOnOpaqueOnly\", null);\n    __decorate([\n        serialize()\n    ], Image.prototype, \"sliceLeft\", null);\n    __decorate([\n        serialize()\n    ], Image.prototype, \"sliceRight\", null);\n    __decorate([\n        serialize()\n    ], Image.prototype, \"sliceTop\", null);\n    __decorate([\n        serialize()\n    ], Image.prototype, \"sliceBottom\", null);\n    __decorate([\n        serialize()\n    ], Image.prototype, \"sourceLeft\", null);\n    __decorate([\n        serialize()\n    ], Image.prototype, \"sourceTop\", null);\n    __decorate([\n        serialize()\n    ], Image.prototype, \"sourceWidth\", null);\n    __decorate([\n        serialize()\n    ], Image.prototype, \"sourceHeight\", null);\n    __decorate([\n        serialize()\n    ], Image.prototype, \"populateNinePatchSlicesFromImage\", null);\n    __decorate([\n        serialize()\n    ], Image.prototype, \"autoScale\", null);\n    __decorate([\n        serialize()\n    ], Image.prototype, \"stretch\", null);\n    __decorate([\n        serialize()\n    ], Image.prototype, \"source\", null);\n    __decorate([\n        serialize()\n    ], Image.prototype, \"cellWidth\", null);\n    __decorate([\n        serialize()\n    ], Image.prototype, \"cellHeight\", null);\n    __decorate([\n        serialize()\n    ], Image.prototype, \"cellId\", null);\n    return Image;\n}(Control));\nexport { Image };\nRegisterClass(\"BABYLON.GUI.Image\", Image);\n//# sourceMappingURL=image.js.map","import { __decorate, __extends } from \"tslib\";\nimport { Observable } from \"@babylonjs/core/Misc/observable.js\";\nimport { Control } from \"./control.js\";\nimport { StackPanel } from \"./stackPanel.js\";\nimport { TextBlock } from \"./textBlock.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { serialize } from \"@babylonjs/core/Misc/decorators.js\";\n/**\n * Class used to represent a 2D checkbox\n */\nvar Checkbox = /** @class */ (function (_super) {\n    __extends(Checkbox, _super);\n    /**\n     * Creates a new CheckBox\n     * @param name defines the control name\n     */\n    function Checkbox(name) {\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        _this._isChecked = false;\n        _this._background = \"black\";\n        _this._checkSizeRatio = 0.8;\n        _this._thickness = 1;\n        /**\n         * Observable raised when isChecked property changes\n         */\n        _this.onIsCheckedChangedObservable = new Observable();\n        _this.isPointerBlocker = true;\n        return _this;\n    }\n    Object.defineProperty(Checkbox.prototype, \"thickness\", {\n        /** Gets or sets border thickness  */\n        get: function () {\n            return this._thickness;\n        },\n        set: function (value) {\n            if (this._thickness === value) {\n                return;\n            }\n            this._thickness = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Checkbox.prototype, \"checkSizeRatio\", {\n        /** Gets or sets a value indicating the ratio between overall size and check size */\n        get: function () {\n            return this._checkSizeRatio;\n        },\n        set: function (value) {\n            value = Math.max(Math.min(1, value), 0);\n            if (this._checkSizeRatio === value) {\n                return;\n            }\n            this._checkSizeRatio = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Checkbox.prototype, \"background\", {\n        /** Gets or sets background color */\n        get: function () {\n            return this._background;\n        },\n        set: function (value) {\n            if (this._background === value) {\n                return;\n            }\n            this._background = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Checkbox.prototype, \"isChecked\", {\n        /** Gets or sets a boolean indicating if the checkbox is checked or not */\n        get: function () {\n            return this._isChecked;\n        },\n        set: function (value) {\n            if (this._isChecked === value) {\n                return;\n            }\n            this._isChecked = value;\n            this._markAsDirty();\n            this.onIsCheckedChangedObservable.notifyObservers(value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Checkbox.prototype._getTypeName = function () {\n        return \"Checkbox\";\n    };\n    /**\n     * @param context\n     * @hidden\n     */\n    Checkbox.prototype._draw = function (context) {\n        context.save();\n        this._applyStates(context);\n        var actualWidth = this._currentMeasure.width - this._thickness;\n        var actualHeight = this._currentMeasure.height - this._thickness;\n        if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n            context.shadowColor = this.shadowColor;\n            context.shadowBlur = this.shadowBlur;\n            context.shadowOffsetX = this.shadowOffsetX;\n            context.shadowOffsetY = this.shadowOffsetY;\n        }\n        context.fillStyle = this._isEnabled ? this._background : this._disabledColor;\n        context.fillRect(this._currentMeasure.left + this._thickness / 2, this._currentMeasure.top + this._thickness / 2, actualWidth, actualHeight);\n        if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n            context.shadowBlur = 0;\n            context.shadowOffsetX = 0;\n            context.shadowOffsetY = 0;\n        }\n        if (this._isChecked) {\n            context.fillStyle = this._isEnabled ? this.color : this._disabledColorItem;\n            var offsetWidth = actualWidth * this._checkSizeRatio;\n            var offsetHeight = actualHeight * this._checkSizeRatio;\n            context.fillRect(this._currentMeasure.left + this._thickness / 2 + (actualWidth - offsetWidth) / 2, this._currentMeasure.top + this._thickness / 2 + (actualHeight - offsetHeight) / 2, offsetWidth, offsetHeight);\n        }\n        context.strokeStyle = this.color;\n        context.lineWidth = this._thickness;\n        context.strokeRect(this._currentMeasure.left + this._thickness / 2, this._currentMeasure.top + this._thickness / 2, actualWidth, actualHeight);\n        context.restore();\n    };\n    // Events\n    /**\n     * @param target\n     * @param coordinates\n     * @param pointerId\n     * @param buttonIndex\n     * @param pi\n     * @hidden\n     */\n    Checkbox.prototype._onPointerDown = function (target, coordinates, pointerId, buttonIndex, pi) {\n        if (!_super.prototype._onPointerDown.call(this, target, coordinates, pointerId, buttonIndex, pi)) {\n            return false;\n        }\n        if (!this.isReadOnly) {\n            this.isChecked = !this.isChecked;\n        }\n        return true;\n    };\n    /**\n     * Utility function to easily create a checkbox with a header\n     * @param title defines the label to use for the header\n     * @param onValueChanged defines the callback to call when value changes\n     * @returns a StackPanel containing the checkbox and a textBlock\n     */\n    Checkbox.AddCheckBoxWithHeader = function (title, onValueChanged) {\n        var panel = new StackPanel();\n        panel.isVertical = false;\n        panel.height = \"30px\";\n        var checkbox = new Checkbox();\n        checkbox.width = \"20px\";\n        checkbox.height = \"20px\";\n        checkbox.isChecked = true;\n        checkbox.color = \"green\";\n        checkbox.onIsCheckedChangedObservable.add(onValueChanged);\n        panel.addControl(checkbox);\n        var header = new TextBlock();\n        header.text = title;\n        header.width = \"180px\";\n        header.paddingLeft = \"5px\";\n        header.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        header.color = \"white\";\n        panel.addControl(header);\n        return panel;\n    };\n    __decorate([\n        serialize()\n    ], Checkbox.prototype, \"thickness\", null);\n    __decorate([\n        serialize()\n    ], Checkbox.prototype, \"checkSizeRatio\", null);\n    __decorate([\n        serialize()\n    ], Checkbox.prototype, \"background\", null);\n    __decorate([\n        serialize()\n    ], Checkbox.prototype, \"isChecked\", null);\n    return Checkbox;\n}(Control));\nexport { Checkbox };\nRegisterClass(\"BABYLON.GUI.Checkbox\", Checkbox);\n//# sourceMappingURL=checkbox.js.map","import { __decorate, __extends } from \"tslib\";\nimport { Observable } from \"@babylonjs/core/Misc/observable.js\";\nimport { ClipboardEventTypes } from \"@babylonjs/core/Events/clipboardEvents.js\";\nimport { PointerEventTypes } from \"@babylonjs/core/Events/pointerEvents.js\";\nimport { Control } from \"./control.js\";\nimport { ValueAndUnit } from \"../valueAndUnit.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { TextWrapper } from \"./textWrapper.js\";\nimport { serialize } from \"@babylonjs/core/Misc/decorators.js\";\n/**\n * Class used to create input text control\n */\nvar InputText = /** @class */ (function (_super) {\n    __extends(InputText, _super);\n    /**\n     * Creates a new InputText\n     * @param name defines the control name\n     * @param text defines the text of the control\n     */\n    function InputText(name, text) {\n        if (text === void 0) { text = \"\"; }\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        _this._placeholderText = \"\";\n        _this._background = \"#222222\";\n        _this._focusedBackground = \"#000000\";\n        _this._focusedColor = \"white\";\n        _this._placeholderColor = \"gray\";\n        _this._thickness = 1;\n        _this._margin = new ValueAndUnit(10, ValueAndUnit.UNITMODE_PIXEL);\n        _this._autoStretchWidth = true;\n        _this._maxWidth = new ValueAndUnit(1, ValueAndUnit.UNITMODE_PERCENTAGE, false);\n        _this._isFocused = false;\n        _this._blinkIsEven = false;\n        _this._cursorOffset = 0;\n        _this._deadKey = false;\n        _this._addKey = true;\n        _this._currentKey = \"\";\n        _this._isTextHighlightOn = false;\n        _this._textHighlightColor = \"#d5e0ff\";\n        _this._highligherOpacity = 0.4;\n        _this._highlightedText = \"\";\n        _this._startHighlightIndex = 0;\n        _this._endHighlightIndex = 0;\n        _this._cursorIndex = -1;\n        _this._onFocusSelectAll = false;\n        _this._isPointerDown = false;\n        /** Gets or sets a string representing the message displayed on mobile when the control gets the focus */\n        _this.promptMessage = \"Please enter text:\";\n        /** Force disable prompt on mobile device */\n        _this.disableMobilePrompt = false;\n        /** Observable raised when the text changes */\n        _this.onTextChangedObservable = new Observable();\n        /** Observable raised just before an entered character is to be added */\n        _this.onBeforeKeyAddObservable = new Observable();\n        /** Observable raised when the control gets the focus */\n        _this.onFocusObservable = new Observable();\n        /** Observable raised when the control loses the focus */\n        _this.onBlurObservable = new Observable();\n        /**Observable raised when the text is highlighted */\n        _this.onTextHighlightObservable = new Observable();\n        /**Observable raised when copy event is triggered */\n        _this.onTextCopyObservable = new Observable();\n        /** Observable raised when cut event is triggered */\n        _this.onTextCutObservable = new Observable();\n        /** Observable raised when paste event is triggered */\n        _this.onTextPasteObservable = new Observable();\n        /** Observable raised when a key event was processed */\n        _this.onKeyboardEventProcessedObservable = new Observable();\n        _this.text = text;\n        _this.isPointerBlocker = true;\n        return _this;\n    }\n    Object.defineProperty(InputText.prototype, \"maxWidth\", {\n        /** Gets or sets the maximum width allowed by the control */\n        get: function () {\n            return this._maxWidth.toString(this._host);\n        },\n        set: function (value) {\n            if (this._maxWidth.toString(this._host) === value) {\n                return;\n            }\n            if (this._maxWidth.fromString(value)) {\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InputText.prototype, \"maxWidthInPixels\", {\n        /** Gets the maximum width allowed by the control in pixels */\n        get: function () {\n            return this._maxWidth.getValueInPixel(this._host, this._cachedParentMeasure.width);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InputText.prototype, \"highligherOpacity\", {\n        /** Gets or sets the text highlighter transparency; default: 0.4 */\n        get: function () {\n            return this._highligherOpacity;\n        },\n        set: function (value) {\n            if (this._highligherOpacity === value) {\n                return;\n            }\n            this._highligherOpacity = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InputText.prototype, \"onFocusSelectAll\", {\n        /** Gets or sets a boolean indicating whether to select complete text by default on input focus */\n        get: function () {\n            return this._onFocusSelectAll;\n        },\n        set: function (value) {\n            if (this._onFocusSelectAll === value) {\n                return;\n            }\n            this._onFocusSelectAll = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InputText.prototype, \"textHighlightColor\", {\n        /** Gets or sets the text hightlight color */\n        get: function () {\n            return this._textHighlightColor;\n        },\n        set: function (value) {\n            if (this._textHighlightColor === value) {\n                return;\n            }\n            this._textHighlightColor = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InputText.prototype, \"margin\", {\n        /** Gets or sets control margin */\n        get: function () {\n            return this._margin.toString(this._host);\n        },\n        set: function (value) {\n            if (this._margin.toString(this._host) === value) {\n                return;\n            }\n            if (this._margin.fromString(value)) {\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InputText.prototype, \"marginInPixels\", {\n        /** Gets control margin in pixels */\n        get: function () {\n            return this._margin.getValueInPixel(this._host, this._cachedParentMeasure.width);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InputText.prototype, \"autoStretchWidth\", {\n        /** Gets or sets a boolean indicating if the control can auto stretch its width to adapt to the text */\n        get: function () {\n            return this._autoStretchWidth;\n        },\n        set: function (value) {\n            if (this._autoStretchWidth === value) {\n                return;\n            }\n            this._autoStretchWidth = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InputText.prototype, \"thickness\", {\n        /** Gets or sets border thickness */\n        get: function () {\n            return this._thickness;\n        },\n        set: function (value) {\n            if (this._thickness === value) {\n                return;\n            }\n            this._thickness = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InputText.prototype, \"focusedBackground\", {\n        /** Gets or sets the background color when focused */\n        get: function () {\n            return this._focusedBackground;\n        },\n        set: function (value) {\n            if (this._focusedBackground === value) {\n                return;\n            }\n            this._focusedBackground = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InputText.prototype, \"focusedColor\", {\n        /** Gets or sets the background color when focused */\n        get: function () {\n            return this._focusedColor;\n        },\n        set: function (value) {\n            if (this._focusedColor === value) {\n                return;\n            }\n            this._focusedColor = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InputText.prototype, \"background\", {\n        /** Gets or sets the background color */\n        get: function () {\n            return this._background;\n        },\n        set: function (value) {\n            if (this._background === value) {\n                return;\n            }\n            this._background = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InputText.prototype, \"placeholderColor\", {\n        /** Gets or sets the placeholder color */\n        get: function () {\n            return this._placeholderColor;\n        },\n        set: function (value) {\n            if (this._placeholderColor === value) {\n                return;\n            }\n            this._placeholderColor = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InputText.prototype, \"placeholderText\", {\n        /** Gets or sets the text displayed when the control is empty */\n        get: function () {\n            return this._placeholderText;\n        },\n        set: function (value) {\n            if (this._placeholderText === value) {\n                return;\n            }\n            this._placeholderText = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InputText.prototype, \"deadKey\", {\n        /** Gets or sets the dead key flag */\n        get: function () {\n            return this._deadKey;\n        },\n        set: function (flag) {\n            this._deadKey = flag;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InputText.prototype, \"highlightedText\", {\n        /** Gets or sets the highlight text */\n        get: function () {\n            return this._highlightedText;\n        },\n        set: function (text) {\n            if (this._highlightedText === text) {\n                return;\n            }\n            this._highlightedText = text;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InputText.prototype, \"addKey\", {\n        /** Gets or sets if the current key should be added */\n        get: function () {\n            return this._addKey;\n        },\n        set: function (flag) {\n            this._addKey = flag;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InputText.prototype, \"currentKey\", {\n        /** Gets or sets the value of the current key being entered */\n        get: function () {\n            return this._currentKey;\n        },\n        set: function (key) {\n            this._currentKey = key;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(InputText.prototype, \"text\", {\n        /** Gets or sets the text displayed in the control */\n        get: function () {\n            return this._textWrapper.text;\n        },\n        set: function (value) {\n            var valueAsString = value.toString(); // Forcing convertion\n            if (!this._textWrapper) {\n                this._textWrapper = new TextWrapper();\n            }\n            if (this._textWrapper.text === valueAsString) {\n                return;\n            }\n            this._textWrapper.text = valueAsString;\n            this._textHasChanged();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    InputText.prototype._textHasChanged = function () {\n        this._markAsDirty();\n        this.onTextChangedObservable.notifyObservers(this);\n    };\n    Object.defineProperty(InputText.prototype, \"width\", {\n        /** Gets or sets control width */\n        get: function () {\n            return this._width.toString(this._host);\n        },\n        set: function (value) {\n            if (this._width.toString(this._host) === value) {\n                return;\n            }\n            if (this._width.fromString(value)) {\n                this._markAsDirty();\n            }\n            this.autoStretchWidth = false;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /** @hidden */\n    InputText.prototype.onBlur = function () {\n        this._isFocused = false;\n        this._scrollLeft = null;\n        this._cursorOffset = 0;\n        clearTimeout(this._blinkTimeout);\n        this._markAsDirty();\n        this.onBlurObservable.notifyObservers(this);\n        this._host.unRegisterClipboardEvents();\n        if (this._onClipboardObserver) {\n            this._host.onClipboardObservable.remove(this._onClipboardObserver);\n        }\n        var scene = this._host.getScene();\n        if (this._onPointerDblTapObserver && scene) {\n            scene.onPointerObservable.remove(this._onPointerDblTapObserver);\n        }\n    };\n    /** @hidden */\n    InputText.prototype.onFocus = function () {\n        var _this = this;\n        if (!this._isEnabled) {\n            return;\n        }\n        this._scrollLeft = null;\n        this._isFocused = true;\n        this._blinkIsEven = false;\n        this._cursorOffset = 0;\n        this._markAsDirty();\n        this.onFocusObservable.notifyObservers(this);\n        if (this._focusedBy === \"touch\" && !this.disableMobilePrompt) {\n            var value = prompt(this.promptMessage);\n            if (value !== null) {\n                this.text = value;\n            }\n            this._host.focusedControl = null;\n            return;\n        }\n        this._host.registerClipboardEvents();\n        this._onClipboardObserver = this._host.onClipboardObservable.add(function (clipboardInfo) {\n            // process clipboard event, can be configured.\n            switch (clipboardInfo.type) {\n                case ClipboardEventTypes.COPY:\n                    _this._onCopyText(clipboardInfo.event);\n                    _this.onTextCopyObservable.notifyObservers(_this);\n                    break;\n                case ClipboardEventTypes.CUT:\n                    _this._onCutText(clipboardInfo.event);\n                    _this.onTextCutObservable.notifyObservers(_this);\n                    break;\n                case ClipboardEventTypes.PASTE:\n                    _this._onPasteText(clipboardInfo.event);\n                    _this.onTextPasteObservable.notifyObservers(_this);\n                    break;\n                default:\n                    return;\n            }\n        });\n        var scene = this._host.getScene();\n        if (scene) {\n            //register the pointer double tap event\n            this._onPointerDblTapObserver = scene.onPointerObservable.add(function (pointerInfo) {\n                if (!_this._isFocused) {\n                    return;\n                }\n                if (pointerInfo.type === PointerEventTypes.POINTERDOUBLETAP) {\n                    _this._processDblClick(pointerInfo);\n                }\n            });\n        }\n        if (this._onFocusSelectAll) {\n            this._selectAllText();\n        }\n    };\n    /**\n     * Function to focus an inputText programmatically\n     */\n    InputText.prototype.focus = function () {\n        this._host.moveFocusToControl(this);\n    };\n    /**\n     * Function to unfocus an inputText programmatically\n     */\n    InputText.prototype.blur = function () {\n        this._host.focusedControl = null;\n    };\n    InputText.prototype._getTypeName = function () {\n        return \"InputText\";\n    };\n    /**\n     * Function called to get the list of controls that should not steal the focus from this control\n     * @returns an array of controls\n     */\n    InputText.prototype.keepsFocusWith = function () {\n        if (!this._connectedVirtualKeyboard) {\n            return null;\n        }\n        return [this._connectedVirtualKeyboard];\n    };\n    /**\n     * @param keyCode\n     * @param key\n     * @param evt\n     * @hidden\n     */\n    InputText.prototype.processKey = function (keyCode, key, evt) {\n        if (this.isReadOnly) {\n            return;\n        }\n        //return if clipboard event keys (i.e -ctr/cmd + c,v,x)\n        if (evt && (evt.ctrlKey || evt.metaKey) && (keyCode === 67 || keyCode === 86 || keyCode === 88)) {\n            return;\n        }\n        //select all\n        if (evt && (evt.ctrlKey || evt.metaKey) && keyCode === 65) {\n            this._selectAllText();\n            evt.preventDefault();\n            return;\n        }\n        // Specific cases\n        switch (keyCode) {\n            case 32: //SPACE\n                key = \" \"; //ie11 key for space is \"Spacebar\"\n                break;\n            case 191: //SLASH\n                if (evt) {\n                    evt.preventDefault();\n                }\n                break;\n            case 8: // BACKSPACE\n                if (this._textWrapper.text && this._textWrapper.length > 0) {\n                    //delete the highlighted text\n                    if (this._isTextHighlightOn) {\n                        this._textWrapper.removePart(this._startHighlightIndex, this._endHighlightIndex);\n                        this._textHasChanged();\n                        this._isTextHighlightOn = false;\n                        this._cursorOffset = this._textWrapper.length - this._startHighlightIndex;\n                        this._blinkIsEven = false;\n                        if (evt) {\n                            evt.preventDefault();\n                        }\n                        return;\n                    }\n                    //delete single character\n                    if (this._cursorOffset === 0) {\n                        this.text = this._textWrapper.substr(0, this._textWrapper.length - 1);\n                    }\n                    else {\n                        var deletePosition = this._textWrapper.length - this._cursorOffset;\n                        if (deletePosition > 0) {\n                            this._textWrapper.removePart(deletePosition - 1, deletePosition);\n                            this._textHasChanged();\n                        }\n                    }\n                }\n                if (evt) {\n                    evt.preventDefault();\n                }\n                return;\n            case 46: // DELETE\n                if (this._isTextHighlightOn) {\n                    this._textWrapper.removePart(this._startHighlightIndex, this._endHighlightIndex);\n                    this._textHasChanged();\n                    this._isTextHighlightOn = false;\n                    this._cursorOffset = this._textWrapper.length - this._startHighlightIndex;\n                    if (evt) {\n                        evt.preventDefault();\n                    }\n                    return;\n                }\n                if (this._textWrapper.text && this._textWrapper.length > 0 && this._cursorOffset > 0) {\n                    var deletePosition = this._textWrapper.length - this._cursorOffset;\n                    this._textWrapper.removePart(deletePosition, deletePosition + 1);\n                    this._textHasChanged();\n                    this._cursorOffset--;\n                }\n                if (evt) {\n                    evt.preventDefault();\n                }\n                return;\n            case 13: // RETURN\n                this._host.focusedControl = null;\n                this._isTextHighlightOn = false;\n                return;\n            case 35: // END\n                this._cursorOffset = 0;\n                this._blinkIsEven = false;\n                this._isTextHighlightOn = false;\n                this._markAsDirty();\n                return;\n            case 36: // HOME\n                this._cursorOffset = this._textWrapper.length;\n                this._blinkIsEven = false;\n                this._isTextHighlightOn = false;\n                this._markAsDirty();\n                return;\n            case 37: // LEFT\n                this._cursorOffset++;\n                if (this._cursorOffset > this._textWrapper.length) {\n                    this._cursorOffset = this._textWrapper.length;\n                }\n                if (evt && evt.shiftKey) {\n                    // update the cursor\n                    this._blinkIsEven = false;\n                    // shift + ctrl/cmd + <-\n                    if (evt.ctrlKey || evt.metaKey) {\n                        if (!this._isTextHighlightOn) {\n                            if (this._textWrapper.length === this._cursorOffset) {\n                                return;\n                            }\n                            else {\n                                this._endHighlightIndex = this._textWrapper.length - this._cursorOffset + 1;\n                            }\n                        }\n                        this._startHighlightIndex = 0;\n                        this._cursorIndex = this._textWrapper.length - this._endHighlightIndex;\n                        this._cursorOffset = this._textWrapper.length;\n                        this._isTextHighlightOn = true;\n                        this._markAsDirty();\n                        return;\n                    }\n                    //store the starting point\n                    if (!this._isTextHighlightOn) {\n                        this._isTextHighlightOn = true;\n                        this._cursorIndex = this._cursorOffset >= this._textWrapper.length ? this._textWrapper.length : this._cursorOffset - 1;\n                    }\n                    //if text is already highlighted\n                    else if (this._cursorIndex === -1) {\n                        this._cursorIndex = this._textWrapper.length - this._endHighlightIndex;\n                        this._cursorOffset = this._startHighlightIndex === 0 ? this._textWrapper.length : this._textWrapper.length - this._startHighlightIndex + 1;\n                    }\n                    //set the highlight indexes\n                    if (this._cursorIndex < this._cursorOffset) {\n                        this._endHighlightIndex = this._textWrapper.length - this._cursorIndex;\n                        this._startHighlightIndex = this._textWrapper.length - this._cursorOffset;\n                    }\n                    else if (this._cursorIndex > this._cursorOffset) {\n                        this._endHighlightIndex = this._textWrapper.length - this._cursorOffset;\n                        this._startHighlightIndex = this._textWrapper.length - this._cursorIndex;\n                    }\n                    else {\n                        this._isTextHighlightOn = false;\n                    }\n                    this._markAsDirty();\n                    return;\n                }\n                if (this._isTextHighlightOn) {\n                    this._cursorOffset = this._textWrapper.length - this._startHighlightIndex;\n                    this._isTextHighlightOn = false;\n                }\n                if (evt && (evt.ctrlKey || evt.metaKey)) {\n                    this._cursorOffset = this._textWrapper.length;\n                    evt.preventDefault();\n                }\n                this._blinkIsEven = false;\n                this._isTextHighlightOn = false;\n                this._cursorIndex = -1;\n                this._markAsDirty();\n                return;\n            case 39: // RIGHT\n                this._cursorOffset--;\n                if (this._cursorOffset < 0) {\n                    this._cursorOffset = 0;\n                }\n                if (evt && evt.shiftKey) {\n                    //update the cursor\n                    this._blinkIsEven = false;\n                    //shift + ctrl/cmd + ->\n                    if (evt.ctrlKey || evt.metaKey) {\n                        if (!this._isTextHighlightOn) {\n                            if (this._cursorOffset === 0) {\n                                return;\n                            }\n                            else {\n                                this._startHighlightIndex = this._textWrapper.length - this._cursorOffset - 1;\n                            }\n                        }\n                        this._endHighlightIndex = this._textWrapper.length;\n                        this._isTextHighlightOn = true;\n                        this._cursorIndex = this._textWrapper.length - this._startHighlightIndex;\n                        this._cursorOffset = 0;\n                        this._markAsDirty();\n                        return;\n                    }\n                    if (!this._isTextHighlightOn) {\n                        this._isTextHighlightOn = true;\n                        this._cursorIndex = this._cursorOffset <= 0 ? 0 : this._cursorOffset + 1;\n                    }\n                    //if text is already highlighted\n                    else if (this._cursorIndex === -1) {\n                        this._cursorIndex = this._textWrapper.length - this._startHighlightIndex;\n                        this._cursorOffset = this._textWrapper.length === this._endHighlightIndex ? 0 : this._textWrapper.length - this._endHighlightIndex - 1;\n                    }\n                    //set the highlight indexes\n                    if (this._cursorIndex < this._cursorOffset) {\n                        this._endHighlightIndex = this._textWrapper.length - this._cursorIndex;\n                        this._startHighlightIndex = this._textWrapper.length - this._cursorOffset;\n                    }\n                    else if (this._cursorIndex > this._cursorOffset) {\n                        this._endHighlightIndex = this._textWrapper.length - this._cursorOffset;\n                        this._startHighlightIndex = this._textWrapper.length - this._cursorIndex;\n                    }\n                    else {\n                        this._isTextHighlightOn = false;\n                    }\n                    this._markAsDirty();\n                    return;\n                }\n                if (this._isTextHighlightOn) {\n                    this._cursorOffset = this._textWrapper.length - this._endHighlightIndex;\n                    this._isTextHighlightOn = false;\n                }\n                //ctr + ->\n                if (evt && (evt.ctrlKey || evt.metaKey)) {\n                    this._cursorOffset = 0;\n                    evt.preventDefault();\n                }\n                this._blinkIsEven = false;\n                this._isTextHighlightOn = false;\n                this._cursorIndex = -1;\n                this._markAsDirty();\n                return;\n            case 222: // Dead\n                if (evt) {\n                    //add support for single and double quotes\n                    if (evt.code == \"Quote\") {\n                        if (evt.shiftKey) {\n                            keyCode = 34;\n                            key = '\"';\n                        }\n                        else {\n                            keyCode = 39;\n                            key = \"'\";\n                        }\n                    }\n                    else {\n                        evt.preventDefault();\n                        this._cursorIndex = -1;\n                        this.deadKey = true;\n                    }\n                }\n                else {\n                    this._cursorIndex = -1;\n                    this.deadKey = true;\n                }\n                break;\n        }\n        // Printable characters\n        if (key &&\n            (keyCode === -1 || // Direct access\n                keyCode === 32 || // Space\n                keyCode === 34 || // \"    add support for single and double quotes\n                keyCode === 39 || // '\n                (keyCode > 47 && keyCode < 64) || // Numbers\n                (keyCode > 64 && keyCode < 91) || // Letters\n                (keyCode > 159 && keyCode < 193) || // Special characters\n                (keyCode > 218 && keyCode < 223) || // Special characters\n                (keyCode > 95 && keyCode < 112))) {\n            // Numpad\n            this._currentKey = key;\n            this.onBeforeKeyAddObservable.notifyObservers(this);\n            key = this._currentKey;\n            if (this._addKey) {\n                if (this._isTextHighlightOn) {\n                    this._textWrapper.removePart(this._startHighlightIndex, this._endHighlightIndex, key);\n                    this._textHasChanged();\n                    this._cursorOffset = this._textWrapper.length - (this._startHighlightIndex + 1);\n                    this._isTextHighlightOn = false;\n                    this._blinkIsEven = false;\n                    this._markAsDirty();\n                }\n                else if (this._cursorOffset === 0) {\n                    this.text += key;\n                }\n                else {\n                    var insertPosition = this._textWrapper.length - this._cursorOffset;\n                    this._textWrapper.removePart(insertPosition, insertPosition, key);\n                    this._textHasChanged();\n                }\n            }\n        }\n    };\n    /**\n     * @param offset\n     * @hidden\n     */\n    InputText.prototype._updateValueFromCursorIndex = function (offset) {\n        //update the cursor\n        this._blinkIsEven = false;\n        if (this._cursorIndex === -1) {\n            this._cursorIndex = offset;\n        }\n        else {\n            if (this._cursorIndex < this._cursorOffset) {\n                this._endHighlightIndex = this._textWrapper.length - this._cursorIndex;\n                this._startHighlightIndex = this._textWrapper.length - this._cursorOffset;\n            }\n            else if (this._cursorIndex > this._cursorOffset) {\n                this._endHighlightIndex = this._textWrapper.length - this._cursorOffset;\n                this._startHighlightIndex = this._textWrapper.length - this._cursorIndex;\n            }\n            else {\n                this._isTextHighlightOn = false;\n                this._markAsDirty();\n                return;\n            }\n        }\n        this._isTextHighlightOn = true;\n        this._markAsDirty();\n    };\n    /**\n     * @param evt\n     * @hidden\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    InputText.prototype._processDblClick = function (evt) {\n        //pre-find the start and end index of the word under cursor, speeds up the rendering\n        this._startHighlightIndex = this._textWrapper.length - this._cursorOffset;\n        this._endHighlightIndex = this._startHighlightIndex;\n        var moveLeft, moveRight;\n        do {\n            moveRight = this._endHighlightIndex < this._textWrapper.length && this._textWrapper.isWord(this._endHighlightIndex) ? ++this._endHighlightIndex : 0;\n            moveLeft = this._startHighlightIndex > 0 && this._textWrapper.isWord(this._startHighlightIndex - 1) ? --this._startHighlightIndex : 0;\n        } while (moveLeft || moveRight);\n        this._cursorOffset = this._textWrapper.length - this._startHighlightIndex;\n        this.onTextHighlightObservable.notifyObservers(this);\n        this._isTextHighlightOn = true;\n        this._clickedCoordinate = null;\n        this._blinkIsEven = true;\n        this._cursorIndex = -1;\n        this._markAsDirty();\n    };\n    /** @hidden */\n    InputText.prototype._selectAllText = function () {\n        this._blinkIsEven = true;\n        this._isTextHighlightOn = true;\n        this._startHighlightIndex = 0;\n        this._endHighlightIndex = this._textWrapper.length;\n        this._cursorOffset = this._textWrapper.length;\n        this._cursorIndex = -1;\n        this._markAsDirty();\n    };\n    /**\n     * Handles the keyboard event\n     * @param evt Defines the KeyboardEvent\n     */\n    InputText.prototype.processKeyboard = function (evt) {\n        // process pressed key\n        this.processKey(evt.keyCode, evt.key, evt);\n        this.onKeyboardEventProcessedObservable.notifyObservers(evt);\n    };\n    /**\n     * @param ev\n     * @hidden\n     */\n    InputText.prototype._onCopyText = function (ev) {\n        this._isTextHighlightOn = false;\n        //when write permission to clipbaord data is denied\n        try {\n            ev.clipboardData && ev.clipboardData.setData(\"text/plain\", this._highlightedText);\n        }\n        catch (_a) { } //pass\n        this._host.clipboardData = this._highlightedText;\n    };\n    /**\n     * @param ev\n     * @hidden\n     */\n    InputText.prototype._onCutText = function (ev) {\n        if (!this._highlightedText) {\n            return;\n        }\n        this._textWrapper.removePart(this._startHighlightIndex, this._endHighlightIndex);\n        this._textHasChanged();\n        this._isTextHighlightOn = false;\n        this._cursorOffset = this._textWrapper.length - this._startHighlightIndex;\n        //when write permission to clipbaord data is denied\n        try {\n            ev.clipboardData && ev.clipboardData.setData(\"text/plain\", this._highlightedText);\n        }\n        catch (_a) { } //pass\n        this._host.clipboardData = this._highlightedText;\n        this._highlightedText = \"\";\n    };\n    /**\n     * @param ev\n     * @hidden\n     */\n    InputText.prototype._onPasteText = function (ev) {\n        var data = \"\";\n        if (ev.clipboardData && ev.clipboardData.types.indexOf(\"text/plain\") !== -1) {\n            data = ev.clipboardData.getData(\"text/plain\");\n        }\n        else {\n            //get the cached data; returns blank string by default\n            data = this._host.clipboardData;\n        }\n        var insertPosition = this._textWrapper.length - this._cursorOffset;\n        this._textWrapper.removePart(insertPosition, insertPosition, data);\n        this._textHasChanged();\n    };\n    InputText.prototype._draw = function (context) {\n        var _this = this;\n        context.save();\n        this._applyStates(context);\n        if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n            context.shadowColor = this.shadowColor;\n            context.shadowBlur = this.shadowBlur;\n            context.shadowOffsetX = this.shadowOffsetX;\n            context.shadowOffsetY = this.shadowOffsetY;\n        }\n        // Background\n        if (this._isFocused) {\n            if (this._focusedBackground) {\n                context.fillStyle = this._isEnabled ? this._focusedBackground : this._disabledColor;\n                context.fillRect(this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height);\n            }\n        }\n        else if (this._background) {\n            context.fillStyle = this._isEnabled ? this._background : this._disabledColor;\n            context.fillRect(this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height);\n        }\n        if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n            context.shadowBlur = 0;\n            context.shadowOffsetX = 0;\n            context.shadowOffsetY = 0;\n        }\n        if (!this._fontOffset || this._wasDirty) {\n            this._fontOffset = Control._GetFontOffset(context.font);\n        }\n        // Text\n        var clipTextLeft = this._currentMeasure.left + this._margin.getValueInPixel(this._host, this._tempParentMeasure.width);\n        if (this.color) {\n            context.fillStyle = this.color;\n        }\n        var text = this._beforeRenderText(this._textWrapper);\n        if (!this._isFocused && !this._textWrapper.text && this._placeholderText) {\n            text = new TextWrapper();\n            text.text = this._placeholderText;\n            if (this._placeholderColor) {\n                context.fillStyle = this._placeholderColor;\n            }\n        }\n        this._textWidth = context.measureText(text.text).width;\n        var marginWidth = this._margin.getValueInPixel(this._host, this._tempParentMeasure.width) * 2;\n        if (this._autoStretchWidth) {\n            this.width = Math.min(this._maxWidth.getValueInPixel(this._host, this._tempParentMeasure.width), this._textWidth + marginWidth) + \"px\";\n            this._autoStretchWidth = true; // setting the width will have reset _autoStretchWidth to false!\n        }\n        var rootY = this._fontOffset.ascent + (this._currentMeasure.height - this._fontOffset.height) / 2;\n        var availableWidth = this._width.getValueInPixel(this._host, this._tempParentMeasure.width) - marginWidth;\n        context.save();\n        context.beginPath();\n        context.rect(clipTextLeft, this._currentMeasure.top + (this._currentMeasure.height - this._fontOffset.height) / 2, availableWidth + 2, this._currentMeasure.height);\n        context.clip();\n        if (this._isFocused && this._textWidth > availableWidth) {\n            var textLeft = clipTextLeft - this._textWidth + availableWidth;\n            if (!this._scrollLeft) {\n                this._scrollLeft = textLeft;\n            }\n        }\n        else {\n            this._scrollLeft = clipTextLeft;\n        }\n        context.fillText(text.text, this._scrollLeft, this._currentMeasure.top + rootY);\n        // Cursor\n        if (this._isFocused) {\n            // Need to move cursor\n            if (this._clickedCoordinate) {\n                var rightPosition = this._scrollLeft + this._textWidth;\n                var absoluteCursorPosition = rightPosition - this._clickedCoordinate;\n                var currentSize = 0;\n                this._cursorOffset = 0;\n                var previousDist = 0;\n                do {\n                    if (this._cursorOffset) {\n                        previousDist = Math.abs(absoluteCursorPosition - currentSize);\n                    }\n                    this._cursorOffset++;\n                    currentSize = context.measureText(text.substr(text.length - this._cursorOffset, this._cursorOffset)).width;\n                } while (currentSize < absoluteCursorPosition && text.length >= this._cursorOffset);\n                // Find closest move\n                if (Math.abs(absoluteCursorPosition - currentSize) > previousDist) {\n                    this._cursorOffset--;\n                }\n                this._blinkIsEven = false;\n                this._clickedCoordinate = null;\n            }\n            // Render cursor\n            if (!this._blinkIsEven) {\n                var cursorOffsetText = text.substr(text.length - this._cursorOffset);\n                var cursorOffsetWidth = context.measureText(cursorOffsetText).width;\n                var cursorLeft = this._scrollLeft + this._textWidth - cursorOffsetWidth;\n                if (cursorLeft < clipTextLeft) {\n                    this._scrollLeft += clipTextLeft - cursorLeft;\n                    cursorLeft = clipTextLeft;\n                    this._markAsDirty();\n                }\n                else if (cursorLeft > clipTextLeft + availableWidth) {\n                    this._scrollLeft += clipTextLeft + availableWidth - cursorLeft;\n                    cursorLeft = clipTextLeft + availableWidth;\n                    this._markAsDirty();\n                }\n                if (!this._isTextHighlightOn) {\n                    context.fillRect(cursorLeft, this._currentMeasure.top + (this._currentMeasure.height - this._fontOffset.height) / 2, 2, this._fontOffset.height);\n                }\n            }\n            clearTimeout(this._blinkTimeout);\n            this._blinkTimeout = setTimeout(function () {\n                _this._blinkIsEven = !_this._blinkIsEven;\n                _this._markAsDirty();\n            }, 500);\n            //show the highlighted text\n            if (this._isTextHighlightOn) {\n                clearTimeout(this._blinkTimeout);\n                var highlightCursorOffsetWidth = context.measureText(text.substring(this._startHighlightIndex)).width;\n                var highlightCursorLeft = this._scrollLeft + this._textWidth - highlightCursorOffsetWidth;\n                this._highlightedText = text.substring(this._startHighlightIndex, this._endHighlightIndex);\n                var width = context.measureText(text.substring(this._startHighlightIndex, this._endHighlightIndex)).width;\n                if (highlightCursorLeft < clipTextLeft) {\n                    width = width - (clipTextLeft - highlightCursorLeft);\n                    if (!width) {\n                        // when using left arrow on text.length > availableWidth;\n                        // assigns the width of the first letter after clipTextLeft\n                        width = context.measureText(text.charAt(text.length - this._cursorOffset)).width;\n                    }\n                    highlightCursorLeft = clipTextLeft;\n                }\n                //for transparancy\n                context.globalAlpha = this._highligherOpacity;\n                context.fillStyle = this._textHighlightColor;\n                context.fillRect(highlightCursorLeft, this._currentMeasure.top + (this._currentMeasure.height - this._fontOffset.height) / 2, width, this._fontOffset.height);\n                context.globalAlpha = 1.0;\n            }\n        }\n        context.restore();\n        // Border\n        if (this._thickness) {\n            if (this._isFocused) {\n                if (this.focusedColor) {\n                    context.strokeStyle = this.focusedColor;\n                }\n            }\n            else {\n                if (this.color) {\n                    context.strokeStyle = this.color;\n                }\n            }\n            context.lineWidth = this._thickness;\n            context.strokeRect(this._currentMeasure.left + this._thickness / 2, this._currentMeasure.top + this._thickness / 2, this._currentMeasure.width - this._thickness, this._currentMeasure.height - this._thickness);\n        }\n        context.restore();\n    };\n    InputText.prototype._onPointerDown = function (target, coordinates, pointerId, buttonIndex, pi) {\n        if (!_super.prototype._onPointerDown.call(this, target, coordinates, pointerId, buttonIndex, pi)) {\n            return false;\n        }\n        if (this.isReadOnly) {\n            return true;\n        }\n        this._clickedCoordinate = coordinates.x;\n        this._isTextHighlightOn = false;\n        this._highlightedText = \"\";\n        this._cursorIndex = -1;\n        this._isPointerDown = true;\n        this._host._capturingControl[pointerId] = this;\n        this._focusedBy = pi.event.pointerType;\n        if (this._host.focusedControl === this) {\n            // Move cursor\n            clearTimeout(this._blinkTimeout);\n            this._markAsDirty();\n            return true;\n        }\n        if (!this._isEnabled) {\n            return false;\n        }\n        this._host.focusedControl = this;\n        return true;\n    };\n    InputText.prototype._onPointerMove = function (target, coordinates, pointerId, pi) {\n        if (this._host.focusedControl === this && this._isPointerDown && !this.isReadOnly) {\n            this._clickedCoordinate = coordinates.x;\n            this._markAsDirty();\n            this._updateValueFromCursorIndex(this._cursorOffset);\n        }\n        _super.prototype._onPointerMove.call(this, target, coordinates, pointerId, pi);\n    };\n    InputText.prototype._onPointerUp = function (target, coordinates, pointerId, buttonIndex, notifyClick) {\n        this._isPointerDown = false;\n        delete this._host._capturingControl[pointerId];\n        _super.prototype._onPointerUp.call(this, target, coordinates, pointerId, buttonIndex, notifyClick);\n    };\n    InputText.prototype._beforeRenderText = function (textWrapper) {\n        return textWrapper;\n    };\n    InputText.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        this.onBlurObservable.clear();\n        this.onFocusObservable.clear();\n        this.onTextChangedObservable.clear();\n        this.onTextCopyObservable.clear();\n        this.onTextCutObservable.clear();\n        this.onTextPasteObservable.clear();\n        this.onTextHighlightObservable.clear();\n        this.onKeyboardEventProcessedObservable.clear();\n    };\n    __decorate([\n        serialize()\n    ], InputText.prototype, \"promptMessage\", void 0);\n    __decorate([\n        serialize()\n    ], InputText.prototype, \"disableMobilePrompt\", void 0);\n    __decorate([\n        serialize()\n    ], InputText.prototype, \"maxWidth\", null);\n    __decorate([\n        serialize()\n    ], InputText.prototype, \"highligherOpacity\", null);\n    __decorate([\n        serialize()\n    ], InputText.prototype, \"onFocusSelectAll\", null);\n    __decorate([\n        serialize()\n    ], InputText.prototype, \"textHighlightColor\", null);\n    __decorate([\n        serialize()\n    ], InputText.prototype, \"margin\", null);\n    __decorate([\n        serialize()\n    ], InputText.prototype, \"autoStretchWidth\", null);\n    __decorate([\n        serialize()\n    ], InputText.prototype, \"thickness\", null);\n    __decorate([\n        serialize()\n    ], InputText.prototype, \"focusedBackground\", null);\n    __decorate([\n        serialize()\n    ], InputText.prototype, \"focusedColor\", null);\n    __decorate([\n        serialize()\n    ], InputText.prototype, \"background\", null);\n    __decorate([\n        serialize()\n    ], InputText.prototype, \"placeholderColor\", null);\n    __decorate([\n        serialize()\n    ], InputText.prototype, \"placeholderText\", null);\n    __decorate([\n        serialize()\n    ], InputText.prototype, \"deadKey\", null);\n    __decorate([\n        serialize()\n    ], InputText.prototype, \"text\", null);\n    __decorate([\n        serialize()\n    ], InputText.prototype, \"width\", null);\n    return InputText;\n}(Control));\nexport { InputText };\nRegisterClass(\"BABYLON.GUI.InputText\", InputText);\n//# sourceMappingURL=inputText.js.map","import { __extends } from \"tslib\";\nimport { Container } from \"./container.js\";\nimport { ValueAndUnit } from \"../valueAndUnit.js\";\nimport { Control } from \"./control.js\";\nimport { Tools } from \"@babylonjs/core/Misc/tools.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\n/**\n * Class used to create a 2D grid container\n */\nvar Grid = /** @class */ (function (_super) {\n    __extends(Grid, _super);\n    /**\n     * Creates a new Grid\n     * @param name defines control name\n     */\n    function Grid(name) {\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        _this._rowDefinitions = new Array();\n        _this._rowDefinitionObservers = [];\n        _this._columnDefinitions = new Array();\n        _this._columnDefinitionObservers = [];\n        _this._cells = {};\n        _this._childControls = new Array();\n        return _this;\n    }\n    Object.defineProperty(Grid.prototype, \"columnCount\", {\n        /**\n         * Gets the number of columns\n         */\n        get: function () {\n            return this._columnDefinitions.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Grid.prototype, \"rowCount\", {\n        /**\n         * Gets the number of rows\n         */\n        get: function () {\n            return this._rowDefinitions.length;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Grid.prototype, \"children\", {\n        /** Gets the list of children */\n        get: function () {\n            return this._childControls;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Grid.prototype, \"cells\", {\n        /** Gets the list of cells (e.g. the containers) */\n        get: function () {\n            return this._cells;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Gets the definition of a specific row\n     * @param index defines the index of the row\n     * @returns the row definition\n     */\n    Grid.prototype.getRowDefinition = function (index) {\n        if (index < 0 || index >= this._rowDefinitions.length) {\n            return null;\n        }\n        return this._rowDefinitions[index];\n    };\n    /**\n     * Gets the definition of a specific column\n     * @param index defines the index of the column\n     * @returns the column definition\n     */\n    Grid.prototype.getColumnDefinition = function (index) {\n        if (index < 0 || index >= this._columnDefinitions.length) {\n            return null;\n        }\n        return this._columnDefinitions[index];\n    };\n    /**\n     * Adds a new row to the grid\n     * @param height defines the height of the row (either in pixel or a value between 0 and 1)\n     * @param isPixel defines if the height is expressed in pixel (or in percentage)\n     * @returns the current grid\n     */\n    Grid.prototype.addRowDefinition = function (height, isPixel) {\n        var _this = this;\n        if (isPixel === void 0) { isPixel = false; }\n        this._rowDefinitions.push(new ValueAndUnit(height, isPixel ? ValueAndUnit.UNITMODE_PIXEL : ValueAndUnit.UNITMODE_PERCENTAGE));\n        this._rowDefinitionObservers.push(this._rowDefinitions[this.rowCount - 1].onChangedObservable.add(function () { return _this._markAsDirty(); }));\n        this._markAsDirty();\n        return this;\n    };\n    /**\n     * Adds a new column to the grid\n     * @param width defines the width of the column (either in pixel or a value between 0 and 1)\n     * @param isPixel defines if the width is expressed in pixel (or in percentage)\n     * @returns the current grid\n     */\n    Grid.prototype.addColumnDefinition = function (width, isPixel) {\n        var _this = this;\n        if (isPixel === void 0) { isPixel = false; }\n        this._columnDefinitions.push(new ValueAndUnit(width, isPixel ? ValueAndUnit.UNITMODE_PIXEL : ValueAndUnit.UNITMODE_PERCENTAGE));\n        this._columnDefinitionObservers.push(this._columnDefinitions[this.columnCount - 1].onChangedObservable.add(function () { return _this._markAsDirty(); }));\n        this._markAsDirty();\n        return this;\n    };\n    /**\n     * Update a row definition\n     * @param index defines the index of the row to update\n     * @param height defines the height of the row (either in pixel or a value between 0 and 1)\n     * @param isPixel defines if the weight is expressed in pixel (or in percentage)\n     * @returns the current grid\n     */\n    Grid.prototype.setRowDefinition = function (index, height, isPixel) {\n        var _this = this;\n        if (isPixel === void 0) { isPixel = false; }\n        if (index < 0 || index >= this._rowDefinitions.length) {\n            return this;\n        }\n        var current = this._rowDefinitions[index];\n        if (current && current.isPixel === isPixel && current.value === height) {\n            return this;\n        }\n        this._rowDefinitions[index].onChangedObservable.remove(this._rowDefinitionObservers[index]);\n        this._rowDefinitions[index] = new ValueAndUnit(height, isPixel ? ValueAndUnit.UNITMODE_PIXEL : ValueAndUnit.UNITMODE_PERCENTAGE);\n        this._rowDefinitionObservers[index] = this._rowDefinitions[index].onChangedObservable.add(function () { return _this._markAsDirty(); });\n        this._markAsDirty();\n        return this;\n    };\n    /**\n     * Update a column definition\n     * @param index defines the index of the column to update\n     * @param width defines the width of the column (either in pixel or a value between 0 and 1)\n     * @param isPixel defines if the width is expressed in pixel (or in percentage)\n     * @returns the current grid\n     */\n    Grid.prototype.setColumnDefinition = function (index, width, isPixel) {\n        var _this = this;\n        if (isPixel === void 0) { isPixel = false; }\n        if (index < 0 || index >= this._columnDefinitions.length) {\n            return this;\n        }\n        var current = this._columnDefinitions[index];\n        if (current && current.isPixel === isPixel && current.value === width) {\n            return this;\n        }\n        this._columnDefinitions[index].onChangedObservable.remove(this._columnDefinitionObservers[index]);\n        this._columnDefinitions[index] = new ValueAndUnit(width, isPixel ? ValueAndUnit.UNITMODE_PIXEL : ValueAndUnit.UNITMODE_PERCENTAGE);\n        this._columnDefinitionObservers[index] = this._columnDefinitions[index].onChangedObservable.add(function () { return _this._markAsDirty(); });\n        this._markAsDirty();\n        return this;\n    };\n    /**\n     * Gets the list of children stored in a specific cell\n     * @param row defines the row to check\n     * @param column defines the column to check\n     * @returns the list of controls\n     */\n    Grid.prototype.getChildrenAt = function (row, column) {\n        var cell = this._cells[\"\".concat(row, \":\").concat(column)];\n        if (!cell) {\n            return null;\n        }\n        return cell.children;\n    };\n    /**\n     * Gets a string representing the child cell info (row x column)\n     * @param child defines the control to get info from\n     * @returns a string containing the child cell info (row x column)\n     */\n    Grid.prototype.getChildCellInfo = function (child) {\n        return child._tag;\n    };\n    Grid.prototype._removeCell = function (cell, key) {\n        if (!cell) {\n            return;\n        }\n        _super.prototype.removeControl.call(this, cell);\n        for (var _i = 0, _a = cell.children; _i < _a.length; _i++) {\n            var control = _a[_i];\n            var childIndex = this._childControls.indexOf(control);\n            if (childIndex !== -1) {\n                this._childControls.splice(childIndex, 1);\n            }\n        }\n        delete this._cells[key];\n    };\n    Grid.prototype._offsetCell = function (previousKey, key) {\n        if (!this._cells[key]) {\n            return;\n        }\n        this._cells[previousKey] = this._cells[key];\n        for (var _i = 0, _a = this._cells[previousKey].children; _i < _a.length; _i++) {\n            var control = _a[_i];\n            control._tag = previousKey;\n        }\n        delete this._cells[key];\n    };\n    /**\n     * Remove a column definition at specified index\n     * @param index defines the index of the column to remove\n     * @returns the current grid\n     */\n    Grid.prototype.removeColumnDefinition = function (index) {\n        if (index < 0 || index >= this._columnDefinitions.length) {\n            return this;\n        }\n        for (var x = 0; x < this._rowDefinitions.length; x++) {\n            var key = \"\".concat(x, \":\").concat(index);\n            var cell = this._cells[key];\n            this._removeCell(cell, key);\n        }\n        for (var x = 0; x < this._rowDefinitions.length; x++) {\n            for (var y = index + 1; y < this._columnDefinitions.length; y++) {\n                var previousKey = \"\".concat(x, \":\").concat(y - 1);\n                var key = \"\".concat(x, \":\").concat(y);\n                this._offsetCell(previousKey, key);\n            }\n        }\n        this._columnDefinitions[index].onChangedObservable.remove(this._columnDefinitionObservers[index]);\n        this._columnDefinitions.splice(index, 1);\n        this._columnDefinitionObservers.splice(index, 1);\n        this._markAsDirty();\n        return this;\n    };\n    /**\n     * Remove a row definition at specified index\n     * @param index defines the index of the row to remove\n     * @returns the current grid\n     */\n    Grid.prototype.removeRowDefinition = function (index) {\n        if (index < 0 || index >= this._rowDefinitions.length) {\n            return this;\n        }\n        for (var y = 0; y < this._columnDefinitions.length; y++) {\n            var key = \"\".concat(index, \":\").concat(y);\n            var cell = this._cells[key];\n            this._removeCell(cell, key);\n        }\n        for (var y = 0; y < this._columnDefinitions.length; y++) {\n            for (var x = index + 1; x < this._rowDefinitions.length; x++) {\n                var previousKey = \"\".concat(x - 1, \":\").concat(y);\n                var key = \"\".concat(x, \":\").concat(y);\n                this._offsetCell(previousKey, key);\n            }\n        }\n        this._rowDefinitions[index].onChangedObservable.remove(this._rowDefinitionObservers[index]);\n        this._rowDefinitions.splice(index, 1);\n        this._rowDefinitionObservers.splice(index, 1);\n        this._markAsDirty();\n        return this;\n    };\n    /**\n     * Adds a new control to the current grid\n     * @param control defines the control to add\n     * @param row defines the row where to add the control (0 by default)\n     * @param column defines the column where to add the control (0 by default)\n     * @returns the current grid\n     */\n    Grid.prototype.addControl = function (control, row, column) {\n        if (row === void 0) { row = 0; }\n        if (column === void 0) { column = 0; }\n        if (this._rowDefinitions.length === 0) {\n            // Add default row definition\n            this.addRowDefinition(1, false);\n        }\n        if (this._columnDefinitions.length === 0) {\n            // Add default column definition\n            this.addColumnDefinition(1, false);\n        }\n        if (this._childControls.indexOf(control) !== -1) {\n            Tools.Warn(\"Control (Name:\".concat(control.name, \", UniqueId:\").concat(control.uniqueId, \") is already associated with this grid. You must remove it before reattaching it\"));\n            return this;\n        }\n        var x = Math.min(row, this._rowDefinitions.length - 1);\n        var y = Math.min(column, this._columnDefinitions.length - 1);\n        var key = \"\".concat(x, \":\").concat(y);\n        var goodContainer = this._cells[key];\n        if (!goodContainer) {\n            goodContainer = new Container(key);\n            this._cells[key] = goodContainer;\n            goodContainer.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n            goodContainer.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n            _super.prototype.addControl.call(this, goodContainer);\n        }\n        goodContainer.addControl(control);\n        this._childControls.push(control);\n        control._tag = key;\n        control.parent = this;\n        this._markAsDirty();\n        return this;\n    };\n    /**\n     * Removes a control from the current container\n     * @param control defines the control to remove\n     * @returns the current container\n     */\n    Grid.prototype.removeControl = function (control) {\n        var index = this._childControls.indexOf(control);\n        if (index !== -1) {\n            this._childControls.splice(index, 1);\n        }\n        var cell = this._cells[control._tag];\n        if (cell) {\n            cell.removeControl(control);\n            control._tag = null;\n        }\n        this._markAsDirty();\n        return this;\n    };\n    Grid.prototype._getTypeName = function () {\n        return \"Grid\";\n    };\n    Grid.prototype._getGridDefinitions = function (definitionCallback) {\n        var widths = [];\n        var heights = [];\n        var lefts = [];\n        var tops = [];\n        var availableWidth = this._currentMeasure.width;\n        var globalWidthPercentage = 0;\n        var availableHeight = this._currentMeasure.height;\n        var globalHeightPercentage = 0;\n        // Heights\n        var index = 0;\n        for (var _i = 0, _a = this._rowDefinitions; _i < _a.length; _i++) {\n            var rowDefinition = _a[_i];\n            if (rowDefinition.isPixel) {\n                var height = rowDefinition.getValue(this._host);\n                availableHeight -= height;\n                heights[index] = height;\n            }\n            else {\n                globalHeightPercentage += rowDefinition.value;\n            }\n            index++;\n        }\n        var top = 0;\n        index = 0;\n        for (var _b = 0, _c = this._rowDefinitions; _b < _c.length; _b++) {\n            var rowDefinition = _c[_b];\n            tops.push(top);\n            if (!rowDefinition.isPixel) {\n                var height = (rowDefinition.value / globalHeightPercentage) * availableHeight;\n                top += height;\n                heights[index] = height;\n            }\n            else {\n                top += rowDefinition.getValue(this._host);\n            }\n            index++;\n        }\n        // Widths\n        index = 0;\n        for (var _d = 0, _e = this._columnDefinitions; _d < _e.length; _d++) {\n            var columnDefinition = _e[_d];\n            if (columnDefinition.isPixel) {\n                var width = columnDefinition.getValue(this._host);\n                availableWidth -= width;\n                widths[index] = width;\n            }\n            else {\n                globalWidthPercentage += columnDefinition.value;\n            }\n            index++;\n        }\n        var left = 0;\n        index = 0;\n        for (var _f = 0, _g = this._columnDefinitions; _f < _g.length; _f++) {\n            var columnDefinition = _g[_f];\n            lefts.push(left);\n            if (!columnDefinition.isPixel) {\n                var width = (columnDefinition.value / globalWidthPercentage) * availableWidth;\n                left += width;\n                widths[index] = width;\n            }\n            else {\n                left += columnDefinition.getValue(this._host);\n            }\n            index++;\n        }\n        definitionCallback(lefts, tops, widths, heights);\n    };\n    Grid.prototype._additionalProcessing = function (parentMeasure, context) {\n        var _this = this;\n        this._getGridDefinitions(function (lefts, tops, widths, heights) {\n            // Setting child sizes\n            for (var key in _this._cells) {\n                if (!Object.prototype.hasOwnProperty.call(_this._cells, key)) {\n                    continue;\n                }\n                var split = key.split(\":\");\n                var x = parseInt(split[0]);\n                var y = parseInt(split[1]);\n                var cell = _this._cells[key];\n                cell.left = lefts[y] + \"px\";\n                cell.top = tops[x] + \"px\";\n                cell.width = widths[y] + \"px\";\n                cell.height = heights[x] + \"px\";\n                cell._left.ignoreAdaptiveScaling = true;\n                cell._top.ignoreAdaptiveScaling = true;\n                cell._width.ignoreAdaptiveScaling = true;\n                cell._height.ignoreAdaptiveScaling = true;\n            }\n        });\n        _super.prototype._additionalProcessing.call(this, parentMeasure, context);\n    };\n    Grid.prototype._flagDescendantsAsMatrixDirty = function () {\n        for (var key in this._cells) {\n            if (!Object.prototype.hasOwnProperty.call(this._cells, key)) {\n                continue;\n            }\n            var child = this._cells[key];\n            child._markMatrixAsDirty();\n        }\n    };\n    Grid.prototype._renderHighlightSpecific = function (context) {\n        var _this = this;\n        _super.prototype._renderHighlightSpecific.call(this, context);\n        this._getGridDefinitions(function (lefts, tops, widths, heights) {\n            // Columns\n            for (var index = 0; index < lefts.length; index++) {\n                var left = _this._currentMeasure.left + lefts[index] + widths[index];\n                context.beginPath();\n                context.moveTo(left, _this._currentMeasure.top);\n                context.lineTo(left, _this._currentMeasure.top + _this._currentMeasure.height);\n                context.stroke();\n            }\n            // Rows\n            for (var index = 0; index < tops.length; index++) {\n                var top_1 = _this._currentMeasure.top + tops[index] + heights[index];\n                context.beginPath();\n                context.moveTo(_this._currentMeasure.left, top_1);\n                context.lineTo(_this._currentMeasure.left + _this._currentMeasure.width, top_1);\n                context.stroke();\n            }\n        });\n        context.restore();\n    };\n    /** Releases associated resources */\n    Grid.prototype.dispose = function () {\n        _super.prototype.dispose.call(this);\n        for (var _i = 0, _a = this._childControls; _i < _a.length; _i++) {\n            var control = _a[_i];\n            control.dispose();\n        }\n        for (var index = 0; index < this._rowDefinitions.length; index++) {\n            this._rowDefinitions[index].onChangedObservable.remove(this._rowDefinitionObservers[index]);\n        }\n        for (var index = 0; index < this._columnDefinitions.length; index++) {\n            this._columnDefinitions[index].onChangedObservable.remove(this._columnDefinitionObservers[index]);\n        }\n        this._rowDefinitionObservers = [];\n        this._rowDefinitions = [];\n        this._columnDefinitionObservers = [];\n        this._columnDefinitions = [];\n        this._cells = {};\n        this._childControls = [];\n    };\n    /**\n     * Serializes the current control\n     * @param serializationObject defined the JSON serialized object\n     */\n    Grid.prototype.serialize = function (serializationObject) {\n        _super.prototype.serialize.call(this, serializationObject);\n        serializationObject.columnCount = this.columnCount;\n        serializationObject.rowCount = this.rowCount;\n        serializationObject.columns = [];\n        serializationObject.rows = [];\n        serializationObject.tags = [];\n        for (var i = 0; i < this.columnCount; ++i) {\n            var cd = this.getColumnDefinition(i);\n            var childSerializationObject = { value: cd === null || cd === void 0 ? void 0 : cd.getValue(this.host), unit: cd === null || cd === void 0 ? void 0 : cd.unit };\n            serializationObject.columns.push(childSerializationObject);\n        }\n        for (var i = 0; i < this.rowCount; ++i) {\n            var rd = this.getRowDefinition(i);\n            var childSerializationObject = { value: rd === null || rd === void 0 ? void 0 : rd.getValue(this.host), unit: rd === null || rd === void 0 ? void 0 : rd.unit };\n            serializationObject.rows.push(childSerializationObject);\n        }\n        this.children.forEach(function (child) {\n            serializationObject.tags.push(child._tag);\n        });\n    };\n    /**\n     * @param serializedObject\n     * @param host\n     * @hidden\n     */\n    Grid.prototype._parseFromContent = function (serializedObject, host) {\n        _super.prototype._parseFromContent.call(this, serializedObject, host);\n        var children = [];\n        this.children.forEach(function (child) {\n            children.push(child);\n        });\n        this.removeRowDefinition(0);\n        this.removeColumnDefinition(0);\n        for (var i = 0; i < serializedObject.columnCount; ++i) {\n            var columnValue = serializedObject.columns[i].value;\n            var unit = serializedObject.columns[i].unit;\n            this.addColumnDefinition(columnValue, unit === 1 ? true : false);\n        }\n        for (var i = 0; i < serializedObject.rowCount; ++i) {\n            var rowValue = serializedObject.rows[i].value;\n            var unit = serializedObject.rows[i].unit;\n            this.addRowDefinition(rowValue, unit === 1 ? true : false);\n        }\n        for (var i = 0; i < children.length; ++i) {\n            var cellInfo = serializedObject.tags[i];\n            var rowNumber = parseInt(cellInfo.substring(0, cellInfo.search(\":\")));\n            if (isNaN(rowNumber)) {\n                rowNumber = 0;\n            }\n            var columnNumber = parseInt(cellInfo.substring(cellInfo.search(\":\") + 1));\n            if (isNaN(columnNumber)) {\n                columnNumber = 0;\n            }\n            this.addControl(children[i], rowNumber, columnNumber);\n        }\n    };\n    return Grid;\n}(Container));\nexport { Grid };\nRegisterClass(\"BABYLON.GUI.Grid\", Grid);\n//# sourceMappingURL=grid.js.map","import { __decorate, __extends } from \"tslib\";\nimport { Observable } from \"@babylonjs/core/Misc/observable.js\";\nimport { Control } from \"./control.js\";\nimport { InputText } from \"./inputText.js\";\nimport { Rectangle } from \"./rectangle.js\";\nimport { Button } from \"./button.js\";\nimport { Grid } from \"./grid.js\";\nimport { TextBlock } from \"../controls/textBlock.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { Color3 } from \"@babylonjs/core/Maths/math.color.js\";\nimport { serialize } from \"@babylonjs/core/Misc/decorators.js\";\nimport { EngineStore } from \"@babylonjs/core/Engines/engineStore.js\";\n/** Class used to create color pickers */\nvar ColorPicker = /** @class */ (function (_super) {\n    __extends(ColorPicker, _super);\n    /**\n     * Creates a new ColorPicker\n     * @param name defines the control name\n     */\n    function ColorPicker(name) {\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        _this._value = Color3.Red();\n        _this._tmpColor = new Color3();\n        _this._pointerStartedOnSquare = false;\n        _this._pointerStartedOnWheel = false;\n        _this._squareLeft = 0;\n        _this._squareTop = 0;\n        _this._squareSize = 0;\n        _this._h = 360;\n        _this._s = 1;\n        _this._v = 1;\n        _this._lastPointerDownId = -1;\n        /**\n         * Observable raised when the value changes\n         */\n        _this.onValueChangedObservable = new Observable();\n        // Events\n        _this._pointerIsDown = false;\n        _this.value = new Color3(0.88, 0.1, 0.1);\n        _this.size = \"200px\";\n        _this.isPointerBlocker = true;\n        return _this;\n    }\n    Object.defineProperty(ColorPicker.prototype, \"value\", {\n        /** Gets or sets the color of the color picker */\n        get: function () {\n            return this._value;\n        },\n        set: function (value) {\n            if (this._value.equals(value)) {\n                return;\n            }\n            this._value.copyFrom(value);\n            this._value.toHSVToRef(this._tmpColor);\n            this._h = this._tmpColor.r;\n            this._s = Math.max(this._tmpColor.g, 0.00001);\n            this._v = Math.max(this._tmpColor.b, 0.00001);\n            this._markAsDirty();\n            if (this._value.r <= ColorPicker._Epsilon) {\n                this._value.r = 0;\n            }\n            if (this._value.g <= ColorPicker._Epsilon) {\n                this._value.g = 0;\n            }\n            if (this._value.b <= ColorPicker._Epsilon) {\n                this._value.b = 0;\n            }\n            if (this._value.r >= 1.0 - ColorPicker._Epsilon) {\n                this._value.r = 1.0;\n            }\n            if (this._value.g >= 1.0 - ColorPicker._Epsilon) {\n                this._value.g = 1.0;\n            }\n            if (this._value.b >= 1.0 - ColorPicker._Epsilon) {\n                this._value.b = 1.0;\n            }\n            this.onValueChangedObservable.notifyObservers(this._value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ColorPicker.prototype, \"width\", {\n        /**\n         * Gets or sets control width\n         * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n         */\n        get: function () {\n            return this._width.toString(this._host);\n        },\n        set: function (value) {\n            if (this._width.toString(this._host) === value) {\n                return;\n            }\n            if (this._width.fromString(value)) {\n                if (this._width.getValue(this._host) === 0) {\n                    value = \"1px\";\n                    this._width.fromString(value);\n                }\n                this._height.fromString(value);\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ColorPicker.prototype, \"height\", {\n        /**\n         * Gets or sets control height\n         * @see https://doc.babylonjs.com/how_to/gui#position-and-size\n         */\n        get: function () {\n            return this._height.toString(this._host);\n        },\n        /** Gets or sets control height */\n        set: function (value) {\n            if (this._height.toString(this._host) === value) {\n                return;\n            }\n            if (this._height.fromString(value)) {\n                if (this._height.getValue(this._host) === 0) {\n                    value = \"1px\";\n                    this._height.fromString(value);\n                }\n                this._width.fromString(value);\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ColorPicker.prototype, \"size\", {\n        /** Gets or sets control size */\n        get: function () {\n            return this.width;\n        },\n        set: function (value) {\n            this.width = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ColorPicker.prototype._getTypeName = function () {\n        return \"ColorPicker\";\n    };\n    /**\n     * @param parentMeasure\n     * @hidden\n     */\n    ColorPicker.prototype._preMeasure = function (parentMeasure) {\n        if (parentMeasure.width < parentMeasure.height) {\n            this._currentMeasure.height = parentMeasure.width;\n        }\n        else {\n            this._currentMeasure.width = parentMeasure.height;\n        }\n    };\n    ColorPicker.prototype._updateSquareProps = function () {\n        var radius = Math.min(this._currentMeasure.width, this._currentMeasure.height) * 0.5;\n        var wheelThickness = radius * 0.2;\n        var innerDiameter = (radius - wheelThickness) * 2;\n        var squareSize = innerDiameter / Math.sqrt(2);\n        var offset = radius - squareSize * 0.5;\n        this._squareLeft = this._currentMeasure.left + offset;\n        this._squareTop = this._currentMeasure.top + offset;\n        this._squareSize = squareSize;\n    };\n    ColorPicker.prototype._drawGradientSquare = function (hueValue, left, top, width, height, context) {\n        var lgh = context.createLinearGradient(left, top, width + left, top);\n        lgh.addColorStop(0, \"#fff\");\n        lgh.addColorStop(1, \"hsl(\" + hueValue + \", 100%, 50%)\");\n        context.fillStyle = lgh;\n        context.fillRect(left, top, width, height);\n        var lgv = context.createLinearGradient(left, top, left, height + top);\n        lgv.addColorStop(0, \"rgba(0,0,0,0)\");\n        lgv.addColorStop(1, \"#000\");\n        context.fillStyle = lgv;\n        context.fillRect(left, top, width, height);\n    };\n    ColorPicker.prototype._drawCircle = function (centerX, centerY, radius, context) {\n        context.beginPath();\n        context.arc(centerX, centerY, radius + 1, 0, 2 * Math.PI, false);\n        context.lineWidth = 3;\n        context.strokeStyle = \"#333333\";\n        context.stroke();\n        context.beginPath();\n        context.arc(centerX, centerY, radius, 0, 2 * Math.PI, false);\n        context.lineWidth = 3;\n        context.strokeStyle = \"#ffffff\";\n        context.stroke();\n    };\n    ColorPicker.prototype._createColorWheelCanvas = function (radius, thickness) {\n        // Shoudl abstract platform instead of using LastCreatedEngine\n        var engine = EngineStore.LastCreatedEngine;\n        if (!engine) {\n            throw new Error(\"Invalid engine. Unable to create a canvas.\");\n        }\n        var canvas = engine.createCanvas(radius * 2, radius * 2);\n        var context = canvas.getContext(\"2d\");\n        var image = context.getImageData(0, 0, radius * 2, radius * 2);\n        var data = image.data;\n        var color = this._tmpColor;\n        var maxDistSq = radius * radius;\n        var innerRadius = radius - thickness;\n        var minDistSq = innerRadius * innerRadius;\n        for (var x = -radius; x < radius; x++) {\n            for (var y = -radius; y < radius; y++) {\n                var distSq = x * x + y * y;\n                if (distSq > maxDistSq || distSq < minDistSq) {\n                    continue;\n                }\n                var dist = Math.sqrt(distSq);\n                var ang = Math.atan2(y, x);\n                Color3.HSVtoRGBToRef((ang * 180) / Math.PI + 180, dist / radius, 1, color);\n                var index = (x + radius + (y + radius) * 2 * radius) * 4;\n                data[index] = color.r * 255;\n                data[index + 1] = color.g * 255;\n                data[index + 2] = color.b * 255;\n                var alphaRatio = (dist - innerRadius) / (radius - innerRadius);\n                //apply less alpha to bigger color pickers\n                var alphaAmount = 0.2;\n                var maxAlpha = 0.2;\n                var minAlpha = 0.04;\n                var lowerRadius = 50;\n                var upperRadius = 150;\n                if (radius < lowerRadius) {\n                    alphaAmount = maxAlpha;\n                }\n                else if (radius > upperRadius) {\n                    alphaAmount = minAlpha;\n                }\n                else {\n                    alphaAmount = ((minAlpha - maxAlpha) * (radius - lowerRadius)) / (upperRadius - lowerRadius) + maxAlpha;\n                }\n                alphaRatio = (dist - innerRadius) / (radius - innerRadius);\n                if (alphaRatio < alphaAmount) {\n                    data[index + 3] = 255 * (alphaRatio / alphaAmount);\n                }\n                else if (alphaRatio > 1 - alphaAmount) {\n                    data[index + 3] = 255 * (1.0 - (alphaRatio - (1 - alphaAmount)) / alphaAmount);\n                }\n                else {\n                    data[index + 3] = 255;\n                }\n            }\n        }\n        context.putImageData(image, 0, 0);\n        return canvas;\n    };\n    /**\n     * @param context\n     * @hidden\n     */\n    ColorPicker.prototype._draw = function (context) {\n        context.save();\n        this._applyStates(context);\n        var radius = Math.min(this._currentMeasure.width, this._currentMeasure.height) * 0.5;\n        var wheelThickness = radius * 0.2;\n        var left = this._currentMeasure.left;\n        var top = this._currentMeasure.top;\n        if (!this._colorWheelCanvas || this._colorWheelCanvas.width != radius * 2) {\n            this._colorWheelCanvas = this._createColorWheelCanvas(radius, wheelThickness);\n        }\n        this._updateSquareProps();\n        if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n            context.shadowColor = this.shadowColor;\n            context.shadowBlur = this.shadowBlur;\n            context.shadowOffsetX = this.shadowOffsetX;\n            context.shadowOffsetY = this.shadowOffsetY;\n            context.fillRect(this._squareLeft, this._squareTop, this._squareSize, this._squareSize);\n        }\n        context.drawImage(this._colorWheelCanvas, left, top);\n        if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n            context.shadowBlur = 0;\n            context.shadowOffsetX = 0;\n            context.shadowOffsetY = 0;\n        }\n        this._drawGradientSquare(this._h, this._squareLeft, this._squareTop, this._squareSize, this._squareSize, context);\n        var cx = this._squareLeft + this._squareSize * this._s;\n        var cy = this._squareTop + this._squareSize * (1 - this._v);\n        this._drawCircle(cx, cy, radius * 0.04, context);\n        var dist = radius - wheelThickness * 0.5;\n        cx = left + radius + Math.cos(((this._h - 180) * Math.PI) / 180) * dist;\n        cy = top + radius + Math.sin(((this._h - 180) * Math.PI) / 180) * dist;\n        this._drawCircle(cx, cy, wheelThickness * 0.35, context);\n        context.restore();\n    };\n    ColorPicker.prototype._updateValueFromPointer = function (x, y) {\n        if (this._pointerStartedOnWheel) {\n            var radius = Math.min(this._currentMeasure.width, this._currentMeasure.height) * 0.5;\n            var centerX = radius + this._currentMeasure.left;\n            var centerY = radius + this._currentMeasure.top;\n            this._h = (Math.atan2(y - centerY, x - centerX) * 180) / Math.PI + 180;\n        }\n        else if (this._pointerStartedOnSquare) {\n            this._updateSquareProps();\n            this._s = (x - this._squareLeft) / this._squareSize;\n            this._v = 1 - (y - this._squareTop) / this._squareSize;\n            this._s = Math.min(this._s, 1);\n            this._s = Math.max(this._s, ColorPicker._Epsilon);\n            this._v = Math.min(this._v, 1);\n            this._v = Math.max(this._v, ColorPicker._Epsilon);\n        }\n        Color3.HSVtoRGBToRef(this._h, this._s, this._v, this._tmpColor);\n        this.value = this._tmpColor;\n    };\n    ColorPicker.prototype._isPointOnSquare = function (x, y) {\n        this._updateSquareProps();\n        var left = this._squareLeft;\n        var top = this._squareTop;\n        var size = this._squareSize;\n        if (x >= left && x <= left + size && y >= top && y <= top + size) {\n            return true;\n        }\n        return false;\n    };\n    ColorPicker.prototype._isPointOnWheel = function (x, y) {\n        var radius = Math.min(this._currentMeasure.width, this._currentMeasure.height) * 0.5;\n        var centerX = radius + this._currentMeasure.left;\n        var centerY = radius + this._currentMeasure.top;\n        var wheelThickness = radius * 0.2;\n        var innerRadius = radius - wheelThickness;\n        var radiusSq = radius * radius;\n        var innerRadiusSq = innerRadius * innerRadius;\n        var dx = x - centerX;\n        var dy = y - centerY;\n        var distSq = dx * dx + dy * dy;\n        if (distSq <= radiusSq && distSq >= innerRadiusSq) {\n            return true;\n        }\n        return false;\n    };\n    ColorPicker.prototype._onPointerDown = function (target, coordinates, pointerId, buttonIndex, pi) {\n        if (!_super.prototype._onPointerDown.call(this, target, coordinates, pointerId, buttonIndex, pi)) {\n            return false;\n        }\n        if (this.isReadOnly) {\n            return true;\n        }\n        this._pointerIsDown = true;\n        this._pointerStartedOnSquare = false;\n        this._pointerStartedOnWheel = false;\n        // Invert transform\n        this._invertTransformMatrix.transformCoordinates(coordinates.x, coordinates.y, this._transformedPosition);\n        var x = this._transformedPosition.x;\n        var y = this._transformedPosition.y;\n        if (this._isPointOnSquare(x, y)) {\n            this._pointerStartedOnSquare = true;\n        }\n        else if (this._isPointOnWheel(x, y)) {\n            this._pointerStartedOnWheel = true;\n        }\n        this._updateValueFromPointer(x, y);\n        this._host._capturingControl[pointerId] = this;\n        this._lastPointerDownId = pointerId;\n        return true;\n    };\n    ColorPicker.prototype._onPointerMove = function (target, coordinates, pointerId, pi) {\n        // Only listen to pointer move events coming from the last pointer to click on the element (To support dual vr controller interaction)\n        if (pointerId != this._lastPointerDownId) {\n            return;\n        }\n        if (!this.isReadOnly) {\n            // Invert transform\n            this._invertTransformMatrix.transformCoordinates(coordinates.x, coordinates.y, this._transformedPosition);\n            var x = this._transformedPosition.x;\n            var y = this._transformedPosition.y;\n            if (this._pointerIsDown) {\n                this._updateValueFromPointer(x, y);\n            }\n        }\n        _super.prototype._onPointerMove.call(this, target, coordinates, pointerId, pi);\n    };\n    ColorPicker.prototype._onPointerUp = function (target, coordinates, pointerId, buttonIndex, notifyClick, pi) {\n        this._pointerIsDown = false;\n        delete this._host._capturingControl[pointerId];\n        _super.prototype._onPointerUp.call(this, target, coordinates, pointerId, buttonIndex, notifyClick, pi);\n    };\n    ColorPicker.prototype._onCanvasBlur = function () {\n        this._forcePointerUp();\n        _super.prototype._onCanvasBlur.call(this);\n    };\n    /**\n     * This function expands the color picker by creating a color picker dialog with manual\n     * color value input and the ability to save colors into an array to be used later in\n     * subsequent launches of the dialogue.\n     * @param advancedTexture defines the AdvancedDynamicTexture the dialog is assigned to\n     * @param options defines size for dialog and options for saved colors. Also accepts last color picked as hex string and saved colors array as hex strings.\n     * @param options.pickerWidth\n     * @param options.pickerHeight\n     * @param options.headerHeight\n     * @param options.lastColor\n     * @param options.swatchLimit\n     * @param options.numSwatchesPerLine\n     * @param options.savedColors\n     * @returns picked color as a hex string and the saved colors array as hex strings.\n     */\n    ColorPicker.ShowPickerDialogAsync = function (advancedTexture, options) {\n        return new Promise(function (resolve) {\n            // Default options\n            options.pickerWidth = options.pickerWidth || \"640px\";\n            options.pickerHeight = options.pickerHeight || \"400px\";\n            options.headerHeight = options.headerHeight || \"35px\";\n            options.lastColor = options.lastColor || \"#000000\";\n            options.swatchLimit = options.swatchLimit || 20;\n            options.numSwatchesPerLine = options.numSwatchesPerLine || 10;\n            // Window size settings\n            var drawerMaxRows = options.swatchLimit / options.numSwatchesPerLine;\n            var rawSwatchSize = parseFloat(options.pickerWidth) / options.numSwatchesPerLine;\n            var gutterSize = Math.floor(rawSwatchSize * 0.25);\n            var colGutters = gutterSize * (options.numSwatchesPerLine + 1);\n            var swatchSize = Math.floor((parseFloat(options.pickerWidth) - colGutters) / options.numSwatchesPerLine);\n            var drawerMaxSize = swatchSize * drawerMaxRows + gutterSize * (drawerMaxRows + 1);\n            var containerSize = (parseInt(options.pickerHeight) + drawerMaxSize + Math.floor(swatchSize * 0.25)).toString() + \"px\";\n            // Button Colors\n            var buttonColor = \"#c0c0c0\";\n            var buttonBackgroundColor = \"#535353\";\n            var buttonBackgroundHoverColor = \"#414141\";\n            var buttonBackgroundClickColor = \"515151\";\n            var buttonDisabledColor = \"#555555\";\n            var buttonDisabledBackgroundColor = \"#454545\";\n            var currentSwatchesOutlineColor = \"#404040\";\n            var luminanceLimitColor = Color3.FromHexString(\"#dddddd\");\n            var luminanceLimit = luminanceLimitColor.r + luminanceLimitColor.g + luminanceLimitColor.b;\n            var iconColorDark = \"#aaaaaa\";\n            var iconColorLight = \"#ffffff\";\n            // Button settings\n            var buttonFontSize;\n            var butEdit;\n            // Input Text Colors\n            var inputFieldLabels = [\"R\", \"G\", \"B\"];\n            var inputTextBackgroundColor = \"#454545\";\n            var inputTextColor = \"#f0f0f0\";\n            // This int is used for naming swatches and serves as the index for calling them from the list\n            var swatchNumber;\n            // Menu Panel options. We need to know if the swatchDrawer exists so we can create it if needed.\n            var swatchDrawer;\n            var editSwatchMode = false;\n            // Color InputText fields that will be updated upon value change\n            var butSave;\n            var lastVal;\n            var activeField;\n            // Dialog menu container which will contain both the main dialogue window and the swatch drawer which opens once a color is saved.\n            var dialogContainer = new Grid();\n            dialogContainer.name = \"Dialog Container\";\n            dialogContainer.width = options.pickerWidth;\n            if (options.savedColors) {\n                dialogContainer.height = containerSize;\n                var topRow = parseInt(options.pickerHeight) / parseInt(containerSize);\n                dialogContainer.addRowDefinition(topRow, false);\n                dialogContainer.addRowDefinition(1.0 - topRow, false);\n            }\n            else {\n                dialogContainer.height = options.pickerHeight;\n                dialogContainer.addRowDefinition(1.0, false);\n            }\n            advancedTexture.addControl(dialogContainer);\n            // Swatch drawer which contains all saved color buttons\n            if (options.savedColors) {\n                swatchDrawer = new Grid();\n                swatchDrawer.name = \"Swatch Drawer\";\n                swatchDrawer.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n                swatchDrawer.background = buttonBackgroundColor;\n                swatchDrawer.width = options.pickerWidth;\n                var initialRows = options.savedColors.length / options.numSwatchesPerLine;\n                var gutterCount = void 0;\n                if (initialRows == 0) {\n                    gutterCount = 0;\n                }\n                else {\n                    gutterCount = initialRows + 1;\n                }\n                swatchDrawer.height = (swatchSize * initialRows + gutterCount * gutterSize).toString() + \"px\";\n                swatchDrawer.top = Math.floor(swatchSize * 0.25).toString() + \"px\";\n                for (var i = 0; i < Math.ceil(options.savedColors.length / options.numSwatchesPerLine) * 2 + 1; i++) {\n                    if (i % 2 != 0) {\n                        swatchDrawer.addRowDefinition(swatchSize, true);\n                    }\n                    else {\n                        swatchDrawer.addRowDefinition(gutterSize, true);\n                    }\n                }\n                for (var i = 0; i < options.numSwatchesPerLine * 2 + 1; i++) {\n                    if (i % 2 != 0) {\n                        swatchDrawer.addColumnDefinition(swatchSize, true);\n                    }\n                    else {\n                        swatchDrawer.addColumnDefinition(gutterSize, true);\n                    }\n                }\n                dialogContainer.addControl(swatchDrawer, 1, 0);\n            }\n            // Picker container\n            var pickerPanel = new Grid();\n            pickerPanel.name = \"Picker Panel\";\n            pickerPanel.height = options.pickerHeight;\n            var panelHead = parseInt(options.headerHeight) / parseInt(options.pickerHeight);\n            var pickerPanelRows = [panelHead, 1.0 - panelHead];\n            pickerPanel.addRowDefinition(pickerPanelRows[0], false);\n            pickerPanel.addRowDefinition(pickerPanelRows[1], false);\n            dialogContainer.addControl(pickerPanel, 0, 0);\n            // Picker container header\n            var header = new Rectangle();\n            header.name = \"Dialogue Header Bar\";\n            header.background = \"#cccccc\";\n            header.thickness = 0;\n            pickerPanel.addControl(header, 0, 0);\n            // Header close button\n            var closeButton = Button.CreateSimpleButton(\"closeButton\", \"a\");\n            closeButton.fontFamily = \"coreglyphs\";\n            var headerColor3 = Color3.FromHexString(header.background);\n            var closeIconColor = new Color3(1.0 - headerColor3.r, 1.0 - headerColor3.g, 1.0 - headerColor3.b);\n            closeButton.color = closeIconColor.toHexString();\n            closeButton.fontSize = Math.floor(parseInt(options.headerHeight) * 0.6);\n            closeButton.textBlock.textVerticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\n            closeButton.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_RIGHT;\n            closeButton.height = closeButton.width = options.headerHeight;\n            closeButton.background = header.background;\n            closeButton.thickness = 0;\n            closeButton.pointerDownAnimation = function () { };\n            closeButton.pointerUpAnimation = function () {\n                closeButton.background = header.background;\n            };\n            closeButton.pointerEnterAnimation = function () {\n                closeButton.color = header.background;\n                closeButton.background = \"red\";\n            };\n            closeButton.pointerOutAnimation = function () {\n                closeButton.color = closeIconColor.toHexString();\n                closeButton.background = header.background;\n            };\n            closeButton.onPointerClickObservable.add(function () {\n                closePicker(currentSwatch.background);\n            });\n            pickerPanel.addControl(closeButton, 0, 0);\n            // Dialog container body\n            var dialogBody = new Grid();\n            dialogBody.name = \"Dialogue Body\";\n            dialogBody.background = buttonBackgroundColor;\n            var dialogBodyCols = [0.4375, 0.5625];\n            dialogBody.addRowDefinition(1.0, false);\n            dialogBody.addColumnDefinition(dialogBodyCols[0], false);\n            dialogBody.addColumnDefinition(dialogBodyCols[1], false);\n            pickerPanel.addControl(dialogBody, 1, 0);\n            // Picker grid\n            var pickerGrid = new Grid();\n            pickerGrid.name = \"Picker Grid\";\n            pickerGrid.addRowDefinition(0.85, false);\n            pickerGrid.addRowDefinition(0.15, false);\n            dialogBody.addControl(pickerGrid, 0, 0);\n            //  Picker control\n            var picker = new ColorPicker();\n            picker.name = \"GUI Color Picker\";\n            if (options.pickerHeight < options.pickerWidth) {\n                picker.width = 0.89;\n            }\n            else {\n                picker.height = 0.89;\n            }\n            picker.value = Color3.FromHexString(options.lastColor);\n            picker.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\n            picker.verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\n            picker.onPointerDownObservable.add(function () {\n                activeField = picker.name;\n                lastVal = \"\";\n                editSwatches(false);\n            });\n            picker.onValueChangedObservable.add(function (value) {\n                // value is a color3\n                if (activeField == picker.name) {\n                    updateValues(value, picker.name);\n                }\n            });\n            pickerGrid.addControl(picker, 0, 0);\n            // Picker body right quarant\n            var pickerBodyRight = new Grid();\n            pickerBodyRight.name = \"Dialogue Right Half\";\n            pickerBodyRight.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n            var pickerBodyRightRows = [0.514, 0.486];\n            pickerBodyRight.addRowDefinition(pickerBodyRightRows[0], false);\n            pickerBodyRight.addRowDefinition(pickerBodyRightRows[1], false);\n            dialogBody.addControl(pickerBodyRight, 1, 1);\n            // Picker container swatches and buttons\n            var pickerSwatchesButtons = new Grid();\n            pickerSwatchesButtons.name = \"Swatches and Buttons\";\n            var pickerButtonsCol = [0.417, 0.583];\n            pickerSwatchesButtons.addRowDefinition(1.0, false);\n            pickerSwatchesButtons.addColumnDefinition(pickerButtonsCol[0], false);\n            pickerSwatchesButtons.addColumnDefinition(pickerButtonsCol[1], false);\n            pickerBodyRight.addControl(pickerSwatchesButtons, 0, 0);\n            // Picker Swatches quadrant\n            var pickerSwatches = new Grid();\n            pickerSwatches.name = \"New and Current Swatches\";\n            var pickeSwatchesRows = [0.04, 0.16, 0.64, 0.16];\n            pickerSwatches.addRowDefinition(pickeSwatchesRows[0], false);\n            pickerSwatches.addRowDefinition(pickeSwatchesRows[1], false);\n            pickerSwatches.addRowDefinition(pickeSwatchesRows[2], false);\n            pickerSwatches.addRowDefinition(pickeSwatchesRows[3], false);\n            pickerSwatchesButtons.addControl(pickerSwatches, 0, 0);\n            // Active swatches\n            var activeSwatches = new Grid();\n            activeSwatches.name = \"Active Swatches\";\n            activeSwatches.width = 0.67;\n            activeSwatches.addRowDefinition(0.5, false);\n            activeSwatches.addRowDefinition(0.5, false);\n            pickerSwatches.addControl(activeSwatches, 2, 0);\n            var labelWidth = Math.floor(parseInt(options.pickerWidth) * dialogBodyCols[1] * pickerButtonsCol[0] * 0.11);\n            var labelHeight = Math.floor(parseInt(options.pickerHeight) * pickerPanelRows[1] * pickerBodyRightRows[0] * pickeSwatchesRows[1] * 0.5);\n            var labelTextSize;\n            if (options.pickerWidth > options.pickerHeight) {\n                labelTextSize = labelHeight;\n            }\n            else {\n                labelTextSize = labelWidth;\n            }\n            // New color swatch and previous color button\n            var newText = new TextBlock();\n            newText.text = \"new\";\n            newText.name = \"New Color Label\";\n            newText.color = buttonColor;\n            newText.fontSize = labelTextSize;\n            pickerSwatches.addControl(newText, 1, 0);\n            var newSwatch = new Rectangle();\n            newSwatch.name = \"New Color Swatch\";\n            newSwatch.background = options.lastColor;\n            newSwatch.thickness = 0;\n            activeSwatches.addControl(newSwatch, 0, 0);\n            var currentSwatch = Button.CreateSimpleButton(\"currentSwatch\", \"\");\n            currentSwatch.background = options.lastColor;\n            currentSwatch.thickness = 0;\n            currentSwatch.onPointerClickObservable.add(function () {\n                var revertColor = Color3.FromHexString(currentSwatch.background);\n                updateValues(revertColor, currentSwatch.name);\n                editSwatches(false);\n            });\n            currentSwatch.pointerDownAnimation = function () { };\n            currentSwatch.pointerUpAnimation = function () { };\n            currentSwatch.pointerEnterAnimation = function () { };\n            currentSwatch.pointerOutAnimation = function () { };\n            activeSwatches.addControl(currentSwatch, 1, 0);\n            var swatchOutline = new Rectangle();\n            swatchOutline.name = \"Swatch Outline\";\n            swatchOutline.width = 0.67;\n            swatchOutline.thickness = 2;\n            swatchOutline.color = currentSwatchesOutlineColor;\n            swatchOutline.isHitTestVisible = false;\n            pickerSwatches.addControl(swatchOutline, 2, 0);\n            var currentText = new TextBlock();\n            currentText.name = \"Current Color Label\";\n            currentText.text = \"current\";\n            currentText.color = buttonColor;\n            currentText.fontSize = labelTextSize;\n            pickerSwatches.addControl(currentText, 3, 0);\n            // Buttons grid\n            var buttonGrid = new Grid();\n            buttonGrid.name = \"Button Grid\";\n            buttonGrid.height = 0.8;\n            var buttonGridRows = 1 / 3;\n            buttonGrid.addRowDefinition(buttonGridRows, false);\n            buttonGrid.addRowDefinition(buttonGridRows, false);\n            buttonGrid.addRowDefinition(buttonGridRows, false);\n            pickerSwatchesButtons.addControl(buttonGrid, 0, 1);\n            // Determine pixel width and height for all buttons from overall panel dimensions\n            var buttonWidth = Math.floor(parseInt(options.pickerWidth) * dialogBodyCols[1] * pickerButtonsCol[1] * 0.67).toString() + \"px\";\n            var buttonHeight = Math.floor(parseInt(options.pickerHeight) * pickerPanelRows[1] * pickerBodyRightRows[0] * (parseFloat(buttonGrid.height.toString()) / 100) * buttonGridRows * 0.7).toString() + \"px\";\n            // Determine button type size\n            if (parseFloat(buttonWidth) > parseFloat(buttonHeight)) {\n                buttonFontSize = Math.floor(parseFloat(buttonHeight) * 0.45);\n            }\n            else {\n                buttonFontSize = Math.floor(parseFloat(buttonWidth) * 0.11);\n            }\n            // Panel Buttons\n            var butOK = Button.CreateSimpleButton(\"butOK\", \"OK\");\n            butOK.width = buttonWidth;\n            butOK.height = buttonHeight;\n            butOK.verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\n            butOK.thickness = 2;\n            butOK.color = buttonColor;\n            butOK.fontSize = buttonFontSize;\n            butOK.background = buttonBackgroundColor;\n            butOK.onPointerEnterObservable.add(function () {\n                butOK.background = buttonBackgroundHoverColor;\n            });\n            butOK.onPointerOutObservable.add(function () {\n                butOK.background = buttonBackgroundColor;\n            });\n            butOK.pointerDownAnimation = function () {\n                butOK.background = buttonBackgroundClickColor;\n            };\n            butOK.pointerUpAnimation = function () {\n                butOK.background = buttonBackgroundHoverColor;\n            };\n            butOK.onPointerClickObservable.add(function () {\n                editSwatches(false);\n                closePicker(newSwatch.background);\n            });\n            buttonGrid.addControl(butOK, 0, 0);\n            var butCancel = Button.CreateSimpleButton(\"butCancel\", \"Cancel\");\n            butCancel.width = buttonWidth;\n            butCancel.height = buttonHeight;\n            butCancel.verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\n            butCancel.thickness = 2;\n            butCancel.color = buttonColor;\n            butCancel.fontSize = buttonFontSize;\n            butCancel.background = buttonBackgroundColor;\n            butCancel.onPointerEnterObservable.add(function () {\n                butCancel.background = buttonBackgroundHoverColor;\n            });\n            butCancel.onPointerOutObservable.add(function () {\n                butCancel.background = buttonBackgroundColor;\n            });\n            butCancel.pointerDownAnimation = function () {\n                butCancel.background = buttonBackgroundClickColor;\n            };\n            butCancel.pointerUpAnimation = function () {\n                butCancel.background = buttonBackgroundHoverColor;\n            };\n            butCancel.onPointerClickObservable.add(function () {\n                editSwatches(false);\n                closePicker(currentSwatch.background);\n            });\n            buttonGrid.addControl(butCancel, 1, 0);\n            if (options.savedColors) {\n                butSave = Button.CreateSimpleButton(\"butSave\", \"Save\");\n                butSave.width = buttonWidth;\n                butSave.height = buttonHeight;\n                butSave.verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\n                butSave.thickness = 2;\n                butSave.fontSize = buttonFontSize;\n                if (options.savedColors.length < options.swatchLimit) {\n                    butSave.color = buttonColor;\n                    butSave.background = buttonBackgroundColor;\n                }\n                else {\n                    disableButton(butSave, true);\n                }\n                butSave.onPointerEnterObservable.add(function () {\n                    if (options.savedColors) {\n                        if (options.savedColors.length < options.swatchLimit) {\n                            butSave.background = buttonBackgroundHoverColor;\n                        }\n                    }\n                });\n                butSave.onPointerOutObservable.add(function () {\n                    if (options.savedColors) {\n                        if (options.savedColors.length < options.swatchLimit) {\n                            butSave.background = buttonBackgroundColor;\n                        }\n                    }\n                });\n                butSave.pointerDownAnimation = function () {\n                    if (options.savedColors) {\n                        if (options.savedColors.length < options.swatchLimit) {\n                            butSave.background = buttonBackgroundClickColor;\n                        }\n                    }\n                };\n                butSave.pointerUpAnimation = function () {\n                    if (options.savedColors) {\n                        if (options.savedColors.length < options.swatchLimit) {\n                            butSave.background = buttonBackgroundHoverColor;\n                        }\n                    }\n                };\n                butSave.onPointerClickObservable.add(function () {\n                    if (options.savedColors) {\n                        if (options.savedColors.length == 0) {\n                            setEditButtonVisibility(true);\n                        }\n                        if (options.savedColors.length < options.swatchLimit) {\n                            updateSwatches(newSwatch.background, butSave);\n                        }\n                        editSwatches(false);\n                    }\n                });\n                if (options.savedColors.length > 0) {\n                    setEditButtonVisibility(true);\n                }\n                buttonGrid.addControl(butSave, 2, 0);\n            }\n            // Picker color values input\n            var pickerColorValues = new Grid();\n            pickerColorValues.name = \"Dialog Lower Right\";\n            pickerColorValues.addRowDefinition(0.02, false);\n            pickerColorValues.addRowDefinition(0.63, false);\n            pickerColorValues.addRowDefinition(0.21, false);\n            pickerColorValues.addRowDefinition(0.14, false);\n            pickerBodyRight.addControl(pickerColorValues, 1, 0);\n            // RGB values text boxes\n            var currentColor = Color3.FromHexString(options.lastColor);\n            var rgbValuesQuadrant = new Grid();\n            rgbValuesQuadrant.name = \"RGB Values\";\n            rgbValuesQuadrant.width = 0.82;\n            rgbValuesQuadrant.verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\n            rgbValuesQuadrant.addRowDefinition(1 / 3, false);\n            rgbValuesQuadrant.addRowDefinition(1 / 3, false);\n            rgbValuesQuadrant.addRowDefinition(1 / 3, false);\n            rgbValuesQuadrant.addColumnDefinition(0.1, false);\n            rgbValuesQuadrant.addColumnDefinition(0.2, false);\n            rgbValuesQuadrant.addColumnDefinition(0.7, false);\n            pickerColorValues.addControl(rgbValuesQuadrant, 1, 0);\n            for (var i = 0; i < inputFieldLabels.length; i++) {\n                var labelText_1 = new TextBlock();\n                labelText_1.text = inputFieldLabels[i];\n                labelText_1.color = buttonColor;\n                labelText_1.fontSize = buttonFontSize;\n                rgbValuesQuadrant.addControl(labelText_1, i, 0);\n            }\n            // Input fields for RGB values\n            var rValInt = new InputText();\n            rValInt.width = 0.83;\n            rValInt.height = 0.72;\n            rValInt.name = \"rIntField\";\n            rValInt.fontSize = buttonFontSize;\n            rValInt.text = (currentColor.r * 255).toString();\n            rValInt.color = inputTextColor;\n            rValInt.background = inputTextBackgroundColor;\n            rValInt.onFocusObservable.add(function () {\n                activeField = rValInt.name;\n                lastVal = rValInt.text;\n                editSwatches(false);\n            });\n            rValInt.onBlurObservable.add(function () {\n                if (rValInt.text == \"\") {\n                    rValInt.text = \"0\";\n                }\n                updateInt(rValInt, \"r\");\n                if (activeField == rValInt.name) {\n                    activeField = \"\";\n                }\n            });\n            rValInt.onTextChangedObservable.add(function () {\n                if (activeField == rValInt.name) {\n                    updateInt(rValInt, \"r\");\n                }\n            });\n            rgbValuesQuadrant.addControl(rValInt, 0, 1);\n            var gValInt = new InputText();\n            gValInt.width = 0.83;\n            gValInt.height = 0.72;\n            gValInt.name = \"gIntField\";\n            gValInt.fontSize = buttonFontSize;\n            gValInt.text = (currentColor.g * 255).toString();\n            gValInt.color = inputTextColor;\n            gValInt.background = inputTextBackgroundColor;\n            gValInt.onFocusObservable.add(function () {\n                activeField = gValInt.name;\n                lastVal = gValInt.text;\n                editSwatches(false);\n            });\n            gValInt.onBlurObservable.add(function () {\n                if (gValInt.text == \"\") {\n                    gValInt.text = \"0\";\n                }\n                updateInt(gValInt, \"g\");\n                if (activeField == gValInt.name) {\n                    activeField = \"\";\n                }\n            });\n            gValInt.onTextChangedObservable.add(function () {\n                if (activeField == gValInt.name) {\n                    updateInt(gValInt, \"g\");\n                }\n            });\n            rgbValuesQuadrant.addControl(gValInt, 1, 1);\n            var bValInt = new InputText();\n            bValInt.width = 0.83;\n            bValInt.height = 0.72;\n            bValInt.name = \"bIntField\";\n            bValInt.fontSize = buttonFontSize;\n            bValInt.text = (currentColor.b * 255).toString();\n            bValInt.color = inputTextColor;\n            bValInt.background = inputTextBackgroundColor;\n            bValInt.onFocusObservable.add(function () {\n                activeField = bValInt.name;\n                lastVal = bValInt.text;\n                editSwatches(false);\n            });\n            bValInt.onBlurObservable.add(function () {\n                if (bValInt.text == \"\") {\n                    bValInt.text = \"0\";\n                }\n                updateInt(bValInt, \"b\");\n                if (activeField == bValInt.name) {\n                    activeField = \"\";\n                }\n            });\n            bValInt.onTextChangedObservable.add(function () {\n                if (activeField == bValInt.name) {\n                    updateInt(bValInt, \"b\");\n                }\n            });\n            rgbValuesQuadrant.addControl(bValInt, 2, 1);\n            var rValDec = new InputText();\n            rValDec.width = 0.95;\n            rValDec.height = 0.72;\n            rValDec.name = \"rDecField\";\n            rValDec.fontSize = buttonFontSize;\n            rValDec.text = currentColor.r.toString();\n            rValDec.color = inputTextColor;\n            rValDec.background = inputTextBackgroundColor;\n            rValDec.onFocusObservable.add(function () {\n                activeField = rValDec.name;\n                lastVal = rValDec.text;\n                editSwatches(false);\n            });\n            rValDec.onBlurObservable.add(function () {\n                if (parseFloat(rValDec.text) == 0 || rValDec.text == \"\") {\n                    rValDec.text = \"0\";\n                    updateFloat(rValDec, \"r\");\n                }\n                if (activeField == rValDec.name) {\n                    activeField = \"\";\n                }\n            });\n            rValDec.onTextChangedObservable.add(function () {\n                if (activeField == rValDec.name) {\n                    updateFloat(rValDec, \"r\");\n                }\n            });\n            rgbValuesQuadrant.addControl(rValDec, 0, 2);\n            var gValDec = new InputText();\n            gValDec.width = 0.95;\n            gValDec.height = 0.72;\n            gValDec.name = \"gDecField\";\n            gValDec.fontSize = buttonFontSize;\n            gValDec.text = currentColor.g.toString();\n            gValDec.color = inputTextColor;\n            gValDec.background = inputTextBackgroundColor;\n            gValDec.onFocusObservable.add(function () {\n                activeField = gValDec.name;\n                lastVal = gValDec.text;\n                editSwatches(false);\n            });\n            gValDec.onBlurObservable.add(function () {\n                if (parseFloat(gValDec.text) == 0 || gValDec.text == \"\") {\n                    gValDec.text = \"0\";\n                    updateFloat(gValDec, \"g\");\n                }\n                if (activeField == gValDec.name) {\n                    activeField = \"\";\n                }\n            });\n            gValDec.onTextChangedObservable.add(function () {\n                if (activeField == gValDec.name) {\n                    updateFloat(gValDec, \"g\");\n                }\n            });\n            rgbValuesQuadrant.addControl(gValDec, 1, 2);\n            var bValDec = new InputText();\n            bValDec.width = 0.95;\n            bValDec.height = 0.72;\n            bValDec.name = \"bDecField\";\n            bValDec.fontSize = buttonFontSize;\n            bValDec.text = currentColor.b.toString();\n            bValDec.color = inputTextColor;\n            bValDec.background = inputTextBackgroundColor;\n            bValDec.onFocusObservable.add(function () {\n                activeField = bValDec.name;\n                lastVal = bValDec.text;\n                editSwatches(false);\n            });\n            bValDec.onBlurObservable.add(function () {\n                if (parseFloat(bValDec.text) == 0 || bValDec.text == \"\") {\n                    bValDec.text = \"0\";\n                    updateFloat(bValDec, \"b\");\n                }\n                if (activeField == bValDec.name) {\n                    activeField = \"\";\n                }\n            });\n            bValDec.onTextChangedObservable.add(function () {\n                if (activeField == bValDec.name) {\n                    updateFloat(bValDec, \"b\");\n                }\n            });\n            rgbValuesQuadrant.addControl(bValDec, 2, 2);\n            // Hex value input\n            var hexValueQuadrant = new Grid();\n            hexValueQuadrant.name = \"Hex Value\";\n            hexValueQuadrant.width = 0.82;\n            hexValueQuadrant.addRowDefinition(1.0, false);\n            hexValueQuadrant.addColumnDefinition(0.1, false);\n            hexValueQuadrant.addColumnDefinition(0.9, false);\n            pickerColorValues.addControl(hexValueQuadrant, 2, 0);\n            var labelText = new TextBlock();\n            labelText.text = \"#\";\n            labelText.color = buttonColor;\n            labelText.fontSize = buttonFontSize;\n            hexValueQuadrant.addControl(labelText, 0, 0);\n            var hexVal = new InputText();\n            hexVal.width = 0.96;\n            hexVal.height = 0.72;\n            hexVal.name = \"hexField\";\n            hexVal.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\n            hexVal.fontSize = buttonFontSize;\n            var minusPound = options.lastColor.split(\"#\");\n            hexVal.text = minusPound[1];\n            hexVal.color = inputTextColor;\n            hexVal.background = inputTextBackgroundColor;\n            hexVal.onFocusObservable.add(function () {\n                activeField = hexVal.name;\n                lastVal = hexVal.text;\n                editSwatches(false);\n            });\n            hexVal.onBlurObservable.add(function () {\n                if (hexVal.text.length == 3) {\n                    var val = hexVal.text.split(\"\");\n                    hexVal.text = val[0] + val[0] + val[1] + val[1] + val[2] + val[2];\n                }\n                if (hexVal.text == \"\") {\n                    hexVal.text = \"000000\";\n                    updateValues(Color3.FromHexString(hexVal.text), \"b\");\n                }\n                if (activeField == hexVal.name) {\n                    activeField = \"\";\n                }\n            });\n            hexVal.onTextChangedObservable.add(function () {\n                var newHexValue = hexVal.text;\n                var checkHex = /[^0-9A-F]/i.test(newHexValue);\n                if ((hexVal.text.length > 6 || checkHex) && activeField == hexVal.name) {\n                    hexVal.text = lastVal;\n                }\n                else {\n                    if (hexVal.text.length < 6) {\n                        var leadingZero = 6 - hexVal.text.length;\n                        for (var i = 0; i < leadingZero; i++) {\n                            newHexValue = \"0\" + newHexValue;\n                        }\n                    }\n                    if (hexVal.text.length == 3) {\n                        var val = hexVal.text.split(\"\");\n                        newHexValue = val[0] + val[0] + val[1] + val[1] + val[2] + val[2];\n                    }\n                    newHexValue = \"#\" + newHexValue;\n                    if (activeField == hexVal.name) {\n                        lastVal = hexVal.text;\n                        updateValues(Color3.FromHexString(newHexValue), hexVal.name);\n                    }\n                }\n            });\n            hexValueQuadrant.addControl(hexVal, 0, 1);\n            if (options.savedColors && options.savedColors.length > 0) {\n                updateSwatches(\"\", butSave);\n            }\n            /**\n             * Will update all values for InputText and ColorPicker controls based on the BABYLON.Color3 passed to this function.\n             * Each InputText control and the ColorPicker control will be tested to see if they are the activeField and if they\n             * are will receive no update. This is to prevent the input from the user being overwritten.\n             * @param value\n             * @param inputField\n             */\n            function updateValues(value, inputField) {\n                activeField = inputField;\n                var pickedColor = value.toHexString();\n                newSwatch.background = pickedColor;\n                if (rValInt.name != activeField) {\n                    rValInt.text = Math.floor(value.r * 255).toString();\n                }\n                if (gValInt.name != activeField) {\n                    gValInt.text = Math.floor(value.g * 255).toString();\n                }\n                if (bValInt.name != activeField) {\n                    bValInt.text = Math.floor(value.b * 255).toString();\n                }\n                if (rValDec.name != activeField) {\n                    rValDec.text = value.r.toString();\n                }\n                if (gValDec.name != activeField) {\n                    gValDec.text = value.g.toString();\n                }\n                if (bValDec.name != activeField) {\n                    bValDec.text = value.b.toString();\n                }\n                if (hexVal.name != activeField) {\n                    var minusPound_1 = pickedColor.split(\"#\");\n                    hexVal.text = minusPound_1[1];\n                }\n                if (picker.name != activeField) {\n                    picker.value = value;\n                }\n            }\n            // When the user enters an integer for R, G, or B we check to make sure it is a valid number and replace if not.\n            function updateInt(field, channel) {\n                var newValue = field.text;\n                var checkVal = /[^0-9]/g.test(newValue);\n                if (checkVal) {\n                    field.text = lastVal;\n                    return;\n                }\n                else {\n                    if (newValue != \"\") {\n                        if (Math.floor(parseInt(newValue)) < 0) {\n                            newValue = \"0\";\n                        }\n                        else if (Math.floor(parseInt(newValue)) > 255) {\n                            newValue = \"255\";\n                        }\n                        else if (isNaN(parseInt(newValue))) {\n                            newValue = \"0\";\n                        }\n                    }\n                    if (activeField == field.name) {\n                        lastVal = newValue;\n                    }\n                }\n                if (newValue != \"\") {\n                    newValue = parseInt(newValue).toString();\n                    field.text = newValue;\n                    var newSwatchRGB = Color3.FromHexString(newSwatch.background);\n                    if (activeField == field.name) {\n                        if (channel == \"r\") {\n                            updateValues(new Color3(parseInt(newValue) / 255, newSwatchRGB.g, newSwatchRGB.b), field.name);\n                        }\n                        else if (channel == \"g\") {\n                            updateValues(new Color3(newSwatchRGB.r, parseInt(newValue) / 255, newSwatchRGB.b), field.name);\n                        }\n                        else {\n                            updateValues(new Color3(newSwatchRGB.r, newSwatchRGB.g, parseInt(newValue) / 255), field.name);\n                        }\n                    }\n                }\n            }\n            // When the user enters a float for R, G, or B we check to make sure it is a valid number and replace if not.\n            function updateFloat(field, channel) {\n                var newValue = field.text;\n                var checkVal = /[^0-9.]/g.test(newValue);\n                if (checkVal) {\n                    field.text = lastVal;\n                    return;\n                }\n                else {\n                    if (newValue != \"\" && newValue != \".\" && parseFloat(newValue) != 0) {\n                        if (parseFloat(newValue) < 0.0) {\n                            newValue = \"0.0\";\n                        }\n                        else if (parseFloat(newValue) > 1.0) {\n                            newValue = \"1.0\";\n                        }\n                        else if (isNaN(parseFloat(newValue))) {\n                            newValue = \"0.0\";\n                        }\n                    }\n                    if (activeField == field.name) {\n                        lastVal = newValue;\n                    }\n                }\n                if (newValue != \"\" && newValue != \".\" && parseFloat(newValue) != 0) {\n                    newValue = parseFloat(newValue).toString();\n                    field.text = newValue;\n                }\n                else {\n                    newValue = \"0.0\";\n                }\n                var newSwatchRGB = Color3.FromHexString(newSwatch.background);\n                if (activeField == field.name) {\n                    if (channel == \"r\") {\n                        updateValues(new Color3(parseFloat(newValue), newSwatchRGB.g, newSwatchRGB.b), field.name);\n                    }\n                    else if (channel == \"g\") {\n                        updateValues(new Color3(newSwatchRGB.r, parseFloat(newValue), newSwatchRGB.b), field.name);\n                    }\n                    else {\n                        updateValues(new Color3(newSwatchRGB.r, newSwatchRGB.g, parseFloat(newValue)), field.name);\n                    }\n                }\n            }\n            // Removes the current index from the savedColors array. Drawer can then be regenerated.\n            function deleteSwatch(index) {\n                if (options.savedColors) {\n                    options.savedColors.splice(index, 1);\n                }\n                if (options.savedColors && options.savedColors.length == 0) {\n                    setEditButtonVisibility(false);\n                    editSwatchMode = false;\n                }\n            }\n            // Creates and styles an individual swatch when updateSwatches is called.\n            function createSwatch() {\n                if (options.savedColors && options.savedColors[swatchNumber]) {\n                    var icon = void 0;\n                    if (editSwatchMode) {\n                        icon = \"b\";\n                    }\n                    else {\n                        icon = \"\";\n                    }\n                    var swatch_1 = Button.CreateSimpleButton(\"Swatch_\" + swatchNumber, icon);\n                    swatch_1.fontFamily = \"coreglyphs\";\n                    var swatchColor = Color3.FromHexString(options.savedColors[swatchNumber]);\n                    var swatchLuminence = swatchColor.r + swatchColor.g + swatchColor.b;\n                    // Set color of outline and textBlock based on luminance of the color swatch so feedback always visible\n                    if (swatchLuminence > luminanceLimit) {\n                        swatch_1.color = iconColorDark;\n                    }\n                    else {\n                        swatch_1.color = iconColorLight;\n                    }\n                    swatch_1.fontSize = Math.floor(swatchSize * 0.7);\n                    swatch_1.textBlock.verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\n                    swatch_1.height = swatch_1.width = swatchSize.toString() + \"px\";\n                    swatch_1.background = options.savedColors[swatchNumber];\n                    swatch_1.thickness = 2;\n                    var metadata_1 = swatchNumber;\n                    swatch_1.pointerDownAnimation = function () {\n                        swatch_1.thickness = 4;\n                    };\n                    swatch_1.pointerUpAnimation = function () {\n                        swatch_1.thickness = 3;\n                    };\n                    swatch_1.pointerEnterAnimation = function () {\n                        swatch_1.thickness = 3;\n                    };\n                    swatch_1.pointerOutAnimation = function () {\n                        swatch_1.thickness = 2;\n                    };\n                    swatch_1.onPointerClickObservable.add(function () {\n                        if (!editSwatchMode) {\n                            if (options.savedColors) {\n                                updateValues(Color3.FromHexString(options.savedColors[metadata_1]), swatch_1.name);\n                            }\n                        }\n                        else {\n                            deleteSwatch(metadata_1);\n                            updateSwatches(\"\", butSave);\n                        }\n                    });\n                    return swatch_1;\n                }\n                else {\n                    return null;\n                }\n            }\n            // Mode switch to render button text and close symbols on swatch controls\n            function editSwatches(mode) {\n                if (mode !== undefined) {\n                    editSwatchMode = mode;\n                }\n                var thisButton;\n                if (editSwatchMode) {\n                    for (var i = 0; i < swatchDrawer.children.length; i++) {\n                        thisButton = swatchDrawer.children[i];\n                        thisButton.textBlock.text = \"b\";\n                    }\n                    if (butEdit !== undefined) {\n                        butEdit.textBlock.text = \"Done\";\n                    }\n                }\n                else {\n                    for (var i = 0; i < swatchDrawer.children.length; i++) {\n                        thisButton = swatchDrawer.children[i];\n                        thisButton.textBlock.text = \"\";\n                    }\n                    if (butEdit !== undefined) {\n                        butEdit.textBlock.text = \"Edit\";\n                    }\n                }\n            }\n            /**\n             * When Save Color button is pressed this function will first create a swatch drawer if one is not already\n             * made. Then all controls are removed from the drawer and we step through the savedColors array and\n             * creates one swatch per color. It will also set the height of the drawer control based on how many\n             * saved colors there are and how many can be stored per row.\n             * @param color\n             * @param button\n             */\n            function updateSwatches(color, button) {\n                if (options.savedColors) {\n                    if (color != \"\") {\n                        options.savedColors.push(color);\n                    }\n                    swatchNumber = 0;\n                    swatchDrawer.clearControls();\n                    var rowCount = Math.ceil(options.savedColors.length / options.numSwatchesPerLine);\n                    var gutterCount = void 0;\n                    if (rowCount == 0) {\n                        gutterCount = 0;\n                    }\n                    else {\n                        gutterCount = rowCount + 1;\n                    }\n                    if (swatchDrawer.rowCount != rowCount + gutterCount) {\n                        var currentRows = swatchDrawer.rowCount;\n                        for (var i = 0; i < currentRows; i++) {\n                            swatchDrawer.removeRowDefinition(0);\n                        }\n                        for (var i = 0; i < rowCount + gutterCount; i++) {\n                            if (i % 2) {\n                                swatchDrawer.addRowDefinition(swatchSize, true);\n                            }\n                            else {\n                                swatchDrawer.addRowDefinition(gutterSize, true);\n                            }\n                        }\n                    }\n                    swatchDrawer.height = (swatchSize * rowCount + gutterCount * gutterSize).toString() + \"px\";\n                    for (var y = 1, thisRow = 1; y < rowCount + gutterCount; y += 2, thisRow++) {\n                        // Determine number of buttons to create per row based on the button limit per row and number of saved colors\n                        var totalButtonsThisRow = void 0;\n                        if (options.savedColors.length > thisRow * options.numSwatchesPerLine) {\n                            totalButtonsThisRow = options.numSwatchesPerLine;\n                        }\n                        else {\n                            totalButtonsThisRow = options.savedColors.length - (thisRow - 1) * options.numSwatchesPerLine;\n                        }\n                        var buttonIterations = Math.min(Math.max(totalButtonsThisRow, 0), options.numSwatchesPerLine);\n                        for (var x = 0, w = 1; x < buttonIterations; x++) {\n                            if (x > options.numSwatchesPerLine) {\n                                continue;\n                            }\n                            var swatch = createSwatch();\n                            if (swatch != null) {\n                                swatchDrawer.addControl(swatch, y, w);\n                                w += 2;\n                                swatchNumber++;\n                            }\n                            else {\n                                continue;\n                            }\n                        }\n                    }\n                    if (options.savedColors.length >= options.swatchLimit) {\n                        disableButton(button, true);\n                    }\n                    else {\n                        disableButton(button, false);\n                    }\n                }\n            }\n            // Shows or hides edit swatches button depending on if there are saved swatches\n            function setEditButtonVisibility(enableButton) {\n                if (enableButton) {\n                    butEdit = Button.CreateSimpleButton(\"butEdit\", \"Edit\");\n                    butEdit.width = buttonWidth;\n                    butEdit.height = buttonHeight;\n                    butEdit.left = Math.floor(parseInt(buttonWidth) * 0.1).toString() + \"px\";\n                    butEdit.top = (parseFloat(butEdit.left) * -1).toString() + \"px\";\n                    butEdit.verticalAlignment = Control.VERTICAL_ALIGNMENT_BOTTOM;\n                    butEdit.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n                    butEdit.thickness = 2;\n                    butEdit.color = buttonColor;\n                    butEdit.fontSize = buttonFontSize;\n                    butEdit.background = buttonBackgroundColor;\n                    butEdit.onPointerEnterObservable.add(function () {\n                        butEdit.background = buttonBackgroundHoverColor;\n                    });\n                    butEdit.onPointerOutObservable.add(function () {\n                        butEdit.background = buttonBackgroundColor;\n                    });\n                    butEdit.pointerDownAnimation = function () {\n                        butEdit.background = buttonBackgroundClickColor;\n                    };\n                    butEdit.pointerUpAnimation = function () {\n                        butEdit.background = buttonBackgroundHoverColor;\n                    };\n                    butEdit.onPointerClickObservable.add(function () {\n                        if (editSwatchMode) {\n                            editSwatchMode = false;\n                        }\n                        else {\n                            editSwatchMode = true;\n                        }\n                        editSwatches();\n                    });\n                    pickerGrid.addControl(butEdit, 1, 0);\n                }\n                else {\n                    pickerGrid.removeControl(butEdit);\n                }\n            }\n            // Called when the user hits the limit of saved colors in the drawer.\n            function disableButton(button, disabled) {\n                if (disabled) {\n                    button.color = buttonDisabledColor;\n                    button.background = buttonDisabledBackgroundColor;\n                }\n                else {\n                    button.color = buttonColor;\n                    button.background = buttonBackgroundColor;\n                }\n            }\n            // Passes last chosen color back to scene and kills dialog by removing from AdvancedDynamicTexture\n            function closePicker(color) {\n                if (options.savedColors && options.savedColors.length > 0) {\n                    resolve({\n                        savedColors: options.savedColors,\n                        pickedColor: color,\n                    });\n                }\n                else {\n                    resolve({\n                        pickedColor: color,\n                    });\n                }\n                advancedTexture.removeControl(dialogContainer);\n            }\n        });\n    };\n    ColorPicker._Epsilon = 0.000001;\n    __decorate([\n        serialize()\n    ], ColorPicker.prototype, \"value\", null);\n    __decorate([\n        serialize()\n    ], ColorPicker.prototype, \"width\", null);\n    __decorate([\n        serialize()\n    ], ColorPicker.prototype, \"height\", null);\n    __decorate([\n        serialize()\n    ], ColorPicker.prototype, \"size\", null);\n    return ColorPicker;\n}(Control));\nexport { ColorPicker };\nRegisterClass(\"BABYLON.GUI.ColorPicker\", ColorPicker);\n//# sourceMappingURL=colorpicker.js.map","import { __decorate, __extends } from \"tslib\";\nimport { Container } from \"./container.js\";\nimport { Control } from \"./control.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { serialize } from \"@babylonjs/core/Misc/decorators.js\";\n/** Class used to create 2D ellipse containers */\nvar Ellipse = /** @class */ (function (_super) {\n    __extends(Ellipse, _super);\n    /**\n     * Creates a new Ellipse\n     * @param name defines the control name\n     */\n    function Ellipse(name) {\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        _this._thickness = 1;\n        return _this;\n    }\n    Object.defineProperty(Ellipse.prototype, \"thickness\", {\n        /** Gets or sets border thickness */\n        get: function () {\n            return this._thickness;\n        },\n        set: function (value) {\n            if (this._thickness === value) {\n                return;\n            }\n            this._thickness = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Ellipse.prototype._getTypeName = function () {\n        return \"Ellipse\";\n    };\n    Ellipse.prototype._localDraw = function (context) {\n        context.save();\n        if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n            context.shadowColor = this.shadowColor;\n            context.shadowBlur = this.shadowBlur;\n            context.shadowOffsetX = this.shadowOffsetX;\n            context.shadowOffsetY = this.shadowOffsetY;\n        }\n        Control.drawEllipse(this._currentMeasure.left + this._currentMeasure.width / 2, this._currentMeasure.top + this._currentMeasure.height / 2, this._currentMeasure.width / 2 - this._thickness / 2, this._currentMeasure.height / 2 - this._thickness / 2, context);\n        if (this._background) {\n            context.fillStyle = this._background;\n            context.fill();\n        }\n        if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n            context.shadowBlur = 0;\n            context.shadowOffsetX = 0;\n            context.shadowOffsetY = 0;\n        }\n        if (this._thickness) {\n            if (this.color) {\n                context.strokeStyle = this.color;\n            }\n            context.lineWidth = this._thickness;\n            context.stroke();\n        }\n        context.restore();\n    };\n    Ellipse.prototype._additionalProcessing = function (parentMeasure, context) {\n        _super.prototype._additionalProcessing.call(this, parentMeasure, context);\n        this._measureForChildren.width -= 2 * this._thickness;\n        this._measureForChildren.height -= 2 * this._thickness;\n        this._measureForChildren.left += this._thickness;\n        this._measureForChildren.top += this._thickness;\n    };\n    Ellipse.prototype._clipForChildren = function (context) {\n        Control.drawEllipse(this._currentMeasure.left + this._currentMeasure.width / 2, this._currentMeasure.top + this._currentMeasure.height / 2, this._currentMeasure.width / 2, this._currentMeasure.height / 2, context);\n        context.clip();\n    };\n    Ellipse.prototype._renderHighlightSpecific = function (context) {\n        Control.drawEllipse(this._currentMeasure.left + this._currentMeasure.width / 2, this._currentMeasure.top + this._currentMeasure.height / 2, this._currentMeasure.width / 2 - this._highlightLineWidth / 2, this._currentMeasure.height / 2 - this._highlightLineWidth / 2, context);\n        context.stroke();\n    };\n    __decorate([\n        serialize()\n    ], Ellipse.prototype, \"thickness\", null);\n    return Ellipse;\n}(Container));\nexport { Ellipse };\nRegisterClass(\"BABYLON.GUI.Ellipse\", Ellipse);\n//# sourceMappingURL=ellipse.js.map","import { __extends } from \"tslib\";\nimport { Button } from \"./button.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { Observable } from \"@babylonjs/core/Misc/observable.js\";\n/**\n * Class used to create a focusable button that can easily handle keyboard events\n * @since 5.0.0\n */\nvar FocusableButton = /** @class */ (function (_super) {\n    __extends(FocusableButton, _super);\n    function FocusableButton(name) {\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        /** Highlight color when button is focused */\n        _this.focusedColor = null;\n        _this._isFocused = false;\n        _this._unfocusedColor = null;\n        /** Observable raised when the control gets the focus */\n        _this.onFocusObservable = new Observable();\n        /** Observable raised when the control loses the focus */\n        _this.onBlurObservable = new Observable();\n        /** Observable raised when a key event was processed */\n        _this.onKeyboardEventProcessedObservable = new Observable();\n        _this._unfocusedColor = _this.color;\n        return _this;\n    }\n    /** @hidden */\n    FocusableButton.prototype.onBlur = function () {\n        if (this._isFocused) {\n            this._isFocused = false;\n            if (this.focusedColor && this._unfocusedColor != null) {\n                // Set color back to saved unfocused color\n                this.color = this._unfocusedColor;\n            }\n            this.onBlurObservable.notifyObservers(this);\n        }\n    };\n    /** @hidden */\n    FocusableButton.prototype.onFocus = function () {\n        this._isFocused = true;\n        if (this.focusedColor) {\n            // Save the unfocused color\n            this._unfocusedColor = this.color;\n            this.color = this.focusedColor;\n        }\n        this.onFocusObservable.notifyObservers(this);\n    };\n    /**\n     * Function called to get the list of controls that should not steal the focus from this control\n     * @returns an array of controls\n     */\n    FocusableButton.prototype.keepsFocusWith = function () {\n        return null;\n    };\n    /**\n     * Function to focus a button programmatically\n     */\n    FocusableButton.prototype.focus = function () {\n        this._host.moveFocusToControl(this);\n    };\n    /**\n     * Function to unfocus a button programmatically\n     */\n    FocusableButton.prototype.blur = function () {\n        this._host.focusedControl = null;\n    };\n    /**\n     * Handles the keyboard event\n     * @param evt Defines the KeyboardEvent\n     */\n    FocusableButton.prototype.processKeyboard = function (evt) {\n        this.onKeyboardEventProcessedObservable.notifyObservers(evt, -1, this);\n    };\n    /**\n     * @param target\n     * @param coordinates\n     * @param pointerId\n     * @param buttonIndex\n     * @param pi\n     * @hidden\n     */\n    FocusableButton.prototype._onPointerDown = function (target, coordinates, pointerId, buttonIndex, pi) {\n        if (!this.isReadOnly) {\n            // Clicking on button should focus\n            this.focus();\n        }\n        return _super.prototype._onPointerDown.call(this, target, coordinates, pointerId, buttonIndex, pi);\n    };\n    /** @hidden */\n    FocusableButton.prototype.displose = function () {\n        _super.prototype.dispose.call(this);\n        this.onBlurObservable.clear();\n        this.onFocusObservable.clear();\n        this.onKeyboardEventProcessedObservable.clear();\n    };\n    return FocusableButton;\n}(Button));\nexport { FocusableButton };\nRegisterClass(\"BABYLON.GUI.FocusableButton\", FocusableButton);\n//# sourceMappingURL=focusableButton.js.map","import { __extends } from \"tslib\";\nimport { InputText } from \"./inputText.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { TextWrapper } from \"./textWrapper.js\";\n/**\n * Class used to create a password control\n */\nvar InputPassword = /** @class */ (function (_super) {\n    __extends(InputPassword, _super);\n    function InputPassword() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    InputPassword.prototype._getTypeName = function () {\n        return \"InputPassword\";\n    };\n    InputPassword.prototype._beforeRenderText = function (textWrapper) {\n        var pwdTextWrapper = new TextWrapper();\n        var txt = \"\";\n        for (var i = 0; i < textWrapper.length; i++) {\n            txt += \"\\u2022\";\n        }\n        pwdTextWrapper.text = txt;\n        return pwdTextWrapper;\n    };\n    return InputPassword;\n}(InputText));\nexport { InputPassword };\nRegisterClass(\"BABYLON.GUI.InputPassword\", InputPassword);\n//# sourceMappingURL=inputPassword.js.map","import { __decorate, __extends } from \"tslib\";\nimport { Vector3, Matrix } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { Tools } from \"@babylonjs/core/Misc/tools.js\";\nimport { Control } from \"./control.js\";\nimport { ValueAndUnit } from \"../valueAndUnit.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { serialize } from \"@babylonjs/core/Misc/decorators.js\";\n/** Class used to render 2D lines */\nvar Line = /** @class */ (function (_super) {\n    __extends(Line, _super);\n    /**\n     * Creates a new Line\n     * @param name defines the control name\n     */\n    function Line(name) {\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        _this._lineWidth = 1;\n        _this._x1 = new ValueAndUnit(0);\n        _this._y1 = new ValueAndUnit(0);\n        _this._x2 = new ValueAndUnit(0);\n        _this._y2 = new ValueAndUnit(0);\n        _this._dash = new Array();\n        _this._automaticSize = true;\n        _this.isHitTestVisible = false;\n        _this._horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        _this._verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n        return _this;\n    }\n    Object.defineProperty(Line.prototype, \"dash\", {\n        /** Gets or sets the dash pattern */\n        get: function () {\n            return this._dash;\n        },\n        set: function (value) {\n            if (this._dash === value) {\n                return;\n            }\n            this._dash = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Line.prototype, \"connectedControl\", {\n        /** Gets or sets the control connected with the line end */\n        get: function () {\n            return this._connectedControl;\n        },\n        set: function (value) {\n            var _this = this;\n            if (this._connectedControl === value) {\n                return;\n            }\n            if (this._connectedControlDirtyObserver && this._connectedControl) {\n                this._connectedControl.onDirtyObservable.remove(this._connectedControlDirtyObserver);\n                this._connectedControlDirtyObserver = null;\n            }\n            if (value) {\n                this._connectedControlDirtyObserver = value.onDirtyObservable.add(function () { return _this._markAsDirty(); });\n            }\n            this._connectedControl = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Line.prototype, \"x1\", {\n        /** Gets or sets start coordinates on X axis */\n        get: function () {\n            return this._x1.toString(this._host);\n        },\n        set: function (value) {\n            if (this._x1.toString(this._host) === value) {\n                return;\n            }\n            if (this._x1.fromString(value)) {\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Line.prototype, \"y1\", {\n        /** Gets or sets start coordinates on Y axis */\n        get: function () {\n            return this._y1.toString(this._host);\n        },\n        set: function (value) {\n            if (this._y1.toString(this._host) === value) {\n                return;\n            }\n            if (this._y1.fromString(value)) {\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Line.prototype, \"x2\", {\n        /** Gets or sets end coordinates on X axis */\n        get: function () {\n            return this._x2.toString(this._host);\n        },\n        set: function (value) {\n            if (this._x2.toString(this._host) === value) {\n                return;\n            }\n            if (this._x2.fromString(value)) {\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Line.prototype, \"y2\", {\n        /** Gets or sets end coordinates on Y axis */\n        get: function () {\n            return this._y2.toString(this._host);\n        },\n        set: function (value) {\n            if (this._y2.toString(this._host) === value) {\n                return;\n            }\n            if (this._y2.fromString(value)) {\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Line.prototype, \"lineWidth\", {\n        /** Gets or sets line width */\n        get: function () {\n            return this._lineWidth;\n        },\n        set: function (value) {\n            if (this._lineWidth === value) {\n                return;\n            }\n            this._lineWidth = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Line.prototype, \"horizontalAlignment\", {\n        /** Gets or sets horizontal alignment */\n        set: function (value) {\n            return;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Line.prototype, \"verticalAlignment\", {\n        /** Gets or sets vertical alignment */\n        set: function (value) {\n            return;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Line.prototype, \"_effectiveX2\", {\n        get: function () {\n            return (this._connectedControl ? this._connectedControl.centerX : 0) + this._x2.getValue(this._host);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Line.prototype, \"_effectiveY2\", {\n        get: function () {\n            return (this._connectedControl ? this._connectedControl.centerY : 0) + this._y2.getValue(this._host);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Line.prototype._getTypeName = function () {\n        return \"Line\";\n    };\n    Line.prototype._draw = function (context) {\n        context.save();\n        if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n            context.shadowColor = this.shadowColor;\n            context.shadowBlur = this.shadowBlur;\n            context.shadowOffsetX = this.shadowOffsetX;\n            context.shadowOffsetY = this.shadowOffsetY;\n        }\n        this._applyStates(context);\n        context.strokeStyle = this.color;\n        context.lineWidth = this._lineWidth;\n        context.setLineDash(this._dash);\n        context.beginPath();\n        context.moveTo(this._cachedParentMeasure.left + this._x1.getValue(this._host), this._cachedParentMeasure.top + this._y1.getValue(this._host));\n        context.lineTo(this._cachedParentMeasure.left + this._effectiveX2, this._cachedParentMeasure.top + this._effectiveY2);\n        context.stroke();\n        context.restore();\n    };\n    Line.prototype._measure = function () {\n        // Width / Height\n        this._currentMeasure.width = Math.abs(this._x1.getValue(this._host) - this._effectiveX2) + this._lineWidth;\n        this._currentMeasure.height = Math.abs(this._y1.getValue(this._host) - this._effectiveY2) + this._lineWidth;\n    };\n    Line.prototype._computeAlignment = function (parentMeasure) {\n        this._currentMeasure.left = parentMeasure.left + Math.min(this._x1.getValue(this._host), this._effectiveX2) - this._lineWidth / 2;\n        this._currentMeasure.top = parentMeasure.top + Math.min(this._y1.getValue(this._host), this._effectiveY2) - this._lineWidth / 2;\n    };\n    /**\n     * Move one end of the line given 3D cartesian coordinates.\n     * @param position Targeted world position\n     * @param scene Scene\n     * @param end (opt) Set to true to assign x2 and y2 coordinates of the line. Default assign to x1 and y1.\n     */\n    Line.prototype.moveToVector3 = function (position, scene, end) {\n        if (end === void 0) { end = false; }\n        if (!this._host || this.parent !== this._host._rootContainer) {\n            Tools.Error(\"Cannot move a control to a vector3 if the control is not at root level\");\n            return;\n        }\n        var globalViewport = this._host._getGlobalViewport();\n        var projectedPosition = Vector3.Project(position, Matrix.Identity(), scene.getTransformMatrix(), globalViewport);\n        this._moveToProjectedPosition(projectedPosition, end);\n        if (projectedPosition.z < 0 || projectedPosition.z > 1) {\n            this.notRenderable = true;\n            return;\n        }\n        this.notRenderable = false;\n    };\n    /**\n     * Move one end of the line to a position in screen absolute space.\n     * @param projectedPosition Position in screen absolute space (X, Y)\n     * @param end (opt) Set to true to assign x2 and y2 coordinates of the line. Default assign to x1 and y1.\n     */\n    Line.prototype._moveToProjectedPosition = function (projectedPosition, end) {\n        if (end === void 0) { end = false; }\n        var x = projectedPosition.x + this._linkOffsetX.getValue(this._host) + \"px\";\n        var y = projectedPosition.y + this._linkOffsetY.getValue(this._host) + \"px\";\n        if (end) {\n            this.x2 = x;\n            this.y2 = y;\n            this._x2.ignoreAdaptiveScaling = true;\n            this._y2.ignoreAdaptiveScaling = true;\n        }\n        else {\n            this.x1 = x;\n            this.y1 = y;\n            this._x1.ignoreAdaptiveScaling = true;\n            this._y1.ignoreAdaptiveScaling = true;\n        }\n    };\n    __decorate([\n        serialize()\n    ], Line.prototype, \"dash\", null);\n    __decorate([\n        serialize()\n    ], Line.prototype, \"x1\", null);\n    __decorate([\n        serialize()\n    ], Line.prototype, \"y1\", null);\n    __decorate([\n        serialize()\n    ], Line.prototype, \"x2\", null);\n    __decorate([\n        serialize()\n    ], Line.prototype, \"y2\", null);\n    __decorate([\n        serialize()\n    ], Line.prototype, \"lineWidth\", null);\n    return Line;\n}(Control));\nexport { Line };\nRegisterClass(\"BABYLON.GUI.Line\", Line);\n//# sourceMappingURL=line.js.map","import { __decorate, __extends } from \"tslib\";\nimport { AbstractMesh } from \"@babylonjs/core/Meshes/abstractMesh.js\";\nimport { Control } from \"./control.js\";\nimport { MultiLinePoint } from \"../multiLinePoint.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { serialize } from \"@babylonjs/core/Misc/decorators.js\";\n/**\n * Class used to create multi line control\n */\nvar MultiLine = /** @class */ (function (_super) {\n    __extends(MultiLine, _super);\n    /**\n     * Creates a new MultiLine\n     * @param name defines the control name\n     */\n    function MultiLine(name) {\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        _this._lineWidth = 1;\n        /** Function called when a point is updated */\n        _this.onPointUpdate = function () {\n            _this._markAsDirty();\n        };\n        _this._automaticSize = true;\n        _this.isHitTestVisible = false;\n        _this._horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        _this._verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n        _this._dash = [];\n        _this._points = [];\n        return _this;\n    }\n    Object.defineProperty(MultiLine.prototype, \"dash\", {\n        /** Gets or sets dash pattern */\n        get: function () {\n            return this._dash;\n        },\n        set: function (value) {\n            if (this._dash === value) {\n                return;\n            }\n            this._dash = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Gets point stored at specified index\n     * @param index defines the index to look for\n     * @returns the requested point if found\n     */\n    MultiLine.prototype.getAt = function (index) {\n        if (!this._points[index]) {\n            this._points[index] = new MultiLinePoint(this);\n        }\n        return this._points[index];\n    };\n    /**\n     * Adds new points to the point collection\n     * @param items defines the list of items (mesh, control or 2d coordinates) to add\n     * @returns the list of created MultiLinePoint\n     */\n    MultiLine.prototype.add = function () {\n        var _this = this;\n        var items = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            items[_i] = arguments[_i];\n        }\n        return items.map(function (item) { return _this.push(item); });\n    };\n    /**\n     * Adds a new point to the point collection\n     * @param item defines the item (mesh, control or 2d coordinates) to add\n     * @returns the created MultiLinePoint\n     */\n    MultiLine.prototype.push = function (item) {\n        var point = this.getAt(this._points.length);\n        if (item == null) {\n            return point;\n        }\n        if (item instanceof AbstractMesh) {\n            point.mesh = item;\n        }\n        else if (item instanceof Control) {\n            point.control = item;\n        }\n        else if (item.x != null && item.y != null) {\n            point.x = item.x;\n            point.y = item.y;\n        }\n        return point;\n    };\n    /**\n     * Remove a specific value or point from the active point collection\n     * @param value defines the value or point to remove\n     */\n    MultiLine.prototype.remove = function (value) {\n        var index;\n        if (value instanceof MultiLinePoint) {\n            index = this._points.indexOf(value);\n            if (index === -1) {\n                return;\n            }\n        }\n        else {\n            index = value;\n        }\n        var point = this._points[index];\n        if (!point) {\n            return;\n        }\n        point.dispose();\n        this._points.splice(index, 1);\n    };\n    /**\n     * Resets this object to initial state (no point)\n     */\n    MultiLine.prototype.reset = function () {\n        while (this._points.length > 0) {\n            this.remove(this._points.length - 1);\n        }\n    };\n    /**\n     * Resets all links\n     */\n    MultiLine.prototype.resetLinks = function () {\n        this._points.forEach(function (point) {\n            if (point != null) {\n                point.resetLinks();\n            }\n        });\n    };\n    Object.defineProperty(MultiLine.prototype, \"lineWidth\", {\n        /** Gets or sets line width */\n        get: function () {\n            return this._lineWidth;\n        },\n        set: function (value) {\n            if (this._lineWidth === value) {\n                return;\n            }\n            this._lineWidth = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MultiLine.prototype, \"horizontalAlignment\", {\n        set: function (value) {\n            return;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MultiLine.prototype, \"verticalAlignment\", {\n        set: function (value) {\n            return;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MultiLine.prototype._getTypeName = function () {\n        return \"MultiLine\";\n    };\n    MultiLine.prototype._draw = function (context) {\n        context.save();\n        if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n            context.shadowColor = this.shadowColor;\n            context.shadowBlur = this.shadowBlur;\n            context.shadowOffsetX = this.shadowOffsetX;\n            context.shadowOffsetY = this.shadowOffsetY;\n        }\n        this._applyStates(context);\n        context.strokeStyle = this.color;\n        context.lineWidth = this._lineWidth;\n        context.setLineDash(this._dash);\n        context.beginPath();\n        var first = true; //first index is not necessarily 0\n        var previousPoint;\n        this._points.forEach(function (point) {\n            if (!point) {\n                return;\n            }\n            if (first) {\n                context.moveTo(point._point.x, point._point.y);\n                first = false;\n            }\n            else {\n                if (point._point.z < 1 && previousPoint.z < 1) {\n                    context.lineTo(point._point.x, point._point.y);\n                }\n                else {\n                    context.moveTo(point._point.x, point._point.y);\n                }\n            }\n            previousPoint = point._point;\n        });\n        context.stroke();\n        context.restore();\n    };\n    MultiLine.prototype._additionalProcessing = function () {\n        var _this = this;\n        this._minX = null;\n        this._minY = null;\n        this._maxX = null;\n        this._maxY = null;\n        this._points.forEach(function (point) {\n            if (!point) {\n                return;\n            }\n            point.translate();\n            if (_this._minX == null || point._point.x < _this._minX) {\n                _this._minX = point._point.x;\n            }\n            if (_this._minY == null || point._point.y < _this._minY) {\n                _this._minY = point._point.y;\n            }\n            if (_this._maxX == null || point._point.x > _this._maxX) {\n                _this._maxX = point._point.x;\n            }\n            if (_this._maxY == null || point._point.y > _this._maxY) {\n                _this._maxY = point._point.y;\n            }\n        });\n        if (this._minX == null) {\n            this._minX = 0;\n        }\n        if (this._minY == null) {\n            this._minY = 0;\n        }\n        if (this._maxX == null) {\n            this._maxX = 0;\n        }\n        if (this._maxY == null) {\n            this._maxY = 0;\n        }\n    };\n    MultiLine.prototype._measure = function () {\n        if (this._minX == null || this._maxX == null || this._minY == null || this._maxY == null) {\n            return;\n        }\n        this._currentMeasure.width = Math.abs(this._maxX - this._minX) + this._lineWidth;\n        this._currentMeasure.height = Math.abs(this._maxY - this._minY) + this._lineWidth;\n    };\n    MultiLine.prototype._computeAlignment = function () {\n        if (this._minX == null || this._minY == null) {\n            return;\n        }\n        this._currentMeasure.left = this._minX - this._lineWidth / 2;\n        this._currentMeasure.top = this._minY - this._lineWidth / 2;\n    };\n    MultiLine.prototype.dispose = function () {\n        this.reset();\n        _super.prototype.dispose.call(this);\n    };\n    __decorate([\n        serialize()\n    ], MultiLine.prototype, \"dash\", null);\n    return MultiLine;\n}(Control));\nexport { MultiLine };\nRegisterClass(\"BABYLON.GUI.MultiLine\", MultiLine);\n//# sourceMappingURL=multiLine.js.map","import { __decorate, __extends } from \"tslib\";\nimport { Observable } from \"@babylonjs/core/Misc/observable.js\";\nimport { Control } from \"./control.js\";\nimport { StackPanel } from \"./stackPanel.js\";\nimport { TextBlock } from \"./textBlock.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { serialize } from \"@babylonjs/core/Misc/decorators.js\";\n/**\n * Class used to create radio button controls\n */\nvar RadioButton = /** @class */ (function (_super) {\n    __extends(RadioButton, _super);\n    /**\n     * Creates a new RadioButton\n     * @param name defines the control name\n     */\n    function RadioButton(name) {\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        _this._isChecked = false;\n        _this._background = \"black\";\n        _this._checkSizeRatio = 0.8;\n        _this._thickness = 1;\n        /** Gets or sets group name */\n        _this.group = \"\";\n        /** Observable raised when isChecked is changed */\n        _this.onIsCheckedChangedObservable = new Observable();\n        _this.isPointerBlocker = true;\n        return _this;\n    }\n    Object.defineProperty(RadioButton.prototype, \"thickness\", {\n        /** Gets or sets border thickness */\n        get: function () {\n            return this._thickness;\n        },\n        set: function (value) {\n            if (this._thickness === value) {\n                return;\n            }\n            this._thickness = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RadioButton.prototype, \"checkSizeRatio\", {\n        /** Gets or sets a value indicating the ratio between overall size and check size */\n        get: function () {\n            return this._checkSizeRatio;\n        },\n        set: function (value) {\n            value = Math.max(Math.min(1, value), 0);\n            if (this._checkSizeRatio === value) {\n                return;\n            }\n            this._checkSizeRatio = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RadioButton.prototype, \"background\", {\n        /** Gets or sets background color */\n        get: function () {\n            return this._background;\n        },\n        set: function (value) {\n            if (this._background === value) {\n                return;\n            }\n            this._background = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(RadioButton.prototype, \"isChecked\", {\n        /** Gets or sets a boolean indicating if the checkbox is checked or not */\n        get: function () {\n            return this._isChecked;\n        },\n        set: function (value) {\n            var _this = this;\n            if (this._isChecked === value) {\n                return;\n            }\n            this._isChecked = value;\n            this._markAsDirty();\n            this.onIsCheckedChangedObservable.notifyObservers(value);\n            if (this._isChecked && this._host) {\n                // Update all controls from same group\n                this._host.executeOnAllControls(function (control) {\n                    if (control === _this) {\n                        return;\n                    }\n                    if (control.group === undefined) {\n                        return;\n                    }\n                    var childRadio = control;\n                    if (childRadio.group === _this.group) {\n                        childRadio.isChecked = false;\n                    }\n                });\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    RadioButton.prototype._getTypeName = function () {\n        return \"RadioButton\";\n    };\n    RadioButton.prototype._draw = function (context) {\n        context.save();\n        this._applyStates(context);\n        var actualWidth = this._currentMeasure.width - this._thickness;\n        var actualHeight = this._currentMeasure.height - this._thickness;\n        if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n            context.shadowColor = this.shadowColor;\n            context.shadowBlur = this.shadowBlur;\n            context.shadowOffsetX = this.shadowOffsetX;\n            context.shadowOffsetY = this.shadowOffsetY;\n        }\n        // Outer\n        Control.drawEllipse(this._currentMeasure.left + this._currentMeasure.width / 2, this._currentMeasure.top + this._currentMeasure.height / 2, this._currentMeasure.width / 2 - this._thickness / 2, this._currentMeasure.height / 2 - this._thickness / 2, context);\n        context.fillStyle = this._isEnabled ? this._background : this._disabledColor;\n        context.fill();\n        if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n            context.shadowBlur = 0;\n            context.shadowOffsetX = 0;\n            context.shadowOffsetY = 0;\n        }\n        context.strokeStyle = this.color;\n        context.lineWidth = this._thickness;\n        context.stroke();\n        // Inner\n        if (this._isChecked) {\n            context.fillStyle = this._isEnabled ? this.color : this._disabledColor;\n            var offsetWidth = actualWidth * this._checkSizeRatio;\n            var offseHeight = actualHeight * this._checkSizeRatio;\n            Control.drawEllipse(this._currentMeasure.left + this._currentMeasure.width / 2, this._currentMeasure.top + this._currentMeasure.height / 2, offsetWidth / 2 - this._thickness / 2, offseHeight / 2 - this._thickness / 2, context);\n            context.fill();\n        }\n        context.restore();\n    };\n    // Events\n    RadioButton.prototype._onPointerDown = function (target, coordinates, pointerId, buttonIndex, pi) {\n        if (!_super.prototype._onPointerDown.call(this, target, coordinates, pointerId, buttonIndex, pi)) {\n            return false;\n        }\n        if (this.isReadOnly) {\n            return true;\n        }\n        if (!this.isChecked) {\n            this.isChecked = true;\n        }\n        return true;\n    };\n    /**\n     * Utility function to easily create a radio button with a header\n     * @param title defines the label to use for the header\n     * @param group defines the group to use for the radio button\n     * @param isChecked defines the initial state of the radio button\n     * @param onValueChanged defines the callback to call when value changes\n     * @returns a StackPanel containing the radio button and a textBlock\n     */\n    RadioButton.AddRadioButtonWithHeader = function (title, group, isChecked, onValueChanged) {\n        var panel = new StackPanel();\n        panel.isVertical = false;\n        panel.height = \"30px\";\n        var radio = new RadioButton();\n        radio.width = \"20px\";\n        radio.height = \"20px\";\n        radio.isChecked = isChecked;\n        radio.color = \"green\";\n        radio.group = group;\n        radio.onIsCheckedChangedObservable.add(function (value) { return onValueChanged(radio, value); });\n        panel.addControl(radio);\n        var header = new TextBlock();\n        header.text = title;\n        header.width = \"180px\";\n        header.paddingLeft = \"5px\";\n        header.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        header.color = \"white\";\n        panel.addControl(header);\n        return panel;\n    };\n    __decorate([\n        serialize()\n    ], RadioButton.prototype, \"thickness\", null);\n    __decorate([\n        serialize()\n    ], RadioButton.prototype, \"group\", void 0);\n    __decorate([\n        serialize()\n    ], RadioButton.prototype, \"checkSizeRatio\", null);\n    __decorate([\n        serialize()\n    ], RadioButton.prototype, \"background\", null);\n    __decorate([\n        serialize()\n    ], RadioButton.prototype, \"isChecked\", null);\n    return RadioButton;\n}(Control));\nexport { RadioButton };\nRegisterClass(\"BABYLON.GUI.RadioButton\", RadioButton);\n//# sourceMappingURL=radioButton.js.map","import { __decorate, __extends } from \"tslib\";\nimport { Observable } from \"@babylonjs/core/Misc/observable.js\";\nimport { Control } from \"../control.js\";\nimport { ValueAndUnit } from \"../../valueAndUnit.js\";\nimport { serialize } from \"@babylonjs/core/Misc/decorators.js\";\n/**\n * Class used to create slider controls\n */\nvar BaseSlider = /** @class */ (function (_super) {\n    __extends(BaseSlider, _super);\n    /**\n     * Creates a new BaseSlider\n     * @param name defines the control name\n     */\n    function BaseSlider(name) {\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        _this._thumbWidth = new ValueAndUnit(20, ValueAndUnit.UNITMODE_PIXEL, false);\n        _this._minimum = 0;\n        _this._maximum = 100;\n        _this._value = 50;\n        _this._isVertical = false;\n        _this._barOffset = new ValueAndUnit(5, ValueAndUnit.UNITMODE_PIXEL, false);\n        _this._isThumbClamped = false;\n        _this._displayThumb = true;\n        _this._step = 0;\n        _this._lastPointerDownId = -1;\n        // Shared rendering info\n        _this._effectiveBarOffset = 0;\n        /** Observable raised when the slider value changes */\n        _this.onValueChangedObservable = new Observable();\n        // Events\n        _this._pointerIsDown = false;\n        _this.isPointerBlocker = true;\n        return _this;\n    }\n    Object.defineProperty(BaseSlider.prototype, \"displayThumb\", {\n        /** Gets or sets a boolean indicating if the thumb must be rendered */\n        get: function () {\n            return this._displayThumb;\n        },\n        set: function (value) {\n            if (this._displayThumb === value) {\n                return;\n            }\n            this._displayThumb = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseSlider.prototype, \"step\", {\n        /** Gets or sets a step to apply to values (0 by default) */\n        get: function () {\n            return this._step;\n        },\n        set: function (value) {\n            if (this._step === value) {\n                return;\n            }\n            this._step = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseSlider.prototype, \"barOffset\", {\n        /** Gets or sets main bar offset (ie. the margin applied to the value bar) */\n        get: function () {\n            return this._barOffset.toString(this._host);\n        },\n        set: function (value) {\n            if (this._barOffset.toString(this._host) === value) {\n                return;\n            }\n            if (this._barOffset.fromString(value)) {\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseSlider.prototype, \"barOffsetInPixels\", {\n        /** Gets main bar offset in pixels*/\n        get: function () {\n            return this._barOffset.getValueInPixel(this._host, this._cachedParentMeasure.width);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseSlider.prototype, \"thumbWidth\", {\n        /** Gets or sets thumb width */\n        get: function () {\n            return this._thumbWidth.toString(this._host);\n        },\n        set: function (value) {\n            if (this._thumbWidth.toString(this._host) === value) {\n                return;\n            }\n            if (this._thumbWidth.fromString(value)) {\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseSlider.prototype, \"thumbWidthInPixels\", {\n        /** Gets thumb width in pixels */\n        get: function () {\n            return this._thumbWidth.getValueInPixel(this._host, this._cachedParentMeasure.width);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseSlider.prototype, \"minimum\", {\n        /** Gets or sets minimum value */\n        get: function () {\n            return this._minimum;\n        },\n        set: function (value) {\n            if (this._minimum === value) {\n                return;\n            }\n            this._minimum = value;\n            this._markAsDirty();\n            this.value = Math.max(Math.min(this.value, this._maximum), this._minimum);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseSlider.prototype, \"maximum\", {\n        /** Gets or sets maximum value */\n        get: function () {\n            return this._maximum;\n        },\n        set: function (value) {\n            if (this._maximum === value) {\n                return;\n            }\n            this._maximum = value;\n            this._markAsDirty();\n            this.value = Math.max(Math.min(this.value, this._maximum), this._minimum);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseSlider.prototype, \"value\", {\n        /** Gets or sets current value */\n        get: function () {\n            return this._value;\n        },\n        set: function (value) {\n            value = Math.max(Math.min(value, this._maximum), this._minimum);\n            if (this._value === value) {\n                return;\n            }\n            this._value = value;\n            this._markAsDirty();\n            this.onValueChangedObservable.notifyObservers(this._value);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseSlider.prototype, \"isVertical\", {\n        /**Gets or sets a boolean indicating if the slider should be vertical or horizontal */\n        get: function () {\n            return this._isVertical;\n        },\n        set: function (value) {\n            if (this._isVertical === value) {\n                return;\n            }\n            this._isVertical = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseSlider.prototype, \"isThumbClamped\", {\n        /** Gets or sets a value indicating if the thumb can go over main bar extends */\n        get: function () {\n            return this._isThumbClamped;\n        },\n        set: function (value) {\n            if (this._isThumbClamped === value) {\n                return;\n            }\n            this._isThumbClamped = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BaseSlider.prototype._getTypeName = function () {\n        return \"BaseSlider\";\n    };\n    BaseSlider.prototype._getThumbPosition = function () {\n        if (this.isVertical) {\n            return ((this.maximum - this.value) / (this.maximum - this.minimum)) * this._backgroundBoxLength;\n        }\n        return ((this.value - this.minimum) / (this.maximum - this.minimum)) * this._backgroundBoxLength;\n    };\n    BaseSlider.prototype._getThumbThickness = function (type) {\n        var thumbThickness = 0;\n        switch (type) {\n            case \"circle\":\n                if (this._thumbWidth.isPixel) {\n                    thumbThickness = Math.max(this._thumbWidth.getValue(this._host), this._backgroundBoxThickness);\n                }\n                else {\n                    thumbThickness = this._backgroundBoxThickness * this._thumbWidth.getValue(this._host);\n                }\n                break;\n            case \"rectangle\":\n                if (this._thumbWidth.isPixel) {\n                    thumbThickness = Math.min(this._thumbWidth.getValue(this._host), this._backgroundBoxThickness);\n                }\n                else {\n                    thumbThickness = this._backgroundBoxThickness * this._thumbWidth.getValue(this._host);\n                }\n        }\n        return thumbThickness;\n    };\n    BaseSlider.prototype._prepareRenderingData = function (type) {\n        // Main bar\n        this._effectiveBarOffset = 0;\n        this._renderLeft = this._currentMeasure.left;\n        this._renderTop = this._currentMeasure.top;\n        this._renderWidth = this._currentMeasure.width;\n        this._renderHeight = this._currentMeasure.height;\n        this._backgroundBoxLength = Math.max(this._currentMeasure.width, this._currentMeasure.height);\n        this._backgroundBoxThickness = Math.min(this._currentMeasure.width, this._currentMeasure.height);\n        this._effectiveThumbThickness = this._getThumbThickness(type);\n        if (this.displayThumb) {\n            this._backgroundBoxLength -= this._effectiveThumbThickness;\n        }\n        //throw error when height is less than width for vertical slider\n        if (this.isVertical && this._currentMeasure.height < this._currentMeasure.width) {\n            console.error(\"Height should be greater than width\");\n            return;\n        }\n        if (this._barOffset.isPixel) {\n            this._effectiveBarOffset = Math.min(this._barOffset.getValue(this._host), this._backgroundBoxThickness);\n        }\n        else {\n            this._effectiveBarOffset = this._backgroundBoxThickness * this._barOffset.getValue(this._host);\n        }\n        this._backgroundBoxThickness -= this._effectiveBarOffset * 2;\n        if (this.isVertical) {\n            this._renderLeft += this._effectiveBarOffset;\n            if (!this.isThumbClamped && this.displayThumb) {\n                this._renderTop += this._effectiveThumbThickness / 2;\n            }\n            this._renderHeight = this._backgroundBoxLength;\n            this._renderWidth = this._backgroundBoxThickness;\n        }\n        else {\n            this._renderTop += this._effectiveBarOffset;\n            if (!this.isThumbClamped && this.displayThumb) {\n                this._renderLeft += this._effectiveThumbThickness / 2;\n            }\n            this._renderHeight = this._backgroundBoxThickness;\n            this._renderWidth = this._backgroundBoxLength;\n        }\n    };\n    /**\n     * @param x\n     * @param y\n     * @hidden\n     */\n    BaseSlider.prototype._updateValueFromPointer = function (x, y) {\n        if (this.rotation != 0) {\n            this._invertTransformMatrix.transformCoordinates(x, y, this._transformedPosition);\n            x = this._transformedPosition.x;\n            y = this._transformedPosition.y;\n        }\n        var value;\n        if (this._isVertical) {\n            value = this._minimum + (1 - (y - this._currentMeasure.top) / this._currentMeasure.height) * (this._maximum - this._minimum);\n        }\n        else {\n            value = this._minimum + ((x - this._currentMeasure.left) / this._currentMeasure.width) * (this._maximum - this._minimum);\n        }\n        this.value = this._step ? Math.round(value / this._step) * this._step : value;\n    };\n    BaseSlider.prototype._onPointerDown = function (target, coordinates, pointerId, buttonIndex, pi) {\n        if (!_super.prototype._onPointerDown.call(this, target, coordinates, pointerId, buttonIndex, pi)) {\n            return false;\n        }\n        if (this.isReadOnly) {\n            return true;\n        }\n        this._pointerIsDown = true;\n        this._updateValueFromPointer(coordinates.x, coordinates.y);\n        this._host._capturingControl[pointerId] = this;\n        this._lastPointerDownId = pointerId;\n        return true;\n    };\n    BaseSlider.prototype._onPointerMove = function (target, coordinates, pointerId, pi) {\n        // Only listen to pointer move events coming from the last pointer to click on the element (To support dual vr controller interaction)\n        if (pointerId != this._lastPointerDownId) {\n            return;\n        }\n        if (this._pointerIsDown && !this.isReadOnly) {\n            this._updateValueFromPointer(coordinates.x, coordinates.y);\n        }\n        _super.prototype._onPointerMove.call(this, target, coordinates, pointerId, pi);\n    };\n    BaseSlider.prototype._onPointerUp = function (target, coordinates, pointerId, buttonIndex, notifyClick) {\n        this._pointerIsDown = false;\n        delete this._host._capturingControl[pointerId];\n        _super.prototype._onPointerUp.call(this, target, coordinates, pointerId, buttonIndex, notifyClick);\n    };\n    BaseSlider.prototype._onCanvasBlur = function () {\n        this._forcePointerUp();\n        _super.prototype._onCanvasBlur.call(this);\n    };\n    __decorate([\n        serialize()\n    ], BaseSlider.prototype, \"displayThumb\", null);\n    __decorate([\n        serialize()\n    ], BaseSlider.prototype, \"step\", null);\n    __decorate([\n        serialize()\n    ], BaseSlider.prototype, \"barOffset\", null);\n    __decorate([\n        serialize()\n    ], BaseSlider.prototype, \"thumbWidth\", null);\n    __decorate([\n        serialize()\n    ], BaseSlider.prototype, \"minimum\", null);\n    __decorate([\n        serialize()\n    ], BaseSlider.prototype, \"maximum\", null);\n    __decorate([\n        serialize()\n    ], BaseSlider.prototype, \"value\", null);\n    __decorate([\n        serialize()\n    ], BaseSlider.prototype, \"isVertical\", null);\n    __decorate([\n        serialize()\n    ], BaseSlider.prototype, \"isThumbClamped\", null);\n    return BaseSlider;\n}(Control));\nexport { BaseSlider };\n//# sourceMappingURL=baseSlider.js.map","import { __decorate, __extends } from \"tslib\";\nimport { BaseSlider } from \"./baseSlider.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { serialize } from \"@babylonjs/core/Misc/decorators.js\";\n/**\n * Class used to create slider controls\n */\nvar Slider = /** @class */ (function (_super) {\n    __extends(Slider, _super);\n    /**\n     * Creates a new Slider\n     * @param name defines the control name\n     */\n    function Slider(name) {\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        _this._background = \"black\";\n        _this._borderColor = \"white\";\n        _this._thumbColor = \"\";\n        _this._isThumbCircle = false;\n        _this._displayValueBar = true;\n        return _this;\n    }\n    Object.defineProperty(Slider.prototype, \"displayValueBar\", {\n        /** Gets or sets a boolean indicating if the value bar must be rendered */\n        get: function () {\n            return this._displayValueBar;\n        },\n        set: function (value) {\n            if (this._displayValueBar === value) {\n                return;\n            }\n            this._displayValueBar = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Slider.prototype, \"borderColor\", {\n        /** Gets or sets border color */\n        get: function () {\n            return this._borderColor;\n        },\n        set: function (value) {\n            if (this._borderColor === value) {\n                return;\n            }\n            this._borderColor = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Slider.prototype, \"background\", {\n        /** Gets or sets background color */\n        get: function () {\n            return this._background;\n        },\n        set: function (value) {\n            if (this._background === value) {\n                return;\n            }\n            this._background = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Slider.prototype, \"thumbColor\", {\n        /** Gets or sets thumb's color */\n        get: function () {\n            return this._thumbColor;\n        },\n        set: function (value) {\n            if (this._thumbColor === value) {\n                return;\n            }\n            this._thumbColor = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Slider.prototype, \"isThumbCircle\", {\n        /** Gets or sets a boolean indicating if the thumb should be round or square */\n        get: function () {\n            return this._isThumbCircle;\n        },\n        set: function (value) {\n            if (this._isThumbCircle === value) {\n                return;\n            }\n            this._isThumbCircle = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Slider.prototype._getTypeName = function () {\n        return \"Slider\";\n    };\n    Slider.prototype._draw = function (context) {\n        context.save();\n        this._applyStates(context);\n        this._prepareRenderingData(this.isThumbCircle ? \"circle\" : \"rectangle\");\n        var left = this._renderLeft;\n        var top = this._renderTop;\n        var width = this._renderWidth;\n        var height = this._renderHeight;\n        var radius = 0;\n        if (this.isThumbClamped && this.isThumbCircle) {\n            if (this.isVertical) {\n                top += this._effectiveThumbThickness / 2;\n            }\n            else {\n                left += this._effectiveThumbThickness / 2;\n            }\n            radius = this._backgroundBoxThickness / 2;\n        }\n        else {\n            radius = (this._effectiveThumbThickness - this._effectiveBarOffset) / 2;\n        }\n        if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n            context.shadowColor = this.shadowColor;\n            context.shadowBlur = this.shadowBlur;\n            context.shadowOffsetX = this.shadowOffsetX;\n            context.shadowOffsetY = this.shadowOffsetY;\n        }\n        var thumbPosition = this._getThumbPosition();\n        context.fillStyle = this._background;\n        if (this.isVertical) {\n            if (this.isThumbClamped) {\n                if (this.isThumbCircle) {\n                    context.beginPath();\n                    context.arc(left + this._backgroundBoxThickness / 2, top, radius, Math.PI, 2 * Math.PI);\n                    context.fill();\n                    context.fillRect(left, top, width, height);\n                }\n                else {\n                    context.fillRect(left, top, width, height + this._effectiveThumbThickness);\n                }\n            }\n            else {\n                context.fillRect(left, top, width, height);\n            }\n        }\n        else {\n            if (this.isThumbClamped) {\n                if (this.isThumbCircle) {\n                    context.beginPath();\n                    context.arc(left + this._backgroundBoxLength, top + this._backgroundBoxThickness / 2, radius, 0, 2 * Math.PI);\n                    context.fill();\n                    context.fillRect(left, top, width, height);\n                }\n                else {\n                    context.fillRect(left, top, width + this._effectiveThumbThickness, height);\n                }\n            }\n            else {\n                context.fillRect(left, top, width, height);\n            }\n        }\n        if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n            context.shadowBlur = 0;\n            context.shadowOffsetX = 0;\n            context.shadowOffsetY = 0;\n        }\n        // Value bar\n        context.fillStyle = this.color;\n        if (this._displayValueBar) {\n            if (this.isVertical) {\n                if (this.isThumbClamped) {\n                    if (this.isThumbCircle) {\n                        context.beginPath();\n                        context.arc(left + this._backgroundBoxThickness / 2, top + this._backgroundBoxLength, radius, 0, 2 * Math.PI);\n                        context.fill();\n                        context.fillRect(left, top + thumbPosition, width, height - thumbPosition);\n                    }\n                    else {\n                        context.fillRect(left, top + thumbPosition, width, height - thumbPosition + this._effectiveThumbThickness);\n                    }\n                }\n                else {\n                    context.fillRect(left, top + thumbPosition, width, height - thumbPosition);\n                }\n            }\n            else {\n                if (this.isThumbClamped) {\n                    if (this.isThumbCircle) {\n                        context.beginPath();\n                        context.arc(left, top + this._backgroundBoxThickness / 2, radius, 0, 2 * Math.PI);\n                        context.fill();\n                        context.fillRect(left, top, thumbPosition, height);\n                    }\n                    else {\n                        context.fillRect(left, top, thumbPosition, height);\n                    }\n                }\n                else {\n                    context.fillRect(left, top, thumbPosition, height);\n                }\n            }\n        }\n        // Thumb\n        context.fillStyle = this._thumbColor || this.color;\n        if (this.displayThumb) {\n            if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n                context.shadowColor = this.shadowColor;\n                context.shadowBlur = this.shadowBlur;\n                context.shadowOffsetX = this.shadowOffsetX;\n                context.shadowOffsetY = this.shadowOffsetY;\n            }\n            if (this._isThumbCircle) {\n                context.beginPath();\n                if (this.isVertical) {\n                    context.arc(left + this._backgroundBoxThickness / 2, top + thumbPosition, radius, 0, 2 * Math.PI);\n                }\n                else {\n                    context.arc(left + thumbPosition, top + this._backgroundBoxThickness / 2, radius, 0, 2 * Math.PI);\n                }\n                context.fill();\n                if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n                    context.shadowBlur = 0;\n                    context.shadowOffsetX = 0;\n                    context.shadowOffsetY = 0;\n                }\n                context.strokeStyle = this._borderColor;\n                context.stroke();\n            }\n            else {\n                if (this.isVertical) {\n                    context.fillRect(left - this._effectiveBarOffset, this._currentMeasure.top + thumbPosition, this._currentMeasure.width, this._effectiveThumbThickness);\n                }\n                else {\n                    context.fillRect(this._currentMeasure.left + thumbPosition, this._currentMeasure.top, this._effectiveThumbThickness, this._currentMeasure.height);\n                }\n                if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n                    context.shadowBlur = 0;\n                    context.shadowOffsetX = 0;\n                    context.shadowOffsetY = 0;\n                }\n                context.strokeStyle = this._borderColor;\n                if (this.isVertical) {\n                    context.strokeRect(left - this._effectiveBarOffset, this._currentMeasure.top + thumbPosition, this._currentMeasure.width, this._effectiveThumbThickness);\n                }\n                else {\n                    context.strokeRect(this._currentMeasure.left + thumbPosition, this._currentMeasure.top, this._effectiveThumbThickness, this._currentMeasure.height);\n                }\n            }\n        }\n        context.restore();\n    };\n    __decorate([\n        serialize()\n    ], Slider.prototype, \"displayValueBar\", null);\n    __decorate([\n        serialize()\n    ], Slider.prototype, \"borderColor\", null);\n    __decorate([\n        serialize()\n    ], Slider.prototype, \"background\", null);\n    __decorate([\n        serialize()\n    ], Slider.prototype, \"thumbColor\", null);\n    __decorate([\n        serialize()\n    ], Slider.prototype, \"isThumbCircle\", null);\n    return Slider;\n}(BaseSlider));\nexport { Slider };\nRegisterClass(\"BABYLON.GUI.Slider\", Slider);\n//# sourceMappingURL=slider.js.map","import { __extends } from \"tslib\";\nimport { Rectangle } from \"./rectangle.js\";\nimport { StackPanel } from \"./stackPanel.js\";\nimport { Control } from \"./control.js\";\nimport { TextBlock } from \"./textBlock.js\";\nimport { Checkbox } from \"./checkbox.js\";\nimport { RadioButton } from \"./radioButton.js\";\nimport { Slider } from \"./sliders/slider.js\";\nimport { Container } from \"./container.js\";\n/** Class used to create a RadioGroup\n * which contains groups of radio buttons\n */\nvar SelectorGroup = /** @class */ (function () {\n    /**\n     * Creates a new SelectorGroup\n     * @param name of group, used as a group heading\n     */\n    function SelectorGroup(\n    /** name of SelectorGroup */\n    name) {\n        this.name = name;\n        this._groupPanel = new StackPanel();\n        this._selectors = new Array();\n        this._groupPanel.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n        this._groupPanel.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        this._groupHeader = this._addGroupHeader(name);\n    }\n    Object.defineProperty(SelectorGroup.prototype, \"groupPanel\", {\n        /** Gets the groupPanel of the SelectorGroup  */\n        get: function () {\n            return this._groupPanel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SelectorGroup.prototype, \"selectors\", {\n        /** Gets the selectors array */\n        get: function () {\n            return this._selectors;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SelectorGroup.prototype, \"header\", {\n        /** Gets and sets the group header */\n        get: function () {\n            return this._groupHeader.text;\n        },\n        set: function (label) {\n            if (this._groupHeader.text === \"label\") {\n                return;\n            }\n            this._groupHeader.text = label;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * @param text\n     * @hidden\n     */\n    SelectorGroup.prototype._addGroupHeader = function (text) {\n        var groupHeading = new TextBlock(\"groupHead\", text);\n        groupHeading.width = 0.9;\n        groupHeading.height = \"30px\";\n        groupHeading.textWrapping = true;\n        groupHeading.color = \"black\";\n        groupHeading.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        groupHeading.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        groupHeading.left = \"2px\";\n        this._groupPanel.addControl(groupHeading);\n        return groupHeading;\n    };\n    /**\n     * @param selectorNb\n     * @hidden\n     */\n    SelectorGroup.prototype._getSelector = function (selectorNb) {\n        if (selectorNb < 0 || selectorNb >= this._selectors.length) {\n            return;\n        }\n        return this._selectors[selectorNb];\n    };\n    /** Removes the selector at the given position\n     * @param selectorNb the position of the selector within the group\n     */\n    SelectorGroup.prototype.removeSelector = function (selectorNb) {\n        if (selectorNb < 0 || selectorNb >= this._selectors.length) {\n            return;\n        }\n        this._groupPanel.removeControl(this._selectors[selectorNb]);\n        this._selectors.splice(selectorNb, 1);\n    };\n    return SelectorGroup;\n}());\nexport { SelectorGroup };\n/** Class used to create a CheckboxGroup\n * which contains groups of checkbox buttons\n */\nvar CheckboxGroup = /** @class */ (function (_super) {\n    __extends(CheckboxGroup, _super);\n    function CheckboxGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /** Adds a checkbox as a control\n     * @param text is the label for the selector\n     * @param func is the function called when the Selector is checked\n     * @param checked is true when Selector is checked\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    CheckboxGroup.prototype.addCheckbox = function (text, func, checked) {\n        if (func === void 0) { func = function (s) { }; }\n        if (checked === void 0) { checked = false; }\n        checked = checked || false;\n        var button = new Checkbox();\n        button.width = \"20px\";\n        button.height = \"20px\";\n        button.color = \"#364249\";\n        button.background = \"#CCCCCC\";\n        button.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        button.onIsCheckedChangedObservable.add(function (state) {\n            func(state);\n        });\n        var _selector = Control.AddHeader(button, text, \"200px\", { isHorizontal: true, controlFirst: true });\n        _selector.height = \"30px\";\n        _selector.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        _selector.left = \"4px\";\n        this.groupPanel.addControl(_selector);\n        this.selectors.push(_selector);\n        button.isChecked = checked;\n        if (this.groupPanel.parent && this.groupPanel.parent.parent) {\n            button.color = this.groupPanel.parent.parent.buttonColor;\n            button.background = this.groupPanel.parent.parent.buttonBackground;\n        }\n    };\n    /**\n     * @param selectorNb\n     * @param label\n     * @hidden\n     */\n    CheckboxGroup.prototype._setSelectorLabel = function (selectorNb, label) {\n        this.selectors[selectorNb].children[1].text = label;\n    };\n    /**\n     * @param selectorNb\n     * @param color\n     * @hidden\n     */\n    CheckboxGroup.prototype._setSelectorLabelColor = function (selectorNb, color) {\n        this.selectors[selectorNb].children[1].color = color;\n    };\n    /**\n     * @param selectorNb\n     * @param color\n     * @hidden\n     */\n    CheckboxGroup.prototype._setSelectorButtonColor = function (selectorNb, color) {\n        this.selectors[selectorNb].children[0].color = color;\n    };\n    /**\n     * @param selectorNb\n     * @param color\n     * @hidden\n     */\n    CheckboxGroup.prototype._setSelectorButtonBackground = function (selectorNb, color) {\n        this.selectors[selectorNb].children[0].background = color;\n    };\n    return CheckboxGroup;\n}(SelectorGroup));\nexport { CheckboxGroup };\n/** Class used to create a RadioGroup\n * which contains groups of radio buttons\n */\nvar RadioGroup = /** @class */ (function (_super) {\n    __extends(RadioGroup, _super);\n    function RadioGroup() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._selectNb = 0;\n        return _this;\n    }\n    /** Adds a radio button as a control\n     * @param label is the label for the selector\n     * @param func is the function called when the Selector is checked\n     * @param checked is true when Selector is checked\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    RadioGroup.prototype.addRadio = function (label, func, checked) {\n        if (func === void 0) { func = function (n) { }; }\n        if (checked === void 0) { checked = false; }\n        var nb = this._selectNb++;\n        var button = new RadioButton();\n        button.name = label;\n        button.width = \"20px\";\n        button.height = \"20px\";\n        button.color = \"#364249\";\n        button.background = \"#CCCCCC\";\n        button.group = this.name;\n        button.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        button.onIsCheckedChangedObservable.add(function (state) {\n            if (state) {\n                func(nb);\n            }\n        });\n        var _selector = Control.AddHeader(button, label, \"200px\", { isHorizontal: true, controlFirst: true });\n        _selector.height = \"30px\";\n        _selector.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        _selector.left = \"4px\";\n        this.groupPanel.addControl(_selector);\n        this.selectors.push(_selector);\n        button.isChecked = checked;\n        if (this.groupPanel.parent && this.groupPanel.parent.parent) {\n            button.color = this.groupPanel.parent.parent.buttonColor;\n            button.background = this.groupPanel.parent.parent.buttonBackground;\n        }\n    };\n    /**\n     * @param selectorNb\n     * @param label\n     * @hidden\n     */\n    RadioGroup.prototype._setSelectorLabel = function (selectorNb, label) {\n        this.selectors[selectorNb].children[1].text = label;\n    };\n    /**\n     * @param selectorNb\n     * @param color\n     * @hidden\n     */\n    RadioGroup.prototype._setSelectorLabelColor = function (selectorNb, color) {\n        this.selectors[selectorNb].children[1].color = color;\n    };\n    /**\n     * @param selectorNb\n     * @param color\n     * @hidden\n     */\n    RadioGroup.prototype._setSelectorButtonColor = function (selectorNb, color) {\n        this.selectors[selectorNb].children[0].color = color;\n    };\n    /**\n     * @param selectorNb\n     * @param color\n     * @hidden\n     */\n    RadioGroup.prototype._setSelectorButtonBackground = function (selectorNb, color) {\n        this.selectors[selectorNb].children[0].background = color;\n    };\n    return RadioGroup;\n}(SelectorGroup));\nexport { RadioGroup };\n/** Class used to create a SliderGroup\n * which contains groups of slider buttons\n */\nvar SliderGroup = /** @class */ (function (_super) {\n    __extends(SliderGroup, _super);\n    function SliderGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Adds a slider to the SelectorGroup\n     * @param label is the label for the SliderBar\n     * @param func is the function called when the Slider moves\n     * @param unit is a string describing the units used, eg degrees or metres\n     * @param min is the minimum value for the Slider\n     * @param max is the maximum value for the Slider\n     * @param value is the start value for the Slider between min and max\n     * @param onValueChange is the function used to format the value displayed, eg radians to degrees\n     */\n    SliderGroup.prototype.addSlider = function (label, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    func, unit, min, max, value, onValueChange) {\n        if (func === void 0) { func = function (v) { }; }\n        if (unit === void 0) { unit = \"Units\"; }\n        if (min === void 0) { min = 0; }\n        if (max === void 0) { max = 0; }\n        if (value === void 0) { value = 0; }\n        if (onValueChange === void 0) { onValueChange = function (v) {\n            return v | 0;\n        }; }\n        var button = new Slider();\n        button.name = unit;\n        button.value = value;\n        button.minimum = min;\n        button.maximum = max;\n        button.width = 0.9;\n        button.height = \"20px\";\n        button.color = \"#364249\";\n        button.background = \"#CCCCCC\";\n        button.borderColor = \"black\";\n        button.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        button.left = \"4px\";\n        button.paddingBottom = \"4px\";\n        button.onValueChangedObservable.add(function (value) {\n            button.parent.children[0].text = button.parent.children[0].name + \": \" + onValueChange(value) + \" \" + button.name;\n            func(value);\n        });\n        var _selector = Control.AddHeader(button, label + \": \" + onValueChange(value) + \" \" + unit, \"30px\", { isHorizontal: false, controlFirst: false });\n        _selector.height = \"60px\";\n        _selector.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        _selector.left = \"4px\";\n        _selector.children[0].name = label;\n        this.groupPanel.addControl(_selector);\n        this.selectors.push(_selector);\n        if (this.groupPanel.parent && this.groupPanel.parent.parent) {\n            button.color = this.groupPanel.parent.parent.buttonColor;\n            button.background = this.groupPanel.parent.parent.buttonBackground;\n        }\n    };\n    /**\n     * @param selectorNb\n     * @param label\n     * @hidden\n     */\n    SliderGroup.prototype._setSelectorLabel = function (selectorNb, label) {\n        this.selectors[selectorNb].children[0].name = label;\n        this.selectors[selectorNb].children[0].text =\n            label + \": \" + this.selectors[selectorNb].children[1].value + \" \" + this.selectors[selectorNb].children[1].name;\n    };\n    /**\n     * @param selectorNb\n     * @param color\n     * @hidden\n     */\n    SliderGroup.prototype._setSelectorLabelColor = function (selectorNb, color) {\n        this.selectors[selectorNb].children[0].color = color;\n    };\n    /**\n     * @param selectorNb\n     * @param color\n     * @hidden\n     */\n    SliderGroup.prototype._setSelectorButtonColor = function (selectorNb, color) {\n        this.selectors[selectorNb].children[1].color = color;\n    };\n    /**\n     * @param selectorNb\n     * @param color\n     * @hidden\n     */\n    SliderGroup.prototype._setSelectorButtonBackground = function (selectorNb, color) {\n        this.selectors[selectorNb].children[1].background = color;\n    };\n    return SliderGroup;\n}(SelectorGroup));\nexport { SliderGroup };\n/** Class used to hold the controls for the checkboxes, radio buttons and sliders\n * @see https://doc.babylonjs.com/how_to/selector\n */\nvar SelectionPanel = /** @class */ (function (_super) {\n    __extends(SelectionPanel, _super);\n    /**\n     * Creates a new SelectionPanel\n     * @param name of SelectionPanel\n     * @param groups is an array of SelectionGroups\n     */\n    function SelectionPanel(\n    /** name of SelectionPanel */\n    name, \n    /** an array of SelectionGroups */\n    groups) {\n        if (groups === void 0) { groups = []; }\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        _this.groups = groups;\n        _this._buttonColor = \"#364249\";\n        _this._buttonBackground = \"#CCCCCC\";\n        _this._headerColor = \"black\";\n        _this._barColor = \"white\";\n        _this._barHeight = \"2px\";\n        _this._spacerHeight = \"20px\";\n        _this._bars = new Array();\n        _this._groups = groups;\n        _this.thickness = 2;\n        _this._panel = new StackPanel();\n        _this._panel.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n        _this._panel.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        _this._panel.top = 5;\n        _this._panel.left = 5;\n        _this._panel.width = 0.95;\n        if (groups.length > 0) {\n            for (var i = 0; i < groups.length - 1; i++) {\n                _this._panel.addControl(groups[i].groupPanel);\n                _this._addSpacer();\n            }\n            _this._panel.addControl(groups[groups.length - 1].groupPanel);\n        }\n        _this.addControl(_this._panel);\n        return _this;\n    }\n    SelectionPanel.prototype._getTypeName = function () {\n        return \"SelectionPanel\";\n    };\n    Object.defineProperty(SelectionPanel.prototype, \"panel\", {\n        /** Gets the (stack) panel of the SelectionPanel  */\n        get: function () {\n            return this._panel;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SelectionPanel.prototype, \"headerColor\", {\n        /** Gets or sets the headerColor */\n        get: function () {\n            return this._headerColor;\n        },\n        set: function (color) {\n            if (this._headerColor === color) {\n                return;\n            }\n            this._headerColor = color;\n            this._setHeaderColor();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SelectionPanel.prototype._setHeaderColor = function () {\n        for (var i = 0; i < this._groups.length; i++) {\n            this._groups[i].groupPanel.children[0].color = this._headerColor;\n        }\n    };\n    Object.defineProperty(SelectionPanel.prototype, \"buttonColor\", {\n        /** Gets or sets the button color */\n        get: function () {\n            return this._buttonColor;\n        },\n        set: function (color) {\n            if (this._buttonColor === color) {\n                return;\n            }\n            this._buttonColor = color;\n            this._setbuttonColor();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SelectionPanel.prototype._setbuttonColor = function () {\n        for (var i = 0; i < this._groups.length; i++) {\n            for (var j = 0; j < this._groups[i].selectors.length; j++) {\n                this._groups[i]._setSelectorButtonColor(j, this._buttonColor);\n            }\n        }\n    };\n    Object.defineProperty(SelectionPanel.prototype, \"labelColor\", {\n        /** Gets or sets the label color */\n        get: function () {\n            return this._labelColor;\n        },\n        set: function (color) {\n            if (this._labelColor === color) {\n                return;\n            }\n            this._labelColor = color;\n            this._setLabelColor();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SelectionPanel.prototype._setLabelColor = function () {\n        for (var i = 0; i < this._groups.length; i++) {\n            for (var j = 0; j < this._groups[i].selectors.length; j++) {\n                this._groups[i]._setSelectorLabelColor(j, this._labelColor);\n            }\n        }\n    };\n    Object.defineProperty(SelectionPanel.prototype, \"buttonBackground\", {\n        /** Gets or sets the button background */\n        get: function () {\n            return this._buttonBackground;\n        },\n        set: function (color) {\n            if (this._buttonBackground === color) {\n                return;\n            }\n            this._buttonBackground = color;\n            this._setButtonBackground();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SelectionPanel.prototype._setButtonBackground = function () {\n        for (var i = 0; i < this._groups.length; i++) {\n            for (var j = 0; j < this._groups[i].selectors.length; j++) {\n                this._groups[i]._setSelectorButtonBackground(j, this._buttonBackground);\n            }\n        }\n    };\n    Object.defineProperty(SelectionPanel.prototype, \"barColor\", {\n        /** Gets or sets the color of separator bar */\n        get: function () {\n            return this._barColor;\n        },\n        set: function (color) {\n            if (this._barColor === color) {\n                return;\n            }\n            this._barColor = color;\n            this._setBarColor();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SelectionPanel.prototype._setBarColor = function () {\n        for (var i = 0; i < this._bars.length; i++) {\n            this._bars[i].children[0].background = this._barColor;\n        }\n    };\n    Object.defineProperty(SelectionPanel.prototype, \"barHeight\", {\n        /** Gets or sets the height of separator bar */\n        get: function () {\n            return this._barHeight;\n        },\n        set: function (value) {\n            if (this._barHeight === value) {\n                return;\n            }\n            this._barHeight = value;\n            this._setBarHeight();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SelectionPanel.prototype._setBarHeight = function () {\n        for (var i = 0; i < this._bars.length; i++) {\n            this._bars[i].children[0].height = this._barHeight;\n        }\n    };\n    Object.defineProperty(SelectionPanel.prototype, \"spacerHeight\", {\n        /** Gets or sets the height of spacers*/\n        get: function () {\n            return this._spacerHeight;\n        },\n        set: function (value) {\n            if (this._spacerHeight === value) {\n                return;\n            }\n            this._spacerHeight = value;\n            this._setSpacerHeight();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SelectionPanel.prototype._setSpacerHeight = function () {\n        for (var i = 0; i < this._bars.length; i++) {\n            this._bars[i].height = this._spacerHeight;\n        }\n    };\n    /** Adds a bar between groups */\n    SelectionPanel.prototype._addSpacer = function () {\n        var separator = new Container();\n        separator.width = 1;\n        separator.height = this._spacerHeight;\n        separator.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        var bar = new Rectangle();\n        bar.width = 1;\n        bar.height = this._barHeight;\n        bar.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        bar.verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\n        bar.background = this._barColor;\n        bar.color = \"transparent\";\n        separator.addControl(bar);\n        this._panel.addControl(separator);\n        this._bars.push(separator);\n    };\n    /** Add a group to the selection panel\n     * @param group is the selector group to add\n     */\n    SelectionPanel.prototype.addGroup = function (group) {\n        if (this._groups.length > 0) {\n            this._addSpacer();\n        }\n        this._panel.addControl(group.groupPanel);\n        this._groups.push(group);\n        group.groupPanel.children[0].color = this._headerColor;\n        for (var j = 0; j < group.selectors.length; j++) {\n            group._setSelectorButtonColor(j, this._buttonColor);\n            group._setSelectorButtonBackground(j, this._buttonBackground);\n        }\n    };\n    /** Remove the group from the given position\n     * @param groupNb is the position of the group in the list\n     */\n    SelectionPanel.prototype.removeGroup = function (groupNb) {\n        if (groupNb < 0 || groupNb >= this._groups.length) {\n            return;\n        }\n        var group = this._groups[groupNb];\n        this._panel.removeControl(group.groupPanel);\n        this._groups.splice(groupNb, 1);\n        if (groupNb < this._bars.length) {\n            this._panel.removeControl(this._bars[groupNb]);\n            this._bars.splice(groupNb, 1);\n        }\n    };\n    /** Change a group header label\n     * @param label is the new group header label\n     * @param groupNb is the number of the group to relabel\n     * */\n    SelectionPanel.prototype.setHeaderName = function (label, groupNb) {\n        if (groupNb < 0 || groupNb >= this._groups.length) {\n            return;\n        }\n        var group = this._groups[groupNb];\n        group.groupPanel.children[0].text = label;\n    };\n    /** Change selector label to the one given\n     * @param label is the new selector label\n     * @param groupNb is the number of the groupcontaining the selector\n     * @param selectorNb is the number of the selector within a group to relabel\n     * */\n    SelectionPanel.prototype.relabel = function (label, groupNb, selectorNb) {\n        if (groupNb < 0 || groupNb >= this._groups.length) {\n            return;\n        }\n        var group = this._groups[groupNb];\n        if (selectorNb < 0 || selectorNb >= group.selectors.length) {\n            return;\n        }\n        group._setSelectorLabel(selectorNb, label);\n    };\n    /** For a given group position remove the selector at the given position\n     * @param groupNb is the number of the group to remove the selector from\n     * @param selectorNb is the number of the selector within the group\n     */\n    SelectionPanel.prototype.removeFromGroupSelector = function (groupNb, selectorNb) {\n        if (groupNb < 0 || groupNb >= this._groups.length) {\n            return;\n        }\n        var group = this._groups[groupNb];\n        if (selectorNb < 0 || selectorNb >= group.selectors.length) {\n            return;\n        }\n        group.removeSelector(selectorNb);\n    };\n    /** For a given group position of correct type add a checkbox button\n     * @param groupNb is the number of the group to remove the selector from\n     * @param label is the label for the selector\n     * @param func is the function called when the Selector is checked\n     * @param checked is true when Selector is checked\n     */\n    SelectionPanel.prototype.addToGroupCheckbox = function (groupNb, label, func, checked) {\n        if (func === void 0) { func = function () { }; }\n        if (checked === void 0) { checked = false; }\n        if (groupNb < 0 || groupNb >= this._groups.length) {\n            return;\n        }\n        var group = this._groups[groupNb];\n        group.addCheckbox(label, func, checked);\n    };\n    /** For a given group position of correct type add a radio button\n     * @param groupNb is the number of the group to remove the selector from\n     * @param label is the label for the selector\n     * @param func is the function called when the Selector is checked\n     * @param checked is true when Selector is checked\n     */\n    SelectionPanel.prototype.addToGroupRadio = function (groupNb, label, func, checked) {\n        if (func === void 0) { func = function () { }; }\n        if (checked === void 0) { checked = false; }\n        if (groupNb < 0 || groupNb >= this._groups.length) {\n            return;\n        }\n        var group = this._groups[groupNb];\n        group.addRadio(label, func, checked);\n    };\n    /**\n     * For a given slider group add a slider\n     * @param groupNb is the number of the group to add the slider to\n     * @param label is the label for the Slider\n     * @param func is the function called when the Slider moves\n     * @param unit is a string describing the units used, eg degrees or metres\n     * @param min is the minimum value for the Slider\n     * @param max is the maximum value for the Slider\n     * @param value is the start value for the Slider between min and max\n     * @param onVal is the function used to format the value displayed, eg radians to degrees\n     */\n    SelectionPanel.prototype.addToGroupSlider = function (groupNb, label, func, unit, min, max, value, onVal) {\n        if (func === void 0) { func = function () { }; }\n        if (unit === void 0) { unit = \"Units\"; }\n        if (min === void 0) { min = 0; }\n        if (max === void 0) { max = 0; }\n        if (value === void 0) { value = 0; }\n        if (onVal === void 0) { onVal = function (v) {\n            return v | 0;\n        }; }\n        if (groupNb < 0 || groupNb >= this._groups.length) {\n            return;\n        }\n        var group = this._groups[groupNb];\n        group.addSlider(label, func, unit, min, max, value, onVal);\n    };\n    return SelectionPanel;\n}(Rectangle));\nexport { SelectionPanel };\n//# sourceMappingURL=selector.js.map","import { __extends } from \"tslib\";\nimport { Measure } from \"../../measure.js\";\nimport { Container } from \"../container.js\";\nimport { ValueAndUnit } from \"../../valueAndUnit.js\";\nimport { Control } from \"../control.js\";\n/**\n * Class used to hold a the container for ScrollViewer\n * @hidden\n */\nvar _ScrollViewerWindow = /** @class */ (function (_super) {\n    __extends(_ScrollViewerWindow, _super);\n    /**\n     * Creates a new ScrollViewerWindow\n     * @param name of ScrollViewerWindow\n     */\n    function _ScrollViewerWindow(name) {\n        var _this = _super.call(this, name) || this;\n        _this._freezeControls = false;\n        _this._bucketWidth = 0;\n        _this._bucketHeight = 0;\n        _this._buckets = {};\n        return _this;\n    }\n    Object.defineProperty(_ScrollViewerWindow.prototype, \"freezeControls\", {\n        get: function () {\n            return this._freezeControls;\n        },\n        set: function (value) {\n            if (this._freezeControls === value) {\n                return;\n            }\n            if (!value) {\n                this._restoreMeasures();\n            }\n            // trigger a full normal layout calculation to be sure all children have their measures up to date\n            this._freezeControls = false;\n            var textureSize = this.host.getSize();\n            var renderWidth = textureSize.width;\n            var renderHeight = textureSize.height;\n            var context = this.host.getContext();\n            var measure = new Measure(0, 0, renderWidth, renderHeight);\n            this.host._numLayoutCalls = 0;\n            this.host._rootContainer._layout(measure, context);\n            // in freeze mode, prepare children measures accordingly\n            if (value) {\n                this._updateMeasures();\n                if (this._useBuckets()) {\n                    this._makeBuckets();\n                }\n            }\n            this._freezeControls = value;\n            this.host.markAsDirty(); // redraw with the (new) current settings\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(_ScrollViewerWindow.prototype, \"bucketWidth\", {\n        get: function () {\n            return this._bucketWidth;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(_ScrollViewerWindow.prototype, \"bucketHeight\", {\n        get: function () {\n            return this._bucketHeight;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    _ScrollViewerWindow.prototype.setBucketSizes = function (width, height) {\n        this._bucketWidth = width;\n        this._bucketHeight = height;\n        if (this._useBuckets()) {\n            if (this._freezeControls) {\n                this._makeBuckets();\n            }\n        }\n        else {\n            this._buckets = {};\n        }\n    };\n    _ScrollViewerWindow.prototype._useBuckets = function () {\n        return this._bucketWidth > 0 && this._bucketHeight > 0;\n    };\n    _ScrollViewerWindow.prototype._makeBuckets = function () {\n        this._buckets = {};\n        this._bucketLen = Math.ceil(this.widthInPixels / this._bucketWidth);\n        this._dispatchInBuckets(this._children);\n        this._oldLeft = null;\n        this._oldTop = null;\n    };\n    _ScrollViewerWindow.prototype._dispatchInBuckets = function (children) {\n        for (var i = 0; i < children.length; ++i) {\n            var child = children[i];\n            var bStartX = Math.max(0, Math.floor((child._customData._origLeft - this._customData.origLeft) / this._bucketWidth)), bEndX = Math.floor((child._customData._origLeft - this._customData.origLeft + child._currentMeasure.width - 1) / this._bucketWidth), bEndY = Math.floor((child._customData._origTop - this._customData.origTop + child._currentMeasure.height - 1) / this._bucketHeight);\n            var bStartY = Math.max(0, Math.floor((child._customData._origTop - this._customData.origTop) / this._bucketHeight));\n            while (bStartY <= bEndY) {\n                for (var x = bStartX; x <= bEndX; ++x) {\n                    var bucket = bStartY * this._bucketLen + x;\n                    var lstc = this._buckets[bucket];\n                    if (!lstc) {\n                        lstc = [];\n                        this._buckets[bucket] = lstc;\n                    }\n                    lstc.push(child);\n                }\n                bStartY++;\n            }\n            if (child instanceof Container && child._children.length > 0) {\n                this._dispatchInBuckets(child._children);\n            }\n        }\n    };\n    // reset left and top measures for the window and all its children\n    _ScrollViewerWindow.prototype._updateMeasures = function () {\n        var left = this.leftInPixels | 0, top = this.topInPixels | 0;\n        this._measureForChildren.left -= left;\n        this._measureForChildren.top -= top;\n        this._currentMeasure.left -= left;\n        this._currentMeasure.top -= top;\n        this._customData.origLeftForChildren = this._measureForChildren.left;\n        this._customData.origTopForChildren = this._measureForChildren.top;\n        this._customData.origLeft = this._currentMeasure.left;\n        this._customData.origTop = this._currentMeasure.top;\n        this._updateChildrenMeasures(this._children, left, top);\n    };\n    _ScrollViewerWindow.prototype._updateChildrenMeasures = function (children, left, top) {\n        for (var i = 0; i < children.length; ++i) {\n            var child = children[i];\n            child._currentMeasure.left -= left;\n            child._currentMeasure.top -= top;\n            child._customData._origLeft = child._currentMeasure.left; // save the original left and top values for each child\n            child._customData._origTop = child._currentMeasure.top;\n            if (child instanceof Container && child._children.length > 0) {\n                this._updateChildrenMeasures(child._children, left, top);\n            }\n        }\n    };\n    _ScrollViewerWindow.prototype._restoreMeasures = function () {\n        var left = this.leftInPixels | 0, top = this.topInPixels | 0;\n        this._measureForChildren.left = this._customData.origLeftForChildren + left;\n        this._measureForChildren.top = this._customData.origTopForChildren + top;\n        this._currentMeasure.left = this._customData.origLeft + left;\n        this._currentMeasure.top = this._customData.origTop + top;\n    };\n    _ScrollViewerWindow.prototype._getTypeName = function () {\n        return \"ScrollViewerWindow\";\n    };\n    /**\n     * @param parentMeasure\n     * @param context\n     * @hidden\n     */\n    _ScrollViewerWindow.prototype._additionalProcessing = function (parentMeasure, context) {\n        _super.prototype._additionalProcessing.call(this, parentMeasure, context);\n        this._parentMeasure = parentMeasure;\n        this._measureForChildren.left = this._currentMeasure.left;\n        this._measureForChildren.top = this._currentMeasure.top;\n        this._measureForChildren.width = parentMeasure.width;\n        this._measureForChildren.height = parentMeasure.height;\n    };\n    /**\n     * @param parentMeasure\n     * @param context\n     * @hidden\n     */\n    _ScrollViewerWindow.prototype._layout = function (parentMeasure, context) {\n        if (this._freezeControls) {\n            this.invalidateRect(); // will trigger a redraw of the window\n            return false;\n        }\n        return _super.prototype._layout.call(this, parentMeasure, context);\n    };\n    _ScrollViewerWindow.prototype._scrollChildren = function (children, left, top) {\n        for (var i = 0; i < children.length; ++i) {\n            var child = children[i];\n            child._currentMeasure.left = child._customData._origLeft + left;\n            child._currentMeasure.top = child._customData._origTop + top;\n            child._isClipped = false; // clipping will be handled by _draw and the call to _intersectsRect()\n            if (child instanceof Container && child._children.length > 0) {\n                this._scrollChildren(child._children, left, top);\n            }\n        }\n    };\n    _ScrollViewerWindow.prototype._scrollChildrenWithBuckets = function (left, top, scrollLeft, scrollTop) {\n        var bStartX = Math.max(0, Math.floor(-left / this._bucketWidth)), bEndX = Math.floor((-left + this._parentMeasure.width - 1) / this._bucketWidth), bEndY = Math.floor((-top + this._parentMeasure.height - 1) / this._bucketHeight);\n        var bStartY = Math.max(0, Math.floor(-top / this._bucketHeight));\n        while (bStartY <= bEndY) {\n            for (var x = bStartX; x <= bEndX; ++x) {\n                var bucket = bStartY * this._bucketLen + x, lstc = this._buckets[bucket];\n                if (lstc) {\n                    for (var i = 0; i < lstc.length; ++i) {\n                        var child = lstc[i];\n                        child._currentMeasure.left = child._customData._origLeft + scrollLeft;\n                        child._currentMeasure.top = child._customData._origTop + scrollTop;\n                        child._isClipped = false; // clipping will be handled by _draw and the call to _intersectsRect()\n                    }\n                }\n            }\n            bStartY++;\n        }\n    };\n    /**\n     * @param context\n     * @param invalidatedRectangle\n     * @hidden\n     */\n    _ScrollViewerWindow.prototype._draw = function (context, invalidatedRectangle) {\n        if (!this._freezeControls) {\n            _super.prototype._draw.call(this, context, invalidatedRectangle);\n            return;\n        }\n        this._localDraw(context);\n        if (this.clipChildren) {\n            this._clipForChildren(context);\n        }\n        var left = this.leftInPixels | 0, top = this.topInPixels | 0;\n        if (this._useBuckets()) {\n            if (this._oldLeft !== null && this._oldTop !== null) {\n                this._scrollChildrenWithBuckets(this._oldLeft, this._oldTop, left, top);\n                this._scrollChildrenWithBuckets(left, top, left, top);\n            }\n            else {\n                this._scrollChildren(this._children, left, top);\n            }\n        }\n        else {\n            this._scrollChildren(this._children, left, top);\n        }\n        this._oldLeft = left;\n        this._oldTop = top;\n        for (var _i = 0, _a = this._children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            if (!child._intersectsRect(this._parentMeasure)) {\n                continue;\n            }\n            child._render(context, this._parentMeasure);\n        }\n    };\n    _ScrollViewerWindow.prototype._postMeasure = function () {\n        if (this._freezeControls) {\n            _super.prototype._postMeasure.call(this);\n            return;\n        }\n        var maxWidth = this.parentClientWidth;\n        var maxHeight = this.parentClientHeight;\n        for (var _i = 0, _a = this.children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            if (!child.isVisible || child.notRenderable) {\n                continue;\n            }\n            if (child.horizontalAlignment === Control.HORIZONTAL_ALIGNMENT_CENTER) {\n                child._offsetLeft(this._currentMeasure.left - child._currentMeasure.left);\n            }\n            if (child.verticalAlignment === Control.VERTICAL_ALIGNMENT_CENTER) {\n                child._offsetTop(this._currentMeasure.top - child._currentMeasure.top);\n            }\n            maxWidth = Math.max(maxWidth, child._currentMeasure.left - this._currentMeasure.left + child._currentMeasure.width + child.paddingRightInPixels);\n            maxHeight = Math.max(maxHeight, child._currentMeasure.top - this._currentMeasure.top + child._currentMeasure.height + child.paddingBottomInPixels);\n        }\n        if (this._currentMeasure.width !== maxWidth) {\n            this._width.updateInPlace(maxWidth, ValueAndUnit.UNITMODE_PIXEL);\n            this._currentMeasure.width = maxWidth;\n            this._rebuildLayout = true;\n            this._isDirty = true;\n        }\n        if (this._currentMeasure.height !== maxHeight) {\n            this._height.updateInPlace(maxHeight, ValueAndUnit.UNITMODE_PIXEL);\n            this._currentMeasure.height = maxHeight;\n            this._rebuildLayout = true;\n            this._isDirty = true;\n        }\n        _super.prototype._postMeasure.call(this);\n    };\n    return _ScrollViewerWindow;\n}(Container));\nexport { _ScrollViewerWindow };\n//# sourceMappingURL=scrollViewerWindow.js.map","import { __decorate, __extends } from \"tslib\";\nimport { BaseSlider } from \"./baseSlider.js\";\nimport { Measure } from \"../../measure.js\";\nimport { serialize } from \"@babylonjs/core/Misc/decorators.js\";\n/**\n * Class used to create slider controls\n */\nvar ScrollBar = /** @class */ (function (_super) {\n    __extends(ScrollBar, _super);\n    /**\n     * Creates a new Slider\n     * @param name defines the control name\n     */\n    function ScrollBar(name) {\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        _this._background = \"black\";\n        _this._borderColor = \"white\";\n        _this._tempMeasure = new Measure(0, 0, 0, 0);\n        return _this;\n    }\n    Object.defineProperty(ScrollBar.prototype, \"borderColor\", {\n        /** Gets or sets border color */\n        get: function () {\n            return this._borderColor;\n        },\n        set: function (value) {\n            if (this._borderColor === value) {\n                return;\n            }\n            this._borderColor = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScrollBar.prototype, \"background\", {\n        /** Gets or sets background color */\n        get: function () {\n            return this._background;\n        },\n        set: function (value) {\n            if (this._background === value) {\n                return;\n            }\n            this._background = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ScrollBar.prototype._getTypeName = function () {\n        return \"Scrollbar\";\n    };\n    ScrollBar.prototype._getThumbThickness = function () {\n        var thumbThickness = 0;\n        if (this._thumbWidth.isPixel) {\n            thumbThickness = this._thumbWidth.getValue(this._host);\n        }\n        else {\n            thumbThickness = this._backgroundBoxThickness * this._thumbWidth.getValue(this._host);\n        }\n        return thumbThickness;\n    };\n    ScrollBar.prototype._draw = function (context) {\n        context.save();\n        this._applyStates(context);\n        this._prepareRenderingData(\"rectangle\");\n        var left = this._renderLeft;\n        var thumbPosition = this._getThumbPosition();\n        context.fillStyle = this._background;\n        context.fillRect(this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height);\n        // Value bar\n        context.fillStyle = this.color;\n        // Thumb\n        if (this.isVertical) {\n            this._tempMeasure.left = left - this._effectiveBarOffset;\n            this._tempMeasure.top = this._currentMeasure.top + thumbPosition;\n            this._tempMeasure.width = this._currentMeasure.width;\n            this._tempMeasure.height = this._effectiveThumbThickness;\n        }\n        else {\n            this._tempMeasure.left = this._currentMeasure.left + thumbPosition;\n            this._tempMeasure.top = this._currentMeasure.top;\n            this._tempMeasure.width = this._effectiveThumbThickness;\n            this._tempMeasure.height = this._currentMeasure.height;\n        }\n        context.fillRect(this._tempMeasure.left, this._tempMeasure.top, this._tempMeasure.width, this._tempMeasure.height);\n        context.restore();\n    };\n    /**\n     * @param x\n     * @param y\n     * @hidden\n     */\n    ScrollBar.prototype._updateValueFromPointer = function (x, y) {\n        if (this.rotation != 0) {\n            this._invertTransformMatrix.transformCoordinates(x, y, this._transformedPosition);\n            x = this._transformedPosition.x;\n            y = this._transformedPosition.y;\n        }\n        if (this._first) {\n            this._first = false;\n            this._originX = x;\n            this._originY = y;\n            // Check if move is required\n            if (x < this._tempMeasure.left ||\n                x > this._tempMeasure.left + this._tempMeasure.width ||\n                y < this._tempMeasure.top ||\n                y > this._tempMeasure.top + this._tempMeasure.height) {\n                if (this.isVertical) {\n                    this.value = this.minimum + (1 - (y - this._currentMeasure.top) / this._currentMeasure.height) * (this.maximum - this.minimum);\n                }\n                else {\n                    this.value = this.minimum + ((x - this._currentMeasure.left) / this._currentMeasure.width) * (this.maximum - this.minimum);\n                }\n            }\n        }\n        // Delta mode\n        var delta = 0;\n        if (this.isVertical) {\n            delta = -((y - this._originY) / (this._currentMeasure.height - this._effectiveThumbThickness));\n        }\n        else {\n            delta = (x - this._originX) / (this._currentMeasure.width - this._effectiveThumbThickness);\n        }\n        this.value += delta * (this.maximum - this.minimum);\n        this._originX = x;\n        this._originY = y;\n    };\n    ScrollBar.prototype._onPointerDown = function (target, coordinates, pointerId, buttonIndex, pi) {\n        this._first = true;\n        return _super.prototype._onPointerDown.call(this, target, coordinates, pointerId, buttonIndex, pi);\n    };\n    __decorate([\n        serialize()\n    ], ScrollBar.prototype, \"borderColor\", null);\n    __decorate([\n        serialize()\n    ], ScrollBar.prototype, \"background\", null);\n    return ScrollBar;\n}(BaseSlider));\nexport { ScrollBar };\n//# sourceMappingURL=scrollBar.js.map","import { __decorate, __extends } from \"tslib\";\nimport { BaseSlider } from \"./baseSlider.js\";\nimport { Measure } from \"../../measure.js\";\nimport { serialize } from \"@babylonjs/core/Misc/decorators.js\";\n/**\n * Class used to create slider controls\n */\nvar ImageScrollBar = /** @class */ (function (_super) {\n    __extends(ImageScrollBar, _super);\n    /**\n     * Creates a new ImageScrollBar\n     * @param name defines the control name\n     */\n    function ImageScrollBar(name) {\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        _this._thumbLength = 0.5;\n        _this._thumbHeight = 1;\n        _this._barImageHeight = 1;\n        _this._tempMeasure = new Measure(0, 0, 0, 0);\n        /** Number of 90° rotation to apply on the images when in vertical mode */\n        _this.num90RotationInVerticalMode = 1;\n        return _this;\n    }\n    Object.defineProperty(ImageScrollBar.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the image used to render the background for horizontal bar\n         */\n        get: function () {\n            return this._backgroundBaseImage;\n        },\n        set: function (value) {\n            var _this = this;\n            if (this._backgroundBaseImage === value) {\n                return;\n            }\n            this._backgroundBaseImage = value;\n            if (this.isVertical && this.num90RotationInVerticalMode !== 0) {\n                if (!value.isLoaded) {\n                    value.onImageLoadedObservable.addOnce(function () {\n                        var rotatedValue = value._rotate90(_this.num90RotationInVerticalMode, true);\n                        _this._backgroundImage = rotatedValue;\n                        if (!rotatedValue.isLoaded) {\n                            rotatedValue.onImageLoadedObservable.addOnce(function () {\n                                _this._markAsDirty();\n                            });\n                        }\n                        _this._markAsDirty();\n                    });\n                }\n                else {\n                    this._backgroundImage = value._rotate90(this.num90RotationInVerticalMode, true);\n                    this._markAsDirty();\n                }\n            }\n            else {\n                this._backgroundImage = value;\n                if (value && !value.isLoaded) {\n                    value.onImageLoadedObservable.addOnce(function () {\n                        _this._markAsDirty();\n                    });\n                }\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ImageScrollBar.prototype, \"thumbImage\", {\n        /**\n         * Gets or sets the image used to render the thumb\n         */\n        get: function () {\n            return this._thumbBaseImage;\n        },\n        set: function (value) {\n            var _this = this;\n            if (this._thumbBaseImage === value) {\n                return;\n            }\n            this._thumbBaseImage = value;\n            if (this.isVertical && this.num90RotationInVerticalMode !== 0) {\n                if (!value.isLoaded) {\n                    value.onImageLoadedObservable.addOnce(function () {\n                        var rotatedValue = value._rotate90(-_this.num90RotationInVerticalMode, true);\n                        _this._thumbImage = rotatedValue;\n                        if (!rotatedValue.isLoaded) {\n                            rotatedValue.onImageLoadedObservable.addOnce(function () {\n                                _this._markAsDirty();\n                            });\n                        }\n                        _this._markAsDirty();\n                    });\n                }\n                else {\n                    this._thumbImage = value._rotate90(-this.num90RotationInVerticalMode, true);\n                    this._markAsDirty();\n                }\n            }\n            else {\n                this._thumbImage = value;\n                if (value && !value.isLoaded) {\n                    value.onImageLoadedObservable.addOnce(function () {\n                        _this._markAsDirty();\n                    });\n                }\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ImageScrollBar.prototype, \"thumbLength\", {\n        /**\n         * Gets or sets the length of the thumb\n         */\n        get: function () {\n            return this._thumbLength;\n        },\n        set: function (value) {\n            if (this._thumbLength === value) {\n                return;\n            }\n            this._thumbLength = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ImageScrollBar.prototype, \"thumbHeight\", {\n        /**\n         * Gets or sets the height of the thumb\n         */\n        get: function () {\n            return this._thumbHeight;\n        },\n        set: function (value) {\n            if (this._thumbLength === value) {\n                return;\n            }\n            this._thumbHeight = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ImageScrollBar.prototype, \"barImageHeight\", {\n        /**\n         * Gets or sets the height of the bar image\n         */\n        get: function () {\n            return this._barImageHeight;\n        },\n        set: function (value) {\n            if (this._barImageHeight === value) {\n                return;\n            }\n            this._barImageHeight = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ImageScrollBar.prototype._getTypeName = function () {\n        return \"ImageScrollBar\";\n    };\n    ImageScrollBar.prototype._getThumbThickness = function () {\n        var thumbThickness = 0;\n        if (this._thumbWidth.isPixel) {\n            thumbThickness = this._thumbWidth.getValue(this._host);\n        }\n        else {\n            thumbThickness = this._backgroundBoxThickness * this._thumbWidth.getValue(this._host);\n        }\n        return thumbThickness;\n    };\n    ImageScrollBar.prototype._draw = function (context) {\n        context.save();\n        this._applyStates(context);\n        this._prepareRenderingData(\"rectangle\");\n        var thumbPosition = this._getThumbPosition();\n        var left = this._renderLeft;\n        var top = this._renderTop;\n        var width = this._renderWidth;\n        var height = this._renderHeight;\n        // Background\n        if (this._backgroundImage) {\n            this._tempMeasure.copyFromFloats(left, top, width, height);\n            if (this.isVertical) {\n                this._tempMeasure.copyFromFloats(left + width * (1 - this._barImageHeight) * 0.5, this._currentMeasure.top, width * this._barImageHeight, height);\n                this._tempMeasure.height += this._effectiveThumbThickness;\n                this._backgroundImage._currentMeasure.copyFrom(this._tempMeasure);\n            }\n            else {\n                this._tempMeasure.copyFromFloats(this._currentMeasure.left, top + height * (1 - this._barImageHeight) * 0.5, width, height * this._barImageHeight);\n                this._tempMeasure.width += this._effectiveThumbThickness;\n                this._backgroundImage._currentMeasure.copyFrom(this._tempMeasure);\n            }\n            this._backgroundImage._draw(context);\n        }\n        // Thumb\n        if (this.isVertical) {\n            this._tempMeasure.copyFromFloats(left - this._effectiveBarOffset + this._currentMeasure.width * (1 - this._thumbHeight) * 0.5, this._currentMeasure.top + thumbPosition, this._currentMeasure.width * this._thumbHeight, this._effectiveThumbThickness);\n        }\n        else {\n            this._tempMeasure.copyFromFloats(this._currentMeasure.left + thumbPosition, this._currentMeasure.top + this._currentMeasure.height * (1 - this._thumbHeight) * 0.5, this._effectiveThumbThickness, this._currentMeasure.height * this._thumbHeight);\n        }\n        if (this._thumbImage) {\n            this._thumbImage._currentMeasure.copyFrom(this._tempMeasure);\n            this._thumbImage._draw(context);\n        }\n        context.restore();\n    };\n    /**\n     * @param x\n     * @param y\n     * @hidden\n     */\n    ImageScrollBar.prototype._updateValueFromPointer = function (x, y) {\n        if (this.rotation != 0) {\n            this._invertTransformMatrix.transformCoordinates(x, y, this._transformedPosition);\n            x = this._transformedPosition.x;\n            y = this._transformedPosition.y;\n        }\n        if (this._first) {\n            this._first = false;\n            this._originX = x;\n            this._originY = y;\n            // Check if move is required\n            if (x < this._tempMeasure.left ||\n                x > this._tempMeasure.left + this._tempMeasure.width ||\n                y < this._tempMeasure.top ||\n                y > this._tempMeasure.top + this._tempMeasure.height) {\n                if (this.isVertical) {\n                    this.value = this.minimum + (1 - (y - this._currentMeasure.top) / this._currentMeasure.height) * (this.maximum - this.minimum);\n                }\n                else {\n                    this.value = this.minimum + ((x - this._currentMeasure.left) / this._currentMeasure.width) * (this.maximum - this.minimum);\n                }\n            }\n        }\n        // Delta mode\n        var delta = 0;\n        if (this.isVertical) {\n            delta = -((y - this._originY) / (this._currentMeasure.height - this._effectiveThumbThickness));\n        }\n        else {\n            delta = (x - this._originX) / (this._currentMeasure.width - this._effectiveThumbThickness);\n        }\n        this.value += delta * (this.maximum - this.minimum);\n        this._originX = x;\n        this._originY = y;\n    };\n    ImageScrollBar.prototype._onPointerDown = function (target, coordinates, pointerId, buttonIndex, pi) {\n        this._first = true;\n        return _super.prototype._onPointerDown.call(this, target, coordinates, pointerId, buttonIndex, pi);\n    };\n    __decorate([\n        serialize()\n    ], ImageScrollBar.prototype, \"num90RotationInVerticalMode\", void 0);\n    return ImageScrollBar;\n}(BaseSlider));\nexport { ImageScrollBar };\n//# sourceMappingURL=imageScrollBar.js.map","import { __extends } from \"tslib\";\nimport { Rectangle } from \"../rectangle.js\";\nimport { Grid } from \"../grid.js\";\nimport { Control } from \"../control.js\";\nimport { _ScrollViewerWindow } from \"./scrollViewerWindow.js\";\nimport { ScrollBar } from \"../sliders/scrollBar.js\";\nimport { ImageScrollBar } from \"../sliders/imageScrollBar.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\n/**\n * Class used to hold a viewer window and sliders in a grid\n */\nvar ScrollViewer = /** @class */ (function (_super) {\n    __extends(ScrollViewer, _super);\n    /**\n     * Creates a new ScrollViewer\n     * @param name of ScrollViewer\n     * @param isImageBased\n     */\n    function ScrollViewer(name, isImageBased) {\n        var _this = _super.call(this, name) || this;\n        _this._barSize = 20;\n        _this._pointerIsOver = false;\n        _this._wheelPrecision = 0.05;\n        _this._thumbLength = 0.5;\n        _this._thumbHeight = 1;\n        _this._barImageHeight = 1;\n        _this._horizontalBarImageHeight = 1;\n        _this._verticalBarImageHeight = 1;\n        _this._oldWindowContentsWidth = 0;\n        _this._oldWindowContentsHeight = 0;\n        _this._forceHorizontalBar = false;\n        _this._forceVerticalBar = false;\n        _this._useImageBar = isImageBased ? isImageBased : false;\n        _this.onDirtyObservable.add(function () {\n            _this._horizontalBarSpace.color = _this.color;\n            _this._verticalBarSpace.color = _this.color;\n            _this._dragSpace.color = _this.color;\n        });\n        _this.onPointerEnterObservable.add(function () {\n            _this._pointerIsOver = true;\n        });\n        _this.onPointerOutObservable.add(function () {\n            _this._pointerIsOver = false;\n        });\n        _this._grid = new Grid();\n        if (_this._useImageBar) {\n            _this._horizontalBar = new ImageScrollBar();\n            _this._verticalBar = new ImageScrollBar();\n        }\n        else {\n            _this._horizontalBar = new ScrollBar();\n            _this._verticalBar = new ScrollBar();\n        }\n        _this._window = new _ScrollViewerWindow(\"scrollViewer_window\");\n        _this._window.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        _this._window.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n        _this._grid.addColumnDefinition(1);\n        _this._grid.addColumnDefinition(0, true);\n        _this._grid.addRowDefinition(1);\n        _this._grid.addRowDefinition(0, true);\n        _super.prototype.addControl.call(_this, _this._grid);\n        _this._grid.addControl(_this._window, 0, 0);\n        _this._verticalBarSpace = new Rectangle();\n        _this._verticalBarSpace.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        _this._verticalBarSpace.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n        _this._verticalBarSpace.thickness = 1;\n        _this._grid.addControl(_this._verticalBarSpace, 0, 1);\n        _this._addBar(_this._verticalBar, _this._verticalBarSpace, true, Math.PI);\n        _this._horizontalBarSpace = new Rectangle();\n        _this._horizontalBarSpace.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n        _this._horizontalBarSpace.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n        _this._horizontalBarSpace.thickness = 1;\n        _this._grid.addControl(_this._horizontalBarSpace, 1, 0);\n        _this._addBar(_this._horizontalBar, _this._horizontalBarSpace, false, 0);\n        _this._dragSpace = new Rectangle();\n        _this._dragSpace.thickness = 1;\n        _this._grid.addControl(_this._dragSpace, 1, 1);\n        // Colors\n        if (!_this._useImageBar) {\n            _this.barColor = \"grey\";\n            _this.barBackground = \"transparent\";\n        }\n        return _this;\n    }\n    Object.defineProperty(ScrollViewer.prototype, \"horizontalBar\", {\n        /**\n         * Gets the horizontal scrollbar\n         */\n        get: function () {\n            return this._horizontalBar;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScrollViewer.prototype, \"verticalBar\", {\n        /**\n         * Gets the vertical scrollbar\n         */\n        get: function () {\n            return this._verticalBar;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Adds a new control to the current container\n     * @param control defines the control to add\n     * @returns the current container\n     */\n    ScrollViewer.prototype.addControl = function (control) {\n        if (!control) {\n            return this;\n        }\n        this._window.addControl(control);\n        return this;\n    };\n    /**\n     * Removes a control from the current container\n     * @param control defines the control to remove\n     * @returns the current container\n     */\n    ScrollViewer.prototype.removeControl = function (control) {\n        this._window.removeControl(control);\n        return this;\n    };\n    Object.defineProperty(ScrollViewer.prototype, \"children\", {\n        /** Gets the list of children */\n        get: function () {\n            return this._window.children;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ScrollViewer.prototype._flagDescendantsAsMatrixDirty = function () {\n        for (var _i = 0, _a = this._children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            child._markMatrixAsDirty();\n        }\n    };\n    Object.defineProperty(ScrollViewer.prototype, \"freezeControls\", {\n        /**\n         * Freezes or unfreezes the controls in the window.\n         * When controls are frozen, the scroll viewer can render a lot more quickly but updates to positions/sizes of controls\n         * are not taken into account. If you want to change positions/sizes, unfreeze, perform the changes then freeze again\n         */\n        get: function () {\n            return this._window.freezeControls;\n        },\n        set: function (value) {\n            this._window.freezeControls = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScrollViewer.prototype, \"bucketWidth\", {\n        /** Gets the bucket width */\n        get: function () {\n            return this._window.bucketWidth;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScrollViewer.prototype, \"bucketHeight\", {\n        /** Gets the bucket height */\n        get: function () {\n            return this._window.bucketHeight;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Sets the bucket sizes.\n     * When freezeControls is true, setting a non-zero bucket size will improve performances by updating only\n     * controls that are visible. The bucket sizes is used to subdivide (internally) the window area to smaller areas into which\n     * controls are dispatched. So, the size should be roughly equals to the mean size of all the controls of\n     * the window. To disable the usage of buckets, sets either width or height (or both) to 0.\n     * Please note that using this option will raise the memory usage (the higher the bucket sizes, the less memory\n     * used), that's why it is not enabled by default.\n     * @param width width of the bucket\n     * @param height height of the bucket\n     */\n    ScrollViewer.prototype.setBucketSizes = function (width, height) {\n        this._window.setBucketSizes(width, height);\n    };\n    Object.defineProperty(ScrollViewer.prototype, \"forceHorizontalBar\", {\n        /**\n         * Forces the horizontal scroll bar to be displayed\n         */\n        get: function () {\n            return this._forceHorizontalBar;\n        },\n        set: function (value) {\n            this._grid.setRowDefinition(1, value ? this._barSize : 0, true);\n            this._horizontalBar.isVisible = value;\n            this._forceHorizontalBar = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScrollViewer.prototype, \"forceVerticalBar\", {\n        /**\n         * Forces the vertical scroll bar to be displayed\n         */\n        get: function () {\n            return this._forceVerticalBar;\n        },\n        set: function (value) {\n            this._grid.setColumnDefinition(1, value ? this._barSize : 0, true);\n            this._verticalBar.isVisible = value;\n            this._forceVerticalBar = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /** Reset the scroll viewer window to initial size */\n    ScrollViewer.prototype.resetWindow = function () {\n        this._window.width = \"100%\";\n        this._window.height = \"100%\";\n    };\n    ScrollViewer.prototype._getTypeName = function () {\n        return \"ScrollViewer\";\n    };\n    ScrollViewer.prototype._buildClientSizes = function () {\n        var ratio = this.host.idealRatio;\n        this._window.parentClientWidth = this._currentMeasure.width - (this._verticalBar.isVisible || this.forceVerticalBar ? this._barSize * ratio : 0) - 2 * this.thickness;\n        this._window.parentClientHeight = this._currentMeasure.height - (this._horizontalBar.isVisible || this.forceHorizontalBar ? this._barSize * ratio : 0) - 2 * this.thickness;\n        this._clientWidth = this._window.parentClientWidth;\n        this._clientHeight = this._window.parentClientHeight;\n    };\n    ScrollViewer.prototype._additionalProcessing = function (parentMeasure, context) {\n        _super.prototype._additionalProcessing.call(this, parentMeasure, context);\n        this._buildClientSizes();\n    };\n    ScrollViewer.prototype._postMeasure = function () {\n        _super.prototype._postMeasure.call(this);\n        this._updateScroller();\n        this._setWindowPosition(false);\n    };\n    Object.defineProperty(ScrollViewer.prototype, \"wheelPrecision\", {\n        /**\n         * Gets or sets the mouse wheel precision\n         * from 0 to 1 with a default value of 0.05\n         * */\n        get: function () {\n            return this._wheelPrecision;\n        },\n        set: function (value) {\n            if (this._wheelPrecision === value) {\n                return;\n            }\n            if (value < 0) {\n                value = 0;\n            }\n            if (value > 1) {\n                value = 1;\n            }\n            this._wheelPrecision = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScrollViewer.prototype, \"scrollBackground\", {\n        /** Gets or sets the scroll bar container background color */\n        get: function () {\n            return this._horizontalBarSpace.background;\n        },\n        set: function (color) {\n            if (this._horizontalBarSpace.background === color) {\n                return;\n            }\n            this._horizontalBarSpace.background = color;\n            this._verticalBarSpace.background = color;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScrollViewer.prototype, \"barColor\", {\n        /** Gets or sets the bar color */\n        get: function () {\n            return this._barColor;\n        },\n        set: function (color) {\n            if (this._barColor === color) {\n                return;\n            }\n            this._barColor = color;\n            this._horizontalBar.color = color;\n            this._verticalBar.color = color;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScrollViewer.prototype, \"thumbImage\", {\n        /** Gets or sets the bar image */\n        get: function () {\n            return this._barImage;\n        },\n        set: function (value) {\n            if (this._barImage === value) {\n                return;\n            }\n            this._barImage = value;\n            var hb = this._horizontalBar;\n            var vb = this._verticalBar;\n            hb.thumbImage = value;\n            vb.thumbImage = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScrollViewer.prototype, \"horizontalThumbImage\", {\n        /** Gets or sets the horizontal bar image */\n        get: function () {\n            return this._horizontalBarImage;\n        },\n        set: function (value) {\n            if (this._horizontalBarImage === value) {\n                return;\n            }\n            this._horizontalBarImage = value;\n            var hb = this._horizontalBar;\n            hb.thumbImage = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScrollViewer.prototype, \"verticalThumbImage\", {\n        /** Gets or sets the vertical bar image */\n        get: function () {\n            return this._verticalBarImage;\n        },\n        set: function (value) {\n            if (this._verticalBarImage === value) {\n                return;\n            }\n            this._verticalBarImage = value;\n            var vb = this._verticalBar;\n            vb.thumbImage = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScrollViewer.prototype, \"barSize\", {\n        /** Gets or sets the size of the bar */\n        get: function () {\n            return this._barSize;\n        },\n        set: function (value) {\n            if (this._barSize === value) {\n                return;\n            }\n            this._barSize = value;\n            this._markAsDirty();\n            if (this._horizontalBar.isVisible) {\n                this._grid.setRowDefinition(1, this._barSize, true);\n            }\n            if (this._verticalBar.isVisible) {\n                this._grid.setColumnDefinition(1, this._barSize, true);\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScrollViewer.prototype, \"thumbLength\", {\n        /** Gets or sets the length of the thumb */\n        get: function () {\n            return this._thumbLength;\n        },\n        set: function (value) {\n            if (this._thumbLength === value) {\n                return;\n            }\n            if (value <= 0) {\n                value = 0.1;\n            }\n            if (value > 1) {\n                value = 1;\n            }\n            this._thumbLength = value;\n            var hb = this._horizontalBar;\n            var vb = this._verticalBar;\n            hb.thumbLength = value;\n            vb.thumbLength = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScrollViewer.prototype, \"thumbHeight\", {\n        /** Gets or sets the height of the thumb */\n        get: function () {\n            return this._thumbHeight;\n        },\n        set: function (value) {\n            if (this._thumbHeight === value) {\n                return;\n            }\n            if (value <= 0) {\n                value = 0.1;\n            }\n            if (value > 1) {\n                value = 1;\n            }\n            this._thumbHeight = value;\n            var hb = this._horizontalBar;\n            var vb = this._verticalBar;\n            hb.thumbHeight = value;\n            vb.thumbHeight = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScrollViewer.prototype, \"barImageHeight\", {\n        /** Gets or sets the height of the bar image */\n        get: function () {\n            return this._barImageHeight;\n        },\n        set: function (value) {\n            if (this._barImageHeight === value) {\n                return;\n            }\n            if (value <= 0) {\n                value = 0.1;\n            }\n            if (value > 1) {\n                value = 1;\n            }\n            this._barImageHeight = value;\n            var hb = this._horizontalBar;\n            var vb = this._verticalBar;\n            hb.barImageHeight = value;\n            vb.barImageHeight = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScrollViewer.prototype, \"horizontalBarImageHeight\", {\n        /** Gets or sets the height of the horizontal bar image */\n        get: function () {\n            return this._horizontalBarImageHeight;\n        },\n        set: function (value) {\n            if (this._horizontalBarImageHeight === value) {\n                return;\n            }\n            if (value <= 0) {\n                value = 0.1;\n            }\n            if (value > 1) {\n                value = 1;\n            }\n            this._horizontalBarImageHeight = value;\n            var hb = this._horizontalBar;\n            hb.barImageHeight = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScrollViewer.prototype, \"verticalBarImageHeight\", {\n        /** Gets or sets the height of the vertical bar image */\n        get: function () {\n            return this._verticalBarImageHeight;\n        },\n        set: function (value) {\n            if (this._verticalBarImageHeight === value) {\n                return;\n            }\n            if (value <= 0) {\n                value = 0.1;\n            }\n            if (value > 1) {\n                value = 1;\n            }\n            this._verticalBarImageHeight = value;\n            var vb = this._verticalBar;\n            vb.barImageHeight = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScrollViewer.prototype, \"barBackground\", {\n        /** Gets or sets the bar background */\n        get: function () {\n            return this._barBackground;\n        },\n        set: function (color) {\n            if (this._barBackground === color) {\n                return;\n            }\n            this._barBackground = color;\n            var hb = this._horizontalBar;\n            var vb = this._verticalBar;\n            hb.background = color;\n            vb.background = color;\n            this._dragSpace.background = color;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScrollViewer.prototype, \"barImage\", {\n        /** Gets or sets the bar background image */\n        get: function () {\n            return this._barBackgroundImage;\n        },\n        set: function (value) {\n            this._barBackgroundImage = value;\n            var hb = this._horizontalBar;\n            var vb = this._verticalBar;\n            hb.backgroundImage = value;\n            vb.backgroundImage = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScrollViewer.prototype, \"horizontalBarImage\", {\n        /** Gets or sets the horizontal bar background image */\n        get: function () {\n            return this._horizontalBarBackgroundImage;\n        },\n        set: function (value) {\n            this._horizontalBarBackgroundImage = value;\n            var hb = this._horizontalBar;\n            hb.backgroundImage = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ScrollViewer.prototype, \"verticalBarImage\", {\n        /** Gets or sets the vertical bar background image */\n        get: function () {\n            return this._verticalBarBackgroundImage;\n        },\n        set: function (value) {\n            this._verticalBarBackgroundImage = value;\n            var vb = this._verticalBar;\n            vb.backgroundImage = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ScrollViewer.prototype._setWindowPosition = function (force) {\n        if (force === void 0) { force = true; }\n        var ratio = this.host.idealRatio;\n        var windowContentsWidth = this._window._currentMeasure.width;\n        var windowContentsHeight = this._window._currentMeasure.height;\n        if (!force && this._oldWindowContentsWidth === windowContentsWidth && this._oldWindowContentsHeight === windowContentsHeight) {\n            return;\n        }\n        this._oldWindowContentsWidth = windowContentsWidth;\n        this._oldWindowContentsHeight = windowContentsHeight;\n        var _endLeft = this._clientWidth - windowContentsWidth;\n        var _endTop = this._clientHeight - windowContentsHeight;\n        var newLeft = (this._horizontalBar.value / ratio) * _endLeft + \"px\";\n        var newTop = (this._verticalBar.value / ratio) * _endTop + \"px\";\n        if (newLeft !== this._window.left) {\n            this._window.left = newLeft;\n            if (!this.freezeControls) {\n                this._rebuildLayout = true;\n            }\n        }\n        if (newTop !== this._window.top) {\n            this._window.top = newTop;\n            if (!this.freezeControls) {\n                this._rebuildLayout = true;\n            }\n        }\n    };\n    /** @hidden */\n    ScrollViewer.prototype._updateScroller = function () {\n        var windowContentsWidth = this._window._currentMeasure.width;\n        var windowContentsHeight = this._window._currentMeasure.height;\n        if (this._horizontalBar.isVisible && windowContentsWidth <= this._clientWidth && !this.forceHorizontalBar) {\n            this._grid.setRowDefinition(1, 0, true);\n            this._horizontalBar.isVisible = false;\n            this._horizontalBar.value = 0;\n            this._rebuildLayout = true;\n        }\n        else if (!this._horizontalBar.isVisible && (windowContentsWidth > this._clientWidth || this.forceHorizontalBar)) {\n            this._grid.setRowDefinition(1, this._barSize, true);\n            this._horizontalBar.isVisible = true;\n            this._rebuildLayout = true;\n        }\n        if (this._verticalBar.isVisible && windowContentsHeight <= this._clientHeight && !this.forceVerticalBar) {\n            this._grid.setColumnDefinition(1, 0, true);\n            this._verticalBar.isVisible = false;\n            this._verticalBar.value = 0;\n            this._rebuildLayout = true;\n        }\n        else if (!this._verticalBar.isVisible && (windowContentsHeight > this._clientHeight || this.forceVerticalBar)) {\n            this._grid.setColumnDefinition(1, this._barSize, true);\n            this._verticalBar.isVisible = true;\n            this._rebuildLayout = true;\n        }\n        this._buildClientSizes();\n        var ratio = this.host.idealRatio;\n        this._horizontalBar.thumbWidth = this._thumbLength * 0.9 * (this._clientWidth / ratio) + \"px\";\n        this._verticalBar.thumbWidth = this._thumbLength * 0.9 * (this._clientHeight / ratio) + \"px\";\n    };\n    ScrollViewer.prototype._link = function (host) {\n        _super.prototype._link.call(this, host);\n        this._attachWheel();\n    };\n    /**\n     * @param barControl\n     * @param barContainer\n     * @param isVertical\n     * @param rotation\n     * @hidden\n     */\n    ScrollViewer.prototype._addBar = function (barControl, barContainer, isVertical, rotation) {\n        var _this = this;\n        barControl.paddingLeft = 0;\n        barControl.width = \"100%\";\n        barControl.height = \"100%\";\n        barControl.barOffset = 0;\n        barControl.value = 0;\n        barControl.maximum = 1;\n        barControl.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_CENTER;\n        barControl.verticalAlignment = Control.VERTICAL_ALIGNMENT_CENTER;\n        barControl.isVertical = isVertical;\n        barControl.rotation = rotation;\n        barControl.isVisible = false;\n        barContainer.addControl(barControl);\n        barControl.onValueChangedObservable.add(function () {\n            _this._setWindowPosition();\n        });\n    };\n    /** @hidden */\n    ScrollViewer.prototype._attachWheel = function () {\n        var _this = this;\n        if (!this._host || this._onWheelObserver) {\n            return;\n        }\n        this._onWheelObserver = this.onWheelObservable.add(function (pi) {\n            if (!_this._pointerIsOver || _this.isReadOnly) {\n                return;\n            }\n            if (_this._verticalBar.isVisible == true) {\n                if (pi.y < 0 && _this._verticalBar.value > 0) {\n                    _this._verticalBar.value -= _this._wheelPrecision;\n                }\n                else if (pi.y > 0 && _this._verticalBar.value < _this._verticalBar.maximum) {\n                    _this._verticalBar.value += _this._wheelPrecision;\n                }\n            }\n            if (_this._horizontalBar.isVisible == true) {\n                if (pi.x < 0 && _this._horizontalBar.value < _this._horizontalBar.maximum) {\n                    _this._horizontalBar.value += _this._wheelPrecision;\n                }\n                else if (pi.x > 0 && _this._horizontalBar.value > 0) {\n                    _this._horizontalBar.value -= _this._wheelPrecision;\n                }\n            }\n        });\n    };\n    ScrollViewer.prototype._renderHighlightSpecific = function (context) {\n        if (!this.isHighlighted) {\n            return;\n        }\n        _super.prototype._renderHighlightSpecific.call(this, context);\n        this._grid._renderHighlightSpecific(context);\n        context.restore();\n    };\n    /** Releases associated resources */\n    ScrollViewer.prototype.dispose = function () {\n        this.onWheelObservable.remove(this._onWheelObserver);\n        this._onWheelObserver = null;\n        _super.prototype.dispose.call(this);\n    };\n    return ScrollViewer;\n}(Rectangle));\nexport { ScrollViewer };\nRegisterClass(\"BABYLON.GUI.ScrollViewer\", ScrollViewer);\n//# sourceMappingURL=scrollViewer.js.map","import { __decorate, __extends } from \"tslib\";\nimport { Control } from \"./control.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { serialize } from \"@babylonjs/core/Misc/decorators.js\";\n/** Class used to render a grid  */\nvar DisplayGrid = /** @class */ (function (_super) {\n    __extends(DisplayGrid, _super);\n    /**\n     * Creates a new GridDisplayRectangle\n     * @param name defines the control name\n     */\n    function DisplayGrid(name) {\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        _this._cellWidth = 20;\n        _this._cellHeight = 20;\n        _this._minorLineTickness = 1;\n        _this._minorLineColor = \"DarkGray\";\n        _this._majorLineTickness = 2;\n        _this._majorLineColor = \"White\";\n        _this._majorLineFrequency = 5;\n        _this._background = \"Black\";\n        _this._displayMajorLines = true;\n        _this._displayMinorLines = true;\n        return _this;\n    }\n    Object.defineProperty(DisplayGrid.prototype, \"displayMinorLines\", {\n        /** Gets or sets a boolean indicating if minor lines must be rendered (true by default)) */\n        get: function () {\n            return this._displayMinorLines;\n        },\n        set: function (value) {\n            if (this._displayMinorLines === value) {\n                return;\n            }\n            this._displayMinorLines = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DisplayGrid.prototype, \"displayMajorLines\", {\n        /** Gets or sets a boolean indicating if major lines must be rendered (true by default)) */\n        get: function () {\n            return this._displayMajorLines;\n        },\n        set: function (value) {\n            if (this._displayMajorLines === value) {\n                return;\n            }\n            this._displayMajorLines = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DisplayGrid.prototype, \"background\", {\n        /** Gets or sets background color (Black by default) */\n        get: function () {\n            return this._background;\n        },\n        set: function (value) {\n            if (this._background === value) {\n                return;\n            }\n            this._background = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DisplayGrid.prototype, \"cellWidth\", {\n        /** Gets or sets the width of each cell (20 by default) */\n        get: function () {\n            return this._cellWidth;\n        },\n        set: function (value) {\n            this._cellWidth = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DisplayGrid.prototype, \"cellHeight\", {\n        /** Gets or sets the height of each cell (20 by default) */\n        get: function () {\n            return this._cellHeight;\n        },\n        set: function (value) {\n            this._cellHeight = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DisplayGrid.prototype, \"minorLineTickness\", {\n        /** Gets or sets the tickness of minor lines (1 by default) */\n        get: function () {\n            return this._minorLineTickness;\n        },\n        set: function (value) {\n            this._minorLineTickness = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DisplayGrid.prototype, \"minorLineColor\", {\n        /** Gets or sets the color of minor lines (DarkGray by default) */\n        get: function () {\n            return this._minorLineColor;\n        },\n        set: function (value) {\n            this._minorLineColor = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DisplayGrid.prototype, \"majorLineTickness\", {\n        /** Gets or sets the tickness of major lines (2 by default) */\n        get: function () {\n            return this._majorLineTickness;\n        },\n        set: function (value) {\n            this._majorLineTickness = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DisplayGrid.prototype, \"majorLineColor\", {\n        /** Gets or sets the color of major lines (White by default) */\n        get: function () {\n            return this._majorLineColor;\n        },\n        set: function (value) {\n            this._majorLineColor = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DisplayGrid.prototype, \"majorLineFrequency\", {\n        /** Gets or sets the frequency of major lines (default is 1 every 5 minor lines)*/\n        get: function () {\n            return this._majorLineFrequency;\n        },\n        set: function (value) {\n            this._majorLineFrequency = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DisplayGrid.prototype._draw = function (context) {\n        context.save();\n        this._applyStates(context);\n        if (this._isEnabled) {\n            if (this._background) {\n                context.fillStyle = this._background;\n                context.fillRect(this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height);\n            }\n            var cellCountX = this._currentMeasure.width / this._cellWidth;\n            var cellCountY = this._currentMeasure.height / this._cellHeight;\n            // Minor lines\n            var left = this._currentMeasure.left + this._currentMeasure.width / 2;\n            var top_1 = this._currentMeasure.top + this._currentMeasure.height / 2;\n            if (this._displayMinorLines) {\n                context.strokeStyle = this._minorLineColor;\n                context.lineWidth = this._minorLineTickness;\n                for (var x = -cellCountX / 2 + 1; x < cellCountX / 2; x++) {\n                    var cellX = left + x * this.cellWidth;\n                    context.beginPath();\n                    context.moveTo(cellX, this._currentMeasure.top);\n                    context.lineTo(cellX, this._currentMeasure.top + this._currentMeasure.height);\n                    context.stroke();\n                }\n                for (var y = -cellCountY / 2 + 1; y < cellCountY / 2; y++) {\n                    var cellY = top_1 + y * this.cellHeight;\n                    context.beginPath();\n                    context.moveTo(this._currentMeasure.left, cellY);\n                    context.lineTo(this._currentMeasure.left + this._currentMeasure.width, cellY);\n                    context.stroke();\n                }\n            }\n            // Major lines\n            if (this._displayMajorLines) {\n                context.strokeStyle = this._majorLineColor;\n                context.lineWidth = this._majorLineTickness;\n                for (var x = -cellCountX / 2 + this._majorLineFrequency; x < cellCountX / 2; x += this._majorLineFrequency) {\n                    var cellX = left + x * this.cellWidth;\n                    context.beginPath();\n                    context.moveTo(cellX, this._currentMeasure.top);\n                    context.lineTo(cellX, this._currentMeasure.top + this._currentMeasure.height);\n                    context.stroke();\n                }\n                for (var y = -cellCountY / 2 + this._majorLineFrequency; y < cellCountY / 2; y += this._majorLineFrequency) {\n                    var cellY = top_1 + y * this.cellHeight;\n                    context.moveTo(this._currentMeasure.left, cellY);\n                    context.lineTo(this._currentMeasure.left + this._currentMeasure.width, cellY);\n                    context.closePath();\n                    context.stroke();\n                }\n            }\n        }\n        context.restore();\n    };\n    DisplayGrid.prototype._getTypeName = function () {\n        return \"DisplayGrid\";\n    };\n    __decorate([\n        serialize()\n    ], DisplayGrid.prototype, \"displayMinorLines\", null);\n    __decorate([\n        serialize()\n    ], DisplayGrid.prototype, \"displayMajorLines\", null);\n    __decorate([\n        serialize()\n    ], DisplayGrid.prototype, \"background\", null);\n    __decorate([\n        serialize()\n    ], DisplayGrid.prototype, \"cellWidth\", null);\n    __decorate([\n        serialize()\n    ], DisplayGrid.prototype, \"cellHeight\", null);\n    __decorate([\n        serialize()\n    ], DisplayGrid.prototype, \"minorLineTickness\", null);\n    __decorate([\n        serialize()\n    ], DisplayGrid.prototype, \"minorLineColor\", null);\n    __decorate([\n        serialize()\n    ], DisplayGrid.prototype, \"majorLineTickness\", null);\n    __decorate([\n        serialize()\n    ], DisplayGrid.prototype, \"majorLineColor\", null);\n    __decorate([\n        serialize()\n    ], DisplayGrid.prototype, \"majorLineFrequency\", null);\n    return DisplayGrid;\n}(Control));\nexport { DisplayGrid };\nRegisterClass(\"BABYLON.GUI.DisplayGrid\", DisplayGrid);\n//# sourceMappingURL=displayGrid.js.map","import { __decorate, __extends } from \"tslib\";\nimport { BaseSlider } from \"./baseSlider.js\";\nimport { Measure } from \"../../measure.js\";\nimport { Image } from \"../image.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { serialize } from \"@babylonjs/core/Misc/decorators.js\";\n/**\n * Class used to create slider controls based on images\n */\nvar ImageBasedSlider = /** @class */ (function (_super) {\n    __extends(ImageBasedSlider, _super);\n    /**\n     * Creates a new ImageBasedSlider\n     * @param name defines the control name\n     */\n    function ImageBasedSlider(name) {\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        _this._tempMeasure = new Measure(0, 0, 0, 0);\n        return _this;\n    }\n    Object.defineProperty(ImageBasedSlider.prototype, \"displayThumb\", {\n        get: function () {\n            return this._displayThumb && this.thumbImage != null;\n        },\n        set: function (value) {\n            if (this._displayThumb === value) {\n                return;\n            }\n            this._displayThumb = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ImageBasedSlider.prototype, \"backgroundImage\", {\n        /**\n         * Gets or sets the image used to render the background\n         */\n        get: function () {\n            return this._backgroundImage;\n        },\n        set: function (value) {\n            var _this = this;\n            if (this._backgroundImage === value) {\n                return;\n            }\n            this._backgroundImage = value;\n            if (value && !value.isLoaded) {\n                value.onImageLoadedObservable.addOnce(function () { return _this._markAsDirty(); });\n            }\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ImageBasedSlider.prototype, \"valueBarImage\", {\n        /**\n         * Gets or sets the image used to render the value bar\n         */\n        get: function () {\n            return this._valueBarImage;\n        },\n        set: function (value) {\n            var _this = this;\n            if (this._valueBarImage === value) {\n                return;\n            }\n            this._valueBarImage = value;\n            if (value && !value.isLoaded) {\n                value.onImageLoadedObservable.addOnce(function () { return _this._markAsDirty(); });\n            }\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ImageBasedSlider.prototype, \"thumbImage\", {\n        /**\n         * Gets or sets the image used to render the thumb\n         */\n        get: function () {\n            return this._thumbImage;\n        },\n        set: function (value) {\n            var _this = this;\n            if (this._thumbImage === value) {\n                return;\n            }\n            this._thumbImage = value;\n            if (value && !value.isLoaded) {\n                value.onImageLoadedObservable.addOnce(function () { return _this._markAsDirty(); });\n            }\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ImageBasedSlider.prototype._getTypeName = function () {\n        return \"ImageBasedSlider\";\n    };\n    ImageBasedSlider.prototype._draw = function (context) {\n        context.save();\n        this._applyStates(context);\n        this._prepareRenderingData(\"rectangle\");\n        var thumbPosition = this._getThumbPosition();\n        var left = this._renderLeft;\n        var top = this._renderTop;\n        var width = this._renderWidth;\n        var height = this._renderHeight;\n        // Background\n        if (this._backgroundImage) {\n            this._tempMeasure.copyFromFloats(left, top, width, height);\n            if (this.isThumbClamped && this.displayThumb) {\n                if (this.isVertical) {\n                    this._tempMeasure.height += this._effectiveThumbThickness;\n                }\n                else {\n                    this._tempMeasure.width += this._effectiveThumbThickness;\n                }\n            }\n            this._backgroundImage._currentMeasure.copyFrom(this._tempMeasure);\n            this._backgroundImage._draw(context);\n        }\n        // Bar\n        if (this._valueBarImage) {\n            if (this.isVertical) {\n                if (this.isThumbClamped && this.displayThumb) {\n                    this._tempMeasure.copyFromFloats(left, top + thumbPosition, width, height - thumbPosition + this._effectiveThumbThickness);\n                }\n                else {\n                    this._tempMeasure.copyFromFloats(left, top + thumbPosition, width, height - thumbPosition);\n                }\n            }\n            else {\n                if (this.isThumbClamped && this.displayThumb) {\n                    this._tempMeasure.copyFromFloats(left, top, thumbPosition + this._effectiveThumbThickness / 2, height);\n                }\n                else {\n                    this._tempMeasure.copyFromFloats(left, top, thumbPosition, height);\n                }\n            }\n            this._valueBarImage._currentMeasure.copyFrom(this._tempMeasure);\n            this._valueBarImage._draw(context);\n        }\n        // Thumb\n        if (this.displayThumb) {\n            if (this.isVertical) {\n                this._tempMeasure.copyFromFloats(left - this._effectiveBarOffset, this._currentMeasure.top + thumbPosition, this._currentMeasure.width, this._effectiveThumbThickness);\n            }\n            else {\n                this._tempMeasure.copyFromFloats(this._currentMeasure.left + thumbPosition, this._currentMeasure.top, this._effectiveThumbThickness, this._currentMeasure.height);\n            }\n            this._thumbImage._currentMeasure.copyFrom(this._tempMeasure);\n            this._thumbImage._draw(context);\n        }\n        context.restore();\n    };\n    /**\n     * Serializes the current control\n     * @param serializationObject defined the JSON serialized object\n     */\n    ImageBasedSlider.prototype.serialize = function (serializationObject) {\n        _super.prototype.serialize.call(this, serializationObject);\n        var backgroundImage = {};\n        var thumbImage = {};\n        var valueBarImage = {};\n        this.backgroundImage.serialize(backgroundImage);\n        this.thumbImage.serialize(thumbImage);\n        this.valueBarImage.serialize(valueBarImage);\n        serializationObject.backgroundImage = backgroundImage;\n        serializationObject.thumbImage = thumbImage;\n        serializationObject.valueBarImage = valueBarImage;\n    };\n    /**\n     * @param serializedObject\n     * @param host\n     * @hidden\n     */\n    ImageBasedSlider.prototype._parseFromContent = function (serializedObject, host) {\n        _super.prototype._parseFromContent.call(this, serializedObject, host);\n        this.backgroundImage = Image.Parse(serializedObject.backgroundImage, host);\n        this.thumbImage = Image.Parse(serializedObject.thumbImage, host);\n        this.valueBarImage = Image.Parse(serializedObject.valueBarImage, host);\n    };\n    __decorate([\n        serialize()\n    ], ImageBasedSlider.prototype, \"displayThumb\", null);\n    return ImageBasedSlider;\n}(BaseSlider));\nexport { ImageBasedSlider };\nRegisterClass(\"BABYLON.GUI.ImageBasedSlider\", ImageBasedSlider);\n//# sourceMappingURL=imageBasedSlider.js.map","import { Control } from \"./control.js\";\nimport { StackPanel } from \"./stackPanel.js\";\nimport { TextBlock } from \"./textBlock.js\";\n/**\n * Forcing an export so that this code will execute\n * @hidden\n */\nvar name = \"Statics\";\nexport { name };\n/**\n * Creates a stack panel that can be used to render headers\n * @param control defines the control to associate with the header\n * @param text defines the text of the header\n * @param size defines the size of the header\n * @param options defines options used to configure the header\n * @param options.isHorizontal\n * @param options.controlFirst\n * @returns a new StackPanel\n */\nControl.AddHeader = function (control, text, size, options) {\n    var panel = new StackPanel(\"panel\");\n    var isHorizontal = options ? options.isHorizontal : true;\n    var controlFirst = options ? options.controlFirst : true;\n    panel.isVertical = !isHorizontal;\n    var header = new TextBlock(\"header\");\n    header.text = text;\n    header.textHorizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n    if (isHorizontal) {\n        header.width = size;\n    }\n    else {\n        header.height = size;\n    }\n    if (controlFirst) {\n        panel.addControl(control);\n        panel.addControl(header);\n        header.paddingLeft = \"5px\";\n    }\n    else {\n        panel.addControl(header);\n        panel.addControl(control);\n        header.paddingRight = \"5px\";\n    }\n    header.shadowBlur = control.shadowBlur;\n    header.shadowColor = control.shadowColor;\n    header.shadowOffsetX = control.shadowOffsetX;\n    header.shadowOffsetY = control.shadowOffsetY;\n    return panel;\n};\n//# sourceMappingURL=statics.js.map","import { __decorate, __extends } from \"tslib\";\nimport { Container } from \"./container.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { serialize } from \"@babylonjs/core/Misc/decorators.js\";\n/** Class used to create rectangle container */\nvar Rectangle = /** @class */ (function (_super) {\n    __extends(Rectangle, _super);\n    /**\n     * Creates a new Rectangle\n     * @param name defines the control name\n     */\n    function Rectangle(name) {\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        _this._thickness = 1;\n        _this._cornerRadius = 0;\n        return _this;\n    }\n    Object.defineProperty(Rectangle.prototype, \"thickness\", {\n        /** Gets or sets border thickness */\n        get: function () {\n            return this._thickness;\n        },\n        set: function (value) {\n            if (this._thickness === value) {\n                return;\n            }\n            this._thickness = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Rectangle.prototype, \"cornerRadius\", {\n        /** Gets or sets the corner radius angle */\n        get: function () {\n            return this._cornerRadius;\n        },\n        set: function (value) {\n            if (value < 0) {\n                value = 0;\n            }\n            if (this._cornerRadius === value) {\n                return;\n            }\n            this._cornerRadius = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Rectangle.prototype._getTypeName = function () {\n        return \"Rectangle\";\n    };\n    /** @hidden */\n    Rectangle.prototype._computeAdditionnalOffsetX = function () {\n        if (this._cornerRadius) {\n            // Take in account the aliasing\n            return 1;\n        }\n        return 0;\n    };\n    /** @hidden */\n    Rectangle.prototype._computeAdditionnalOffsetY = function () {\n        if (this._cornerRadius) {\n            // Take in account the aliasing\n            return 1;\n        }\n        return 0;\n    };\n    Rectangle.prototype._localDraw = function (context) {\n        context.save();\n        if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n            context.shadowColor = this.shadowColor;\n            context.shadowBlur = this.shadowBlur;\n            context.shadowOffsetX = this.shadowOffsetX;\n            context.shadowOffsetY = this.shadowOffsetY;\n        }\n        if (this._background) {\n            context.fillStyle = this.typeName === \"Button\" ? (this.isEnabled ? this._background : this.disabledColor) : this._background;\n            if (this._cornerRadius) {\n                this._drawRoundedRect(context, this._thickness / 2);\n                context.fill();\n            }\n            else {\n                context.fillRect(this._currentMeasure.left, this._currentMeasure.top, this._currentMeasure.width, this._currentMeasure.height);\n            }\n        }\n        if (this._thickness) {\n            if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n                context.shadowBlur = 0;\n                context.shadowOffsetX = 0;\n                context.shadowOffsetY = 0;\n            }\n            if (this.color) {\n                context.strokeStyle = this.color;\n            }\n            context.lineWidth = this._thickness;\n            if (this._cornerRadius) {\n                this._drawRoundedRect(context, this._thickness / 2);\n                context.stroke();\n            }\n            else {\n                context.strokeRect(this._currentMeasure.left + this._thickness / 2, this._currentMeasure.top + this._thickness / 2, this._currentMeasure.width - this._thickness, this._currentMeasure.height - this._thickness);\n            }\n        }\n        context.restore();\n    };\n    Rectangle.prototype._additionalProcessing = function (parentMeasure, context) {\n        _super.prototype._additionalProcessing.call(this, parentMeasure, context);\n        this._measureForChildren.width -= 2 * this._thickness;\n        this._measureForChildren.height -= 2 * this._thickness;\n        this._measureForChildren.left += this._thickness;\n        this._measureForChildren.top += this._thickness;\n    };\n    Rectangle.prototype._drawRoundedRect = function (context, offset) {\n        if (offset === void 0) { offset = 0; }\n        var x = this._currentMeasure.left + offset;\n        var y = this._currentMeasure.top + offset;\n        var width = this._currentMeasure.width - offset * 2;\n        var height = this._currentMeasure.height - offset * 2;\n        var radius = Math.min(height / 2 - 2, Math.min(width / 2 - 2, this._cornerRadius));\n        context.beginPath();\n        context.moveTo(x + radius, y);\n        context.lineTo(x + width - radius, y);\n        context.quadraticCurveTo(x + width, y, x + width, y + radius);\n        context.lineTo(x + width, y + height - radius);\n        context.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n        context.lineTo(x + radius, y + height);\n        context.quadraticCurveTo(x, y + height, x, y + height - radius);\n        context.lineTo(x, y + radius);\n        context.quadraticCurveTo(x, y, x + radius, y);\n        context.closePath();\n    };\n    Rectangle.prototype._clipForChildren = function (context) {\n        if (this._cornerRadius) {\n            this._drawRoundedRect(context, this._thickness);\n            context.clip();\n        }\n    };\n    __decorate([\n        serialize()\n    ], Rectangle.prototype, \"thickness\", null);\n    __decorate([\n        serialize()\n    ], Rectangle.prototype, \"cornerRadius\", null);\n    return Rectangle;\n}(Container));\nexport { Rectangle };\nRegisterClass(\"BABYLON.GUI.Rectangle\", Rectangle);\n//# sourceMappingURL=rectangle.js.map","import { __decorate, __extends } from \"tslib\";\nimport { Tools } from \"@babylonjs/core/Misc/tools.js\";\nimport { Container } from \"./container.js\";\nimport { Control } from \"./control.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport { serialize } from \"@babylonjs/core/Misc/decorators.js\";\n/**\n * Class used to create a 2D stack panel container\n */\nvar StackPanel = /** @class */ (function (_super) {\n    __extends(StackPanel, _super);\n    /**\n     * Creates a new StackPanel\n     * @param name defines control name\n     */\n    function StackPanel(name) {\n        var _this = _super.call(this, name) || this;\n        _this.name = name;\n        _this._isVertical = true;\n        _this._manualWidth = false;\n        _this._manualHeight = false;\n        _this._doNotTrackManualChanges = false;\n        _this._spacing = 0;\n        /**\n         * Gets or sets a boolean indicating that layout warnings should be ignored\n         */\n        _this.ignoreLayoutWarnings = false;\n        return _this;\n    }\n    Object.defineProperty(StackPanel.prototype, \"isVertical\", {\n        /** Gets or sets a boolean indicating if the stack panel is vertical or horizontal*/\n        get: function () {\n            return this._isVertical;\n        },\n        set: function (value) {\n            if (this._isVertical === value) {\n                return;\n            }\n            this._isVertical = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StackPanel.prototype, \"spacing\", {\n        /**\n         * Gets or sets the spacing (in pixels) between each child.\n         */\n        get: function () {\n            return this._spacing;\n        },\n        set: function (value) {\n            if (this._spacing === value) {\n                return;\n            }\n            this._spacing = value;\n            this._markAsDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StackPanel.prototype, \"width\", {\n        get: function () {\n            return this._width.toString(this._host);\n        },\n        /**\n         * Gets or sets panel width.\n         * This value should not be set when in horizontal mode as it will be computed automatically\n         */\n        set: function (value) {\n            if (!this._doNotTrackManualChanges) {\n                this._manualWidth = true;\n            }\n            if (this._width.toString(this._host) === value) {\n                return;\n            }\n            if (this._width.fromString(value)) {\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(StackPanel.prototype, \"height\", {\n        get: function () {\n            return this._height.toString(this._host);\n        },\n        /**\n         * Gets or sets panel height.\n         * This value should not be set when in vertical mode as it will be computed automatically\n         */\n        set: function (value) {\n            if (!this._doNotTrackManualChanges) {\n                this._manualHeight = true;\n            }\n            if (this._height.toString(this._host) === value) {\n                return;\n            }\n            if (this._height.fromString(value)) {\n                this._markAsDirty();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    StackPanel.prototype._getTypeName = function () {\n        return \"StackPanel\";\n    };\n    /**\n     * @param parentMeasure\n     * @param context\n     * @hidden\n     */\n    StackPanel.prototype._preMeasure = function (parentMeasure, context) {\n        for (var _i = 0, _a = this._children; _i < _a.length; _i++) {\n            var child = _a[_i];\n            if (this._isVertical) {\n                child.verticalAlignment = Control.VERTICAL_ALIGNMENT_TOP;\n            }\n            else {\n                child.horizontalAlignment = Control.HORIZONTAL_ALIGNMENT_LEFT;\n            }\n        }\n        _super.prototype._preMeasure.call(this, parentMeasure, context);\n    };\n    StackPanel.prototype._additionalProcessing = function (parentMeasure, context) {\n        _super.prototype._additionalProcessing.call(this, parentMeasure, context);\n        this._measureForChildren.copyFrom(parentMeasure);\n        this._measureForChildren.left = this._currentMeasure.left;\n        this._measureForChildren.top = this._currentMeasure.top;\n        if (!this.isVertical || this._manualWidth) {\n            this._measureForChildren.width = this._currentMeasure.width;\n        }\n        if (this.isVertical || this._manualHeight) {\n            this._measureForChildren.height = this._currentMeasure.height;\n        }\n    };\n    StackPanel.prototype._postMeasure = function () {\n        var stackWidth = 0;\n        var stackHeight = 0;\n        var childrenCount = this._children.length;\n        for (var index = 0; index < childrenCount; index++) {\n            var child = this._children[index];\n            if (!child.isVisible || child.notRenderable) {\n                continue;\n            }\n            if (this._isVertical) {\n                if (child.top !== stackHeight + \"px\") {\n                    child.top = stackHeight + \"px\";\n                    this._rebuildLayout = true;\n                    child._top.ignoreAdaptiveScaling = true;\n                }\n                if (child._height.isPercentage && !child._automaticSize) {\n                    if (!this.ignoreLayoutWarnings) {\n                        Tools.Warn(\"Control (Name:\".concat(child.name, \", UniqueId:\").concat(child.uniqueId, \") is using height in percentage mode inside a vertical StackPanel\"));\n                    }\n                }\n                else {\n                    stackHeight += child._currentMeasure.height + child._paddingTopInPixels + child._paddingBottomInPixels + (index < childrenCount - 1 ? this._spacing : 0);\n                }\n            }\n            else {\n                if (child.left !== stackWidth + \"px\") {\n                    child.left = stackWidth + \"px\";\n                    this._rebuildLayout = true;\n                    child._left.ignoreAdaptiveScaling = true;\n                }\n                if (child._width.isPercentage && !child._automaticSize) {\n                    if (!this.ignoreLayoutWarnings) {\n                        Tools.Warn(\"Control (Name:\".concat(child.name, \", UniqueId:\").concat(child.uniqueId, \") is using width in percentage mode inside a horizontal StackPanel\"));\n                    }\n                }\n                else {\n                    stackWidth += child._currentMeasure.width + child._paddingLeftInPixels + child._paddingRightInPixels + (index < childrenCount - 1 ? this._spacing : 0);\n                }\n            }\n        }\n        stackWidth += this._paddingLeftInPixels + this._paddingRightInPixels;\n        stackHeight += this._paddingTopInPixels + this._paddingBottomInPixels;\n        this._doNotTrackManualChanges = true;\n        // Let stack panel width or height default to stackHeight and stackWidth if dimensions are not specified.\n        // User can now define their own height and width for stack panel.\n        var panelWidthChanged = false;\n        var panelHeightChanged = false;\n        if (!this._manualHeight && this._isVertical) {\n            // do not specify height if strictly defined by user\n            var previousHeight = this.height;\n            this.height = stackHeight + \"px\";\n            panelHeightChanged = previousHeight !== this.height || !this._height.ignoreAdaptiveScaling;\n        }\n        if (!this._manualWidth && !this._isVertical) {\n            // do not specify width if strictly defined by user\n            var previousWidth = this.width;\n            this.width = stackWidth + \"px\";\n            panelWidthChanged = previousWidth !== this.width || !this._width.ignoreAdaptiveScaling;\n        }\n        if (panelHeightChanged) {\n            this._height.ignoreAdaptiveScaling = true;\n        }\n        if (panelWidthChanged) {\n            this._width.ignoreAdaptiveScaling = true;\n        }\n        this._doNotTrackManualChanges = false;\n        if (panelWidthChanged || panelHeightChanged) {\n            this._rebuildLayout = true;\n        }\n        _super.prototype._postMeasure.call(this);\n    };\n    /**\n     * Serializes the current control\n     * @param serializationObject defined the JSON serialized object\n     */\n    StackPanel.prototype.serialize = function (serializationObject) {\n        _super.prototype.serialize.call(this, serializationObject);\n        serializationObject.manualWidth = this._manualWidth;\n        serializationObject.manualHeight = this._manualHeight;\n    };\n    /**\n     * @param serializedObject\n     * @param host\n     * @hidden\n     */\n    StackPanel.prototype._parseFromContent = function (serializedObject, host) {\n        this._manualWidth = serializedObject.manualWidth;\n        this._manualHeight = serializedObject.manualHeight;\n        _super.prototype._parseFromContent.call(this, serializedObject, host);\n    };\n    __decorate([\n        serialize()\n    ], StackPanel.prototype, \"ignoreLayoutWarnings\", void 0);\n    __decorate([\n        serialize()\n    ], StackPanel.prototype, \"isVertical\", null);\n    __decorate([\n        serialize()\n    ], StackPanel.prototype, \"spacing\", null);\n    __decorate([\n        serialize()\n    ], StackPanel.prototype, \"width\", null);\n    __decorate([\n        serialize()\n    ], StackPanel.prototype, \"height\", null);\n    return StackPanel;\n}(Container));\nexport { StackPanel };\nRegisterClass(\"BABYLON.GUI.StackPanel\", StackPanel);\n//# sourceMappingURL=stackPanel.js.map"],"names":["AdvancedDynamicTextureInstrumentation","texture","this","_captureRenderTime","_renderTime","_captureLayoutTime","_layoutTime","_onBeginRenderObserver","_onEndRenderObserver","_onBeginLayoutObserver","_onEndLayoutObserver","Object","defineProperty","prototype","get","enumerable","configurable","set","value","_this","onBeginRenderObservable","add","beginMonitoring","onEndRenderObservable","endMonitoring","remove","onBeginLayoutObservable","onEndLayoutObservable","dispose","AdvancedDynamicTexture","_super","name","width","height","scene","generateMipMaps","samplingMode","invertY","call","_isDirty","_rootContainer","_lastControlOver","_lastControlDown","_capturingControl","_linkedControls","Array","_isFullscreen","_fullscreenViewport","_idealWidth","_idealHeight","_useSmallestIdeal","_renderAtIdealSize","_blockNextFocusCheck","_renderScale","_cursorChanged","_defaultMousePointerId","_numLayoutCalls","_numRenderCalls","_clipboardData","onClipboardObservable","onControlPickedObservable","premulAlpha","applyYInversionOnUpdate","checkPointerEveryFrame","_useInvalidateRectOptimization","_invalidatedRectangle","_clearMeasure","_onClipboardCopy","rawEvt","evt","ev","notifyObservers","preventDefault","_onClipboardCut","_onClipboardPaste","getScene","_texture","_rootElement","getEngine","getInputElement","_renderObserver","onBeforeCameraRenderObservable","camera","_checkUpdate","_preKeyboardObserver","onPreKeyboardObservable","info","_focusedControl","type","processKeyboard","event","skipOnPointerObservable","_link","hasAlpha","_resizeObserver","onResizeObservable","_onResize","isReady","_background","markAsDirty","_markAllAsDirty","rwidth","rheight","getSize","window","innerWidth","innerHeight","_layerToDispose","getChildren","getDescendants","directDescendantsOnly","predicate","getControlsByType","typeName","control","getControlByName","_getControlByKey","key","find","onBlur","onFocus","layer","isBackground","getClassName","executeOnAllControls","func","container","_i","_a","children","length","child","invalidateRect","invalidMinX","invalidMinY","invalidMaxX","invalidMaxY","maxX","Math","ceil","max","left","maxY","top","floor","min","createStyle","addControl","removeControl","moveToNonOverlappedPosition","overlapGroup","deltaStep","repelFactor","controlsForGroup","isArray","descendants","undefined","filter","c","forEach","control1","velocity","center","centerX","centerY","control2","_Overlaps","diff","subtract","diffLength","normalize","scale","overlapDeltaMultiplier","linkOffsetXInPixels","x","linkOffsetYInPixels","y","_pointerMoveObserver","onPrePointerObservable","_sceneRenderObserver","onBeforeRenderObservable","_pointerObserver","onPointerObservable","_canvasPointerOutObserver","onCanvasPointerOutObservable","_canvasBlurObserver","onCanvasBlurObservable","clear","engine","textureSize","renderWidth","getRenderWidth","renderHeight","getRenderHeight","scaleTo","_getGlobalViewport","size","globalViewPort","toGlobal","targetX","round","rootContainer","scaleX","targetY","scaleY","getProjectedPosition","position","worldMatrix","result","getProjectedPositionWithZ","globalViewport","projectedPosition","getTransformMatrix","z","layerMask","_loop_1","isVisible","mesh","_linkedMesh","isDisposed","linkWithMesh","getBoundingInfo","boundingSphere","getWorldMatrix","notRenderable","_moveToProjectedPosition","isDirty","_render","update","AllowGPUOptimizations","context","getContext","font","strokeStyle","measure","_layout","copyFrom","copyFromFloats","clearRect","save","fillStyle","fillRect","restore","_changeCursor","cursor","style","_registerLastControlDown","pointerId","_doPicking","pi","buttonIndex","deltaX","deltaY","cameraToUseForPointers","activeCamera","viewport","_processObservables","_processPicking","doNotHandleCursors","_onPointerOut","_manageFocus","_cleanControlAfterRemovalFromList","list","hasOwnProperty","_cleanControlAfterRemoval","_translateToPicking","tempViewport","originalCameraToUseForPointers","rigCameras","rigViewport_1","rigCamera","toGlobalToRef","pointerX","getHardwareScalingLevel","pointerY","_shouldBlockPointer","button","attach","isPointerCaptured","_attachPickingToSceneRender","_attachToOnPointerOut","_attachToOnBlur","registerClipboardEvents","self","addEventListener","unRegisterClipboardEvents","removeEventListener","attachToMesh","supportPointerMove","pickInfo","hit","pickedMesh","uv","getTextureCoordinates","_forcePointerUp","focusedControl","friendlyControls","keepsFocusWith","canMoveFocus","friendlyControls_1","_host","otherHost","isAscendant","enablePointerMoveEvents","pick","moveFocusToControl","_lastPickedControl","isFocusInvisible","pickFunction","forcePicking","pointerEvent","entries","_onCanvasBlur","serializeContent","serializationObject","root","serialize","parseContent","serializedObject","scaleToSize","parseFromSnippetAsync","snippetId","Promise","resolve","reject","request","readyState","status","snippet","JSON","parse","responseText","jsonPayload","gui","open","SnippetUrl","replace","send","parseFromURLAsync","url","widthInPixels","heightInPixels","CreateForMesh","onlyAlphaTesting","materialSetupCallback","_CreateMaterial","uniqueId","concat","internalClassType","material","backFaceCulling","diffuseColor","specularColor","diffuseTexture","emissiveTexture","opacityTexture","CreateForMeshTexture","CreateFullscreenUI","foreground","sampling","adaptiveScaling","resultScene","newScale","ratio","Button","delegatePickingToChildren","thickness","isPointerBlocker","alphaStore","pointerEnterAnimation","alpha","pointerOutAnimation","pointerDownAnimation","pointerUpAnimation","_image","_textBlock","_getTypeName","_isEnabled","isHitTestVisible","contains","index","_children","isEnabled","_onPointerEnter","target","isReadOnly","force","_onPointerDown","coordinates","_onPointerUp","notifyClick","textBlockName","imageName","_parseFromContent","host","getChildByName","CreateImageButton","text","imageUrl","textBlock","textWrapping","textHorizontalAlignment","paddingLeft","iconImage","stretch","horizontalAlignment","CreateImageOnlyButton","CreateSimpleButton","CreateImageWithCenterTextButton","Container","_measureForChildren","_adaptWidthToChildren","_adaptHeightToChildren","_renderToIntermediateTexture","_intermediateTexture","logLayoutCycleErrors","maxLayoutCycle","_markAsDirty","_isReadOnly","_flagDescendantsAsMatrixDirty","_isClipped","_markMatrixAsDirty","getChildByType","containsControl","indexOf","_reOrderControl","clearControls","children_1","slice","splice","parent","wasAdded","zIndex","push","_offsetLeft","offset","_offsetTop","_localDraw","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","_currentMeasure","_beforeLayout","_processMeasures","parentMeasure","_cachedParentMeasure","isEqualsTo","_evaluateClippingState","_b","transformToRef","_transformMatrix","_prevCurrentMeasureTransformedIntoGlobalSpace","rebuildCount","_applyStates","computedWidth","computedHeight","_rebuildLayout","_c","_tempParentMeasure","adaptWidthToChildren","_width","isPixel","_paddingLeftInPixels","_paddingRightInPixels","adaptHeightToChildren","_height","_paddingTopInPixels","_paddingBottomInPixels","paddingLeftInPixels","paddingRightInPixels","ignoreAdaptiveScaling","paddingTopInPixels","paddingBottomInPixels","_postMeasure","_draw","invalidatedRectangle","renderToIntermediateTextureThisDraw","contextToDrawTo","translate","clipChildren","_clipForChildren","_intersectsRect","globalAlpha","drawImage","canvas","getDescendantsToRef","results","item","hoverCursor","_additionalProcessing","childSerializationObject","childData","Control","_alpha","_alphaSet","_zIndex","_tempPaddingMeasure","_fontFamily","_fontStyle","_fontWeight","_fontSize","_color","_style","_horizontalAlignment","HORIZONTAL_ALIGNMENT_CENTER","_verticalAlignment","VERTICAL_ALIGNMENT_CENTER","_wasDirty","_descendantsOnlyPadding","_paddingLeft","_paddingRight","_paddingTop","_paddingBottom","_left","_top","_scaleX","_scaleY","_rotation","_transformCenterX","_transformCenterY","_invertTransformMatrix","_transformedPosition","_isMatrixDirty","_isVisible","_isHighlighted","_highlightColor","_highlightLineWidth","_fontSet","_dummyVector2","_downCount","_enterCount","_doNotRender","_downPointerIds","_evaluatedMeasure","_evaluatedParentMeasure","_disabledColor","_disabledColorItem","_customData","_automaticSize","metadata","clipContent","useBitmapCache","_shadowOffsetX","_shadowOffsetY","_shadowBlur","_previousShadowBlur","_shadowColor","_linkOffsetX","_linkOffsetY","onWheelObservable","onPointerMoveObservable","onPointerOutObservable","onPointerDownObservable","onPointerUpObservable","onPointerClickObservable","onPointerEnterObservable","onDirtyObservable","onBeforeDrawObservable","onAfterDrawObservable","onDisposeObservable","fixedRatio","_fixedRatioMasterIsWidth","_tmpMeasureA","_fontOffset","toString","fromString","getValueInPixel","isNaN","_resetFontCache","onChangedObservable","_styleObserver","isPercentage","fontSizeToUse","getValue","fontSize","paddingRight","paddingTop","paddingBottom","linkOffsetX","linkOffsetY","recursivelyFirePointerOut","pointer","getAscendantOfClass","className","markAllAsDirty","getLocalCoordinates","globalCoordinates","getLocalCoordinatesToRef","getParentLocalCoordinates","moveToVector3","HORIZONTAL_ALIGNMENT_LEFT","verticalAlignment","VERTICAL_ALIGNMENT_TOP","setPadding","right","bottom","setPaddingInPixels","oldLeft","oldTop","newLeft","newTop","abs","rect","_transform","_computeAdditionnalOffsetX","_computeAdditionnalOffsetY","useInvalidateRectOptimization","leftShadowOffset","rightShadowOffset","topShadowOffset","bottomShadowOffset","offsetX","offsetY","_font","_prepareFont","getUniqueId","rotate","_cachedOffsetX","_cachedOffsetY","invertToRef","_renderHighlight","isHighlighted","lineWidth","_renderHighlightSpecific","strokeRect","_isFontSizeInPercentage","useSmallestIdeal","AllowAlphaInheritance","renderToIntermediateTexture","addAndTransformToRef","descendantsOnlyPadding","_preMeasure","_measure","_computeAlignment","hasObservers","parentWidth","parentHeight","HORIZONTAL_ALIGNMENT_RIGHT","VERTICAL_ALIGNMENT_BOTTOM","_clip","beginPath","_ClipMeasure","intersection","clip","_cacheData","putImageData","getImageData","transformCoordinates","_onPointerMove","canNotify","canNotifyClick","_onWheelScroll","previousControlOver","fontStyle","fontWeight","fontSizeInPixels","fontFamily","_GetFontOffset","_HORIZONTAL_ALIGNMENT_LEFT","_HORIZONTAL_ALIGNMENT_RIGHT","_HORIZONTAL_ALIGNMENT_CENTER","_VERTICAL_ALIGNMENT_TOP","_VERTICAL_ALIGNMENT_BOTTOM","_VERTICAL_ALIGNMENT_CENTER","_FontHeightSizes","Error","getFontOffset","Parse","controlType","drawEllipse","arc","PI","closePath","AddHeader","Image","_workingCanvas","_loaded","_stretch","STRETCH_FILL","_autoScale","_sourceLeft","_sourceTop","_sourceWidth","_sourceHeight","_svgAttributesComputationCompleted","_isSVG","_cellWidth","_cellHeight","_cellId","_populateNinePatchSlicesFromImage","_imageDataCache","data","onImageLoadedObservable","onSVGAttributesComputedObservable","source","_detectPointerOnOpaqueOnly","_sliceLeft","_sliceRight","_sliceTop","_sliceBottom","_imageWidth","_imageHeight","_extractNinePatchSliceDataFromImage","synchronizeSizeWithContent","_rotate90","n","preserveProperties","_domImage","createCanvas","dataUrl","toDataURL","rotatedImage","_handleRotationForSVGImage","srcImage","dstImage","_rotate90SourceProperties","addOnce","srcLeft","sourceLeft","srcTop","sourceTop","srcWidth","domImage","srcHeight","dstLeft","dstTop","dstWidth","sourceWidth","dstHeight","sourceHeight","mult","i","imageData","_onImageLoaded","onload","_source","_svgCheck","createCanvasImage","src","SVGSVGElement","search","lastIndexOf","svgsrc_1","split","elemid_1","svgExist_1","document","body","querySelector","svgDoc","contentDocument","documentElement","vb","getAttribute","docwidth","Number","docheight","getElementById","_getSVGAttribs","svgImage","createElement","appendChild","svgobj","svgsrc","elemid","elem","vb_width","vb_height","elem_bbox","getBBox","elem_matrix_a","elem_matrix_d","elem_matrix_e","elem_matrix_f","mainMatrix","transform","baseVal","consolidate","matrix","a","d","e","f","context_1","STRETCH_NONE","STRETCH_UNIFORM","STRETCH_NINE_PATCH","STRETCH_EXTEND","_prepareWorkingCanvasForOpaqueDetection","_drawImage","sx","sy","sw","sh","tx","ty","tw","th","cellId","rowCount","naturalWidth","cellWidth","column","row","cellHeight","hRatio","vRatio","_renderNinePatch","leftWidth","topHeight","bottomHeight","rightWidth","centerWidth","centerHeight","targetCenterWidth","targetCenterHeight","centerLeftOffset","centerTopOffset","rightOffset","bottomOffset","sliceLeft","Checkbox","_isChecked","_checkSizeRatio","_thickness","onIsCheckedChangedObservable","actualWidth","actualHeight","color","offsetWidth","offsetHeight","isChecked","AddCheckBoxWithHeader","title","onValueChanged","panel","isVertical","checkbox","header","InputText","_placeholderText","_focusedBackground","_focusedColor","_placeholderColor","_margin","_autoStretchWidth","_maxWidth","_isFocused","_blinkIsEven","_cursorOffset","_deadKey","_addKey","_currentKey","_isTextHighlightOn","_textHighlightColor","_highligherOpacity","_highlightedText","_startHighlightIndex","_endHighlightIndex","_cursorIndex","_onFocusSelectAll","_isPointerDown","promptMessage","disableMobilePrompt","onTextChangedObservable","onBeforeKeyAddObservable","onFocusObservable","onBlurObservable","onTextHighlightObservable","onTextCopyObservable","onTextCutObservable","onTextPasteObservable","onKeyboardEventProcessedObservable","flag","_textWrapper","valueAsString","_textHasChanged","autoStretchWidth","_scrollLeft","clearTimeout","_blinkTimeout","_onClipboardObserver","_onPointerDblTapObserver","_focusedBy","prompt","clipboardInfo","_onCopyText","_onCutText","_onPasteText","pointerInfo","_processDblClick","_selectAllText","focus","blur","_connectedVirtualKeyboard","processKey","keyCode","ctrlKey","metaKey","removePart","substr","deletePosition","shiftKey","code","deadKey","insertPosition","_updateValueFromCursorIndex","moveLeft","moveRight","isWord","_clickedCoordinate","clipboardData","setData","types","getData","clipTextLeft","_beforeRenderText","_textWidth","measureText","marginWidth","rootY","ascent","availableWidth","textLeft","fillText","absoluteCursorPosition","currentSize","previousDist","cursorOffsetText","cursorOffsetWidth","cursorLeft","setTimeout","highlightCursorOffsetWidth","substring","highlightCursorLeft","charAt","focusedColor","pointerType","textWrapper","Grid","_rowDefinitions","_rowDefinitionObservers","_columnDefinitions","_columnDefinitionObservers","_cells","_childControls","getRowDefinition","getColumnDefinition","addRowDefinition","addColumnDefinition","columnCount","setRowDefinition","current","setColumnDefinition","getChildrenAt","cell","getChildCellInfo","_tag","_removeCell","childIndex","_offsetCell","previousKey","removeColumnDefinition","removeRowDefinition","goodContainer","_getGridDefinitions","definitionCallback","widths","heights","lefts","tops","globalWidthPercentage","availableHeight","globalHeightPercentage","rowDefinition","_d","_e","columnDefinition","_f","_g","parseInt","moveTo","lineTo","stroke","top_1","columns","rows","tags","cd","unit","rd","columnValue","rowValue","cellInfo","rowNumber","columnNumber","ColorPicker","_value","_tmpColor","_pointerStartedOnSquare","_pointerStartedOnWheel","_squareLeft","_squareTop","_squareSize","_h","_s","_v","_lastPointerDownId","onValueChangedObservable","_pointerIsDown","equals","toHSVToRef","r","g","b","_Epsilon","_updateSquareProps","radius","squareSize","sqrt","_drawGradientSquare","hueValue","lgh","createLinearGradient","addColorStop","lgv","_drawCircle","_createColorWheelCanvas","image","maxDistSq","innerRadius","minDistSq","distSq","dist","ang","atan2","alphaRatio","alphaAmount","wheelThickness","_colorWheelCanvas","cx","cy","cos","sin","_updateValueFromPointer","_isPointOnSquare","_isPointOnWheel","dx","dy","ShowPickerDialogAsync","advancedTexture","options","pickerWidth","pickerHeight","headerHeight","lastColor","swatchLimit","numSwatchesPerLine","buttonFontSize","butEdit","swatchNumber","swatchDrawer","butSave","lastVal","activeField","drawerMaxRows","rawSwatchSize","parseFloat","gutterSize","colGutters","swatchSize","drawerMaxSize","containerSize","buttonColor","buttonBackgroundColor","buttonBackgroundHoverColor","buttonBackgroundClickColor","luminanceLimitColor","luminanceLimit","inputFieldLabels","inputTextBackgroundColor","inputTextColor","editSwatchMode","dialogContainer","savedColors","topRow","background","initialRows","gutterCount","pickerPanel","panelHead","pickerPanelRows","closeButton","headerColor3","closeIconColor","toHexString","textVerticalAlignment","closePicker","currentSwatch","dialogBody","dialogBodyCols","pickerGrid","picker","editSwatches","updateValues","pickerBodyRight","pickerBodyRightRows","pickerSwatchesButtons","pickerButtonsCol","pickerSwatches","pickeSwatchesRows","activeSwatches","labelTextSize","labelWidth","labelHeight","newText","newSwatch","swatchOutline","currentText","buttonGrid","buttonGridRows","buttonWidth","buttonHeight","butOK","butCancel","disableButton","setEditButtonVisibility","updateSwatches","pickerColorValues","currentColor","rgbValuesQuadrant","labelText_1","rValInt","updateInt","gValInt","bValInt","rValDec","updateFloat","gValDec","bValDec","hexValueQuadrant","labelText","hexVal","minusPound","inputField","pickedColor","minusPound_1","field","channel","newValue","test","newSwatchRGB","createSwatch","icon","swatch_1","swatchColor","swatchLuminence","metadata_1","mode","currentRows","thisRow","totalButtonsThisRow","buttonIterations","w","swatch","enableButton","disabled","val","newHexValue","checkHex","leadingZero","Ellipse","fill","FocusableButton","_unfocusedColor","displose","InputPassword","apply","arguments","pwdTextWrapper","txt","Line","_lineWidth","_x1","_y1","_x2","_y2","_dash","_connectedControl","_connectedControlDirtyObserver","setLineDash","_effectiveX2","_effectiveY2","end","x2","y2","x1","y1","MultiLine","onPointUpdate","_points","getAt","items","map","point","reset","resetLinks","previousPoint","first","_point","_minX","_minY","_maxX","_maxY","RadioButton","group","childRadio","offseHeight","AddRadioButtonWithHeader","radio","BaseSlider","_thumbWidth","_minimum","_maximum","_isVertical","_barOffset","_isThumbClamped","_displayThumb","_step","_effectiveBarOffset","_getThumbPosition","maximum","minimum","_backgroundBoxLength","_getThumbThickness","thumbThickness","_backgroundBoxThickness","_prepareRenderingData","_renderLeft","_renderTop","_renderWidth","_renderHeight","_effectiveThumbThickness","displayThumb","isThumbClamped","rotation","Slider","_borderColor","_thumbColor","_isThumbCircle","_displayValueBar","isThumbCircle","thumbPosition","SelectorGroup","_groupPanel","_selectors","_groupHeader","_addGroupHeader","label","groupHeading","_getSelector","selectorNb","removeSelector","CheckboxGroup","addCheckbox","checked","s","state","_selector","isHorizontal","controlFirst","groupPanel","selectors","buttonBackground","_setSelectorLabel","_setSelectorLabelColor","_setSelectorButtonColor","_setSelectorButtonBackground","RadioGroup","_selectNb","addRadio","nb","SliderGroup","addSlider","onValueChange","v","borderColor","SelectionPanel","groups","_buttonColor","_buttonBackground","_headerColor","_barColor","_barHeight","_spacerHeight","_bars","_groups","_panel","_addSpacer","_setHeaderColor","_setbuttonColor","j","_labelColor","_setLabelColor","_setButtonBackground","_setBarColor","_setBarHeight","_setSpacerHeight","separator","bar","addGroup","removeGroup","groupNb","setHeaderName","relabel","removeFromGroupSelector","addToGroupCheckbox","addToGroupRadio","addToGroupSlider","onVal","_ScrollViewerWindow","_freezeControls","_bucketWidth","_bucketHeight","_buckets","_restoreMeasures","_updateMeasures","_useBuckets","_makeBuckets","setBucketSizes","_bucketLen","_dispatchInBuckets","_oldLeft","_oldTop","bStartX","_origLeft","origLeft","bEndX","bEndY","_origTop","origTop","bStartY","bucket","lstc","leftInPixels","topInPixels","origLeftForChildren","origTopForChildren","_updateChildrenMeasures","_parentMeasure","_scrollChildren","_scrollChildrenWithBuckets","scrollLeft","scrollTop","maxWidth","parentClientWidth","maxHeight","parentClientHeight","updateInPlace","ScrollBar","_tempMeasure","_first","_originX","_originY","delta","ImageScrollBar","_thumbLength","_thumbHeight","_barImageHeight","num90RotationInVerticalMode","_backgroundBaseImage","isLoaded","_backgroundImage","rotatedValue","_thumbBaseImage","_thumbImage","ScrollViewer","isImageBased","_barSize","_pointerIsOver","_wheelPrecision","_horizontalBarImageHeight","_verticalBarImageHeight","_oldWindowContentsWidth","_oldWindowContentsHeight","_forceHorizontalBar","_forceVerticalBar","_useImageBar","_horizontalBarSpace","_verticalBarSpace","_dragSpace","_grid","_horizontalBar","_verticalBar","_window","_addBar","barColor","barBackground","freezeControls","bucketWidth","bucketHeight","resetWindow","_buildClientSizes","idealRatio","forceVerticalBar","forceHorizontalBar","_clientWidth","_clientHeight","_updateScroller","_setWindowPosition","_barImage","hb","thumbImage","_horizontalBarImage","_verticalBarImage","thumbLength","thumbHeight","barImageHeight","_barBackground","_barBackgroundImage","backgroundImage","_horizontalBarBackgroundImage","_verticalBarBackgroundImage","windowContentsWidth","windowContentsHeight","_endLeft","_endTop","thumbWidth","_attachWheel","barControl","barContainer","barOffset","_onWheelObserver","DisplayGrid","_minorLineTickness","_minorLineColor","_majorLineTickness","_majorLineColor","_majorLineFrequency","_displayMajorLines","_displayMinorLines","cellCountX","cellCountY","cellX","cellY","ImageBasedSlider","_valueBarImage","valueBarImage","Rectangle","_cornerRadius","disabledColor","_drawRoundedRect","quadraticCurveTo","StackPanel","_manualWidth","_manualHeight","_doNotTrackManualChanges","_spacing","ignoreLayoutWarnings","stackWidth","stackHeight","childrenCount","panelWidthChanged","panelHeightChanged","previousHeight","previousWidth","manualWidth","manualHeight"],"sourceRoot":""}