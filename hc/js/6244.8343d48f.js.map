{"version":3,"file":"js/6244.8343d48f.js","mappings":"+JAMA,MAAMA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,EAAPD,EAAc,EAAGE,YAAH,CAC9BC,OAAQ,oBACRC,EAAG,YACHC,QAAS,cACTC,WAAY,SACZC,MAAO,IACPC,OAAQ,GACRC,UAAW,OACXC,aAAc,UAGVC,GAAaX,EAAAA,EAAAA,IAAO,MAAPA,EAAc,EAAGE,YAAH,CAC/BG,QAAS,OACTO,eAAgB,SAChBN,WAAY,SACZO,QAAS,QACTC,WAAY,UACZN,OAAQ,OACRD,MAAO,GACPQ,MAAO,OACPL,aAAc,cACdM,OAAQ,cAGK,SAASC,EAAUC,GAChC,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,IAE7BC,EAAc,KAClB,MAAM,OAAEC,GAAWL,EACnBK,GAAUA,EAAOJ,IAcnB,OACE,gBAACpB,EAAD,KACE,gBAAC,KAAD,CACEyB,GAAI,CAAEC,GAAI,EAAGC,KAAM,GACnBC,YAAY,eACZR,MAAOA,EACPS,SAjBaC,IACjBT,EAASS,EAAEC,OAAOX,QAiBdY,QAdYF,IACE,KAAdA,EAAEG,SAGNV,OAYE,gBAACX,EAAD,CAAYsB,QAASX,GACnB,gBAAC,IAAD,U,2NC7CFY,GAAkBlC,EAAAA,EAAAA,IAAOmC,EAAAA,EAAPnC,EAAe,EAAGE,YAAH,CACrC,2BAA4B,CAC1BW,QAASX,EAAMkC,QAAQ,IAEzB,2BAA4B,CAC1BvB,QAASX,EAAMkC,QAAQ,QAUrBC,EAAwBnB,IAC5B,MAAM,SAAEoB,EAAF,QAAYC,GAAsBrB,EAAVsB,GAA9B,OAAwCtB,EAAxC,GAEA,OACE,gBAAC,KAAD,QAAaM,GAAI,CAAEiB,EAAG,EAAGrC,EAAG,EAAGY,OAAQ,SAAcwB,GAClDF,EACAC,EACC,gBAAC,IAAD,CACE,aAAW,QACXN,QAASM,EACTf,GAAI,CACFkB,SAAU,WACVC,MAAO,EACPC,IAAK,EACL7B,MAAQb,GAAUA,EAAM2C,QAAQC,KAAK,OAGvC,gBAAC,IAAD,OAEA,OAKJC,EAAkB7B,GAEpB,gBAAC,IAAD,CACE8B,OAAO,0BACPC,OAAQ,oCAER,gBAAC,IAAU/B,IAmFjB,EA9DsC,EACpCgC,QACAC,UACAC,OACAd,WACAe,SACAC,SACAC,YACA/B,KACAhB,SACAgD,aACAC,WACAC,kBAEA,MAAMC,EAAc,KAClBD,GAAeA,KAMjB,OACE,gBAACxB,EAAD,CAEE0B,KAAMT,EACNU,SAAUT,EACVG,UAAWA,EACXR,eAAgBA,EAChB,kBAAgB,0BAEfM,GAGC,gBAAChB,EAAD,CAAsByB,GAAG,yBAAyBvB,QAASoB,GACxDT,GAGL,gBAAC,IAAD,CACE1B,GAAI,CAEFhB,OAAS,IAAEA,EAASA,EAAS,KAAO,SAEtCuD,UAAQ,GAEPzB,GAEFkB,EAAa,KACZ,gBAAC,IAAD,KACGF,GAGC,gCACE,gBAAC,IAAD,CAAQrB,QAAS0B,GAAjB,gBACA,gBAAC,IAAD,CAAQ1B,QAnCH,KACfwB,GAAYA,MAkCF,qB,+ECtHd,MAkCA,EAlCqC,EACnCO,QACAC,aACAC,eACAC,0BAEA,MAAM,QAAEC,EAAF,SAAWC,EAAX,gBAAqBC,GAAoBL,EAW/C,OACE,gBAAC,IAAD,CACEM,mBAAoBD,GAAmB,GACvCE,UAAU,MACVC,MAAOT,EACPU,YAAaL,EACbM,KAAMP,EAAU,EAAIA,EAAU,EAAI,EAClCF,aAhBe,CAACU,EAAgBC,KAClCX,GAAgBA,EAAaW,EAAU,IAgBrCV,oBAbuBS,IACzBT,GACEA,EAAoB,IAASS,EAAM9C,OAAOX,MAAO,MAYjD2D,iBAAiB,iCACjBC,mBAAoB,EAAGC,OAAMC,QACnB,GAAED,UAAQC,YAAQC,KAAKC,KAAKnB,EAAQK,aAAeL,c,scC1BnE,MAAMoB,GAAWpF,EAAAA,EAAAA,IAAOqF,EAAAA,EAAPrF,EAAa,EAAGE,YAAH,CAC5BwC,SAAU,WACV,kBAAmB,CACjBrC,QAAS,OACTqC,SAAU,WACV4C,OAAQ,IACRC,OAAQ,EACR3E,eAAgB,gBAChBN,WAAY,SACZC,MAAO,OACPC,OAAQ,MACRgF,SAAU,OACVC,KAAM,EACN5E,QAAS,SACTC,WAAY,uBACZ,MAAO,CACL0E,SAAU,OACVE,WAAY,qBACZC,WAAY,IACZ5E,MAAO,OACP6E,OAAQ,kBAKRC,GAAW7F,EAAAA,EAAAA,IAAO,MAAPA,EAAc,EAAGE,YAAH,CAC7BG,QAAS,OACTO,eAAgB,SAChBN,WAAY,SACZC,MAAO,OACPC,OAAQ,MACR,MAAO,CACLgF,SAAU,MACVzE,MAAO,0BAIL+E,GAAa9F,EAAAA,EAAAA,IAAO,MAAPA,EAAc,EAAGE,YAAH,CAC/BG,QAAS,WAGL0F,GAAa/F,EAAAA,EAAAA,IAAO,MAAPA,EAAc,EAAGE,YAAH,CAC/BG,QAAS,OACTO,eAAgB,SAChBN,WAAY,SACZC,MAAO,0BACPC,OAAQ,KACRkC,SAAU,WACV4C,OAAQ,IACR3C,MAAO,OACP,sBAAuB,CACrBtC,QAAS,OACTO,eAAgB,SAChBN,WAAY,SACZC,MAAO,GACPC,OAAQ,GACRoF,OAAQ,QACRlF,aAAc,MACd,MAAO,CACLM,OAAQ,UACRwE,SAAU,OACVzE,MAAO,aAKPiF,GAAahG,EAAAA,EAAAA,IAAO,MAAPA,EAAc,EAAGE,YAAH,CAC/BG,QAAS,OACTO,eAAgB,SAChBN,WAAY,SACZE,OAAQ,OACRD,MAAO,qBAGH0F,GAAiBjG,EAAAA,EAAAA,IAAOkG,EAAAA,EAAPlG,EAAmB,EAAGE,YAAH,CACxCK,MAAO,GACPC,OAAQ,GACRoF,OAAQ,aA4BJO,EAAe,CACnB,CACEC,IAAK,UACLlD,MAAO,eACPmD,KAAM,uBAER,CACED,IAAK,SACLlD,MAAO,qBACPmD,KAAM,iBAER,CACED,IAAK,OACLlD,MAAO,eACPmD,KAAM,iBAER,CACED,IAAK,SACLlD,MAAO,eACPmD,KAAM,eAIJC,EAAgB,CACpBxC,GAAI,KACJyC,KAAM,OACN9B,MAAO,QACP+B,YAAa,cACbC,YAAa,cACbC,IAAK,OAEP,IAAIjC,EAAQ,EACZ,MA0KA,EA1K0C,EACxCkC,WACAC,YACAtF,cACAuF,WACAC,WACAC,YACAC,kBAEA,MAAOC,EAAUC,IAAe7F,EAAAA,EAAAA,UAA6B,OACtD8F,EAAaC,IAAkB/F,EAAAA,EAAAA,UAAS,MACzCuC,EAAOyD,QAAQJ,GAEfK,EAAY,CAACC,EAAMC,EAAQC,KAC/BC,IACApG,GAAeA,EAAYiG,EAAMC,EAAQC,IAGrCE,EAAa,KACjBlD,GAAS,EACT,KAAW,KACK,IAAVA,EACFnD,GAAeA,EAAYqF,EAAUC,GAClB,IAAVnC,GACTuC,GAAeA,EAAYL,EAAUC,GAEvCnC,EAAQ,IACP,MA6FCmD,EAAc9D,IAClB,MAAM+D,EAAQ,CACZrC,SAAU,QAEZ,OACE,gBAACsC,EAAA,EAAD,CACEhE,GAAI,aAAeA,EACnBmD,SAAUA,EACVrD,KAAMA,EACNrB,QAASmF,EACTK,cAAe,CACb,kBAAmB,iBAGpBjB,GACC,IAAAA,GAAQ,KAARA,GAAa,CAACkB,EAAMP,IAClB,gBAACQ,EAAA,EAAD,CACEzG,GAAIqG,EACJzB,IAAKqB,EACLxF,QAAS,IAAMqF,EAAUU,EAAK5B,IAAKe,EAAaM,IAEhD,qBAAGS,UAAW,YAAcF,EAAK3B,OAChC2B,EAAK9E,WAOZiF,EAAY,CAACvD,EAAO+B,EAAUc,EAAOrB,KAC7B,SAARA,EACFgC,EAASxD,EAAO+B,GAEhBW,EAAUlB,EAAKO,EAAUc,IAIvBC,EAAY,KAChBR,EAAY,MACZE,EAAe,KAGXgB,EAAW,CAACxD,EAAyCoD,KACzDd,EAAYtC,EAAMyD,eAClBjB,EAAeY,IAGjB,MAzImB,MACjB,IAAIM,EAAQzB,GAAYV,EACpBoC,EAAS,IAAcjC,EAAeS,GAAa,IACvD,OACE,gBAAC3B,EAAD,CAAU8C,UAAW,mBACnB,gBAACM,EAAA,EAAD,CACEhH,GAAI,CAAEjB,MAAO,OAAQC,OAAQ,IAAKiI,WAAY,QAC9CxG,QAAS0F,GAET,gBAAC5B,EAAD,KACGuC,GACC,IAAAA,GAAK,KAALA,GAAU,CAACN,EAAMP,IACf,gBAACzB,EAAD,CAAYI,IAAKqB,GACf,gBAACxB,EAAD,CACE/C,MAAO8E,EAAK9E,MACZnC,MAAM,UACNkB,QAAUJ,GAAMsG,EAAUtG,EAAG8E,EAAUC,EAAWoB,EAAK5B,MAEvD,gBAACsC,EAAA,EAAD,CAAOnB,KAAMS,EAAK3B,QAEN,SAAb2B,EAAK5B,IAAiBwB,EAAWjB,EAAS4B,EAAOzE,KAAO,SAIjE,gBAAC6E,EAAA,EAAD,CACEC,MAAM,OACNC,QAAQ,QACR9H,MAAM,iBACNS,GAAI,CACFT,MAAO,OACPyE,SAAU,OACVG,WAAY,OACZpF,MAAO,MACPuI,SAAU,SACVC,aAAc,WACdC,WAAY,UAEd9F,MAAOyD,EAAS4B,EAAOhC,OAEvB,wBAAMsB,MAAO,CAAEoB,YAAa,SAA5B,sBACCtC,EAAS4B,EAAOhC,OAEnB,gBAACoC,EAAA,EAAD,CACEC,MAAM,OACNC,QAAQ,QACR9H,MAAM,iBACNS,GAAI,CACFT,MAAO,UACPyE,SAAU,OACV0D,UAAW,aAGeC,IAA3BxC,EAAS4B,EAAO9D,OAAuB,KACtC,gCACE,wBAAMoD,MAAO,CAAEoB,YAAa,SAA5B,sBACCtC,EAAS4B,EAAO9D,OAASkC,EAAS4B,EAAO9D,OAAS,EAFrD,WAMJ,gBAACoB,EAAD,KACGc,EAAS4B,EAAO7B,OACjB0C,EAAAA,EAAAA,IAAcC,EAAAA,EAAAA,OAAqB1C,EAAS4B,EAAO7B,MACjD,uBACEmB,MAAO,CAAErH,OAAQ,QACjB8I,IACED,EAAAA,EAAAA,OACA1C,EAAS4B,EAAO7B,KAChB,OACA,IAAI6C,MAAOC,YAIf,uBAAKF,IAAI,2BAGb,gBAACxD,EAAD,CAAYoC,UAAU,UACpB,2BACE,qDACA,yBAAIvB,EAAS4B,EAAO/B,eAEtB,2BACE,qDACA,yBAAIG,EAAS4B,EAAO9B,mBAuDzBgD,I,eC7TT,MAAMC,GAAO1J,EAAAA,EAAAA,IAAO,MAAPA,EAAc,EAAGE,YAAH,CACzByJ,UAAW,SACXnE,SAAU,OACV3E,QAAS,SACT,QAAS,CACPN,MAAO,IACPC,OAAQ,KAEV,MAAO,CACLoF,OAAQ,OAaZ,GATe,IAEX,gBAAC8D,EAAD,KACE,uBAAKJ,IAAI,8BACT,sDCNAM,IAAW5J,EAAAA,EAAAA,IAAO,MAAPA,EAAc,EAAGE,YAAH,CAC7BW,QAAS,OACTR,QAAS,OACTwJ,SAAU,OACVC,oBAAqB,iDACrBC,QAAS,YACT,qBAAsB,CACpBxJ,MAAO,OACPyJ,UAAW,IACXvJ,UAAW,sCACXC,aAAc,OAEhB,gBAAiB,CACfD,UAAW,0CAEb,gBAAiB,CACfM,MAAO,WAET,2BAA4B,CAC1BN,UAAW,0CAKb,oCAAqC,CACnCwJ,cAAe,YA+FnB,GAlE0C,EACxCC,aACA5I,cACA6I,cACAC,mBACAC,0BACAC,MACAzD,WACArF,KACAwC,QACA+C,YACAC,cACAF,cAOE,gCAEE,gBAAC8C,GAAD,CAAUpI,GAAIA,GACX8I,EACC,gBAACjF,EAAA,EAAD,CAAMpD,QATE,KACdqI,GAAOA,KAQuBpC,UAAU,kBAAkBhF,MAAM,gBACxD,gBAACqH,EAAA,EAAD,CAAgB/I,GAAI,CAAEhB,OAAQ,SAC5B,gBAACgI,EAAA,EAAD,CAAahH,GAAI,CAAEnB,QAAS,OAAQO,eAAgB,WAClD,gBAAC4J,EAAA,EAAD,CACEhG,UAAU,MACVhD,GAAI,CAAEhB,OAAQ,MAAOD,MAAO,OAC5BkK,MAAM,yBACNC,IAAI,oBAKV,KACHR,GAAcA,EAAWS,OAAS,EAC/B,IAAAT,GAAU,KAAVA,GAAe,CAACvD,EAAUC,IACxB,gBAAC,EAAD,CACER,IAAKQ,EACLA,UAAWA,EACXD,SAAUA,EACVE,SAAUA,EACVC,SAAUA,EACVC,UAAWA,EACXzF,YAAaA,EACb0F,YAAaA,MAGjB,MAELmD,GAAenG,EAAQ,EACtB,gBAAC4G,EAAA,EAAD,CACE3G,WAAYkG,EACZnG,MAAOA,EACPE,aAAckG,EACdjG,oBAAqBkG,IAIvB,gBAAC,GAAD,O,kJCpHR,MAAMQ,IAAQ7K,EAAAA,EAAAA,IAAO,MAAPA,EAAc,EAAGE,YAAH,CAC1BG,QAAS,eACTE,MAAO,OACPiF,SAAU,OACVmE,UAAW,YAgIb,GA/GyC,EAAGmB,YAAWC,OAAMxI,cAC3D,MAAOY,EAAS6H,IAAc3J,EAAAA,EAAAA,WAAS,IAChC4J,EAAcC,IAAkB7J,EAAAA,EAAAA,UAA0B,KAC1D8J,EAAeC,IAAoB/J,EAAAA,EAAAA,UAAS,KAC5CgK,EAAYC,IAAiBjK,EAAAA,EAAAA,UAAsB,IAAIkI,OACvDgC,EAAYC,IAAiBnK,EAAAA,EAAAA,UAAsB,KAE1DoK,EAAAA,EAAAA,qBAAoBX,GAAW,KAAM,CACnClH,WAGF,MAqBMA,EAAQ4D,IAEZwD,GAAW,GACXM,EAAc,IAAI/B,MAClB6B,EAAiB,IACjBI,EAAc,CACZP,aAAczD,EAAO1D,GACrB4H,aAAclE,EAAOjB,QAUzB,OAFAoF,EAAAA,EAAAA,YAAU,QAAU,IAGlB,gBAACC,GAAA,EAAD,CACExI,KAAK,KACLF,MAAM,eACNC,QAASA,EACTM,SA3Ca,KACf,IAAIoI,EAAW,CACbZ,aAAcM,EAAWN,aACzBS,aAAcH,EAAWG,aACzBP,gBACAE,YAAYS,EAAAA,EAAAA,IAAWT,EAAW7B,UAAW,yBAE/CuC,EAAAA,GAAAA,IAAW,mBAAoBF,GAAUG,MAAMC,IACzB,IAAhBA,EAAG,OACLC,GAAAA,EAAAA,QAAgB,4BAChBlB,GAAW,GACXD,GAAQA,SAiCVrH,YA5BgB,KAClBsH,GAAW,GACXzI,GAAWA,KA2BTgB,WAAW,EACX/C,OAAO,QAEP,gBAAC2L,GAAA,GAAD,CAAMC,WAAS,EAAChK,QAAS,GACvB,gBAAC+J,GAAA,GAAD,CACEnE,MAAI,EACJqE,GAAI,GACJ7K,GAAI,CACFnB,QAAS,cACTC,WAAY,SACZM,eAAgB,SAChBJ,OAAQ,SAGV,gBAACqK,GAAD,uCACA,gBAACA,GAAD,CAAOrJ,GAAI,CAAEjB,MAAO,IAAKoJ,UAAW,SACjC4B,EAAWG,eAGhB,gBAACS,GAAA,GAAD,CACEnE,MAAI,EACJqE,GAAI,GACJ7K,GAAI,CACFnB,QAAS,cACTC,WAAY,SACZM,eAAgB,SAChBJ,OAAQ,SAGV,gBAACqK,GAAD,uCACA,gBAACyB,GAAA,EAAD,CAAsBC,YAAaC,GAAAA,GACjC,gBAACC,GAAA,EAAD,CACEtL,MAAOkK,EACPzJ,SA9CQ8K,IAClBpB,EAAcoB,IA8CJC,MAAM,EACNC,YAAY,sBACZC,YAAcC,GACZ,gBAACC,GAAA,GAAD,SACEvL,GAAI,CACFjB,MAAO,IACPC,OAAQ,GACR,UAAW,CAAEK,QAAS,cAEpBiM,W,qLC5HtB,MAAME,IAAQhN,EAAAA,EAAAA,IAAO+M,GAAAA,EAAP/M,EAAkB,EAAGE,YAAH,CAC9B,UAAW,CACTM,OAAQ,MACRD,MAAO,aAILsK,IAAQ7K,EAAAA,EAAAA,IAAO,MAAPA,EAAc,EAAGE,YAAH,CAC1BG,QAAS,eACTE,MAAO,OACPiF,SAAU,OACVmE,UAAW,YAgBPsD,KAbajN,EAAAA,EAAAA,IAAOkN,GAAAA,EAAPlN,EAAe,EAAGE,YAAH,CAChCM,OAAQ,OACRD,MAAO,YAYF,sBADD0M,GAEE,sBAyGR,GAhGkC,EAAGE,UAASpC,OAAMxI,cAClD,MAAOY,EAAS6H,IAAc3J,EAAAA,EAAAA,WAAS,IAChCwK,EAAUuB,IAAe/L,EAAAA,EAAAA,UAAoB,KAC7CgM,EAAYC,IAAiBjM,EAAAA,EAAAA,WAAS,IAE7CoK,EAAAA,EAAAA,qBAAoB0B,GAAS,KAAM,CACjCI,WAGF,MAAMA,EAAO,CAACC,EAAkBjG,KAC9B,IAAIkG,EAAOC,KAAKC,MAAM,KAAeH,IACrCxC,GAAW,GACXoC,EAAYK,GACZH,EAAc/F,IAIVqG,EAAc,CAAChJ,EAAO2C,KAC1B,IAAIsG,E,2PAAM,CAAH,GAAQhC,GACfgC,EAAItG,GAAQ3C,EAAM9C,OAAOX,MACzBiM,EAAYS,IAuBRC,EAAgBN,IACpB,IAAIjG,EAAO,GACTwG,EAAU,GACRV,GACF9F,EAAO,MACPwG,EAAUd,KAEV1F,EAAO,OACPwG,EAAUd,KAEZe,EAAAA,GAAAA,IAAWD,EAASP,EAAMjG,GAAMyE,MAAMC,IAChB,IAAhBA,EAAG,OACLC,GAAAA,EAAAA,QAAgB,4BAChBlB,GAAW,GACXD,GAAQA,GAAK,QAKnB,OACE,gBAACa,GAAA,EAAD,CACExI,KAAK,KACLF,MAAOmK,EAAa,qBAAQ,eAC5BlK,QAASA,EACTM,SA3Ca,KAEbqK,EADET,EACWxB,EAEA,CACXtF,KAAMsF,EAAStF,KACf0H,aAAc,OAGlBjD,GAAW,IAmCTtH,YA/BgB,KAClBsH,GAAW,GACXzI,GAAWA,GAAQ,IA8BjBgB,WAAW,GAEX,gBAAC4I,GAAA,GAAD,CAAMC,WAAS,EAAChK,QAAS,GACvB,gBAAC+J,GAAA,GAAD,CACEnE,MAAI,EACJqE,GAAI,GACJ7K,GAAI,CACFnB,QAAS,cACTC,WAAY,SACZM,eAAgB,SAChBJ,OAAQ,SAGV,gBAAC,GAAD,uCACA,gBAACwM,GAAD,CACE5J,KAAK,QACLjC,MAAO0K,EAAStF,KAChB3E,SAAWgD,IACTgJ,EAAYhJ,EAAO,e,8ICpHjC,MAAM8E,IAAO1J,EAAAA,EAAAA,IAAO,MAAPA,EAAc,EAAGE,YAAH,CACzBM,OAAQ,qBACRM,WAAY,kBACZC,MAAO,WAGHmN,IAAMlO,EAAAA,EAAAA,IAAO,MAAPA,EAAc,EAAGE,YAAH,CACxBG,QAAS,OACTG,OAAQ,OACRI,eAAgB,gBAChBN,WAAY,SACZkF,SAAU,OACV3E,QAAS,SACTsN,aAAc,wBAWVC,GAA0B,CAC9B7H,KAAM,IAGFQ,GAAY,CAChBtC,MAAO,UACP+B,YAAa,aACbC,YAAa,aACbC,IAAK,oBAGDG,GAAW,CACf,CACET,IAAK,UACLlD,MAAO,eACPmD,KAAM,iBAiBR,CACED,IAAK,OACLlD,MAAO,eACPmD,KAAM,kBAOR,CACED,IAAK,OACLlD,MAAO,eACPmD,KAAM,mBAIJS,GAAW,CACf,CACEV,IAAK,SACLlD,MAAO,qBACPmD,KAAM,wBAER,CACED,IAAK,SACLlD,MAAO,eACPmD,KAAM,gBAER,CACED,IAAK,UACLlD,MAAO,eACPmD,KAAM,yBAER,CACED,IAAK,SACLlD,MAAO,eACPmD,KAAM,eAIJ4G,GACE,sBADFA,GAII,yBAOK,SAASoB,KACtB,MAAOlE,EAAamE,IAAkBjN,EAAAA,EAAAA,UAAS,CAC7C+C,QAAS,EACTC,SAAU,EACVC,gBAAiB,MAEZ4F,EAAYqE,IAAiBlN,EAAAA,EAAAA,UAAS,KACtCmN,EAAYC,IAAiBpN,EAAAA,EAAAA,UAAS,KACtC2C,EAAO0K,IAAYrN,EAAAA,EAAAA,UAAS,IAC5BsN,EAAYC,IAAiBvN,EAAAA,EAAAA,UAAS,KACtCwN,EAAeC,IAAoBzN,EAAAA,EAAAA,UAAyB,MAE7D0N,GAAaC,EAAAA,EAAAA,QAAO,MACpBlE,GAAYkE,EAAAA,EAAAA,QAAO,MACnBC,GAAUD,EAAAA,EAAAA,QAAO,MAEjBE,GAAWC,EAAAA,EAAAA,MA8DXC,EAAkBvD,IACtB,IAAIiB,E,2PAAS,EACXnI,KAAMwF,EAAY/F,QAClBiL,MAAOlF,EAAY9F,SACnBkC,KAAMiI,EACNP,aAAc,MACXpC,IAELyD,EAAAA,GAAAA,IAAUrC,GAAUH,GACjBd,MAAMC,IACL,GAAoB,IAAhBA,EAAG,KAAgB,CACrB,IAAI,KAAEsD,EAAF,YAAQC,GAAgBvD,EAAIuB,KAC5B+B,GAAQA,EAAK5E,OAAS,GAmBxB4D,EAAcgB,GACdb,EAASc,KAETjB,EAAc,IACdG,EAAS,QAIde,OAAOC,SAKNC,EAAoB7L,IACxB,IAAI+H,EAAW,CACb/H,OAEF8L,EAAAA,GAAAA,IAAa3C,GAAanJ,EAAI+H,GAAUG,MAAMC,IAC3B,IAAbA,EAAI4D,OACF3F,EAAWS,OAAS,EACtByE,IAEAA,EAAe,CAAEzK,KAAMwF,EAAY/F,UAErC8H,GAAAA,EAAAA,QAAgB,iCA+BhB4D,EAAiBtI,IACrB,MAAM,GAAE1D,EAAF,eAAMiM,GAAmBvI,EAC/B,GAAIuI,EAAgB,CAClB,IAAI9C,EAAO,2BAA0BnJ,QAASiM,IAC9ChB,EAAWiB,QAAQpM,OACnBgL,EAAc3B,QAEdf,GAAAA,EAAAA,KAAa,kEAQjBP,EAAAA,EAAAA,YAAU,KACRyD,MACC,IAEH,MAAMa,EAAa1I,IACbA,GACF6H,KAIJ,OACE,gBAACc,EAAA,EAAD,CAAK1O,GAAI,CAAE2O,SAAU,EAAG3P,OAAQ,SAC9B,gBAAC,GAAD,CACEgB,GAAI,CACFV,WAAY,OACZC,MAAO,OACPF,QAAS,SACTL,OAAQ,SAGV,gBAAC0N,GAAD,KACE,wBAAMrG,MAAO,CAAElC,WAAY,SAA3B,4BACA,gBAAC1E,EAAA,EAAD,CAAWM,OA/DH6O,IACd3B,EAAc2B,GACdhB,EAAe,CAAE7I,KAAM6J,QA+DnB,uBAAKvI,MAAO,CAAEhH,QAAS,WACrB,gBAAC,GAAD,CACEW,GAAI,CAAEX,QAAS,GACfqJ,WAAYA,EACZ5I,YAvJU,CAACiG,EAAMC,EAAQC,KACjC,GAAa,WAATF,EAhBQC,KACZyH,EAAQe,QAAQzC,KAAK/F,GAAQ,IAgB3B6I,CAAK7I,QACA,GAAa,WAATD,EAdOC,MAClB8I,EAAAA,GAAAA,GAAQ,CACNpN,MAAQ,+DAAYsE,EAAOjB,aAC3BgK,QAAS,wLACTxF,KAAM,KACJ4E,EAAiBnI,EAAO1D,QAU1B0M,CAAWhJ,QACN,GAAa,SAATD,EACT2H,EAAS,qBAAuB1H,EAAO1D,SAClC,GAAa,YAATyD,EACTuI,EAActI,QACT,GAAa,WAATD,EACTuD,EAAUkF,QAAQpM,KAAK4D,QAClB,GAAa,YAATD,EAAoB,CAC7B,IAAI,GAAEzD,EAAF,KAAMyC,GAASiB,EAKnBsH,EAJU,CACRhL,GAAIA,EACJZ,MAAOqD,MAyIH4D,YAAaA,EACbC,iBA/LgBzF,IACxB2J,EAAe,CACblK,QAASO,EACTN,SAAU8F,EAAY9F,SACtBC,gBAAiB6F,EAAY7F,kBAE/B8K,EAAe,CAAEzK,UA0LT0F,wBAvLuB3F,IAC/B4J,EAAe,CACblK,QAAS,EACTC,SAAUK,EACVJ,gBAAiB6F,EAAY7F,kBAE/B8K,EAAe,CAAEC,MAAO3K,KAkLhB4F,IA9KE,KACV2E,EAAQe,QAAQzC,KAAKa,IAAc,IA8K3BvH,SAAUA,GACV7C,MAAOA,EACP+C,UAAWA,GACXC,YAvDU,CAACwG,EAAM/F,KACzByH,EAAS,qBAAuB1B,EAAK1J,KAuD7BgD,SAAUA,OAIhB,gBAAC2J,GAAD,CACEtD,QAAS8B,EACTlE,KAAMkF,EACN1N,QAAS0N,IAEX,gBAACS,GAAA,EAAD,CAAS3B,WAAYA,EAAY9B,IAAK0B,IACtC,gBAACgC,GAAD,CAAQ7F,UAAWA,IAClB+D,GAAiB,IAAYA,GAAelE,OAAS,EACpD,gBAAC,KAAD,CACEiG,SAAS,QACTrJ,KAAK,UACLhF,QAxDY,KAClBuM,EAAiB,OAwDXhN,OAAQ+M,EAAc/K,GACtB+M,UAAWhC,IAEX,Q,wFC1VV,MAAMiC,GAAa9Q,EAAAA,EAAAA,IAAO,SAAPA,EAAiB,EAAGE,YAAH,CAClCK,MAAO,OACPC,OAAQ,oBACRL,OAAQ,OACRyF,OAAQ,IACR/E,QAAS,QAyDX,EAtDyC,EAAGoM,MAAK8B,iBAC/C,MAAO5L,EAAS6H,IAAc3J,EAAAA,EAAAA,WAAS,GACjC6N,GAAWC,EAAAA,EAAAA,OAEjB1D,EAAAA,EAAAA,qBAAoBsD,GAAY,KAAM,CACpCnL,WAGF,MAIMF,EAAc,KAClBsH,GAAW,IAGPpH,EAAQiM,IACZ7E,GAAW,GACX+F,EAAQlB,IAGJkB,EAAWlB,IAEfmB,EAAAA,EAAAA,iBAAgC,WAAYnP,IAE1C,MAAM,KAAE0F,GAAS1F,EAAE2L,KACN,kBAATjG,EACFyD,GAAW,GACO,eAATzD,IAET2H,EAAS,gBAAkBW,GAC3BnM,SAON,OACE,gBAAC,IAAD,CACEN,KAAK,KACLF,MAAM,eACNC,QAASA,EACTM,SAnCa,KACfuH,GAAW,IAmCTtH,YAAaA,EACbH,WAAW,EACX/C,OAAQ,IACRgD,YAAY,GAEZ,gBAACsN,EAAD,CAAYxH,IAAK2D","sources":["webpack:///./components/QueryPane/index.tsx","webpack:///./components/SModal/index.tsx","webpack:///./components/SPagination/index.tsx","webpack:///./components/CardList/Items/Project.tsx","webpack:///./components/NoData/index.tsx","webpack:///./components/CardList/Project.tsx","webpack:///./views/list/modules/Deploy.tsx","webpack:///./views/list/modules/ProjectEdit.tsx","webpack:///./views/list/Project.tsx","webpack:///./views/list/modules/Preview.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { Paper, InputBase } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nconst SelfPaper = styled(Paper)(({ theme }) => ({\r\n  border: \"1px solid #E2E2E2\",\r\n  p: \"0 0 0 4px\",\r\n  display: \"inline-flex\",\r\n  alignItems: \"center\",\r\n  width: 400,\r\n  height: 36,\r\n  boxShadow: \"none\",\r\n  borderRadius: \"5px\",\r\n}));\r\n\r\nconst SearchPane = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  padding: \"0 3px\",\r\n  background: \"#075FB8\",\r\n  height: \"100%\",\r\n  width: 36,\r\n  color: \"#fff\",\r\n  borderRadius: \"0 5px 5px 0\",\r\n  cursor: \"pointer\",\r\n}));\r\n\r\nexport default function QueryPane(props) {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleClick = () => {\r\n    const { search } = props;\r\n    search && search(value);\r\n  };\r\n\r\n  const changeVal = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const keyEvent = (e) => {\r\n    if (e.keyCode !== 13) {\r\n      return;\r\n    }\r\n    handleClick();\r\n  };\r\n\r\n  return (\r\n    <SelfPaper>\r\n      <InputBase\r\n        sx={{ ml: 1, flex: 1 }}\r\n        placeholder=\"搜索\"\r\n        value={value}\r\n        onChange={changeVal}\r\n        onKeyUp={keyEvent}\r\n      />\r\n      <SearchPane onClick={handleClick}>\r\n        <SearchIcon />\r\n      </SearchPane>\r\n    </SelfPaper>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Paper, { PaperProps } from \"@mui/material/Paper\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Draggable from \"react-draggable\";\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  \"& .MuiDialogContent-root\": {\r\n    padding: theme.spacing(2),\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n  id: string;\r\n  children?: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst BootstrapDialogTitle = (props: DialogTitleProps) => {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 2, cursor: \"move\" }} {...other}>\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n};\r\n\r\nconst PaperComponent = (props: PaperProps) => {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n};\r\n\r\ninterface SModalProps {\r\n  visible?: boolean;\r\n  title?: string;\r\n  size?: any;\r\n  width?: number;\r\n  children?: any;\r\n  header?: any;\r\n  footer?: any;\r\n  fullWidth?: boolean;\r\n  sx?: object;\r\n  height?: string | number;\r\n  hideFooter?: boolean;\r\n  handleClose?: Function;\r\n  handleOk?: Function;\r\n}\r\n\r\nconst SModal: React.FC<SModalProps> = ({\r\n  title,\r\n  visible,\r\n  size,\r\n  children,\r\n  header,\r\n  footer,\r\n  fullWidth,\r\n  sx,\r\n  height,\r\n  hideFooter,\r\n  handleOk,\r\n  handleClose,\r\n}) => {\r\n  const closeMethod = () => {\r\n    handleClose && handleClose();\r\n  };\r\n\r\n  const okMethod = () => {\r\n    handleOk && handleOk();\r\n  };\r\n  return (\r\n    <BootstrapDialog\r\n      // onClose={closeMethod}\r\n      open={visible}\r\n      maxWidth={size}\r\n      fullWidth={fullWidth}\r\n      PaperComponent={PaperComponent}\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n    >\r\n      {header ? (\r\n        header\r\n      ) : (\r\n        <BootstrapDialogTitle id=\"draggable-dialog-title\" onClose={closeMethod}>\r\n          {title}\r\n        </BootstrapDialogTitle>\r\n      )}\r\n      <DialogContent\r\n        sx={{\r\n          // minHeight: `${minHeight}px`,\r\n          height: `${height ? height + \"px\" : \"auto\"}`,\r\n        }}\r\n        dividers\r\n      >\r\n        {children}\r\n      </DialogContent>\r\n      {hideFooter ? null : (\r\n        <DialogActions>\r\n          {footer ? (\r\n            footer\r\n          ) : (\r\n            <>\r\n              <Button onClick={closeMethod}>取消</Button>\r\n              <Button onClick={okMethod}>确定</Button>\r\n            </>\r\n          )}\r\n        </DialogActions>\r\n      )}\r\n    </BootstrapDialog>\r\n  );\r\n};\r\n\r\nexport default SModal;\r\n","import React from \"react\";\r\n\r\nimport { TablePagination } from \"@mui/material\";\r\n\r\ninterface STableProp {\r\n  total?: number;\r\n  pagenation?: {\r\n    pageNum?: number;\r\n    pageSize?: number;\r\n    pageSizeOptions?: Array<number>;\r\n  };\r\n  onPageChange?: (pageNum: number) => void;\r\n  onRowsPerPageChange?: (pageSize: number) => void;\r\n}\r\n\r\nconst STable: React.FC<STableProp> = ({\r\n  total,\r\n  pagenation,\r\n  onPageChange,\r\n  onRowsPerPageChange,\r\n}) => {\r\n  const { pageNum, pageSize, pageSizeOptions } = pagenation;\r\n\r\n  const changePage = (event: unknown, newPage: number) => {\r\n    onPageChange && onPageChange(newPage + 1);\r\n  };\r\n\r\n  const changeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    onRowsPerPageChange &&\r\n      onRowsPerPageChange(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  return (\r\n    <TablePagination\r\n      rowsPerPageOptions={pageSizeOptions || []}\r\n      component=\"div\"\r\n      count={total}\r\n      rowsPerPage={pageSize}\r\n      page={pageNum > 0 ? pageNum - 1 : 0}\r\n      onPageChange={changePage}\r\n      onRowsPerPageChange={changeRowsPerPage}\r\n      labelRowsPerPage=\"每页条数：\"\r\n      labelDisplayedRows={({ from, to }) => {\r\n        return `${from}–${to} 共 ${Math.ceil(total / pageSize)}页, ${total}条`;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default STable;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport SIcon from \"~/components/SIcon\";\r\nimport { commonStore } from \"~/stores/commonStore\";\r\nimport { validateImage } from \"~/utils/utils\";\r\n\r\nconst SelfCard = styled(Card)(({ theme }) => ({\r\n  position: \"relative\",\r\n  \"&:hover .footer\": {\r\n    display: \"flex\",\r\n    position: \"absolute\",\r\n    zIndex: 100,\r\n    bottom: 0,\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    height: \"20%\",\r\n    fontSize: \"12px\",\r\n    left: 0,\r\n    padding: \"0 16px\",\r\n    background: \"rgba(209,233,255,.5)\",\r\n    \"& p\": {\r\n      fontSize: \"12px\",\r\n      fontFamily: \"Source Han Sans CN\",\r\n      fontWeight: 500,\r\n      color: \"#333\",\r\n      margin: \"5px 0 0 0\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst CardIcon = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  width: \"100%\",\r\n  height: \"80%\",\r\n  \"& i\": {\r\n    fontSize: \"8em\",\r\n    color: \"rgb(255, 208, 129)\",\r\n  },\r\n}));\r\n\r\nconst FooterMenu = styled(\"div\")(({ theme }) => ({\r\n  display: \"none\",\r\n}));\r\n\r\nconst ActionMenu = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  width: \"calc((100% - 32px) / 2)\",\r\n  height: \"9%\",\r\n  position: \"absolute\",\r\n  zIndex: 100,\r\n  right: \"16px\",\r\n  \"& .action-menu-item\": {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: 30,\r\n    height: 30,\r\n    margin: \"0 5px\",\r\n    borderRadius: \"50%\",\r\n    \"& i\": {\r\n      cursor: \"pointer\",\r\n      fontSize: \"18px\",\r\n      color: \"#333\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst ButtonPane = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  height: \"100%\",\r\n  width: \"calc(100% / 3)\",\r\n}));\r\n\r\nconst SelfIconButton = styled(IconButton)(({ theme }) => ({\r\n  width: 40,\r\n  height: 40,\r\n  margin: \"0 15px\",\r\n}));\r\n\r\ntype MenuObj = {\r\n  key: string | number;\r\n  title: string;\r\n  icon?: string;\r\n};\r\n\r\ntype FormatObj = {\r\n  id?: string;\r\n  name?: string;\r\n  count?: string;\r\n  createdTime?: string;\r\n  updatedTime?: string;\r\n  img?: string;\r\n};\r\n\r\ninterface CardListProps {\r\n  dataItem: object;\r\n  dataIndex: number;\r\n  menuList?: Array<MenuObj>;\r\n  moreList?: Array<MenuObj>;\r\n  keyFormat?: FormatObj;\r\n  doubleClick?: Function;\r\n  handleClick?: Function;\r\n}\r\n\r\nconst initMenuList = [\r\n  {\r\n    key: \"preview\",\r\n    title: \"预览\",\r\n    icon: \"icon-3Dyulan-dakai1\",\r\n  },\r\n  {\r\n    key: \"rename\",\r\n    title: \"重命名\",\r\n    icon: \"icon-3Dbianji\",\r\n  },\r\n  {\r\n    key: \"edit\",\r\n    title: \"编辑\",\r\n    icon: \"icon-3Dshezhi\",\r\n  },\r\n  {\r\n    key: \"delete\",\r\n    title: \"删除\",\r\n    icon: \"icon-3Ddel\",\r\n  },\r\n];\r\n\r\nconst defaultFormat = {\r\n  id: \"id\",\r\n  name: \"name\",\r\n  count: \"count\",\r\n  createdTime: \"createdTime\",\r\n  updatedTime: \"updatedTime\",\r\n  img: \"img\",\r\n};\r\nlet count = 0;\r\nconst CardList: React.FC<CardListProps> = ({\r\n  dataItem,\r\n  dataIndex,\r\n  handleClick,\r\n  menuList,\r\n  moreList,\r\n  keyFormat,\r\n  doubleClick,\r\n}) => {\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const [currentItem, setCurrentItem] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const clickItem = (type, record, index) => {\r\n    closeMenu();\r\n    handleClick && handleClick(type, record, index);\r\n  };\r\n\r\n  const activeCard = () => {\r\n    count += 1;\r\n    setTimeout(() => {\r\n      if (count === 1) {\r\n        handleClick && handleClick(dataItem, dataIndex);\r\n      } else if (count === 2) {\r\n        doubleClick && doubleClick(dataItem, dataIndex);\r\n      }\r\n      count = 0;\r\n    }, 300);\r\n  };\r\n\r\n  const renderItem = () => {\r\n    let menus = menuList || initMenuList;\r\n    let format = Object.assign(defaultFormat, keyFormat || {});\r\n    return (\r\n      <SelfCard className={\"projectCardItem\"}>\r\n        <CardContent\r\n          sx={{ width: \"100%\", height: 320, userSelect: \"none\" }}\r\n          onClick={activeCard}\r\n        >\r\n          <ActionMenu>\r\n            {menus &&\r\n              menus.map((item, index) => (\r\n                <ButtonPane key={index}>\r\n                  <SelfIconButton\r\n                    title={item.title}\r\n                    color=\"primary\"\r\n                    onClick={(e) => menuClick(e, dataItem, dataIndex, item.key)}\r\n                  >\r\n                    <SIcon type={item.icon}></SIcon>\r\n                  </SelfIconButton>\r\n                  {item.key === \"more\" ? renderMenu(dataItem[format.id]) : null}\r\n                </ButtonPane>\r\n              ))}\r\n          </ActionMenu>\r\n          <Typography\r\n            align=\"left\"\r\n            variant=\"body2\"\r\n            color=\"text.secondary\"\r\n            sx={{\r\n              color: \"#222\",\r\n              fontSize: \"15px\",\r\n              fontWeight: \"bold\",\r\n              width: \"50%\",\r\n              overflow: \"hidden\",\r\n              textOverflow: \"ellipsis\",\r\n              whiteSpace: \"nowrap\",\r\n            }}\r\n            title={dataItem[format.name]}\r\n          >\r\n            <span style={{ marginRight: \"10px\" }}>项目：</span>\r\n            {dataItem[format.name]}\r\n          </Typography>\r\n          <Typography\r\n            align=\"left\"\r\n            variant=\"body2\"\r\n            color=\"text.secondary\"\r\n            sx={{\r\n              color: \"#424B54\",\r\n              fontSize: \"13px\",\r\n              marginTop: \"5px\",\r\n            }}\r\n          >\r\n            {dataItem[format.count] === undefined ? null : (\r\n              <>\r\n                <span style={{ marginRight: \"10px\" }}>场景：</span>\r\n                {dataItem[format.count] ? dataItem[format.count] : 0}个\r\n              </>\r\n            )}\r\n          </Typography>\r\n          <CardIcon>\r\n            {dataItem[format.img] &&\r\n            validateImage(commonStore.prefix + dataItem[format.img]) ? (\r\n              <img\r\n                style={{ height: \"100%\" }}\r\n                src={\r\n                  commonStore.prefix +\r\n                  dataItem[format.img] +\r\n                  \"?t=\" +\r\n                  new Date().getTime()\r\n                }\r\n              />\r\n            ) : (\r\n              <img src=\"/static/images/bg.png\" />\r\n            )}\r\n          </CardIcon>\r\n          <FooterMenu className=\"footer\">\r\n            <div>\r\n              <p>创建时间</p>\r\n              <p>{dataItem[format.createdTime]}</p>\r\n            </div>\r\n            <div>\r\n              <p>更新时间</p>\r\n              <p>{dataItem[format.updatedTime]}</p>\r\n            </div>\r\n          </FooterMenu>\r\n        </CardContent>\r\n      </SelfCard>\r\n    );\r\n  };\r\n\r\n  const renderMenu = (id) => {\r\n    const style = {\r\n      fontSize: \"13px\",\r\n    };\r\n    return (\r\n      <Menu\r\n        id={\"basic-menu\" + id}\r\n        anchorEl={anchorEl}\r\n        open={open}\r\n        onClose={closeMenu}\r\n        MenuListProps={{\r\n          \"aria-labelledby\": \"basic-button\",\r\n        }}\r\n      >\r\n        {moreList &&\r\n          moreList.map((item, index) => (\r\n            <MenuItem\r\n              sx={style}\r\n              key={index}\r\n              onClick={() => clickItem(item.key, currentItem, index)}\r\n            >\r\n              <i className={\"iconfont \" + item.icon}></i>\r\n              {item.title}\r\n            </MenuItem>\r\n          ))}\r\n      </Menu>\r\n    );\r\n  };\r\n\r\n  const menuClick = (event, dataItem, index, key) => {\r\n    if (key === \"more\") {\r\n      showMenu(event, dataItem);\r\n    } else {\r\n      clickItem(key, dataItem, index);\r\n    }\r\n  };\r\n\r\n  const closeMenu = () => {\r\n    setAnchorEl(null);\r\n    setCurrentItem({});\r\n  };\r\n\r\n  const showMenu = (event: React.MouseEvent<HTMLDivElement>, item) => {\r\n    setAnchorEl(event.currentTarget);\r\n    setCurrentItem(item);\r\n  };\r\n\r\n  return renderItem();\r\n};\r\n\r\nexport default CardList;\r\n","import * as React from \"react\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nconst Pane = styled(\"div\")(({ theme }) => ({\r\n  textAlign: \"center\",\r\n  fontSize: \"14px\",\r\n  padding: \"20px 0\",\r\n  \"& img\": {\r\n    width: 300,\r\n    height: 300,\r\n  },\r\n  \"& p\": {\r\n    margin: 0,\r\n  },\r\n}));\r\n\r\nconst NoData = () => {\r\n  return (\r\n    <Pane>\r\n      <img src=\"/static/images/nodata.svg\" />\r\n      <p>暂无数据</p>\r\n    </Pane>\r\n  );\r\n};\r\n\r\nexport default NoData;\r\n","import React from \"react\";\r\n\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardActionArea,\r\n  CardMedia,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport CardItem from \"./Items/Project\";\r\nimport SPagination from \"~/components/SPagination\";\r\nimport NoData from \"~/components/NoData\";\r\n\r\nconst CardPane = styled(\"div\")(({ theme }) => ({\r\n  padding: \"20px\",\r\n  display: \"grid\",\r\n  flexWrap: \"wrap\",\r\n  gridTemplateColumns: \"repeat(auto-fill, calc((100% - 25px * 4) / 5))\",\r\n  gridGap: \"25px 25px\",\r\n  \"& .projectCardItem\": {\r\n    width: \"100%\",\r\n    maxHeight: 400,\r\n    boxShadow: \"0px 0px 8px 0px rgba(0, 0, 0, 0.08)\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  \"& .activePane\": {\r\n    boxShadow: \"0px 0px 8px 0px rgba(7, 95, 184, 0.46)\",\r\n  },\r\n  \"& .activeIcon\": {\r\n    color: \"#1890ff\",\r\n  },\r\n  \"& .projectCardItem:hover\": {\r\n    boxShadow: \"0px 0px 8px 0px rgba(7, 95, 184, 0.46)\",\r\n    // \"& .hover-icon\": {\r\n    //   color: \"#1890ff\",\r\n    // },\r\n  },\r\n  \"& .MuiCardContent-root:last-child\": {\r\n    paddingBottom: \"16px\",\r\n  },\r\n}));\r\n\r\ntype MenuObj = {\r\n  key: string | number;\r\n  title: string;\r\n  icon?: string;\r\n  type?: string;\r\n};\r\n\r\ninterface CardListProps {\r\n  dataSource: Array<any>;\r\n  ipagenation?: {\r\n    pageNum: number;\r\n    pageSize: number;\r\n    pageSizeOptions?: Array<number>;\r\n  };\r\n  menuList?: Array<MenuObj>;\r\n  sx?: object;\r\n  total?: number;\r\n  keyFormat?: object;\r\n  moreList?: Array<MenuObj>;\r\n  doubleClick?: Function;\r\n  handleClick?: Function;\r\n  handleChangePage?: (pageNum: number) => void;\r\n  handleChangeRowsPerPage?: (pageSize: number) => void;\r\n  add?: () => void;\r\n}\r\nconst CardList: React.FC<CardListProps> = ({\r\n  dataSource,\r\n  handleClick,\r\n  ipagenation,\r\n  handleChangePage,\r\n  handleChangeRowsPerPage,\r\n  add,\r\n  menuList,\r\n  sx,\r\n  total,\r\n  keyFormat,\r\n  doubleClick,\r\n  moreList,\r\n}) => {\r\n  const addMenu = () => {\r\n    add && add();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* {dataSource && dataSource.length > 0 ? ( */}\r\n      <CardPane sx={sx}>\r\n        {add ? (\r\n          <Card onClick={addMenu} className=\"projectCardItem\" title=\"新建\">\r\n            <CardActionArea sx={{ height: \"100%\" }}>\r\n              <CardContent sx={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  sx={{ height: \"90%\", width: \"90%\" }}\r\n                  image=\"/static/images/add.png\"\r\n                  alt=\"green iguana\"\r\n                />\r\n              </CardContent>\r\n            </CardActionArea>\r\n          </Card>\r\n        ) : null}\r\n        {dataSource && dataSource.length > 0\r\n          ? dataSource.map((dataItem, dataIndex) => (\r\n              <CardItem\r\n                key={dataIndex}\r\n                dataIndex={dataIndex}\r\n                dataItem={dataItem}\r\n                menuList={menuList}\r\n                moreList={moreList}\r\n                keyFormat={keyFormat}\r\n                handleClick={handleClick}\r\n                doubleClick={doubleClick}\r\n              ></CardItem>\r\n            ))\r\n          : null}\r\n      </CardPane>\r\n      {ipagenation && total > 0 ? (\r\n        <SPagination\r\n          pagenation={ipagenation}\r\n          total={total}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      ) : (\r\n        // ) : null}\r\n        <NoData></NoData>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React, { useImperativeHandle, useState, useEffect } from \"react\";\r\n\r\nimport { Box, Grid, Button, TextField, Select, MenuItem } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { DateTimePicker } from \"@mui/x-date-pickers/DateTimePicker\";\r\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\n\r\nimport { postAction } from \"~/apis/manage\";\r\nimport SModal from \"~/components/SModal\";\r\nimport { message } from \"~/utils/message\";\r\nimport { formatDate } from \"~/utils/utils\";\r\n\r\nconst Label = styled(\"div\")(({ theme }) => ({\r\n  display: \"inline-block\",\r\n  width: \"80px\",\r\n  fontSize: \"14px\",\r\n  textAlign: \"right\",\r\n}));\r\n\r\ninterface FileTreeProps {\r\n  deployRef?: any;\r\n  onOk?: Function;\r\n  onClose?: Function;\r\n  projectCode?: string | number;\r\n}\r\n\r\ntype projectForm = {\r\n  project_code?: string | number;\r\n  project_name?: string | number;\r\n  // expiration?: string;\r\n  // hardware_info?: string;\r\n};\r\n\r\nconst Preview: React.FC<FileTreeProps> = ({ deployRef, onOk, onClose }) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [project_code, setProjectCode] = useState<string | number>(\"\");\r\n  const [hardware_info, setHardware_info] = useState(\"\");\r\n  const [expiration, setExpiration] = useState<Date | null>(new Date());\r\n  const [currentObj, setCurrentObj] = useState<projectForm>({});\r\n\r\n  useImperativeHandle(deployRef, () => ({\r\n    open,\r\n  }));\r\n\r\n  const handleOk = () => {\r\n    let formData = {\r\n      project_code: currentObj.project_code,\r\n      project_name: currentObj.project_name,\r\n      hardware_info,\r\n      expiration: formatDate(expiration.getTime(), \"yyyy-MM-dd hh:mm:ss\"),\r\n    };\r\n    postAction(\"trade/deploy/add\", formData).then((res) => {\r\n      if (res[\"code\"] === 0) {\r\n        message.success(\"操作成功\");\r\n        setVisible(false);\r\n        onOk && onOk();\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setVisible(false);\r\n    onClose && onClose();\r\n  };\r\n\r\n  const open = (record) => {\r\n    console.log(record);\r\n    setVisible(true);\r\n    setExpiration(new Date());\r\n    setHardware_info(\"\");\r\n    setCurrentObj({\r\n      project_code: record.id,\r\n      project_name: record.name,\r\n    });\r\n  };\r\n\r\n  const changeDate = (newValue: Date | null) => {\r\n    setExpiration(newValue);\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <SModal\r\n      size=\"sm\"\r\n      title=\"部署\"\r\n      visible={visible}\r\n      handleOk={handleOk}\r\n      handleClose={handleClose}\r\n      fullWidth={true}\r\n      height=\"auto\"\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sx={{\r\n            display: \"inline-flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            height: \"80px\",\r\n          }}\r\n        >\r\n          <Label>项目名称：</Label>\r\n          <Label sx={{ width: 330, textAlign: \"left\" }}>\r\n            {currentObj.project_name}\r\n          </Label>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sx={{\r\n            display: \"inline-flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            height: \"80px\",\r\n          }}\r\n        >\r\n          <Label>结束时间：</Label>\r\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n            <DateTimePicker\r\n              value={expiration}\r\n              onChange={changeDate}\r\n              ampm={false}\r\n              inputFormat=\"yyyy-MM-dd HH:mm:ss\"\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  sx={{\r\n                    width: 330,\r\n                    height: 30,\r\n                    \"& input\": { padding: \"6px 14px\" },\r\n                  }}\r\n                  {...params}\r\n                />\r\n              )}\r\n            />\r\n          </LocalizationProvider>\r\n          {/* <input type=\"datetime-local\" /> */}\r\n        </Grid>\r\n      </Grid>\r\n    </SModal>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import React, { FC, useState, useImperativeHandle } from \"react\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Grid, TextField, Select, MenuItem } from \"@mui/material\";\r\n\r\nimport SModal from \"~/components/SModal\";\r\nimport { httpAction } from \"~/apis/manage\";\r\nimport { message } from \"~/utils/message\";\r\n\r\nconst Input = styled(TextField)(({ theme }) => ({\r\n  \"& input\": {\r\n    height: \"1em\",\r\n    width: \"300px\",\r\n  },\r\n}));\r\n\r\nconst Label = styled(\"div\")(({ theme }) => ({\r\n  display: \"inline-block\",\r\n  width: \"80px\",\r\n  fontSize: \"14px\",\r\n  textAlign: \"right\",\r\n}));\r\n\r\nconst SelfSelect = styled(Select)(({ theme }) => ({\r\n  height: \"30px\",\r\n  width: \"330px\",\r\n}));\r\n\r\ntype FormModel = {\r\n  id?: string | number;\r\n  name?: string;\r\n  app_num?: string | number;\r\n  created_at?: string;\r\n  updated_at?: string;\r\n};\r\n\r\nconst url = {\r\n  add: \"editor/project/add\",\r\n  edit: \"editor/project/edit\",\r\n};\r\n\r\ninterface ProjectProps {\r\n  onOk?: (data?: any) => void;\r\n  onClose?: (data?: any) => void;\r\n  dataRef?: any;\r\n}\r\n\r\nconst Project: FC<ProjectProps> = ({ dataRef, onOk, onClose }) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const [formData, setFormData] = useState<FormModel>({});\r\n  const [actionType, setActionType] = useState(false); // true 编辑；false 新增\r\n\r\n  useImperativeHandle(dataRef, () => ({\r\n    init,\r\n  }));\r\n\r\n  const init = (data?: FormModel, type?: boolean) => {\r\n    let form = JSON.parse(JSON.stringify(data));\r\n    setVisible(true);\r\n    setFormData(form);\r\n    setActionType(type);\r\n  };\r\n\r\n  // 改变输入框值\r\n  const changeValue = (event, type) => {\r\n    let obj = { ...formData };\r\n    obj[type] = event.target.value;\r\n    setFormData(obj);\r\n  };\r\n\r\n  // 点击确认回调\r\n  const handleOk = () => {\r\n    if (actionType) {\r\n      addOrProject(formData);\r\n    } else {\r\n      addOrProject({\r\n        name: formData.name,\r\n        project_type: \"3d\",\r\n      });\r\n    }\r\n    setVisible(false);\r\n  };\r\n\r\n  // 点击取消回调\r\n  const handleClose = () => {\r\n    setVisible(false);\r\n    onClose && onClose(false);\r\n  };\r\n\r\n  // 新增、编辑项目\r\n  const addOrProject = (data) => {\r\n    let type = \"\",\r\n      dataUrl = \"\";\r\n    if (actionType) {\r\n      type = \"put\";\r\n      dataUrl = url.edit;\r\n    } else {\r\n      type = \"post\";\r\n      dataUrl = url.add;\r\n    }\r\n    httpAction(dataUrl, data, type).then((res) => {\r\n      if (res[\"code\"] === 0) {\r\n        message.success(\"操作成功\");\r\n        setVisible(false);\r\n        onOk && onOk(true);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <SModal\r\n      size=\"sm\"\r\n      title={actionType ? \"重命名\" : \"新增\"}\r\n      visible={visible}\r\n      handleOk={handleOk}\r\n      handleClose={handleClose}\r\n      fullWidth={true}\r\n    >\r\n      <Grid container spacing={2}>\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sx={{\r\n            display: \"inline-flex\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            height: \"80px\",\r\n          }}\r\n        >\r\n          <Label>项目名称：</Label>\r\n          <Input\r\n            size=\"small\"\r\n            value={formData.name}\r\n            onChange={(event) => {\r\n              changeValue(event, \"name\");\r\n            }}\r\n          ></Input>\r\n        </Grid>\r\n      </Grid>\r\n    </SModal>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Box } from \"@mui/material\";\r\n\r\nimport QueryPane from \"~/components/QueryPane\";\r\nimport CardList from \"~/components/CardList/Project\";\r\nimport PublishModal from \"~/components/publish/publishModal\";\r\n\r\nimport { getAction, deleteAction } from \"~/apis/manage\";\r\nimport { message } from \"~/utils/message\";\r\nimport { confirm } from \"~/utils/confirm\";\r\nimport { IDataItemProps } from \"~/components/dataList/types\";\r\nimport Preview from \"./modules/Preview\";\r\nimport Deploy from \"./modules/Deploy\";\r\nimport ProjectEdit from \"./modules/ProjectEdit\";\r\n\r\nconst Pane = styled(\"div\")(({ theme }) => ({\r\n  height: \"calc(100vh - 78px)\",\r\n  background: \"rgb(0, 81, 137)\",\r\n  color: \"#fff\",\r\n}));\r\n\r\nconst Nav = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  height: \"50px\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  fontSize: \"15px\",\r\n  padding: \"15px 0\",\r\n  borderBottom: \"1px solid #f0f0f0\",\r\n}));\r\n\r\ntype FormModel = {\r\n  id?: string | number;\r\n  name?: string;\r\n  app?: string;\r\n  createdAt?: string;\r\n  updatedAt?: string;\r\n};\r\n\r\nconst initFormData: FormModel = {\r\n  name: \"\",\r\n};\r\n\r\nconst keyFormat = {\r\n  count: \"app_num\",\r\n  createdTime: \"created_at\",\r\n  updatedTime: \"updated_at\",\r\n  img: \"preview_pic_path\",\r\n};\r\n\r\nconst menuList = [\r\n  {\r\n    key: \"preview\",\r\n    title: \"预览\",\r\n    icon: \"icon-3Dsousuo\",\r\n  },\r\n  // {\r\n  //   key: \"deploy\",\r\n  //   title: \"部署\",\r\n  //   icon: \"icon-3Dbushu\",\r\n  // },\r\n  // {\r\n  //   key: \"publish\",\r\n  //   title: \"发布\",\r\n  //   icon: \"icon-3Dgongnengdingyi\",\r\n  // },\r\n  // {\r\n  //   key: \"rename\",\r\n  //   title: \"重命名\",\r\n  //   icon: \"icon-3Dzhongmingming\",\r\n  // },\r\n  {\r\n    key: \"edit\",\r\n    title: \"编辑\",\r\n    icon: \"icon-3Dbianji1\",\r\n  },\r\n  // {\r\n  //   key: \"delete\",\r\n  //   title: \"删除\",\r\n  //   icon: \"icon-3Ddel\",\r\n  // },\r\n  {\r\n    key: \"more\",\r\n    title: \"更多\",\r\n    icon: \"icon-3Dgengduo\",\r\n  },\r\n];\r\n\r\nconst moreList = [\r\n  {\r\n    key: \"rename\",\r\n    title: \"重命名\",\r\n    icon: \"icon-3Dzhongmingming\",\r\n  },\r\n  {\r\n    key: \"deploy\",\r\n    title: \"部署\",\r\n    icon: \"icon-3Dbushu\",\r\n  },\r\n  {\r\n    key: \"publish\",\r\n    title: \"发布\",\r\n    icon: \"icon-3Dgongnengdingyi\",\r\n  },\r\n  {\r\n    key: \"delete\",\r\n    title: \"删除\",\r\n    icon: \"icon-3Ddel\",\r\n  },\r\n];\r\n\r\nconst url = {\r\n  list: \"editor/project/list\",\r\n  add: \"editor/project/add\",\r\n  edit: \"editor/project/edit\",\r\n  delete: \"editor/project/delete/\",\r\n  deploy: \"trade/deploy/add\",\r\n  publish: \"editor/opus/publish\",\r\n  trade: \"portal/market/trade\",\r\n  app: \"editor/app/list\",\r\n};\r\n\r\nexport default function Projects() {\r\n  const [ipagenation, setIpagenation] = useState({\r\n    pageNum: 1,\r\n    pageSize: 9,\r\n    pageSizeOptions: [],\r\n  });\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [searchName, setSearchName] = useState(\"\");\r\n  const [total, setTotal] = useState(0);\r\n  const [previewURL, setPreviewURL] = useState(\"\");\r\n  const [targetPublish, setTargetPublish] = useState<IDataItemProps>(null);\r\n\r\n  const previewRef = useRef(null);\r\n  const deployRef = useRef(null);\r\n  const editRef = useRef(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleChangePage = (page) => {\r\n    setIpagenation({\r\n      pageNum: page,\r\n      pageSize: ipagenation.pageSize,\r\n      pageSizeOptions: ipagenation.pageSizeOptions,\r\n    });\r\n    getProjectList({ page });\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    setIpagenation({\r\n      pageNum: 1,\r\n      pageSize: rowsPerPage,\r\n      pageSizeOptions: ipagenation.pageSizeOptions,\r\n    });\r\n    getProjectList({ limit: rowsPerPage });\r\n  };\r\n\r\n  // 添加项目\r\n  const add = () => {\r\n    editRef.current.init(initFormData, false);\r\n  };\r\n\r\n  const edit = (record) => {\r\n    editRef.current.init(record, true);\r\n  };\r\n\r\n  const delProject = (record) => {\r\n    confirm({\r\n      title: `是否确认要删除项目“${record.name}”`,\r\n      content: \"请注意删除项目会删除项目下的数据关联以及所有应用，请谨慎操作!\",\r\n      onOk: () => {\r\n        delProjectMethod(record.id);\r\n      },\r\n    });\r\n  };\r\n\r\n  // 项目图文列表点击菜单\r\n  const handleClick = (type, record, index) => {\r\n    if (type === \"rename\") {\r\n      edit(record);\r\n    } else if (type === \"delete\") {\r\n      delProject(record);\r\n    } else if (type === \"edit\") {\r\n      navigate(\"/editor?projectId=\" + record.id);\r\n    } else if (type === \"preview\") {\r\n      previewMethod(record);\r\n    } else if (type === \"deploy\") {\r\n      deployRef.current.open(record);\r\n    } else if (type === \"publish\") {\r\n      let { id, name } = record;\r\n      let obj = {\r\n        id: id,\r\n        title: name,\r\n      };\r\n      setTargetPublish(obj);\r\n    }\r\n  };\r\n\r\n  // 获取项目列表\r\n  const getProjectList = (formData?: {}) => {\r\n    let params = {\r\n      page: ipagenation.pageNum,\r\n      limit: ipagenation.pageSize,\r\n      name: searchName,\r\n      project_type: \"3d\",\r\n      ...formData,\r\n    };\r\n    getAction(url.list, params)\r\n      .then((res) => {\r\n        if (res[\"code\"] === 0) {\r\n          let { list, total_count } = res.data;\r\n          if (list && list.length > 0) {\r\n            // let arr = [];\r\n            // for (let item of list) {\r\n            //   arr.push({\r\n            //     id: item.id,\r\n            //     name: item.name,\r\n            //     // createdAt: formatDate(\r\n            //     //   new Date(item.CreatedAt).getTime(),\r\n            //     //   \"yyyy-MM-dd hh:mm:ss\"\r\n            //     // ),\r\n            //     // updatedAt: formatDate(\r\n            //     //   new Date(item.UpdatedAt).getTime(),\r\n            //     //   \"yyyy-MM-dd hh:mm:ss\"\r\n            //     // ),\r\n            //     appNum: item.appNum,\r\n            //     CreatedAt: item.CreatedAt,\r\n            //     UpdatedAt: item.UpdatedAt,\r\n            //   });\r\n            // }\r\n            setDataSource(list);\r\n            setTotal(total_count);\r\n          } else {\r\n            setDataSource([]);\r\n            setTotal(0);\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const delProjectMethod = (id) => {\r\n    let formData = {\r\n      id,\r\n    };\r\n    deleteAction(url.delete + id, formData).then((res) => {\r\n      if (res.code === 0) {\r\n        if (dataSource.length > 1) {\r\n          getProjectList();\r\n        } else {\r\n          getProjectList({ page: ipagenation.pageNum });\r\n        }\r\n        message.success(\"删除成功\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const search = (val) => {\r\n    setSearchName(val);\r\n    getProjectList({ name: val });\r\n  };\r\n\r\n  // 手动排序\r\n  const changeSort = (type, column) => {\r\n    console.log(type, column);\r\n    let typeVal = type ? \"desc\" : \"asc\";\r\n    let columnVal =\r\n      column === \"created_at\"\r\n        ? \"created_at\"\r\n        : column === \"updated_at\"\r\n        ? \"updated_at\"\r\n        : \"\";\r\n    let params = {\r\n      orderBy: columnVal + \" \" + typeVal,\r\n    };\r\n    getProjectList(params);\r\n  };\r\n\r\n  // 双击卡片\r\n  const doubleClick = (data, index) => {\r\n    navigate(\"/editor?projectId=\" + data.id);\r\n  };\r\n\r\n  const previewMethod = (record) => {\r\n    const { id, preview_app_id } = record;\r\n    if (preview_app_id) {\r\n      let url = `/preview.html?projectId=${id}&id=${preview_app_id}`;\r\n      previewRef.current.open();\r\n      setPreviewURL(url);\r\n    } else {\r\n      message.warn(\"未设置首页，不可预览\");\r\n    }\r\n  };\r\n\r\n  const closePulish = () => {\r\n    setTargetPublish(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getProjectList();\r\n  }, []);\r\n\r\n  const editClick = (type) => {\r\n    if (type) {\r\n      getProjectList();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ flexGrow: 1, height: \"100%\" }}>\r\n      <Pane\r\n        sx={{\r\n          background: \"#fff\",\r\n          color: \"#333\",\r\n          padding: \"0 20px\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        <Nav>\r\n          <span style={{ fontWeight: \"bold\" }}>我的项目</span>\r\n          <QueryPane search={search}></QueryPane>\r\n        </Nav>\r\n        <div style={{ padding: \"30px 0\" }}>\r\n          <CardList\r\n            sx={{ padding: 0 }}\r\n            dataSource={dataSource}\r\n            handleClick={handleClick}\r\n            ipagenation={ipagenation}\r\n            handleChangePage={handleChangePage}\r\n            handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n            add={add}\r\n            menuList={menuList}\r\n            total={total}\r\n            keyFormat={keyFormat}\r\n            doubleClick={doubleClick}\r\n            moreList={moreList}\r\n          ></CardList>\r\n        </div>\r\n      </Pane>\r\n      <ProjectEdit\r\n        dataRef={editRef}\r\n        onOk={editClick}\r\n        onClose={editClick}\r\n      ></ProjectEdit>\r\n      <Preview previewRef={previewRef} url={previewURL}></Preview>\r\n      <Deploy deployRef={deployRef}></Deploy>\r\n      {targetPublish && Object.keys(targetPublish).length > 0 ? (\r\n        <PublishModal\r\n          category=\"M0001\"\r\n          type=\"project\"\r\n          onClose={closePulish}\r\n          target={targetPublish.id}\r\n          targetObj={targetPublish}\r\n        ></PublishModal>\r\n      ) : null}\r\n    </Box>\r\n  );\r\n}\r\n","import React, { useImperativeHandle, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport SModal from \"~/components/SModal\";\r\nimport { previewChannel } from \"~/utils/previewChannel\";\r\n\r\ninterface FileTreeProps {\r\n  url?: string;\r\n  previewRef?: any;\r\n  code?: string | number;\r\n}\r\n\r\nconst SelfIframe = styled(\"iframe\")(({ theme }) => ({\r\n  width: \"100%\",\r\n  height: \"calc(100% - 32px)\",\r\n  border: \"none\",\r\n  margin: \"0\",\r\n  padding: \"0\",\r\n}));\r\n\r\nconst Preview: React.FC<FileTreeProps> = ({ url, previewRef }) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useImperativeHandle(previewRef, () => ({\r\n    open,\r\n  }));\r\n\r\n  const handleOk = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const open = (code?: null) => {\r\n    setVisible(true);\r\n    respFuc(code);\r\n  };\r\n\r\n  const respFuc = (code?: null) => {\r\n    console.log(\"code1: \", code);\r\n    previewChannel.addEventListener(\"message\", (e) => {\r\n      console.log(e);\r\n      const { type } = e.data;\r\n      if (type === \"close_preview\") {\r\n        setVisible(false);\r\n      } else if (type === \"apply-shop\") {\r\n        // setTimeout(() => {\r\n        navigate(\"/editor?code=\" + code);\r\n        handleClose();\r\n        //   console.log(\"code2: \", code);\r\n        // }, 10);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <SModal\r\n      size=\"xl\"\r\n      title=\"预览\"\r\n      visible={visible}\r\n      handleOk={handleOk}\r\n      handleClose={handleClose}\r\n      fullWidth={true}\r\n      height={800}\r\n      hideFooter={true}\r\n    >\r\n      <SelfIframe src={url}></SelfIframe>\r\n    </SModal>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n"],"names":["SelfPaper","styled","Paper","theme","border","p","display","alignItems","width","height","boxShadow","borderRadius","SearchPane","justifyContent","padding","background","color","cursor","QueryPane","props","value","setValue","useState","handleClick","search","sx","ml","flex","placeholder","onChange","e","target","onKeyUp","keyCode","onClick","BootstrapDialog","Dialog","spacing","BootstrapDialogTitle","children","onClose","other","m","position","right","top","palette","grey","PaperComponent","handle","cancel","title","visible","size","header","footer","fullWidth","hideFooter","handleOk","handleClose","closeMethod","open","maxWidth","id","dividers","total","pagenation","onPageChange","onRowsPerPageChange","pageNum","pageSize","pageSizeOptions","rowsPerPageOptions","component","count","rowsPerPage","page","event","newPage","labelRowsPerPage","labelDisplayedRows","from","to","Math","ceil","SelfCard","Card","zIndex","bottom","fontSize","left","fontFamily","fontWeight","margin","CardIcon","FooterMenu","ActionMenu","ButtonPane","SelfIconButton","IconButton","initMenuList","key","icon","defaultFormat","name","createdTime","updatedTime","img","dataItem","dataIndex","menuList","moreList","keyFormat","doubleClick","anchorEl","setAnchorEl","currentItem","setCurrentItem","Boolean","clickItem","type","record","index","closeMenu","activeCard","renderMenu","style","Menu","MenuListProps","item","MenuItem","className","menuClick","showMenu","currentTarget","menus","format","CardContent","userSelect","SIcon","Typography","align","variant","overflow","textOverflow","whiteSpace","marginRight","marginTop","undefined","validateImage","commonStore","src","Date","getTime","renderItem","Pane","textAlign","CardPane","flexWrap","gridTemplateColumns","gridGap","maxHeight","paddingBottom","dataSource","ipagenation","handleChangePage","handleChangeRowsPerPage","add","CardActionArea","CardMedia","image","alt","length","SPagination","Label","deployRef","onOk","setVisible","project_code","setProjectCode","hardware_info","setHardware_info","expiration","setExpiration","currentObj","setCurrentObj","useImperativeHandle","project_name","useEffect","SModal","formData","formatDate","postAction","then","res","message","Grid","container","xs","LocalizationProvider","dateAdapter","AdapterDateFns","DateTimePicker","newValue","ampm","inputFormat","renderInput","params","TextField","Input","url","Select","dataRef","setFormData","actionType","setActionType","init","data","form","JSON","parse","changeValue","obj","addOrProject","dataUrl","httpAction","project_type","Nav","borderBottom","initFormData","Projects","setIpagenation","setDataSource","searchName","setSearchName","setTotal","previewURL","setPreviewURL","targetPublish","setTargetPublish","previewRef","useRef","editRef","navigate","useNavigate","getProjectList","limit","getAction","list","total_count","catch","err","delProjectMethod","deleteAction","code","previewMethod","preview_app_id","current","editClick","Box","flexGrow","val","edit","confirm","content","delProject","ProjectEdit","Preview","Deploy","category","targetObj","SelfIframe","respFuc","previewChannel"],"sourceRoot":""}