{"version":3,"file":"js/vender~640e94a9.05bbcf0e.js","mappings":"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","sources":["webpack:///../../../node_modules/base64-js/index.js","webpack:///../../../node_modules/buffer/index.js","webpack:///../../../node_modules/@babylonjs/materials/lava/lava.fragment.js","webpack:///../../../node_modules/@babylonjs/materials/lava/lava.vertex.js","webpack:///../../../node_modules/@babylonjs/materials/lava/lavaMaterial.js","webpack:///../../../node_modules/@babylonjs/materials/mix/mix.fragment.js","webpack:///../../../node_modules/@babylonjs/materials/mix/mix.vertex.js","webpack:///../../../node_modules/@babylonjs/materials/mix/mixMaterial.js","webpack:///../../../node_modules/@babylonjs/materials/normal/normal.fragment.js","webpack:///../../../node_modules/@babylonjs/materials/normal/normal.vertex.js","webpack:///../../../node_modules/@babylonjs/materials/normal/normalMaterial.js","webpack:///../../../node_modules/@babylonjs/materials/shadowOnly/shadowOnly.fragment.js","webpack:///../../../node_modules/@babylonjs/materials/shadowOnly/shadowOnly.vertex.js","webpack:///../../../node_modules/@babylonjs/materials/shadowOnly/shadowOnlyMaterial.js","webpack:///../../../node_modules/@babylonjs/materials/simple/simple.fragment.js","webpack:///../../../node_modules/@babylonjs/materials/simple/simple.vertex.js","webpack:///../../../node_modules/@babylonjs/materials/simple/simpleMaterial.js","webpack:///../../../node_modules/@babylonjs/materials/sky/sky.fragment.js","webpack:///../../../node_modules/@babylonjs/materials/sky/sky.vertex.js","webpack:///../../../node_modules/@babylonjs/materials/sky/skyMaterial.js","webpack:///../../../node_modules/@babylonjs/materials/terrain/terrain.fragment.js","webpack:///../../../node_modules/@babylonjs/materials/terrain/terrain.vertex.js","webpack:///../../../node_modules/@babylonjs/materials/terrain/terrainMaterial.js","webpack:///../../../node_modules/@babylonjs/materials/triPlanar/triplanar.fragment.js","webpack:///../../../node_modules/@babylonjs/materials/triPlanar/triplanar.vertex.js","webpack:///../../../node_modules/@babylonjs/materials/triPlanar/triPlanarMaterial.js","webpack:///../../../node_modules/@babylonjs/materials/water/water.fragment.js","webpack:///../../../node_modules/@babylonjs/materials/water/water.vertex.js","webpack:///../../../node_modules/@babylonjs/materials/water/waterMaterial.js","webpack:///../../../node_modules/@babylonjs/serializers/glTF/2.0/glTFAnimation.js","webpack:///../../../node_modules/@babylonjs/serializers/OBJ/objSerializer.js","webpack:///../../../node_modules/@babylonjs/serializers/glTF/glTFFileExporter.js","webpack:///../../../node_modules/@babylonjs/serializers/glTF/2.0/glTFUtilities.js","webpack:///../../../node_modules/@babylonjs/serializers/glTF/2.0/glTFData.js","webpack:///../../../node_modules/@babylonjs/serializers/glTF/2.0/glTFMaterialExporter.js","webpack:///../../../node_modules/@babylonjs/serializers/glTF/2.0/glTFExporter.js","webpack:///../../../node_modules/@babylonjs/serializers/glTF/2.0/glTFExporterExtension.js","webpack:///../../../node_modules/@babylonjs/serializers/glTF/2.0/glTFSerializer.js","webpack:///../../../node_modules/@babylonjs/serializers/glTF/2.0/shaders/textureTransform.fragment.js","webpack:///../../../node_modules/@babylonjs/serializers/glTF/2.0/Extensions/KHR_texture_transform.js","webpack:///../../../node_modules/@babylonjs/serializers/glTF/2.0/Extensions/KHR_lights_punctual.js","webpack:///../../../node_modules/@babylonjs/serializers/glTF/2.0/Extensions/KHR_materials_clearcoat.js","webpack:///../../../node_modules/@babylonjs/serializers/glTF/2.0/Extensions/KHR_materials_iridescence.js","webpack:///../../../node_modules/@babylonjs/serializers/glTF/2.0/Extensions/KHR_materials_sheen.js","webpack:///../../../node_modules/@babylonjs/serializers/glTF/2.0/Extensions/KHR_materials_unlit.js","webpack:///../../../node_modules/@babylonjs/serializers/glTF/2.0/Extensions/KHR_materials_ior.js","webpack:///../../../node_modules/@babylonjs/serializers/glTF/2.0/Extensions/KHR_materials_specular.js","webpack:///../../../node_modules/@babylonjs/serializers/glTF/2.0/Extensions/KHR_materials_volume.js","webpack:///../../../node_modules/@babylonjs/serializers/glTF/2.0/Extensions/KHR_materials_transmission.js","webpack:///../../../node_modules/@babylonjs/serializers/glTF/2.0/Extensions/EXT_mesh_gpu_instancing.js","webpack:///../../../node_modules/@babylonjs/serializers/stl/stlSerializer.js"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/helperFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightUboDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightsFragmentFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/shadowsFragmentFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/depthPrePass.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/imageProcessingCompatibility.js\";\nvar name = \"lavaPixelShader\";\nvar shader = \"precision highp float;uniform vec4 vEyePosition;uniform vec4 vDiffuseColor;varying vec3 vPositionW;uniform float time;uniform float speed;uniform float movingSpeed;uniform vec3 fogColor;uniform sampler2D noiseTexture;uniform float fogDensity;varying float noise;\\n#ifdef NORMAL\\nvarying vec3 vNormalW;\\n#endif\\n#ifdef VERTEXCOLOR\\nvarying vec4 vColor;\\n#endif\\n#include<helperFunctions>\\n#include<__decl__lightFragment>[0]\\n#include<__decl__lightFragment>[1]\\n#include<__decl__lightFragment>[2]\\n#include<__decl__lightFragment>[3]\\n#include<lightsFragmentFunctions>\\n#include<shadowsFragmentFunctions>\\n#ifdef DIFFUSE\\nvarying vec2 vDiffuseUV;uniform sampler2D diffuseSampler;uniform vec2 vDiffuseInfos;\\n#endif\\n#include<clipPlaneFragmentDeclaration>\\n#include<fogFragmentDeclaration>\\nfloat random( vec3 scale,float seed ){return fract( sin( dot( gl_FragCoord.xyz+seed,scale ) )*43758.5453+seed ) ;}\\n#define CUSTOM_FRAGMENT_DEFINITIONS\\nvoid main(void) {\\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\\n#include<clipPlaneFragment>\\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);vec4 baseColor=vec4(1.,1.,1.,1.);vec3 diffuseColor=vDiffuseColor.rgb;float alpha=vDiffuseColor.a;\\n#ifdef DIFFUSE\\nvec4 noiseTex=texture2D( noiseTexture,vDiffuseUV );vec2 T1=vDiffuseUV+vec2( 1.5,-1.5 )*time *0.02;vec2 T2=vDiffuseUV+vec2( -0.5,2.0 )*time*0.01*speed;T1.x+=noiseTex.x*2.0;T1.y+=noiseTex.y*2.0;T2.x-=noiseTex.y*0.2+time*0.001*movingSpeed;T2.y+=noiseTex.z*0.2+time*0.002*movingSpeed;float p=texture2D( noiseTexture,T1*3.0 ).a;vec4 lavaColor=texture2D( diffuseSampler,T2*4.0);vec4 temp=lavaColor*( vec4( p,p,p,p )*2. )+( lavaColor*lavaColor-0.1 );baseColor=temp;float depth=gl_FragCoord.z*4.0;const float LOG2=1.442695;float fogFactor=exp2(-fogDensity*fogDensity*depth*depth*LOG2 );fogFactor=1.0-clamp( fogFactor,0.0,1.0 );baseColor=mix( baseColor,vec4( fogColor,baseColor.w ),fogFactor );diffuseColor=baseColor.rgb;\\n#ifdef ALPHATEST\\nif (baseColor.a<0.4)\\ndiscard;\\n#endif\\n#include<depthPrePass>\\nbaseColor.rgb*=vDiffuseInfos.y;\\n#endif\\n#ifdef VERTEXCOLOR\\nbaseColor.rgb*=vColor.rgb;\\n#endif\\n#ifdef NORMAL\\nvec3 normalW=normalize(vNormalW);\\n#else\\nvec3 normalW=vec3(1.0,1.0,1.0);\\n#endif\\n#ifdef UNLIT\\nvec3 diffuseBase=vec3(1.,1.,1.);\\n#else\\nvec3 diffuseBase=vec3(0.,0.,0.);lightingInfo info;float shadow=1.;float glossiness=0.;\\n#include<lightFragment>[0]\\n#include<lightFragment>[1]\\n#include<lightFragment>[2]\\n#include<lightFragment>[3]\\n#endif\\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR)\\nalpha*=vColor.a;\\n#endif\\nvec3 finalDiffuse=clamp(diffuseBase*diffuseColor,0.0,1.0)*baseColor.rgb;vec4 color=vec4(finalDiffuse,alpha);\\n#include<fogFragment>\\ngl_FragColor=color;\\n#include<imageProcessingCompatibility>\\n#define CUSTOM_FRAGMENT_MAIN_END\\n}\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var lavaPixelShader = { name: name, shader: shader };\n//# sourceMappingURL=lava.fragment.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bonesDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bakedVertexAnimationDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/instancesDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneVertexDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogVertexDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightUboDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/instancesVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bonesVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bakedVertexAnimation.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/shadowsVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/vertexColorMixing.js\";\nvar name = \"lavaVertexShader\";\nvar shader = \"precision highp float;uniform float time;uniform float lowFrequencySpeed;varying float noise;attribute vec3 position;\\n#ifdef NORMAL\\nattribute vec3 normal;\\n#endif\\n#ifdef UV1\\nattribute vec2 uv;\\n#endif\\n#ifdef UV2\\nattribute vec2 uv2;\\n#endif\\n#ifdef VERTEXCOLOR\\nattribute vec4 color;\\n#endif\\n#include<bonesDeclaration>\\n#include<bakedVertexAnimationDeclaration>\\n#include<instancesDeclaration>\\nuniform mat4 view;uniform mat4 viewProjection;\\n#ifdef DIFFUSE\\nvarying vec2 vDiffuseUV;uniform mat4 diffuseMatrix;uniform vec2 vDiffuseInfos;\\n#endif\\n#ifdef POINTSIZE\\nuniform float pointSize;\\n#endif\\nvarying vec3 vPositionW;\\n#ifdef NORMAL\\nvarying vec3 vNormalW;\\n#endif\\n#ifdef VERTEXCOLOR\\nvarying vec4 vColor;\\n#endif\\n#include<clipPlaneVertexDeclaration>\\n#include<fogVertexDeclaration>\\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\\n/* NOISE FUNCTIONS */\\nvec3 mod289(vec3 x)\\n{return x-floor(x*(1.0/289.0))*289.0;}\\nvec4 mod289(vec4 x)\\n{return x-floor(x*(1.0/289.0))*289.0;}\\nvec4 permute(vec4 x)\\n{return mod289(((x*34.0)+1.0)*x);}\\nvec4 taylorInvSqrt(vec4 r)\\n{return 1.79284291400159-0.85373472095314*r;}\\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\\nfloat pnoise(vec3 P,vec3 rep)\\n{vec3 Pi0=mod(floor(P),rep); \\nvec3 Pi1=mod(Pi0+vec3(1.0),rep); \\nPi0=mod289(Pi0);Pi1=mod289(Pi1);vec3 Pf0=fract(P); \\nvec3 Pf1=Pf0-vec3(1.0); \\nvec4 ix=vec4(Pi0.x,Pi1.x,Pi0.x,Pi1.x);vec4 iy=vec4(Pi0.yy,Pi1.yy);vec4 iz0=Pi0.zzzz;vec4 iz1=Pi1.zzzz;vec4 ixy=permute(permute(ix)+iy);vec4 ixy0=permute(ixy+iz0);vec4 ixy1=permute(ixy+iz1);vec4 gx0=ixy0*(1.0/7.0);vec4 gy0=fract(floor(gx0)*(1.0/7.0))-0.5;gx0=fract(gx0);vec4 gz0=vec4(0.5)-abs(gx0)-abs(gy0);vec4 sz0=step(gz0,vec4(0.0));gx0-=sz0*(step(0.0,gx0)-0.5);gy0-=sz0*(step(0.0,gy0)-0.5);vec4 gx1=ixy1*(1.0/7.0);vec4 gy1=fract(floor(gx1)*(1.0/7.0))-0.5;gx1=fract(gx1);vec4 gz1=vec4(0.5)-abs(gx1)-abs(gy1);vec4 sz1=step(gz1,vec4(0.0));gx1-=sz1*(step(0.0,gx1)-0.5);gy1-=sz1*(step(0.0,gy1)-0.5);vec3 g000=vec3(gx0.x,gy0.x,gz0.x);vec3 g100=vec3(gx0.y,gy0.y,gz0.y);vec3 g010=vec3(gx0.z,gy0.z,gz0.z);vec3 g110=vec3(gx0.w,gy0.w,gz0.w);vec3 g001=vec3(gx1.x,gy1.x,gz1.x);vec3 g101=vec3(gx1.y,gy1.y,gz1.y);vec3 g011=vec3(gx1.z,gy1.z,gz1.z);vec3 g111=vec3(gx1.w,gy1.w,gz1.w);vec4 norm0=taylorInvSqrt(vec4(dot(g000,g000),dot(g010,g010),dot(g100,g100),dot(g110,g110)));g000*=norm0.x;g010*=norm0.y;g100*=norm0.z;g110*=norm0.w;vec4 norm1=taylorInvSqrt(vec4(dot(g001,g001),dot(g011,g011),dot(g101,g101),dot(g111,g111)));g001*=norm1.x;g011*=norm1.y;g101*=norm1.z;g111*=norm1.w;float n000=dot(g000,Pf0);float n100=dot(g100,vec3(Pf1.x,Pf0.yz));float n010=dot(g010,vec3(Pf0.x,Pf1.y,Pf0.z));float n110=dot(g110,vec3(Pf1.xy,Pf0.z));float n001=dot(g001,vec3(Pf0.xy,Pf1.z));float n101=dot(g101,vec3(Pf1.x,Pf0.y,Pf1.z));float n011=dot(g011,vec3(Pf0.x,Pf1.yz));float n111=dot(g111,Pf1);vec3 fade_xyz=fade(Pf0);vec4 n_z=mix(vec4(n000,n100,n010,n110),vec4(n001,n101,n011,n111),fade_xyz.z);vec2 n_yz=mix(n_z.xy,n_z.zw,fade_xyz.y);float n_xyz=mix(n_yz.x,n_yz.y,fade_xyz.x);return 2.2*n_xyz;}\\n/* END FUNCTION */\\nfloat turbulence( vec3 p ) {float w=100.0;float t=-.5;for (float f=1.0 ; f<=10.0 ; f++ ){float power=pow( 2.0,f );t+=abs( pnoise( vec3( power*p ),vec3( 10.0,10.0,10.0 ) )/power );}\\nreturn t;}\\n#define CUSTOM_VERTEX_DEFINITIONS\\nvoid main(void) {\\n#define CUSTOM_VERTEX_MAIN_BEGIN\\n#include<instancesVertex>\\n#include<bonesVertex>\\n#include<bakedVertexAnimation>\\n#ifdef NORMAL\\nnoise=10.0* -.10*turbulence( .5*normal+time*1.15 );float b=lowFrequencySpeed*5.0*pnoise( 0.05*position +vec3(time*1.025),vec3( 100.0 ) );float displacement=- 1.5*noise+b;vec3 newPosition=position+normal*displacement;gl_Position=viewProjection*finalWorld*vec4( newPosition,1.0 );vec4 worldPos=finalWorld*vec4(newPosition,1.0);vPositionW=vec3(worldPos);vNormalW=normalize(vec3(finalWorld*vec4(normal,0.0)));\\n#endif\\n#ifndef UV1\\nvec2 uv=vec2(0.,0.);\\n#endif\\n#ifndef UV2\\nvec2 uv2=vec2(0.,0.);\\n#endif\\n#ifdef DIFFUSE\\nif (vDiffuseInfos.x==0.)\\n{vDiffuseUV=vec2(diffuseMatrix*vec4(uv,1.0,0.0));}\\nelse\\n{vDiffuseUV=vec2(diffuseMatrix*vec4(uv2,1.0,0.0));}\\n#endif\\n#include<clipPlaneVertex>\\n#include<fogVertex>\\n#include<shadowsVertex>[0..maxSimultaneousLights]\\n#include<vertexColorMixing>\\n#if defined(POINTSIZE) && !defined(WEBGPU)\\ngl_PointSize=pointSize;\\n#endif\\n#define CUSTOM_VERTEX_MAIN_END\\n}\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var lavaVertexShader = { name: name, shader: shader };\n//# sourceMappingURL=lava.vertex.js.map","import { __decorate, __extends } from \"tslib\";\nimport { serializeAsTexture, serialize, expandToProperty, serializeAsColor3, SerializationHelper } from \"@babylonjs/core/Misc/decorators.js\";\nimport { Color3 } from \"@babylonjs/core/Maths/math.color.js\";\nimport { MaterialDefines } from \"@babylonjs/core/Materials/materialDefines.js\";\nimport { MaterialHelper } from \"@babylonjs/core/Materials/materialHelper.js\";\nimport { PushMaterial } from \"@babylonjs/core/Materials/pushMaterial.js\";\nimport { MaterialFlags } from \"@babylonjs/core/Materials/materialFlags.js\";\nimport { VertexBuffer } from \"@babylonjs/core/Buffers/buffer.js\";\nimport { Scene } from \"@babylonjs/core/scene.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport \"./lava.fragment.js\";\nimport \"./lava.vertex.js\";\nimport { EffectFallbacks } from \"@babylonjs/core/Materials/effectFallbacks.js\";\nvar LavaMaterialDefines = /** @class */ (function (_super) {\n    __extends(LavaMaterialDefines, _super);\n    function LavaMaterialDefines() {\n        var _this = _super.call(this) || this;\n        _this.DIFFUSE = false;\n        _this.CLIPPLANE = false;\n        _this.CLIPPLANE2 = false;\n        _this.CLIPPLANE3 = false;\n        _this.CLIPPLANE4 = false;\n        _this.CLIPPLANE5 = false;\n        _this.CLIPPLANE6 = false;\n        _this.ALPHATEST = false;\n        _this.DEPTHPREPASS = false;\n        _this.POINTSIZE = false;\n        _this.FOG = false;\n        _this.LIGHT0 = false;\n        _this.LIGHT1 = false;\n        _this.LIGHT2 = false;\n        _this.LIGHT3 = false;\n        _this.SPOTLIGHT0 = false;\n        _this.SPOTLIGHT1 = false;\n        _this.SPOTLIGHT2 = false;\n        _this.SPOTLIGHT3 = false;\n        _this.HEMILIGHT0 = false;\n        _this.HEMILIGHT1 = false;\n        _this.HEMILIGHT2 = false;\n        _this.HEMILIGHT3 = false;\n        _this.DIRLIGHT0 = false;\n        _this.DIRLIGHT1 = false;\n        _this.DIRLIGHT2 = false;\n        _this.DIRLIGHT3 = false;\n        _this.POINTLIGHT0 = false;\n        _this.POINTLIGHT1 = false;\n        _this.POINTLIGHT2 = false;\n        _this.POINTLIGHT3 = false;\n        _this.SHADOW0 = false;\n        _this.SHADOW1 = false;\n        _this.SHADOW2 = false;\n        _this.SHADOW3 = false;\n        _this.SHADOWS = false;\n        _this.SHADOWESM0 = false;\n        _this.SHADOWESM1 = false;\n        _this.SHADOWESM2 = false;\n        _this.SHADOWESM3 = false;\n        _this.SHADOWPOISSON0 = false;\n        _this.SHADOWPOISSON1 = false;\n        _this.SHADOWPOISSON2 = false;\n        _this.SHADOWPOISSON3 = false;\n        _this.SHADOWPCF0 = false;\n        _this.SHADOWPCF1 = false;\n        _this.SHADOWPCF2 = false;\n        _this.SHADOWPCF3 = false;\n        _this.SHADOWPCSS0 = false;\n        _this.SHADOWPCSS1 = false;\n        _this.SHADOWPCSS2 = false;\n        _this.SHADOWPCSS3 = false;\n        _this.NORMAL = false;\n        _this.UV1 = false;\n        _this.UV2 = false;\n        _this.VERTEXCOLOR = false;\n        _this.VERTEXALPHA = false;\n        _this.NUM_BONE_INFLUENCERS = 0;\n        _this.BonesPerMesh = 0;\n        _this.INSTANCES = false;\n        _this.INSTANCESCOLOR = false;\n        _this.UNLIT = false;\n        _this.IMAGEPROCESSINGPOSTPROCESS = false;\n        _this.SKIPFINALCOLORCLAMP = false;\n        _this.rebuild();\n        return _this;\n    }\n    return LavaMaterialDefines;\n}(MaterialDefines));\nvar LavaMaterial = /** @class */ (function (_super) {\n    __extends(LavaMaterial, _super);\n    function LavaMaterial(name, scene) {\n        var _this = _super.call(this, name, scene) || this;\n        _this.speed = 1;\n        _this.movingSpeed = 1;\n        _this.lowFrequencySpeed = 1;\n        _this.fogDensity = 0.15;\n        _this._lastTime = 0;\n        _this.diffuseColor = new Color3(1, 1, 1);\n        _this._disableLighting = false;\n        _this._unlit = false;\n        _this._maxSimultaneousLights = 4;\n        _this._scaledDiffuse = new Color3();\n        return _this;\n    }\n    LavaMaterial.prototype.needAlphaBlending = function () {\n        return this.alpha < 1.0;\n    };\n    LavaMaterial.prototype.needAlphaTesting = function () {\n        return false;\n    };\n    LavaMaterial.prototype.getAlphaTestTexture = function () {\n        return null;\n    };\n    // Methods\n    LavaMaterial.prototype.isReadyForSubMesh = function (mesh, subMesh, useInstances) {\n        if (this.isFrozen) {\n            if (subMesh.effect && subMesh.effect._wasPreviouslyReady) {\n                return true;\n            }\n        }\n        if (!subMesh.materialDefines) {\n            subMesh.materialDefines = new LavaMaterialDefines();\n        }\n        var defines = subMesh.materialDefines;\n        var scene = this.getScene();\n        if (this._isReadyForSubMesh(subMesh)) {\n            return true;\n        }\n        var engine = scene.getEngine();\n        // Textures\n        if (defines._areTexturesDirty) {\n            defines._needUVs = false;\n            if (scene.texturesEnabled) {\n                if (this._diffuseTexture && MaterialFlags.DiffuseTextureEnabled) {\n                    if (!this._diffuseTexture.isReady()) {\n                        return false;\n                    }\n                    else {\n                        defines._needUVs = true;\n                        defines.DIFFUSE = true;\n                    }\n                }\n            }\n        }\n        // Misc.\n        MaterialHelper.PrepareDefinesForMisc(mesh, scene, false, this.pointsCloud, this.fogEnabled, this._shouldTurnAlphaTestOn(mesh), defines);\n        // Lights\n        defines._needNormals = true;\n        MaterialHelper.PrepareDefinesForLights(scene, mesh, defines, false, this._maxSimultaneousLights, this._disableLighting);\n        // Values that need to be evaluated on every frame\n        MaterialHelper.PrepareDefinesForFrameBoundValues(scene, engine, defines, useInstances ? true : false);\n        // Attribs\n        MaterialHelper.PrepareDefinesForAttributes(mesh, defines, true, true);\n        // Get correct effect\n        if (defines.isDirty) {\n            defines.markAsProcessed();\n            scene.resetCachedMaterial();\n            // Fallbacks\n            var fallbacks = new EffectFallbacks();\n            if (defines.FOG) {\n                fallbacks.addFallback(1, \"FOG\");\n            }\n            MaterialHelper.HandleFallbacksForShadows(defines, fallbacks);\n            if (defines.NUM_BONE_INFLUENCERS > 0) {\n                fallbacks.addCPUSkinningFallback(0, mesh);\n            }\n            defines.IMAGEPROCESSINGPOSTPROCESS = scene.imageProcessingConfiguration.applyByPostProcess;\n            //Attributes\n            var attribs = [VertexBuffer.PositionKind];\n            if (defines.NORMAL) {\n                attribs.push(VertexBuffer.NormalKind);\n            }\n            if (defines.UV1) {\n                attribs.push(VertexBuffer.UVKind);\n            }\n            if (defines.UV2) {\n                attribs.push(VertexBuffer.UV2Kind);\n            }\n            if (defines.VERTEXCOLOR) {\n                attribs.push(VertexBuffer.ColorKind);\n            }\n            MaterialHelper.PrepareAttributesForBones(attribs, mesh, defines, fallbacks);\n            MaterialHelper.PrepareAttributesForInstances(attribs, defines);\n            // Legacy browser patch\n            var shaderName = \"lava\";\n            var join = defines.toString();\n            var uniforms = [\n                \"world\",\n                \"view\",\n                \"viewProjection\",\n                \"vEyePosition\",\n                \"vLightsType\",\n                \"vDiffuseColor\",\n                \"vFogInfos\",\n                \"vFogColor\",\n                \"pointSize\",\n                \"vDiffuseInfos\",\n                \"mBones\",\n                \"vClipPlane\",\n                \"vClipPlane2\",\n                \"vClipPlane3\",\n                \"vClipPlane4\",\n                \"vClipPlane5\",\n                \"vClipPlane6\",\n                \"diffuseMatrix\",\n                \"time\",\n                \"speed\",\n                \"movingSpeed\",\n                \"fogColor\",\n                \"fogDensity\",\n                \"lowFrequencySpeed\",\n            ];\n            var samplers = [\"diffuseSampler\", \"noiseTexture\"];\n            var uniformBuffers = new Array();\n            MaterialHelper.PrepareUniformsAndSamplersList({\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: defines,\n                maxSimultaneousLights: this.maxSimultaneousLights,\n            });\n            subMesh.setEffect(scene.getEngine().createEffect(shaderName, {\n                attributes: attribs,\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: join,\n                fallbacks: fallbacks,\n                onCompiled: this.onCompiled,\n                onError: this.onError,\n                indexParameters: { maxSimultaneousLights: this.maxSimultaneousLights },\n            }, engine), defines, this._materialContext);\n        }\n        if (!subMesh.effect || !subMesh.effect.isReady()) {\n            return false;\n        }\n        defines._renderId = scene.getRenderId();\n        subMesh.effect._wasPreviouslyReady = true;\n        return true;\n    };\n    LavaMaterial.prototype.bindForSubMesh = function (world, mesh, subMesh) {\n        var scene = this.getScene();\n        var defines = subMesh.materialDefines;\n        if (!defines) {\n            return;\n        }\n        var effect = subMesh.effect;\n        if (!effect) {\n            return;\n        }\n        this._activeEffect = effect;\n        defines.UNLIT = this._unlit;\n        // Matrices\n        this.bindOnlyWorldMatrix(world);\n        this._activeEffect.setMatrix(\"viewProjection\", scene.getTransformMatrix());\n        // Bones\n        MaterialHelper.BindBonesParameters(mesh, this._activeEffect);\n        if (this._mustRebind(scene, effect)) {\n            // Textures\n            if (this.diffuseTexture && MaterialFlags.DiffuseTextureEnabled) {\n                this._activeEffect.setTexture(\"diffuseSampler\", this.diffuseTexture);\n                this._activeEffect.setFloat2(\"vDiffuseInfos\", this.diffuseTexture.coordinatesIndex, this.diffuseTexture.level);\n                this._activeEffect.setMatrix(\"diffuseMatrix\", this.diffuseTexture.getTextureMatrix());\n            }\n            if (this.noiseTexture) {\n                this._activeEffect.setTexture(\"noiseTexture\", this.noiseTexture);\n            }\n            // Clip plane\n            MaterialHelper.BindClipPlane(this._activeEffect, scene);\n            // Point size\n            if (this.pointsCloud) {\n                this._activeEffect.setFloat(\"pointSize\", this.pointSize);\n            }\n            scene.bindEyePosition(effect);\n        }\n        this._activeEffect.setColor4(\"vDiffuseColor\", this._scaledDiffuse, this.alpha * mesh.visibility);\n        if (scene.lightsEnabled && !this.disableLighting) {\n            MaterialHelper.BindLights(scene, mesh, this._activeEffect, defines);\n        }\n        // View\n        if (scene.fogEnabled && mesh.applyFog && scene.fogMode !== Scene.FOGMODE_NONE) {\n            this._activeEffect.setMatrix(\"view\", scene.getViewMatrix());\n        }\n        // Fog\n        MaterialHelper.BindFogParameters(scene, mesh, this._activeEffect);\n        this._lastTime += scene.getEngine().getDeltaTime();\n        this._activeEffect.setFloat(\"time\", (this._lastTime * this.speed) / 1000);\n        if (!this.fogColor) {\n            this.fogColor = Color3.Black();\n        }\n        this._activeEffect.setColor3(\"fogColor\", this.fogColor);\n        this._activeEffect.setFloat(\"fogDensity\", this.fogDensity);\n        this._activeEffect.setFloat(\"lowFrequencySpeed\", this.lowFrequencySpeed);\n        this._activeEffect.setFloat(\"movingSpeed\", this.movingSpeed);\n        this._afterBind(mesh, this._activeEffect);\n    };\n    LavaMaterial.prototype.getAnimatables = function () {\n        var results = [];\n        if (this.diffuseTexture && this.diffuseTexture.animations && this.diffuseTexture.animations.length > 0) {\n            results.push(this.diffuseTexture);\n        }\n        if (this.noiseTexture && this.noiseTexture.animations && this.noiseTexture.animations.length > 0) {\n            results.push(this.noiseTexture);\n        }\n        return results;\n    };\n    LavaMaterial.prototype.getActiveTextures = function () {\n        var activeTextures = _super.prototype.getActiveTextures.call(this);\n        if (this._diffuseTexture) {\n            activeTextures.push(this._diffuseTexture);\n        }\n        return activeTextures;\n    };\n    LavaMaterial.prototype.hasTexture = function (texture) {\n        if (_super.prototype.hasTexture.call(this, texture)) {\n            return true;\n        }\n        if (this.diffuseTexture === texture) {\n            return true;\n        }\n        return false;\n    };\n    LavaMaterial.prototype.dispose = function (forceDisposeEffect) {\n        if (this.diffuseTexture) {\n            this.diffuseTexture.dispose();\n        }\n        if (this.noiseTexture) {\n            this.noiseTexture.dispose();\n        }\n        _super.prototype.dispose.call(this, forceDisposeEffect);\n    };\n    LavaMaterial.prototype.clone = function (name) {\n        var _this = this;\n        return SerializationHelper.Clone(function () { return new LavaMaterial(name, _this.getScene()); }, this);\n    };\n    LavaMaterial.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.customType = \"BABYLON.LavaMaterial\";\n        return serializationObject;\n    };\n    LavaMaterial.prototype.getClassName = function () {\n        return \"LavaMaterial\";\n    };\n    // Statics\n    LavaMaterial.Parse = function (source, scene, rootUrl) {\n        return SerializationHelper.Parse(function () { return new LavaMaterial(source.name, scene); }, source, scene, rootUrl);\n    };\n    __decorate([\n        serializeAsTexture(\"diffuseTexture\")\n    ], LavaMaterial.prototype, \"_diffuseTexture\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], LavaMaterial.prototype, \"diffuseTexture\", void 0);\n    __decorate([\n        serializeAsTexture()\n    ], LavaMaterial.prototype, \"noiseTexture\", void 0);\n    __decorate([\n        serializeAsColor3()\n    ], LavaMaterial.prototype, \"fogColor\", void 0);\n    __decorate([\n        serialize()\n    ], LavaMaterial.prototype, \"speed\", void 0);\n    __decorate([\n        serialize()\n    ], LavaMaterial.prototype, \"movingSpeed\", void 0);\n    __decorate([\n        serialize()\n    ], LavaMaterial.prototype, \"lowFrequencySpeed\", void 0);\n    __decorate([\n        serialize()\n    ], LavaMaterial.prototype, \"fogDensity\", void 0);\n    __decorate([\n        serializeAsColor3()\n    ], LavaMaterial.prototype, \"diffuseColor\", void 0);\n    __decorate([\n        serialize(\"disableLighting\")\n    ], LavaMaterial.prototype, \"_disableLighting\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsLightsDirty\")\n    ], LavaMaterial.prototype, \"disableLighting\", void 0);\n    __decorate([\n        serialize(\"unlit\")\n    ], LavaMaterial.prototype, \"_unlit\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsLightsDirty\")\n    ], LavaMaterial.prototype, \"unlit\", void 0);\n    __decorate([\n        serialize(\"maxSimultaneousLights\")\n    ], LavaMaterial.prototype, \"_maxSimultaneousLights\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsLightsDirty\")\n    ], LavaMaterial.prototype, \"maxSimultaneousLights\", void 0);\n    return LavaMaterial;\n}(PushMaterial));\nexport { LavaMaterial };\nRegisterClass(\"BABYLON.LavaMaterial\", LavaMaterial);\n//# sourceMappingURL=lavaMaterial.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/helperFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightUboDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightsFragmentFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/shadowsFragmentFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/depthPrePass.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/imageProcessingCompatibility.js\";\nvar name = \"mixPixelShader\";\nvar shader = \"precision highp float;\\nuniform vec4 vEyePosition;\\nuniform vec4 vDiffuseColor;\\n#ifdef SPECULARTERM\\nuniform vec4 vSpecularColor;\\n#endif\\nvarying vec3 vPositionW;\\n#ifdef NORMAL\\nvarying vec3 vNormalW;\\n#endif\\n#ifdef VERTEXCOLOR\\nvarying vec4 vColor;\\n#endif\\n#include<helperFunctions>\\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\\n#ifdef DIFFUSE\\nvarying vec2 vTextureUV;\\nuniform sampler2D mixMap1Sampler;\\nuniform vec2 vTextureInfos;\\n#ifdef MIXMAP2\\nuniform sampler2D mixMap2Sampler;\\n#endif\\nuniform sampler2D diffuse1Sampler;\\nuniform sampler2D diffuse2Sampler;\\nuniform sampler2D diffuse3Sampler;\\nuniform sampler2D diffuse4Sampler;\\nuniform vec2 diffuse1Infos;\\nuniform vec2 diffuse2Infos;\\nuniform vec2 diffuse3Infos;\\nuniform vec2 diffuse4Infos;\\n#ifdef MIXMAP2\\nuniform sampler2D diffuse5Sampler;\\nuniform sampler2D diffuse6Sampler;\\nuniform sampler2D diffuse7Sampler;\\nuniform sampler2D diffuse8Sampler;\\nuniform vec2 diffuse5Infos;\\nuniform vec2 diffuse6Infos;\\nuniform vec2 diffuse7Infos;\\nuniform vec2 diffuse8Infos;\\n#endif\\n#endif\\n#include<lightsFragmentFunctions>\\n#include<shadowsFragmentFunctions>\\n#include<clipPlaneFragmentDeclaration>\\n#include<fogFragmentDeclaration>\\n#define CUSTOM_FRAGMENT_DEFINITIONS\\nvoid main(void) {\\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\\n#include<clipPlaneFragment>\\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);\\nvec4 finalMixColor=vec4(1.,1.,1.,1.);\\nvec3 diffuseColor=vDiffuseColor.rgb;\\n#ifdef MIXMAP2\\nvec4 mixColor2=vec4(1.,1.,1.,1.);\\n#endif\\n#ifdef SPECULARTERM\\nfloat glossiness=vSpecularColor.a;\\nvec3 specularColor=vSpecularColor.rgb;\\n#else\\nfloat glossiness=0.;\\n#endif\\nfloat alpha=vDiffuseColor.a;\\n#ifdef NORMAL\\nvec3 normalW=normalize(vNormalW);\\n#else\\nvec3 normalW=vec3(1.0,1.0,1.0);\\n#endif\\n#ifdef DIFFUSE\\nvec4 mixColor=texture2D(mixMap1Sampler,vTextureUV);\\n#include<depthPrePass>\\nmixColor.rgb*=vTextureInfos.y;\\nvec4 diffuse1Color=texture2D(diffuse1Sampler,vTextureUV*diffuse1Infos);\\nvec4 diffuse2Color=texture2D(diffuse2Sampler,vTextureUV*diffuse2Infos);\\nvec4 diffuse3Color=texture2D(diffuse3Sampler,vTextureUV*diffuse3Infos);\\nvec4 diffuse4Color=texture2D(diffuse4Sampler,vTextureUV*diffuse4Infos);\\ndiffuse1Color.rgb*=mixColor.r;\\ndiffuse2Color.rgb=mix(diffuse1Color.rgb,diffuse2Color.rgb,mixColor.g);\\ndiffuse3Color.rgb=mix(diffuse2Color.rgb,diffuse3Color.rgb,mixColor.b);\\nfinalMixColor.rgb=mix(diffuse3Color.rgb,diffuse4Color.rgb,1.0-mixColor.a);\\n#ifdef MIXMAP2\\nmixColor=texture2D(mixMap2Sampler,vTextureUV);\\nmixColor.rgb*=vTextureInfos.y;\\nvec4 diffuse5Color=texture2D(diffuse5Sampler,vTextureUV*diffuse5Infos);\\nvec4 diffuse6Color=texture2D(diffuse6Sampler,vTextureUV*diffuse6Infos);\\nvec4 diffuse7Color=texture2D(diffuse7Sampler,vTextureUV*diffuse7Infos);\\nvec4 diffuse8Color=texture2D(diffuse8Sampler,vTextureUV*diffuse8Infos);\\ndiffuse5Color.rgb=mix(finalMixColor.rgb,diffuse5Color.rgb,mixColor.r);\\ndiffuse6Color.rgb=mix(diffuse5Color.rgb,diffuse6Color.rgb,mixColor.g);\\ndiffuse7Color.rgb=mix(diffuse6Color.rgb,diffuse7Color.rgb,mixColor.b);\\nfinalMixColor.rgb=mix(diffuse7Color.rgb,diffuse8Color.rgb,1.0-mixColor.a);\\n#endif\\n#endif\\n#ifdef VERTEXCOLOR\\nfinalMixColor.rgb*=vColor.rgb;\\n#endif\\nvec3 diffuseBase=vec3(0.,0.,0.);\\nlightingInfo info;\\nfloat shadow=1.;\\n#ifdef SPECULARTERM\\nvec3 specularBase=vec3(0.,0.,0.);\\n#endif\\n#include<lightFragment>[0..maxSimultaneousLights]\\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR)\\nalpha*=vColor.a;\\n#endif\\n#ifdef SPECULARTERM\\nvec3 finalSpecular=specularBase*specularColor;\\n#else\\nvec3 finalSpecular=vec3(0.0);\\n#endif\\nvec3 finalDiffuse=clamp(diffuseBase*diffuseColor*finalMixColor.rgb,0.0,1.0);\\nvec4 color=vec4(finalDiffuse+finalSpecular,alpha);\\n#include<fogFragment>\\ngl_FragColor=color;\\n#include<imageProcessingCompatibility>\\n#define CUSTOM_FRAGMENT_MAIN_END\\n}\\n\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var mixPixelShader = { name: name, shader: shader };\n//# sourceMappingURL=mix.fragment.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bonesDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bakedVertexAnimationDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/instancesDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneVertexDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogVertexDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightUboDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/instancesVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bonesVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bakedVertexAnimation.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/shadowsVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/vertexColorMixing.js\";\nvar name = \"mixVertexShader\";\nvar shader = \"precision highp float;attribute vec3 position;\\n#ifdef NORMAL\\nattribute vec3 normal;\\n#endif\\n#ifdef UV1\\nattribute vec2 uv;\\n#endif\\n#ifdef UV2\\nattribute vec2 uv2;\\n#endif\\n#ifdef VERTEXCOLOR\\nattribute vec4 color;\\n#endif\\n#include<bonesDeclaration>\\n#include<bakedVertexAnimationDeclaration>\\n#include<instancesDeclaration>\\nuniform mat4 view;uniform mat4 viewProjection;\\n#ifdef DIFFUSE\\nvarying vec2 vTextureUV;uniform mat4 textureMatrix;uniform vec2 vTextureInfos;\\n#endif\\n#ifdef POINTSIZE\\nuniform float pointSize;\\n#endif\\nvarying vec3 vPositionW;\\n#ifdef NORMAL\\nvarying vec3 vNormalW;\\n#endif\\n#ifdef VERTEXCOLOR\\nvarying vec4 vColor;\\n#endif\\n#include<clipPlaneVertexDeclaration>\\n#include<fogVertexDeclaration>\\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\\n#define CUSTOM_VERTEX_DEFINITIONS\\nvoid main(void) {\\n#define CUSTOM_VERTEX_MAIN_BEGIN\\n#include<instancesVertex>\\n#include<bonesVertex>\\n#include<bakedVertexAnimation>\\nvec4 worldPos=finalWorld*vec4(position,1.0);gl_Position=viewProjection*worldPos;vPositionW=vec3(worldPos);\\n#ifdef NORMAL\\nvNormalW=normalize(vec3(finalWorld*vec4(normal,0.0)));\\n#endif\\n#ifndef UV1\\nvec2 uv=vec2(0.,0.);\\n#endif\\n#ifndef UV2\\nvec2 uv2=vec2(0.,0.);\\n#endif\\n#ifdef DIFFUSE\\nif (vTextureInfos.x==0.)\\n{vTextureUV=vec2(textureMatrix*vec4(uv,1.0,0.0));}\\nelse\\n{vTextureUV=vec2(textureMatrix*vec4(uv2,1.0,0.0));}\\n#endif\\n#include<clipPlaneVertex>\\n#include<fogVertex>\\n#include<shadowsVertex>[0..maxSimultaneousLights]\\n#include<vertexColorMixing>\\n#if defined(POINTSIZE) && !defined(WEBGPU)\\ngl_PointSize=pointSize;\\n#endif\\n#define CUSTOM_VERTEX_MAIN_END\\n}\\n\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var mixVertexShader = { name: name, shader: shader };\n//# sourceMappingURL=mix.vertex.js.map","import { __decorate, __extends } from \"tslib\";\nimport { serializeAsTexture, serialize, expandToProperty, serializeAsColor3, SerializationHelper } from \"@babylonjs/core/Misc/decorators.js\";\nimport { Color3 } from \"@babylonjs/core/Maths/math.color.js\";\nimport { MaterialDefines } from \"@babylonjs/core/Materials/materialDefines.js\";\nimport { MaterialHelper } from \"@babylonjs/core/Materials/materialHelper.js\";\nimport { PushMaterial } from \"@babylonjs/core/Materials/pushMaterial.js\";\nimport { MaterialFlags } from \"@babylonjs/core/Materials/materialFlags.js\";\nimport { VertexBuffer } from \"@babylonjs/core/Buffers/buffer.js\";\nimport { Scene } from \"@babylonjs/core/scene.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport \"./mix.fragment.js\";\nimport \"./mix.vertex.js\";\nimport { EffectFallbacks } from \"@babylonjs/core/Materials/effectFallbacks.js\";\nvar MixMaterialDefines = /** @class */ (function (_super) {\n    __extends(MixMaterialDefines, _super);\n    function MixMaterialDefines() {\n        var _this = _super.call(this) || this;\n        _this.DIFFUSE = false;\n        _this.CLIPPLANE = false;\n        _this.CLIPPLANE2 = false;\n        _this.CLIPPLANE3 = false;\n        _this.CLIPPLANE4 = false;\n        _this.CLIPPLANE5 = false;\n        _this.CLIPPLANE6 = false;\n        _this.ALPHATEST = false;\n        _this.DEPTHPREPASS = false;\n        _this.POINTSIZE = false;\n        _this.FOG = false;\n        _this.SPECULARTERM = false;\n        _this.NORMAL = false;\n        _this.UV1 = false;\n        _this.UV2 = false;\n        _this.VERTEXCOLOR = false;\n        _this.VERTEXALPHA = false;\n        _this.NUM_BONE_INFLUENCERS = 0;\n        _this.BonesPerMesh = 0;\n        _this.INSTANCES = false;\n        _this.INSTANCESCOLOR = false;\n        _this.MIXMAP2 = false;\n        _this.IMAGEPROCESSINGPOSTPROCESS = false;\n        _this.SKIPFINALCOLORCLAMP = false;\n        _this.rebuild();\n        return _this;\n    }\n    return MixMaterialDefines;\n}(MaterialDefines));\nvar MixMaterial = /** @class */ (function (_super) {\n    __extends(MixMaterial, _super);\n    function MixMaterial(name, scene) {\n        var _this = _super.call(this, name, scene) || this;\n        /**\n         * Uniforms\n         */\n        _this.diffuseColor = new Color3(1, 1, 1);\n        _this.specularColor = new Color3(0, 0, 0);\n        _this.specularPower = 64;\n        _this._disableLighting = false;\n        _this._maxSimultaneousLights = 4;\n        return _this;\n    }\n    MixMaterial.prototype.needAlphaBlending = function () {\n        return this.alpha < 1.0;\n    };\n    MixMaterial.prototype.needAlphaTesting = function () {\n        return false;\n    };\n    MixMaterial.prototype.getAlphaTestTexture = function () {\n        return null;\n    };\n    // Methods\n    MixMaterial.prototype.isReadyForSubMesh = function (mesh, subMesh, useInstances) {\n        if (this.isFrozen) {\n            if (subMesh.effect && subMesh.effect._wasPreviouslyReady) {\n                return true;\n            }\n        }\n        if (!subMesh.materialDefines) {\n            subMesh.materialDefines = new MixMaterialDefines();\n        }\n        var defines = subMesh.materialDefines;\n        var scene = this.getScene();\n        if (this._isReadyForSubMesh(subMesh)) {\n            return true;\n        }\n        var engine = scene.getEngine();\n        // Textures\n        if (scene.texturesEnabled) {\n            if (!this._mixTexture1 || !this._mixTexture1.isReady()) {\n                return false;\n            }\n            defines._needUVs = true;\n            if (MaterialFlags.DiffuseTextureEnabled) {\n                if (!this._diffuseTexture1 || !this._diffuseTexture1.isReady()) {\n                    return false;\n                }\n                defines.DIFFUSE = true;\n                if (!this._diffuseTexture2 || !this._diffuseTexture2.isReady()) {\n                    return false;\n                }\n                if (!this._diffuseTexture3 || !this._diffuseTexture3.isReady()) {\n                    return false;\n                }\n                if (!this._diffuseTexture4 || !this._diffuseTexture4.isReady()) {\n                    return false;\n                }\n                if (this._mixTexture2) {\n                    if (!this._mixTexture2.isReady()) {\n                        return false;\n                    }\n                    defines.MIXMAP2 = true;\n                    if (!this._diffuseTexture5 || !this._diffuseTexture5.isReady()) {\n                        return false;\n                    }\n                    if (!this._diffuseTexture6 || !this._diffuseTexture6.isReady()) {\n                        return false;\n                    }\n                    if (!this._diffuseTexture7 || !this._diffuseTexture7.isReady()) {\n                        return false;\n                    }\n                    if (!this._diffuseTexture8 || !this._diffuseTexture8.isReady()) {\n                        return false;\n                    }\n                }\n            }\n        }\n        // Misc.\n        MaterialHelper.PrepareDefinesForMisc(mesh, scene, false, this.pointsCloud, this.fogEnabled, this._shouldTurnAlphaTestOn(mesh), defines);\n        // Lights\n        defines._needNormals = MaterialHelper.PrepareDefinesForLights(scene, mesh, defines, false, this._maxSimultaneousLights, this._disableLighting);\n        // Values that need to be evaluated on every frame\n        MaterialHelper.PrepareDefinesForFrameBoundValues(scene, engine, defines, useInstances ? true : false);\n        // Attribs\n        MaterialHelper.PrepareDefinesForAttributes(mesh, defines, true, true);\n        // Get correct effect\n        if (defines.isDirty) {\n            defines.markAsProcessed();\n            scene.resetCachedMaterial();\n            // Fallbacks\n            var fallbacks = new EffectFallbacks();\n            if (defines.FOG) {\n                fallbacks.addFallback(1, \"FOG\");\n            }\n            MaterialHelper.HandleFallbacksForShadows(defines, fallbacks, this.maxSimultaneousLights);\n            if (defines.NUM_BONE_INFLUENCERS > 0) {\n                fallbacks.addCPUSkinningFallback(0, mesh);\n            }\n            defines.IMAGEPROCESSINGPOSTPROCESS = scene.imageProcessingConfiguration.applyByPostProcess;\n            //Attributes\n            var attribs = [VertexBuffer.PositionKind];\n            if (defines.NORMAL) {\n                attribs.push(VertexBuffer.NormalKind);\n            }\n            if (defines.UV1) {\n                attribs.push(VertexBuffer.UVKind);\n            }\n            if (defines.UV2) {\n                attribs.push(VertexBuffer.UV2Kind);\n            }\n            if (defines.VERTEXCOLOR) {\n                attribs.push(VertexBuffer.ColorKind);\n            }\n            MaterialHelper.PrepareAttributesForBones(attribs, mesh, defines, fallbacks);\n            MaterialHelper.PrepareAttributesForInstances(attribs, defines);\n            // Legacy browser patch\n            var shaderName = \"mix\";\n            var join = defines.toString();\n            var uniforms = [\n                \"world\",\n                \"view\",\n                \"viewProjection\",\n                \"vEyePosition\",\n                \"vLightsType\",\n                \"vDiffuseColor\",\n                \"vSpecularColor\",\n                \"vFogInfos\",\n                \"vFogColor\",\n                \"pointSize\",\n                \"vTextureInfos\",\n                \"mBones\",\n                \"vClipPlane\",\n                \"vClipPlane2\",\n                \"vClipPlane3\",\n                \"vClipPlane4\",\n                \"vClipPlane5\",\n                \"vClipPlane6\",\n                \"textureMatrix\",\n                \"diffuse1Infos\",\n                \"diffuse2Infos\",\n                \"diffuse3Infos\",\n                \"diffuse4Infos\",\n                \"diffuse5Infos\",\n                \"diffuse6Infos\",\n                \"diffuse7Infos\",\n                \"diffuse8Infos\",\n            ];\n            var samplers = [\n                \"mixMap1Sampler\",\n                \"mixMap2Sampler\",\n                \"diffuse1Sampler\",\n                \"diffuse2Sampler\",\n                \"diffuse3Sampler\",\n                \"diffuse4Sampler\",\n                \"diffuse5Sampler\",\n                \"diffuse6Sampler\",\n                \"diffuse7Sampler\",\n                \"diffuse8Sampler\",\n            ];\n            var uniformBuffers = new Array();\n            MaterialHelper.PrepareUniformsAndSamplersList({\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: defines,\n                maxSimultaneousLights: this.maxSimultaneousLights,\n            });\n            subMesh.setEffect(scene.getEngine().createEffect(shaderName, {\n                attributes: attribs,\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: join,\n                fallbacks: fallbacks,\n                onCompiled: this.onCompiled,\n                onError: this.onError,\n                indexParameters: { maxSimultaneousLights: this.maxSimultaneousLights },\n            }, engine), defines, this._materialContext);\n        }\n        if (!subMesh.effect || !subMesh.effect.isReady()) {\n            return false;\n        }\n        defines._renderId = scene.getRenderId();\n        subMesh.effect._wasPreviouslyReady = true;\n        return true;\n    };\n    MixMaterial.prototype.bindForSubMesh = function (world, mesh, subMesh) {\n        var scene = this.getScene();\n        var defines = subMesh.materialDefines;\n        if (!defines) {\n            return;\n        }\n        var effect = subMesh.effect;\n        if (!effect) {\n            return;\n        }\n        this._activeEffect = effect;\n        // Matrices\n        this.bindOnlyWorldMatrix(world);\n        this._activeEffect.setMatrix(\"viewProjection\", scene.getTransformMatrix());\n        // Bones\n        MaterialHelper.BindBonesParameters(mesh, this._activeEffect);\n        if (this._mustRebind(scene, effect)) {\n            // Textures\n            if (this._mixTexture1) {\n                this._activeEffect.setTexture(\"mixMap1Sampler\", this._mixTexture1);\n                this._activeEffect.setFloat2(\"vTextureInfos\", this._mixTexture1.coordinatesIndex, this._mixTexture1.level);\n                this._activeEffect.setMatrix(\"textureMatrix\", this._mixTexture1.getTextureMatrix());\n                if (MaterialFlags.DiffuseTextureEnabled) {\n                    if (this._diffuseTexture1) {\n                        this._activeEffect.setTexture(\"diffuse1Sampler\", this._diffuseTexture1);\n                        this._activeEffect.setFloat2(\"diffuse1Infos\", this._diffuseTexture1.uScale, this._diffuseTexture1.vScale);\n                    }\n                    if (this._diffuseTexture2) {\n                        this._activeEffect.setTexture(\"diffuse2Sampler\", this._diffuseTexture2);\n                        this._activeEffect.setFloat2(\"diffuse2Infos\", this._diffuseTexture2.uScale, this._diffuseTexture2.vScale);\n                    }\n                    if (this._diffuseTexture3) {\n                        this._activeEffect.setTexture(\"diffuse3Sampler\", this._diffuseTexture3);\n                        this._activeEffect.setFloat2(\"diffuse3Infos\", this._diffuseTexture3.uScale, this._diffuseTexture3.vScale);\n                    }\n                    if (this._diffuseTexture4) {\n                        this._activeEffect.setTexture(\"diffuse4Sampler\", this._diffuseTexture4);\n                        this._activeEffect.setFloat2(\"diffuse4Infos\", this._diffuseTexture4.uScale, this._diffuseTexture4.vScale);\n                    }\n                }\n            }\n            if (this._mixTexture2) {\n                this._activeEffect.setTexture(\"mixMap2Sampler\", this._mixTexture2);\n                if (MaterialFlags.DiffuseTextureEnabled) {\n                    if (this._diffuseTexture5) {\n                        this._activeEffect.setTexture(\"diffuse5Sampler\", this._diffuseTexture5);\n                        this._activeEffect.setFloat2(\"diffuse5Infos\", this._diffuseTexture5.uScale, this._diffuseTexture5.vScale);\n                    }\n                    if (this._diffuseTexture6) {\n                        this._activeEffect.setTexture(\"diffuse6Sampler\", this._diffuseTexture6);\n                        this._activeEffect.setFloat2(\"diffuse6Infos\", this._diffuseTexture6.uScale, this._diffuseTexture6.vScale);\n                    }\n                    if (this._diffuseTexture7) {\n                        this._activeEffect.setTexture(\"diffuse7Sampler\", this._diffuseTexture7);\n                        this._activeEffect.setFloat2(\"diffuse7Infos\", this._diffuseTexture7.uScale, this._diffuseTexture7.vScale);\n                    }\n                    if (this._diffuseTexture8) {\n                        this._activeEffect.setTexture(\"diffuse8Sampler\", this._diffuseTexture8);\n                        this._activeEffect.setFloat2(\"diffuse8Infos\", this._diffuseTexture8.uScale, this._diffuseTexture8.vScale);\n                    }\n                }\n            }\n            // Clip plane\n            MaterialHelper.BindClipPlane(this._activeEffect, scene);\n            // Point size\n            if (this.pointsCloud) {\n                this._activeEffect.setFloat(\"pointSize\", this.pointSize);\n            }\n            scene.bindEyePosition(effect);\n        }\n        this._activeEffect.setColor4(\"vDiffuseColor\", this.diffuseColor, this.alpha * mesh.visibility);\n        if (defines.SPECULARTERM) {\n            this._activeEffect.setColor4(\"vSpecularColor\", this.specularColor, this.specularPower);\n        }\n        if (scene.lightsEnabled && !this.disableLighting) {\n            MaterialHelper.BindLights(scene, mesh, this._activeEffect, defines, this.maxSimultaneousLights);\n        }\n        // View\n        if (scene.fogEnabled && mesh.applyFog && scene.fogMode !== Scene.FOGMODE_NONE) {\n            this._activeEffect.setMatrix(\"view\", scene.getViewMatrix());\n        }\n        // Fog\n        MaterialHelper.BindFogParameters(scene, mesh, this._activeEffect);\n        this._afterBind(mesh, this._activeEffect);\n    };\n    MixMaterial.prototype.getAnimatables = function () {\n        var results = [];\n        if (this._mixTexture1 && this._mixTexture1.animations && this._mixTexture1.animations.length > 0) {\n            results.push(this._mixTexture1);\n        }\n        if (this._mixTexture2 && this._mixTexture2.animations && this._mixTexture2.animations.length > 0) {\n            results.push(this._mixTexture2);\n        }\n        return results;\n    };\n    MixMaterial.prototype.getActiveTextures = function () {\n        var activeTextures = _super.prototype.getActiveTextures.call(this);\n        // Mix map 1\n        if (this._mixTexture1) {\n            activeTextures.push(this._mixTexture1);\n        }\n        if (this._diffuseTexture1) {\n            activeTextures.push(this._diffuseTexture1);\n        }\n        if (this._diffuseTexture2) {\n            activeTextures.push(this._diffuseTexture2);\n        }\n        if (this._diffuseTexture3) {\n            activeTextures.push(this._diffuseTexture3);\n        }\n        if (this._diffuseTexture4) {\n            activeTextures.push(this._diffuseTexture4);\n        }\n        // Mix map 2\n        if (this._mixTexture2) {\n            activeTextures.push(this._mixTexture2);\n        }\n        if (this._diffuseTexture5) {\n            activeTextures.push(this._diffuseTexture5);\n        }\n        if (this._diffuseTexture6) {\n            activeTextures.push(this._diffuseTexture6);\n        }\n        if (this._diffuseTexture7) {\n            activeTextures.push(this._diffuseTexture7);\n        }\n        if (this._diffuseTexture8) {\n            activeTextures.push(this._diffuseTexture8);\n        }\n        return activeTextures;\n    };\n    MixMaterial.prototype.hasTexture = function (texture) {\n        if (_super.prototype.hasTexture.call(this, texture)) {\n            return true;\n        }\n        // Mix map 1\n        if (this._mixTexture1 === texture) {\n            return true;\n        }\n        if (this._diffuseTexture1 === texture) {\n            return true;\n        }\n        if (this._diffuseTexture2 === texture) {\n            return true;\n        }\n        if (this._diffuseTexture3 === texture) {\n            return true;\n        }\n        if (this._diffuseTexture4 === texture) {\n            return true;\n        }\n        // Mix map 2\n        if (this._mixTexture2 === texture) {\n            return true;\n        }\n        if (this._diffuseTexture5 === texture) {\n            return true;\n        }\n        if (this._diffuseTexture6 === texture) {\n            return true;\n        }\n        if (this._diffuseTexture7 === texture) {\n            return true;\n        }\n        if (this._diffuseTexture8 === texture) {\n            return true;\n        }\n        return false;\n    };\n    MixMaterial.prototype.dispose = function (forceDisposeEffect) {\n        if (this._mixTexture1) {\n            this._mixTexture1.dispose();\n        }\n        _super.prototype.dispose.call(this, forceDisposeEffect);\n    };\n    MixMaterial.prototype.clone = function (name) {\n        var _this = this;\n        return SerializationHelper.Clone(function () { return new MixMaterial(name, _this.getScene()); }, this);\n    };\n    MixMaterial.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.customType = \"BABYLON.MixMaterial\";\n        return serializationObject;\n    };\n    MixMaterial.prototype.getClassName = function () {\n        return \"MixMaterial\";\n    };\n    // Statics\n    MixMaterial.Parse = function (source, scene, rootUrl) {\n        return SerializationHelper.Parse(function () { return new MixMaterial(source.name, scene); }, source, scene, rootUrl);\n    };\n    __decorate([\n        serializeAsTexture(\"mixTexture1\")\n    ], MixMaterial.prototype, \"_mixTexture1\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], MixMaterial.prototype, \"mixTexture1\", void 0);\n    __decorate([\n        serializeAsTexture(\"mixTexture2\")\n    ], MixMaterial.prototype, \"_mixTexture2\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], MixMaterial.prototype, \"mixTexture2\", void 0);\n    __decorate([\n        serializeAsTexture(\"diffuseTexture1\")\n    ], MixMaterial.prototype, \"_diffuseTexture1\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], MixMaterial.prototype, \"diffuseTexture1\", void 0);\n    __decorate([\n        serializeAsTexture(\"diffuseTexture2\")\n    ], MixMaterial.prototype, \"_diffuseTexture2\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], MixMaterial.prototype, \"diffuseTexture2\", void 0);\n    __decorate([\n        serializeAsTexture(\"diffuseTexture3\")\n    ], MixMaterial.prototype, \"_diffuseTexture3\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], MixMaterial.prototype, \"diffuseTexture3\", void 0);\n    __decorate([\n        serializeAsTexture(\"diffuseTexture4\")\n    ], MixMaterial.prototype, \"_diffuseTexture4\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], MixMaterial.prototype, \"diffuseTexture4\", void 0);\n    __decorate([\n        serializeAsTexture(\"diffuseTexture1\")\n    ], MixMaterial.prototype, \"_diffuseTexture5\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], MixMaterial.prototype, \"diffuseTexture5\", void 0);\n    __decorate([\n        serializeAsTexture(\"diffuseTexture2\")\n    ], MixMaterial.prototype, \"_diffuseTexture6\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], MixMaterial.prototype, \"diffuseTexture6\", void 0);\n    __decorate([\n        serializeAsTexture(\"diffuseTexture3\")\n    ], MixMaterial.prototype, \"_diffuseTexture7\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], MixMaterial.prototype, \"diffuseTexture7\", void 0);\n    __decorate([\n        serializeAsTexture(\"diffuseTexture4\")\n    ], MixMaterial.prototype, \"_diffuseTexture8\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], MixMaterial.prototype, \"diffuseTexture8\", void 0);\n    __decorate([\n        serializeAsColor3()\n    ], MixMaterial.prototype, \"diffuseColor\", void 0);\n    __decorate([\n        serializeAsColor3()\n    ], MixMaterial.prototype, \"specularColor\", void 0);\n    __decorate([\n        serialize()\n    ], MixMaterial.prototype, \"specularPower\", void 0);\n    __decorate([\n        serialize(\"disableLighting\")\n    ], MixMaterial.prototype, \"_disableLighting\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsLightsDirty\")\n    ], MixMaterial.prototype, \"disableLighting\", void 0);\n    __decorate([\n        serialize(\"maxSimultaneousLights\")\n    ], MixMaterial.prototype, \"_maxSimultaneousLights\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsLightsDirty\")\n    ], MixMaterial.prototype, \"maxSimultaneousLights\", void 0);\n    return MixMaterial;\n}(PushMaterial));\nexport { MixMaterial };\nRegisterClass(\"BABYLON.MixMaterial\", MixMaterial);\n//# sourceMappingURL=mixMaterial.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/helperFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightUboDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightsFragmentFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/shadowsFragmentFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/depthPrePass.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/imageProcessingCompatibility.js\";\nvar name = \"normalPixelShader\";\nvar shader = \"precision highp float;\\nuniform vec4 vEyePosition;\\nuniform vec4 vDiffuseColor;\\nvarying vec3 vPositionW;\\n#ifdef NORMAL\\nvarying vec3 vNormalW;\\n#endif\\n#ifdef LIGHTING\\n#include<helperFunctions>\\n#include<__decl__lightFragment>[0]\\n#include<__decl__lightFragment>[1]\\n#include<__decl__lightFragment>[2]\\n#include<__decl__lightFragment>[3]\\n#include<lightsFragmentFunctions>\\n#include<shadowsFragmentFunctions>\\n#endif\\n#ifdef DIFFUSE\\nvarying vec2 vDiffuseUV;\\nuniform sampler2D diffuseSampler;\\nuniform vec2 vDiffuseInfos;\\n#endif\\n#include<clipPlaneFragmentDeclaration>\\n#include<fogFragmentDeclaration>\\n#define CUSTOM_FRAGMENT_DEFINITIONS\\nvoid main(void) {\\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\\n#include<clipPlaneFragment>\\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);\\nvec4 baseColor=vec4(1.,1.,1.,1.);\\nvec3 diffuseColor=vDiffuseColor.rgb;\\nfloat alpha=vDiffuseColor.a;\\n#ifdef DIFFUSE\\nbaseColor=texture2D(diffuseSampler,vDiffuseUV);\\n#ifdef ALPHATEST\\nif (baseColor.a<0.4)\\ndiscard;\\n#endif\\n#include<depthPrePass>\\nbaseColor.rgb*=vDiffuseInfos.y;\\n#endif\\n#ifdef NORMAL\\nbaseColor=mix(baseColor,vec4(vNormalW,1.0),0.5);\\n#endif\\n#ifdef NORMAL\\nvec3 normalW=normalize(vNormalW);\\n#else\\nvec3 normalW=vec3(1.0,1.0,1.0);\\n#endif\\n#ifdef LIGHTING\\nvec3 diffuseBase=vec3(0.,0.,0.);\\nlightingInfo info;\\nfloat shadow=1.;\\nfloat glossiness=0.;\\n#include<lightFragment>[0]\\n#include<lightFragment>[1]\\n#include<lightFragment>[2]\\n#include<lightFragment>[3]\\nvec3 finalDiffuse=clamp(diffuseBase*diffuseColor,0.0,1.0)*baseColor.rgb;\\n#else\\nvec3 finalDiffuse= baseColor.rgb;\\n#endif\\nvec4 color=vec4(finalDiffuse,alpha);\\n#include<fogFragment>\\ngl_FragColor=color;\\n#include<imageProcessingCompatibility>\\n#define CUSTOM_FRAGMENT_MAIN_END\\n}\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var normalPixelShader = { name: name, shader: shader };\n//# sourceMappingURL=normal.fragment.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bonesDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bakedVertexAnimationDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/instancesDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneVertexDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogVertexDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightUboDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/instancesVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bonesVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bakedVertexAnimation.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/shadowsVertex.js\";\nvar name = \"normalVertexShader\";\nvar shader = \"precision highp float;\\nattribute vec3 position;\\n#ifdef NORMAL\\nattribute vec3 normal;\\n#endif\\n#ifdef UV1\\nattribute vec2 uv;\\n#endif\\n#ifdef UV2\\nattribute vec2 uv2;\\n#endif\\n#ifdef VERTEXCOLOR\\nattribute vec4 color;\\n#endif\\n#include<bonesDeclaration>\\n#include<bakedVertexAnimationDeclaration>\\n#include<instancesDeclaration>\\nuniform mat4 view;\\nuniform mat4 viewProjection;\\n#ifdef DIFFUSE\\nvarying vec2 vDiffuseUV;\\nuniform mat4 diffuseMatrix;\\nuniform vec2 vDiffuseInfos;\\n#endif\\n#ifdef POINTSIZE\\nuniform float pointSize;\\n#endif\\nvarying vec3 vPositionW;\\n#ifdef NORMAL\\nvarying vec3 vNormalW;\\n#endif\\n#include<clipPlaneVertexDeclaration>\\n#include<fogVertexDeclaration>\\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\\n#define CUSTOM_VERTEX_DEFINITIONS\\nvoid main(void) {\\n#define CUSTOM_VERTEX_MAIN_BEGIN\\n#include<instancesVertex>\\n#include<bonesVertex>\\n#include<bakedVertexAnimation>\\nvec4 worldPos=finalWorld*vec4(position,1.0);\\ngl_Position=viewProjection*worldPos;\\nvPositionW=vec3(worldPos);\\n#ifdef NORMAL\\nvNormalW=normalize(vec3(finalWorld*vec4(normal,0.0)));\\n#endif\\n#ifndef UV1\\nvec2 uv=vec2(0.,0.);\\n#endif\\n#ifndef UV2\\nvec2 uv2=vec2(0.,0.);\\n#endif\\n#ifdef DIFFUSE\\nif (vDiffuseInfos.x==0.)\\n{\\nvDiffuseUV=vec2(diffuseMatrix*vec4(uv,1.0,0.0));\\n}\\nelse\\n{\\nvDiffuseUV=vec2(diffuseMatrix*vec4(uv2,1.0,0.0));\\n}\\n#endif\\n#include<clipPlaneVertex>\\n#include<fogVertex>\\n#include<shadowsVertex>[0..maxSimultaneousLights]\\n#if defined(POINTSIZE) && !defined(WEBGPU)\\ngl_PointSize=pointSize;\\n#endif\\n#define CUSTOM_VERTEX_MAIN_END\\n}\\n\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var normalVertexShader = { name: name, shader: shader };\n//# sourceMappingURL=normal.vertex.js.map","import { __decorate, __extends } from \"tslib\";\nimport { serializeAsTexture, serialize, expandToProperty, serializeAsColor3, SerializationHelper } from \"@babylonjs/core/Misc/decorators.js\";\nimport { Color3 } from \"@babylonjs/core/Maths/math.color.js\";\nimport { MaterialDefines } from \"@babylonjs/core/Materials/materialDefines.js\";\nimport { MaterialHelper } from \"@babylonjs/core/Materials/materialHelper.js\";\nimport { PushMaterial } from \"@babylonjs/core/Materials/pushMaterial.js\";\nimport { MaterialFlags } from \"@babylonjs/core/Materials/materialFlags.js\";\nimport { VertexBuffer } from \"@babylonjs/core/Buffers/buffer.js\";\nimport { Scene } from \"@babylonjs/core/scene.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport \"./normal.fragment.js\";\nimport \"./normal.vertex.js\";\nimport { EffectFallbacks } from \"@babylonjs/core/Materials/effectFallbacks.js\";\nvar NormalMaterialDefines = /** @class */ (function (_super) {\n    __extends(NormalMaterialDefines, _super);\n    function NormalMaterialDefines() {\n        var _this = _super.call(this) || this;\n        _this.DIFFUSE = false;\n        _this.CLIPPLANE = false;\n        _this.CLIPPLANE2 = false;\n        _this.CLIPPLANE3 = false;\n        _this.CLIPPLANE4 = false;\n        _this.CLIPPLANE5 = false;\n        _this.CLIPPLANE6 = false;\n        _this.ALPHATEST = false;\n        _this.DEPTHPREPASS = false;\n        _this.POINTSIZE = false;\n        _this.FOG = false;\n        _this.LIGHT0 = false;\n        _this.LIGHT1 = false;\n        _this.LIGHT2 = false;\n        _this.LIGHT3 = false;\n        _this.SPOTLIGHT0 = false;\n        _this.SPOTLIGHT1 = false;\n        _this.SPOTLIGHT2 = false;\n        _this.SPOTLIGHT3 = false;\n        _this.HEMILIGHT0 = false;\n        _this.HEMILIGHT1 = false;\n        _this.HEMILIGHT2 = false;\n        _this.HEMILIGHT3 = false;\n        _this.DIRLIGHT0 = false;\n        _this.DIRLIGHT1 = false;\n        _this.DIRLIGHT2 = false;\n        _this.DIRLIGHT3 = false;\n        _this.POINTLIGHT0 = false;\n        _this.POINTLIGHT1 = false;\n        _this.POINTLIGHT2 = false;\n        _this.POINTLIGHT3 = false;\n        _this.SHADOW0 = false;\n        _this.SHADOW1 = false;\n        _this.SHADOW2 = false;\n        _this.SHADOW3 = false;\n        _this.SHADOWS = false;\n        _this.SHADOWESM0 = false;\n        _this.SHADOWESM1 = false;\n        _this.SHADOWESM2 = false;\n        _this.SHADOWESM3 = false;\n        _this.SHADOWPOISSON0 = false;\n        _this.SHADOWPOISSON1 = false;\n        _this.SHADOWPOISSON2 = false;\n        _this.SHADOWPOISSON3 = false;\n        _this.SHADOWPCF0 = false;\n        _this.SHADOWPCF1 = false;\n        _this.SHADOWPCF2 = false;\n        _this.SHADOWPCF3 = false;\n        _this.SHADOWPCSS0 = false;\n        _this.SHADOWPCSS1 = false;\n        _this.SHADOWPCSS2 = false;\n        _this.SHADOWPCSS3 = false;\n        _this.NORMAL = false;\n        _this.UV1 = false;\n        _this.UV2 = false;\n        _this.NUM_BONE_INFLUENCERS = 0;\n        _this.BonesPerMesh = 0;\n        _this.INSTANCES = false;\n        _this.LIGHTING = false;\n        _this.IMAGEPROCESSINGPOSTPROCESS = false;\n        _this.SKIPFINALCOLORCLAMP = false;\n        _this.rebuild();\n        return _this;\n    }\n    return NormalMaterialDefines;\n}(MaterialDefines));\nvar NormalMaterial = /** @class */ (function (_super) {\n    __extends(NormalMaterial, _super);\n    function NormalMaterial(name, scene) {\n        var _this = _super.call(this, name, scene) || this;\n        _this.diffuseColor = new Color3(1, 1, 1);\n        _this._disableLighting = false;\n        _this._maxSimultaneousLights = 4;\n        return _this;\n    }\n    NormalMaterial.prototype.needAlphaBlending = function () {\n        return this.alpha < 1.0;\n    };\n    NormalMaterial.prototype.needAlphaBlendingForMesh = function (mesh) {\n        return this.needAlphaBlending() || mesh.visibility < 1.0;\n    };\n    NormalMaterial.prototype.needAlphaTesting = function () {\n        return false;\n    };\n    NormalMaterial.prototype.getAlphaTestTexture = function () {\n        return null;\n    };\n    // Methods\n    NormalMaterial.prototype.isReadyForSubMesh = function (mesh, subMesh, useInstances) {\n        if (this.isFrozen) {\n            if (subMesh.effect && subMesh.effect._wasPreviouslyReady) {\n                return true;\n            }\n        }\n        if (!subMesh.materialDefines) {\n            subMesh.materialDefines = new NormalMaterialDefines();\n        }\n        var defines = subMesh.materialDefines;\n        var scene = this.getScene();\n        if (this._isReadyForSubMesh(subMesh)) {\n            return true;\n        }\n        var engine = scene.getEngine();\n        // Textures\n        if (defines._areTexturesDirty) {\n            defines._needUVs = false;\n            if (scene.texturesEnabled) {\n                if (this._diffuseTexture && MaterialFlags.DiffuseTextureEnabled) {\n                    if (!this._diffuseTexture.isReady()) {\n                        return false;\n                    }\n                    else {\n                        defines._needUVs = true;\n                        defines.DIFFUSE = true;\n                    }\n                }\n            }\n        }\n        // Misc.\n        MaterialHelper.PrepareDefinesForMisc(mesh, scene, false, this.pointsCloud, this.fogEnabled, this._shouldTurnAlphaTestOn(mesh), defines);\n        // Lights\n        defines._needNormals = true;\n        MaterialHelper.PrepareDefinesForLights(scene, mesh, defines, false, this._maxSimultaneousLights, this._disableLighting);\n        // Values that need to be evaluated on every frame\n        MaterialHelper.PrepareDefinesForFrameBoundValues(scene, engine, defines, useInstances ? true : false);\n        defines.LIGHTING = !this._disableLighting;\n        // Attribs\n        MaterialHelper.PrepareDefinesForAttributes(mesh, defines, true, true);\n        // Get correct effect\n        if (defines.isDirty) {\n            defines.markAsProcessed();\n            scene.resetCachedMaterial();\n            // Fallbacks\n            var fallbacks = new EffectFallbacks();\n            if (defines.FOG) {\n                fallbacks.addFallback(1, \"FOG\");\n            }\n            MaterialHelper.HandleFallbacksForShadows(defines, fallbacks);\n            if (defines.NUM_BONE_INFLUENCERS > 0) {\n                fallbacks.addCPUSkinningFallback(0, mesh);\n            }\n            defines.IMAGEPROCESSINGPOSTPROCESS = scene.imageProcessingConfiguration.applyByPostProcess;\n            //Attributes\n            var attribs = [VertexBuffer.PositionKind];\n            if (defines.NORMAL) {\n                attribs.push(VertexBuffer.NormalKind);\n            }\n            if (defines.UV1) {\n                attribs.push(VertexBuffer.UVKind);\n            }\n            if (defines.UV2) {\n                attribs.push(VertexBuffer.UV2Kind);\n            }\n            MaterialHelper.PrepareAttributesForBones(attribs, mesh, defines, fallbacks);\n            MaterialHelper.PrepareAttributesForInstances(attribs, defines);\n            var shaderName = \"normal\";\n            var join = defines.toString();\n            var uniforms = [\n                \"world\",\n                \"view\",\n                \"viewProjection\",\n                \"vEyePosition\",\n                \"vLightsType\",\n                \"vDiffuseColor\",\n                \"vFogInfos\",\n                \"vFogColor\",\n                \"pointSize\",\n                \"vDiffuseInfos\",\n                \"mBones\",\n                \"vClipPlane\",\n                \"vClipPlane2\",\n                \"vClipPlane3\",\n                \"vClipPlane4\",\n                \"vClipPlane5\",\n                \"vClipPlane6\",\n                \"diffuseMatrix\",\n            ];\n            var samplers = [\"diffuseSampler\"];\n            var uniformBuffers = new Array();\n            MaterialHelper.PrepareUniformsAndSamplersList({\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: defines,\n                maxSimultaneousLights: 4,\n            });\n            subMesh.setEffect(scene.getEngine().createEffect(shaderName, {\n                attributes: attribs,\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: join,\n                fallbacks: fallbacks,\n                onCompiled: this.onCompiled,\n                onError: this.onError,\n                indexParameters: { maxSimultaneousLights: 4 },\n            }, engine), defines, this._materialContext);\n        }\n        if (!subMesh.effect || !subMesh.effect.isReady()) {\n            return false;\n        }\n        defines._renderId = scene.getRenderId();\n        subMesh.effect._wasPreviouslyReady = true;\n        return true;\n    };\n    NormalMaterial.prototype.bindForSubMesh = function (world, mesh, subMesh) {\n        var scene = this.getScene();\n        var defines = subMesh.materialDefines;\n        if (!defines) {\n            return;\n        }\n        var effect = subMesh.effect;\n        if (!effect) {\n            return;\n        }\n        this._activeEffect = effect;\n        // Matrices\n        this.bindOnlyWorldMatrix(world);\n        this._activeEffect.setMatrix(\"viewProjection\", scene.getTransformMatrix());\n        // Bones\n        MaterialHelper.BindBonesParameters(mesh, this._activeEffect);\n        if (this._mustRebind(scene, effect)) {\n            // Textures\n            if (this.diffuseTexture && MaterialFlags.DiffuseTextureEnabled) {\n                this._activeEffect.setTexture(\"diffuseSampler\", this.diffuseTexture);\n                this._activeEffect.setFloat2(\"vDiffuseInfos\", this.diffuseTexture.coordinatesIndex, this.diffuseTexture.level);\n                this._activeEffect.setMatrix(\"diffuseMatrix\", this.diffuseTexture.getTextureMatrix());\n            }\n            // Clip plane\n            MaterialHelper.BindClipPlane(this._activeEffect, scene);\n            // Point size\n            if (this.pointsCloud) {\n                this._activeEffect.setFloat(\"pointSize\", this.pointSize);\n            }\n            scene.bindEyePosition(effect);\n        }\n        this._activeEffect.setColor4(\"vDiffuseColor\", this.diffuseColor, this.alpha * mesh.visibility);\n        // Lights\n        if (scene.lightsEnabled && !this.disableLighting) {\n            MaterialHelper.BindLights(scene, mesh, this._activeEffect, defines);\n        }\n        // View\n        if (scene.fogEnabled && mesh.applyFog && scene.fogMode !== Scene.FOGMODE_NONE) {\n            this._activeEffect.setMatrix(\"view\", scene.getViewMatrix());\n        }\n        // Fog\n        MaterialHelper.BindFogParameters(scene, mesh, this._activeEffect);\n        this._afterBind(mesh, this._activeEffect);\n    };\n    NormalMaterial.prototype.getAnimatables = function () {\n        var results = [];\n        if (this.diffuseTexture && this.diffuseTexture.animations && this.diffuseTexture.animations.length > 0) {\n            results.push(this.diffuseTexture);\n        }\n        return results;\n    };\n    NormalMaterial.prototype.getActiveTextures = function () {\n        var activeTextures = _super.prototype.getActiveTextures.call(this);\n        if (this._diffuseTexture) {\n            activeTextures.push(this._diffuseTexture);\n        }\n        return activeTextures;\n    };\n    NormalMaterial.prototype.hasTexture = function (texture) {\n        if (_super.prototype.hasTexture.call(this, texture)) {\n            return true;\n        }\n        if (this.diffuseTexture === texture) {\n            return true;\n        }\n        return false;\n    };\n    NormalMaterial.prototype.dispose = function (forceDisposeEffect) {\n        if (this.diffuseTexture) {\n            this.diffuseTexture.dispose();\n        }\n        _super.prototype.dispose.call(this, forceDisposeEffect);\n    };\n    NormalMaterial.prototype.clone = function (name) {\n        var _this = this;\n        return SerializationHelper.Clone(function () { return new NormalMaterial(name, _this.getScene()); }, this);\n    };\n    NormalMaterial.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.customType = \"BABYLON.NormalMaterial\";\n        return serializationObject;\n    };\n    NormalMaterial.prototype.getClassName = function () {\n        return \"NormalMaterial\";\n    };\n    // Statics\n    NormalMaterial.Parse = function (source, scene, rootUrl) {\n        return SerializationHelper.Parse(function () { return new NormalMaterial(source.name, scene); }, source, scene, rootUrl);\n    };\n    __decorate([\n        serializeAsTexture(\"diffuseTexture\")\n    ], NormalMaterial.prototype, \"_diffuseTexture\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], NormalMaterial.prototype, \"diffuseTexture\", void 0);\n    __decorate([\n        serializeAsColor3()\n    ], NormalMaterial.prototype, \"diffuseColor\", void 0);\n    __decorate([\n        serialize(\"disableLighting\")\n    ], NormalMaterial.prototype, \"_disableLighting\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsLightsDirty\")\n    ], NormalMaterial.prototype, \"disableLighting\", void 0);\n    __decorate([\n        serialize(\"maxSimultaneousLights\")\n    ], NormalMaterial.prototype, \"_maxSimultaneousLights\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsLightsDirty\")\n    ], NormalMaterial.prototype, \"maxSimultaneousLights\", void 0);\n    return NormalMaterial;\n}(PushMaterial));\nexport { NormalMaterial };\nRegisterClass(\"BABYLON.NormalMaterial\", NormalMaterial);\n//# sourceMappingURL=normalMaterial.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/helperFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightUboDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightsFragmentFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/shadowsFragmentFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/imageProcessingCompatibility.js\";\nvar name = \"shadowOnlyPixelShader\";\nvar shader = \"precision highp float;\\nuniform vec4 vEyePosition;\\nuniform float alpha;\\nuniform vec3 shadowColor;\\nvarying vec3 vPositionW;\\n#ifdef NORMAL\\nvarying vec3 vNormalW;\\n#endif\\n#include<helperFunctions>\\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\\n#include<lightsFragmentFunctions>\\n#include<shadowsFragmentFunctions>\\n#include<clipPlaneFragmentDeclaration>\\n#include<fogFragmentDeclaration>\\n#define CUSTOM_FRAGMENT_DEFINITIONS\\nvoid main(void) {\\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\\n#include<clipPlaneFragment>\\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);\\n#ifdef NORMAL\\nvec3 normalW=normalize(vNormalW);\\n#else\\nvec3 normalW=vec3(1.0,1.0,1.0);\\n#endif\\nvec3 diffuseBase=vec3(0.,0.,0.);\\nlightingInfo info;\\nfloat shadow=1.;\\nfloat glossiness=0.;\\n#include<lightFragment>[0..1]\\nvec4 color=vec4(shadowColor,(1.0-clamp(shadow,0.,1.))*alpha);\\n#include<fogFragment>\\ngl_FragColor=color;\\n#include<imageProcessingCompatibility>\\n#define CUSTOM_FRAGMENT_MAIN_END\\n}\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var shadowOnlyPixelShader = { name: name, shader: shader };\n//# sourceMappingURL=shadowOnly.fragment.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bonesDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bakedVertexAnimationDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/instancesDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneVertexDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogVertexDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightUboDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/instancesVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bonesVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bakedVertexAnimation.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/shadowsVertex.js\";\nvar name = \"shadowOnlyVertexShader\";\nvar shader = \"precision highp float;\\nattribute vec3 position;\\n#ifdef NORMAL\\nattribute vec3 normal;\\n#endif\\n#include<bonesDeclaration>\\n#include<bakedVertexAnimationDeclaration>\\n#include<instancesDeclaration>\\nuniform mat4 view;\\nuniform mat4 viewProjection;\\n#ifdef POINTSIZE\\nuniform float pointSize;\\n#endif\\nvarying vec3 vPositionW;\\n#ifdef NORMAL\\nvarying vec3 vNormalW;\\n#endif\\n#ifdef VERTEXCOLOR\\nvarying vec4 vColor;\\n#endif\\n#include<clipPlaneVertexDeclaration>\\n#include<fogVertexDeclaration>\\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\\n#define CUSTOM_VERTEX_DEFINITIONS\\nvoid main(void) {\\n#define CUSTOM_VERTEX_MAIN_BEGIN\\n#include<instancesVertex>\\n#include<bonesVertex>\\n#include<bakedVertexAnimation>\\nvec4 worldPos=finalWorld*vec4(position,1.0);\\ngl_Position=viewProjection*worldPos;\\nvPositionW=vec3(worldPos);\\n#ifdef NORMAL\\nvNormalW=normalize(vec3(finalWorld*vec4(normal,0.0)));\\n#endif\\n#include<clipPlaneVertex>\\n#include<fogVertex>\\n#include<shadowsVertex>[0..maxSimultaneousLights]\\n#if defined(POINTSIZE) && !defined(WEBGPU)\\ngl_PointSize=pointSize;\\n#endif\\n#define CUSTOM_VERTEX_MAIN_END\\n}\\n\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var shadowOnlyVertexShader = { name: name, shader: shader };\n//# sourceMappingURL=shadowOnly.vertex.js.map","import { __extends } from \"tslib\";\nimport { SerializationHelper } from \"@babylonjs/core/Misc/decorators.js\";\nimport { Color3 } from \"@babylonjs/core/Maths/math.color.js\";\nimport { MaterialDefines } from \"@babylonjs/core/Materials/materialDefines.js\";\nimport { MaterialHelper } from \"@babylonjs/core/Materials/materialHelper.js\";\nimport { PushMaterial } from \"@babylonjs/core/Materials/pushMaterial.js\";\nimport { VertexBuffer } from \"@babylonjs/core/Buffers/buffer.js\";\nimport { Scene } from \"@babylonjs/core/scene.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport \"./shadowOnly.fragment.js\";\nimport \"./shadowOnly.vertex.js\";\nimport { EffectFallbacks } from \"@babylonjs/core/Materials/effectFallbacks.js\";\nvar ShadowOnlyMaterialDefines = /** @class */ (function (_super) {\n    __extends(ShadowOnlyMaterialDefines, _super);\n    function ShadowOnlyMaterialDefines() {\n        var _this = _super.call(this) || this;\n        _this.CLIPPLANE = false;\n        _this.CLIPPLANE2 = false;\n        _this.CLIPPLANE3 = false;\n        _this.CLIPPLANE4 = false;\n        _this.CLIPPLANE5 = false;\n        _this.CLIPPLANE6 = false;\n        _this.POINTSIZE = false;\n        _this.FOG = false;\n        _this.NORMAL = false;\n        _this.NUM_BONE_INFLUENCERS = 0;\n        _this.BonesPerMesh = 0;\n        _this.INSTANCES = false;\n        _this.IMAGEPROCESSINGPOSTPROCESS = false;\n        _this.SKIPFINALCOLORCLAMP = false;\n        _this.rebuild();\n        return _this;\n    }\n    return ShadowOnlyMaterialDefines;\n}(MaterialDefines));\nvar ShadowOnlyMaterial = /** @class */ (function (_super) {\n    __extends(ShadowOnlyMaterial, _super);\n    function ShadowOnlyMaterial(name, scene) {\n        var _this = _super.call(this, name, scene) || this;\n        _this._needAlphaBlending = true;\n        _this.shadowColor = Color3.Black();\n        return _this;\n    }\n    ShadowOnlyMaterial.prototype.needAlphaBlending = function () {\n        return this._needAlphaBlending;\n    };\n    ShadowOnlyMaterial.prototype.needAlphaTesting = function () {\n        return false;\n    };\n    ShadowOnlyMaterial.prototype.getAlphaTestTexture = function () {\n        return null;\n    };\n    Object.defineProperty(ShadowOnlyMaterial.prototype, \"activeLight\", {\n        get: function () {\n            return this._activeLight;\n        },\n        set: function (light) {\n            this._activeLight = light;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ShadowOnlyMaterial.prototype._getFirstShadowLightForMesh = function (mesh) {\n        for (var _i = 0, _a = mesh.lightSources; _i < _a.length; _i++) {\n            var light = _a[_i];\n            if (light.shadowEnabled) {\n                return light;\n            }\n        }\n        return null;\n    };\n    // Methods\n    ShadowOnlyMaterial.prototype.isReadyForSubMesh = function (mesh, subMesh, useInstances) {\n        var _a;\n        if (this.isFrozen) {\n            if (subMesh.effect && subMesh.effect._wasPreviouslyReady) {\n                return true;\n            }\n        }\n        if (!subMesh.materialDefines) {\n            subMesh.materialDefines = new ShadowOnlyMaterialDefines();\n        }\n        var defines = subMesh.materialDefines;\n        var scene = this.getScene();\n        if (this._isReadyForSubMesh(subMesh)) {\n            return true;\n        }\n        var engine = scene.getEngine();\n        // Ensure that active light is the first shadow light\n        if (this._activeLight) {\n            for (var _i = 0, _b = mesh.lightSources; _i < _b.length; _i++) {\n                var light = _b[_i];\n                if (light.shadowEnabled) {\n                    if (this._activeLight === light) {\n                        break; // We are good\n                    }\n                    var lightPosition = mesh.lightSources.indexOf(this._activeLight);\n                    if (lightPosition !== -1) {\n                        mesh.lightSources.splice(lightPosition, 1);\n                        mesh.lightSources.splice(0, 0, this._activeLight);\n                    }\n                    break;\n                }\n            }\n        }\n        MaterialHelper.PrepareDefinesForFrameBoundValues(scene, engine, defines, useInstances ? true : false);\n        MaterialHelper.PrepareDefinesForMisc(mesh, scene, false, this.pointsCloud, this.fogEnabled, this._shouldTurnAlphaTestOn(mesh), defines);\n        defines._needNormals = MaterialHelper.PrepareDefinesForLights(scene, mesh, defines, false, 1);\n        var shadowGenerator = (_a = this._getFirstShadowLightForMesh(mesh)) === null || _a === void 0 ? void 0 : _a.getShadowGenerator();\n        this._needAlphaBlending = true;\n        if (shadowGenerator && shadowGenerator.getClassName && shadowGenerator.getClassName() === \"CascadedShadowGenerator\") {\n            var csg = shadowGenerator;\n            this._needAlphaBlending = !csg.autoCalcDepthBounds;\n        }\n        // Attribs\n        MaterialHelper.PrepareDefinesForAttributes(mesh, defines, false, true);\n        // Get correct effect\n        if (defines.isDirty) {\n            defines.markAsProcessed();\n            scene.resetCachedMaterial();\n            // Fallbacks\n            var fallbacks = new EffectFallbacks();\n            if (defines.FOG) {\n                fallbacks.addFallback(1, \"FOG\");\n            }\n            MaterialHelper.HandleFallbacksForShadows(defines, fallbacks, 1);\n            if (defines.NUM_BONE_INFLUENCERS > 0) {\n                fallbacks.addCPUSkinningFallback(0, mesh);\n            }\n            defines.IMAGEPROCESSINGPOSTPROCESS = scene.imageProcessingConfiguration.applyByPostProcess;\n            //Attributes\n            var attribs = [VertexBuffer.PositionKind];\n            if (defines.NORMAL) {\n                attribs.push(VertexBuffer.NormalKind);\n            }\n            MaterialHelper.PrepareAttributesForBones(attribs, mesh, defines, fallbacks);\n            MaterialHelper.PrepareAttributesForInstances(attribs, defines);\n            var shaderName = \"shadowOnly\";\n            var join = defines.toString();\n            var uniforms = [\n                \"world\",\n                \"view\",\n                \"viewProjection\",\n                \"vEyePosition\",\n                \"vLightsType\",\n                \"vFogInfos\",\n                \"vFogColor\",\n                \"pointSize\",\n                \"alpha\",\n                \"shadowColor\",\n                \"mBones\",\n                \"vClipPlane\",\n                \"vClipPlane2\",\n                \"vClipPlane3\",\n                \"vClipPlane4\",\n                \"vClipPlane5\",\n                \"vClipPlane6\",\n            ];\n            var samplers = new Array();\n            var uniformBuffers = new Array();\n            MaterialHelper.PrepareUniformsAndSamplersList({\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: defines,\n                maxSimultaneousLights: 1,\n            });\n            subMesh.setEffect(scene.getEngine().createEffect(shaderName, {\n                attributes: attribs,\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: join,\n                fallbacks: fallbacks,\n                onCompiled: this.onCompiled,\n                onError: this.onError,\n                indexParameters: { maxSimultaneousLights: 1 },\n            }, engine), defines, this._materialContext);\n        }\n        if (!subMesh.effect || !subMesh.effect.isReady()) {\n            return false;\n        }\n        defines._renderId = scene.getRenderId();\n        subMesh.effect._wasPreviouslyReady = true;\n        return true;\n    };\n    ShadowOnlyMaterial.prototype.bindForSubMesh = function (world, mesh, subMesh) {\n        var scene = this.getScene();\n        var defines = subMesh.materialDefines;\n        if (!defines) {\n            return;\n        }\n        var effect = subMesh.effect;\n        if (!effect) {\n            return;\n        }\n        this._activeEffect = effect;\n        // Matrices\n        this.bindOnlyWorldMatrix(world);\n        this._activeEffect.setMatrix(\"viewProjection\", scene.getTransformMatrix());\n        // Bones\n        MaterialHelper.BindBonesParameters(mesh, this._activeEffect);\n        if (this._mustRebind(scene, effect)) {\n            // Clip plane\n            MaterialHelper.BindClipPlane(this._activeEffect, scene);\n            // Point size\n            if (this.pointsCloud) {\n                this._activeEffect.setFloat(\"pointSize\", this.pointSize);\n            }\n            this._activeEffect.setFloat(\"alpha\", this.alpha);\n            this._activeEffect.setColor3(\"shadowColor\", this.shadowColor);\n            scene.bindEyePosition(effect);\n        }\n        // Lights\n        if (scene.lightsEnabled) {\n            MaterialHelper.BindLights(scene, mesh, this._activeEffect, defines, 1);\n            var light = this._getFirstShadowLightForMesh(mesh);\n            if (light) {\n                // Make sure the uniforms for this light will be rebound for other materials using this light when rendering the current frame.\n                // Indeed, there is an optimization in Light that binds the light uniforms only once per frame for a given light (if using ubo).\n                // Doing this way assumes that all uses of this light are the same, meaning all parameters passed to Light._bindLlight\n                // are the same, notably useSpecular. However, isReadyForSubMesh (see above) is passing false for this parameter, which may not be\n                // the value the other materials may pass.\n                light._renderId = -1;\n            }\n        }\n        // View\n        if ((scene.fogEnabled && mesh.applyFog && scene.fogMode !== Scene.FOGMODE_NONE) || defines[\"SHADOWCSM0\"]) {\n            this._activeEffect.setMatrix(\"view\", scene.getViewMatrix());\n        }\n        // Fog\n        MaterialHelper.BindFogParameters(scene, mesh, this._activeEffect);\n        this._afterBind(mesh, this._activeEffect);\n    };\n    ShadowOnlyMaterial.prototype.clone = function (name) {\n        var _this = this;\n        return SerializationHelper.Clone(function () { return new ShadowOnlyMaterial(name, _this.getScene()); }, this);\n    };\n    ShadowOnlyMaterial.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.customType = \"BABYLON.ShadowOnlyMaterial\";\n        return serializationObject;\n    };\n    ShadowOnlyMaterial.prototype.getClassName = function () {\n        return \"ShadowOnlyMaterial\";\n    };\n    // Statics\n    ShadowOnlyMaterial.Parse = function (source, scene, rootUrl) {\n        return SerializationHelper.Parse(function () { return new ShadowOnlyMaterial(source.name, scene); }, source, scene, rootUrl);\n    };\n    return ShadowOnlyMaterial;\n}(PushMaterial));\nexport { ShadowOnlyMaterial };\nRegisterClass(\"BABYLON.ShadowOnlyMaterial\", ShadowOnlyMaterial);\n//# sourceMappingURL=shadowOnlyMaterial.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/helperFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightUboDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightsFragmentFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/shadowsFragmentFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/depthPrePass.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/imageProcessingCompatibility.js\";\nvar name = \"simplePixelShader\";\nvar shader = \"precision highp float;\\nuniform vec4 vEyePosition;\\nuniform vec4 vDiffuseColor;\\nvarying vec3 vPositionW;\\n#ifdef NORMAL\\nvarying vec3 vNormalW;\\n#endif\\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR)\\nvarying vec4 vColor;\\n#endif\\n#include<helperFunctions>\\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\\n#include<lightsFragmentFunctions>\\n#include<shadowsFragmentFunctions>\\n#ifdef DIFFUSE\\nvarying vec2 vDiffuseUV;\\nuniform sampler2D diffuseSampler;\\nuniform vec2 vDiffuseInfos;\\n#endif\\n#include<clipPlaneFragmentDeclaration>\\n#include<fogFragmentDeclaration>\\n#define CUSTOM_FRAGMENT_DEFINITIONS\\nvoid main(void) {\\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\\n#include<clipPlaneFragment>\\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);\\nvec4 baseColor=vec4(1.,1.,1.,1.);\\nvec3 diffuseColor=vDiffuseColor.rgb;\\nfloat alpha=vDiffuseColor.a;\\n#ifdef DIFFUSE\\nbaseColor=texture2D(diffuseSampler,vDiffuseUV);\\n#ifdef ALPHATEST\\nif (baseColor.a<0.4)\\ndiscard;\\n#endif\\n#include<depthPrePass>\\nbaseColor.rgb*=vDiffuseInfos.y;\\n#endif\\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR)\\nbaseColor.rgb*=vColor.rgb;\\n#endif\\n#ifdef NORMAL\\nvec3 normalW=normalize(vNormalW);\\n#else\\nvec3 normalW=vec3(1.0,1.0,1.0);\\n#endif\\nvec3 diffuseBase=vec3(0.,0.,0.);\\nlightingInfo info;\\nfloat shadow=1.;\\nfloat glossiness=0.;\\n#ifdef SPECULARTERM\\nvec3 specularBase=vec3(0.,0.,0.);\\n#endif \\n#include<lightFragment>[0..maxSimultaneousLights]\\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR)\\nalpha*=vColor.a;\\n#endif\\nvec3 finalDiffuse=clamp(diffuseBase*diffuseColor,0.0,1.0)*baseColor.rgb;\\nvec4 color=vec4(finalDiffuse,alpha);\\n#include<fogFragment>\\ngl_FragColor=color;\\n#include<imageProcessingCompatibility>\\n#define CUSTOM_FRAGMENT_MAIN_END\\n}\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var simplePixelShader = { name: name, shader: shader };\n//# sourceMappingURL=simple.fragment.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bonesDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bakedVertexAnimationDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/instancesDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneVertexDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogVertexDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightUboDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/instancesVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bonesVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bakedVertexAnimation.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/shadowsVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/vertexColorMixing.js\";\nvar name = \"simpleVertexShader\";\nvar shader = \"precision highp float;\\nattribute vec3 position;\\n#ifdef NORMAL\\nattribute vec3 normal;\\n#endif\\n#ifdef UV1\\nattribute vec2 uv;\\n#endif\\n#ifdef UV2\\nattribute vec2 uv2;\\n#endif\\n#ifdef VERTEXCOLOR\\nattribute vec4 color;\\n#endif\\n#include<bonesDeclaration>\\n#include<bakedVertexAnimationDeclaration>\\n#include<instancesDeclaration>\\nuniform mat4 view;\\nuniform mat4 viewProjection;\\n#ifdef DIFFUSE\\nvarying vec2 vDiffuseUV;\\nuniform mat4 diffuseMatrix;\\nuniform vec2 vDiffuseInfos;\\n#endif\\n#ifdef POINTSIZE\\nuniform float pointSize;\\n#endif\\nvarying vec3 vPositionW;\\n#ifdef NORMAL\\nvarying vec3 vNormalW;\\n#endif\\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR)\\nvarying vec4 vColor;\\n#endif\\n#include<clipPlaneVertexDeclaration>\\n#include<fogVertexDeclaration>\\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\\n#define CUSTOM_VERTEX_DEFINITIONS\\nvoid main(void) {\\n#define CUSTOM_VERTEX_MAIN_BEGIN\\n#include<instancesVertex>\\n#include<bonesVertex>\\n#include<bakedVertexAnimation>\\nvec4 worldPos=finalWorld*vec4(position,1.0);\\ngl_Position=viewProjection*worldPos;\\nvPositionW=vec3(worldPos);\\n#ifdef NORMAL\\nvNormalW=normalize(vec3(finalWorld*vec4(normal,0.0)));\\n#endif\\n#ifndef UV1\\nvec2 uv=vec2(0.,0.);\\n#endif\\n#ifndef UV2\\nvec2 uv2=vec2(0.,0.);\\n#endif\\n#ifdef DIFFUSE\\nif (vDiffuseInfos.x==0.)\\n{\\nvDiffuseUV=vec2(diffuseMatrix*vec4(uv,1.0,0.0));\\n}\\nelse\\n{\\nvDiffuseUV=vec2(diffuseMatrix*vec4(uv2,1.0,0.0));\\n}\\n#endif\\n#include<clipPlaneVertex>\\n#include<fogVertex>\\n#include<shadowsVertex>[0..maxSimultaneousLights]\\n#include<vertexColorMixing>\\n#if defined(POINTSIZE) && !defined(WEBGPU)\\ngl_PointSize=pointSize;\\n#endif\\n#define CUSTOM_VERTEX_MAIN_END\\n}\\n\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var simpleVertexShader = { name: name, shader: shader };\n//# sourceMappingURL=simple.vertex.js.map","import { __decorate, __extends } from \"tslib\";\nimport { serializeAsTexture, serialize, expandToProperty, serializeAsColor3, SerializationHelper } from \"@babylonjs/core/Misc/decorators.js\";\nimport { Color3 } from \"@babylonjs/core/Maths/math.color.js\";\nimport { MaterialDefines } from \"@babylonjs/core/Materials/materialDefines.js\";\nimport { MaterialHelper } from \"@babylonjs/core/Materials/materialHelper.js\";\nimport { PushMaterial } from \"@babylonjs/core/Materials/pushMaterial.js\";\nimport { MaterialFlags } from \"@babylonjs/core/Materials/materialFlags.js\";\nimport { VertexBuffer } from \"@babylonjs/core/Buffers/buffer.js\";\nimport { Scene } from \"@babylonjs/core/scene.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport \"./simple.fragment.js\";\nimport \"./simple.vertex.js\";\nimport { EffectFallbacks } from \"@babylonjs/core/Materials/effectFallbacks.js\";\nvar SimpleMaterialDefines = /** @class */ (function (_super) {\n    __extends(SimpleMaterialDefines, _super);\n    function SimpleMaterialDefines() {\n        var _this = _super.call(this) || this;\n        _this.DIFFUSE = false;\n        _this.CLIPPLANE = false;\n        _this.CLIPPLANE2 = false;\n        _this.CLIPPLANE3 = false;\n        _this.CLIPPLANE4 = false;\n        _this.CLIPPLANE5 = false;\n        _this.CLIPPLANE6 = false;\n        _this.ALPHATEST = false;\n        _this.DEPTHPREPASS = false;\n        _this.POINTSIZE = false;\n        _this.FOG = false;\n        _this.NORMAL = false;\n        _this.UV1 = false;\n        _this.UV2 = false;\n        _this.VERTEXCOLOR = false;\n        _this.VERTEXALPHA = false;\n        _this.NUM_BONE_INFLUENCERS = 0;\n        _this.BonesPerMesh = 0;\n        _this.INSTANCES = false;\n        _this.INSTANCESCOLOR = false;\n        _this.IMAGEPROCESSINGPOSTPROCESS = false;\n        _this.SKIPFINALCOLORCLAMP = false;\n        _this.rebuild();\n        return _this;\n    }\n    return SimpleMaterialDefines;\n}(MaterialDefines));\nvar SimpleMaterial = /** @class */ (function (_super) {\n    __extends(SimpleMaterial, _super);\n    function SimpleMaterial(name, scene) {\n        var _this = _super.call(this, name, scene) || this;\n        _this.diffuseColor = new Color3(1, 1, 1);\n        _this._disableLighting = false;\n        _this._maxSimultaneousLights = 4;\n        return _this;\n    }\n    SimpleMaterial.prototype.needAlphaBlending = function () {\n        return this.alpha < 1.0;\n    };\n    SimpleMaterial.prototype.needAlphaTesting = function () {\n        return false;\n    };\n    SimpleMaterial.prototype.getAlphaTestTexture = function () {\n        return null;\n    };\n    // Methods\n    SimpleMaterial.prototype.isReadyForSubMesh = function (mesh, subMesh, useInstances) {\n        if (this.isFrozen) {\n            if (subMesh.effect && subMesh.effect._wasPreviouslyReady) {\n                return true;\n            }\n        }\n        if (!subMesh.materialDefines) {\n            subMesh.materialDefines = new SimpleMaterialDefines();\n        }\n        var defines = subMesh.materialDefines;\n        var scene = this.getScene();\n        if (this._isReadyForSubMesh(subMesh)) {\n            return true;\n        }\n        var engine = scene.getEngine();\n        // Textures\n        if (defines._areTexturesDirty) {\n            defines._needUVs = false;\n            if (scene.texturesEnabled) {\n                if (this._diffuseTexture && MaterialFlags.DiffuseTextureEnabled) {\n                    if (!this._diffuseTexture.isReady()) {\n                        return false;\n                    }\n                    else {\n                        defines._needUVs = true;\n                        defines.DIFFUSE = true;\n                    }\n                }\n            }\n        }\n        // Misc.\n        MaterialHelper.PrepareDefinesForMisc(mesh, scene, false, this.pointsCloud, this.fogEnabled, this._shouldTurnAlphaTestOn(mesh), defines);\n        // Lights\n        defines._needNormals = MaterialHelper.PrepareDefinesForLights(scene, mesh, defines, false, this._maxSimultaneousLights, this._disableLighting);\n        // Values that need to be evaluated on every frame\n        MaterialHelper.PrepareDefinesForFrameBoundValues(scene, engine, defines, useInstances ? true : false);\n        // Attribs\n        MaterialHelper.PrepareDefinesForAttributes(mesh, defines, true, true);\n        // Get correct effect\n        if (defines.isDirty) {\n            defines.markAsProcessed();\n            scene.resetCachedMaterial();\n            // Fallbacks\n            var fallbacks = new EffectFallbacks();\n            if (defines.FOG) {\n                fallbacks.addFallback(1, \"FOG\");\n            }\n            MaterialHelper.HandleFallbacksForShadows(defines, fallbacks, this.maxSimultaneousLights);\n            if (defines.NUM_BONE_INFLUENCERS > 0) {\n                fallbacks.addCPUSkinningFallback(0, mesh);\n            }\n            defines.IMAGEPROCESSINGPOSTPROCESS = scene.imageProcessingConfiguration.applyByPostProcess;\n            //Attributes\n            var attribs = [VertexBuffer.PositionKind];\n            if (defines.NORMAL) {\n                attribs.push(VertexBuffer.NormalKind);\n            }\n            if (defines.UV1) {\n                attribs.push(VertexBuffer.UVKind);\n            }\n            if (defines.UV2) {\n                attribs.push(VertexBuffer.UV2Kind);\n            }\n            if (defines.VERTEXCOLOR) {\n                attribs.push(VertexBuffer.ColorKind);\n            }\n            MaterialHelper.PrepareAttributesForBones(attribs, mesh, defines, fallbacks);\n            MaterialHelper.PrepareAttributesForInstances(attribs, defines);\n            var shaderName = \"simple\";\n            var join = defines.toString();\n            var uniforms = [\n                \"world\",\n                \"view\",\n                \"viewProjection\",\n                \"vEyePosition\",\n                \"vLightsType\",\n                \"vDiffuseColor\",\n                \"vFogInfos\",\n                \"vFogColor\",\n                \"pointSize\",\n                \"vDiffuseInfos\",\n                \"mBones\",\n                \"vClipPlane\",\n                \"vClipPlane2\",\n                \"vClipPlane3\",\n                \"vClipPlane4\",\n                \"vClipPlane5\",\n                \"vClipPlane6\",\n                \"diffuseMatrix\",\n            ];\n            var samplers = [\"diffuseSampler\"];\n            var uniformBuffers = new Array();\n            MaterialHelper.PrepareUniformsAndSamplersList({\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: defines,\n                maxSimultaneousLights: this.maxSimultaneousLights,\n            });\n            subMesh.setEffect(scene.getEngine().createEffect(shaderName, {\n                attributes: attribs,\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: join,\n                fallbacks: fallbacks,\n                onCompiled: this.onCompiled,\n                onError: this.onError,\n                indexParameters: { maxSimultaneousLights: this._maxSimultaneousLights - 1 },\n            }, engine), defines, this._materialContext);\n        }\n        if (!subMesh.effect || !subMesh.effect.isReady()) {\n            return false;\n        }\n        defines._renderId = scene.getRenderId();\n        subMesh.effect._wasPreviouslyReady = true;\n        return true;\n    };\n    SimpleMaterial.prototype.bindForSubMesh = function (world, mesh, subMesh) {\n        var scene = this.getScene();\n        var defines = subMesh.materialDefines;\n        if (!defines) {\n            return;\n        }\n        var effect = subMesh.effect;\n        if (!effect) {\n            return;\n        }\n        this._activeEffect = effect;\n        // Matrices\n        this.bindOnlyWorldMatrix(world);\n        this._activeEffect.setMatrix(\"viewProjection\", scene.getTransformMatrix());\n        // Bones\n        MaterialHelper.BindBonesParameters(mesh, this._activeEffect);\n        if (this._mustRebind(scene, effect)) {\n            // Textures\n            if (this._diffuseTexture && MaterialFlags.DiffuseTextureEnabled) {\n                this._activeEffect.setTexture(\"diffuseSampler\", this._diffuseTexture);\n                this._activeEffect.setFloat2(\"vDiffuseInfos\", this._diffuseTexture.coordinatesIndex, this._diffuseTexture.level);\n                this._activeEffect.setMatrix(\"diffuseMatrix\", this._diffuseTexture.getTextureMatrix());\n            }\n            // Clip plane\n            MaterialHelper.BindClipPlane(this._activeEffect, scene);\n            // Point size\n            if (this.pointsCloud) {\n                this._activeEffect.setFloat(\"pointSize\", this.pointSize);\n            }\n            scene.bindEyePosition(effect);\n        }\n        this._activeEffect.setColor4(\"vDiffuseColor\", this.diffuseColor, this.alpha * mesh.visibility);\n        // Lights\n        if (scene.lightsEnabled && !this.disableLighting) {\n            MaterialHelper.BindLights(scene, mesh, this._activeEffect, defines, this.maxSimultaneousLights);\n        }\n        // View\n        if (scene.fogEnabled && mesh.applyFog && scene.fogMode !== Scene.FOGMODE_NONE) {\n            this._activeEffect.setMatrix(\"view\", scene.getViewMatrix());\n        }\n        // Fog\n        MaterialHelper.BindFogParameters(scene, mesh, this._activeEffect);\n        this._afterBind(mesh, this._activeEffect);\n    };\n    SimpleMaterial.prototype.getAnimatables = function () {\n        var results = [];\n        if (this._diffuseTexture && this._diffuseTexture.animations && this._diffuseTexture.animations.length > 0) {\n            results.push(this._diffuseTexture);\n        }\n        return results;\n    };\n    SimpleMaterial.prototype.getActiveTextures = function () {\n        var activeTextures = _super.prototype.getActiveTextures.call(this);\n        if (this._diffuseTexture) {\n            activeTextures.push(this._diffuseTexture);\n        }\n        return activeTextures;\n    };\n    SimpleMaterial.prototype.hasTexture = function (texture) {\n        if (_super.prototype.hasTexture.call(this, texture)) {\n            return true;\n        }\n        if (this.diffuseTexture === texture) {\n            return true;\n        }\n        return false;\n    };\n    SimpleMaterial.prototype.dispose = function (forceDisposeEffect) {\n        if (this._diffuseTexture) {\n            this._diffuseTexture.dispose();\n        }\n        _super.prototype.dispose.call(this, forceDisposeEffect);\n    };\n    SimpleMaterial.prototype.clone = function (name) {\n        var _this = this;\n        return SerializationHelper.Clone(function () { return new SimpleMaterial(name, _this.getScene()); }, this);\n    };\n    SimpleMaterial.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.customType = \"BABYLON.SimpleMaterial\";\n        return serializationObject;\n    };\n    SimpleMaterial.prototype.getClassName = function () {\n        return \"SimpleMaterial\";\n    };\n    // Statics\n    SimpleMaterial.Parse = function (source, scene, rootUrl) {\n        return SerializationHelper.Parse(function () { return new SimpleMaterial(source.name, scene); }, source, scene, rootUrl);\n    };\n    __decorate([\n        serializeAsTexture(\"diffuseTexture\")\n    ], SimpleMaterial.prototype, \"_diffuseTexture\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], SimpleMaterial.prototype, \"diffuseTexture\", void 0);\n    __decorate([\n        serializeAsColor3(\"diffuse\")\n    ], SimpleMaterial.prototype, \"diffuseColor\", void 0);\n    __decorate([\n        serialize(\"disableLighting\")\n    ], SimpleMaterial.prototype, \"_disableLighting\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsLightsDirty\")\n    ], SimpleMaterial.prototype, \"disableLighting\", void 0);\n    __decorate([\n        serialize(\"maxSimultaneousLights\")\n    ], SimpleMaterial.prototype, \"_maxSimultaneousLights\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsLightsDirty\")\n    ], SimpleMaterial.prototype, \"maxSimultaneousLights\", void 0);\n    return SimpleMaterial;\n}(PushMaterial));\nexport { SimpleMaterial };\nRegisterClass(\"BABYLON.SimpleMaterial\", SimpleMaterial);\n//# sourceMappingURL=simpleMaterial.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/imageProcessingCompatibility.js\";\nvar name = \"skyPixelShader\";\nvar shader = \"precision highp float;\\nvarying vec3 vPositionW;\\n#ifdef VERTEXCOLOR\\nvarying vec4 vColor;\\n#endif\\n#include<clipPlaneFragmentDeclaration>\\nuniform vec3 cameraPosition;\\nuniform vec3 cameraOffset;\\nuniform vec3 up;\\nuniform float luminance;\\nuniform float turbidity;\\nuniform float rayleigh;\\nuniform float mieCoefficient;\\nuniform float mieDirectionalG;\\nuniform vec3 sunPosition;\\n#include<fogFragmentDeclaration>\\nconst float e=2.71828182845904523536028747135266249775724709369995957;\\nconst float pi=3.141592653589793238462643383279502884197169;\\nconst float n=1.0003;\\nconst float N=2.545E25;\\nconst float pn=0.035;\\nconst vec3 lambda=vec3(680E-9,550E-9,450E-9);\\nconst vec3 K=vec3(0.686,0.678,0.666);\\nconst float v=4.0;\\nconst float rayleighZenithLength=8.4E3;\\nconst float mieZenithLength=1.25E3;\\nconst float EE=1000.0;\\nconst float sunAngularDiameterCos=0.999956676946448443553574619906976478926848692873900859324;\\nconst float cutoffAngle=pi/1.95;\\nconst float steepness=1.5;\\nvec3 totalRayleigh(vec3 lambda)\\n{\\nreturn (8.0*pow(pi,3.0)*pow(pow(n,2.0)-1.0,2.0)*(6.0+3.0*pn))/(3.0*N*pow(lambda,vec3(4.0))*(6.0-7.0*pn));\\n}\\nvec3 simplifiedRayleigh()\\n{\\nreturn 0.0005/vec3(94,40,18);\\n}\\nfloat rayleighPhase(float cosTheta)\\n{ \\nreturn (3.0/(16.0*pi))*(1.0+pow(cosTheta,2.0));\\n}\\nvec3 totalMie(vec3 lambda,vec3 K,float T)\\n{\\nfloat c=(0.2*T )*10E-18;\\nreturn 0.434*c*pi*pow((2.0*pi)/lambda,vec3(v-2.0))*K;\\n}\\nfloat hgPhase(float cosTheta,float g)\\n{\\nreturn (1.0/(4.0*pi))*((1.0-pow(g,2.0))/pow(1.0-2.0*g*cosTheta+pow(g,2.0),1.5));\\n}\\nfloat sunIntensity(float zenithAngleCos)\\n{\\nreturn EE*max(0.0,1.0-exp((-(cutoffAngle-acos(zenithAngleCos))/steepness)));\\n}\\nfloat A=0.15;\\nfloat B=0.50;\\nfloat C=0.10;\\nfloat D=0.20;\\nfloat EEE=0.02;\\nfloat F=0.30;\\nfloat W=1000.0;\\nvec3 Uncharted2Tonemap(vec3 x)\\n{\\nreturn ((x*(A*x+C*B)+D*EEE)/(x*(A*x+B)+D*F))-EEE/F;\\n}\\n#define CUSTOM_FRAGMENT_DEFINITIONS\\nvoid main(void) {\\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\\n#include<clipPlaneFragment>\\n/**\\n*--------------------------------------------------------------------------------------------------\\n* Sky Color\\n*--------------------------------------------------------------------------------------------------\\n*/\\nfloat sunfade=1.0-clamp(1.0-exp((sunPosition.y/450000.0)),0.0,1.0);\\nfloat rayleighCoefficient=rayleigh-(1.0*(1.0-sunfade));\\nvec3 sunDirection=normalize(sunPosition);\\nfloat sunE=sunIntensity(dot(sunDirection,up));\\nvec3 betaR=simplifiedRayleigh()*rayleighCoefficient;\\nvec3 betaM=totalMie(lambda,K,turbidity)*mieCoefficient;\\nfloat zenithAngle=acos(max(0.0,dot(up,normalize(vPositionW-cameraPosition+cameraOffset))));\\nfloat sR=rayleighZenithLength/(cos(zenithAngle)+0.15*pow(93.885-((zenithAngle*180.0)/pi),-1.253));\\nfloat sM=mieZenithLength/(cos(zenithAngle)+0.15*pow(93.885-((zenithAngle*180.0)/pi),-1.253));\\nvec3 Fex=exp(-(betaR*sR+betaM*sM));\\nfloat cosTheta=dot(normalize(vPositionW-cameraPosition),sunDirection);\\nfloat rPhase=rayleighPhase(cosTheta*0.5+0.5);\\nvec3 betaRTheta=betaR*rPhase;\\nfloat mPhase=hgPhase(cosTheta,mieDirectionalG);\\nvec3 betaMTheta=betaM*mPhase;\\nvec3 Lin=pow(sunE*((betaRTheta+betaMTheta)/(betaR+betaM))*(1.0-Fex),vec3(1.5));\\nLin*=mix(vec3(1.0),pow(sunE*((betaRTheta+betaMTheta)/(betaR+betaM))*Fex,vec3(1.0/2.0)),clamp(pow(1.0-dot(up,sunDirection),5.0),0.0,1.0));\\nvec3 direction=normalize(vPositionW-cameraPosition);\\nfloat theta=acos(direction.y);\\nfloat phi=atan(direction.z,direction.x);\\nvec2 uv=vec2(phi,theta)/vec2(2.0*pi,pi)+vec2(0.5,0.0);\\nvec3 L0=vec3(0.1)*Fex;\\nfloat sundisk=smoothstep(sunAngularDiameterCos,sunAngularDiameterCos+0.00002,cosTheta);\\nL0+=(sunE*19000.0*Fex)*sundisk;\\nvec3 whiteScale=1.0/Uncharted2Tonemap(vec3(W));\\nvec3 texColor=(Lin+L0);\\ntexColor*=0.04 ;\\ntexColor+=vec3(0.0,0.001,0.0025)*0.3;\\nfloat g_fMaxLuminance=1.0;\\nfloat fLumScaled=0.1/luminance; \\nfloat fLumCompressed=(fLumScaled*(1.0+(fLumScaled/(g_fMaxLuminance*g_fMaxLuminance))))/(1.0+fLumScaled); \\nfloat ExposureBias=fLumCompressed;\\nvec3 curr=Uncharted2Tonemap((log2(2.0/pow(luminance,4.0)))*texColor);\\nvec3 retColor=curr*whiteScale;\\n/**\\n*--------------------------------------------------------------------------------------------------\\n* Sky Color\\n*--------------------------------------------------------------------------------------------------\\n*/\\nfloat alpha=1.0;\\n#ifdef VERTEXCOLOR\\nretColor.rgb*=vColor.rgb;\\n#endif\\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR)\\nalpha*=vColor.a;\\n#endif\\nvec4 color=clamp(vec4(retColor.rgb,alpha),0.0,1.0);\\n#include<fogFragment>\\ngl_FragColor=color;\\n#include<imageProcessingCompatibility>\\n#define CUSTOM_FRAGMENT_MAIN_END\\n}\\n\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var skyPixelShader = { name: name, shader: shader };\n//# sourceMappingURL=sky.fragment.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneVertexDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogVertexDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogVertex.js\";\nvar name = \"skyVertexShader\";\nvar shader = \"precision highp float;\\nattribute vec3 position;\\n#ifdef VERTEXCOLOR\\nattribute vec4 color;\\n#endif\\nuniform mat4 world;\\nuniform mat4 view;\\nuniform mat4 viewProjection;\\n#ifdef POINTSIZE\\nuniform float pointSize;\\n#endif\\nvarying vec3 vPositionW;\\n#ifdef VERTEXCOLOR\\nvarying vec4 vColor;\\n#endif\\n#include<clipPlaneVertexDeclaration>\\n#include<fogVertexDeclaration>\\n#define CUSTOM_VERTEX_DEFINITIONS\\nvoid main(void) {\\n#define CUSTOM_VERTEX_MAIN_BEGIN\\ngl_Position=viewProjection*world*vec4(position,1.0);\\nvec4 worldPos=world*vec4(position,1.0);\\nvPositionW=vec3(worldPos);\\n#include<clipPlaneVertex>\\n#include<fogVertex>\\n#ifdef VERTEXCOLOR\\nvColor=color;\\n#endif\\n#if defined(POINTSIZE) && !defined(WEBGPU)\\ngl_PointSize=pointSize;\\n#endif\\n#define CUSTOM_VERTEX_MAIN_END\\n}\\n\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var skyVertexShader = { name: name, shader: shader };\n//# sourceMappingURL=sky.vertex.js.map","import { __decorate, __extends } from \"tslib\";\nimport { serializeAsVector3, serialize, SerializationHelper } from \"@babylonjs/core/Misc/decorators.js\";\nimport { Vector3, Quaternion } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { MaterialDefines } from \"@babylonjs/core/Materials/materialDefines.js\";\nimport { MaterialHelper } from \"@babylonjs/core/Materials/materialHelper.js\";\nimport { PushMaterial } from \"@babylonjs/core/Materials/pushMaterial.js\";\nimport { VertexBuffer } from \"@babylonjs/core/Buffers/buffer.js\";\nimport { Scene } from \"@babylonjs/core/scene.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport \"./sky.fragment.js\";\nimport \"./sky.vertex.js\";\nimport { EffectFallbacks } from \"@babylonjs/core/Materials/effectFallbacks.js\";\n/** @hidden */\nvar SkyMaterialDefines = /** @class */ (function (_super) {\n    __extends(SkyMaterialDefines, _super);\n    function SkyMaterialDefines() {\n        var _this = _super.call(this) || this;\n        _this.CLIPPLANE = false;\n        _this.CLIPPLANE2 = false;\n        _this.CLIPPLANE3 = false;\n        _this.CLIPPLANE4 = false;\n        _this.CLIPPLANE5 = false;\n        _this.CLIPPLANE6 = false;\n        _this.POINTSIZE = false;\n        _this.FOG = false;\n        _this.VERTEXCOLOR = false;\n        _this.VERTEXALPHA = false;\n        _this.IMAGEPROCESSINGPOSTPROCESS = false;\n        _this.SKIPFINALCOLORCLAMP = false;\n        _this.rebuild();\n        return _this;\n    }\n    return SkyMaterialDefines;\n}(MaterialDefines));\n/**\n * This is the sky material which allows to create dynamic and texture free effects for skyboxes.\n * @see https://doc.babylonjs.com/extensions/sky\n */\nvar SkyMaterial = /** @class */ (function (_super) {\n    __extends(SkyMaterial, _super);\n    /**\n     * Instantiates a new sky material.\n     * This material allows to create dynamic and texture free\n     * effects for skyboxes by taking care of the atmosphere state.\n     * @see https://doc.babylonjs.com/extensions/sky\n     * @param name Define the name of the material in the scene\n     * @param scene Define the scene the material belong to\n     */\n    function SkyMaterial(name, scene) {\n        var _this = _super.call(this, name, scene) || this;\n        /**\n         * Defines the overall luminance of sky in interval ]0, 1[.\n         */\n        _this.luminance = 1.0;\n        /**\n         * Defines the amount (scattering) of haze as opposed to molecules in atmosphere.\n         */\n        _this.turbidity = 10.0;\n        /**\n         * Defines the sky appearance (light intensity).\n         */\n        _this.rayleigh = 2.0;\n        /**\n         * Defines the mieCoefficient in interval [0, 0.1] which affects the property .mieDirectionalG.\n         */\n        _this.mieCoefficient = 0.005;\n        /**\n         * Defines the amount of haze particles following the Mie scattering theory.\n         */\n        _this.mieDirectionalG = 0.8;\n        /**\n         * Defines the distance of the sun according to the active scene camera.\n         */\n        _this.distance = 500;\n        /**\n         * Defines the sun inclination, in interval [-0.5, 0.5]. When the inclination is not 0, the sun is said\n         * \"inclined\".\n         */\n        _this.inclination = 0.49;\n        /**\n         * Defines the solar azimuth in interval [0, 1]. The azimuth is the angle in the horizontal plan between\n         * an object direction and a reference direction.\n         */\n        _this.azimuth = 0.25;\n        /**\n         * Defines the sun position in the sky on (x,y,z). If the property .useSunPosition is set to false, then\n         * the property is overridden by the inclination and the azimuth and can be read at any moment.\n         */\n        _this.sunPosition = new Vector3(0, 100, 0);\n        /**\n         * Defines if the sun position should be computed (inclination and azimuth) according to the given\n         * .sunPosition property.\n         */\n        _this.useSunPosition = false;\n        /**\n         * Defines an offset vector used to get a horizon offset.\n         * @example skyMaterial.cameraOffset.y = camera.globalPosition.y // Set horizon relative to 0 on the Y axis\n         */\n        _this.cameraOffset = Vector3.Zero();\n        /**\n         * Defines the vector the skyMaterial should consider as up. (default is Vector3(0, 1, 0) as returned by Vector3.Up())\n         */\n        _this.up = Vector3.Up();\n        // Private members\n        _this._cameraPosition = Vector3.Zero();\n        _this._skyOrientation = new Quaternion();\n        return _this;\n    }\n    /**\n     * Specifies if the material will require alpha blending\n     * @returns a boolean specifying if alpha blending is needed\n     */\n    SkyMaterial.prototype.needAlphaBlending = function () {\n        return this.alpha < 1.0;\n    };\n    /**\n     * Specifies if this material should be rendered in alpha test mode\n     * @returns false as the sky material doesn't need alpha testing.\n     */\n    SkyMaterial.prototype.needAlphaTesting = function () {\n        return false;\n    };\n    /**\n     * Get the texture used for alpha test purpose.\n     * @returns null as the sky material has no texture.\n     */\n    SkyMaterial.prototype.getAlphaTestTexture = function () {\n        return null;\n    };\n    /**\n     * Get if the submesh is ready to be used and all its information available.\n     * Child classes can use it to update shaders\n     * @param mesh defines the mesh to check\n     * @param subMesh defines which submesh to check\n     * @returns a boolean indicating that the submesh is ready or not\n     */\n    SkyMaterial.prototype.isReadyForSubMesh = function (mesh, subMesh) {\n        if (this.isFrozen) {\n            if (subMesh.effect && subMesh.effect._wasPreviouslyReady) {\n                return true;\n            }\n        }\n        if (!subMesh.materialDefines) {\n            subMesh.materialDefines = new SkyMaterialDefines();\n        }\n        var defines = subMesh.materialDefines;\n        var scene = this.getScene();\n        if (this._isReadyForSubMesh(subMesh)) {\n            return true;\n        }\n        MaterialHelper.PrepareDefinesForMisc(mesh, scene, false, this.pointsCloud, this.fogEnabled, false, defines);\n        // Attribs\n        MaterialHelper.PrepareDefinesForAttributes(mesh, defines, true, false);\n        if (defines.IMAGEPROCESSINGPOSTPROCESS !== scene.imageProcessingConfiguration.applyByPostProcess) {\n            defines.markAsMiscDirty();\n        }\n        // Get correct effect\n        if (defines.isDirty) {\n            defines.markAsProcessed();\n            scene.resetCachedMaterial();\n            // Fallbacks\n            var fallbacks = new EffectFallbacks();\n            if (defines.FOG) {\n                fallbacks.addFallback(1, \"FOG\");\n            }\n            defines.IMAGEPROCESSINGPOSTPROCESS = scene.imageProcessingConfiguration.applyByPostProcess;\n            //Attributes\n            var attribs = [VertexBuffer.PositionKind];\n            if (defines.VERTEXCOLOR) {\n                attribs.push(VertexBuffer.ColorKind);\n            }\n            var shaderName = \"sky\";\n            var join = defines.toString();\n            subMesh.setEffect(scene\n                .getEngine()\n                .createEffect(shaderName, attribs, [\n                \"world\",\n                \"viewProjection\",\n                \"view\",\n                \"vFogInfos\",\n                \"vFogColor\",\n                \"pointSize\",\n                \"vClipPlane\",\n                \"vClipPlane2\",\n                \"vClipPlane3\",\n                \"vClipPlane4\",\n                \"vClipPlane5\",\n                \"vClipPlane6\",\n                \"luminance\",\n                \"turbidity\",\n                \"rayleigh\",\n                \"mieCoefficient\",\n                \"mieDirectionalG\",\n                \"sunPosition\",\n                \"cameraPosition\",\n                \"cameraOffset\",\n                \"up\",\n            ], [], join, fallbacks, this.onCompiled, this.onError), defines, this._materialContext);\n        }\n        if (!subMesh.effect || !subMesh.effect.isReady()) {\n            return false;\n        }\n        defines._renderId = scene.getRenderId();\n        subMesh.effect._wasPreviouslyReady = true;\n        return true;\n    };\n    /**\n     * Binds the submesh to this material by preparing the effect and shader to draw\n     * @param world defines the world transformation matrix\n     * @param mesh defines the mesh containing the submesh\n     * @param subMesh defines the submesh to bind the material to\n     */\n    SkyMaterial.prototype.bindForSubMesh = function (world, mesh, subMesh) {\n        var scene = this.getScene();\n        var defines = subMesh.materialDefines;\n        if (!defines) {\n            return;\n        }\n        var effect = subMesh.effect;\n        if (!effect) {\n            return;\n        }\n        this._activeEffect = effect;\n        // Matrices\n        this.bindOnlyWorldMatrix(world);\n        this._activeEffect.setMatrix(\"viewProjection\", scene.getTransformMatrix());\n        if (this._mustRebind(scene, effect)) {\n            MaterialHelper.BindClipPlane(this._activeEffect, scene);\n            // Point size\n            if (this.pointsCloud) {\n                this._activeEffect.setFloat(\"pointSize\", this.pointSize);\n            }\n        }\n        // View\n        if (scene.fogEnabled && mesh.applyFog && scene.fogMode !== Scene.FOGMODE_NONE) {\n            this._activeEffect.setMatrix(\"view\", scene.getViewMatrix());\n        }\n        // Fog\n        MaterialHelper.BindFogParameters(scene, mesh, this._activeEffect);\n        // Sky\n        var camera = scene.activeCamera;\n        if (camera) {\n            var cameraWorldMatrix = camera.getWorldMatrix();\n            this._cameraPosition.x = cameraWorldMatrix.m[12];\n            this._cameraPosition.y = cameraWorldMatrix.m[13];\n            this._cameraPosition.z = cameraWorldMatrix.m[14];\n            this._activeEffect.setVector3(\"cameraPosition\", this._cameraPosition);\n        }\n        this._activeEffect.setVector3(\"cameraOffset\", this.cameraOffset);\n        this._activeEffect.setVector3(\"up\", this.up);\n        if (this.luminance > 0) {\n            this._activeEffect.setFloat(\"luminance\", this.luminance);\n        }\n        this._activeEffect.setFloat(\"turbidity\", this.turbidity);\n        this._activeEffect.setFloat(\"rayleigh\", this.rayleigh);\n        this._activeEffect.setFloat(\"mieCoefficient\", this.mieCoefficient);\n        this._activeEffect.setFloat(\"mieDirectionalG\", this.mieDirectionalG);\n        if (!this.useSunPosition) {\n            var theta = Math.PI * (this.inclination - 0.5);\n            var phi = 2 * Math.PI * (this.azimuth - 0.5);\n            this.sunPosition.x = this.distance * Math.cos(phi) * Math.cos(theta);\n            this.sunPosition.y = this.distance * Math.sin(-theta);\n            this.sunPosition.z = this.distance * Math.sin(phi) * Math.cos(theta);\n            Quaternion.FromUnitVectorsToRef(Vector3.UpReadOnly, this.up, this._skyOrientation);\n            this.sunPosition.rotateByQuaternionToRef(this._skyOrientation, this.sunPosition);\n        }\n        this._activeEffect.setVector3(\"sunPosition\", this.sunPosition);\n        this._afterBind(mesh, this._activeEffect);\n    };\n    /**\n     * Get the list of animatables in the material.\n     * @returns the list of animatables object used in the material\n     */\n    SkyMaterial.prototype.getAnimatables = function () {\n        return [];\n    };\n    /**\n     * Disposes the material\n     * @param forceDisposeEffect specifies if effects should be forcefully disposed\n     */\n    SkyMaterial.prototype.dispose = function (forceDisposeEffect) {\n        _super.prototype.dispose.call(this, forceDisposeEffect);\n    };\n    /**\n     * Makes a duplicate of the material, and gives it a new name\n     * @param name defines the new name for the duplicated material\n     * @returns the cloned material\n     */\n    SkyMaterial.prototype.clone = function (name) {\n        var _this = this;\n        return SerializationHelper.Clone(function () { return new SkyMaterial(name, _this.getScene()); }, this);\n    };\n    /**\n     * Serializes this material in a JSON representation\n     * @returns the serialized material object\n     */\n    SkyMaterial.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.customType = \"BABYLON.SkyMaterial\";\n        return serializationObject;\n    };\n    /**\n     * Gets the current class name of the material e.g. \"SkyMaterial\"\n     * Mainly use in serialization.\n     * @returns the class name\n     */\n    SkyMaterial.prototype.getClassName = function () {\n        return \"SkyMaterial\";\n    };\n    /**\n     * Creates a sky material from parsed material data\n     * @param source defines the JSON representation of the material\n     * @param scene defines the hosting scene\n     * @param rootUrl defines the root URL to use to load textures and relative dependencies\n     * @returns a new sky material\n     */\n    SkyMaterial.Parse = function (source, scene, rootUrl) {\n        return SerializationHelper.Parse(function () { return new SkyMaterial(source.name, scene); }, source, scene, rootUrl);\n    };\n    __decorate([\n        serialize()\n    ], SkyMaterial.prototype, \"luminance\", void 0);\n    __decorate([\n        serialize()\n    ], SkyMaterial.prototype, \"turbidity\", void 0);\n    __decorate([\n        serialize()\n    ], SkyMaterial.prototype, \"rayleigh\", void 0);\n    __decorate([\n        serialize()\n    ], SkyMaterial.prototype, \"mieCoefficient\", void 0);\n    __decorate([\n        serialize()\n    ], SkyMaterial.prototype, \"mieDirectionalG\", void 0);\n    __decorate([\n        serialize()\n    ], SkyMaterial.prototype, \"distance\", void 0);\n    __decorate([\n        serialize()\n    ], SkyMaterial.prototype, \"inclination\", void 0);\n    __decorate([\n        serialize()\n    ], SkyMaterial.prototype, \"azimuth\", void 0);\n    __decorate([\n        serializeAsVector3()\n    ], SkyMaterial.prototype, \"sunPosition\", void 0);\n    __decorate([\n        serialize()\n    ], SkyMaterial.prototype, \"useSunPosition\", void 0);\n    __decorate([\n        serializeAsVector3()\n    ], SkyMaterial.prototype, \"cameraOffset\", void 0);\n    __decorate([\n        serializeAsVector3()\n    ], SkyMaterial.prototype, \"up\", void 0);\n    return SkyMaterial;\n}(PushMaterial));\nexport { SkyMaterial };\nRegisterClass(\"BABYLON.SkyMaterial\", SkyMaterial);\n//# sourceMappingURL=skyMaterial.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/helperFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightUboDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightsFragmentFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/shadowsFragmentFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/depthPrePass.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/imageProcessingCompatibility.js\";\nvar name = \"terrainPixelShader\";\nvar shader = \"precision highp float;\\nuniform vec4 vEyePosition;\\nuniform vec4 vDiffuseColor;\\n#ifdef SPECULARTERM\\nuniform vec4 vSpecularColor;\\n#endif\\nvarying vec3 vPositionW;\\n#ifdef NORMAL\\nvarying vec3 vNormalW;\\n#endif\\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR)\\nvarying vec4 vColor;\\n#endif\\n#include<helperFunctions>\\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\\n#ifdef DIFFUSE\\nvarying vec2 vTextureUV;\\nuniform sampler2D textureSampler;\\nuniform vec2 vTextureInfos;\\nuniform sampler2D diffuse1Sampler;\\nuniform sampler2D diffuse2Sampler;\\nuniform sampler2D diffuse3Sampler;\\nuniform vec2 diffuse1Infos;\\nuniform vec2 diffuse2Infos;\\nuniform vec2 diffuse3Infos;\\n#endif\\n#ifdef BUMP\\nuniform sampler2D bump1Sampler;\\nuniform sampler2D bump2Sampler;\\nuniform sampler2D bump3Sampler;\\n#endif\\n#include<lightsFragmentFunctions>\\n#include<shadowsFragmentFunctions>\\n#include<clipPlaneFragmentDeclaration>\\n#include<fogFragmentDeclaration>\\n#ifdef BUMP\\n#extension GL_OES_standard_derivatives : enable\\nmat3 cotangent_frame(vec3 normal,vec3 p,vec2 uv)\\n{\\nvec3 dp1=dFdx(p);\\nvec3 dp2=dFdy(p);\\nvec2 duv1=dFdx(uv);\\nvec2 duv2=dFdy(uv);\\nvec3 dp2perp=cross(dp2,normal);\\nvec3 dp1perp=cross(normal,dp1);\\nvec3 tangent=dp2perp*duv1.x+dp1perp*duv2.x;\\nvec3 binormal=dp2perp*duv1.y+dp1perp*duv2.y;\\nfloat invmax=inversesqrt(max(dot(tangent,tangent),dot(binormal,binormal)));\\nreturn mat3(tangent*invmax,binormal*invmax,normal);\\n}\\nvec3 perturbNormal(vec3 viewDir,vec3 mixColor)\\n{\\nvec3 bump1Color=texture2D(bump1Sampler,vTextureUV*diffuse1Infos).xyz;\\nvec3 bump2Color=texture2D(bump2Sampler,vTextureUV*diffuse2Infos).xyz;\\nvec3 bump3Color=texture2D(bump3Sampler,vTextureUV*diffuse3Infos).xyz;\\nbump1Color.rgb*=mixColor.r;\\nbump2Color.rgb=mix(bump1Color.rgb,bump2Color.rgb,mixColor.g);\\nvec3 map=mix(bump2Color.rgb,bump3Color.rgb,mixColor.b);\\nmap=map*255./127.-128./127.;\\nmat3 TBN=cotangent_frame(vNormalW*vTextureInfos.y,-viewDir,vTextureUV);\\nreturn normalize(TBN*map);\\n}\\n#endif\\n#define CUSTOM_FRAGMENT_DEFINITIONS\\nvoid main(void) {\\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\\n#include<clipPlaneFragment>\\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);\\nvec4 baseColor=vec4(1.,1.,1.,1.);\\nvec3 diffuseColor=vDiffuseColor.rgb;\\n#ifdef SPECULARTERM\\nfloat glossiness=vSpecularColor.a;\\nvec3 specularColor=vSpecularColor.rgb;\\n#else\\nfloat glossiness=0.;\\n#endif\\nfloat alpha=vDiffuseColor.a;\\n#ifdef NORMAL\\nvec3 normalW=normalize(vNormalW);\\n#else\\nvec3 normalW=vec3(1.0,1.0,1.0);\\n#endif\\n#ifdef DIFFUSE\\nbaseColor=texture2D(textureSampler,vTextureUV);\\n#if defined(BUMP) && defined(DIFFUSE)\\nnormalW=perturbNormal(viewDirectionW,baseColor.rgb);\\n#endif\\n#ifdef ALPHATEST\\nif (baseColor.a<0.4)\\ndiscard;\\n#endif\\n#include<depthPrePass>\\nbaseColor.rgb*=vTextureInfos.y;\\nvec4 diffuse1Color=texture2D(diffuse1Sampler,vTextureUV*diffuse1Infos);\\nvec4 diffuse2Color=texture2D(diffuse2Sampler,vTextureUV*diffuse2Infos);\\nvec4 diffuse3Color=texture2D(diffuse3Sampler,vTextureUV*diffuse3Infos);\\ndiffuse1Color.rgb*=baseColor.r;\\ndiffuse2Color.rgb=mix(diffuse1Color.rgb,diffuse2Color.rgb,baseColor.g);\\nbaseColor.rgb=mix(diffuse2Color.rgb,diffuse3Color.rgb,baseColor.b);\\n#endif\\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR)\\nbaseColor.rgb*=vColor.rgb;\\n#endif\\nvec3 diffuseBase=vec3(0.,0.,0.);\\nlightingInfo info;\\nfloat shadow=1.;\\n#ifdef SPECULARTERM\\nvec3 specularBase=vec3(0.,0.,0.);\\n#endif\\n#include<lightFragment>[0..maxSimultaneousLights]\\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR)\\nalpha*=vColor.a;\\n#endif\\n#ifdef SPECULARTERM\\nvec3 finalSpecular=specularBase*specularColor;\\n#else\\nvec3 finalSpecular=vec3(0.0);\\n#endif\\nvec3 finalDiffuse=clamp(diffuseBase*diffuseColor*baseColor.rgb,0.0,1.0);\\nvec4 color=vec4(finalDiffuse+finalSpecular,alpha);\\n#include<fogFragment>\\ngl_FragColor=color;\\n#include<imageProcessingCompatibility>\\n#define CUSTOM_FRAGMENT_MAIN_END\\n}\\n\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var terrainPixelShader = { name: name, shader: shader };\n//# sourceMappingURL=terrain.fragment.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bonesDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bakedVertexAnimationDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/instancesDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneVertexDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogVertexDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightUboDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/instancesVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bonesVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bakedVertexAnimation.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/shadowsVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/vertexColorMixing.js\";\nvar name = \"terrainVertexShader\";\nvar shader = \"precision highp float;attribute vec3 position;\\n#ifdef NORMAL\\nattribute vec3 normal;\\n#endif\\n#ifdef UV1\\nattribute vec2 uv;\\n#endif\\n#ifdef UV2\\nattribute vec2 uv2;\\n#endif\\n#ifdef VERTEXCOLOR\\nattribute vec4 color;\\n#endif\\n#include<bonesDeclaration>\\n#include<bakedVertexAnimationDeclaration>\\n#include<instancesDeclaration>\\nuniform mat4 view;uniform mat4 viewProjection;\\n#ifdef DIFFUSE\\nvarying vec2 vTextureUV;uniform mat4 textureMatrix;uniform vec2 vTextureInfos;\\n#endif\\n#ifdef POINTSIZE\\nuniform float pointSize;\\n#endif\\nvarying vec3 vPositionW;\\n#ifdef NORMAL\\nvarying vec3 vNormalW;\\n#endif\\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR)\\nvarying vec4 vColor;\\n#endif\\n#include<clipPlaneVertexDeclaration>\\n#include<fogVertexDeclaration>\\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\\n#define CUSTOM_VERTEX_DEFINITIONS\\nvoid main(void) {\\n#define CUSTOM_VERTEX_MAIN_BEGIN\\n#include<instancesVertex>\\n#include<bonesVertex>\\n#include<bakedVertexAnimation>\\nvec4 worldPos=finalWorld*vec4(position,1.0);gl_Position=viewProjection*worldPos;vPositionW=vec3(worldPos);\\n#ifdef NORMAL\\nvNormalW=normalize(vec3(finalWorld*vec4(normal,0.0)));\\n#endif\\n#ifndef UV1\\nvec2 uv=vec2(0.,0.);\\n#endif\\n#ifndef UV2\\nvec2 uv2=vec2(0.,0.);\\n#endif\\n#ifdef DIFFUSE\\nif (vTextureInfos.x==0.)\\n{vTextureUV=vec2(textureMatrix*vec4(uv,1.0,0.0));}\\nelse\\n{vTextureUV=vec2(textureMatrix*vec4(uv2,1.0,0.0));}\\n#endif\\n#include<clipPlaneVertex>\\n#include<fogVertex>\\n#include<shadowsVertex>[0..maxSimultaneousLights]\\n#include<vertexColorMixing>\\n#if defined(POINTSIZE) && !defined(WEBGPU)\\ngl_PointSize=pointSize;\\n#endif\\n#define CUSTOM_VERTEX_MAIN_END\\n}\\n\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var terrainVertexShader = { name: name, shader: shader };\n//# sourceMappingURL=terrain.vertex.js.map","import { __decorate, __extends } from \"tslib\";\nimport { serializeAsTexture, serialize, expandToProperty, serializeAsColor3, SerializationHelper } from \"@babylonjs/core/Misc/decorators.js\";\nimport { Color3 } from \"@babylonjs/core/Maths/math.color.js\";\nimport { MaterialDefines } from \"@babylonjs/core/Materials/materialDefines.js\";\nimport { MaterialHelper } from \"@babylonjs/core/Materials/materialHelper.js\";\nimport { PushMaterial } from \"@babylonjs/core/Materials/pushMaterial.js\";\nimport { MaterialFlags } from \"@babylonjs/core/Materials/materialFlags.js\";\nimport { VertexBuffer } from \"@babylonjs/core/Buffers/buffer.js\";\nimport { Scene } from \"@babylonjs/core/scene.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport \"./terrain.fragment.js\";\nimport \"./terrain.vertex.js\";\nimport { EffectFallbacks } from \"@babylonjs/core/Materials/effectFallbacks.js\";\nvar TerrainMaterialDefines = /** @class */ (function (_super) {\n    __extends(TerrainMaterialDefines, _super);\n    function TerrainMaterialDefines() {\n        var _this = _super.call(this) || this;\n        _this.DIFFUSE = false;\n        _this.BUMP = false;\n        _this.CLIPPLANE = false;\n        _this.CLIPPLANE2 = false;\n        _this.CLIPPLANE3 = false;\n        _this.CLIPPLANE4 = false;\n        _this.CLIPPLANE5 = false;\n        _this.CLIPPLANE6 = false;\n        _this.ALPHATEST = false;\n        _this.DEPTHPREPASS = false;\n        _this.POINTSIZE = false;\n        _this.FOG = false;\n        _this.SPECULARTERM = false;\n        _this.NORMAL = false;\n        _this.UV1 = false;\n        _this.UV2 = false;\n        _this.VERTEXCOLOR = false;\n        _this.VERTEXALPHA = false;\n        _this.NUM_BONE_INFLUENCERS = 0;\n        _this.BonesPerMesh = 0;\n        _this.INSTANCES = false;\n        _this.INSTANCESCOLOR = false;\n        _this.IMAGEPROCESSINGPOSTPROCESS = false;\n        _this.SKIPFINALCOLORCLAMP = false;\n        _this.rebuild();\n        return _this;\n    }\n    return TerrainMaterialDefines;\n}(MaterialDefines));\nvar TerrainMaterial = /** @class */ (function (_super) {\n    __extends(TerrainMaterial, _super);\n    function TerrainMaterial(name, scene) {\n        var _this = _super.call(this, name, scene) || this;\n        _this.diffuseColor = new Color3(1, 1, 1);\n        _this.specularColor = new Color3(0, 0, 0);\n        _this.specularPower = 64;\n        _this._disableLighting = false;\n        _this._maxSimultaneousLights = 4;\n        return _this;\n    }\n    TerrainMaterial.prototype.needAlphaBlending = function () {\n        return this.alpha < 1.0;\n    };\n    TerrainMaterial.prototype.needAlphaTesting = function () {\n        return false;\n    };\n    TerrainMaterial.prototype.getAlphaTestTexture = function () {\n        return null;\n    };\n    // Methods\n    TerrainMaterial.prototype.isReadyForSubMesh = function (mesh, subMesh, useInstances) {\n        if (this.isFrozen) {\n            if (subMesh.effect && subMesh.effect._wasPreviouslyReady) {\n                return true;\n            }\n        }\n        if (!subMesh.materialDefines) {\n            subMesh.materialDefines = new TerrainMaterialDefines();\n        }\n        var defines = subMesh.materialDefines;\n        var scene = this.getScene();\n        if (this._isReadyForSubMesh(subMesh)) {\n            return true;\n        }\n        var engine = scene.getEngine();\n        // Textures\n        if (scene.texturesEnabled) {\n            if (!this.mixTexture || !this.mixTexture.isReady()) {\n                return false;\n            }\n            defines._needUVs = true;\n            if (MaterialFlags.DiffuseTextureEnabled) {\n                if (!this.diffuseTexture1 || !this.diffuseTexture1.isReady()) {\n                    return false;\n                }\n                if (!this.diffuseTexture2 || !this.diffuseTexture2.isReady()) {\n                    return false;\n                }\n                if (!this.diffuseTexture3 || !this.diffuseTexture3.isReady()) {\n                    return false;\n                }\n                defines.DIFFUSE = true;\n            }\n            if (this.bumpTexture1 && this.bumpTexture2 && this.bumpTexture3 && MaterialFlags.BumpTextureEnabled) {\n                if (!this.bumpTexture1.isReady()) {\n                    return false;\n                }\n                if (!this.bumpTexture2.isReady()) {\n                    return false;\n                }\n                if (!this.bumpTexture3.isReady()) {\n                    return false;\n                }\n                defines._needNormals = true;\n                defines.BUMP = true;\n            }\n        }\n        // Misc.\n        MaterialHelper.PrepareDefinesForMisc(mesh, scene, false, this.pointsCloud, this.fogEnabled, this._shouldTurnAlphaTestOn(mesh), defines);\n        // Lights\n        defines._needNormals = MaterialHelper.PrepareDefinesForLights(scene, mesh, defines, false, this._maxSimultaneousLights, this._disableLighting);\n        // Values that need to be evaluated on every frame\n        MaterialHelper.PrepareDefinesForFrameBoundValues(scene, engine, defines, useInstances ? true : false);\n        // Attribs\n        MaterialHelper.PrepareDefinesForAttributes(mesh, defines, true, true);\n        // Get correct effect\n        if (defines.isDirty) {\n            defines.markAsProcessed();\n            scene.resetCachedMaterial();\n            // Fallbacks\n            var fallbacks = new EffectFallbacks();\n            if (defines.FOG) {\n                fallbacks.addFallback(1, \"FOG\");\n            }\n            MaterialHelper.HandleFallbacksForShadows(defines, fallbacks, this.maxSimultaneousLights);\n            if (defines.NUM_BONE_INFLUENCERS > 0) {\n                fallbacks.addCPUSkinningFallback(0, mesh);\n            }\n            defines.IMAGEPROCESSINGPOSTPROCESS = scene.imageProcessingConfiguration.applyByPostProcess;\n            //Attributes\n            var attribs = [VertexBuffer.PositionKind];\n            if (defines.NORMAL) {\n                attribs.push(VertexBuffer.NormalKind);\n            }\n            if (defines.UV1) {\n                attribs.push(VertexBuffer.UVKind);\n            }\n            if (defines.UV2) {\n                attribs.push(VertexBuffer.UV2Kind);\n            }\n            if (defines.VERTEXCOLOR) {\n                attribs.push(VertexBuffer.ColorKind);\n            }\n            MaterialHelper.PrepareAttributesForBones(attribs, mesh, defines, fallbacks);\n            MaterialHelper.PrepareAttributesForInstances(attribs, defines);\n            // Legacy browser patch\n            var shaderName = \"terrain\";\n            var join = defines.toString();\n            var uniforms = [\n                \"world\",\n                \"view\",\n                \"viewProjection\",\n                \"vEyePosition\",\n                \"vLightsType\",\n                \"vDiffuseColor\",\n                \"vSpecularColor\",\n                \"vFogInfos\",\n                \"vFogColor\",\n                \"pointSize\",\n                \"vTextureInfos\",\n                \"mBones\",\n                \"vClipPlane\",\n                \"vClipPlane2\",\n                \"vClipPlane3\",\n                \"vClipPlane4\",\n                \"vClipPlane5\",\n                \"vClipPlane6\",\n                \"textureMatrix\",\n                \"diffuse1Infos\",\n                \"diffuse2Infos\",\n                \"diffuse3Infos\",\n            ];\n            var samplers = [\"textureSampler\", \"diffuse1Sampler\", \"diffuse2Sampler\", \"diffuse3Sampler\", \"bump1Sampler\", \"bump2Sampler\", \"bump3Sampler\"];\n            var uniformBuffers = new Array();\n            MaterialHelper.PrepareUniformsAndSamplersList({\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: defines,\n                maxSimultaneousLights: this.maxSimultaneousLights,\n            });\n            subMesh.setEffect(scene.getEngine().createEffect(shaderName, {\n                attributes: attribs,\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: join,\n                fallbacks: fallbacks,\n                onCompiled: this.onCompiled,\n                onError: this.onError,\n                indexParameters: { maxSimultaneousLights: this.maxSimultaneousLights },\n            }, engine), defines, this._materialContext);\n        }\n        if (!subMesh.effect || !subMesh.effect.isReady()) {\n            return false;\n        }\n        defines._renderId = scene.getRenderId();\n        subMesh.effect._wasPreviouslyReady = true;\n        return true;\n    };\n    TerrainMaterial.prototype.bindForSubMesh = function (world, mesh, subMesh) {\n        var scene = this.getScene();\n        var defines = subMesh.materialDefines;\n        if (!defines) {\n            return;\n        }\n        var effect = subMesh.effect;\n        if (!effect) {\n            return;\n        }\n        this._activeEffect = effect;\n        // Matrices\n        this.bindOnlyWorldMatrix(world);\n        this._activeEffect.setMatrix(\"viewProjection\", scene.getTransformMatrix());\n        // Bones\n        MaterialHelper.BindBonesParameters(mesh, this._activeEffect);\n        if (this._mustRebind(scene, effect)) {\n            // Textures\n            if (this.mixTexture) {\n                this._activeEffect.setTexture(\"textureSampler\", this._mixTexture);\n                this._activeEffect.setFloat2(\"vTextureInfos\", this._mixTexture.coordinatesIndex, this._mixTexture.level);\n                this._activeEffect.setMatrix(\"textureMatrix\", this._mixTexture.getTextureMatrix());\n                if (MaterialFlags.DiffuseTextureEnabled) {\n                    if (this._diffuseTexture1) {\n                        this._activeEffect.setTexture(\"diffuse1Sampler\", this._diffuseTexture1);\n                        this._activeEffect.setFloat2(\"diffuse1Infos\", this._diffuseTexture1.uScale, this._diffuseTexture1.vScale);\n                    }\n                    if (this._diffuseTexture2) {\n                        this._activeEffect.setTexture(\"diffuse2Sampler\", this._diffuseTexture2);\n                        this._activeEffect.setFloat2(\"diffuse2Infos\", this._diffuseTexture2.uScale, this._diffuseTexture2.vScale);\n                    }\n                    if (this._diffuseTexture3) {\n                        this._activeEffect.setTexture(\"diffuse3Sampler\", this._diffuseTexture3);\n                        this._activeEffect.setFloat2(\"diffuse3Infos\", this._diffuseTexture3.uScale, this._diffuseTexture3.vScale);\n                    }\n                }\n                if (MaterialFlags.BumpTextureEnabled && scene.getEngine().getCaps().standardDerivatives) {\n                    if (this._bumpTexture1) {\n                        this._activeEffect.setTexture(\"bump1Sampler\", this._bumpTexture1);\n                    }\n                    if (this._bumpTexture2) {\n                        this._activeEffect.setTexture(\"bump2Sampler\", this._bumpTexture2);\n                    }\n                    if (this._bumpTexture3) {\n                        this._activeEffect.setTexture(\"bump3Sampler\", this._bumpTexture3);\n                    }\n                }\n            }\n            // Clip plane\n            MaterialHelper.BindClipPlane(this._activeEffect, scene);\n            // Point size\n            if (this.pointsCloud) {\n                this._activeEffect.setFloat(\"pointSize\", this.pointSize);\n            }\n            scene.bindEyePosition(effect);\n        }\n        this._activeEffect.setColor4(\"vDiffuseColor\", this.diffuseColor, this.alpha * mesh.visibility);\n        if (defines.SPECULARTERM) {\n            this._activeEffect.setColor4(\"vSpecularColor\", this.specularColor, this.specularPower);\n        }\n        if (scene.lightsEnabled && !this.disableLighting) {\n            MaterialHelper.BindLights(scene, mesh, this._activeEffect, defines, this.maxSimultaneousLights);\n        }\n        // View\n        if (scene.fogEnabled && mesh.applyFog && scene.fogMode !== Scene.FOGMODE_NONE) {\n            this._activeEffect.setMatrix(\"view\", scene.getViewMatrix());\n        }\n        // Fog\n        MaterialHelper.BindFogParameters(scene, mesh, this._activeEffect);\n        this._afterBind(mesh, this._activeEffect);\n    };\n    TerrainMaterial.prototype.getAnimatables = function () {\n        var results = [];\n        if (this.mixTexture && this.mixTexture.animations && this.mixTexture.animations.length > 0) {\n            results.push(this.mixTexture);\n        }\n        return results;\n    };\n    TerrainMaterial.prototype.getActiveTextures = function () {\n        var activeTextures = _super.prototype.getActiveTextures.call(this);\n        if (this._mixTexture) {\n            activeTextures.push(this._mixTexture);\n        }\n        if (this._diffuseTexture1) {\n            activeTextures.push(this._diffuseTexture1);\n        }\n        if (this._diffuseTexture2) {\n            activeTextures.push(this._diffuseTexture2);\n        }\n        if (this._diffuseTexture3) {\n            activeTextures.push(this._diffuseTexture3);\n        }\n        if (this._bumpTexture1) {\n            activeTextures.push(this._bumpTexture1);\n        }\n        if (this._bumpTexture2) {\n            activeTextures.push(this._bumpTexture2);\n        }\n        if (this._bumpTexture3) {\n            activeTextures.push(this._bumpTexture3);\n        }\n        return activeTextures;\n    };\n    TerrainMaterial.prototype.hasTexture = function (texture) {\n        if (_super.prototype.hasTexture.call(this, texture)) {\n            return true;\n        }\n        if (this._mixTexture === texture) {\n            return true;\n        }\n        if (this._diffuseTexture1 === texture) {\n            return true;\n        }\n        if (this._diffuseTexture2 === texture) {\n            return true;\n        }\n        if (this._diffuseTexture3 === texture) {\n            return true;\n        }\n        if (this._bumpTexture1 === texture) {\n            return true;\n        }\n        if (this._bumpTexture2 === texture) {\n            return true;\n        }\n        if (this._bumpTexture3 === texture) {\n            return true;\n        }\n        return false;\n    };\n    TerrainMaterial.prototype.dispose = function (forceDisposeEffect) {\n        if (this.mixTexture) {\n            this.mixTexture.dispose();\n        }\n        _super.prototype.dispose.call(this, forceDisposeEffect);\n    };\n    TerrainMaterial.prototype.clone = function (name) {\n        var _this = this;\n        return SerializationHelper.Clone(function () { return new TerrainMaterial(name, _this.getScene()); }, this);\n    };\n    TerrainMaterial.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.customType = \"BABYLON.TerrainMaterial\";\n        return serializationObject;\n    };\n    TerrainMaterial.prototype.getClassName = function () {\n        return \"TerrainMaterial\";\n    };\n    // Statics\n    TerrainMaterial.Parse = function (source, scene, rootUrl) {\n        return SerializationHelper.Parse(function () { return new TerrainMaterial(source.name, scene); }, source, scene, rootUrl);\n    };\n    __decorate([\n        serializeAsTexture(\"mixTexture\")\n    ], TerrainMaterial.prototype, \"_mixTexture\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], TerrainMaterial.prototype, \"mixTexture\", void 0);\n    __decorate([\n        serializeAsTexture(\"diffuseTexture1\")\n    ], TerrainMaterial.prototype, \"_diffuseTexture1\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], TerrainMaterial.prototype, \"diffuseTexture1\", void 0);\n    __decorate([\n        serializeAsTexture(\"diffuseTexture2\")\n    ], TerrainMaterial.prototype, \"_diffuseTexture2\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], TerrainMaterial.prototype, \"diffuseTexture2\", void 0);\n    __decorate([\n        serializeAsTexture(\"diffuseTexture3\")\n    ], TerrainMaterial.prototype, \"_diffuseTexture3\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], TerrainMaterial.prototype, \"diffuseTexture3\", void 0);\n    __decorate([\n        serializeAsTexture(\"bumpTexture1\")\n    ], TerrainMaterial.prototype, \"_bumpTexture1\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], TerrainMaterial.prototype, \"bumpTexture1\", void 0);\n    __decorate([\n        serializeAsTexture(\"bumpTexture2\")\n    ], TerrainMaterial.prototype, \"_bumpTexture2\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], TerrainMaterial.prototype, \"bumpTexture2\", void 0);\n    __decorate([\n        serializeAsTexture(\"bumpTexture3\")\n    ], TerrainMaterial.prototype, \"_bumpTexture3\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], TerrainMaterial.prototype, \"bumpTexture3\", void 0);\n    __decorate([\n        serializeAsColor3()\n    ], TerrainMaterial.prototype, \"diffuseColor\", void 0);\n    __decorate([\n        serializeAsColor3()\n    ], TerrainMaterial.prototype, \"specularColor\", void 0);\n    __decorate([\n        serialize()\n    ], TerrainMaterial.prototype, \"specularPower\", void 0);\n    __decorate([\n        serialize(\"disableLighting\")\n    ], TerrainMaterial.prototype, \"_disableLighting\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsLightsDirty\")\n    ], TerrainMaterial.prototype, \"disableLighting\", void 0);\n    __decorate([\n        serialize(\"maxSimultaneousLights\")\n    ], TerrainMaterial.prototype, \"_maxSimultaneousLights\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsLightsDirty\")\n    ], TerrainMaterial.prototype, \"maxSimultaneousLights\", void 0);\n    return TerrainMaterial;\n}(PushMaterial));\nexport { TerrainMaterial };\nRegisterClass(\"BABYLON.TerrainMaterial\", TerrainMaterial);\n//# sourceMappingURL=terrainMaterial.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/helperFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightUboDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightsFragmentFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/shadowsFragmentFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/depthPrePass.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/imageProcessingCompatibility.js\";\nvar name = \"triplanarPixelShader\";\nvar shader = \"precision highp float;\\nuniform vec4 vEyePosition;\\nuniform vec4 vDiffuseColor;\\n#ifdef SPECULARTERM\\nuniform vec4 vSpecularColor;\\n#endif\\nvarying vec3 vPositionW;\\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR)\\nvarying vec4 vColor;\\n#endif\\n#include<helperFunctions>\\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\\n#ifdef DIFFUSEX\\nvarying vec2 vTextureUVX;\\nuniform sampler2D diffuseSamplerX;\\n#ifdef BUMPX\\nuniform sampler2D normalSamplerX;\\n#endif\\n#endif\\n#ifdef DIFFUSEY\\nvarying vec2 vTextureUVY;\\nuniform sampler2D diffuseSamplerY;\\n#ifdef BUMPY\\nuniform sampler2D normalSamplerY;\\n#endif\\n#endif\\n#ifdef DIFFUSEZ\\nvarying vec2 vTextureUVZ;\\nuniform sampler2D diffuseSamplerZ;\\n#ifdef BUMPZ\\nuniform sampler2D normalSamplerZ;\\n#endif\\n#endif\\n#ifdef NORMAL\\nvarying mat3 tangentSpace;\\n#endif\\n#include<lightsFragmentFunctions>\\n#include<shadowsFragmentFunctions>\\n#include<clipPlaneFragmentDeclaration>\\n#include<fogFragmentDeclaration>\\n#define CUSTOM_FRAGMENT_DEFINITIONS\\nvoid main(void) {\\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\\n#include<clipPlaneFragment>\\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);\\nvec4 baseColor=vec4(0.,0.,0.,1.);\\nvec3 diffuseColor=vDiffuseColor.rgb;\\nfloat alpha=vDiffuseColor.a;\\n#ifdef NORMAL\\nvec3 normalW=tangentSpace[2];\\n#else\\nvec3 normalW=vec3(1.0,1.0,1.0);\\n#endif\\nvec4 baseNormal=vec4(0.0,0.0,0.0,1.0);\\nnormalW*=normalW;\\n#ifdef DIFFUSEX\\nbaseColor+=texture2D(diffuseSamplerX,vTextureUVX)*normalW.x;\\n#ifdef BUMPX\\nbaseNormal+=texture2D(normalSamplerX,vTextureUVX)*normalW.x;\\n#endif\\n#endif\\n#ifdef DIFFUSEY\\nbaseColor+=texture2D(diffuseSamplerY,vTextureUVY)*normalW.y;\\n#ifdef BUMPY\\nbaseNormal+=texture2D(normalSamplerY,vTextureUVY)*normalW.y;\\n#endif\\n#endif\\n#ifdef DIFFUSEZ\\nbaseColor+=texture2D(diffuseSamplerZ,vTextureUVZ)*normalW.z;\\n#ifdef BUMPZ\\nbaseNormal+=texture2D(normalSamplerZ,vTextureUVZ)*normalW.z;\\n#endif\\n#endif\\n#ifdef NORMAL\\nnormalW=normalize((2.0*baseNormal.xyz-1.0)*tangentSpace);\\n#endif\\n#ifdef ALPHATEST\\nif (baseColor.a<0.4)\\ndiscard;\\n#endif\\n#include<depthPrePass>\\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR)\\nbaseColor.rgb*=vColor.rgb;\\n#endif\\nvec3 diffuseBase=vec3(0.,0.,0.);\\nlightingInfo info;\\nfloat shadow=1.;\\n#ifdef SPECULARTERM\\nfloat glossiness=vSpecularColor.a;\\nvec3 specularBase=vec3(0.,0.,0.);\\nvec3 specularColor=vSpecularColor.rgb;\\n#else\\nfloat glossiness=0.;\\n#endif\\n#include<lightFragment>[0..maxSimultaneousLights]\\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR)\\nalpha*=vColor.a;\\n#endif\\n#ifdef SPECULARTERM\\nvec3 finalSpecular=specularBase*specularColor;\\n#else\\nvec3 finalSpecular=vec3(0.0);\\n#endif\\nvec3 finalDiffuse=clamp(diffuseBase*diffuseColor,0.0,1.0)*baseColor.rgb;\\nvec4 color=vec4(finalDiffuse+finalSpecular,alpha);\\n#include<fogFragment>\\ngl_FragColor=color;\\n#include<imageProcessingCompatibility>\\n#define CUSTOM_FRAGMENT_MAIN_END\\n}\\n\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var triplanarPixelShader = { name: name, shader: shader };\n//# sourceMappingURL=triplanar.fragment.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bonesDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bakedVertexAnimationDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/instancesDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneVertexDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogVertexDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightUboDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/instancesVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bonesVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bakedVertexAnimation.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/shadowsVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/vertexColorMixing.js\";\nvar name = \"triplanarVertexShader\";\nvar shader = \"precision highp float;\\nattribute vec3 position;\\n#ifdef NORMAL\\nattribute vec3 normal;\\n#endif\\n#ifdef VERTEXCOLOR\\nattribute vec4 color;\\n#endif\\n#include<bonesDeclaration>\\n#include<bakedVertexAnimationDeclaration>\\n#include<instancesDeclaration>\\nuniform mat4 view;\\nuniform mat4 viewProjection;\\n#ifdef DIFFUSEX\\nvarying vec2 vTextureUVX;\\n#endif\\n#ifdef DIFFUSEY\\nvarying vec2 vTextureUVY;\\n#endif\\n#ifdef DIFFUSEZ\\nvarying vec2 vTextureUVZ;\\n#endif\\nuniform float tileSize;\\n#ifdef POINTSIZE\\nuniform float pointSize;\\n#endif\\nvarying vec3 vPositionW;\\n#ifdef NORMAL\\nvarying mat3 tangentSpace;\\n#endif\\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR)\\nvarying vec4 vColor;\\n#endif\\n#include<clipPlaneVertexDeclaration>\\n#include<fogVertexDeclaration>\\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\\n#define CUSTOM_VERTEX_DEFINITIONS\\nvoid main(void)\\n{\\n#define CUSTOM_VERTEX_MAIN_BEGIN\\n#include<instancesVertex>\\n#include<bonesVertex>\\n#include<bakedVertexAnimation>\\nvec4 worldPos=finalWorld*vec4(position,1.0);\\ngl_Position=viewProjection*worldPos;\\nvPositionW=vec3(worldPos);\\n#ifdef DIFFUSEX\\nvTextureUVX=worldPos.zy/tileSize;\\n#endif\\n#ifdef DIFFUSEY\\nvTextureUVY=worldPos.xz/tileSize;\\n#endif\\n#ifdef DIFFUSEZ\\nvTextureUVZ=worldPos.xy/tileSize;\\n#endif\\n#ifdef NORMAL\\nvec3 xtan=vec3(0,0,1);\\nvec3 xbin=vec3(0,1,0);\\nvec3 ytan=vec3(1,0,0);\\nvec3 ybin=vec3(0,0,1);\\nvec3 ztan=vec3(1,0,0);\\nvec3 zbin=vec3(0,1,0);\\nvec3 normalizedNormal=normalize(normal);\\nnormalizedNormal*=normalizedNormal;\\nvec3 worldBinormal=normalize(xbin*normalizedNormal.x+ybin*normalizedNormal.y+zbin*normalizedNormal.z);\\nvec3 worldTangent=normalize(xtan*normalizedNormal.x+ytan*normalizedNormal.y+ztan*normalizedNormal.z);\\nworldTangent=(world*vec4(worldTangent,0.0)).xyz;\\nworldBinormal=(world*vec4(worldBinormal,0.0)).xyz;\\nvec3 worldNormal=(world*vec4(normalize(normal),0.0)).xyz;\\ntangentSpace[0]=worldTangent;\\ntangentSpace[1]=worldBinormal;\\ntangentSpace[2]=worldNormal;\\n#endif\\n#include<clipPlaneVertex>\\n#include<fogVertex>\\n#include<shadowsVertex>[0..maxSimultaneousLights]\\n#include<vertexColorMixing>\\n#if defined(POINTSIZE) && !defined(WEBGPU)\\ngl_PointSize=pointSize;\\n#endif\\n#define CUSTOM_VERTEX_MAIN_END\\n}\\n\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var triplanarVertexShader = { name: name, shader: shader };\n//# sourceMappingURL=triplanar.vertex.js.map","import { __decorate, __extends } from \"tslib\";\nimport { serializeAsTexture, serialize, expandToProperty, serializeAsColor3, SerializationHelper } from \"@babylonjs/core/Misc/decorators.js\";\nimport { Color3 } from \"@babylonjs/core/Maths/math.color.js\";\nimport { MaterialDefines } from \"@babylonjs/core/Materials/materialDefines.js\";\nimport { MaterialHelper } from \"@babylonjs/core/Materials/materialHelper.js\";\nimport { PushMaterial } from \"@babylonjs/core/Materials/pushMaterial.js\";\nimport { MaterialFlags } from \"@babylonjs/core/Materials/materialFlags.js\";\nimport { VertexBuffer } from \"@babylonjs/core/Buffers/buffer.js\";\nimport { Scene } from \"@babylonjs/core/scene.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport \"./triplanar.fragment.js\";\nimport \"./triplanar.vertex.js\";\nimport { EffectFallbacks } from \"@babylonjs/core/Materials/effectFallbacks.js\";\nvar TriPlanarMaterialDefines = /** @class */ (function (_super) {\n    __extends(TriPlanarMaterialDefines, _super);\n    function TriPlanarMaterialDefines() {\n        var _this = _super.call(this) || this;\n        _this.DIFFUSEX = false;\n        _this.DIFFUSEY = false;\n        _this.DIFFUSEZ = false;\n        _this.BUMPX = false;\n        _this.BUMPY = false;\n        _this.BUMPZ = false;\n        _this.CLIPPLANE = false;\n        _this.CLIPPLANE2 = false;\n        _this.CLIPPLANE3 = false;\n        _this.CLIPPLANE4 = false;\n        _this.CLIPPLANE5 = false;\n        _this.CLIPPLANE6 = false;\n        _this.ALPHATEST = false;\n        _this.DEPTHPREPASS = false;\n        _this.POINTSIZE = false;\n        _this.FOG = false;\n        _this.SPECULARTERM = false;\n        _this.NORMAL = false;\n        _this.VERTEXCOLOR = false;\n        _this.VERTEXALPHA = false;\n        _this.NUM_BONE_INFLUENCERS = 0;\n        _this.BonesPerMesh = 0;\n        _this.INSTANCES = false;\n        _this.INSTANCESCOLOR = false;\n        _this.IMAGEPROCESSINGPOSTPROCESS = false;\n        _this.SKIPFINALCOLORCLAMP = false;\n        _this.rebuild();\n        return _this;\n    }\n    return TriPlanarMaterialDefines;\n}(MaterialDefines));\nvar TriPlanarMaterial = /** @class */ (function (_super) {\n    __extends(TriPlanarMaterial, _super);\n    function TriPlanarMaterial(name, scene) {\n        var _this = _super.call(this, name, scene) || this;\n        _this.tileSize = 1;\n        _this.diffuseColor = new Color3(1, 1, 1);\n        _this.specularColor = new Color3(0.2, 0.2, 0.2);\n        _this.specularPower = 64;\n        _this._disableLighting = false;\n        _this._maxSimultaneousLights = 4;\n        return _this;\n    }\n    TriPlanarMaterial.prototype.needAlphaBlending = function () {\n        return this.alpha < 1.0;\n    };\n    TriPlanarMaterial.prototype.needAlphaTesting = function () {\n        return false;\n    };\n    TriPlanarMaterial.prototype.getAlphaTestTexture = function () {\n        return null;\n    };\n    // Methods\n    TriPlanarMaterial.prototype.isReadyForSubMesh = function (mesh, subMesh, useInstances) {\n        if (this.isFrozen) {\n            if (subMesh.effect && subMesh.effect._wasPreviouslyReady) {\n                return true;\n            }\n        }\n        if (!subMesh.materialDefines) {\n            subMesh.materialDefines = new TriPlanarMaterialDefines();\n        }\n        var defines = subMesh.materialDefines;\n        var scene = this.getScene();\n        if (this._isReadyForSubMesh(subMesh)) {\n            return true;\n        }\n        var engine = scene.getEngine();\n        // Textures\n        if (defines._areTexturesDirty) {\n            if (scene.texturesEnabled) {\n                if (MaterialFlags.DiffuseTextureEnabled) {\n                    var textures = [this.diffuseTextureX, this.diffuseTextureY, this.diffuseTextureZ];\n                    var textureDefines = [\"DIFFUSEX\", \"DIFFUSEY\", \"DIFFUSEZ\"];\n                    for (var i = 0; i < textures.length; i++) {\n                        if (textures[i]) {\n                            if (!textures[i].isReady()) {\n                                return false;\n                            }\n                            else {\n                                defines[textureDefines[i]] = true;\n                            }\n                        }\n                    }\n                }\n                if (MaterialFlags.BumpTextureEnabled) {\n                    var textures = [this.normalTextureX, this.normalTextureY, this.normalTextureZ];\n                    var textureDefines = [\"BUMPX\", \"BUMPY\", \"BUMPZ\"];\n                    for (var i = 0; i < textures.length; i++) {\n                        if (textures[i]) {\n                            if (!textures[i].isReady()) {\n                                return false;\n                            }\n                            else {\n                                defines[textureDefines[i]] = true;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        // Misc.\n        MaterialHelper.PrepareDefinesForMisc(mesh, scene, false, this.pointsCloud, this.fogEnabled, this._shouldTurnAlphaTestOn(mesh), defines);\n        // Lights\n        defines._needNormals = MaterialHelper.PrepareDefinesForLights(scene, mesh, defines, false, this._maxSimultaneousLights, this._disableLighting);\n        // Values that need to be evaluated on every frame\n        MaterialHelper.PrepareDefinesForFrameBoundValues(scene, engine, defines, useInstances ? true : false);\n        // Attribs\n        MaterialHelper.PrepareDefinesForAttributes(mesh, defines, true, true);\n        // Get correct effect\n        if (defines.isDirty) {\n            defines.markAsProcessed();\n            scene.resetCachedMaterial();\n            // Fallbacks\n            var fallbacks = new EffectFallbacks();\n            if (defines.FOG) {\n                fallbacks.addFallback(1, \"FOG\");\n            }\n            MaterialHelper.HandleFallbacksForShadows(defines, fallbacks, this.maxSimultaneousLights);\n            if (defines.NUM_BONE_INFLUENCERS > 0) {\n                fallbacks.addCPUSkinningFallback(0, mesh);\n            }\n            defines.IMAGEPROCESSINGPOSTPROCESS = scene.imageProcessingConfiguration.applyByPostProcess;\n            //Attributes\n            var attribs = [VertexBuffer.PositionKind];\n            if (defines.NORMAL) {\n                attribs.push(VertexBuffer.NormalKind);\n            }\n            if (defines.VERTEXCOLOR) {\n                attribs.push(VertexBuffer.ColorKind);\n            }\n            MaterialHelper.PrepareAttributesForBones(attribs, mesh, defines, fallbacks);\n            MaterialHelper.PrepareAttributesForInstances(attribs, defines);\n            // Legacy browser patch\n            var shaderName = \"triplanar\";\n            var join = defines.toString();\n            var uniforms = [\n                \"world\",\n                \"view\",\n                \"viewProjection\",\n                \"vEyePosition\",\n                \"vLightsType\",\n                \"vDiffuseColor\",\n                \"vSpecularColor\",\n                \"vFogInfos\",\n                \"vFogColor\",\n                \"pointSize\",\n                \"mBones\",\n                \"vClipPlane\",\n                \"vClipPlane2\",\n                \"vClipPlane3\",\n                \"vClipPlane4\",\n                \"vClipPlane5\",\n                \"vClipPlane6\",\n                \"tileSize\",\n            ];\n            var samplers = [\"diffuseSamplerX\", \"diffuseSamplerY\", \"diffuseSamplerZ\", \"normalSamplerX\", \"normalSamplerY\", \"normalSamplerZ\"];\n            var uniformBuffers = new Array();\n            MaterialHelper.PrepareUniformsAndSamplersList({\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: defines,\n                maxSimultaneousLights: this.maxSimultaneousLights,\n            });\n            subMesh.setEffect(scene.getEngine().createEffect(shaderName, {\n                attributes: attribs,\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: join,\n                fallbacks: fallbacks,\n                onCompiled: this.onCompiled,\n                onError: this.onError,\n                indexParameters: { maxSimultaneousLights: this.maxSimultaneousLights },\n            }, engine), defines, this._materialContext);\n        }\n        if (!subMesh.effect || !subMesh.effect.isReady()) {\n            return false;\n        }\n        defines._renderId = scene.getRenderId();\n        subMesh.effect._wasPreviouslyReady = true;\n        return true;\n    };\n    TriPlanarMaterial.prototype.bindForSubMesh = function (world, mesh, subMesh) {\n        var scene = this.getScene();\n        var defines = subMesh.materialDefines;\n        if (!defines) {\n            return;\n        }\n        var effect = subMesh.effect;\n        if (!effect) {\n            return;\n        }\n        this._activeEffect = effect;\n        // Matrices\n        this.bindOnlyWorldMatrix(world);\n        this._activeEffect.setMatrix(\"viewProjection\", scene.getTransformMatrix());\n        // Bones\n        MaterialHelper.BindBonesParameters(mesh, this._activeEffect);\n        this._activeEffect.setFloat(\"tileSize\", this.tileSize);\n        if (scene.getCachedMaterial() !== this) {\n            // Textures\n            if (this.diffuseTextureX) {\n                this._activeEffect.setTexture(\"diffuseSamplerX\", this.diffuseTextureX);\n            }\n            if (this.diffuseTextureY) {\n                this._activeEffect.setTexture(\"diffuseSamplerY\", this.diffuseTextureY);\n            }\n            if (this.diffuseTextureZ) {\n                this._activeEffect.setTexture(\"diffuseSamplerZ\", this.diffuseTextureZ);\n            }\n            if (this.normalTextureX) {\n                this._activeEffect.setTexture(\"normalSamplerX\", this.normalTextureX);\n            }\n            if (this.normalTextureY) {\n                this._activeEffect.setTexture(\"normalSamplerY\", this.normalTextureY);\n            }\n            if (this.normalTextureZ) {\n                this._activeEffect.setTexture(\"normalSamplerZ\", this.normalTextureZ);\n            }\n            // Clip plane\n            MaterialHelper.BindClipPlane(this._activeEffect, scene);\n            // Point size\n            if (this.pointsCloud) {\n                this._activeEffect.setFloat(\"pointSize\", this.pointSize);\n            }\n            scene.bindEyePosition(effect);\n        }\n        this._activeEffect.setColor4(\"vDiffuseColor\", this.diffuseColor, this.alpha * mesh.visibility);\n        if (defines.SPECULARTERM) {\n            this._activeEffect.setColor4(\"vSpecularColor\", this.specularColor, this.specularPower);\n        }\n        if (scene.lightsEnabled && !this.disableLighting) {\n            MaterialHelper.BindLights(scene, mesh, this._activeEffect, defines, this.maxSimultaneousLights);\n        }\n        // View\n        if (scene.fogEnabled && mesh.applyFog && scene.fogMode !== Scene.FOGMODE_NONE) {\n            this._activeEffect.setMatrix(\"view\", scene.getViewMatrix());\n        }\n        // Fog\n        MaterialHelper.BindFogParameters(scene, mesh, this._activeEffect);\n        this._afterBind(mesh, this._activeEffect);\n    };\n    TriPlanarMaterial.prototype.getAnimatables = function () {\n        var results = [];\n        if (this.mixTexture && this.mixTexture.animations && this.mixTexture.animations.length > 0) {\n            results.push(this.mixTexture);\n        }\n        return results;\n    };\n    TriPlanarMaterial.prototype.getActiveTextures = function () {\n        var activeTextures = _super.prototype.getActiveTextures.call(this);\n        if (this._diffuseTextureX) {\n            activeTextures.push(this._diffuseTextureX);\n        }\n        if (this._diffuseTextureY) {\n            activeTextures.push(this._diffuseTextureY);\n        }\n        if (this._diffuseTextureZ) {\n            activeTextures.push(this._diffuseTextureZ);\n        }\n        if (this._normalTextureX) {\n            activeTextures.push(this._normalTextureX);\n        }\n        if (this._normalTextureY) {\n            activeTextures.push(this._normalTextureY);\n        }\n        if (this._normalTextureZ) {\n            activeTextures.push(this._normalTextureZ);\n        }\n        return activeTextures;\n    };\n    TriPlanarMaterial.prototype.hasTexture = function (texture) {\n        if (_super.prototype.hasTexture.call(this, texture)) {\n            return true;\n        }\n        if (this._diffuseTextureX === texture) {\n            return true;\n        }\n        if (this._diffuseTextureY === texture) {\n            return true;\n        }\n        if (this._diffuseTextureZ === texture) {\n            return true;\n        }\n        if (this._normalTextureX === texture) {\n            return true;\n        }\n        if (this._normalTextureY === texture) {\n            return true;\n        }\n        if (this._normalTextureZ === texture) {\n            return true;\n        }\n        return false;\n    };\n    TriPlanarMaterial.prototype.dispose = function (forceDisposeEffect) {\n        if (this.mixTexture) {\n            this.mixTexture.dispose();\n        }\n        _super.prototype.dispose.call(this, forceDisposeEffect);\n    };\n    TriPlanarMaterial.prototype.clone = function (name) {\n        var _this = this;\n        return SerializationHelper.Clone(function () { return new TriPlanarMaterial(name, _this.getScene()); }, this);\n    };\n    TriPlanarMaterial.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.customType = \"BABYLON.TriPlanarMaterial\";\n        return serializationObject;\n    };\n    TriPlanarMaterial.prototype.getClassName = function () {\n        return \"TriPlanarMaterial\";\n    };\n    // Statics\n    TriPlanarMaterial.Parse = function (source, scene, rootUrl) {\n        return SerializationHelper.Parse(function () { return new TriPlanarMaterial(source.name, scene); }, source, scene, rootUrl);\n    };\n    __decorate([\n        serializeAsTexture()\n    ], TriPlanarMaterial.prototype, \"mixTexture\", void 0);\n    __decorate([\n        serializeAsTexture(\"diffuseTextureX\")\n    ], TriPlanarMaterial.prototype, \"_diffuseTextureX\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], TriPlanarMaterial.prototype, \"diffuseTextureX\", void 0);\n    __decorate([\n        serializeAsTexture(\"diffuseTexturY\")\n    ], TriPlanarMaterial.prototype, \"_diffuseTextureY\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], TriPlanarMaterial.prototype, \"diffuseTextureY\", void 0);\n    __decorate([\n        serializeAsTexture(\"diffuseTextureZ\")\n    ], TriPlanarMaterial.prototype, \"_diffuseTextureZ\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], TriPlanarMaterial.prototype, \"diffuseTextureZ\", void 0);\n    __decorate([\n        serializeAsTexture(\"normalTextureX\")\n    ], TriPlanarMaterial.prototype, \"_normalTextureX\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], TriPlanarMaterial.prototype, \"normalTextureX\", void 0);\n    __decorate([\n        serializeAsTexture(\"normalTextureY\")\n    ], TriPlanarMaterial.prototype, \"_normalTextureY\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], TriPlanarMaterial.prototype, \"normalTextureY\", void 0);\n    __decorate([\n        serializeAsTexture(\"normalTextureZ\")\n    ], TriPlanarMaterial.prototype, \"_normalTextureZ\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], TriPlanarMaterial.prototype, \"normalTextureZ\", void 0);\n    __decorate([\n        serialize()\n    ], TriPlanarMaterial.prototype, \"tileSize\", void 0);\n    __decorate([\n        serializeAsColor3()\n    ], TriPlanarMaterial.prototype, \"diffuseColor\", void 0);\n    __decorate([\n        serializeAsColor3()\n    ], TriPlanarMaterial.prototype, \"specularColor\", void 0);\n    __decorate([\n        serialize()\n    ], TriPlanarMaterial.prototype, \"specularPower\", void 0);\n    __decorate([\n        serialize(\"disableLighting\")\n    ], TriPlanarMaterial.prototype, \"_disableLighting\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsLightsDirty\")\n    ], TriPlanarMaterial.prototype, \"disableLighting\", void 0);\n    __decorate([\n        serialize(\"maxSimultaneousLights\")\n    ], TriPlanarMaterial.prototype, \"_maxSimultaneousLights\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsLightsDirty\")\n    ], TriPlanarMaterial.prototype, \"maxSimultaneousLights\", void 0);\n    return TriPlanarMaterial;\n}(PushMaterial));\nexport { TriPlanarMaterial };\nRegisterClass(\"BABYLON.TriPlanarMaterial\", TriPlanarMaterial);\n//# sourceMappingURL=triPlanarMaterial.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/helperFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/imageProcessingDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/imageProcessingFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightUboDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightsFragmentFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/shadowsFragmentFunctions.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/logDepthDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/logDepthFragment.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogFragment.js\";\nvar name = \"waterPixelShader\";\nvar shader = \"#ifdef LOGARITHMICDEPTH\\n#extension GL_EXT_frag_depth : enable\\n#endif\\nprecision highp float;\\nuniform vec4 vEyePosition;\\nuniform vec4 vDiffuseColor;\\n#ifdef SPECULARTERM\\nuniform vec4 vSpecularColor;\\n#endif\\nvarying vec3 vPositionW;\\n#ifdef NORMAL\\nvarying vec3 vNormalW;\\n#endif\\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR)\\nvarying vec4 vColor;\\n#endif\\n#include<helperFunctions>\\n#include<imageProcessingDeclaration>\\n#include<imageProcessingFunctions>\\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\\n#include<lightsFragmentFunctions>\\n#include<shadowsFragmentFunctions>\\n#ifdef BUMP\\nvarying vec2 vNormalUV;\\n#ifdef BUMPSUPERIMPOSE\\nvarying vec2 vNormalUV2;\\n#endif\\nuniform sampler2D normalSampler;\\nuniform vec2 vNormalInfos;\\n#endif\\nuniform sampler2D refractionSampler;\\nuniform sampler2D reflectionSampler;\\nconst float LOG2=1.442695;\\nuniform vec3 cameraPosition;\\nuniform vec4 waterColor;\\nuniform float colorBlendFactor;\\nuniform vec4 waterColor2;\\nuniform float colorBlendFactor2;\\nuniform float bumpHeight;\\nuniform float time;\\nvarying vec3 vRefractionMapTexCoord;\\nvarying vec3 vReflectionMapTexCoord;\\nvarying vec3 vPosition;\\n#include<clipPlaneFragmentDeclaration>\\n#include<logDepthDeclaration>\\n#include<fogFragmentDeclaration>\\n#define CUSTOM_FRAGMENT_DEFINITIONS\\nvoid main(void) {\\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\\n#include<clipPlaneFragment>\\nvec3 viewDirectionW=normalize(vEyePosition.xyz-vPositionW);\\nvec4 baseColor=vec4(1.,1.,1.,1.);\\nvec3 diffuseColor=vDiffuseColor.rgb;\\nfloat alpha=vDiffuseColor.a;\\n#ifdef BUMP\\n#ifdef BUMPSUPERIMPOSE\\nbaseColor=0.6*texture2D(normalSampler,vNormalUV)+0.4*texture2D(normalSampler,vec2(vNormalUV2.x,vNormalUV2.y));\\n#else\\nbaseColor=texture2D(normalSampler,vNormalUV);\\n#endif\\nvec3 bumpColor=baseColor.rgb;\\n#ifdef ALPHATEST\\nif (baseColor.a<0.4)\\ndiscard;\\n#endif\\nbaseColor.rgb*=vNormalInfos.y;\\n#else\\nvec3 bumpColor=vec3(1.0);\\n#endif\\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR)\\nbaseColor.rgb*=vColor.rgb;\\n#endif\\n#ifdef NORMAL\\nvec2 perturbation=bumpHeight*(baseColor.rg-0.5);\\n#ifdef BUMPAFFECTSREFLECTION\\nvec3 normalW=normalize(vNormalW+vec3(perturbation.x*8.0,0.0,perturbation.y*8.0));\\nif (normalW.y<0.0) {\\nnormalW.y=-normalW.y;\\n}\\n#else\\nvec3 normalW=normalize(vNormalW);\\n#endif\\n#else\\nvec3 normalW=vec3(1.0,1.0,1.0);\\nvec2 perturbation=bumpHeight*(vec2(1.0,1.0)-0.5);\\n#endif\\n#ifdef FRESNELSEPARATE\\n#ifdef REFLECTION\\nvec2 projectedRefractionTexCoords=clamp(vRefractionMapTexCoord.xy/vRefractionMapTexCoord.z+perturbation*0.5,0.0,1.0);\\nvec4 refractiveColor=texture2D(refractionSampler,projectedRefractionTexCoords);\\n#ifdef IS_REFRACTION_LINEAR\\nrefractiveColor.rgb=toGammaSpace(refractiveColor.rgb);\\n#endif\\nvec2 projectedReflectionTexCoords=clamp(vec2(\\nvReflectionMapTexCoord.x/vReflectionMapTexCoord.z+perturbation.x*0.3,\\nvReflectionMapTexCoord.y/vReflectionMapTexCoord.z+perturbation.y\\n),0.0,1.0);\\nvec4 reflectiveColor=texture2D(reflectionSampler,projectedReflectionTexCoords);\\n#ifdef IS_REFLECTION_LINEAR\\nreflectiveColor.rgb=toGammaSpace(reflectiveColor.rgb);\\n#endif\\nvec3 upVector=vec3(0.0,1.0,0.0);\\nfloat fresnelTerm=clamp(abs(pow(dot(viewDirectionW,upVector),3.0)),0.05,0.65);\\nfloat IfresnelTerm=1.0-fresnelTerm;\\nrefractiveColor=colorBlendFactor*waterColor+(1.0-colorBlendFactor)*refractiveColor;\\nreflectiveColor=IfresnelTerm*colorBlendFactor2*waterColor+(1.0-colorBlendFactor2*IfresnelTerm)*reflectiveColor;\\nvec4 combinedColor=refractiveColor*fresnelTerm+reflectiveColor*IfresnelTerm;\\nbaseColor=combinedColor;\\n#endif\\nvec3 diffuseBase=vec3(0.,0.,0.);\\nlightingInfo info;\\nfloat shadow=1.;\\n#ifdef SPECULARTERM\\nfloat glossiness=vSpecularColor.a;\\nvec3 specularBase=vec3(0.,0.,0.);\\nvec3 specularColor=vSpecularColor.rgb;\\n#else\\nfloat glossiness=0.;\\n#endif\\n#include<lightFragment>[0..maxSimultaneousLights]\\nvec3 finalDiffuse=clamp(baseColor.rgb,0.0,1.0);\\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR)\\nalpha*=vColor.a;\\n#endif\\n#ifdef SPECULARTERM\\nvec3 finalSpecular=specularBase*specularColor;\\n#else\\nvec3 finalSpecular=vec3(0.0);\\n#endif\\n#else \\n#ifdef REFLECTION\\nvec2 projectedRefractionTexCoords=clamp(vRefractionMapTexCoord.xy/vRefractionMapTexCoord.z+perturbation,0.0,1.0);\\nvec4 refractiveColor=texture2D(refractionSampler,projectedRefractionTexCoords);\\n#ifdef IS_REFRACTION_LINEAR\\nrefractiveColor.rgb=toGammaSpace(refractiveColor.rgb);\\n#endif\\nvec2 projectedReflectionTexCoords=clamp(vReflectionMapTexCoord.xy/vReflectionMapTexCoord.z+perturbation,0.0,1.0);\\nvec4 reflectiveColor=texture2D(reflectionSampler,projectedReflectionTexCoords);\\n#ifdef IS_REFLECTION_LINEAR\\nreflectiveColor.rgb=toGammaSpace(reflectiveColor.rgb);\\n#endif\\nvec3 upVector=vec3(0.0,1.0,0.0);\\nfloat fresnelTerm=max(dot(viewDirectionW,upVector),0.0);\\nvec4 combinedColor=refractiveColor*fresnelTerm+reflectiveColor*(1.0-fresnelTerm);\\nbaseColor=colorBlendFactor*waterColor+(1.0-colorBlendFactor)*combinedColor;\\n#endif\\nvec3 diffuseBase=vec3(0.,0.,0.);\\nlightingInfo info;\\nfloat shadow=1.;\\n#ifdef SPECULARTERM\\nfloat glossiness=vSpecularColor.a;\\nvec3 specularBase=vec3(0.,0.,0.);\\nvec3 specularColor=vSpecularColor.rgb;\\n#else\\nfloat glossiness=0.;\\n#endif\\n#include<lightFragment>[0..maxSimultaneousLights]\\nvec3 finalDiffuse=clamp(baseColor.rgb,0.0,1.0);\\n#if defined(VERTEXALPHA) || defined(INSTANCESCOLOR)\\nalpha*=vColor.a;\\n#endif\\n#ifdef SPECULARTERM\\nvec3 finalSpecular=specularBase*specularColor;\\n#else\\nvec3 finalSpecular=vec3(0.0);\\n#endif\\n#endif\\nvec4 color=vec4(finalDiffuse+finalSpecular,alpha);\\n#include<logDepthFragment>\\n#include<fogFragment>\\n#ifdef IMAGEPROCESSINGPOSTPROCESS\\ncolor.rgb=toLinearSpace(color.rgb);\\n#elif defined(IMAGEPROCESSING)\\ncolor.rgb=toLinearSpace(color.rgb);\\ncolor=applyImageProcessing(color);\\n#endif\\ngl_FragColor=color;\\n#define CUSTOM_FRAGMENT_MAIN_END\\n}\\n\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var waterPixelShader = { name: name, shader: shader };\n//# sourceMappingURL=water.fragment.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bonesDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bakedVertexAnimationDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/instancesDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneVertexDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogVertexDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightFragmentDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/lightUboDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/logDepthDeclaration.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/instancesVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bonesVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/bakedVertexAnimation.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/clipPlaneVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/fogVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/shadowsVertex.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/vertexColorMixing.js\";\nimport \"@babylonjs/core/Shaders/ShadersInclude/logDepthVertex.js\";\nvar name = \"waterVertexShader\";\nvar shader = \"precision highp float;\\nattribute vec3 position;\\n#ifdef NORMAL\\nattribute vec3 normal;\\n#endif\\n#ifdef UV1\\nattribute vec2 uv;\\n#endif\\n#ifdef UV2\\nattribute vec2 uv2;\\n#endif\\n#ifdef VERTEXCOLOR\\nattribute vec4 color;\\n#endif\\n#include<bonesDeclaration>\\n#include<bakedVertexAnimationDeclaration>\\n#include<instancesDeclaration>\\nuniform mat4 view;\\nuniform mat4 viewProjection;\\n#ifdef BUMP\\nvarying vec2 vNormalUV;\\n#ifdef BUMPSUPERIMPOSE\\nvarying vec2 vNormalUV2;\\n#endif\\nuniform mat4 normalMatrix;\\nuniform vec2 vNormalInfos;\\n#endif\\n#ifdef POINTSIZE\\nuniform float pointSize;\\n#endif\\nvarying vec3 vPositionW;\\n#ifdef NORMAL\\nvarying vec3 vNormalW;\\n#endif\\n#if defined(VERTEXCOLOR) || defined(INSTANCESCOLOR)\\nvarying vec4 vColor;\\n#endif\\n#include<clipPlaneVertexDeclaration>\\n#include<fogVertexDeclaration>\\n#include<__decl__lightFragment>[0..maxSimultaneousLights]\\n#include<logDepthDeclaration>\\nuniform mat4 worldReflectionViewProjection;\\nuniform vec2 windDirection;\\nuniform float waveLength;\\nuniform float time;\\nuniform float windForce;\\nuniform float waveHeight;\\nuniform float waveSpeed;\\nuniform float waveCount;\\nvarying vec3 vPosition;\\nvarying vec3 vRefractionMapTexCoord;\\nvarying vec3 vReflectionMapTexCoord;\\n#define CUSTOM_VERTEX_DEFINITIONS\\nvoid main(void) {\\n#define CUSTOM_VERTEX_MAIN_BEGIN\\n#include<instancesVertex>\\n#include<bonesVertex>\\n#include<bakedVertexAnimation>\\nvec4 worldPos=finalWorld*vec4(position,1.0);\\nvPositionW=vec3(worldPos);\\n#ifdef NORMAL\\nvNormalW=normalize(vec3(finalWorld*vec4(normal,0.0)));\\n#endif\\n#ifndef UV1\\nvec2 uv=vec2(0.,0.);\\n#endif\\n#ifndef UV2\\nvec2 uv2=vec2(0.,0.);\\n#endif\\n#ifdef BUMP\\nif (vNormalInfos.x==0.)\\n{\\nvNormalUV=vec2(normalMatrix*vec4((uv*1.0)/waveLength+time*windForce*windDirection,1.0,0.0));\\n#ifdef BUMPSUPERIMPOSE\\nvNormalUV2=vec2(normalMatrix*vec4((uv*0.721)/waveLength+time*1.2*windForce*windDirection,1.0,0.0));\\n#endif\\n}\\nelse\\n{\\nvNormalUV=vec2(normalMatrix*vec4((uv2*1.0)/waveLength+time*windForce*windDirection ,1.0,0.0));\\n#ifdef BUMPSUPERIMPOSE\\nvNormalUV2=vec2(normalMatrix*vec4((uv2*0.721)/waveLength+time*1.2*windForce*windDirection ,1.0,0.0));\\n#endif\\n}\\n#endif\\n#include<clipPlaneVertex>\\n#include<fogVertex>\\n#include<shadowsVertex>[0..maxSimultaneousLights]\\n#include<vertexColorMixing>\\n#if defined(POINTSIZE) && !defined(WEBGPU)\\ngl_PointSize=pointSize;\\n#endif\\nfloat finalWaveCount=1.0/(waveCount*0.5);\\nvec3 p=position;\\nfloat newY=(sin(((p.x/finalWaveCount)+time*waveSpeed))*waveHeight*windDirection.x*5.0)\\n+ (cos(((p.z/finalWaveCount)+ time*waveSpeed))*waveHeight*windDirection.y*5.0);\\np.y+=abs(newY);\\ngl_Position=viewProjection*finalWorld*vec4(p,1.0);\\n#ifdef REFLECTION\\nworldPos=viewProjection*finalWorld*vec4(p,1.0);\\nvPosition=position;\\nvRefractionMapTexCoord.x=0.5*(worldPos.w+worldPos.x);\\nvRefractionMapTexCoord.y=0.5*(worldPos.w+worldPos.y);\\nvRefractionMapTexCoord.z=worldPos.w;\\nworldPos=worldReflectionViewProjection*vec4(position,1.0);\\nvReflectionMapTexCoord.x=0.5*(worldPos.w+worldPos.x);\\nvReflectionMapTexCoord.y=0.5*(worldPos.w+worldPos.y);\\nvReflectionMapTexCoord.z=worldPos.w;\\n#endif\\n#include<logDepthVertex>\\n#define CUSTOM_VERTEX_MAIN_END\\n}\\n\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var waterVertexShader = { name: name, shader: shader };\n//# sourceMappingURL=water.vertex.js.map","import { __decorate, __extends } from \"tslib\";\nimport { serializeAsVector2, serializeAsTexture, serialize, expandToProperty, serializeAsColor3, SerializationHelper } from \"@babylonjs/core/Misc/decorators.js\";\nimport { Matrix, Vector2, Vector3 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { Color3 } from \"@babylonjs/core/Maths/math.color.js\";\nimport { Plane } from \"@babylonjs/core/Maths/math.plane.js\";\nimport { Constants } from \"@babylonjs/core/Engines/constants.js\";\nimport { SmartArray } from \"@babylonjs/core/Misc/smartArray.js\";\nimport { RenderTargetTexture } from \"@babylonjs/core/Materials/Textures/renderTargetTexture.js\";\nimport { MaterialDefines } from \"@babylonjs/core/Materials/materialDefines.js\";\nimport { ImageProcessingConfiguration } from \"@babylonjs/core/Materials/imageProcessingConfiguration.js\";\nimport { MaterialHelper } from \"@babylonjs/core/Materials/materialHelper.js\";\nimport { PushMaterial } from \"@babylonjs/core/Materials/pushMaterial.js\";\nimport { MaterialFlags } from \"@babylonjs/core/Materials/materialFlags.js\";\nimport { VertexBuffer } from \"@babylonjs/core/Buffers/buffer.js\";\nimport { Scene } from \"@babylonjs/core/scene.js\";\nimport { RegisterClass } from \"@babylonjs/core/Misc/typeStore.js\";\nimport \"./water.fragment.js\";\nimport \"./water.vertex.js\";\nimport { EffectFallbacks } from \"@babylonjs/core/Materials/effectFallbacks.js\";\nimport { CreateGround } from \"@babylonjs/core/Meshes/Builders/groundBuilder.js\";\nvar WaterMaterialDefines = /** @class */ (function (_super) {\n    __extends(WaterMaterialDefines, _super);\n    function WaterMaterialDefines() {\n        var _this = _super.call(this) || this;\n        _this.BUMP = false;\n        _this.REFLECTION = false;\n        _this.CLIPPLANE = false;\n        _this.CLIPPLANE2 = false;\n        _this.CLIPPLANE3 = false;\n        _this.CLIPPLANE4 = false;\n        _this.CLIPPLANE5 = false;\n        _this.CLIPPLANE6 = false;\n        _this.ALPHATEST = false;\n        _this.DEPTHPREPASS = false;\n        _this.POINTSIZE = false;\n        _this.FOG = false;\n        _this.NORMAL = false;\n        _this.UV1 = false;\n        _this.UV2 = false;\n        _this.VERTEXCOLOR = false;\n        _this.VERTEXALPHA = false;\n        _this.NUM_BONE_INFLUENCERS = 0;\n        _this.BonesPerMesh = 0;\n        _this.INSTANCES = false;\n        _this.INSTANCESCOLOR = false;\n        _this.SPECULARTERM = false;\n        _this.LOGARITHMICDEPTH = false;\n        _this.USE_REVERSE_DEPTHBUFFER = false;\n        _this.FRESNELSEPARATE = false;\n        _this.BUMPSUPERIMPOSE = false;\n        _this.BUMPAFFECTSREFLECTION = false;\n        _this.IMAGEPROCESSING = false;\n        _this.VIGNETTE = false;\n        _this.VIGNETTEBLENDMODEMULTIPLY = false;\n        _this.VIGNETTEBLENDMODEOPAQUE = false;\n        _this.TONEMAPPING = false;\n        _this.TONEMAPPING_ACES = false;\n        _this.CONTRAST = false;\n        _this.EXPOSURE = false;\n        _this.COLORCURVES = false;\n        _this.COLORGRADING = false;\n        _this.COLORGRADING3D = false;\n        _this.SAMPLER3DGREENDEPTH = false;\n        _this.SAMPLER3DBGRMAP = false;\n        _this.IMAGEPROCESSINGPOSTPROCESS = false;\n        _this.SKIPFINALCOLORCLAMP = false;\n        _this.rebuild();\n        return _this;\n    }\n    return WaterMaterialDefines;\n}(MaterialDefines));\nvar WaterMaterial = /** @class */ (function (_super) {\n    __extends(WaterMaterial, _super);\n    /**\n     * Constructor\n     * @param name\n     * @param scene\n     * @param renderTargetSize\n     */\n    function WaterMaterial(name, scene, renderTargetSize) {\n        if (renderTargetSize === void 0) { renderTargetSize = new Vector2(512, 512); }\n        var _this = _super.call(this, name, scene) || this;\n        _this.renderTargetSize = renderTargetSize;\n        _this.diffuseColor = new Color3(1, 1, 1);\n        _this.specularColor = new Color3(0, 0, 0);\n        _this.specularPower = 64;\n        _this._disableLighting = false;\n        _this._maxSimultaneousLights = 4;\n        /**\n         * Defines the wind force.\n         */\n        _this.windForce = 6;\n        /**\n         * Defines the direction of the wind in the plane (X, Z).\n         */\n        _this.windDirection = new Vector2(0, 1);\n        /**\n         * Defines the height of the waves.\n         */\n        _this.waveHeight = 0.4;\n        /**\n         * Defines the bump height related to the bump map.\n         */\n        _this.bumpHeight = 0.4;\n        /**\n         * Defines wether or not: to add a smaller moving bump to less steady waves.\n         */\n        _this._bumpSuperimpose = false;\n        /**\n         * Defines wether or not color refraction and reflection differently with .waterColor2 and .colorBlendFactor2. Non-linear (physically correct) fresnel.\n         */\n        _this._fresnelSeparate = false;\n        /**\n         * Defines wether or not bump Wwves modify the reflection.\n         */\n        _this._bumpAffectsReflection = false;\n        /**\n         * Defines the water color blended with the refraction (near).\n         */\n        _this.waterColor = new Color3(0.1, 0.1, 0.6);\n        /**\n         * Defines the blend factor related to the water color.\n         */\n        _this.colorBlendFactor = 0.2;\n        /**\n         * Defines the water color blended with the reflection (far).\n         */\n        _this.waterColor2 = new Color3(0.1, 0.1, 0.6);\n        /**\n         * Defines the blend factor related to the water color (reflection, far).\n         */\n        _this.colorBlendFactor2 = 0.2;\n        /**\n         * Defines the maximum length of a wave.\n         */\n        _this.waveLength = 0.1;\n        /**\n         * Defines the waves speed.\n         */\n        _this.waveSpeed = 1.0;\n        /**\n         * Defines the number of times waves are repeated. This is typically used to adjust waves count according to the ground's size where the material is applied on.\n         */\n        _this.waveCount = 20;\n        /**\n         * Sets or gets whether or not automatic clipping should be enabled or not. Setting to true will save performances and\n         * will avoid calculating useless pixels in the pixel shader of the water material.\n         */\n        _this.disableClipPlane = false;\n        _this._renderTargets = new SmartArray(16);\n        /*\n         * Private members\n         */\n        _this._mesh = null;\n        _this._reflectionTransform = Matrix.Zero();\n        _this._lastTime = 0;\n        _this._lastDeltaTime = 0;\n        _this._createRenderTargets(_this.getScene(), renderTargetSize);\n        // Create render targets\n        _this.getRenderTargetTextures = function () {\n            _this._renderTargets.reset();\n            _this._renderTargets.push(_this._reflectionRTT);\n            _this._renderTargets.push(_this._refractionRTT);\n            return _this._renderTargets;\n        };\n        _this._imageProcessingConfiguration = _this.getScene().imageProcessingConfiguration;\n        if (_this._imageProcessingConfiguration) {\n            _this._imageProcessingObserver = _this._imageProcessingConfiguration.onUpdateParameters.add(function () {\n                _this._markAllSubMeshesAsImageProcessingDirty();\n            });\n        }\n        return _this;\n    }\n    Object.defineProperty(WaterMaterial.prototype, \"hasRenderTargetTextures\", {\n        /**\n         * Gets a boolean indicating that current material needs to register RTT\n         */\n        get: function () {\n            return true;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WaterMaterial.prototype, \"useLogarithmicDepth\", {\n        get: function () {\n            return this._useLogarithmicDepth;\n        },\n        set: function (value) {\n            this._useLogarithmicDepth = value && this.getScene().getEngine().getCaps().fragmentDepthSupported;\n            this._markAllSubMeshesAsMiscDirty();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WaterMaterial.prototype, \"refractionTexture\", {\n        // Get / Set\n        get: function () {\n            return this._refractionRTT;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(WaterMaterial.prototype, \"reflectionTexture\", {\n        get: function () {\n            return this._reflectionRTT;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // Methods\n    WaterMaterial.prototype.addToRenderList = function (node) {\n        if (this._refractionRTT && this._refractionRTT.renderList) {\n            this._refractionRTT.renderList.push(node);\n        }\n        if (this._reflectionRTT && this._reflectionRTT.renderList) {\n            this._reflectionRTT.renderList.push(node);\n        }\n    };\n    WaterMaterial.prototype.enableRenderTargets = function (enable) {\n        var refreshRate = enable ? 1 : 0;\n        if (this._refractionRTT) {\n            this._refractionRTT.refreshRate = refreshRate;\n        }\n        if (this._reflectionRTT) {\n            this._reflectionRTT.refreshRate = refreshRate;\n        }\n    };\n    WaterMaterial.prototype.getRenderList = function () {\n        return this._refractionRTT ? this._refractionRTT.renderList : [];\n    };\n    Object.defineProperty(WaterMaterial.prototype, \"renderTargetsEnabled\", {\n        get: function () {\n            return !(this._refractionRTT && this._refractionRTT.refreshRate === 0);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    WaterMaterial.prototype.needAlphaBlending = function () {\n        return this.alpha < 1.0;\n    };\n    WaterMaterial.prototype.needAlphaTesting = function () {\n        return false;\n    };\n    WaterMaterial.prototype.getAlphaTestTexture = function () {\n        return null;\n    };\n    WaterMaterial.prototype.isReadyForSubMesh = function (mesh, subMesh, useInstances) {\n        if (this.isFrozen) {\n            if (subMesh.effect && subMesh.effect._wasPreviouslyReady) {\n                return true;\n            }\n        }\n        if (!subMesh.materialDefines) {\n            subMesh.materialDefines = new WaterMaterialDefines();\n        }\n        var defines = subMesh.materialDefines;\n        var scene = this.getScene();\n        if (this._isReadyForSubMesh(subMesh)) {\n            return true;\n        }\n        var engine = scene.getEngine();\n        // Textures\n        if (defines._areTexturesDirty) {\n            defines._needUVs = false;\n            if (scene.texturesEnabled) {\n                if (this.bumpTexture && MaterialFlags.BumpTextureEnabled) {\n                    if (!this.bumpTexture.isReady()) {\n                        return false;\n                    }\n                    else {\n                        defines._needUVs = true;\n                        defines.BUMP = true;\n                    }\n                }\n                if (MaterialFlags.ReflectionTextureEnabled) {\n                    defines.REFLECTION = true;\n                }\n            }\n        }\n        MaterialHelper.PrepareDefinesForFrameBoundValues(scene, engine, defines, useInstances ? true : false);\n        MaterialHelper.PrepareDefinesForMisc(mesh, scene, this._useLogarithmicDepth, this.pointsCloud, this.fogEnabled, this._shouldTurnAlphaTestOn(mesh), defines);\n        if (defines._areMiscDirty) {\n            if (this._fresnelSeparate) {\n                defines.FRESNELSEPARATE = true;\n            }\n            if (this._bumpSuperimpose) {\n                defines.BUMPSUPERIMPOSE = true;\n            }\n            if (this._bumpAffectsReflection) {\n                defines.BUMPAFFECTSREFLECTION = true;\n            }\n        }\n        // Lights\n        defines._needNormals = MaterialHelper.PrepareDefinesForLights(scene, mesh, defines, true, this._maxSimultaneousLights, this._disableLighting);\n        // Image processing\n        if (defines._areImageProcessingDirty && this._imageProcessingConfiguration) {\n            if (!this._imageProcessingConfiguration.isReady()) {\n                return false;\n            }\n            this._imageProcessingConfiguration.prepareDefines(defines);\n            defines.IS_REFLECTION_LINEAR = this.reflectionTexture != null && !this.reflectionTexture.gammaSpace;\n            defines.IS_REFRACTION_LINEAR = this.refractionTexture != null && !this.refractionTexture.gammaSpace;\n        }\n        // Attribs\n        MaterialHelper.PrepareDefinesForAttributes(mesh, defines, true, true);\n        // Configure this\n        this._mesh = mesh;\n        if (this._waitingRenderList) {\n            for (var i = 0; i < this._waitingRenderList.length; i++) {\n                this.addToRenderList(scene.getNodeById(this._waitingRenderList[i]));\n            }\n            this._waitingRenderList = null;\n        }\n        // Get correct effect\n        if (defines.isDirty) {\n            defines.markAsProcessed();\n            scene.resetCachedMaterial();\n            // Fallbacks\n            var fallbacks = new EffectFallbacks();\n            if (defines.FOG) {\n                fallbacks.addFallback(1, \"FOG\");\n            }\n            if (defines.LOGARITHMICDEPTH) {\n                fallbacks.addFallback(0, \"LOGARITHMICDEPTH\");\n            }\n            MaterialHelper.HandleFallbacksForShadows(defines, fallbacks, this.maxSimultaneousLights);\n            if (defines.NUM_BONE_INFLUENCERS > 0) {\n                fallbacks.addCPUSkinningFallback(0, mesh);\n            }\n            //Attributes\n            var attribs = [VertexBuffer.PositionKind];\n            if (defines.NORMAL) {\n                attribs.push(VertexBuffer.NormalKind);\n            }\n            if (defines.UV1) {\n                attribs.push(VertexBuffer.UVKind);\n            }\n            if (defines.UV2) {\n                attribs.push(VertexBuffer.UV2Kind);\n            }\n            if (defines.VERTEXCOLOR) {\n                attribs.push(VertexBuffer.ColorKind);\n            }\n            MaterialHelper.PrepareAttributesForBones(attribs, mesh, defines, fallbacks);\n            MaterialHelper.PrepareAttributesForInstances(attribs, defines);\n            // Legacy browser patch\n            var shaderName = \"water\";\n            var join = defines.toString();\n            var uniforms = [\n                \"world\",\n                \"view\",\n                \"viewProjection\",\n                \"vEyePosition\",\n                \"vLightsType\",\n                \"vDiffuseColor\",\n                \"vSpecularColor\",\n                \"vFogInfos\",\n                \"vFogColor\",\n                \"pointSize\",\n                \"vNormalInfos\",\n                \"mBones\",\n                \"vClipPlane\",\n                \"vClipPlane2\",\n                \"vClipPlane3\",\n                \"vClipPlane4\",\n                \"vClipPlane5\",\n                \"vClipPlane6\",\n                \"normalMatrix\",\n                \"logarithmicDepthConstant\",\n                // Water\n                \"worldReflectionViewProjection\",\n                \"windDirection\",\n                \"waveLength\",\n                \"time\",\n                \"windForce\",\n                \"cameraPosition\",\n                \"bumpHeight\",\n                \"waveHeight\",\n                \"waterColor\",\n                \"waterColor2\",\n                \"colorBlendFactor\",\n                \"colorBlendFactor2\",\n                \"waveSpeed\",\n                \"waveCount\",\n            ];\n            var samplers = [\n                \"normalSampler\",\n                // Water\n                \"refractionSampler\",\n                \"reflectionSampler\",\n            ];\n            var uniformBuffers = new Array();\n            if (ImageProcessingConfiguration) {\n                ImageProcessingConfiguration.PrepareUniforms(uniforms, defines);\n                ImageProcessingConfiguration.PrepareSamplers(samplers, defines);\n            }\n            MaterialHelper.PrepareUniformsAndSamplersList({\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: defines,\n                maxSimultaneousLights: this.maxSimultaneousLights,\n            });\n            subMesh.setEffect(scene.getEngine().createEffect(shaderName, {\n                attributes: attribs,\n                uniformsNames: uniforms,\n                uniformBuffersNames: uniformBuffers,\n                samplers: samplers,\n                defines: join,\n                fallbacks: fallbacks,\n                onCompiled: this.onCompiled,\n                onError: this.onError,\n                indexParameters: { maxSimultaneousLights: this._maxSimultaneousLights },\n            }, engine), defines, this._materialContext);\n        }\n        if (!subMesh.effect || !subMesh.effect.isReady()) {\n            return false;\n        }\n        defines._renderId = scene.getRenderId();\n        subMesh.effect._wasPreviouslyReady = true;\n        return true;\n    };\n    WaterMaterial.prototype.bindForSubMesh = function (world, mesh, subMesh) {\n        var scene = this.getScene();\n        var defines = subMesh.materialDefines;\n        if (!defines) {\n            return;\n        }\n        var effect = subMesh.effect;\n        if (!effect || !this._mesh) {\n            return;\n        }\n        this._activeEffect = effect;\n        // Matrices\n        this.bindOnlyWorldMatrix(world);\n        this._activeEffect.setMatrix(\"viewProjection\", scene.getTransformMatrix());\n        // Bones\n        MaterialHelper.BindBonesParameters(mesh, this._activeEffect);\n        if (this._mustRebind(scene, effect)) {\n            // Textures\n            if (this.bumpTexture && MaterialFlags.BumpTextureEnabled) {\n                this._activeEffect.setTexture(\"normalSampler\", this.bumpTexture);\n                this._activeEffect.setFloat2(\"vNormalInfos\", this.bumpTexture.coordinatesIndex, this.bumpTexture.level);\n                this._activeEffect.setMatrix(\"normalMatrix\", this.bumpTexture.getTextureMatrix());\n            }\n            // Clip plane\n            MaterialHelper.BindClipPlane(this._activeEffect, scene);\n            // Point size\n            if (this.pointsCloud) {\n                this._activeEffect.setFloat(\"pointSize\", this.pointSize);\n            }\n            scene.bindEyePosition(effect);\n        }\n        this._activeEffect.setColor4(\"vDiffuseColor\", this.diffuseColor, this.alpha * mesh.visibility);\n        if (defines.SPECULARTERM) {\n            this._activeEffect.setColor4(\"vSpecularColor\", this.specularColor, this.specularPower);\n        }\n        if (scene.lightsEnabled && !this.disableLighting) {\n            MaterialHelper.BindLights(scene, mesh, this._activeEffect, defines, this.maxSimultaneousLights);\n        }\n        // View\n        if (scene.fogEnabled && mesh.applyFog && scene.fogMode !== Scene.FOGMODE_NONE) {\n            this._activeEffect.setMatrix(\"view\", scene.getViewMatrix());\n        }\n        // Fog\n        MaterialHelper.BindFogParameters(scene, mesh, this._activeEffect);\n        // Log. depth\n        MaterialHelper.BindLogDepth(defines, this._activeEffect, scene);\n        // Water\n        if (MaterialFlags.ReflectionTextureEnabled) {\n            this._activeEffect.setTexture(\"refractionSampler\", this._refractionRTT);\n            this._activeEffect.setTexture(\"reflectionSampler\", this._reflectionRTT);\n        }\n        var wrvp = this._mesh.getWorldMatrix().multiply(this._reflectionTransform).multiply(scene.getProjectionMatrix());\n        // Add delta time. Prevent adding delta time if it hasn't changed.\n        var deltaTime = scene.getEngine().getDeltaTime();\n        if (deltaTime !== this._lastDeltaTime) {\n            this._lastDeltaTime = deltaTime;\n            this._lastTime += this._lastDeltaTime;\n        }\n        this._activeEffect.setMatrix(\"worldReflectionViewProjection\", wrvp);\n        this._activeEffect.setVector2(\"windDirection\", this.windDirection);\n        this._activeEffect.setFloat(\"waveLength\", this.waveLength);\n        this._activeEffect.setFloat(\"time\", this._lastTime / 100000);\n        this._activeEffect.setFloat(\"windForce\", this.windForce);\n        this._activeEffect.setFloat(\"waveHeight\", this.waveHeight);\n        this._activeEffect.setFloat(\"bumpHeight\", this.bumpHeight);\n        this._activeEffect.setColor4(\"waterColor\", this.waterColor, 1.0);\n        this._activeEffect.setFloat(\"colorBlendFactor\", this.colorBlendFactor);\n        this._activeEffect.setColor4(\"waterColor2\", this.waterColor2, 1.0);\n        this._activeEffect.setFloat(\"colorBlendFactor2\", this.colorBlendFactor2);\n        this._activeEffect.setFloat(\"waveSpeed\", this.waveSpeed);\n        this._activeEffect.setFloat(\"waveCount\", this.waveCount);\n        // image processing\n        if (this._imageProcessingConfiguration && !this._imageProcessingConfiguration.applyByPostProcess) {\n            this._imageProcessingConfiguration.bind(this._activeEffect);\n        }\n        this._afterBind(mesh, this._activeEffect);\n    };\n    WaterMaterial.prototype._createRenderTargets = function (scene, renderTargetSize) {\n        var _this = this;\n        // Render targets\n        this._refractionRTT = new RenderTargetTexture(name + \"_refraction\", { width: renderTargetSize.x, height: renderTargetSize.y }, scene, false, true);\n        this._refractionRTT.wrapU = Constants.TEXTURE_MIRROR_ADDRESSMODE;\n        this._refractionRTT.wrapV = Constants.TEXTURE_MIRROR_ADDRESSMODE;\n        this._refractionRTT.ignoreCameraViewport = true;\n        this._reflectionRTT = new RenderTargetTexture(name + \"_reflection\", { width: renderTargetSize.x, height: renderTargetSize.y }, scene, false, true);\n        this._reflectionRTT.wrapU = Constants.TEXTURE_MIRROR_ADDRESSMODE;\n        this._reflectionRTT.wrapV = Constants.TEXTURE_MIRROR_ADDRESSMODE;\n        this._reflectionRTT.ignoreCameraViewport = true;\n        var isVisible;\n        var clipPlane = null;\n        var savedViewMatrix;\n        var mirrorMatrix = Matrix.Zero();\n        this._refractionRTT.onBeforeRender = function () {\n            if (_this._mesh) {\n                isVisible = _this._mesh.isVisible;\n                _this._mesh.isVisible = false;\n            }\n            // Clip plane\n            if (!_this.disableClipPlane) {\n                clipPlane = scene.clipPlane;\n                var positiony = _this._mesh ? _this._mesh.position.y : 0.0;\n                scene.clipPlane = Plane.FromPositionAndNormal(new Vector3(0, positiony + 0.05, 0), new Vector3(0, 1, 0));\n            }\n        };\n        this._refractionRTT.onAfterRender = function () {\n            if (_this._mesh) {\n                _this._mesh.isVisible = isVisible;\n            }\n            // Clip plane\n            if (!_this.disableClipPlane) {\n                scene.clipPlane = clipPlane;\n            }\n        };\n        this._reflectionRTT.onBeforeRender = function () {\n            if (_this._mesh) {\n                isVisible = _this._mesh.isVisible;\n                _this._mesh.isVisible = false;\n            }\n            // Clip plane\n            if (!_this.disableClipPlane) {\n                clipPlane = scene.clipPlane;\n                var positiony = _this._mesh ? _this._mesh.position.y : 0.0;\n                scene.clipPlane = Plane.FromPositionAndNormal(new Vector3(0, positiony - 0.05, 0), new Vector3(0, -1, 0));\n                Matrix.ReflectionToRef(scene.clipPlane, mirrorMatrix);\n            }\n            // Transform\n            savedViewMatrix = scene.getViewMatrix();\n            mirrorMatrix.multiplyToRef(savedViewMatrix, _this._reflectionTransform);\n            scene.setTransformMatrix(_this._reflectionTransform, scene.getProjectionMatrix());\n            scene.getEngine().cullBackFaces = false;\n            scene._mirroredCameraPosition = Vector3.TransformCoordinates(scene.activeCamera.position, mirrorMatrix);\n        };\n        this._reflectionRTT.onAfterRender = function () {\n            if (_this._mesh) {\n                _this._mesh.isVisible = isVisible;\n            }\n            // Clip plane\n            scene.clipPlane = clipPlane;\n            // Transform\n            scene.setTransformMatrix(savedViewMatrix, scene.getProjectionMatrix());\n            scene.getEngine().cullBackFaces = null;\n            scene._mirroredCameraPosition = null;\n        };\n    };\n    WaterMaterial.prototype.getAnimatables = function () {\n        var results = [];\n        if (this.bumpTexture && this.bumpTexture.animations && this.bumpTexture.animations.length > 0) {\n            results.push(this.bumpTexture);\n        }\n        if (this._reflectionRTT && this._reflectionRTT.animations && this._reflectionRTT.animations.length > 0) {\n            results.push(this._reflectionRTT);\n        }\n        if (this._refractionRTT && this._refractionRTT.animations && this._refractionRTT.animations.length > 0) {\n            results.push(this._refractionRTT);\n        }\n        return results;\n    };\n    WaterMaterial.prototype.getActiveTextures = function () {\n        var activeTextures = _super.prototype.getActiveTextures.call(this);\n        if (this._bumpTexture) {\n            activeTextures.push(this._bumpTexture);\n        }\n        return activeTextures;\n    };\n    WaterMaterial.prototype.hasTexture = function (texture) {\n        if (_super.prototype.hasTexture.call(this, texture)) {\n            return true;\n        }\n        if (this._bumpTexture === texture) {\n            return true;\n        }\n        return false;\n    };\n    WaterMaterial.prototype.dispose = function (forceDisposeEffect) {\n        if (this.bumpTexture) {\n            this.bumpTexture.dispose();\n        }\n        var index = this.getScene().customRenderTargets.indexOf(this._refractionRTT);\n        if (index != -1) {\n            this.getScene().customRenderTargets.splice(index, 1);\n        }\n        index = -1;\n        index = this.getScene().customRenderTargets.indexOf(this._reflectionRTT);\n        if (index != -1) {\n            this.getScene().customRenderTargets.splice(index, 1);\n        }\n        if (this._reflectionRTT) {\n            this._reflectionRTT.dispose();\n        }\n        if (this._refractionRTT) {\n            this._refractionRTT.dispose();\n        }\n        // Remove image-processing observer\n        if (this._imageProcessingConfiguration && this._imageProcessingObserver) {\n            this._imageProcessingConfiguration.onUpdateParameters.remove(this._imageProcessingObserver);\n        }\n        _super.prototype.dispose.call(this, forceDisposeEffect);\n    };\n    WaterMaterial.prototype.clone = function (name) {\n        var _this = this;\n        return SerializationHelper.Clone(function () { return new WaterMaterial(name, _this.getScene()); }, this);\n    };\n    WaterMaterial.prototype.serialize = function () {\n        var serializationObject = _super.prototype.serialize.call(this);\n        serializationObject.customType = \"BABYLON.WaterMaterial\";\n        serializationObject.renderList = [];\n        if (this._refractionRTT && this._refractionRTT.renderList) {\n            for (var i = 0; i < this._refractionRTT.renderList.length; i++) {\n                serializationObject.renderList.push(this._refractionRTT.renderList[i].id);\n            }\n        }\n        return serializationObject;\n    };\n    WaterMaterial.prototype.getClassName = function () {\n        return \"WaterMaterial\";\n    };\n    // Statics\n    WaterMaterial.Parse = function (source, scene, rootUrl) {\n        var mat = SerializationHelper.Parse(function () { return new WaterMaterial(source.name, scene); }, source, scene, rootUrl);\n        mat._waitingRenderList = source.renderList;\n        return mat;\n    };\n    WaterMaterial.CreateDefaultMesh = function (name, scene) {\n        var mesh = CreateGround(name, { width: 512, height: 512, subdivisions: 32, updatable: false }, scene);\n        return mesh;\n    };\n    __decorate([\n        serializeAsTexture(\"bumpTexture\")\n    ], WaterMaterial.prototype, \"_bumpTexture\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsTexturesDirty\")\n    ], WaterMaterial.prototype, \"bumpTexture\", void 0);\n    __decorate([\n        serializeAsColor3()\n    ], WaterMaterial.prototype, \"diffuseColor\", void 0);\n    __decorate([\n        serializeAsColor3()\n    ], WaterMaterial.prototype, \"specularColor\", void 0);\n    __decorate([\n        serialize()\n    ], WaterMaterial.prototype, \"specularPower\", void 0);\n    __decorate([\n        serialize(\"disableLighting\")\n    ], WaterMaterial.prototype, \"_disableLighting\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsLightsDirty\")\n    ], WaterMaterial.prototype, \"disableLighting\", void 0);\n    __decorate([\n        serialize(\"maxSimultaneousLights\")\n    ], WaterMaterial.prototype, \"_maxSimultaneousLights\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsLightsDirty\")\n    ], WaterMaterial.prototype, \"maxSimultaneousLights\", void 0);\n    __decorate([\n        serialize()\n    ], WaterMaterial.prototype, \"windForce\", void 0);\n    __decorate([\n        serializeAsVector2()\n    ], WaterMaterial.prototype, \"windDirection\", void 0);\n    __decorate([\n        serialize()\n    ], WaterMaterial.prototype, \"waveHeight\", void 0);\n    __decorate([\n        serialize()\n    ], WaterMaterial.prototype, \"bumpHeight\", void 0);\n    __decorate([\n        serialize(\"bumpSuperimpose\")\n    ], WaterMaterial.prototype, \"_bumpSuperimpose\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsMiscDirty\")\n    ], WaterMaterial.prototype, \"bumpSuperimpose\", void 0);\n    __decorate([\n        serialize(\"fresnelSeparate\")\n    ], WaterMaterial.prototype, \"_fresnelSeparate\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsMiscDirty\")\n    ], WaterMaterial.prototype, \"fresnelSeparate\", void 0);\n    __decorate([\n        serialize(\"bumpAffectsReflection\")\n    ], WaterMaterial.prototype, \"_bumpAffectsReflection\", void 0);\n    __decorate([\n        expandToProperty(\"_markAllSubMeshesAsMiscDirty\")\n    ], WaterMaterial.prototype, \"bumpAffectsReflection\", void 0);\n    __decorate([\n        serializeAsColor3()\n    ], WaterMaterial.prototype, \"waterColor\", void 0);\n    __decorate([\n        serialize()\n    ], WaterMaterial.prototype, \"colorBlendFactor\", void 0);\n    __decorate([\n        serializeAsColor3()\n    ], WaterMaterial.prototype, \"waterColor2\", void 0);\n    __decorate([\n        serialize()\n    ], WaterMaterial.prototype, \"colorBlendFactor2\", void 0);\n    __decorate([\n        serialize()\n    ], WaterMaterial.prototype, \"waveLength\", void 0);\n    __decorate([\n        serialize()\n    ], WaterMaterial.prototype, \"waveSpeed\", void 0);\n    __decorate([\n        serialize()\n    ], WaterMaterial.prototype, \"waveCount\", void 0);\n    __decorate([\n        serialize()\n    ], WaterMaterial.prototype, \"disableClipPlane\", void 0);\n    __decorate([\n        serialize()\n    ], WaterMaterial.prototype, \"useLogarithmicDepth\", null);\n    return WaterMaterial;\n}(PushMaterial));\nexport { WaterMaterial };\nRegisterClass(\"BABYLON.WaterMaterial\", WaterMaterial);\n//# sourceMappingURL=waterMaterial.js.map","import { Vector3, Quaternion } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { Tools } from \"@babylonjs/core/Misc/tools.js\";\nimport { Animation } from \"@babylonjs/core/Animations/animation.js\";\nimport { TransformNode } from \"@babylonjs/core/Meshes/transformNode.js\";\nimport { MorphTarget } from \"@babylonjs/core/Morph/morphTarget.js\";\nimport { Mesh } from \"@babylonjs/core/Meshes/mesh.js\";\nimport { _GLTFUtilities } from \"./glTFUtilities.js\";\nimport { AnimationKeyInterpolation } from \"@babylonjs/core/Animations/animationKey.js\";\n/**\n * @hidden\n * Enum for handling in tangent and out tangent.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nvar _TangentType;\n(function (_TangentType) {\n    /**\n     * Specifies that input tangents are used.\n     */\n    _TangentType[_TangentType[\"INTANGENT\"] = 0] = \"INTANGENT\";\n    /**\n     * Specifies that output tangents are used.\n     */\n    _TangentType[_TangentType[\"OUTTANGENT\"] = 1] = \"OUTTANGENT\";\n})(_TangentType || (_TangentType = {}));\n/**\n * @hidden\n * Utility class for generating glTF animation data from BabylonJS.\n */\nvar _GLTFAnimation = /** @class */ (function () {\n    function _GLTFAnimation() {\n    }\n    /**\n     * @ignore\n     *\n     * Creates glTF channel animation from BabylonJS animation.\n     * @param babylonTransformNode - BabylonJS mesh.\n     * @param animation - animation.\n     * @param animationChannelTargetPath - The target animation channel.\n     * @param convertToRightHandedSystem - Specifies if the values should be converted to right-handed.\n     * @param useQuaternion - Specifies if quaternions are used.\n     * @returns nullable IAnimationData\n     */\n    _GLTFAnimation._CreateNodeAnimation = function (babylonTransformNode, animation, animationChannelTargetPath, convertToRightHandedSystem, useQuaternion, animationSampleRate) {\n        var inputs = [];\n        var outputs = [];\n        var keyFrames = animation.getKeys();\n        var minMaxKeyFrames = _GLTFAnimation._CalculateMinMaxKeyFrames(keyFrames);\n        var interpolationOrBake = _GLTFAnimation._DeduceInterpolation(keyFrames, animationChannelTargetPath, useQuaternion);\n        var frameDelta = minMaxKeyFrames.max - minMaxKeyFrames.min;\n        var interpolation = interpolationOrBake.interpolationType;\n        var shouldBakeAnimation = interpolationOrBake.shouldBakeAnimation;\n        if (shouldBakeAnimation) {\n            _GLTFAnimation._CreateBakedAnimation(babylonTransformNode, animation, animationChannelTargetPath, minMaxKeyFrames.min, minMaxKeyFrames.max, animation.framePerSecond, animationSampleRate, inputs, outputs, minMaxKeyFrames, convertToRightHandedSystem, useQuaternion);\n        }\n        else {\n            if (interpolation === \"LINEAR\" /* LINEAR */ || interpolation === \"STEP\" /* STEP */) {\n                _GLTFAnimation._CreateLinearOrStepAnimation(babylonTransformNode, animation, animationChannelTargetPath, frameDelta, inputs, outputs, convertToRightHandedSystem, useQuaternion);\n            }\n            else if (interpolation === \"CUBICSPLINE\" /* CUBICSPLINE */) {\n                _GLTFAnimation._CreateCubicSplineAnimation(babylonTransformNode, animation, animationChannelTargetPath, frameDelta, inputs, outputs, convertToRightHandedSystem, useQuaternion);\n            }\n            else {\n                _GLTFAnimation._CreateBakedAnimation(babylonTransformNode, animation, animationChannelTargetPath, minMaxKeyFrames.min, minMaxKeyFrames.max, animation.framePerSecond, animationSampleRate, inputs, outputs, minMaxKeyFrames, convertToRightHandedSystem, useQuaternion);\n            }\n        }\n        if (inputs.length && outputs.length) {\n            var result = {\n                inputs: inputs,\n                outputs: outputs,\n                samplerInterpolation: interpolation,\n                inputsMin: shouldBakeAnimation ? minMaxKeyFrames.min : Tools.FloatRound(minMaxKeyFrames.min / animation.framePerSecond),\n                inputsMax: shouldBakeAnimation ? minMaxKeyFrames.max : Tools.FloatRound(minMaxKeyFrames.max / animation.framePerSecond),\n            };\n            return result;\n        }\n        return null;\n    };\n    _GLTFAnimation._DeduceAnimationInfo = function (animation) {\n        var animationChannelTargetPath = null;\n        var dataAccessorType = \"VEC3\" /* VEC3 */;\n        var useQuaternion = false;\n        var property = animation.targetProperty.split(\".\");\n        switch (property[0]) {\n            case \"scaling\": {\n                animationChannelTargetPath = \"scale\" /* SCALE */;\n                break;\n            }\n            case \"position\": {\n                animationChannelTargetPath = \"translation\" /* TRANSLATION */;\n                break;\n            }\n            case \"rotation\": {\n                dataAccessorType = \"VEC4\" /* VEC4 */;\n                animationChannelTargetPath = \"rotation\" /* ROTATION */;\n                break;\n            }\n            case \"rotationQuaternion\": {\n                dataAccessorType = \"VEC4\" /* VEC4 */;\n                useQuaternion = true;\n                animationChannelTargetPath = \"rotation\" /* ROTATION */;\n                break;\n            }\n            case \"influence\": {\n                dataAccessorType = \"SCALAR\" /* SCALAR */;\n                animationChannelTargetPath = \"weights\" /* WEIGHTS */;\n                break;\n            }\n            default: {\n                Tools.Error(\"Unsupported animatable property \".concat(property[0]));\n            }\n        }\n        if (animationChannelTargetPath) {\n            return { animationChannelTargetPath: animationChannelTargetPath, dataAccessorType: dataAccessorType, useQuaternion: useQuaternion };\n        }\n        else {\n            Tools.Error(\"animation channel target path and data accessor type could be deduced\");\n        }\n        return null;\n    };\n    /**\n     * @ignore\n     * Create node animations from the transform node animations\n     * @param babylonNode\n     * @param runtimeGLTFAnimation\n     * @param idleGLTFAnimations\n     * @param nodeMap\n     * @param nodes\n     * @param binaryWriter\n     * @param bufferViews\n     * @param accessors\n     * @param convertToRightHandedSystem\n     * @param animationSampleRate\n     */\n    _GLTFAnimation._CreateNodeAnimationFromNodeAnimations = function (babylonNode, runtimeGLTFAnimation, idleGLTFAnimations, nodeMap, nodes, binaryWriter, bufferViews, accessors, convertToRightHandedSystem, animationSampleRate) {\n        var glTFAnimation;\n        if (babylonNode instanceof TransformNode) {\n            if (babylonNode.animations) {\n                for (var _i = 0, _a = babylonNode.animations; _i < _a.length; _i++) {\n                    var animation = _a[_i];\n                    var animationInfo = _GLTFAnimation._DeduceAnimationInfo(animation);\n                    if (animationInfo) {\n                        glTFAnimation = {\n                            name: animation.name,\n                            samplers: [],\n                            channels: [],\n                        };\n                        _GLTFAnimation._AddAnimation(\"\".concat(animation.name), animation.hasRunningRuntimeAnimations ? runtimeGLTFAnimation : glTFAnimation, babylonNode, animation, animationInfo.dataAccessorType, animationInfo.animationChannelTargetPath, nodeMap, binaryWriter, bufferViews, accessors, convertToRightHandedSystem, animationInfo.useQuaternion, animationSampleRate);\n                        if (glTFAnimation.samplers.length && glTFAnimation.channels.length) {\n                            idleGLTFAnimations.push(glTFAnimation);\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @ignore\n     * Create individual morph animations from the mesh's morph target animation tracks\n     * @param babylonNode\n     * @param runtimeGLTFAnimation\n     * @param idleGLTFAnimations\n     * @param nodeMap\n     * @param nodes\n     * @param binaryWriter\n     * @param bufferViews\n     * @param accessors\n     * @param convertToRightHandedSystem\n     * @param animationSampleRate\n     */\n    _GLTFAnimation._CreateMorphTargetAnimationFromMorphTargetAnimations = function (babylonNode, runtimeGLTFAnimation, idleGLTFAnimations, nodeMap, nodes, binaryWriter, bufferViews, accessors, convertToRightHandedSystem, animationSampleRate) {\n        var glTFAnimation;\n        if (babylonNode instanceof Mesh) {\n            var morphTargetManager = babylonNode.morphTargetManager;\n            if (morphTargetManager) {\n                for (var i = 0; i < morphTargetManager.numTargets; ++i) {\n                    var morphTarget = morphTargetManager.getTarget(i);\n                    for (var _i = 0, _a = morphTarget.animations; _i < _a.length; _i++) {\n                        var animation = _a[_i];\n                        var combinedAnimation = new Animation(\"\".concat(animation.name), \"influence\", animation.framePerSecond, animation.dataType, animation.loopMode, animation.enableBlending);\n                        var combinedAnimationKeys = [];\n                        var animationKeys = animation.getKeys();\n                        for (var j = 0; j < animationKeys.length; ++j) {\n                            var animationKey = animationKeys[j];\n                            for (var k = 0; k < morphTargetManager.numTargets; ++k) {\n                                if (k == i) {\n                                    combinedAnimationKeys.push(animationKey);\n                                }\n                                else {\n                                    combinedAnimationKeys.push({ frame: animationKey.frame, value: 0 });\n                                }\n                            }\n                        }\n                        combinedAnimation.setKeys(combinedAnimationKeys);\n                        var animationInfo = _GLTFAnimation._DeduceAnimationInfo(combinedAnimation);\n                        if (animationInfo) {\n                            glTFAnimation = {\n                                name: combinedAnimation.name,\n                                samplers: [],\n                                channels: [],\n                            };\n                            _GLTFAnimation._AddAnimation(animation.name, animation.hasRunningRuntimeAnimations ? runtimeGLTFAnimation : glTFAnimation, babylonNode, combinedAnimation, animationInfo.dataAccessorType, animationInfo.animationChannelTargetPath, nodeMap, binaryWriter, bufferViews, accessors, convertToRightHandedSystem, animationInfo.useQuaternion, animationSampleRate, morphTargetManager.numTargets);\n                            if (glTFAnimation.samplers.length && glTFAnimation.channels.length) {\n                                idleGLTFAnimations.push(glTFAnimation);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * @ignore\n     * Create node and morph animations from the animation groups\n     * @param babylonScene\n     * @param glTFAnimations\n     * @param nodeMap\n     * @param nodes\n     * @param binaryWriter\n     * @param bufferViews\n     * @param accessors\n     * @param convertToRightHandedSystemMap\n     * @param animationSampleRate\n     */\n    _GLTFAnimation._CreateNodeAndMorphAnimationFromAnimationGroups = function (babylonScene, glTFAnimations, nodeMap, nodes, binaryWriter, bufferViews, accessors, convertToRightHandedSystemMap, animationSampleRate) {\n        var _a;\n        var glTFAnimation;\n        if (babylonScene.animationGroups) {\n            var animationGroups = babylonScene.animationGroups;\n            var _loop_1 = function (animationGroup) {\n                var morphAnimations = new Map();\n                var sampleAnimations = new Map();\n                var morphAnimationMeshes = new Set();\n                var animationGroupFrameDiff = animationGroup.to - animationGroup.from;\n                glTFAnimation = {\n                    name: animationGroup.name,\n                    channels: [],\n                    samplers: [],\n                };\n                var _loop_2 = function (i) {\n                    var targetAnimation = animationGroup.targetedAnimations[i];\n                    var target = targetAnimation.target;\n                    var animation = targetAnimation.animation;\n                    if (target instanceof TransformNode || (target.length === 1 && target[0] instanceof TransformNode)) {\n                        var animationInfo = _GLTFAnimation._DeduceAnimationInfo(targetAnimation.animation);\n                        if (animationInfo) {\n                            var babylonTransformNode = target instanceof TransformNode ? target : target[0];\n                            var convertToRightHandedSystem = convertToRightHandedSystemMap[babylonTransformNode.uniqueId];\n                            _GLTFAnimation._AddAnimation(\"\".concat(animation.name), glTFAnimation, babylonTransformNode, animation, animationInfo.dataAccessorType, animationInfo.animationChannelTargetPath, nodeMap, binaryWriter, bufferViews, accessors, convertToRightHandedSystem, animationInfo.useQuaternion, animationSampleRate);\n                        }\n                    }\n                    else if (target instanceof MorphTarget || (target.length === 1 && target[0] instanceof MorphTarget)) {\n                        var animationInfo = _GLTFAnimation._DeduceAnimationInfo(targetAnimation.animation);\n                        if (animationInfo) {\n                            var babylonMorphTarget_1 = target instanceof MorphTarget ? target : target[0];\n                            if (babylonMorphTarget_1) {\n                                var babylonMorphTargetManager_1 = babylonScene.morphTargetManagers.find(function (morphTargetManager) {\n                                    for (var j = 0; j < morphTargetManager.numTargets; ++j) {\n                                        if (morphTargetManager.getTarget(j) === babylonMorphTarget_1) {\n                                            return true;\n                                        }\n                                    }\n                                    return false;\n                                });\n                                if (babylonMorphTargetManager_1) {\n                                    var babylonMesh = babylonScene.meshes.find(function (mesh) {\n                                        return mesh.morphTargetManager === babylonMorphTargetManager_1;\n                                    });\n                                    if (babylonMesh) {\n                                        if (!morphAnimations.has(babylonMesh)) {\n                                            morphAnimations.set(babylonMesh, new Map());\n                                        }\n                                        (_a = morphAnimations.get(babylonMesh)) === null || _a === void 0 ? void 0 : _a.set(babylonMorphTarget_1, animation);\n                                        morphAnimationMeshes.add(babylonMesh);\n                                        sampleAnimations.set(babylonMesh, animation);\n                                    }\n                                }\n                            }\n                        }\n                    }\n                };\n                for (var i = 0; i < animationGroup.targetedAnimations.length; ++i) {\n                    _loop_2(i);\n                }\n                morphAnimationMeshes.forEach(function (mesh) {\n                    var morphTargetManager = mesh.morphTargetManager;\n                    var combinedAnimationGroup = null;\n                    var animationKeys = [];\n                    var sampleAnimation = sampleAnimations.get(mesh);\n                    var sampleAnimationKeys = sampleAnimation.getKeys();\n                    var numAnimationKeys = sampleAnimationKeys.length;\n                    /*\n                        Due to how glTF expects morph target animation data to be formatted, we need to rearrange the individual morph target animation tracks,\n                        such that we have a single animation, where a given keyframe input value has successive output values for each morph target belonging to the manager.\n                        See: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\n                        We do this via constructing a new Animation track, and interleaving the frames of each morph target animation track in the current Animation Group\n                        We reuse the Babylon Animation data structure for ease of handling export of cubic spline animation keys, and to reuse the\n                        existing _GLTFAnimation.AddAnimation codepath with minimal modification, however the constructed Babylon Animation is NOT intended for use in-engine.\n                    */\n                    for (var i = 0; i < numAnimationKeys; ++i) {\n                        for (var j = 0; j < morphTargetManager.numTargets; ++j) {\n                            var morphTarget = morphTargetManager.getTarget(j);\n                            var animationsByMorphTarget = morphAnimations.get(mesh);\n                            if (animationsByMorphTarget) {\n                                var morphTargetAnimation = animationsByMorphTarget.get(morphTarget);\n                                if (morphTargetAnimation) {\n                                    if (!combinedAnimationGroup) {\n                                        combinedAnimationGroup = new Animation(\"\".concat(animationGroup.name, \"_\").concat(mesh.name, \"_MorphWeightAnimation\"), \"influence\", morphTargetAnimation.framePerSecond, Animation.ANIMATIONTYPE_FLOAT, morphTargetAnimation.loopMode, morphTargetAnimation.enableBlending);\n                                    }\n                                    animationKeys.push(morphTargetAnimation.getKeys()[i]);\n                                }\n                                else {\n                                    animationKeys.push({\n                                        frame: animationGroup.from + (animationGroupFrameDiff / numAnimationKeys) * i,\n                                        value: morphTarget.influence,\n                                        inTangent: sampleAnimationKeys[0].inTangent ? 0 : undefined,\n                                        outTangent: sampleAnimationKeys[0].outTangent ? 0 : undefined,\n                                    });\n                                }\n                            }\n                        }\n                    }\n                    combinedAnimationGroup.setKeys(animationKeys);\n                    var animationInfo = _GLTFAnimation._DeduceAnimationInfo(combinedAnimationGroup);\n                    if (animationInfo) {\n                        _GLTFAnimation._AddAnimation(\"\".concat(animationGroup.name, \"_\").concat(mesh.name, \"_MorphWeightAnimation\"), glTFAnimation, mesh, combinedAnimationGroup, animationInfo.dataAccessorType, animationInfo.animationChannelTargetPath, nodeMap, binaryWriter, bufferViews, accessors, false, animationInfo.useQuaternion, animationSampleRate, morphTargetManager === null || morphTargetManager === void 0 ? void 0 : morphTargetManager.numTargets);\n                    }\n                });\n                if (glTFAnimation.channels.length && glTFAnimation.samplers.length) {\n                    glTFAnimations.push(glTFAnimation);\n                }\n            };\n            for (var _i = 0, animationGroups_1 = animationGroups; _i < animationGroups_1.length; _i++) {\n                var animationGroup = animationGroups_1[_i];\n                _loop_1(animationGroup);\n            }\n        }\n    };\n    _GLTFAnimation._AddAnimation = function (name, glTFAnimation, babylonTransformNode, animation, dataAccessorType, animationChannelTargetPath, nodeMap, binaryWriter, bufferViews, accessors, convertToRightHandedSystem, useQuaternion, animationSampleRate, morphAnimationChannels) {\n        var animationData = _GLTFAnimation._CreateNodeAnimation(babylonTransformNode, animation, animationChannelTargetPath, convertToRightHandedSystem, useQuaternion, animationSampleRate);\n        var bufferView;\n        var accessor;\n        var keyframeAccessorIndex;\n        var dataAccessorIndex;\n        var outputLength;\n        var animationSampler;\n        var animationChannel;\n        if (animationData) {\n            /*\n             * Now that we have the glTF converted morph target animation data,\n             * we can remove redundant input data so that we have n input frames,\n             * and morphAnimationChannels * n output frames\n             */\n            if (morphAnimationChannels) {\n                var index = 0;\n                var currentInput = 0;\n                var newInputs = [];\n                while (animationData.inputs.length > 0) {\n                    currentInput = animationData.inputs.shift();\n                    if (index % morphAnimationChannels == 0) {\n                        newInputs.push(currentInput);\n                    }\n                    index++;\n                }\n                animationData.inputs = newInputs;\n            }\n            var nodeIndex = nodeMap[babylonTransformNode.uniqueId];\n            // Creates buffer view and accessor for key frames.\n            var byteLength = animationData.inputs.length * 4;\n            bufferView = _GLTFUtilities._CreateBufferView(0, binaryWriter.getByteOffset(), byteLength, undefined, \"\".concat(name, \"  keyframe data view\"));\n            bufferViews.push(bufferView);\n            animationData.inputs.forEach(function (input) {\n                binaryWriter.setFloat32(input);\n            });\n            accessor = _GLTFUtilities._CreateAccessor(bufferViews.length - 1, \"\".concat(name, \"  keyframes\"), \"SCALAR\" /* SCALAR */, 5126 /* FLOAT */, animationData.inputs.length, null, [animationData.inputsMin], [animationData.inputsMax]);\n            accessors.push(accessor);\n            keyframeAccessorIndex = accessors.length - 1;\n            // create bufferview and accessor for keyed values.\n            outputLength = animationData.outputs.length;\n            byteLength = _GLTFUtilities._GetDataAccessorElementCount(dataAccessorType) * 4 * animationData.outputs.length;\n            // check for in and out tangents\n            bufferView = _GLTFUtilities._CreateBufferView(0, binaryWriter.getByteOffset(), byteLength, undefined, \"\".concat(name, \"  data view\"));\n            bufferViews.push(bufferView);\n            animationData.outputs.forEach(function (output) {\n                output.forEach(function (entry) {\n                    binaryWriter.setFloat32(entry);\n                });\n            });\n            accessor = _GLTFUtilities._CreateAccessor(bufferViews.length - 1, \"\".concat(name, \"  data\"), dataAccessorType, 5126 /* FLOAT */, outputLength, null, null, null);\n            accessors.push(accessor);\n            dataAccessorIndex = accessors.length - 1;\n            // create sampler\n            animationSampler = {\n                interpolation: animationData.samplerInterpolation,\n                input: keyframeAccessorIndex,\n                output: dataAccessorIndex,\n            };\n            glTFAnimation.samplers.push(animationSampler);\n            // create channel\n            animationChannel = {\n                sampler: glTFAnimation.samplers.length - 1,\n                target: {\n                    node: nodeIndex,\n                    path: animationChannelTargetPath,\n                },\n            };\n            glTFAnimation.channels.push(animationChannel);\n        }\n    };\n    /**\n     * Create a baked animation\n     * @param babylonTransformNode BabylonJS mesh\n     * @param animation BabylonJS animation corresponding to the BabylonJS mesh\n     * @param animationChannelTargetPath animation target channel\n     * @param minFrame minimum animation frame\n     * @param maxFrame maximum animation frame\n     * @param fps frames per second of the animation\n     * @param sampleRate\n     * @param inputs input key frames of the animation\n     * @param outputs output key frame data of the animation\n     * @param minMaxFrames\n     * @param minMaxFrames.min\n     * @param minMaxFrames.max\n     * @param convertToRightHandedSystem converts the values to right-handed\n     * @param useQuaternion specifies if quaternions should be used\n     */\n    _GLTFAnimation._CreateBakedAnimation = function (babylonTransformNode, animation, animationChannelTargetPath, minFrame, maxFrame, fps, sampleRate, inputs, outputs, minMaxFrames, convertToRightHandedSystem, useQuaternion) {\n        var value;\n        var quaternionCache = Quaternion.Identity();\n        var previousTime = null;\n        var time;\n        var maxUsedFrame = null;\n        var currKeyFrame = null;\n        var nextKeyFrame = null;\n        var prevKeyFrame = null;\n        var endFrame = null;\n        minMaxFrames.min = Tools.FloatRound(minFrame / fps);\n        var keyFrames = animation.getKeys();\n        for (var i = 0, length_1 = keyFrames.length; i < length_1; ++i) {\n            endFrame = null;\n            currKeyFrame = keyFrames[i];\n            if (i + 1 < length_1) {\n                nextKeyFrame = keyFrames[i + 1];\n                if ((currKeyFrame.value.equals && currKeyFrame.value.equals(nextKeyFrame.value)) || currKeyFrame.value === nextKeyFrame.value) {\n                    if (i === 0) {\n                        // set the first frame to itself\n                        endFrame = currKeyFrame.frame;\n                    }\n                    else {\n                        continue;\n                    }\n                }\n                else {\n                    endFrame = nextKeyFrame.frame;\n                }\n            }\n            else {\n                // at the last key frame\n                prevKeyFrame = keyFrames[i - 1];\n                if ((currKeyFrame.value.equals && currKeyFrame.value.equals(prevKeyFrame.value)) || currKeyFrame.value === prevKeyFrame.value) {\n                    continue;\n                }\n                else {\n                    endFrame = maxFrame;\n                }\n            }\n            if (endFrame) {\n                for (var f = currKeyFrame.frame; f <= endFrame; f += sampleRate) {\n                    time = Tools.FloatRound(f / fps);\n                    if (time === previousTime) {\n                        continue;\n                    }\n                    previousTime = time;\n                    maxUsedFrame = time;\n                    var state = {\n                        key: 0,\n                        repeatCount: 0,\n                        loopMode: animation.loopMode,\n                    };\n                    value = animation._interpolate(f, state);\n                    _GLTFAnimation._SetInterpolatedValue(babylonTransformNode, value, time, animation, animationChannelTargetPath, quaternionCache, inputs, outputs, convertToRightHandedSystem, useQuaternion);\n                }\n            }\n        }\n        if (maxUsedFrame) {\n            minMaxFrames.max = maxUsedFrame;\n        }\n    };\n    _GLTFAnimation._ConvertFactorToVector3OrQuaternion = function (factor, babylonTransformNode, animation, animationType, animationChannelTargetPath, convertToRightHandedSystem, useQuaternion) {\n        var property;\n        var componentName;\n        var value = null;\n        var basePositionRotationOrScale = _GLTFAnimation._GetBasePositionRotationOrScale(babylonTransformNode, animationChannelTargetPath, convertToRightHandedSystem, useQuaternion);\n        if (animationType === Animation.ANIMATIONTYPE_FLOAT) {\n            // handles single component x, y, z or w component animation by using a base property and animating over a component.\n            property = animation.targetProperty.split(\".\");\n            componentName = property ? property[1] : \"\"; // x, y, or z component\n            value = useQuaternion ? Quaternion.FromArray(basePositionRotationOrScale).normalize() : Vector3.FromArray(basePositionRotationOrScale);\n            switch (componentName) {\n                case \"x\": {\n                    value[componentName] = convertToRightHandedSystem && useQuaternion && animationChannelTargetPath !== \"scale\" /* SCALE */ ? -factor : factor;\n                    break;\n                }\n                case \"y\": {\n                    value[componentName] = convertToRightHandedSystem && useQuaternion && animationChannelTargetPath !== \"scale\" /* SCALE */ ? -factor : factor;\n                    break;\n                }\n                case \"z\": {\n                    value[componentName] = convertToRightHandedSystem && !useQuaternion && animationChannelTargetPath !== \"scale\" /* SCALE */ ? -factor : factor;\n                    break;\n                }\n                case \"w\": {\n                    value.w = factor;\n                    break;\n                }\n                default: {\n                    Tools.Error(\"glTFAnimation: Unsupported component type \\\"\".concat(componentName, \"\\\" for scale animation!\"));\n                }\n            }\n        }\n        return value;\n    };\n    _GLTFAnimation._SetInterpolatedValue = function (babylonTransformNode, value, time, animation, animationChannelTargetPath, quaternionCache, inputs, outputs, convertToRightHandedSystem, useQuaternion) {\n        var animationType = animation.dataType;\n        var cacheValue;\n        inputs.push(time);\n        if (typeof value === \"number\" && babylonTransformNode instanceof TransformNode) {\n            value = this._ConvertFactorToVector3OrQuaternion(value, babylonTransformNode, animation, animationType, animationChannelTargetPath, convertToRightHandedSystem, useQuaternion);\n        }\n        if (value) {\n            if (animationChannelTargetPath === \"rotation\" /* ROTATION */) {\n                if (useQuaternion) {\n                    quaternionCache = value;\n                }\n                else {\n                    cacheValue = value;\n                    Quaternion.RotationYawPitchRollToRef(cacheValue.y, cacheValue.x, cacheValue.z, quaternionCache);\n                }\n                if (convertToRightHandedSystem) {\n                    _GLTFUtilities._GetRightHandedQuaternionFromRef(quaternionCache);\n                    if (!babylonTransformNode.parent) {\n                        quaternionCache = Quaternion.FromArray([0, 1, 0, 0]).multiply(quaternionCache);\n                    }\n                }\n                outputs.push(quaternionCache.asArray());\n            }\n            else if (animationChannelTargetPath === \"weights\" /* WEIGHTS */) {\n                outputs.push([value]);\n            }\n            else {\n                // scaling and position animation\n                cacheValue = value;\n                if (convertToRightHandedSystem && animationChannelTargetPath !== \"scale\" /* SCALE */) {\n                    _GLTFUtilities._GetRightHandedPositionVector3FromRef(cacheValue);\n                    if (!babylonTransformNode.parent) {\n                        cacheValue.x *= -1;\n                        cacheValue.z *= -1;\n                    }\n                }\n                outputs.push(cacheValue.asArray());\n            }\n        }\n    };\n    /**\n     * Creates linear animation from the animation key frames\n     * @param babylonTransformNode BabylonJS mesh\n     * @param animation BabylonJS animation\n     * @param animationChannelTargetPath The target animation channel\n     * @param frameDelta The difference between the last and first frame of the animation\n     * @param inputs Array to store the key frame times\n     * @param outputs Array to store the key frame data\n     * @param convertToRightHandedSystem Specifies if the position data should be converted to right handed\n     * @param useQuaternion Specifies if quaternions are used in the animation\n     */\n    _GLTFAnimation._CreateLinearOrStepAnimation = function (babylonTransformNode, animation, animationChannelTargetPath, frameDelta, inputs, outputs, convertToRightHandedSystem, useQuaternion) {\n        for (var _i = 0, _a = animation.getKeys(); _i < _a.length; _i++) {\n            var keyFrame = _a[_i];\n            inputs.push(keyFrame.frame / animation.framePerSecond); // keyframes in seconds.\n            _GLTFAnimation._AddKeyframeValue(keyFrame, animation, outputs, animationChannelTargetPath, babylonTransformNode, convertToRightHandedSystem, useQuaternion);\n        }\n    };\n    /**\n     * Creates cubic spline animation from the animation key frames\n     * @param babylonTransformNode BabylonJS mesh\n     * @param animation BabylonJS animation\n     * @param animationChannelTargetPath The target animation channel\n     * @param frameDelta The difference between the last and first frame of the animation\n     * @param inputs Array to store the key frame times\n     * @param outputs Array to store the key frame data\n     * @param convertToRightHandedSystem Specifies if the position data should be converted to right handed\n     * @param useQuaternion Specifies if quaternions are used in the animation\n     */\n    _GLTFAnimation._CreateCubicSplineAnimation = function (babylonTransformNode, animation, animationChannelTargetPath, frameDelta, inputs, outputs, convertToRightHandedSystem, useQuaternion) {\n        animation.getKeys().forEach(function (keyFrame) {\n            inputs.push(keyFrame.frame / animation.framePerSecond); // keyframes in seconds.\n            _GLTFAnimation._AddSplineTangent(babylonTransformNode, _TangentType.INTANGENT, outputs, animationChannelTargetPath, \"CUBICSPLINE\" /* CUBICSPLINE */, keyFrame, frameDelta, useQuaternion, convertToRightHandedSystem);\n            _GLTFAnimation._AddKeyframeValue(keyFrame, animation, outputs, animationChannelTargetPath, babylonTransformNode, convertToRightHandedSystem, useQuaternion);\n            _GLTFAnimation._AddSplineTangent(babylonTransformNode, _TangentType.OUTTANGENT, outputs, animationChannelTargetPath, \"CUBICSPLINE\" /* CUBICSPLINE */, keyFrame, frameDelta, useQuaternion, convertToRightHandedSystem);\n        });\n    };\n    _GLTFAnimation._GetBasePositionRotationOrScale = function (babylonTransformNode, animationChannelTargetPath, convertToRightHandedSystem, useQuaternion) {\n        var basePositionRotationOrScale;\n        if (animationChannelTargetPath === \"rotation\" /* ROTATION */) {\n            if (useQuaternion) {\n                if (babylonTransformNode.rotationQuaternion) {\n                    basePositionRotationOrScale = babylonTransformNode.rotationQuaternion.asArray();\n                    if (convertToRightHandedSystem) {\n                        _GLTFUtilities._GetRightHandedQuaternionArrayFromRef(basePositionRotationOrScale);\n                        if (!babylonTransformNode.parent) {\n                            basePositionRotationOrScale = Quaternion.FromArray([0, 1, 0, 0]).multiply(Quaternion.FromArray(basePositionRotationOrScale)).asArray();\n                        }\n                    }\n                }\n                else {\n                    basePositionRotationOrScale = Quaternion.Identity().asArray();\n                }\n            }\n            else {\n                basePositionRotationOrScale = babylonTransformNode.rotation.asArray();\n                _GLTFUtilities._GetRightHandedNormalArray3FromRef(basePositionRotationOrScale);\n            }\n        }\n        else if (animationChannelTargetPath === \"translation\" /* TRANSLATION */) {\n            basePositionRotationOrScale = babylonTransformNode.position.asArray();\n            if (convertToRightHandedSystem) {\n                _GLTFUtilities._GetRightHandedPositionArray3FromRef(basePositionRotationOrScale);\n            }\n        }\n        else {\n            // scale\n            basePositionRotationOrScale = babylonTransformNode.scaling.asArray();\n        }\n        return basePositionRotationOrScale;\n    };\n    /**\n     * Adds a key frame value\n     * @param keyFrame\n     * @param animation\n     * @param outputs\n     * @param animationChannelTargetPath\n     * @param babylonTransformNode\n     * @param convertToRightHandedSystem\n     * @param useQuaternion\n     */\n    _GLTFAnimation._AddKeyframeValue = function (keyFrame, animation, outputs, animationChannelTargetPath, babylonTransformNode, convertToRightHandedSystem, useQuaternion) {\n        var value;\n        var newPositionRotationOrScale;\n        var animationType = animation.dataType;\n        if (animationType === Animation.ANIMATIONTYPE_VECTOR3) {\n            value = keyFrame.value.asArray();\n            if (animationChannelTargetPath === \"rotation\" /* ROTATION */) {\n                var array = Vector3.FromArray(value);\n                var rotationQuaternion = Quaternion.RotationYawPitchRoll(array.y, array.x, array.z);\n                if (convertToRightHandedSystem) {\n                    _GLTFUtilities._GetRightHandedQuaternionFromRef(rotationQuaternion);\n                    if (!babylonTransformNode.parent) {\n                        rotationQuaternion = Quaternion.FromArray([0, 1, 0, 0]).multiply(rotationQuaternion);\n                    }\n                }\n                value = rotationQuaternion.asArray();\n            }\n            else if (animationChannelTargetPath === \"translation\" /* TRANSLATION */) {\n                if (convertToRightHandedSystem) {\n                    _GLTFUtilities._GetRightHandedNormalArray3FromRef(value);\n                    if (!babylonTransformNode.parent) {\n                        value[0] *= -1;\n                        value[2] *= -1;\n                    }\n                }\n            }\n            outputs.push(value); // scale  vector.\n        }\n        else if (animationType === Animation.ANIMATIONTYPE_FLOAT) {\n            if (animationChannelTargetPath === \"weights\" /* WEIGHTS */) {\n                outputs.push([keyFrame.value]);\n            }\n            else {\n                // handles single component x, y, z or w component animation by using a base property and animating over a component.\n                newPositionRotationOrScale = this._ConvertFactorToVector3OrQuaternion(keyFrame.value, babylonTransformNode, animation, animationType, animationChannelTargetPath, convertToRightHandedSystem, useQuaternion);\n                if (newPositionRotationOrScale) {\n                    if (animationChannelTargetPath === \"rotation\" /* ROTATION */) {\n                        var posRotScale = useQuaternion\n                            ? newPositionRotationOrScale\n                            : Quaternion.RotationYawPitchRoll(newPositionRotationOrScale.y, newPositionRotationOrScale.x, newPositionRotationOrScale.z).normalize();\n                        if (convertToRightHandedSystem) {\n                            _GLTFUtilities._GetRightHandedQuaternionFromRef(posRotScale);\n                            if (!babylonTransformNode.parent) {\n                                posRotScale = Quaternion.FromArray([0, 1, 0, 0]).multiply(posRotScale);\n                            }\n                        }\n                        outputs.push(posRotScale.asArray());\n                    }\n                    else if (animationChannelTargetPath === \"translation\" /* TRANSLATION */) {\n                        if (convertToRightHandedSystem) {\n                            _GLTFUtilities._GetRightHandedNormalVector3FromRef(newPositionRotationOrScale);\n                            if (!babylonTransformNode.parent) {\n                                newPositionRotationOrScale.x *= -1;\n                                newPositionRotationOrScale.z *= -1;\n                            }\n                        }\n                    }\n                    outputs.push(newPositionRotationOrScale.asArray());\n                }\n            }\n        }\n        else if (animationType === Animation.ANIMATIONTYPE_QUATERNION) {\n            value = keyFrame.value.normalize().asArray();\n            if (convertToRightHandedSystem) {\n                _GLTFUtilities._GetRightHandedQuaternionArrayFromRef(value);\n                if (!babylonTransformNode.parent) {\n                    value = Quaternion.FromArray([0, 1, 0, 0]).multiply(Quaternion.FromArray(value)).asArray();\n                }\n            }\n            outputs.push(value);\n        }\n        else {\n            Tools.Error(\"glTFAnimation: Unsupported key frame values for animation!\");\n        }\n    };\n    /**\n     * Determine the interpolation based on the key frames\n     * @param keyFrames\n     * @param animationChannelTargetPath\n     * @param useQuaternion\n     */\n    _GLTFAnimation._DeduceInterpolation = function (keyFrames, animationChannelTargetPath, useQuaternion) {\n        var interpolationType;\n        var shouldBakeAnimation = false;\n        var key;\n        if (animationChannelTargetPath === \"rotation\" /* ROTATION */ && !useQuaternion) {\n            return { interpolationType: \"LINEAR\" /* LINEAR */, shouldBakeAnimation: true };\n        }\n        for (var i = 0, length_2 = keyFrames.length; i < length_2; ++i) {\n            key = keyFrames[i];\n            if (key.inTangent || key.outTangent) {\n                if (interpolationType) {\n                    if (interpolationType !== \"CUBICSPLINE\" /* CUBICSPLINE */) {\n                        interpolationType = \"LINEAR\" /* LINEAR */;\n                        shouldBakeAnimation = true;\n                        break;\n                    }\n                }\n                else {\n                    interpolationType = \"CUBICSPLINE\" /* CUBICSPLINE */;\n                }\n            }\n            else {\n                if (interpolationType) {\n                    if (interpolationType === \"CUBICSPLINE\" /* CUBICSPLINE */ ||\n                        (key.interpolation && key.interpolation === AnimationKeyInterpolation.STEP && interpolationType !== \"STEP\" /* STEP */)) {\n                        interpolationType = \"LINEAR\" /* LINEAR */;\n                        shouldBakeAnimation = true;\n                        break;\n                    }\n                }\n                else {\n                    if (key.interpolation && key.interpolation === AnimationKeyInterpolation.STEP) {\n                        interpolationType = \"STEP\" /* STEP */;\n                    }\n                    else {\n                        interpolationType = \"LINEAR\" /* LINEAR */;\n                    }\n                }\n            }\n        }\n        if (!interpolationType) {\n            interpolationType = \"LINEAR\" /* LINEAR */;\n        }\n        return { interpolationType: interpolationType, shouldBakeAnimation: shouldBakeAnimation };\n    };\n    /**\n     * Adds an input tangent or output tangent to the output data\n     * If an input tangent or output tangent is missing, it uses the zero vector or zero quaternion\n     * @param babylonTransformNode\n     * @param tangentType Specifies which type of tangent to handle (inTangent or outTangent)\n     * @param outputs The animation data by keyframe\n     * @param animationChannelTargetPath The target animation channel\n     * @param interpolation The interpolation type\n     * @param keyFrame The key frame with the animation data\n     * @param frameDelta Time difference between two frames used to scale the tangent by the frame delta\n     * @param useQuaternion Specifies if quaternions are used\n     * @param convertToRightHandedSystem Specifies if the values should be converted to right-handed\n     */\n    _GLTFAnimation._AddSplineTangent = function (babylonTransformNode, tangentType, outputs, animationChannelTargetPath, interpolation, keyFrame, frameDelta, useQuaternion, convertToRightHandedSystem) {\n        var tangent;\n        var tangentValue = tangentType === _TangentType.INTANGENT ? keyFrame.inTangent : keyFrame.outTangent;\n        if (interpolation === \"CUBICSPLINE\" /* CUBICSPLINE */) {\n            if (animationChannelTargetPath === \"rotation\" /* ROTATION */) {\n                if (tangentValue) {\n                    if (useQuaternion) {\n                        tangent = tangentValue.asArray();\n                    }\n                    else {\n                        var array = tangentValue;\n                        tangent = Quaternion.RotationYawPitchRoll(array.y, array.x, array.z).asArray();\n                    }\n                    if (convertToRightHandedSystem) {\n                        _GLTFUtilities._GetRightHandedQuaternionArrayFromRef(tangent);\n                        if (!babylonTransformNode.parent) {\n                            tangent = Quaternion.FromArray([0, 1, 0, 0]).multiply(Quaternion.FromArray(tangent)).asArray();\n                        }\n                    }\n                }\n                else {\n                    tangent = [0, 0, 0, 0];\n                }\n            }\n            else if (animationChannelTargetPath === \"weights\" /* WEIGHTS */) {\n                if (tangentValue) {\n                    tangent = [tangentValue];\n                }\n                else {\n                    tangent = [0];\n                }\n            }\n            else {\n                if (tangentValue) {\n                    tangent = tangentValue.asArray();\n                    if (convertToRightHandedSystem) {\n                        if (animationChannelTargetPath === \"translation\" /* TRANSLATION */) {\n                            _GLTFUtilities._GetRightHandedPositionArray3FromRef(tangent);\n                            if (!babylonTransformNode.parent) {\n                                tangent[0] *= -1; // x\n                                tangent[2] *= -1; // z\n                            }\n                        }\n                    }\n                }\n                else {\n                    tangent = [0, 0, 0];\n                }\n            }\n            outputs.push(tangent);\n        }\n    };\n    /**\n     * Get the minimum and maximum key frames' frame values\n     * @param keyFrames animation key frames\n     * @returns the minimum and maximum key frame value\n     */\n    _GLTFAnimation._CalculateMinMaxKeyFrames = function (keyFrames) {\n        var min = Infinity;\n        var max = -Infinity;\n        keyFrames.forEach(function (keyFrame) {\n            min = Math.min(min, keyFrame.frame);\n            max = Math.max(max, keyFrame.frame);\n        });\n        return { min: min, max: max };\n    };\n    return _GLTFAnimation;\n}());\nexport { _GLTFAnimation };\n//# sourceMappingURL=glTFAnimation.js.map","import { Matrix } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { Tools } from \"@babylonjs/core/Misc/tools.js\";\n/**\n * Class for generating OBJ data from a Babylon scene.\n */\nvar OBJExport = /** @class */ (function () {\n    function OBJExport() {\n    }\n    /**\n     * Exports the geometry of a Mesh array in .OBJ file format (text)\n     * @param mesh defines the list of meshes to serialize\n     * @param materials defines if materials should be exported\n     * @param matlibname defines the name of the associated mtl file\n     * @param globalposition defines if the exported positions are globals or local to the exported mesh\n     * @returns the OBJ content\n     */\n    OBJExport.OBJ = function (mesh, materials, matlibname, globalposition) {\n        var output = [];\n        var v = 1;\n        // keep track of uv index in case mixed meshes are passed in\n        var textureV = 1;\n        if (materials) {\n            if (!matlibname) {\n                matlibname = \"mat\";\n            }\n            output.push(\"mtllib \" + matlibname + \".mtl\");\n        }\n        for (var j = 0; j < mesh.length; j++) {\n            output.push(\"g object\" + j);\n            output.push(\"o object_\" + j);\n            //Uses the position of the item in the scene, to the file (this back to normal in the end)\n            var inverseTransform = null;\n            if (globalposition) {\n                var transform = mesh[j].computeWorldMatrix(true);\n                inverseTransform = new Matrix();\n                transform.invertToRef(inverseTransform);\n                mesh[j].bakeTransformIntoVertices(transform);\n            }\n            //TODO: submeshes (groups)\n            //TODO: smoothing groups (s 1, s off);\n            if (materials) {\n                var mat = mesh[j].material;\n                if (mat) {\n                    output.push(\"usemtl \" + mat.id);\n                }\n            }\n            var g = mesh[j].geometry;\n            if (!g) {\n                Tools.Warn(\"No geometry is present on the mesh\");\n                continue;\n            }\n            var trunkVerts = g.getVerticesData(\"position\");\n            var trunkNormals = g.getVerticesData(\"normal\");\n            var trunkUV = g.getVerticesData(\"uv\");\n            var trunkFaces = g.getIndices();\n            var currentV = 0;\n            var currentTextureV = 0;\n            if (!trunkVerts || !trunkFaces) {\n                Tools.Warn(\"There are no position vertices or indices on the mesh!\");\n                continue;\n            }\n            for (var i = 0; i < trunkVerts.length; i += 3) {\n                // Babylon.js default is left handed, while OBJ default is right handed\n                // Need to invert Z vertices unless Babylon is set to use a right handed system\n                if (mesh[0].getScene().useRightHandedSystem) {\n                    output.push(\"v \" + trunkVerts[i] + \" \" + trunkVerts[i + 1] + \" \" + trunkVerts[i + 2]);\n                }\n                else {\n                    output.push(\"v \" + trunkVerts[i] + \" \" + trunkVerts[i + 1] + \" \" + -trunkVerts[i + 2]);\n                }\n                currentV++;\n            }\n            if (trunkNormals != null) {\n                for (var i = 0; i < trunkNormals.length; i += 3) {\n                    output.push(\"vn \" + trunkNormals[i] + \" \" + trunkNormals[i + 1] + \" \" + trunkNormals[i + 2]);\n                }\n            }\n            if (trunkUV != null) {\n                for (var i = 0; i < trunkUV.length; i += 2) {\n                    output.push(\"vt \" + trunkUV[i] + \" \" + trunkUV[i + 1]);\n                    currentTextureV++;\n                }\n            }\n            for (var i = 0; i < trunkFaces.length; i += 3) {\n                var indices = [String(trunkFaces[i + 2] + v), String(trunkFaces[i + 1] + v), String(trunkFaces[i] + v)];\n                var textureIndices = [String(trunkFaces[i + 2] + textureV), String(trunkFaces[i + 1] + textureV), String(trunkFaces[i] + textureV)];\n                var blanks = [\"\", \"\", \"\"];\n                var facePositions = indices;\n                var faceUVs = trunkUV != null ? textureIndices : blanks;\n                var faceNormals = trunkNormals != null ? indices : blanks;\n                output.push(\"f \" +\n                    facePositions[0] +\n                    \"/\" +\n                    faceUVs[0] +\n                    \"/\" +\n                    faceNormals[0] +\n                    \" \" +\n                    facePositions[1] +\n                    \"/\" +\n                    faceUVs[1] +\n                    \"/\" +\n                    faceNormals[1] +\n                    \" \" +\n                    facePositions[2] +\n                    \"/\" +\n                    faceUVs[2] +\n                    \"/\" +\n                    faceNormals[2]);\n            }\n            //back de previous matrix, to not change the original mesh in the scene\n            if (globalposition && inverseTransform) {\n                mesh[j].bakeTransformIntoVertices(inverseTransform);\n            }\n            v += currentV;\n            textureV += currentTextureV;\n        }\n        var text = output.join(\"\\n\");\n        return text;\n    };\n    /**\n     * Exports the material(s) of a mesh in .MTL file format (text)\n     * @param mesh defines the mesh to extract the material from\n     * @returns the mtl content\n     */\n    //TODO: Export the materials of mesh array\n    OBJExport.MTL = function (mesh) {\n        var output = [];\n        var m = mesh.material;\n        output.push(\"newmtl mat1\");\n        output.push(\"  Ns \" + m.specularPower.toFixed(4));\n        output.push(\"  Ni 1.5000\");\n        output.push(\"  d \" + m.alpha.toFixed(4));\n        output.push(\"  Tr 0.0000\");\n        output.push(\"  Tf 1.0000 1.0000 1.0000\");\n        output.push(\"  illum 2\");\n        output.push(\"  Ka \" + m.ambientColor.r.toFixed(4) + \" \" + m.ambientColor.g.toFixed(4) + \" \" + m.ambientColor.b.toFixed(4));\n        output.push(\"  Kd \" + m.diffuseColor.r.toFixed(4) + \" \" + m.diffuseColor.g.toFixed(4) + \" \" + m.diffuseColor.b.toFixed(4));\n        output.push(\"  Ks \" + m.specularColor.r.toFixed(4) + \" \" + m.specularColor.g.toFixed(4) + \" \" + m.specularColor.b.toFixed(4));\n        output.push(\"  Ke \" + m.emissiveColor.r.toFixed(4) + \" \" + m.emissiveColor.g.toFixed(4) + \" \" + m.emissiveColor.b.toFixed(4));\n        //TODO: uv scale, offset, wrap\n        //TODO: UV mirrored in Blender? second UV channel? lightMap? reflection textures?\n        var uvscale = \"\";\n        if (m.ambientTexture) {\n            output.push(\"  map_Ka \" + uvscale + m.ambientTexture.name);\n        }\n        if (m.diffuseTexture) {\n            output.push(\"  map_Kd \" + uvscale + m.diffuseTexture.name);\n            //TODO: alpha testing, opacity in diffuse texture alpha channel (diffuseTexture.hasAlpha -> map_d)\n        }\n        if (m.specularTexture) {\n            output.push(\"  map_Ks \" + uvscale + m.specularTexture.name);\n            /* TODO: glossiness = specular highlight component is in alpha channel of specularTexture. (???)\n            if (m.useGlossinessFromSpecularMapAlpha)  {\n                output.push(\"  map_Ns \"+uvscale + m.specularTexture.name);\n            }\n            */\n        }\n        /* TODO: emissive texture not in .MAT format (???)\n        if (m.emissiveTexture) {\n            output.push(\"  map_d \"+uvscale+m.emissiveTexture.name);\n        }\n        */\n        if (m.bumpTexture) {\n            output.push(\"  map_bump -imfchan z \" + uvscale + m.bumpTexture.name);\n        }\n        if (m.opacityTexture) {\n            output.push(\"  map_d \" + uvscale + m.opacityTexture.name);\n        }\n        var text = output.join(\"\\n\");\n        return text;\n    };\n    return OBJExport;\n}());\nexport { OBJExport };\n//# sourceMappingURL=objSerializer.js.map","/** @hidden */\n// eslint-disable-next-line no-var, @typescript-eslint/naming-convention\nexport var __IGLTFExporterExtension = 0; // I am here to allow dts to be created\n//# sourceMappingURL=glTFFileExporter.js.map","import { Vector3 } from \"@babylonjs/core/Maths/math.vector.js\";\n/**\n * @hidden\n */\nvar _GLTFUtilities = /** @class */ (function () {\n    function _GLTFUtilities() {\n    }\n    /**\n     * Creates a buffer view based on the supplied arguments\n     * @param bufferIndex index value of the specified buffer\n     * @param byteOffset byte offset value\n     * @param byteLength byte length of the bufferView\n     * @param byteStride byte distance between conequential elements\n     * @param name name of the buffer view\n     * @returns bufferView for glTF\n     */\n    _GLTFUtilities._CreateBufferView = function (bufferIndex, byteOffset, byteLength, byteStride, name) {\n        var bufferview = { buffer: bufferIndex, byteLength: byteLength };\n        if (byteOffset) {\n            bufferview.byteOffset = byteOffset;\n        }\n        if (name) {\n            bufferview.name = name;\n        }\n        if (byteStride) {\n            bufferview.byteStride = byteStride;\n        }\n        return bufferview;\n    };\n    /**\n     * Creates an accessor based on the supplied arguments\n     * @param bufferviewIndex The index of the bufferview referenced by this accessor\n     * @param name The name of the accessor\n     * @param type The type of the accessor\n     * @param componentType The datatype of components in the attribute\n     * @param count The number of attributes referenced by this accessor\n     * @param byteOffset The offset relative to the start of the bufferView in bytes\n     * @param min Minimum value of each component in this attribute\n     * @param max Maximum value of each component in this attribute\n     * @returns accessor for glTF\n     */\n    _GLTFUtilities._CreateAccessor = function (bufferviewIndex, name, type, componentType, count, byteOffset, min, max) {\n        var accessor = { name: name, bufferView: bufferviewIndex, componentType: componentType, count: count, type: type };\n        if (min != null) {\n            accessor.min = min;\n        }\n        if (max != null) {\n            accessor.max = max;\n        }\n        if (byteOffset != null) {\n            accessor.byteOffset = byteOffset;\n        }\n        return accessor;\n    };\n    /**\n     * Calculates the minimum and maximum values of an array of position floats\n     * @param positions Positions array of a mesh\n     * @param vertexStart Starting vertex offset to calculate min and max values\n     * @param vertexCount Number of vertices to check for min and max values\n     * @param convertToRightHandedSystem\n     * @returns min number array and max number array\n     */\n    _GLTFUtilities._CalculateMinMaxPositions = function (positions, vertexStart, vertexCount, convertToRightHandedSystem) {\n        var min = [Infinity, Infinity, Infinity];\n        var max = [-Infinity, -Infinity, -Infinity];\n        var positionStrideSize = 3;\n        var indexOffset;\n        var position;\n        var vector;\n        if (vertexCount) {\n            for (var i = vertexStart, length_1 = vertexStart + vertexCount; i < length_1; ++i) {\n                indexOffset = positionStrideSize * i;\n                position = Vector3.FromArray(positions, indexOffset);\n                if (convertToRightHandedSystem) {\n                    _GLTFUtilities._GetRightHandedPositionVector3FromRef(position);\n                }\n                vector = position.asArray();\n                for (var j = 0; j < positionStrideSize; ++j) {\n                    var num = vector[j];\n                    if (num < min[j]) {\n                        min[j] = num;\n                    }\n                    if (num > max[j]) {\n                        max[j] = num;\n                    }\n                    ++indexOffset;\n                }\n            }\n        }\n        return { min: min, max: max };\n    };\n    /**\n     * Converts a new right-handed Vector3\n     * @param vector vector3 array\n     * @returns right-handed Vector3\n     */\n    _GLTFUtilities._GetRightHandedPositionVector3 = function (vector) {\n        return new Vector3(vector.x, vector.y, -vector.z);\n    };\n    /**\n     * Converts a Vector3 to right-handed\n     * @param vector Vector3 to convert to right-handed\n     */\n    _GLTFUtilities._GetRightHandedPositionVector3FromRef = function (vector) {\n        vector.z *= -1;\n    };\n    /**\n     * Converts a three element number array to right-handed\n     * @param vector number array to convert to right-handed\n     */\n    _GLTFUtilities._GetRightHandedPositionArray3FromRef = function (vector) {\n        vector[2] *= -1;\n    };\n    /**\n     * Converts a new right-handed Vector3\n     * @param vector vector3 array\n     * @returns right-handed Vector3\n     */\n    _GLTFUtilities._GetRightHandedNormalVector3 = function (vector) {\n        return new Vector3(vector.x, vector.y, -vector.z);\n    };\n    /**\n     * Converts a Vector3 to right-handed\n     * @param vector Vector3 to convert to right-handed\n     */\n    _GLTFUtilities._GetRightHandedNormalVector3FromRef = function (vector) {\n        vector.z *= -1;\n    };\n    /**\n     * Converts a three element number array to right-handed\n     * @param vector number array to convert to right-handed\n     */\n    _GLTFUtilities._GetRightHandedNormalArray3FromRef = function (vector) {\n        vector[2] *= -1;\n    };\n    /**\n     * Converts a Vector4 to right-handed\n     * @param vector Vector4 to convert to right-handed\n     */\n    _GLTFUtilities._GetRightHandedVector4FromRef = function (vector) {\n        vector.z *= -1;\n        vector.w *= -1;\n    };\n    /**\n     * Converts a Vector4 to right-handed\n     * @param vector Vector4 to convert to right-handed\n     */\n    _GLTFUtilities._GetRightHandedArray4FromRef = function (vector) {\n        vector[2] *= -1;\n        vector[3] *= -1;\n    };\n    /**\n     * Converts a Quaternion to right-handed\n     * @param quaternion Source quaternion to convert to right-handed\n     */\n    _GLTFUtilities._GetRightHandedQuaternionFromRef = function (quaternion) {\n        quaternion.x *= -1;\n        quaternion.y *= -1;\n    };\n    /**\n     * Converts a Quaternion to right-handed\n     * @param quaternion Source quaternion to convert to right-handed\n     */\n    _GLTFUtilities._GetRightHandedQuaternionArrayFromRef = function (quaternion) {\n        quaternion[0] *= -1;\n        quaternion[1] *= -1;\n    };\n    _GLTFUtilities._NormalizeTangentFromRef = function (tangent) {\n        var length = Math.sqrt(tangent.x * tangent.x + tangent.y * tangent.y + tangent.z * tangent.z);\n        if (length > 0) {\n            tangent.x /= length;\n            tangent.y /= length;\n            tangent.z /= length;\n        }\n    };\n    _GLTFUtilities._GetDataAccessorElementCount = function (accessorType) {\n        switch (accessorType) {\n            case \"MAT2\" /* MAT2 */:\n                return 4;\n            case \"MAT3\" /* MAT3 */:\n                return 9;\n            case \"MAT4\" /* MAT4 */:\n                return 16;\n            case \"SCALAR\" /* SCALAR */:\n                return 1;\n            case \"VEC2\" /* VEC2 */:\n                return 2;\n            case \"VEC3\" /* VEC3 */:\n                return 3;\n            case \"VEC4\" /* VEC4 */:\n                return 4;\n        }\n    };\n    return _GLTFUtilities;\n}());\nexport { _GLTFUtilities };\n//# sourceMappingURL=glTFUtilities.js.map","/**\n * Class for holding and downloading glTF file data\n */\nvar GLTFData = /** @class */ (function () {\n    /**\n     * Initializes the glTF file object\n     */\n    function GLTFData() {\n        this.glTFFiles = {};\n    }\n    /**\n     * Downloads the glTF data as files based on their names and data\n     */\n    GLTFData.prototype.downloadFiles = function () {\n        /**\n         * Checks for a matching suffix at the end of a string (for ES5 and lower)\n         * @param str Source string\n         * @param suffix Suffix to search for in the source string\n         * @returns Boolean indicating whether the suffix was found (true) or not (false)\n         */\n        function endsWith(str, suffix) {\n            return str.indexOf(suffix, str.length - suffix.length) !== -1;\n        }\n        for (var key in this.glTFFiles) {\n            var link = document.createElement(\"a\");\n            document.body.appendChild(link);\n            link.setAttribute(\"type\", \"hidden\");\n            link.download = key;\n            var blob = this.glTFFiles[key];\n            var mimeType = void 0;\n            if (endsWith(key, \".glb\")) {\n                mimeType = { type: \"model/gltf-binary\" };\n            }\n            else if (endsWith(key, \".bin\")) {\n                mimeType = { type: \"application/octet-stream\" };\n            }\n            else if (endsWith(key, \".gltf\")) {\n                mimeType = { type: \"model/gltf+json\" };\n            }\n            else if (endsWith(key, \".jpeg\") || endsWith(key, \".jpg\")) {\n                mimeType = { type: \"image/jpeg\" /* JPEG */ };\n            }\n            else if (endsWith(key, \".png\")) {\n                mimeType = { type: \"image/png\" /* PNG */ };\n            }\n            link.href = window.URL.createObjectURL(new Blob([blob], mimeType));\n            link.click();\n        }\n    };\n    return GLTFData;\n}());\nexport { GLTFData };\n//# sourceMappingURL=glTFData.js.map","import { __awaiter, __generator } from \"tslib\";\nimport { Vector2 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { Color3 } from \"@babylonjs/core/Maths/math.color.js\";\nimport { Scalar } from \"@babylonjs/core/Maths/math.scalar.js\";\nimport { Tools } from \"@babylonjs/core/Misc/tools.js\";\nimport { TextureTools } from \"@babylonjs/core/Misc/textureTools.js\";\nimport { Texture } from \"@babylonjs/core/Materials/Textures/texture.js\";\nimport { RawTexture } from \"@babylonjs/core/Materials/Textures/rawTexture.js\";\nimport { Constants } from \"@babylonjs/core/Engines/constants.js\";\n/**\n * Utility methods for working with glTF material conversion properties.  This class should only be used internally\n * @hidden\n */\nvar _GLTFMaterialExporter = /** @class */ (function () {\n    function _GLTFMaterialExporter(exporter) {\n        /**\n         * Mapping to store textures\n         */\n        this._textureMap = {};\n        this._textureMap = {};\n        this._exporter = exporter;\n    }\n    /**\n     * Specifies if two colors are approximately equal in value\n     * @param color1 first color to compare to\n     * @param color2 second color to compare to\n     * @param epsilon threshold value\n     */\n    _GLTFMaterialExporter._FuzzyEquals = function (color1, color2, epsilon) {\n        return Scalar.WithinEpsilon(color1.r, color2.r, epsilon) && Scalar.WithinEpsilon(color1.g, color2.g, epsilon) && Scalar.WithinEpsilon(color1.b, color2.b, epsilon);\n    };\n    /**\n     * Gets the materials from a Babylon scene and converts them to glTF materials\n     * @param exportMaterials\n     * @param mimeType texture mime type\n     * @param hasTextureCoords specifies if texture coordinates are present on the material\n     */\n    _GLTFMaterialExporter.prototype._convertMaterialsToGLTFAsync = function (exportMaterials, mimeType, hasTextureCoords) {\n        var _this = this;\n        var promises = [];\n        exportMaterials.forEach(function (material) {\n            if (material.getClassName() === \"StandardMaterial\") {\n                promises.push(_this._convertStandardMaterialAsync(material, mimeType, hasTextureCoords));\n            }\n            else if (material.getClassName().indexOf(\"PBR\") !== -1) {\n                promises.push(_this._convertPBRMaterialAsync(material, mimeType, hasTextureCoords));\n            }\n            else {\n                Tools.Warn(\"Unsupported material type: \".concat(material.name));\n            }\n        });\n        return Promise.all(promises).then(function () {\n            /* do nothing */\n        });\n    };\n    /**\n     * Makes a copy of the glTF material without the texture parameters\n     * @param originalMaterial original glTF material\n     * @returns glTF material without texture parameters\n     */\n    _GLTFMaterialExporter.prototype._stripTexturesFromMaterial = function (originalMaterial) {\n        var newMaterial = {};\n        if (originalMaterial) {\n            newMaterial.name = originalMaterial.name;\n            newMaterial.doubleSided = originalMaterial.doubleSided;\n            newMaterial.alphaMode = originalMaterial.alphaMode;\n            newMaterial.alphaCutoff = originalMaterial.alphaCutoff;\n            newMaterial.emissiveFactor = originalMaterial.emissiveFactor;\n            var originalPBRMetallicRoughness = originalMaterial.pbrMetallicRoughness;\n            if (originalPBRMetallicRoughness) {\n                newMaterial.pbrMetallicRoughness = {};\n                newMaterial.pbrMetallicRoughness.baseColorFactor = originalPBRMetallicRoughness.baseColorFactor;\n                newMaterial.pbrMetallicRoughness.metallicFactor = originalPBRMetallicRoughness.metallicFactor;\n                newMaterial.pbrMetallicRoughness.roughnessFactor = originalPBRMetallicRoughness.roughnessFactor;\n            }\n        }\n        return newMaterial;\n    };\n    /**\n     * Specifies if the material has any texture parameters present\n     * @param material glTF Material\n     * @returns boolean specifying if texture parameters are present\n     */\n    _GLTFMaterialExporter.prototype._hasTexturesPresent = function (material) {\n        var _a;\n        if (material.emissiveTexture || material.normalTexture || material.occlusionTexture) {\n            return true;\n        }\n        var pbrMat = material.pbrMetallicRoughness;\n        if (pbrMat) {\n            if (pbrMat.baseColorTexture || pbrMat.metallicRoughnessTexture) {\n                return true;\n            }\n        }\n        if (material.extensions) {\n            for (var extension in material.extensions) {\n                var extensionObject = material.extensions[extension];\n                if (extensionObject) {\n                    return (_a = extensionObject.hasTextures) === null || _a === void 0 ? void 0 : _a.call(extensionObject);\n                }\n            }\n        }\n        return false;\n    };\n    _GLTFMaterialExporter.prototype._getTextureInfo = function (babylonTexture) {\n        if (babylonTexture) {\n            var textureUid = babylonTexture.uid;\n            if (textureUid in this._textureMap) {\n                return this._textureMap[textureUid];\n            }\n        }\n        return null;\n    };\n    /**\n     * Converts a Babylon StandardMaterial to a glTF Metallic Roughness Material\n     * @param babylonStandardMaterial\n     * @returns glTF Metallic Roughness Material representation\n     */\n    _GLTFMaterialExporter.prototype._convertToGLTFPBRMetallicRoughness = function (babylonStandardMaterial) {\n        // Defines a cubic bezier curve where x is specular power and y is roughness\n        var P0 = new Vector2(0, 1);\n        var P1 = new Vector2(0, 0.1);\n        var P2 = new Vector2(0, 0.1);\n        var P3 = new Vector2(1300, 0.1);\n        /**\n         * Given the control points, solve for x based on a given t for a cubic bezier curve\n         * @param t a value between 0 and 1\n         * @param p0 first control point\n         * @param p1 second control point\n         * @param p2 third control point\n         * @param p3 fourth control point\n         * @returns number result of cubic bezier curve at the specified t\n         */\n        function cubicBezierCurve(t, p0, p1, p2, p3) {\n            return (1 - t) * (1 - t) * (1 - t) * p0 + 3 * (1 - t) * (1 - t) * t * p1 + 3 * (1 - t) * t * t * p2 + t * t * t * p3;\n        }\n        /**\n         * Evaluates a specified specular power value to determine the appropriate roughness value,\n         * based on a pre-defined cubic bezier curve with specular on the abscissa axis (x-axis)\n         * and roughness on the ordinant axis (y-axis)\n         * @param specularPower specular power of standard material\n         * @returns Number representing the roughness value\n         */\n        function solveForRoughness(specularPower) {\n            // Given P0.x = 0, P1.x = 0, P2.x = 0\n            //   x = t * t * t * P3.x\n            //   t = (x / P3.x)^(1/3)\n            var t = Math.pow(specularPower / P3.x, 0.333333);\n            return cubicBezierCurve(t, P0.y, P1.y, P2.y, P3.y);\n        }\n        var diffuse = babylonStandardMaterial.diffuseColor.toLinearSpace().scale(0.5);\n        var opacity = babylonStandardMaterial.alpha;\n        var specularPower = Scalar.Clamp(babylonStandardMaterial.specularPower, 0, _GLTFMaterialExporter._MaxSpecularPower);\n        var roughness = solveForRoughness(specularPower);\n        var glTFPbrMetallicRoughness = {\n            baseColorFactor: [diffuse.r, diffuse.g, diffuse.b, opacity],\n            metallicFactor: 0,\n            roughnessFactor: roughness,\n        };\n        return glTFPbrMetallicRoughness;\n    };\n    /**\n     * Computes the metallic factor\n     * @param diffuse diffused value\n     * @param specular specular value\n     * @param oneMinusSpecularStrength one minus the specular strength\n     * @returns metallic value\n     */\n    _GLTFMaterialExporter._SolveMetallic = function (diffuse, specular, oneMinusSpecularStrength) {\n        if (specular < this._DielectricSpecular.r) {\n            this._DielectricSpecular;\n            return 0;\n        }\n        var a = this._DielectricSpecular.r;\n        var b = (diffuse * oneMinusSpecularStrength) / (1.0 - this._DielectricSpecular.r) + specular - 2.0 * this._DielectricSpecular.r;\n        var c = this._DielectricSpecular.r - specular;\n        var D = b * b - 4.0 * a * c;\n        return Scalar.Clamp((-b + Math.sqrt(D)) / (2.0 * a), 0, 1);\n    };\n    /**\n     * Sets the glTF alpha mode to a glTF material from the Babylon Material\n     * @param glTFMaterial glTF material\n     * @param babylonMaterial Babylon material\n     */\n    _GLTFMaterialExporter._SetAlphaMode = function (glTFMaterial, babylonMaterial) {\n        if (babylonMaterial.needAlphaBlending()) {\n            glTFMaterial.alphaMode = \"BLEND\" /* BLEND */;\n        }\n        else if (babylonMaterial.needAlphaTesting()) {\n            glTFMaterial.alphaMode = \"MASK\" /* MASK */;\n            glTFMaterial.alphaCutoff = babylonMaterial.alphaCutOff;\n        }\n    };\n    /**\n     * Converts a Babylon Standard Material to a glTF Material\n     * @param babylonStandardMaterial BJS Standard Material\n     * @param mimeType mime type to use for the textures\n     * @param hasTextureCoords specifies if texture coordinates are present on the submesh to determine if textures should be applied\n     */\n    _GLTFMaterialExporter.prototype._convertStandardMaterialAsync = function (babylonStandardMaterial, mimeType, hasTextureCoords) {\n        var materialMap = this._exporter._materialMap;\n        var materials = this._exporter._materials;\n        var promises = [];\n        var glTFPbrMetallicRoughness = this._convertToGLTFPBRMetallicRoughness(babylonStandardMaterial);\n        var glTFMaterial = { name: babylonStandardMaterial.name };\n        if (babylonStandardMaterial.backFaceCulling != null && !babylonStandardMaterial.backFaceCulling) {\n            if (!babylonStandardMaterial.twoSidedLighting) {\n                Tools.Warn(babylonStandardMaterial.name + \": Back-face culling disabled and two-sided lighting disabled is not supported in glTF.\");\n            }\n            glTFMaterial.doubleSided = true;\n        }\n        if (hasTextureCoords) {\n            if (babylonStandardMaterial.diffuseTexture) {\n                promises.push(this._exportTextureAsync(babylonStandardMaterial.diffuseTexture, mimeType).then(function (glTFTexture) {\n                    if (glTFTexture) {\n                        glTFPbrMetallicRoughness.baseColorTexture = glTFTexture;\n                    }\n                }));\n            }\n            if (babylonStandardMaterial.bumpTexture) {\n                promises.push(this._exportTextureAsync(babylonStandardMaterial.bumpTexture, mimeType).then(function (glTFTexture) {\n                    if (glTFTexture) {\n                        glTFMaterial.normalTexture = glTFTexture;\n                        if (babylonStandardMaterial.bumpTexture != null && babylonStandardMaterial.bumpTexture.level !== 1) {\n                            glTFMaterial.normalTexture.scale = babylonStandardMaterial.bumpTexture.level;\n                        }\n                    }\n                }));\n            }\n            if (babylonStandardMaterial.emissiveTexture) {\n                glTFMaterial.emissiveFactor = [1.0, 1.0, 1.0];\n                promises.push(this._exportTextureAsync(babylonStandardMaterial.emissiveTexture, mimeType).then(function (glTFEmissiveTexture) {\n                    if (glTFEmissiveTexture) {\n                        glTFMaterial.emissiveTexture = glTFEmissiveTexture;\n                    }\n                }));\n            }\n            if (babylonStandardMaterial.ambientTexture) {\n                promises.push(this._exportTextureAsync(babylonStandardMaterial.ambientTexture, mimeType).then(function (glTFTexture) {\n                    if (glTFTexture) {\n                        var occlusionTexture = {\n                            index: glTFTexture.index,\n                        };\n                        glTFMaterial.occlusionTexture = occlusionTexture;\n                        occlusionTexture.strength = 1.0;\n                    }\n                }));\n            }\n        }\n        if (babylonStandardMaterial.alpha < 1.0 || babylonStandardMaterial.opacityTexture) {\n            if (babylonStandardMaterial.alphaMode === Constants.ALPHA_COMBINE) {\n                glTFMaterial.alphaMode = \"BLEND\" /* BLEND */;\n            }\n            else {\n                Tools.Warn(babylonStandardMaterial.name + \": glTF 2.0 does not support alpha mode: \" + babylonStandardMaterial.alphaMode.toString());\n            }\n        }\n        if (babylonStandardMaterial.emissiveColor && !_GLTFMaterialExporter._FuzzyEquals(babylonStandardMaterial.emissiveColor, Color3.Black(), _GLTFMaterialExporter._Epsilon)) {\n            glTFMaterial.emissiveFactor = babylonStandardMaterial.emissiveColor.asArray();\n        }\n        glTFMaterial.pbrMetallicRoughness = glTFPbrMetallicRoughness;\n        _GLTFMaterialExporter._SetAlphaMode(glTFMaterial, babylonStandardMaterial);\n        materials.push(glTFMaterial);\n        materialMap[babylonStandardMaterial.uniqueId] = materials.length - 1;\n        return this._finishMaterial(promises, glTFMaterial, babylonStandardMaterial, mimeType);\n    };\n    _GLTFMaterialExporter.prototype._finishMaterial = function (promises, glTFMaterial, babylonMaterial, mimeType) {\n        var _this = this;\n        return Promise.all(promises).then(function () {\n            var textures = _this._exporter._extensionsPostExportMaterialAdditionalTextures(\"exportMaterial\", glTFMaterial, babylonMaterial);\n            var tasks = null;\n            for (var _i = 0, textures_1 = textures; _i < textures_1.length; _i++) {\n                var texture = textures_1[_i];\n                if (!tasks) {\n                    tasks = [];\n                }\n                tasks.push(_this._exportTextureAsync(texture, mimeType));\n            }\n            if (!tasks) {\n                tasks = [Promise.resolve(null)];\n            }\n            return Promise.all(tasks).then(function () {\n                var extensionWork = _this._exporter._extensionsPostExportMaterialAsync(\"exportMaterial\", glTFMaterial, babylonMaterial);\n                if (!extensionWork) {\n                    return glTFMaterial;\n                }\n                return extensionWork.then(function () { return glTFMaterial; });\n            });\n        });\n    };\n    /**\n     * Converts an image typed array buffer to a base64 image\n     * @param buffer typed array buffer\n     * @param width width of the image\n     * @param height height of the image\n     * @param mimeType mimetype of the image\n     * @returns base64 image string\n     */\n    _GLTFMaterialExporter.prototype._createBase64FromCanvasAsync = function (buffer, width, height, mimeType) {\n        var _this = this;\n        // eslint-disable-next-line no-async-promise-executor\n        return new Promise(function (resolve) { return __awaiter(_this, void 0, void 0, function () {\n            var textureType, hostingScene, engine, tempTexture, data, base64;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        textureType = Constants.TEXTURETYPE_UNSIGNED_INT;\n                        hostingScene = this._exporter._babylonScene;\n                        engine = hostingScene.getEngine();\n                        tempTexture = engine.createRawTexture(buffer, width, height, Constants.TEXTUREFORMAT_RGBA, false, true, Texture.NEAREST_SAMPLINGMODE, null, textureType);\n                        return [4 /*yield*/, TextureTools.ApplyPostProcess(\"pass\", tempTexture, hostingScene, textureType, Constants.TEXTURE_NEAREST_SAMPLINGMODE, Constants.TEXTUREFORMAT_RGBA)];\n                    case 1:\n                        _a.sent();\n                        return [4 /*yield*/, engine._readTexturePixels(tempTexture, width, height)];\n                    case 2:\n                        data = _a.sent();\n                        return [4 /*yield*/, Tools.DumpDataAsync(width, height, data, mimeType, undefined, true, false)];\n                    case 3:\n                        base64 = _a.sent();\n                        resolve(base64);\n                        return [2 /*return*/];\n                }\n            });\n        }); });\n    };\n    /**\n     * Generates a white texture based on the specified width and height\n     * @param width width of the texture in pixels\n     * @param height height of the texture in pixels\n     * @param scene babylonjs scene\n     * @returns white texture\n     */\n    _GLTFMaterialExporter.prototype._createWhiteTexture = function (width, height, scene) {\n        var data = new Uint8Array(width * height * 4);\n        for (var i = 0; i < data.length; i = i + 4) {\n            data[i] = data[i + 1] = data[i + 2] = data[i + 3] = 0xff;\n        }\n        var rawTexture = RawTexture.CreateRGBATexture(data, width, height, scene);\n        return rawTexture;\n    };\n    /**\n     * Resizes the two source textures to the same dimensions.  If a texture is null, a default white texture is generated.  If both textures are null, returns null\n     * @param texture1 first texture to resize\n     * @param texture2 second texture to resize\n     * @param scene babylonjs scene\n     * @returns resized textures or null\n     */\n    _GLTFMaterialExporter.prototype._resizeTexturesToSameDimensions = function (texture1, texture2, scene) {\n        var texture1Size = texture1 ? texture1.getSize() : { width: 0, height: 0 };\n        var texture2Size = texture2 ? texture2.getSize() : { width: 0, height: 0 };\n        var resizedTexture1;\n        var resizedTexture2;\n        if (texture1Size.width < texture2Size.width) {\n            if (texture1 && texture1 instanceof Texture) {\n                resizedTexture1 = TextureTools.CreateResizedCopy(texture1, texture2Size.width, texture2Size.height, true);\n            }\n            else {\n                resizedTexture1 = this._createWhiteTexture(texture2Size.width, texture2Size.height, scene);\n            }\n            resizedTexture2 = texture2;\n        }\n        else if (texture1Size.width > texture2Size.width) {\n            if (texture2 && texture2 instanceof Texture) {\n                resizedTexture2 = TextureTools.CreateResizedCopy(texture2, texture1Size.width, texture1Size.height, true);\n            }\n            else {\n                resizedTexture2 = this._createWhiteTexture(texture1Size.width, texture1Size.height, scene);\n            }\n            resizedTexture1 = texture1;\n        }\n        else {\n            resizedTexture1 = texture1;\n            resizedTexture2 = texture2;\n        }\n        return {\n            texture1: resizedTexture1,\n            texture2: resizedTexture2,\n        };\n    };\n    /**\n     * Converts an array of pixels to a Float32Array\n     * Throws an error if the pixel format is not supported\n     * @param pixels - array buffer containing pixel values\n     * @returns Float32 of pixels\n     */\n    _GLTFMaterialExporter.prototype._convertPixelArrayToFloat32 = function (pixels) {\n        if (pixels instanceof Uint8Array) {\n            var length_1 = pixels.length;\n            var buffer = new Float32Array(pixels.length);\n            for (var i = 0; i < length_1; ++i) {\n                buffer[i] = pixels[i] / 255;\n            }\n            return buffer;\n        }\n        else if (pixels instanceof Float32Array) {\n            return pixels;\n        }\n        else {\n            throw new Error(\"Unsupported pixel format!\");\n        }\n    };\n    /**\n     * Convert Specular Glossiness Textures to Metallic Roughness\n     * See link below for info on the material conversions from PBR Metallic/Roughness and Specular/Glossiness\n     * @link https://github.com/KhronosGroup/glTF/blob/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness/examples/convert-between-workflows-.js/babylon.pbrUtilities.js\n     * @param diffuseTexture texture used to store diffuse information\n     * @param specularGlossinessTexture texture used to store specular and glossiness information\n     * @param factors specular glossiness material factors\n     * @param mimeType the mime type to use for the texture\n     * @returns pbr metallic roughness interface or null\n     */\n    _GLTFMaterialExporter.prototype._convertSpecularGlossinessTexturesToMetallicRoughnessAsync = function (diffuseTexture, specularGlossinessTexture, factors, mimeType) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function () {\n            var promises, scene, resizedTextures, diffuseSize, diffuseBuffer, specularGlossinessBuffer, width, height, diffusePixels, specularPixels, byteLength, metallicRoughnessBuffer, baseColorBuffer, strideSize, maxBaseColor, maxMetallic, maxRoughness, h, w, offset, diffuseColor, specularColor, glossiness, specularGlossiness, metallicRoughness, metallicRoughnessFactors_1, writeOutMetallicRoughnessTexture, writeOutBaseColorTexture, h, w, destinationOffset, linearBaseColorPixel, sRGBBaseColorPixel, metallicRoughnessPixel, promise, promise;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        promises = [];\n                        if (!(diffuseTexture || specularGlossinessTexture)) {\n                            return [2 /*return*/, Promise.reject(\"_ConvertSpecularGlosinessTexturesToMetallicRoughness: diffuse and specular glossiness textures are not defined!\")];\n                        }\n                        scene = diffuseTexture ? diffuseTexture.getScene() : specularGlossinessTexture ? specularGlossinessTexture.getScene() : null;\n                        if (!scene) return [3 /*break*/, 3];\n                        resizedTextures = this._resizeTexturesToSameDimensions(diffuseTexture, specularGlossinessTexture, scene);\n                        diffuseSize = (_a = resizedTextures.texture1) === null || _a === void 0 ? void 0 : _a.getSize();\n                        diffuseBuffer = void 0;\n                        specularGlossinessBuffer = void 0;\n                        width = diffuseSize.width;\n                        height = diffuseSize.height;\n                        return [4 /*yield*/, resizedTextures.texture1.readPixels()];\n                    case 1:\n                        diffusePixels = _b.sent();\n                        return [4 /*yield*/, resizedTextures.texture2.readPixels()];\n                    case 2:\n                        specularPixels = _b.sent();\n                        if (diffusePixels) {\n                            diffuseBuffer = this._convertPixelArrayToFloat32(diffusePixels);\n                        }\n                        else {\n                            return [2 /*return*/, Promise.reject(\"Failed to retrieve pixels from diffuse texture!\")];\n                        }\n                        if (specularPixels) {\n                            specularGlossinessBuffer = this._convertPixelArrayToFloat32(specularPixels);\n                        }\n                        else {\n                            return [2 /*return*/, Promise.reject(\"Failed to retrieve pixels from specular glossiness texture!\")];\n                        }\n                        byteLength = specularGlossinessBuffer.byteLength;\n                        metallicRoughnessBuffer = new Uint8Array(byteLength);\n                        baseColorBuffer = new Uint8Array(byteLength);\n                        strideSize = 4;\n                        maxBaseColor = Color3.Black();\n                        maxMetallic = 0;\n                        maxRoughness = 0;\n                        for (h = 0; h < height; ++h) {\n                            for (w = 0; w < width; ++w) {\n                                offset = (width * h + w) * strideSize;\n                                diffuseColor = new Color3(diffuseBuffer[offset], diffuseBuffer[offset + 1], diffuseBuffer[offset + 2]).toLinearSpace().multiply(factors.diffuseColor);\n                                specularColor = new Color3(specularGlossinessBuffer[offset], specularGlossinessBuffer[offset + 1], specularGlossinessBuffer[offset + 2])\n                                    .toLinearSpace()\n                                    .multiply(factors.specularColor);\n                                glossiness = specularGlossinessBuffer[offset + 3] * factors.glossiness;\n                                specularGlossiness = {\n                                    diffuseColor: diffuseColor,\n                                    specularColor: specularColor,\n                                    glossiness: glossiness,\n                                };\n                                metallicRoughness = this._convertSpecularGlossinessToMetallicRoughness(specularGlossiness);\n                                maxBaseColor.r = Math.max(maxBaseColor.r, metallicRoughness.baseColor.r);\n                                maxBaseColor.g = Math.max(maxBaseColor.g, metallicRoughness.baseColor.g);\n                                maxBaseColor.b = Math.max(maxBaseColor.b, metallicRoughness.baseColor.b);\n                                maxMetallic = Math.max(maxMetallic, metallicRoughness.metallic);\n                                maxRoughness = Math.max(maxRoughness, metallicRoughness.roughness);\n                                baseColorBuffer[offset] = metallicRoughness.baseColor.r * 255;\n                                baseColorBuffer[offset + 1] = metallicRoughness.baseColor.g * 255;\n                                baseColorBuffer[offset + 2] = metallicRoughness.baseColor.b * 255;\n                                baseColorBuffer[offset + 3] = resizedTextures.texture1.hasAlpha ? diffuseBuffer[offset + 3] * 255 : 255;\n                                metallicRoughnessBuffer[offset] = 0;\n                                metallicRoughnessBuffer[offset + 1] = metallicRoughness.roughness * 255;\n                                metallicRoughnessBuffer[offset + 2] = metallicRoughness.metallic * 255;\n                                metallicRoughnessBuffer[offset + 3] = 255;\n                            }\n                        }\n                        metallicRoughnessFactors_1 = {\n                            baseColor: maxBaseColor,\n                            metallic: maxMetallic,\n                            roughness: maxRoughness,\n                        };\n                        writeOutMetallicRoughnessTexture = false;\n                        writeOutBaseColorTexture = false;\n                        for (h = 0; h < height; ++h) {\n                            for (w = 0; w < width; ++w) {\n                                destinationOffset = (width * h + w) * strideSize;\n                                baseColorBuffer[destinationOffset] /= metallicRoughnessFactors_1.baseColor.r > _GLTFMaterialExporter._Epsilon ? metallicRoughnessFactors_1.baseColor.r : 1;\n                                baseColorBuffer[destinationOffset + 1] /= metallicRoughnessFactors_1.baseColor.g > _GLTFMaterialExporter._Epsilon ? metallicRoughnessFactors_1.baseColor.g : 1;\n                                baseColorBuffer[destinationOffset + 2] /= metallicRoughnessFactors_1.baseColor.b > _GLTFMaterialExporter._Epsilon ? metallicRoughnessFactors_1.baseColor.b : 1;\n                                linearBaseColorPixel = Color3.FromInts(baseColorBuffer[destinationOffset], baseColorBuffer[destinationOffset + 1], baseColorBuffer[destinationOffset + 2]);\n                                sRGBBaseColorPixel = linearBaseColorPixel.toGammaSpace();\n                                baseColorBuffer[destinationOffset] = sRGBBaseColorPixel.r * 255;\n                                baseColorBuffer[destinationOffset + 1] = sRGBBaseColorPixel.g * 255;\n                                baseColorBuffer[destinationOffset + 2] = sRGBBaseColorPixel.b * 255;\n                                if (!_GLTFMaterialExporter._FuzzyEquals(sRGBBaseColorPixel, Color3.White(), _GLTFMaterialExporter._Epsilon)) {\n                                    writeOutBaseColorTexture = true;\n                                }\n                                metallicRoughnessBuffer[destinationOffset + 1] /=\n                                    metallicRoughnessFactors_1.roughness > _GLTFMaterialExporter._Epsilon ? metallicRoughnessFactors_1.roughness : 1;\n                                metallicRoughnessBuffer[destinationOffset + 2] /= metallicRoughnessFactors_1.metallic > _GLTFMaterialExporter._Epsilon ? metallicRoughnessFactors_1.metallic : 1;\n                                metallicRoughnessPixel = Color3.FromInts(255, metallicRoughnessBuffer[destinationOffset + 1], metallicRoughnessBuffer[destinationOffset + 2]);\n                                if (!_GLTFMaterialExporter._FuzzyEquals(metallicRoughnessPixel, Color3.White(), _GLTFMaterialExporter._Epsilon)) {\n                                    writeOutMetallicRoughnessTexture = true;\n                                }\n                            }\n                        }\n                        if (writeOutMetallicRoughnessTexture) {\n                            promise = this._createBase64FromCanvasAsync(metallicRoughnessBuffer, width, height, mimeType).then(function (metallicRoughnessBase64) {\n                                metallicRoughnessFactors_1.metallicRoughnessTextureBase64 = metallicRoughnessBase64;\n                            });\n                            promises.push(promise);\n                        }\n                        if (writeOutBaseColorTexture) {\n                            promise = this._createBase64FromCanvasAsync(baseColorBuffer, width, height, mimeType).then(function (baseColorBase64) {\n                                metallicRoughnessFactors_1.baseColorTextureBase64 = baseColorBase64;\n                            });\n                            promises.push(promise);\n                        }\n                        return [2 /*return*/, Promise.all(promises).then(function () {\n                                return metallicRoughnessFactors_1;\n                            })];\n                    case 3: return [2 /*return*/, Promise.reject(\"_ConvertSpecularGlossinessTexturesToMetallicRoughness: Scene from textures is missing!\")];\n                }\n            });\n        });\n    };\n    /**\n     * Converts specular glossiness material properties to metallic roughness\n     * @param specularGlossiness interface with specular glossiness material properties\n     * @returns interface with metallic roughness material properties\n     */\n    _GLTFMaterialExporter.prototype._convertSpecularGlossinessToMetallicRoughness = function (specularGlossiness) {\n        var diffusePerceivedBrightness = this._getPerceivedBrightness(specularGlossiness.diffuseColor);\n        var specularPerceivedBrightness = this._getPerceivedBrightness(specularGlossiness.specularColor);\n        var oneMinusSpecularStrength = 1 - this._getMaxComponent(specularGlossiness.specularColor);\n        var metallic = _GLTFMaterialExporter._SolveMetallic(diffusePerceivedBrightness, specularPerceivedBrightness, oneMinusSpecularStrength);\n        var baseColorFromDiffuse = specularGlossiness.diffuseColor.scale(oneMinusSpecularStrength / (1.0 - _GLTFMaterialExporter._DielectricSpecular.r) / Math.max(1 - metallic, _GLTFMaterialExporter._Epsilon));\n        var baseColorFromSpecular = specularGlossiness.specularColor\n            .subtract(_GLTFMaterialExporter._DielectricSpecular.scale(1 - metallic))\n            .scale(1 / Math.max(metallic, _GLTFMaterialExporter._Epsilon));\n        var baseColor = Color3.Lerp(baseColorFromDiffuse, baseColorFromSpecular, metallic * metallic);\n        baseColor = baseColor.clampToRef(0, 1, baseColor);\n        var metallicRoughness = {\n            baseColor: baseColor,\n            metallic: metallic,\n            roughness: 1 - specularGlossiness.glossiness,\n        };\n        return metallicRoughness;\n    };\n    /**\n     * Calculates the surface reflectance, independent of lighting conditions\n     * @param color Color source to calculate brightness from\n     * @returns number representing the perceived brightness, or zero if color is undefined\n     */\n    _GLTFMaterialExporter.prototype._getPerceivedBrightness = function (color) {\n        if (color) {\n            return Math.sqrt(0.299 * color.r * color.r + 0.587 * color.g * color.g + 0.114 * color.b * color.b);\n        }\n        return 0;\n    };\n    /**\n     * Returns the maximum color component value\n     * @param color\n     * @returns maximum color component value, or zero if color is null or undefined\n     */\n    _GLTFMaterialExporter.prototype._getMaxComponent = function (color) {\n        if (color) {\n            return Math.max(color.r, Math.max(color.g, color.b));\n        }\n        return 0;\n    };\n    /**\n     * Convert a PBRMaterial (Metallic/Roughness) to Metallic Roughness factors\n     * @param babylonPBRMaterial BJS PBR Metallic Roughness Material\n     * @param mimeType mime type to use for the textures\n     * @param glTFPbrMetallicRoughness glTF PBR Metallic Roughness interface\n     * @param hasTextureCoords specifies if texture coordinates are present on the submesh to determine if textures should be applied\n     * @returns glTF PBR Metallic Roughness factors\n     */\n    _GLTFMaterialExporter.prototype._convertMetalRoughFactorsToMetallicRoughnessAsync = function (babylonPBRMaterial, mimeType, glTFPbrMetallicRoughness, hasTextureCoords) {\n        var promises = [];\n        var baseColor = babylonPBRMaterial._albedoColor;\n        var metallic = babylonPBRMaterial._metallic;\n        var roughness = babylonPBRMaterial._roughness;\n        var metallicRoughness = {\n            baseColor: baseColor,\n            metallic: metallic,\n            roughness: roughness,\n        };\n        if (hasTextureCoords) {\n            var albedoTexture = babylonPBRMaterial._albedoTexture;\n            if (albedoTexture) {\n                promises.push(this._exportTextureAsync(babylonPBRMaterial._albedoTexture, mimeType).then(function (glTFTexture) {\n                    if (glTFTexture) {\n                        glTFPbrMetallicRoughness.baseColorTexture = glTFTexture;\n                    }\n                }));\n            }\n            var metallicTexture = babylonPBRMaterial._metallicTexture;\n            if (metallicTexture) {\n                promises.push(this._exportTextureAsync(metallicTexture, mimeType).then(function (glTFTexture) {\n                    if (glTFTexture) {\n                        glTFPbrMetallicRoughness.metallicRoughnessTexture = glTFTexture;\n                    }\n                }));\n            }\n        }\n        return Promise.all(promises).then(function () {\n            return metallicRoughness;\n        });\n    };\n    _GLTFMaterialExporter.prototype._getGLTFTextureSampler = function (texture) {\n        var sampler = this._getGLTFTextureWrapModesSampler(texture);\n        var samplingMode = texture instanceof Texture ? texture.samplingMode : null;\n        if (samplingMode != null) {\n            switch (samplingMode) {\n                case Texture.LINEAR_LINEAR: {\n                    sampler.magFilter = 9729 /* LINEAR */;\n                    sampler.minFilter = 9729 /* LINEAR */;\n                    break;\n                }\n                case Texture.LINEAR_NEAREST: {\n                    sampler.magFilter = 9729 /* LINEAR */;\n                    sampler.minFilter = 9728 /* NEAREST */;\n                    break;\n                }\n                case Texture.NEAREST_LINEAR: {\n                    sampler.magFilter = 9728 /* NEAREST */;\n                    sampler.minFilter = 9729 /* LINEAR */;\n                    break;\n                }\n                case Texture.NEAREST_LINEAR_MIPLINEAR: {\n                    sampler.magFilter = 9728 /* NEAREST */;\n                    sampler.minFilter = 9987 /* LINEAR_MIPMAP_LINEAR */;\n                    break;\n                }\n                case Texture.NEAREST_NEAREST: {\n                    sampler.magFilter = 9728 /* NEAREST */;\n                    sampler.minFilter = 9728 /* NEAREST */;\n                    break;\n                }\n                case Texture.NEAREST_LINEAR_MIPNEAREST: {\n                    sampler.magFilter = 9728 /* NEAREST */;\n                    sampler.minFilter = 9985 /* LINEAR_MIPMAP_NEAREST */;\n                    break;\n                }\n                case Texture.LINEAR_NEAREST_MIPNEAREST: {\n                    sampler.magFilter = 9729 /* LINEAR */;\n                    sampler.minFilter = 9984 /* NEAREST_MIPMAP_NEAREST */;\n                    break;\n                }\n                case Texture.LINEAR_NEAREST_MIPLINEAR: {\n                    sampler.magFilter = 9729 /* LINEAR */;\n                    sampler.minFilter = 9986 /* NEAREST_MIPMAP_LINEAR */;\n                    break;\n                }\n                case Texture.NEAREST_NEAREST_MIPLINEAR: {\n                    sampler.magFilter = 9728 /* NEAREST */;\n                    sampler.minFilter = 9986 /* NEAREST_MIPMAP_LINEAR */;\n                    break;\n                }\n                case Texture.LINEAR_LINEAR_MIPLINEAR: {\n                    sampler.magFilter = 9729 /* LINEAR */;\n                    sampler.minFilter = 9987 /* LINEAR_MIPMAP_LINEAR */;\n                    break;\n                }\n                case Texture.LINEAR_LINEAR_MIPNEAREST: {\n                    sampler.magFilter = 9729 /* LINEAR */;\n                    sampler.minFilter = 9985 /* LINEAR_MIPMAP_NEAREST */;\n                    break;\n                }\n                case Texture.NEAREST_NEAREST_MIPNEAREST: {\n                    sampler.magFilter = 9728 /* NEAREST */;\n                    sampler.minFilter = 9984 /* NEAREST_MIPMAP_NEAREST */;\n                    break;\n                }\n            }\n        }\n        return sampler;\n    };\n    _GLTFMaterialExporter.prototype._getGLTFTextureWrapMode = function (wrapMode) {\n        switch (wrapMode) {\n            case Texture.WRAP_ADDRESSMODE: {\n                return 10497 /* REPEAT */;\n            }\n            case Texture.CLAMP_ADDRESSMODE: {\n                return 33071 /* CLAMP_TO_EDGE */;\n            }\n            case Texture.MIRROR_ADDRESSMODE: {\n                return 33648 /* MIRRORED_REPEAT */;\n            }\n            default: {\n                Tools.Error(\"Unsupported Texture Wrap Mode \".concat(wrapMode, \"!\"));\n                return 10497 /* REPEAT */;\n            }\n        }\n    };\n    _GLTFMaterialExporter.prototype._getGLTFTextureWrapModesSampler = function (texture) {\n        var wrapS = this._getGLTFTextureWrapMode(texture instanceof Texture ? texture.wrapU : Texture.WRAP_ADDRESSMODE);\n        var wrapT = this._getGLTFTextureWrapMode(texture instanceof Texture ? texture.wrapV : Texture.WRAP_ADDRESSMODE);\n        if (wrapS === 10497 /* REPEAT */ && wrapT === 10497 /* REPEAT */) {\n            // default wrapping mode in glTF, so omitting\n            return {};\n        }\n        return { wrapS: wrapS, wrapT: wrapT };\n    };\n    /**\n     * Convert a PBRMaterial (Specular/Glossiness) to Metallic Roughness factors\n     * @param babylonPBRMaterial BJS PBR Metallic Roughness Material\n     * @param mimeType mime type to use for the textures\n     * @param glTFPbrMetallicRoughness glTF PBR Metallic Roughness interface\n     * @param hasTextureCoords specifies if texture coordinates are present on the submesh to determine if textures should be applied\n     * @returns glTF PBR Metallic Roughness factors\n     */\n    _GLTFMaterialExporter.prototype._convertSpecGlossFactorsToMetallicRoughnessAsync = function (babylonPBRMaterial, mimeType, glTFPbrMetallicRoughness, hasTextureCoords) {\n        var _this = this;\n        return Promise.resolve().then(function () {\n            var samplers = _this._exporter._samplers;\n            var textures = _this._exporter._textures;\n            var diffuseColor = babylonPBRMaterial._albedoColor;\n            var specularColor = babylonPBRMaterial._reflectivityColor;\n            var glossiness = babylonPBRMaterial._microSurface;\n            var specGloss = {\n                diffuseColor: diffuseColor,\n                specularColor: specularColor,\n                glossiness: glossiness,\n            };\n            var samplerIndex = null;\n            var albedoTexture = babylonPBRMaterial._albedoTexture;\n            var reflectivityTexture = babylonPBRMaterial._reflectivityTexture;\n            if (albedoTexture) {\n                var sampler = _this._getGLTFTextureSampler(albedoTexture);\n                if (sampler.magFilter != null && sampler.minFilter != null && sampler.wrapS != null && sampler.wrapT != null) {\n                    samplers.push(sampler);\n                    samplerIndex = samplers.length - 1;\n                }\n            }\n            var useMicrosurfaceFromReflectivityMapAlpha = babylonPBRMaterial._useMicroSurfaceFromReflectivityMapAlpha;\n            if (reflectivityTexture && !useMicrosurfaceFromReflectivityMapAlpha) {\n                return Promise.reject(\"_ConvertPBRMaterial: Glossiness values not included in the reflectivity texture are currently not supported\");\n            }\n            if ((albedoTexture || reflectivityTexture) && hasTextureCoords) {\n                return _this._convertSpecularGlossinessTexturesToMetallicRoughnessAsync(albedoTexture, reflectivityTexture, specGloss, mimeType).then(function (metallicRoughnessFactors) {\n                    if (metallicRoughnessFactors.baseColorTextureBase64) {\n                        var glTFBaseColorTexture = _this._getTextureInfoFromBase64(metallicRoughnessFactors.baseColorTextureBase64, \"bjsBaseColorTexture_\" + textures.length + \".png\", mimeType, albedoTexture ? albedoTexture.coordinatesIndex : null, samplerIndex);\n                        if (glTFBaseColorTexture) {\n                            glTFPbrMetallicRoughness.baseColorTexture = glTFBaseColorTexture;\n                        }\n                    }\n                    if (metallicRoughnessFactors.metallicRoughnessTextureBase64) {\n                        var glTFMRColorTexture = _this._getTextureInfoFromBase64(metallicRoughnessFactors.metallicRoughnessTextureBase64, \"bjsMetallicRoughnessTexture_\" + textures.length + \".png\", mimeType, reflectivityTexture ? reflectivityTexture.coordinatesIndex : null, samplerIndex);\n                        if (glTFMRColorTexture) {\n                            glTFPbrMetallicRoughness.metallicRoughnessTexture = glTFMRColorTexture;\n                        }\n                    }\n                    return metallicRoughnessFactors;\n                });\n            }\n            else {\n                return _this._convertSpecularGlossinessToMetallicRoughness(specGloss);\n            }\n        });\n    };\n    /**\n     * Converts a Babylon PBR Base Material to a glTF Material\n     * @param babylonPBRMaterial BJS PBR Base Material\n     * @param mimeType mime type to use for the textures\n     * @param hasTextureCoords specifies if texture coordinates are present on the submesh to determine if textures should be applied\n     */\n    _GLTFMaterialExporter.prototype._convertPBRMaterialAsync = function (babylonPBRMaterial, mimeType, hasTextureCoords) {\n        var _this = this;\n        var glTFPbrMetallicRoughness = {};\n        var glTFMaterial = {\n            name: babylonPBRMaterial.name,\n        };\n        var useMetallicRoughness = babylonPBRMaterial.isMetallicWorkflow();\n        if (useMetallicRoughness) {\n            var albedoColor = babylonPBRMaterial._albedoColor;\n            var alpha = babylonPBRMaterial.alpha;\n            if (albedoColor) {\n                glTFPbrMetallicRoughness.baseColorFactor = [albedoColor.r, albedoColor.g, albedoColor.b, alpha];\n            }\n            return this._convertMetalRoughFactorsToMetallicRoughnessAsync(babylonPBRMaterial, mimeType, glTFPbrMetallicRoughness, hasTextureCoords).then(function (metallicRoughness) {\n                return _this._setMetallicRoughnessPbrMaterial(metallicRoughness, babylonPBRMaterial, glTFMaterial, glTFPbrMetallicRoughness, mimeType, hasTextureCoords);\n            });\n        }\n        else {\n            return this._convertSpecGlossFactorsToMetallicRoughnessAsync(babylonPBRMaterial, mimeType, glTFPbrMetallicRoughness, hasTextureCoords).then(function (metallicRoughness) {\n                return _this._setMetallicRoughnessPbrMaterial(metallicRoughness, babylonPBRMaterial, glTFMaterial, glTFPbrMetallicRoughness, mimeType, hasTextureCoords);\n            });\n        }\n    };\n    _GLTFMaterialExporter.prototype._setMetallicRoughnessPbrMaterial = function (metallicRoughness, babylonPBRMaterial, glTFMaterial, glTFPbrMetallicRoughness, mimeType, hasTextureCoords) {\n        var materialMap = this._exporter._materialMap;\n        var materials = this._exporter._materials;\n        var promises = [];\n        if (metallicRoughness) {\n            _GLTFMaterialExporter._SetAlphaMode(glTFMaterial, babylonPBRMaterial);\n            if (!(_GLTFMaterialExporter._FuzzyEquals(metallicRoughness.baseColor, Color3.White(), _GLTFMaterialExporter._Epsilon) &&\n                babylonPBRMaterial.alpha >= _GLTFMaterialExporter._Epsilon)) {\n                glTFPbrMetallicRoughness.baseColorFactor = [metallicRoughness.baseColor.r, metallicRoughness.baseColor.g, metallicRoughness.baseColor.b, babylonPBRMaterial.alpha];\n            }\n            if (metallicRoughness.metallic != null && metallicRoughness.metallic !== 1) {\n                glTFPbrMetallicRoughness.metallicFactor = metallicRoughness.metallic;\n            }\n            if (metallicRoughness.roughness != null && metallicRoughness.roughness !== 1) {\n                glTFPbrMetallicRoughness.roughnessFactor = metallicRoughness.roughness;\n            }\n            if (babylonPBRMaterial.backFaceCulling != null && !babylonPBRMaterial.backFaceCulling) {\n                if (!babylonPBRMaterial._twoSidedLighting) {\n                    Tools.Warn(babylonPBRMaterial.name + \": Back-face culling disabled and two-sided lighting disabled is not supported in glTF.\");\n                }\n                glTFMaterial.doubleSided = true;\n            }\n            if (hasTextureCoords) {\n                var bumpTexture_1 = babylonPBRMaterial._bumpTexture;\n                if (bumpTexture_1) {\n                    var promise = this._exportTextureAsync(bumpTexture_1, mimeType).then(function (glTFTexture) {\n                        if (glTFTexture) {\n                            glTFMaterial.normalTexture = glTFTexture;\n                            if (bumpTexture_1.level !== 1) {\n                                glTFMaterial.normalTexture.scale = bumpTexture_1.level;\n                            }\n                        }\n                    });\n                    promises.push(promise);\n                }\n                var ambientTexture = babylonPBRMaterial._ambientTexture;\n                if (ambientTexture) {\n                    var promise = this._exportTextureAsync(ambientTexture, mimeType).then(function (glTFTexture) {\n                        if (glTFTexture) {\n                            var occlusionTexture = {\n                                index: glTFTexture.index,\n                                texCoord: glTFTexture.texCoord,\n                            };\n                            glTFMaterial.occlusionTexture = occlusionTexture;\n                            var ambientTextureStrength = babylonPBRMaterial._ambientTextureStrength;\n                            if (ambientTextureStrength) {\n                                occlusionTexture.strength = ambientTextureStrength;\n                            }\n                        }\n                    });\n                    promises.push(promise);\n                }\n                var emissiveTexture = babylonPBRMaterial._emissiveTexture;\n                if (emissiveTexture) {\n                    var promise = this._exportTextureAsync(emissiveTexture, mimeType).then(function (glTFTexture) {\n                        if (glTFTexture) {\n                            glTFMaterial.emissiveTexture = glTFTexture;\n                        }\n                    });\n                    promises.push(promise);\n                }\n            }\n            var emissiveColor = babylonPBRMaterial._emissiveColor;\n            if (!_GLTFMaterialExporter._FuzzyEquals(emissiveColor, Color3.Black(), _GLTFMaterialExporter._Epsilon)) {\n                glTFMaterial.emissiveFactor = emissiveColor.asArray();\n            }\n            glTFMaterial.pbrMetallicRoughness = glTFPbrMetallicRoughness;\n            materials.push(glTFMaterial);\n            materialMap[babylonPBRMaterial.uniqueId] = materials.length - 1;\n        }\n        return this._finishMaterial(promises, glTFMaterial, babylonPBRMaterial, mimeType);\n    };\n    _GLTFMaterialExporter.prototype._getPixelsFromTexture = function (babylonTexture) {\n        var pixels = babylonTexture.textureType === Constants.TEXTURETYPE_UNSIGNED_INT\n            ? babylonTexture.readPixels()\n            : babylonTexture.readPixels();\n        return pixels;\n    };\n    /**\n     * Extracts a texture from a Babylon texture into file data and glTF data\n     * @param babylonTexture Babylon texture to extract\n     * @param mimeType Mime Type of the babylonTexture\n     * @return glTF texture info, or null if the texture format is not supported\n     */\n    _GLTFMaterialExporter.prototype._exportTextureAsync = function (babylonTexture, mimeType) {\n        var _this = this;\n        var extensionPromise = this._exporter._extensionsPreExportTextureAsync(\"exporter\", babylonTexture, mimeType);\n        if (!extensionPromise) {\n            return this._exportTextureInfoAsync(babylonTexture, mimeType);\n        }\n        return extensionPromise.then(function (texture) {\n            if (!texture) {\n                return _this._exportTextureInfoAsync(babylonTexture, mimeType);\n            }\n            return _this._exportTextureInfoAsync(texture, mimeType);\n        });\n    };\n    _GLTFMaterialExporter.prototype._exportTextureInfoAsync = function (babylonTexture, mimeType) {\n        var _this = this;\n        return Promise.resolve().then(function () { return __awaiter(_this, void 0, void 0, function () {\n            var textureUid, pixels, samplers, sampler, samplerIndex_1, foundSamplerIndex, i, s, size;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        textureUid = babylonTexture.uid;\n                        if (!(textureUid in this._textureMap)) return [3 /*break*/, 1];\n                        return [2 /*return*/, this._textureMap[textureUid]];\n                    case 1: return [4 /*yield*/, this._getPixelsFromTexture(babylonTexture)];\n                    case 2:\n                        pixels = _a.sent();\n                        if (!pixels) {\n                            return [2 /*return*/, null];\n                        }\n                        samplers = this._exporter._samplers;\n                        sampler = this._getGLTFTextureSampler(babylonTexture);\n                        samplerIndex_1 = null;\n                        foundSamplerIndex = null;\n                        for (i = 0; i < samplers.length; ++i) {\n                            s = samplers[i];\n                            if (s.minFilter === sampler.minFilter && s.magFilter === sampler.magFilter && s.wrapS === sampler.wrapS && s.wrapT === sampler.wrapT) {\n                                foundSamplerIndex = i;\n                                break;\n                            }\n                        }\n                        if (foundSamplerIndex == null) {\n                            samplers.push(sampler);\n                            samplerIndex_1 = samplers.length - 1;\n                        }\n                        else {\n                            samplerIndex_1 = foundSamplerIndex;\n                        }\n                        size = babylonTexture.getSize();\n                        // Preserve texture mime type if defined\n                        if (babylonTexture.mimeType) {\n                            switch (babylonTexture.mimeType) {\n                                case \"image/jpeg\":\n                                    mimeType = \"image/jpeg\" /* JPEG */;\n                                    break;\n                                case \"image/png\":\n                                    mimeType = \"image/png\" /* PNG */;\n                                    break;\n                            }\n                        }\n                        return [2 /*return*/, this._createBase64FromCanvasAsync(pixels, size.width, size.height, mimeType).then(function (base64Data) {\n                                var textureInfo = _this._getTextureInfoFromBase64(base64Data, babylonTexture.name.replace(/\\.\\/|\\/|\\.\\\\|\\\\/g, \"_\"), mimeType, babylonTexture.coordinatesIndex, samplerIndex_1);\n                                if (textureInfo) {\n                                    _this._textureMap[textureUid] = textureInfo;\n                                    _this._exporter._extensionsPostExportTextures(\"linkTextureInfo\", textureInfo, babylonTexture);\n                                }\n                                return textureInfo;\n                            })];\n                }\n            });\n        }); });\n    };\n    /**\n     * Builds a texture from base64 string\n     * @param base64Texture base64 texture string\n     * @param baseTextureName Name to use for the texture\n     * @param mimeType image mime type for the texture\n     * @param texCoordIndex\n     * @param samplerIndex\n     * @returns glTF texture info, or null if the texture format is not supported\n     */\n    _GLTFMaterialExporter.prototype._getTextureInfoFromBase64 = function (base64Texture, baseTextureName, mimeType, texCoordIndex, samplerIndex) {\n        var textures = this._exporter._textures;\n        var images = this._exporter._images;\n        var imageData = this._exporter._imageData;\n        var textureInfo = null;\n        var glTFTexture = {\n            source: images.length,\n            name: baseTextureName,\n        };\n        if (samplerIndex != null) {\n            glTFTexture.sampler = samplerIndex;\n        }\n        var binStr = atob(base64Texture.split(\",\")[1]);\n        var arrBuff = new ArrayBuffer(binStr.length);\n        var arr = new Uint8Array(arrBuff);\n        for (var i = 0, length_2 = binStr.length; i < length_2; ++i) {\n            arr[i] = binStr.charCodeAt(i);\n        }\n        var imageValues = { data: arr, mimeType: mimeType };\n        var extension = mimeType === \"image/jpeg\" /* JPEG */ ? \".jpeg\" : \".png\";\n        var textureName = baseTextureName + extension;\n        var originalTextureName = textureName;\n        if (textureName in imageData) {\n            textureName = \"\".concat(baseTextureName, \"_\").concat(Tools.RandomId()).concat(extension);\n        }\n        imageData[textureName] = imageValues;\n        if (mimeType === \"image/jpeg\" /* JPEG */ || mimeType === \"image/png\" /* PNG */) {\n            var glTFImage = {\n                name: baseTextureName,\n                uri: textureName,\n            };\n            var foundIndex = null;\n            for (var i = 0; i < images.length; ++i) {\n                if (images[i].uri === originalTextureName) {\n                    foundIndex = i;\n                    break;\n                }\n            }\n            if (foundIndex == null) {\n                images.push(glTFImage);\n                glTFTexture.source = images.length - 1;\n            }\n            else {\n                glTFTexture.source = foundIndex;\n            }\n            textures.push(glTFTexture);\n            textureInfo = {\n                index: textures.length - 1,\n            };\n            if (texCoordIndex != null) {\n                textureInfo.texCoord = texCoordIndex;\n            }\n        }\n        else {\n            Tools.Error(\"Unsupported texture mime type \".concat(mimeType));\n        }\n        return textureInfo;\n    };\n    /**\n     * Represents the dielectric specular values for R, G and B\n     */\n    _GLTFMaterialExporter._DielectricSpecular = new Color3(0.04, 0.04, 0.04);\n    /**\n     * Allows the maximum specular power to be defined for material calculations\n     */\n    _GLTFMaterialExporter._MaxSpecularPower = 1024;\n    /**\n     * Numeric tolerance value\n     */\n    _GLTFMaterialExporter._Epsilon = 1e-6;\n    return _GLTFMaterialExporter;\n}());\nexport { _GLTFMaterialExporter };\n//# sourceMappingURL=glTFMaterialExporter.js.map","import { __spreadArray } from \"tslib\";\nimport { Vector2, Vector3, Vector4, Quaternion } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { Color3, Color4 } from \"@babylonjs/core/Maths/math.color.js\";\nimport { Tools } from \"@babylonjs/core/Misc/tools.js\";\nimport { VertexBuffer } from \"@babylonjs/core/Buffers/buffer.js\";\nimport { TransformNode } from \"@babylonjs/core/Meshes/transformNode.js\";\nimport { AbstractMesh } from \"@babylonjs/core/Meshes/abstractMesh.js\";\nimport { Mesh } from \"@babylonjs/core/Meshes/mesh.js\";\nimport { LinesMesh } from \"@babylonjs/core/Meshes/linesMesh.js\";\nimport { InstancedMesh } from \"@babylonjs/core/Meshes/instancedMesh.js\";\nimport { Material } from \"@babylonjs/core/Materials/material.js\";\nimport { Engine } from \"@babylonjs/core/Engines/engine.js\";\nimport { _GLTFMaterialExporter } from \"./glTFMaterialExporter.js\";\nimport { _GLTFUtilities } from \"./glTFUtilities.js\";\nimport { GLTFData } from \"./glTFData.js\";\nimport { _GLTFAnimation } from \"./glTFAnimation.js\";\nimport { Camera } from \"@babylonjs/core/Cameras/camera.js\";\nimport { EngineStore } from \"@babylonjs/core/Engines/engineStore.js\";\nimport { MultiMaterial } from \"@babylonjs/core/Materials/multiMaterial.js\";\n/**\n * Converts Babylon Scene into glTF 2.0.\n * @hidden\n */\nvar _Exporter = /** @class */ (function () {\n    /**\n     * Creates a glTF Exporter instance, which can accept optional exporter options\n     * @param babylonScene Babylon scene object\n     * @param options Options to modify the behavior of the exporter\n     */\n    function _Exporter(babylonScene, options) {\n        /*\n         * Specifies if root Babylon empty nodes that act as a coordinate space transform should be included in export\n         */\n        this._includeCoordinateSystemConversionNodes = false;\n        this._extensions = {};\n        this._glTF = {\n            asset: { generator: \"Babylon.js v\".concat(Engine.Version), version: \"2.0\" },\n        };\n        babylonScene = babylonScene || EngineStore.LastCreatedScene;\n        if (!babylonScene) {\n            return;\n        }\n        this._babylonScene = babylonScene;\n        this._bufferViews = [];\n        this._accessors = [];\n        this._meshes = [];\n        this._scenes = [];\n        this._cameras = [];\n        this._nodes = [];\n        this._images = [];\n        this._materials = [];\n        this._materialMap = [];\n        this._textures = [];\n        this._samplers = [];\n        this._skins = [];\n        this._animations = [];\n        this._imageData = {};\n        this._orderedImageData = [];\n        this._options = options || {};\n        this._animationSampleRate = options && options.animationSampleRate ? options.animationSampleRate : 1 / 60;\n        this._includeCoordinateSystemConversionNodes = options && options.includeCoordinateSystemConversionNodes ? true : false;\n        this._glTFMaterialExporter = new _GLTFMaterialExporter(this);\n        this._loadExtensions();\n    }\n    _Exporter.prototype._applyExtension = function (node, extensions, index, actionAsync) {\n        var _this = this;\n        if (index >= extensions.length) {\n            return Promise.resolve(node);\n        }\n        var currentPromise = actionAsync(extensions[index], node);\n        if (!currentPromise) {\n            return this._applyExtension(node, extensions, index + 1, actionAsync);\n        }\n        return currentPromise.then(function (newNode) { return _this._applyExtension(newNode, extensions, index + 1, actionAsync); });\n    };\n    _Exporter.prototype._applyExtensions = function (node, actionAsync) {\n        var extensions = [];\n        for (var _i = 0, _a = _Exporter._ExtensionNames; _i < _a.length; _i++) {\n            var name_1 = _a[_i];\n            extensions.push(this._extensions[name_1]);\n        }\n        return this._applyExtension(node, extensions, 0, actionAsync);\n    };\n    _Exporter.prototype._extensionsPreExportTextureAsync = function (context, babylonTexture, mimeType) {\n        return this._applyExtensions(babylonTexture, function (extension, node) { return extension.preExportTextureAsync && extension.preExportTextureAsync(context, node, mimeType); });\n    };\n    _Exporter.prototype._extensionsPostExportMeshPrimitiveAsync = function (context, meshPrimitive, babylonSubMesh, binaryWriter) {\n        return this._applyExtensions(meshPrimitive, function (extension, node) { return extension.postExportMeshPrimitiveAsync && extension.postExportMeshPrimitiveAsync(context, node, babylonSubMesh, binaryWriter); });\n    };\n    _Exporter.prototype._extensionsPostExportNodeAsync = function (context, node, babylonNode, nodeMap, binaryWriter) {\n        return this._applyExtensions(node, function (extension, node) { return extension.postExportNodeAsync && extension.postExportNodeAsync(context, node, babylonNode, nodeMap, binaryWriter); });\n    };\n    _Exporter.prototype._extensionsPostExportMaterialAsync = function (context, material, babylonMaterial) {\n        return this._applyExtensions(material, function (extension, node) { return extension.postExportMaterialAsync && extension.postExportMaterialAsync(context, node, babylonMaterial); });\n    };\n    _Exporter.prototype._extensionsPostExportMaterialAdditionalTextures = function (context, material, babylonMaterial) {\n        var output = [];\n        for (var _i = 0, _a = _Exporter._ExtensionNames; _i < _a.length; _i++) {\n            var name_2 = _a[_i];\n            var extension = this._extensions[name_2];\n            if (extension.postExportMaterialAdditionalTextures) {\n                output.push.apply(output, extension.postExportMaterialAdditionalTextures(context, material, babylonMaterial));\n            }\n        }\n        return output;\n    };\n    _Exporter.prototype._extensionsPostExportTextures = function (context, textureInfo, babylonTexture) {\n        for (var _i = 0, _a = _Exporter._ExtensionNames; _i < _a.length; _i++) {\n            var name_3 = _a[_i];\n            var extension = this._extensions[name_3];\n            if (extension.postExportTexture) {\n                extension.postExportTexture(context, textureInfo, babylonTexture);\n            }\n        }\n    };\n    _Exporter.prototype._forEachExtensions = function (action) {\n        for (var _i = 0, _a = _Exporter._ExtensionNames; _i < _a.length; _i++) {\n            var name_4 = _a[_i];\n            var extension = this._extensions[name_4];\n            if (extension.enabled) {\n                action(extension);\n            }\n        }\n    };\n    _Exporter.prototype._extensionsOnExporting = function () {\n        var _this = this;\n        this._forEachExtensions(function (extension) {\n            if (extension.wasUsed) {\n                if (_this._glTF.extensionsUsed == null) {\n                    _this._glTF.extensionsUsed = [];\n                }\n                if (_this._glTF.extensionsUsed.indexOf(extension.name) === -1) {\n                    _this._glTF.extensionsUsed.push(extension.name);\n                }\n                if (extension.required) {\n                    if (_this._glTF.extensionsRequired == null) {\n                        _this._glTF.extensionsRequired = [];\n                    }\n                    if (_this._glTF.extensionsRequired.indexOf(extension.name) === -1) {\n                        _this._glTF.extensionsRequired.push(extension.name);\n                    }\n                }\n                if (_this._glTF.extensions == null) {\n                    _this._glTF.extensions = {};\n                }\n                if (extension.onExporting) {\n                    extension.onExporting();\n                }\n            }\n        });\n    };\n    /**\n     * Load glTF serializer extensions\n     */\n    _Exporter.prototype._loadExtensions = function () {\n        for (var _i = 0, _a = _Exporter._ExtensionNames; _i < _a.length; _i++) {\n            var name_5 = _a[_i];\n            var extension = _Exporter._ExtensionFactories[name_5](this);\n            this._extensions[name_5] = extension;\n        }\n    };\n    _Exporter.prototype.dispose = function () {\n        for (var extensionKey in this._extensions) {\n            var extension = this._extensions[extensionKey];\n            extension.dispose();\n        }\n    };\n    Object.defineProperty(_Exporter.prototype, \"options\", {\n        get: function () {\n            return this._options;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Registers a glTF exporter extension\n     * @param name Name of the extension to export\n     * @param factory The factory function that creates the exporter extension\n     */\n    _Exporter.RegisterExtension = function (name, factory) {\n        if (_Exporter.UnregisterExtension(name)) {\n            Tools.Warn(\"Extension with the name \".concat(name, \" already exists\"));\n        }\n        _Exporter._ExtensionFactories[name] = factory;\n        _Exporter._ExtensionNames.push(name);\n    };\n    /**\n     * Un-registers an exporter extension\n     * @param name The name fo the exporter extension\n     * @returns A boolean indicating whether the extension has been un-registered\n     */\n    _Exporter.UnregisterExtension = function (name) {\n        if (!_Exporter._ExtensionFactories[name]) {\n            return false;\n        }\n        delete _Exporter._ExtensionFactories[name];\n        var index = _Exporter._ExtensionNames.indexOf(name);\n        if (index !== -1) {\n            _Exporter._ExtensionNames.splice(index, 1);\n        }\n        return true;\n    };\n    _Exporter.prototype._reorderIndicesBasedOnPrimitiveMode = function (submesh, primitiveMode, babylonIndices, byteOffset, binaryWriter) {\n        switch (primitiveMode) {\n            case Material.TriangleFillMode: {\n                if (!byteOffset) {\n                    byteOffset = 0;\n                }\n                for (var i = submesh.indexStart, length_1 = submesh.indexStart + submesh.indexCount; i < length_1; i = i + 3) {\n                    var index = byteOffset + i * 4;\n                    // swap the second and third indices\n                    var secondIndex = binaryWriter.getUInt32(index + 4);\n                    var thirdIndex = binaryWriter.getUInt32(index + 8);\n                    binaryWriter.setUInt32(thirdIndex, index + 4);\n                    binaryWriter.setUInt32(secondIndex, index + 8);\n                }\n                break;\n            }\n            case Material.TriangleFanDrawMode: {\n                for (var i = submesh.indexStart + submesh.indexCount - 1, start = submesh.indexStart; i >= start; --i) {\n                    binaryWriter.setUInt32(babylonIndices[i], byteOffset);\n                    byteOffset += 4;\n                }\n                break;\n            }\n            case Material.TriangleStripDrawMode: {\n                if (submesh.indexCount >= 3) {\n                    binaryWriter.setUInt32(babylonIndices[submesh.indexStart + 2], byteOffset + 4);\n                    binaryWriter.setUInt32(babylonIndices[submesh.indexStart + 1], byteOffset + 8);\n                }\n                break;\n            }\n        }\n    };\n    /**\n     * Reorders the vertex attribute data based on the primitive mode.  This is necessary when indices are not available and the winding order is\n     * clock-wise during export to glTF\n     * @param submesh BabylonJS submesh\n     * @param primitiveMode Primitive mode of the mesh\n     * @param sideOrientation the winding order of the submesh\n     * @param vertexBufferKind The type of vertex attribute\n     * @param meshAttributeArray The vertex attribute data\n     * @param byteOffset The offset to the binary data\n     * @param binaryWriter The binary data for the glTF file\n     * @param convertToRightHandedSystem Converts the values to right-handed\n     */\n    _Exporter.prototype._reorderVertexAttributeDataBasedOnPrimitiveMode = function (submesh, primitiveMode, sideOrientation, vertexBufferKind, meshAttributeArray, byteOffset, binaryWriter, convertToRightHandedSystem) {\n        if (convertToRightHandedSystem && sideOrientation === Material.ClockWiseSideOrientation) {\n            switch (primitiveMode) {\n                case Material.TriangleFillMode: {\n                    this._reorderTriangleFillMode(submesh, primitiveMode, sideOrientation, vertexBufferKind, meshAttributeArray, byteOffset, binaryWriter, convertToRightHandedSystem);\n                    break;\n                }\n                case Material.TriangleStripDrawMode: {\n                    this._reorderTriangleStripDrawMode(submesh, primitiveMode, sideOrientation, vertexBufferKind, meshAttributeArray, byteOffset, binaryWriter, convertToRightHandedSystem);\n                    break;\n                }\n                case Material.TriangleFanDrawMode: {\n                    this._reorderTriangleFanMode(submesh, primitiveMode, sideOrientation, vertexBufferKind, meshAttributeArray, byteOffset, binaryWriter, convertToRightHandedSystem);\n                    break;\n                }\n            }\n        }\n    };\n    /**\n     * Reorders the vertex attributes in the correct triangle mode order .  This is necessary when indices are not available and the winding order is\n     * clock-wise during export to glTF\n     * @param submesh BabylonJS submesh\n     * @param primitiveMode Primitive mode of the mesh\n     * @param sideOrientation the winding order of the submesh\n     * @param vertexBufferKind The type of vertex attribute\n     * @param meshAttributeArray The vertex attribute data\n     * @param byteOffset The offset to the binary data\n     * @param binaryWriter The binary data for the glTF file\n     * @param convertToRightHandedSystem Converts the values to right-handed\n     */\n    _Exporter.prototype._reorderTriangleFillMode = function (submesh, primitiveMode, sideOrientation, vertexBufferKind, meshAttributeArray, byteOffset, binaryWriter, convertToRightHandedSystem) {\n        var vertexBuffer = this._getVertexBufferFromMesh(vertexBufferKind, submesh.getMesh());\n        if (vertexBuffer) {\n            var stride = vertexBuffer.byteStride / VertexBuffer.GetTypeByteLength(vertexBuffer.type);\n            if (submesh.verticesCount % 3 !== 0) {\n                Tools.Error(\"The submesh vertices for the triangle fill mode is not divisible by 3!\");\n            }\n            else {\n                var vertexData = [];\n                var index = 0;\n                switch (vertexBufferKind) {\n                    case VertexBuffer.PositionKind:\n                    case VertexBuffer.NormalKind: {\n                        for (var x = submesh.verticesStart; x < submesh.verticesStart + submesh.verticesCount; x = x + 3) {\n                            index = x * stride;\n                            vertexData.push(Vector3.FromArray(meshAttributeArray, index));\n                            vertexData.push(Vector3.FromArray(meshAttributeArray, index + 2 * stride));\n                            vertexData.push(Vector3.FromArray(meshAttributeArray, index + stride));\n                        }\n                        break;\n                    }\n                    case VertexBuffer.TangentKind: {\n                        for (var x = submesh.verticesStart; x < submesh.verticesStart + submesh.verticesCount; x = x + 3) {\n                            index = x * stride;\n                            vertexData.push(Vector4.FromArray(meshAttributeArray, index));\n                            vertexData.push(Vector4.FromArray(meshAttributeArray, index + 2 * stride));\n                            vertexData.push(Vector4.FromArray(meshAttributeArray, index + stride));\n                        }\n                        break;\n                    }\n                    case VertexBuffer.ColorKind: {\n                        var size = vertexBuffer.getSize();\n                        for (var x = submesh.verticesStart; x < submesh.verticesStart + submesh.verticesCount; x = x + size) {\n                            index = x * stride;\n                            if (size === 4) {\n                                vertexData.push(Vector4.FromArray(meshAttributeArray, index));\n                                vertexData.push(Vector4.FromArray(meshAttributeArray, index + 2 * stride));\n                                vertexData.push(Vector4.FromArray(meshAttributeArray, index + stride));\n                            }\n                            else {\n                                vertexData.push(Vector3.FromArray(meshAttributeArray, index));\n                                vertexData.push(Vector3.FromArray(meshAttributeArray, index + 2 * stride));\n                                vertexData.push(Vector3.FromArray(meshAttributeArray, index + stride));\n                            }\n                        }\n                        break;\n                    }\n                    case VertexBuffer.UVKind:\n                    case VertexBuffer.UV2Kind: {\n                        for (var x = submesh.verticesStart; x < submesh.verticesStart + submesh.verticesCount; x = x + 3) {\n                            index = x * stride;\n                            vertexData.push(Vector2.FromArray(meshAttributeArray, index));\n                            vertexData.push(Vector2.FromArray(meshAttributeArray, index + 2 * stride));\n                            vertexData.push(Vector2.FromArray(meshAttributeArray, index + stride));\n                        }\n                        break;\n                    }\n                    default: {\n                        Tools.Error(\"Unsupported Vertex Buffer type: \".concat(vertexBufferKind));\n                    }\n                }\n                this._writeVertexAttributeData(vertexData, byteOffset, vertexBufferKind, meshAttributeArray, binaryWriter, convertToRightHandedSystem);\n            }\n        }\n        else {\n            Tools.Warn(\"reorderTriangleFillMode: Vertex Buffer Kind \".concat(vertexBufferKind, \" not present!\"));\n        }\n    };\n    /**\n     * Reorders the vertex attributes in the correct triangle strip order.  This is necessary when indices are not available and the winding order is\n     * clock-wise during export to glTF\n     * @param submesh BabylonJS submesh\n     * @param primitiveMode Primitive mode of the mesh\n     * @param sideOrientation the winding order of the submesh\n     * @param vertexBufferKind The type of vertex attribute\n     * @param meshAttributeArray The vertex attribute data\n     * @param byteOffset The offset to the binary data\n     * @param binaryWriter The binary data for the glTF file\n     * @param convertToRightHandedSystem Converts the values to right-handed\n     */\n    _Exporter.prototype._reorderTriangleStripDrawMode = function (submesh, primitiveMode, sideOrientation, vertexBufferKind, meshAttributeArray, byteOffset, binaryWriter, convertToRightHandedSystem) {\n        var vertexBuffer = this._getVertexBufferFromMesh(vertexBufferKind, submesh.getMesh());\n        if (vertexBuffer) {\n            var stride = vertexBuffer.byteStride / VertexBuffer.GetTypeByteLength(vertexBuffer.type);\n            var vertexData = [];\n            var index = 0;\n            switch (vertexBufferKind) {\n                case VertexBuffer.PositionKind:\n                case VertexBuffer.NormalKind: {\n                    index = submesh.verticesStart;\n                    vertexData.push(Vector3.FromArray(meshAttributeArray, index + 2 * stride));\n                    vertexData.push(Vector3.FromArray(meshAttributeArray, index + stride));\n                    break;\n                }\n                case VertexBuffer.TangentKind: {\n                    for (var x = submesh.verticesStart + submesh.verticesCount - 1; x >= submesh.verticesStart; --x) {\n                        index = x * stride;\n                        vertexData.push(Vector4.FromArray(meshAttributeArray, index));\n                    }\n                    break;\n                }\n                case VertexBuffer.ColorKind: {\n                    for (var x = submesh.verticesStart + submesh.verticesCount - 1; x >= submesh.verticesStart; --x) {\n                        index = x * stride;\n                        vertexBuffer.getSize() === 4\n                            ? vertexData.push(Vector4.FromArray(meshAttributeArray, index))\n                            : vertexData.push(Vector3.FromArray(meshAttributeArray, index));\n                    }\n                    break;\n                }\n                case VertexBuffer.UVKind:\n                case VertexBuffer.UV2Kind: {\n                    for (var x = submesh.verticesStart + submesh.verticesCount - 1; x >= submesh.verticesStart; --x) {\n                        index = x * stride;\n                        vertexData.push(Vector2.FromArray(meshAttributeArray, index));\n                    }\n                    break;\n                }\n                default: {\n                    Tools.Error(\"Unsupported Vertex Buffer type: \".concat(vertexBufferKind));\n                }\n            }\n            this._writeVertexAttributeData(vertexData, byteOffset + 12, vertexBufferKind, meshAttributeArray, binaryWriter, convertToRightHandedSystem);\n        }\n        else {\n            Tools.Warn(\"reorderTriangleStripDrawMode: Vertex buffer kind \".concat(vertexBufferKind, \" not present!\"));\n        }\n    };\n    /**\n     * Reorders the vertex attributes in the correct triangle fan order.  This is necessary when indices are not available and the winding order is\n     * clock-wise during export to glTF\n     * @param submesh BabylonJS submesh\n     * @param primitiveMode Primitive mode of the mesh\n     * @param sideOrientation the winding order of the submesh\n     * @param vertexBufferKind The type of vertex attribute\n     * @param meshAttributeArray The vertex attribute data\n     * @param byteOffset The offset to the binary data\n     * @param binaryWriter The binary data for the glTF file\n     * @param convertToRightHandedSystem Converts the values to right-handed\n     */\n    _Exporter.prototype._reorderTriangleFanMode = function (submesh, primitiveMode, sideOrientation, vertexBufferKind, meshAttributeArray, byteOffset, binaryWriter, convertToRightHandedSystem) {\n        var vertexBuffer = this._getVertexBufferFromMesh(vertexBufferKind, submesh.getMesh());\n        if (vertexBuffer) {\n            var stride = vertexBuffer.byteStride / VertexBuffer.GetTypeByteLength(vertexBuffer.type);\n            var vertexData = [];\n            var index = 0;\n            switch (vertexBufferKind) {\n                case VertexBuffer.PositionKind:\n                case VertexBuffer.NormalKind: {\n                    for (var x = submesh.verticesStart + submesh.verticesCount - 1; x >= submesh.verticesStart; --x) {\n                        index = x * stride;\n                        vertexData.push(Vector3.FromArray(meshAttributeArray, index));\n                    }\n                    break;\n                }\n                case VertexBuffer.TangentKind: {\n                    for (var x = submesh.verticesStart + submesh.verticesCount - 1; x >= submesh.verticesStart; --x) {\n                        index = x * stride;\n                        vertexData.push(Vector4.FromArray(meshAttributeArray, index));\n                    }\n                    break;\n                }\n                case VertexBuffer.ColorKind: {\n                    for (var x = submesh.verticesStart + submesh.verticesCount - 1; x >= submesh.verticesStart; --x) {\n                        index = x * stride;\n                        vertexData.push(Vector4.FromArray(meshAttributeArray, index));\n                        vertexBuffer.getSize() === 4\n                            ? vertexData.push(Vector4.FromArray(meshAttributeArray, index))\n                            : vertexData.push(Vector3.FromArray(meshAttributeArray, index));\n                    }\n                    break;\n                }\n                case VertexBuffer.UVKind:\n                case VertexBuffer.UV2Kind: {\n                    for (var x = submesh.verticesStart + submesh.verticesCount - 1; x >= submesh.verticesStart; --x) {\n                        index = x * stride;\n                        vertexData.push(Vector2.FromArray(meshAttributeArray, index));\n                    }\n                    break;\n                }\n                default: {\n                    Tools.Error(\"Unsupported Vertex Buffer type: \".concat(vertexBufferKind));\n                }\n            }\n            this._writeVertexAttributeData(vertexData, byteOffset, vertexBufferKind, meshAttributeArray, binaryWriter, convertToRightHandedSystem);\n        }\n        else {\n            Tools.Warn(\"reorderTriangleFanMode: Vertex buffer kind \".concat(vertexBufferKind, \" not present!\"));\n        }\n    };\n    /**\n     * Writes the vertex attribute data to binary\n     * @param vertices The vertices to write to the binary writer\n     * @param byteOffset The offset into the binary writer to overwrite binary data\n     * @param vertexAttributeKind The vertex attribute type\n     * @param meshAttributeArray The vertex attribute data\n     * @param binaryWriter The writer containing the binary data\n     * @param convertToRightHandedSystem Converts the values to right-handed\n     */\n    _Exporter.prototype._writeVertexAttributeData = function (vertices, byteOffset, vertexAttributeKind, meshAttributeArray, binaryWriter, convertToRightHandedSystem) {\n        for (var _i = 0, vertices_1 = vertices; _i < vertices_1.length; _i++) {\n            var vertex = vertices_1[_i];\n            if (convertToRightHandedSystem && !(vertexAttributeKind === VertexBuffer.ColorKind) && !(vertex instanceof Vector2)) {\n                if (vertex instanceof Vector3) {\n                    if (vertexAttributeKind === VertexBuffer.NormalKind) {\n                        _GLTFUtilities._GetRightHandedNormalVector3FromRef(vertex);\n                    }\n                    else if (vertexAttributeKind === VertexBuffer.PositionKind) {\n                        _GLTFUtilities._GetRightHandedPositionVector3FromRef(vertex);\n                    }\n                    else {\n                        Tools.Error(\"Unsupported vertex attribute kind!\");\n                    }\n                }\n                else {\n                    _GLTFUtilities._GetRightHandedVector4FromRef(vertex);\n                }\n            }\n            if (vertexAttributeKind === VertexBuffer.NormalKind) {\n                vertex.normalize();\n            }\n            else if (vertexAttributeKind === VertexBuffer.TangentKind && vertex instanceof Vector4) {\n                _GLTFUtilities._NormalizeTangentFromRef(vertex);\n            }\n            for (var _a = 0, _b = vertex.asArray(); _a < _b.length; _a++) {\n                var component = _b[_a];\n                binaryWriter.setFloat32(component, byteOffset);\n                byteOffset += 4;\n            }\n        }\n    };\n    /**\n     * Writes mesh attribute data to a data buffer\n     * Returns the bytelength of the data\n     * @param vertexBufferKind Indicates what kind of vertex data is being passed in\n     * @param attributeComponentKind\n     * @param meshAttributeArray Array containing the attribute data\n     * @param stride Specifies the space between data\n     * @param binaryWriter The buffer to write the binary data to\n     * @param convertToRightHandedSystem Converts the values to right-handed\n     * @param babylonTransformNode\n     */\n    _Exporter.prototype._writeAttributeData = function (vertexBufferKind, attributeComponentKind, meshAttributeArray, stride, binaryWriter, convertToRightHandedSystem, babylonTransformNode) {\n        var vertexAttributes = [];\n        var index;\n        switch (vertexBufferKind) {\n            case VertexBuffer.PositionKind: {\n                for (var k = 0, length_2 = meshAttributeArray.length / stride; k < length_2; ++k) {\n                    index = k * stride;\n                    var vertexData = Vector3.FromArray(meshAttributeArray, index);\n                    if (convertToRightHandedSystem) {\n                        _GLTFUtilities._GetRightHandedPositionVector3FromRef(vertexData);\n                    }\n                    vertexAttributes.push(vertexData.asArray());\n                }\n                break;\n            }\n            case VertexBuffer.NormalKind: {\n                for (var k = 0, length_3 = meshAttributeArray.length / stride; k < length_3; ++k) {\n                    index = k * stride;\n                    var vertexData = Vector3.FromArray(meshAttributeArray, index);\n                    if (convertToRightHandedSystem) {\n                        _GLTFUtilities._GetRightHandedNormalVector3FromRef(vertexData);\n                    }\n                    vertexData.normalize();\n                    vertexAttributes.push(vertexData.asArray());\n                }\n                break;\n            }\n            case VertexBuffer.TangentKind: {\n                for (var k = 0, length_4 = meshAttributeArray.length / stride; k < length_4; ++k) {\n                    index = k * stride;\n                    var vertexData = Vector4.FromArray(meshAttributeArray, index);\n                    if (convertToRightHandedSystem) {\n                        _GLTFUtilities._GetRightHandedVector4FromRef(vertexData);\n                    }\n                    _GLTFUtilities._NormalizeTangentFromRef(vertexData);\n                    vertexAttributes.push(vertexData.asArray());\n                }\n                break;\n            }\n            case VertexBuffer.ColorKind: {\n                var meshMaterial = babylonTransformNode.material;\n                var convertToLinear = meshMaterial ? meshMaterial.getClassName() === \"StandardMaterial\" : true;\n                var vertexData = stride === 3 ? new Color3() : new Color4();\n                for (var k = 0, length_5 = meshAttributeArray.length / stride; k < length_5; ++k) {\n                    index = k * stride;\n                    if (stride === 3) {\n                        Color3.FromArrayToRef(meshAttributeArray, index, vertexData);\n                        if (convertToLinear) {\n                            vertexData.toLinearSpaceToRef(vertexData);\n                        }\n                    }\n                    else {\n                        Color4.FromArrayToRef(meshAttributeArray, index, vertexData);\n                        if (convertToLinear) {\n                            vertexData.toLinearSpaceToRef(vertexData);\n                        }\n                    }\n                    vertexAttributes.push(vertexData.asArray());\n                }\n                break;\n            }\n            case VertexBuffer.UVKind:\n            case VertexBuffer.UV2Kind: {\n                for (var k = 0, length_6 = meshAttributeArray.length / stride; k < length_6; ++k) {\n                    index = k * stride;\n                    vertexAttributes.push(convertToRightHandedSystem ? [meshAttributeArray[index], meshAttributeArray[index + 1]] : [meshAttributeArray[index], meshAttributeArray[index + 1]]);\n                }\n                break;\n            }\n            case VertexBuffer.MatricesIndicesKind:\n            case VertexBuffer.MatricesIndicesExtraKind: {\n                for (var k = 0, length_7 = meshAttributeArray.length / stride; k < length_7; ++k) {\n                    index = k * stride;\n                    var vertexData = Vector4.FromArray(meshAttributeArray, index);\n                    vertexAttributes.push(vertexData.asArray());\n                }\n                break;\n            }\n            case VertexBuffer.MatricesWeightsKind:\n            case VertexBuffer.MatricesWeightsExtraKind: {\n                for (var k = 0, length_8 = meshAttributeArray.length / stride; k < length_8; ++k) {\n                    index = k * stride;\n                    var vertexData = Vector4.FromArray(meshAttributeArray, index);\n                    vertexAttributes.push(vertexData.asArray());\n                }\n                break;\n            }\n            default: {\n                Tools.Warn(\"Unsupported Vertex Buffer Type: \" + vertexBufferKind);\n                vertexAttributes = [];\n            }\n        }\n        var writeBinaryFunc;\n        switch (attributeComponentKind) {\n            case 5121 /* UNSIGNED_BYTE */: {\n                writeBinaryFunc = binaryWriter.setUInt8.bind(binaryWriter);\n                break;\n            }\n            case 5123 /* UNSIGNED_SHORT */: {\n                writeBinaryFunc = binaryWriter.setUInt16.bind(binaryWriter);\n                break;\n            }\n            case 5125 /* UNSIGNED_INT */: {\n                writeBinaryFunc = binaryWriter.setUInt32.bind(binaryWriter);\n                break;\n            }\n            case 5126 /* FLOAT */: {\n                writeBinaryFunc = binaryWriter.setFloat32.bind(binaryWriter);\n                break;\n            }\n            default: {\n                Tools.Warn(\"Unsupported Attribute Component kind: \" + attributeComponentKind);\n                return;\n            }\n        }\n        for (var _i = 0, vertexAttributes_1 = vertexAttributes; _i < vertexAttributes_1.length; _i++) {\n            var vertexAttribute = vertexAttributes_1[_i];\n            for (var _a = 0, vertexAttribute_1 = vertexAttribute; _a < vertexAttribute_1.length; _a++) {\n                var component = vertexAttribute_1[_a];\n                writeBinaryFunc(component);\n            }\n        }\n    };\n    /**\n     * Writes mesh attribute data to a data buffer\n     * Returns the bytelength of the data\n     * @param vertexBufferKind Indicates what kind of vertex data is being passed in\n     * @param attributeComponentKind\n     * @param meshPrimitive\n     * @param morphTarget\n     * @param meshAttributeArray Array containing the attribute data\n     * @param morphTargetAttributeArray\n     * @param stride Specifies the space between data\n     * @param binaryWriter The buffer to write the binary data to\n     * @param convertToRightHandedSystem Converts the values to right-handed\n     * @param minMax\n     */\n    _Exporter.prototype.writeMorphTargetAttributeData = function (vertexBufferKind, attributeComponentKind, meshPrimitive, morphTarget, meshAttributeArray, morphTargetAttributeArray, stride, binaryWriter, convertToRightHandedSystem, minMax) {\n        var vertexAttributes = [];\n        var index;\n        var difference = new Vector3();\n        var difference4 = new Vector4(0, 0, 0, 0);\n        switch (vertexBufferKind) {\n            case VertexBuffer.PositionKind: {\n                for (var k = meshPrimitive.verticesStart; k < meshPrimitive.verticesCount; ++k) {\n                    index = meshPrimitive.indexStart + k * stride;\n                    var vertexData = Vector3.FromArray(meshAttributeArray, index);\n                    var morphData = Vector3.FromArray(morphTargetAttributeArray, index);\n                    difference = morphData.subtractToRef(vertexData, difference);\n                    if (convertToRightHandedSystem) {\n                        _GLTFUtilities._GetRightHandedPositionVector3FromRef(difference);\n                    }\n                    if (minMax) {\n                        minMax.min.copyFromFloats(Math.min(difference.x, minMax.min.x), Math.min(difference.y, minMax.min.y), Math.min(difference.z, minMax.min.z));\n                        minMax.max.copyFromFloats(Math.max(difference.x, minMax.max.x), Math.max(difference.y, minMax.max.y), Math.max(difference.z, minMax.max.z));\n                    }\n                    vertexAttributes.push(difference.asArray());\n                }\n                break;\n            }\n            case VertexBuffer.NormalKind: {\n                for (var k = meshPrimitive.verticesStart; k < meshPrimitive.verticesCount; ++k) {\n                    index = meshPrimitive.indexStart + k * stride;\n                    var vertexData = Vector3.FromArray(meshAttributeArray, index);\n                    vertexData.normalize();\n                    var morphData = Vector3.FromArray(morphTargetAttributeArray, index);\n                    morphData.normalize();\n                    difference = morphData.subtractToRef(vertexData, difference);\n                    if (convertToRightHandedSystem) {\n                        _GLTFUtilities._GetRightHandedNormalVector3FromRef(difference);\n                    }\n                    vertexAttributes.push(difference.asArray());\n                }\n                break;\n            }\n            case VertexBuffer.TangentKind: {\n                for (var k = meshPrimitive.verticesStart; k < meshPrimitive.verticesCount; ++k) {\n                    index = meshPrimitive.indexStart + k * (stride + 1);\n                    var vertexData = Vector4.FromArray(meshAttributeArray, index);\n                    _GLTFUtilities._NormalizeTangentFromRef(vertexData);\n                    var morphData = Vector4.FromArray(morphTargetAttributeArray, index);\n                    _GLTFUtilities._NormalizeTangentFromRef(morphData);\n                    difference4 = morphData.subtractToRef(vertexData, difference4);\n                    if (convertToRightHandedSystem) {\n                        _GLTFUtilities._GetRightHandedVector4FromRef(difference4);\n                    }\n                    vertexAttributes.push([difference4.x, difference4.y, difference4.z]);\n                }\n                break;\n            }\n            default: {\n                Tools.Warn(\"Unsupported Vertex Buffer Type: \" + vertexBufferKind);\n                vertexAttributes = [];\n            }\n        }\n        var writeBinaryFunc;\n        switch (attributeComponentKind) {\n            case 5121 /* UNSIGNED_BYTE */: {\n                writeBinaryFunc = binaryWriter.setUInt8.bind(binaryWriter);\n                break;\n            }\n            case 5123 /* UNSIGNED_SHORT */: {\n                writeBinaryFunc = binaryWriter.setUInt16.bind(binaryWriter);\n                break;\n            }\n            case 5125 /* UNSIGNED_INT */: {\n                writeBinaryFunc = binaryWriter.setUInt32.bind(binaryWriter);\n                break;\n            }\n            case 5126 /* FLOAT */: {\n                writeBinaryFunc = binaryWriter.setFloat32.bind(binaryWriter);\n                break;\n            }\n            default: {\n                Tools.Warn(\"Unsupported Attribute Component kind: \" + attributeComponentKind);\n                return;\n            }\n        }\n        for (var _i = 0, vertexAttributes_2 = vertexAttributes; _i < vertexAttributes_2.length; _i++) {\n            var vertexAttribute = vertexAttributes_2[_i];\n            for (var _a = 0, vertexAttribute_2 = vertexAttribute; _a < vertexAttribute_2.length; _a++) {\n                var component = vertexAttribute_2[_a];\n                writeBinaryFunc(component);\n            }\n        }\n    };\n    /**\n     * Generates glTF json data\n     * @param shouldUseGlb Indicates whether the json should be written for a glb file\n     * @param glTFPrefix Text to use when prefixing a glTF file\n     * @param prettyPrint Indicates whether the json file should be pretty printed (true) or not (false)\n     * @returns json data as string\n     */\n    _Exporter.prototype._generateJSON = function (shouldUseGlb, glTFPrefix, prettyPrint) {\n        var _this = this;\n        var buffer = { byteLength: this._totalByteLength };\n        var imageName;\n        var imageData;\n        var bufferView;\n        var byteOffset = this._totalByteLength;\n        if (buffer.byteLength) {\n            this._glTF.buffers = [buffer];\n        }\n        if (this._nodes && this._nodes.length) {\n            this._glTF.nodes = this._nodes;\n        }\n        if (this._meshes && this._meshes.length) {\n            this._glTF.meshes = this._meshes;\n        }\n        if (this._scenes && this._scenes.length) {\n            this._glTF.scenes = this._scenes;\n            this._glTF.scene = 0;\n        }\n        if (this._cameras && this._cameras.length) {\n            this._glTF.cameras = this._cameras;\n        }\n        if (this._bufferViews && this._bufferViews.length) {\n            this._glTF.bufferViews = this._bufferViews;\n        }\n        if (this._accessors && this._accessors.length) {\n            this._glTF.accessors = this._accessors;\n        }\n        if (this._animations && this._animations.length) {\n            this._glTF.animations = this._animations;\n        }\n        if (this._materials && this._materials.length) {\n            this._glTF.materials = this._materials;\n        }\n        if (this._textures && this._textures.length) {\n            this._glTF.textures = this._textures;\n        }\n        if (this._samplers && this._samplers.length) {\n            this._glTF.samplers = this._samplers;\n        }\n        if (this._skins && this._skins.length) {\n            this._glTF.skins = this._skins;\n        }\n        if (this._images && this._images.length) {\n            if (!shouldUseGlb) {\n                this._glTF.images = this._images;\n            }\n            else {\n                this._glTF.images = [];\n                this._images.forEach(function (image) {\n                    if (image.uri) {\n                        imageData = _this._imageData[image.uri];\n                        _this._orderedImageData.push(imageData);\n                        imageName = image.uri.split(\".\")[0] + \" image\";\n                        bufferView = _GLTFUtilities._CreateBufferView(0, byteOffset, imageData.data.length, undefined, imageName);\n                        byteOffset += imageData.data.buffer.byteLength;\n                        _this._bufferViews.push(bufferView);\n                        image.bufferView = _this._bufferViews.length - 1;\n                        image.name = imageName;\n                        image.mimeType = imageData.mimeType;\n                        image.uri = undefined;\n                        if (!_this._glTF.images) {\n                            _this._glTF.images = [];\n                        }\n                        _this._glTF.images.push(image);\n                    }\n                });\n                // Replace uri with bufferview and mime type for glb\n                buffer.byteLength = byteOffset;\n            }\n        }\n        if (!shouldUseGlb) {\n            buffer.uri = glTFPrefix + \".bin\";\n        }\n        var jsonText = prettyPrint ? JSON.stringify(this._glTF, null, 2) : JSON.stringify(this._glTF);\n        return jsonText;\n    };\n    /**\n     * Generates data for .gltf and .bin files based on the glTF prefix string\n     * @param glTFPrefix Text to use when prefixing a glTF file\n     * @param dispose Dispose the exporter\n     * @returns GLTFData with glTF file data\n     */\n    _Exporter.prototype._generateGLTFAsync = function (glTFPrefix, dispose) {\n        var _this = this;\n        if (dispose === void 0) { dispose = true; }\n        return this._generateBinaryAsync().then(function (binaryBuffer) {\n            _this._extensionsOnExporting();\n            var jsonText = _this._generateJSON(false, glTFPrefix, true);\n            var bin = new Blob([binaryBuffer], { type: \"application/octet-stream\" });\n            var glTFFileName = glTFPrefix + \".gltf\";\n            var glTFBinFile = glTFPrefix + \".bin\";\n            var container = new GLTFData();\n            container.glTFFiles[glTFFileName] = jsonText;\n            container.glTFFiles[glTFBinFile] = bin;\n            if (_this._imageData) {\n                for (var image in _this._imageData) {\n                    container.glTFFiles[image] = new Blob([_this._imageData[image].data], { type: _this._imageData[image].mimeType });\n                }\n            }\n            if (dispose) {\n                _this.dispose();\n            }\n            return container;\n        });\n    };\n    /**\n     * Creates a binary buffer for glTF\n     * @returns array buffer for binary data\n     */\n    _Exporter.prototype._generateBinaryAsync = function () {\n        var _this = this;\n        var binaryWriter = new _BinaryWriter(4);\n        return this._createSceneAsync(this._babylonScene, binaryWriter).then(function () {\n            if (_this._localEngine) {\n                _this._localEngine.dispose();\n            }\n            return binaryWriter.getArrayBuffer();\n        });\n    };\n    /**\n     * Pads the number to a multiple of 4\n     * @param num number to pad\n     * @returns padded number\n     */\n    _Exporter.prototype._getPadding = function (num) {\n        var remainder = num % 4;\n        var padding = remainder === 0 ? remainder : 4 - remainder;\n        return padding;\n    };\n    /**\n     * @param glTFPrefix\n     * @param dispose\n     * @hidden\n     */\n    _Exporter.prototype._generateGLBAsync = function (glTFPrefix, dispose) {\n        var _this = this;\n        if (dispose === void 0) { dispose = true; }\n        return this._generateBinaryAsync().then(function (binaryBuffer) {\n            _this._extensionsOnExporting();\n            var jsonText = _this._generateJSON(true);\n            var glbFileName = glTFPrefix + \".glb\";\n            var headerLength = 12;\n            var chunkLengthPrefix = 8;\n            var jsonLength = jsonText.length;\n            var encodedJsonText;\n            var imageByteLength = 0;\n            // make use of TextEncoder when available\n            if (typeof TextEncoder !== \"undefined\") {\n                var encoder = new TextEncoder();\n                encodedJsonText = encoder.encode(jsonText);\n                jsonLength = encodedJsonText.length;\n            }\n            for (var i = 0; i < _this._orderedImageData.length; ++i) {\n                imageByteLength += _this._orderedImageData[i].data.byteLength;\n            }\n            var jsonPadding = _this._getPadding(jsonLength);\n            var binPadding = _this._getPadding(binaryBuffer.byteLength);\n            var imagePadding = _this._getPadding(imageByteLength);\n            var byteLength = headerLength + 2 * chunkLengthPrefix + jsonLength + jsonPadding + binaryBuffer.byteLength + binPadding + imageByteLength + imagePadding;\n            //header\n            var headerBuffer = new ArrayBuffer(headerLength);\n            var headerBufferView = new DataView(headerBuffer);\n            headerBufferView.setUint32(0, 0x46546c67, true); //glTF\n            headerBufferView.setUint32(4, 2, true); // version\n            headerBufferView.setUint32(8, byteLength, true); // total bytes in file\n            //json chunk\n            var jsonChunkBuffer = new ArrayBuffer(chunkLengthPrefix + jsonLength + jsonPadding);\n            var jsonChunkBufferView = new DataView(jsonChunkBuffer);\n            jsonChunkBufferView.setUint32(0, jsonLength + jsonPadding, true);\n            jsonChunkBufferView.setUint32(4, 0x4e4f534a, true);\n            //json chunk bytes\n            var jsonData = new Uint8Array(jsonChunkBuffer, chunkLengthPrefix);\n            // if TextEncoder was available, we can simply copy the encoded array\n            if (encodedJsonText) {\n                jsonData.set(encodedJsonText);\n            }\n            else {\n                var blankCharCode = \"_\".charCodeAt(0);\n                for (var i = 0; i < jsonLength; ++i) {\n                    var charCode = jsonText.charCodeAt(i);\n                    // if the character doesn't fit into a single UTF-16 code unit, just put a blank character\n                    if (charCode != jsonText.codePointAt(i)) {\n                        jsonData[i] = blankCharCode;\n                    }\n                    else {\n                        jsonData[i] = charCode;\n                    }\n                }\n            }\n            //json padding\n            var jsonPaddingView = new Uint8Array(jsonChunkBuffer, chunkLengthPrefix + jsonLength);\n            for (var i = 0; i < jsonPadding; ++i) {\n                jsonPaddingView[i] = 0x20;\n            }\n            //binary chunk\n            var binaryChunkBuffer = new ArrayBuffer(chunkLengthPrefix);\n            var binaryChunkBufferView = new DataView(binaryChunkBuffer);\n            binaryChunkBufferView.setUint32(0, binaryBuffer.byteLength + imageByteLength + imagePadding, true);\n            binaryChunkBufferView.setUint32(4, 0x004e4942, true);\n            // binary padding\n            var binPaddingBuffer = new ArrayBuffer(binPadding);\n            var binPaddingView = new Uint8Array(binPaddingBuffer);\n            for (var i = 0; i < binPadding; ++i) {\n                binPaddingView[i] = 0;\n            }\n            var imagePaddingBuffer = new ArrayBuffer(imagePadding);\n            var imagePaddingView = new Uint8Array(imagePaddingBuffer);\n            for (var i = 0; i < imagePadding; ++i) {\n                imagePaddingView[i] = 0;\n            }\n            var glbData = [headerBuffer, jsonChunkBuffer, binaryChunkBuffer, binaryBuffer];\n            // binary data\n            for (var i = 0; i < _this._orderedImageData.length; ++i) {\n                glbData.push(_this._orderedImageData[i].data.buffer);\n            }\n            glbData.push(binPaddingBuffer);\n            glbData.push(imagePaddingBuffer);\n            var glbFile = new Blob(glbData, { type: \"application/octet-stream\" });\n            var container = new GLTFData();\n            container.glTFFiles[glbFileName] = glbFile;\n            if (_this._localEngine != null) {\n                _this._localEngine.dispose();\n            }\n            if (dispose) {\n                _this.dispose();\n            }\n            return container;\n        });\n    };\n    /**\n     * Sets the TRS for each node\n     * @param node glTF Node for storing the transformation data\n     * @param babylonTransformNode Babylon mesh used as the source for the transformation data\n     * @param convertToRightHandedSystem Converts the values to right-handed\n     */\n    _Exporter.prototype._setNodeTransformation = function (node, babylonTransformNode, convertToRightHandedSystem) {\n        if (!babylonTransformNode.getPivotPoint().equalsToFloats(0, 0, 0)) {\n            Tools.Warn(\"Pivot points are not supported in the glTF serializer\");\n        }\n        if (!babylonTransformNode.position.equalsToFloats(0, 0, 0)) {\n            node.translation = convertToRightHandedSystem\n                ? _GLTFUtilities._GetRightHandedPositionVector3(babylonTransformNode.position).asArray()\n                : babylonTransformNode.position.asArray();\n        }\n        if (!babylonTransformNode.scaling.equalsToFloats(1, 1, 1)) {\n            node.scale = babylonTransformNode.scaling.asArray();\n        }\n        var rotationQuaternion = Quaternion.RotationYawPitchRoll(babylonTransformNode.rotation.y, babylonTransformNode.rotation.x, babylonTransformNode.rotation.z);\n        if (babylonTransformNode.rotationQuaternion) {\n            rotationQuaternion.multiplyInPlace(babylonTransformNode.rotationQuaternion);\n        }\n        if (!Quaternion.IsIdentity(rotationQuaternion)) {\n            if (convertToRightHandedSystem) {\n                _GLTFUtilities._GetRightHandedQuaternionFromRef(rotationQuaternion);\n            }\n            node.rotation = rotationQuaternion.normalize().asArray();\n        }\n    };\n    _Exporter.prototype._setCameraTransformation = function (node, babylonCamera, convertToRightHandedSystem) {\n        if (!babylonCamera.position.equalsToFloats(0, 0, 0)) {\n            node.translation = convertToRightHandedSystem ? _GLTFUtilities._GetRightHandedPositionVector3(babylonCamera.position).asArray() : babylonCamera.position.asArray();\n        }\n        var rotationQuaternion = babylonCamera.absoluteRotation;\n        if (!Quaternion.IsIdentity(rotationQuaternion)) {\n            if (convertToRightHandedSystem) {\n                _GLTFUtilities._GetRightHandedQuaternionFromRef(rotationQuaternion);\n            }\n            node.rotation = rotationQuaternion.normalize().asArray();\n        }\n    };\n    _Exporter.prototype._getVertexBufferFromMesh = function (attributeKind, bufferMesh) {\n        if (bufferMesh.isVerticesDataPresent(attributeKind)) {\n            var vertexBuffer = bufferMesh.getVertexBuffer(attributeKind);\n            if (vertexBuffer) {\n                return vertexBuffer;\n            }\n        }\n        return null;\n    };\n    /**\n     * Creates a bufferview based on the vertices type for the Babylon mesh\n     * @param kind Indicates the type of vertices data\n     * @param attributeComponentKind Indicates the numerical type used to store the data\n     * @param babylonTransformNode The Babylon mesh to get the vertices data from\n     * @param binaryWriter The buffer to write the bufferview data to\n     * @param byteStride\n     * @param convertToRightHandedSystem Converts the values to right-handed\n     */\n    _Exporter.prototype._createBufferViewKind = function (kind, attributeComponentKind, babylonTransformNode, binaryWriter, byteStride, convertToRightHandedSystem) {\n        var bufferMesh = babylonTransformNode instanceof Mesh\n            ? babylonTransformNode\n            : babylonTransformNode instanceof InstancedMesh\n                ? babylonTransformNode.sourceMesh\n                : null;\n        if (bufferMesh) {\n            var vertexBuffer = bufferMesh.getVertexBuffer(kind);\n            var vertexData = bufferMesh.getVerticesData(kind);\n            if (vertexBuffer && vertexData) {\n                var typeByteLength = VertexBuffer.GetTypeByteLength(attributeComponentKind);\n                var byteLength = vertexData.length * typeByteLength;\n                var bufferView = _GLTFUtilities._CreateBufferView(0, binaryWriter.getByteOffset(), byteLength, byteStride, kind + \" - \" + bufferMesh.name);\n                this._bufferViews.push(bufferView);\n                this._writeAttributeData(kind, attributeComponentKind, vertexData, byteStride / typeByteLength, binaryWriter, convertToRightHandedSystem, babylonTransformNode);\n            }\n        }\n    };\n    /**\n     * Creates a bufferview based on the vertices type for the Babylon mesh\n     * @param babylonSubMesh The Babylon submesh that the morph target is applied to\n     * @param meshPrimitive\n     * @param babylonMorphTarget the morph target to be exported\n     * @param binaryWriter The buffer to write the bufferview data to\n     * @param convertToRightHandedSystem Converts the values to right-handed\n     */\n    _Exporter.prototype._setMorphTargetAttributes = function (babylonSubMesh, meshPrimitive, babylonMorphTarget, binaryWriter, convertToRightHandedSystem) {\n        if (babylonMorphTarget) {\n            if (!meshPrimitive.targets) {\n                meshPrimitive.targets = [];\n            }\n            var target = {};\n            if (babylonMorphTarget.hasNormals) {\n                var vertexNormals = babylonSubMesh.getMesh().getVerticesData(VertexBuffer.NormalKind);\n                var morphNormals = babylonMorphTarget.getNormals();\n                var count = babylonSubMesh.verticesCount;\n                var byteStride = 12; // 3 x 4 byte floats\n                var byteLength = count * byteStride;\n                var bufferView = _GLTFUtilities._CreateBufferView(0, binaryWriter.getByteOffset(), byteLength, byteStride, babylonMorphTarget.name + \"_NORMAL\");\n                this._bufferViews.push(bufferView);\n                var bufferViewIndex = this._bufferViews.length - 1;\n                var accessor = _GLTFUtilities._CreateAccessor(bufferViewIndex, babylonMorphTarget.name + \" - \" + \"NORMAL\", \"VEC3\" /* VEC3 */, 5126 /* FLOAT */, count, 0, null, null);\n                this._accessors.push(accessor);\n                target.NORMAL = this._accessors.length - 1;\n                this.writeMorphTargetAttributeData(VertexBuffer.NormalKind, 5126 /* FLOAT */, babylonSubMesh, babylonMorphTarget, vertexNormals, morphNormals, byteStride / 4, binaryWriter, convertToRightHandedSystem);\n            }\n            if (babylonMorphTarget.hasPositions) {\n                var vertexPositions = babylonSubMesh.getMesh().getVerticesData(VertexBuffer.PositionKind);\n                var morphPositions = babylonMorphTarget.getPositions();\n                var count = babylonSubMesh.verticesCount;\n                var byteStride = 12; // 3 x 4 byte floats\n                var byteLength = count * byteStride;\n                var bufferView = _GLTFUtilities._CreateBufferView(0, binaryWriter.getByteOffset(), byteLength, byteStride, babylonMorphTarget.name + \"_POSITION\");\n                this._bufferViews.push(bufferView);\n                var bufferViewIndex = this._bufferViews.length - 1;\n                var minMax = { min: new Vector3(Infinity, Infinity, Infinity), max: new Vector3(-Infinity, -Infinity, -Infinity) };\n                var accessor = _GLTFUtilities._CreateAccessor(bufferViewIndex, babylonMorphTarget.name + \" - \" + \"POSITION\", \"VEC3\" /* VEC3 */, 5126 /* FLOAT */, count, 0, null, null);\n                this._accessors.push(accessor);\n                target.POSITION = this._accessors.length - 1;\n                this.writeMorphTargetAttributeData(VertexBuffer.PositionKind, 5126 /* FLOAT */, babylonSubMesh, babylonMorphTarget, vertexPositions, morphPositions, byteStride / 4, binaryWriter, convertToRightHandedSystem, minMax);\n                accessor.min = minMax.min.asArray();\n                accessor.max = minMax.max.asArray();\n            }\n            if (babylonMorphTarget.hasTangents) {\n                var vertexTangents = babylonSubMesh.getMesh().getVerticesData(VertexBuffer.TangentKind);\n                var morphTangents = babylonMorphTarget.getTangents();\n                var count = babylonSubMesh.verticesCount;\n                var byteStride = 12; // 3 x 4 byte floats\n                var byteLength = count * byteStride;\n                var bufferView = _GLTFUtilities._CreateBufferView(0, binaryWriter.getByteOffset(), byteLength, byteStride, babylonMorphTarget.name + \"_NORMAL\");\n                this._bufferViews.push(bufferView);\n                var bufferViewIndex = this._bufferViews.length - 1;\n                var accessor = _GLTFUtilities._CreateAccessor(bufferViewIndex, babylonMorphTarget.name + \" - \" + \"TANGENT\", \"VEC3\" /* VEC3 */, 5126 /* FLOAT */, count, 0, null, null);\n                this._accessors.push(accessor);\n                target.TANGENT = this._accessors.length - 1;\n                this.writeMorphTargetAttributeData(VertexBuffer.TangentKind, 5126 /* FLOAT */, babylonSubMesh, babylonMorphTarget, vertexTangents, morphTangents, byteStride / 4, binaryWriter, convertToRightHandedSystem);\n            }\n            meshPrimitive.targets.push(target);\n        }\n    };\n    /**\n     * The primitive mode of the Babylon mesh\n     * @param babylonMesh The BabylonJS mesh\n     */\n    _Exporter.prototype._getMeshPrimitiveMode = function (babylonMesh) {\n        if (babylonMesh instanceof LinesMesh) {\n            return Material.LineListDrawMode;\n        }\n        return babylonMesh.material ? babylonMesh.material.fillMode : Material.TriangleFillMode;\n    };\n    /**\n     * Sets the primitive mode of the glTF mesh primitive\n     * @param meshPrimitive glTF mesh primitive\n     * @param primitiveMode The primitive mode\n     */\n    _Exporter.prototype._setPrimitiveMode = function (meshPrimitive, primitiveMode) {\n        switch (primitiveMode) {\n            case Material.TriangleFillMode: {\n                // glTF defaults to using Triangle Mode\n                break;\n            }\n            case Material.TriangleStripDrawMode: {\n                meshPrimitive.mode = 5 /* TRIANGLE_STRIP */;\n                break;\n            }\n            case Material.TriangleFanDrawMode: {\n                meshPrimitive.mode = 6 /* TRIANGLE_FAN */;\n                break;\n            }\n            case Material.PointListDrawMode: {\n                meshPrimitive.mode = 0 /* POINTS */;\n                break;\n            }\n            case Material.PointFillMode: {\n                meshPrimitive.mode = 0 /* POINTS */;\n                break;\n            }\n            case Material.LineLoopDrawMode: {\n                meshPrimitive.mode = 2 /* LINE_LOOP */;\n                break;\n            }\n            case Material.LineListDrawMode: {\n                meshPrimitive.mode = 1 /* LINES */;\n                break;\n            }\n            case Material.LineStripDrawMode: {\n                meshPrimitive.mode = 3 /* LINE_STRIP */;\n                break;\n            }\n        }\n    };\n    /**\n     * Sets the vertex attribute accessor based of the glTF mesh primitive\n     * @param meshPrimitive glTF mesh primitive\n     * @param attributeKind vertex attribute\n     * @returns boolean specifying if uv coordinates are present\n     */\n    _Exporter.prototype._setAttributeKind = function (meshPrimitive, attributeKind) {\n        switch (attributeKind) {\n            case VertexBuffer.PositionKind: {\n                meshPrimitive.attributes.POSITION = this._accessors.length - 1;\n                break;\n            }\n            case VertexBuffer.NormalKind: {\n                meshPrimitive.attributes.NORMAL = this._accessors.length - 1;\n                break;\n            }\n            case VertexBuffer.ColorKind: {\n                meshPrimitive.attributes.COLOR_0 = this._accessors.length - 1;\n                break;\n            }\n            case VertexBuffer.TangentKind: {\n                meshPrimitive.attributes.TANGENT = this._accessors.length - 1;\n                break;\n            }\n            case VertexBuffer.UVKind: {\n                meshPrimitive.attributes.TEXCOORD_0 = this._accessors.length - 1;\n                break;\n            }\n            case VertexBuffer.UV2Kind: {\n                meshPrimitive.attributes.TEXCOORD_1 = this._accessors.length - 1;\n                break;\n            }\n            case VertexBuffer.MatricesIndicesKind: {\n                meshPrimitive.attributes.JOINTS_0 = this._accessors.length - 1;\n                break;\n            }\n            case VertexBuffer.MatricesIndicesExtraKind: {\n                meshPrimitive.attributes.JOINTS_1 = this._accessors.length - 1;\n                break;\n            }\n            case VertexBuffer.MatricesWeightsKind: {\n                meshPrimitive.attributes.WEIGHTS_0 = this._accessors.length - 1;\n                break;\n            }\n            case VertexBuffer.MatricesWeightsExtraKind: {\n                meshPrimitive.attributes.WEIGHTS_1 = this._accessors.length - 1;\n                break;\n            }\n            default: {\n                Tools.Warn(\"Unsupported Vertex Buffer Type: \" + attributeKind);\n            }\n        }\n    };\n    /**\n     * Sets data for the primitive attributes of each submesh\n     * @param mesh glTF Mesh object to store the primitive attribute information\n     * @param babylonTransformNode Babylon mesh to get the primitive attribute data from\n     * @param binaryWriter Buffer to write the attribute data to\n     * @param convertToRightHandedSystem Converts the values to right-handed\n     */\n    _Exporter.prototype._setPrimitiveAttributesAsync = function (mesh, babylonTransformNode, binaryWriter, convertToRightHandedSystem) {\n        var _a;\n        var promises = [];\n        var bufferMesh = null;\n        var bufferView;\n        var minMax;\n        if (babylonTransformNode instanceof Mesh) {\n            bufferMesh = babylonTransformNode;\n        }\n        else if (babylonTransformNode instanceof InstancedMesh) {\n            bufferMesh = babylonTransformNode.sourceMesh;\n        }\n        var attributeData = [\n            { kind: VertexBuffer.PositionKind, accessorType: \"VEC3\" /* VEC3 */, accessorComponentType: 5126 /* FLOAT */, byteStride: 12 },\n            { kind: VertexBuffer.NormalKind, accessorType: \"VEC3\" /* VEC3 */, accessorComponentType: 5126 /* FLOAT */, byteStride: 12 },\n            { kind: VertexBuffer.ColorKind, accessorType: \"VEC4\" /* VEC4 */, accessorComponentType: 5126 /* FLOAT */, byteStride: 16 },\n            { kind: VertexBuffer.TangentKind, accessorType: \"VEC4\" /* VEC4 */, accessorComponentType: 5126 /* FLOAT */, byteStride: 16 },\n            { kind: VertexBuffer.UVKind, accessorType: \"VEC2\" /* VEC2 */, accessorComponentType: 5126 /* FLOAT */, byteStride: 8 },\n            { kind: VertexBuffer.UV2Kind, accessorType: \"VEC2\" /* VEC2 */, accessorComponentType: 5126 /* FLOAT */, byteStride: 8 },\n            { kind: VertexBuffer.MatricesIndicesKind, accessorType: \"VEC4\" /* VEC4 */, accessorComponentType: 5123 /* UNSIGNED_SHORT */, byteStride: 8 },\n            { kind: VertexBuffer.MatricesIndicesExtraKind, accessorType: \"VEC4\" /* VEC4 */, accessorComponentType: 5123 /* UNSIGNED_SHORT */, byteStride: 8 },\n            { kind: VertexBuffer.MatricesWeightsKind, accessorType: \"VEC4\" /* VEC4 */, accessorComponentType: 5126 /* FLOAT */, byteStride: 16 },\n            { kind: VertexBuffer.MatricesWeightsExtraKind, accessorType: \"VEC4\" /* VEC4 */, accessorComponentType: 5126 /* FLOAT */, byteStride: 16 },\n        ];\n        if (bufferMesh) {\n            var indexBufferViewIndex = null;\n            var primitiveMode = this._getMeshPrimitiveMode(bufferMesh);\n            var vertexAttributeBufferViews = {};\n            var morphTargetManager = bufferMesh.morphTargetManager;\n            // For each BabylonMesh, create bufferviews for each 'kind'\n            for (var _i = 0, attributeData_1 = attributeData; _i < attributeData_1.length; _i++) {\n                var attribute = attributeData_1[_i];\n                var attributeKind = attribute.kind;\n                var attributeComponentKind = attribute.accessorComponentType;\n                if (bufferMesh.isVerticesDataPresent(attributeKind)) {\n                    var vertexBuffer = this._getVertexBufferFromMesh(attributeKind, bufferMesh);\n                    attribute.byteStride = vertexBuffer\n                        ? vertexBuffer.getSize() * VertexBuffer.GetTypeByteLength(attribute.accessorComponentType)\n                        : VertexBuffer.DeduceStride(attributeKind) * 4;\n                    if (attribute.byteStride === 12) {\n                        attribute.accessorType = \"VEC3\" /* VEC3 */;\n                    }\n                    this._createBufferViewKind(attributeKind, attributeComponentKind, babylonTransformNode, binaryWriter, attribute.byteStride, convertToRightHandedSystem);\n                    attribute.bufferViewIndex = this._bufferViews.length - 1;\n                    vertexAttributeBufferViews[attributeKind] = attribute.bufferViewIndex;\n                }\n            }\n            if (bufferMesh.getTotalIndices()) {\n                var indices = bufferMesh.getIndices();\n                if (indices) {\n                    var byteLength = indices.length * 4;\n                    bufferView = _GLTFUtilities._CreateBufferView(0, binaryWriter.getByteOffset(), byteLength, undefined, \"Indices - \" + bufferMesh.name);\n                    this._bufferViews.push(bufferView);\n                    indexBufferViewIndex = this._bufferViews.length - 1;\n                    for (var k = 0, length_9 = indices.length; k < length_9; ++k) {\n                        binaryWriter.setUInt32(indices[k]);\n                    }\n                }\n            }\n            if (bufferMesh.subMeshes) {\n                // go through all mesh primitives (submeshes)\n                for (var _b = 0, _c = bufferMesh.subMeshes; _b < _c.length; _b++) {\n                    var submesh = _c[_b];\n                    var babylonMaterial = submesh.getMaterial() || bufferMesh.getScene().defaultMaterial;\n                    var materialIndex = null;\n                    if (babylonMaterial) {\n                        if (bufferMesh instanceof LinesMesh) {\n                            // get the color from the lines mesh and set it in the material\n                            var material = {\n                                name: bufferMesh.name + \" material\",\n                            };\n                            if (!bufferMesh.color.equals(Color3.White()) || bufferMesh.alpha < 1) {\n                                material.pbrMetallicRoughness = {\n                                    baseColorFactor: bufferMesh.color.asArray().concat([bufferMesh.alpha]),\n                                };\n                            }\n                            this._materials.push(material);\n                            materialIndex = this._materials.length - 1;\n                        }\n                        else if (babylonMaterial instanceof MultiMaterial) {\n                            var subMaterial = babylonMaterial.subMaterials[submesh.materialIndex];\n                            if (subMaterial) {\n                                babylonMaterial = subMaterial;\n                                materialIndex = this._materialMap[babylonMaterial.uniqueId];\n                            }\n                        }\n                        else {\n                            materialIndex = this._materialMap[babylonMaterial.uniqueId];\n                        }\n                    }\n                    var glTFMaterial = materialIndex != null ? this._materials[materialIndex] : null;\n                    var meshPrimitive = { attributes: {} };\n                    this._setPrimitiveMode(meshPrimitive, primitiveMode);\n                    for (var _d = 0, attributeData_2 = attributeData; _d < attributeData_2.length; _d++) {\n                        var attribute = attributeData_2[_d];\n                        var attributeKind = attribute.kind;\n                        if ((attributeKind === VertexBuffer.UVKind || attributeKind === VertexBuffer.UV2Kind) && !this._options.exportUnusedUVs) {\n                            if (!glTFMaterial || !this._glTFMaterialExporter._hasTexturesPresent(glTFMaterial)) {\n                                continue;\n                            }\n                        }\n                        var vertexData = bufferMesh.getVerticesData(attributeKind);\n                        if (vertexData) {\n                            var vertexBuffer = this._getVertexBufferFromMesh(attributeKind, bufferMesh);\n                            if (vertexBuffer) {\n                                var stride = vertexBuffer.getSize();\n                                var bufferViewIndex = attribute.bufferViewIndex;\n                                if (bufferViewIndex != undefined) {\n                                    // check to see if bufferviewindex has a numeric value assigned.\n                                    minMax = { min: null, max: null };\n                                    if (attributeKind == VertexBuffer.PositionKind) {\n                                        minMax = _GLTFUtilities._CalculateMinMaxPositions(vertexData, 0, vertexData.length / stride, convertToRightHandedSystem);\n                                    }\n                                    var accessor = _GLTFUtilities._CreateAccessor(bufferViewIndex, attributeKind + \" - \" + babylonTransformNode.name, attribute.accessorType, attribute.accessorComponentType, vertexData.length / stride, 0, minMax.min, minMax.max);\n                                    this._accessors.push(accessor);\n                                    this._setAttributeKind(meshPrimitive, attributeKind);\n                                }\n                            }\n                        }\n                    }\n                    if (indexBufferViewIndex) {\n                        // Create accessor\n                        var accessor = _GLTFUtilities._CreateAccessor(indexBufferViewIndex, \"indices - \" + babylonTransformNode.name, \"SCALAR\" /* SCALAR */, 5125 /* UNSIGNED_INT */, submesh.indexCount, submesh.indexStart * 4, null, null);\n                        this._accessors.push(accessor);\n                        meshPrimitive.indices = this._accessors.length - 1;\n                    }\n                    if (materialIndex != null && Object.keys(meshPrimitive.attributes).length > 0) {\n                        var sideOrientation = bufferMesh.overrideMaterialSideOrientation !== null ? bufferMesh.overrideMaterialSideOrientation : babylonMaterial.sideOrientation;\n                        if ((sideOrientation == Material.ClockWiseSideOrientation && this._babylonScene.useRightHandedSystem) ||\n                            (sideOrientation == Material.ClockWiseSideOrientation &&\n                                convertToRightHandedSystem &&\n                                bufferMesh.overrideMaterialSideOrientation !== ((_a = bufferMesh.material) === null || _a === void 0 ? void 0 : _a.sideOrientation))) {\n                            var byteOffset = indexBufferViewIndex != null ? this._bufferViews[indexBufferViewIndex].byteOffset : null;\n                            if (byteOffset == null) {\n                                byteOffset = 0;\n                            }\n                            var babylonIndices = null;\n                            if (indexBufferViewIndex != null) {\n                                babylonIndices = bufferMesh.getIndices();\n                            }\n                            if (babylonIndices) {\n                                this._reorderIndicesBasedOnPrimitiveMode(submesh, primitiveMode, babylonIndices, byteOffset, binaryWriter);\n                            }\n                            else {\n                                for (var _e = 0, attributeData_3 = attributeData; _e < attributeData_3.length; _e++) {\n                                    var attribute = attributeData_3[_e];\n                                    var vertexData = bufferMesh.getVerticesData(attribute.kind);\n                                    if (vertexData) {\n                                        var byteOffset_1 = this._bufferViews[vertexAttributeBufferViews[attribute.kind]].byteOffset;\n                                        if (!byteOffset_1) {\n                                            byteOffset_1 = 0;\n                                        }\n                                        this._reorderVertexAttributeDataBasedOnPrimitiveMode(submesh, primitiveMode, sideOrientation, attribute.kind, vertexData, byteOffset_1, binaryWriter, convertToRightHandedSystem);\n                                    }\n                                }\n                            }\n                        }\n                        meshPrimitive.material = materialIndex;\n                    }\n                    if (morphTargetManager) {\n                        var target = void 0;\n                        for (var i = 0; i < morphTargetManager.numTargets; ++i) {\n                            target = morphTargetManager.getTarget(i);\n                            this._setMorphTargetAttributes(submesh, meshPrimitive, target, binaryWriter, convertToRightHandedSystem);\n                        }\n                    }\n                    mesh.primitives.push(meshPrimitive);\n                    this._extensionsPostExportMeshPrimitiveAsync(\"postExport\", meshPrimitive, submesh, binaryWriter);\n                    promises.push();\n                }\n            }\n        }\n        return Promise.all(promises).then(function () {\n            /* do nothing */\n        });\n    };\n    /**\n     * Check if the node is used to convert its descendants from a right handed coordinate system to the Babylon scene's coordinate system.\n     * @param node The node to check\n     * @returns True if the node is used to convert its descendants from right-handed to left-handed. False otherwise\n     */\n    _Exporter.prototype._isBabylonCoordinateSystemConvertingNode = function (node) {\n        if (node instanceof TransformNode) {\n            if (node.name !== \"__root__\") {\n                return false;\n            }\n            // Transform\n            var matrix = node.getWorldMatrix();\n            if (matrix.determinant() === 1) {\n                return false;\n            }\n            // Geometry\n            if ((node instanceof Mesh && node.geometry !== null) || (node instanceof InstancedMesh && node.sourceMesh.geometry !== null)) {\n                return false;\n            }\n            if (this._includeCoordinateSystemConversionNodes) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Creates a glTF scene based on the array of meshes\n     * Returns the the total byte offset\n     * @param babylonScene Babylon scene to get the mesh data from\n     * @param binaryWriter Buffer to write binary data to\n     */\n    _Exporter.prototype._createSceneAsync = function (babylonScene, binaryWriter) {\n        var _this = this;\n        var scene = { nodes: [] };\n        var glTFNodeIndex;\n        var glTFNode;\n        var directDescendents;\n        var nodes = __spreadArray(__spreadArray(__spreadArray(__spreadArray([], babylonScene.transformNodes, true), babylonScene.meshes, true), babylonScene.lights, true), babylonScene.cameras, true);\n        var rootNodesToLeftHanded = [];\n        this._convertToRightHandedSystem = !babylonScene.useRightHandedSystem;\n        this._convertToRightHandedSystemMap = {};\n        // Set default values for all nodes\n        babylonScene.rootNodes.forEach(function (rootNode) {\n            _this._convertToRightHandedSystemMap[rootNode.uniqueId] = _this._convertToRightHandedSystem;\n            rootNode.getDescendants(false).forEach(function (descendant) {\n                _this._convertToRightHandedSystemMap[descendant.uniqueId] = _this._convertToRightHandedSystem;\n            });\n        });\n        // Check if root nodes converting to left-handed are present\n        babylonScene.rootNodes.forEach(function (rootNode) {\n            if (_this._isBabylonCoordinateSystemConvertingNode(rootNode)) {\n                rootNodesToLeftHanded.push(rootNode);\n                // Exclude the node from list of nodes to export\n                var indexRootNode = nodes.indexOf(rootNode);\n                if (indexRootNode !== -1) {\n                    // should always be true\n                    nodes.splice(indexRootNode, 1);\n                }\n                // Cancel conversion to right handed system\n                rootNode.getDescendants(false).forEach(function (descendant) {\n                    _this._convertToRightHandedSystemMap[descendant.uniqueId] = false;\n                });\n            }\n        });\n        // Export babylon cameras to glTFCamera\n        var cameraMap = new Map();\n        babylonScene.cameras.forEach(function (camera) {\n            if (!_this._options.shouldExportNode || _this._options.shouldExportNode(camera)) {\n                var glTFCamera = {\n                    type: camera.mode === Camera.PERSPECTIVE_CAMERA ? \"perspective\" /* PERSPECTIVE */ : \"orthographic\" /* ORTHOGRAPHIC */,\n                };\n                if (camera.name) {\n                    glTFCamera.name = camera.name;\n                }\n                if (glTFCamera.type === \"perspective\" /* PERSPECTIVE */) {\n                    glTFCamera.perspective = {\n                        aspectRatio: camera.getEngine().getAspectRatio(camera),\n                        yfov: camera.fovMode === Camera.FOVMODE_VERTICAL_FIXED ? camera.fov : camera.fov * camera.getEngine().getAspectRatio(camera),\n                        znear: camera.minZ,\n                        zfar: camera.maxZ,\n                    };\n                }\n                else if (glTFCamera.type === \"orthographic\" /* ORTHOGRAPHIC */) {\n                    var halfWidth = camera.orthoLeft && camera.orthoRight ? 0.5 * (camera.orthoRight - camera.orthoLeft) : camera.getEngine().getRenderWidth() * 0.5;\n                    var halfHeight = camera.orthoBottom && camera.orthoTop ? 0.5 * (camera.orthoTop - camera.orthoBottom) : camera.getEngine().getRenderHeight() * 0.5;\n                    glTFCamera.orthographic = {\n                        xmag: halfWidth,\n                        ymag: halfHeight,\n                        znear: camera.minZ,\n                        zfar: camera.maxZ,\n                    };\n                }\n                cameraMap.set(camera, _this._cameras.length);\n                _this._cameras.push(glTFCamera);\n            }\n        });\n        var _a = this._getExportNodes(nodes), exportNodes = _a[0], exportMaterials = _a[1];\n        return this._glTFMaterialExporter._convertMaterialsToGLTFAsync(exportMaterials, \"image/png\" /* PNG */, true).then(function () {\n            return _this._createNodeMapAndAnimationsAsync(babylonScene, exportNodes, binaryWriter).then(function (nodeMap) {\n                return _this._createSkinsAsync(babylonScene, nodeMap, binaryWriter).then(function (skinMap) {\n                    _this._nodeMap = nodeMap;\n                    _this._totalByteLength = binaryWriter.getByteOffset();\n                    if (_this._totalByteLength == undefined) {\n                        throw new Error(\"undefined byte length!\");\n                    }\n                    // Build Hierarchy with the node map.\n                    for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {\n                        var babylonNode = nodes_1[_i];\n                        glTFNodeIndex = _this._nodeMap[babylonNode.uniqueId];\n                        if (glTFNodeIndex !== undefined) {\n                            glTFNode = _this._nodes[glTFNodeIndex];\n                            if (babylonNode.metadata) {\n                                if (_this._options.metadataSelector) {\n                                    glTFNode.extras = _this._options.metadataSelector(babylonNode.metadata);\n                                }\n                                else if (babylonNode.metadata.gltf) {\n                                    glTFNode.extras = babylonNode.metadata.gltf.extras;\n                                }\n                            }\n                            if (babylonNode instanceof Camera) {\n                                glTFNode.camera = cameraMap.get(babylonNode);\n                            }\n                            if (!babylonNode.parent || rootNodesToLeftHanded.indexOf(babylonNode.parent) !== -1) {\n                                if (_this._options.shouldExportNode && !_this._options.shouldExportNode(babylonNode)) {\n                                    Tools.Log(\"Omitting \" + babylonNode.name + \" from scene.\");\n                                }\n                                else {\n                                    var convertToRightHandedSystem = _this._convertToRightHandedSystemMap[babylonNode.uniqueId];\n                                    if (convertToRightHandedSystem) {\n                                        if (glTFNode.translation) {\n                                            glTFNode.translation[2] *= -1;\n                                            glTFNode.translation[0] *= -1;\n                                        }\n                                        glTFNode.rotation = glTFNode.rotation\n                                            ? Quaternion.FromArray([0, 1, 0, 0]).multiply(Quaternion.FromArray(glTFNode.rotation)).asArray()\n                                            : Quaternion.FromArray([0, 1, 0, 0]).asArray();\n                                    }\n                                    scene.nodes.push(glTFNodeIndex);\n                                }\n                            }\n                            if (babylonNode instanceof Mesh) {\n                                var babylonMesh = babylonNode;\n                                if (babylonMesh.skeleton) {\n                                    glTFNode.skin = skinMap[babylonMesh.skeleton.uniqueId];\n                                }\n                            }\n                            directDescendents = babylonNode.getDescendants(true);\n                            if (!glTFNode.children && directDescendents && directDescendents.length) {\n                                var children = [];\n                                for (var _a = 0, directDescendents_1 = directDescendents; _a < directDescendents_1.length; _a++) {\n                                    var descendent = directDescendents_1[_a];\n                                    if (_this._nodeMap[descendent.uniqueId] != null) {\n                                        children.push(_this._nodeMap[descendent.uniqueId]);\n                                    }\n                                }\n                                if (children.length) {\n                                    glTFNode.children = children;\n                                }\n                            }\n                        }\n                    }\n                    if (scene.nodes.length) {\n                        _this._scenes.push(scene);\n                    }\n                });\n            });\n        });\n    };\n    /**\n     * Getting the nodes and materials that would be exported.\n     * @param nodes Babylon transform nodes\n     * @returns Array of nodes which would be exported.\n     * @returns Set of materials which would be exported.\n     */\n    _Exporter.prototype._getExportNodes = function (nodes) {\n        var exportNodes = [];\n        var exportMaterials = new Set();\n        for (var _i = 0, nodes_2 = nodes; _i < nodes_2.length; _i++) {\n            var babylonNode = nodes_2[_i];\n            if (!this._options.shouldExportNode || this._options.shouldExportNode(babylonNode)) {\n                exportNodes.push(babylonNode);\n                if (babylonNode instanceof AbstractMesh) {\n                    var material = babylonNode.material || babylonNode.getScene().defaultMaterial;\n                    if (material instanceof MultiMaterial) {\n                        for (var _a = 0, _b = material.subMaterials; _a < _b.length; _a++) {\n                            var subMaterial = _b[_a];\n                            if (subMaterial) {\n                                exportMaterials.add(subMaterial);\n                            }\n                        }\n                    }\n                    else {\n                        exportMaterials.add(material);\n                    }\n                }\n            }\n            else {\n                \"Excluding node \".concat(babylonNode.name);\n            }\n        }\n        return [exportNodes, exportMaterials];\n    };\n    /**\n     * Creates a mapping of Node unique id to node index and handles animations\n     * @param babylonScene Babylon Scene\n     * @param nodes Babylon transform nodes\n     * @param binaryWriter Buffer to write binary data to\n     * @returns Node mapping of unique id to index\n     */\n    _Exporter.prototype._createNodeMapAndAnimationsAsync = function (babylonScene, nodes, binaryWriter) {\n        var _this = this;\n        var promiseChain = Promise.resolve();\n        var nodeMap = {};\n        var nodeIndex;\n        var runtimeGLTFAnimation = {\n            name: \"runtime animations\",\n            channels: [],\n            samplers: [],\n        };\n        var idleGLTFAnimations = [];\n        var _loop_1 = function (babylonNode) {\n            promiseChain = promiseChain.then(function () {\n                var convertToRightHandedSystem = _this._convertToRightHandedSystemMap[babylonNode.uniqueId];\n                return _this._createNodeAsync(babylonNode, binaryWriter, convertToRightHandedSystem).then(function (node) {\n                    var promise = _this._extensionsPostExportNodeAsync(\"createNodeAsync\", node, babylonNode, nodeMap, binaryWriter);\n                    if (promise == null) {\n                        Tools.Warn(\"Not exporting node \".concat(babylonNode.name));\n                        return Promise.resolve();\n                    }\n                    else {\n                        return promise.then(function (node) {\n                            if (!node) {\n                                return;\n                            }\n                            _this._nodes.push(node);\n                            nodeIndex = _this._nodes.length - 1;\n                            nodeMap[babylonNode.uniqueId] = nodeIndex;\n                            if (!babylonScene.animationGroups.length) {\n                                _GLTFAnimation._CreateMorphTargetAnimationFromMorphTargetAnimations(babylonNode, runtimeGLTFAnimation, idleGLTFAnimations, nodeMap, _this._nodes, binaryWriter, _this._bufferViews, _this._accessors, convertToRightHandedSystem, _this._animationSampleRate);\n                                if (babylonNode.animations.length) {\n                                    _GLTFAnimation._CreateNodeAnimationFromNodeAnimations(babylonNode, runtimeGLTFAnimation, idleGLTFAnimations, nodeMap, _this._nodes, binaryWriter, _this._bufferViews, _this._accessors, convertToRightHandedSystem, _this._animationSampleRate);\n                                }\n                            }\n                        });\n                    }\n                });\n            });\n        };\n        for (var _i = 0, nodes_3 = nodes; _i < nodes_3.length; _i++) {\n            var babylonNode = nodes_3[_i];\n            _loop_1(babylonNode);\n        }\n        return promiseChain.then(function () {\n            if (runtimeGLTFAnimation.channels.length && runtimeGLTFAnimation.samplers.length) {\n                _this._animations.push(runtimeGLTFAnimation);\n            }\n            idleGLTFAnimations.forEach(function (idleGLTFAnimation) {\n                if (idleGLTFAnimation.channels.length && idleGLTFAnimation.samplers.length) {\n                    _this._animations.push(idleGLTFAnimation);\n                }\n            });\n            if (babylonScene.animationGroups.length) {\n                _GLTFAnimation._CreateNodeAndMorphAnimationFromAnimationGroups(babylonScene, _this._animations, nodeMap, _this._nodes, binaryWriter, _this._bufferViews, _this._accessors, _this._convertToRightHandedSystemMap, _this._animationSampleRate);\n            }\n            return nodeMap;\n        });\n    };\n    /**\n     * Creates a glTF node from a Babylon mesh\n     * @param babylonNode Source Babylon mesh\n     * @param binaryWriter Buffer for storing geometry data\n     * @param convertToRightHandedSystem Converts the values to right-handed\n     * @returns glTF node\n     */\n    _Exporter.prototype._createNodeAsync = function (babylonNode, binaryWriter, convertToRightHandedSystem) {\n        var _this = this;\n        return Promise.resolve().then(function () {\n            // create node to hold translation/rotation/scale and the mesh\n            var node = {};\n            // create mesh\n            var mesh = { primitives: [] };\n            if (babylonNode.name) {\n                node.name = babylonNode.name;\n            }\n            if (babylonNode instanceof TransformNode) {\n                // Set transformation\n                _this._setNodeTransformation(node, babylonNode, convertToRightHandedSystem);\n                if (babylonNode instanceof Mesh) {\n                    var morphTargetManager = babylonNode.morphTargetManager;\n                    if (morphTargetManager && morphTargetManager.numTargets > 0) {\n                        mesh.weights = [];\n                        for (var i = 0; i < morphTargetManager.numTargets; ++i) {\n                            mesh.weights.push(morphTargetManager.getTarget(i).influence);\n                        }\n                    }\n                }\n                return _this._setPrimitiveAttributesAsync(mesh, babylonNode, binaryWriter, convertToRightHandedSystem).then(function () {\n                    if (mesh.primitives.length) {\n                        _this._meshes.push(mesh);\n                        node.mesh = _this._meshes.length - 1;\n                    }\n                    return node;\n                });\n            }\n            else if (babylonNode instanceof Camera) {\n                _this._setCameraTransformation(node, babylonNode, convertToRightHandedSystem);\n                return node;\n            }\n            else {\n                return node;\n            }\n        });\n    };\n    /**\n     * Creates a glTF skin from a Babylon skeleton\n     * @param babylonScene Babylon Scene\n     * @param nodeMap Babylon transform nodes\n     * @param binaryWriter Buffer to write binary data to\n     * @returns Node mapping of unique id to index\n     */\n    _Exporter.prototype._createSkinsAsync = function (babylonScene, nodeMap, binaryWriter) {\n        var _a;\n        var promiseChain = Promise.resolve();\n        var skinMap = {};\n        for (var _i = 0, _b = babylonScene.skeletons; _i < _b.length; _i++) {\n            var skeleton = _b[_i];\n            if (skeleton.bones.length <= 0) {\n                continue;\n            }\n            // create skin\n            var skin = { joints: [] };\n            var inverseBindMatrices = [];\n            var boneIndexMap = {};\n            var maxBoneIndex = -1;\n            for (var i = 0; i < skeleton.bones.length; ++i) {\n                var bone = skeleton.bones[i];\n                var boneIndex = (_a = bone.getIndex()) !== null && _a !== void 0 ? _a : i;\n                if (boneIndex !== -1) {\n                    boneIndexMap[boneIndex] = bone;\n                    if (boneIndex > maxBoneIndex) {\n                        maxBoneIndex = boneIndex;\n                    }\n                }\n            }\n            for (var boneIndex = 0; boneIndex <= maxBoneIndex; ++boneIndex) {\n                var bone = boneIndexMap[boneIndex];\n                inverseBindMatrices.push(bone.getInvertedAbsoluteTransform());\n                var transformNode = bone.getTransformNode();\n                if (transformNode) {\n                    skin.joints.push(nodeMap[transformNode.uniqueId]);\n                }\n                else {\n                    Tools.Warn(\"Exporting a bone without a linked transform node is currently unsupported\");\n                }\n            }\n            // create buffer view for inverse bind matrices\n            var byteStride = 64; // 4 x 4 matrix of 32 bit float\n            var byteLength = inverseBindMatrices.length * byteStride;\n            var bufferViewOffset = binaryWriter.getByteOffset();\n            var bufferView = _GLTFUtilities._CreateBufferView(0, bufferViewOffset, byteLength, undefined, \"InverseBindMatrices\" + \" - \" + skeleton.name);\n            this._bufferViews.push(bufferView);\n            var bufferViewIndex = this._bufferViews.length - 1;\n            var bindMatrixAccessor = _GLTFUtilities._CreateAccessor(bufferViewIndex, \"InverseBindMatrices\" + \" - \" + skeleton.name, \"MAT4\" /* MAT4 */, 5126 /* FLOAT */, inverseBindMatrices.length, null, null, null);\n            var inverseBindAccessorIndex = this._accessors.push(bindMatrixAccessor) - 1;\n            skin.inverseBindMatrices = inverseBindAccessorIndex;\n            this._skins.push(skin);\n            skinMap[skeleton.uniqueId] = this._skins.length - 1;\n            inverseBindMatrices.forEach(function (mat) {\n                mat.m.forEach(function (cell) {\n                    binaryWriter.setFloat32(cell);\n                });\n            });\n        }\n        return promiseChain.then(function () {\n            return skinMap;\n        });\n    };\n    _Exporter._ExtensionNames = new Array();\n    _Exporter._ExtensionFactories = {};\n    return _Exporter;\n}());\nexport { _Exporter };\n/**\n * @hidden\n *\n * Stores glTF binary data.  If the array buffer byte length is exceeded, it doubles in size dynamically\n */\nvar _BinaryWriter = /** @class */ (function () {\n    /**\n     * Initialize binary writer with an initial byte length\n     * @param byteLength Initial byte length of the array buffer\n     */\n    function _BinaryWriter(byteLength) {\n        this._arrayBuffer = new ArrayBuffer(byteLength);\n        this._dataView = new DataView(this._arrayBuffer);\n        this._byteOffset = 0;\n    }\n    /**\n     * Resize the array buffer to the specified byte length\n     * @param byteLength\n     */\n    _BinaryWriter.prototype._resizeBuffer = function (byteLength) {\n        var newBuffer = new ArrayBuffer(byteLength);\n        var oldUint8Array = new Uint8Array(this._arrayBuffer);\n        var newUint8Array = new Uint8Array(newBuffer);\n        for (var i = 0, length_10 = newUint8Array.byteLength; i < length_10; ++i) {\n            newUint8Array[i] = oldUint8Array[i];\n        }\n        this._arrayBuffer = newBuffer;\n        this._dataView = new DataView(this._arrayBuffer);\n        return newBuffer;\n    };\n    /**\n     * Get an array buffer with the length of the byte offset\n     * @returns ArrayBuffer resized to the byte offset\n     */\n    _BinaryWriter.prototype.getArrayBuffer = function () {\n        return this._resizeBuffer(this.getByteOffset());\n    };\n    /**\n     * Get the byte offset of the array buffer\n     * @returns byte offset\n     */\n    _BinaryWriter.prototype.getByteOffset = function () {\n        if (this._byteOffset == undefined) {\n            throw new Error(\"Byte offset is undefined!\");\n        }\n        return this._byteOffset;\n    };\n    /**\n     * Stores an UInt8 in the array buffer\n     * @param entry\n     * @param byteOffset If defined, specifies where to set the value as an offset.\n     */\n    _BinaryWriter.prototype.setUInt8 = function (entry, byteOffset) {\n        if (byteOffset != null) {\n            if (byteOffset < this._byteOffset) {\n                this._dataView.setUint8(byteOffset, entry);\n            }\n            else {\n                Tools.Error(\"BinaryWriter: byteoffset is greater than the current binary buffer length!\");\n            }\n        }\n        else {\n            if (this._byteOffset + 1 > this._arrayBuffer.byteLength) {\n                this._resizeBuffer(this._arrayBuffer.byteLength * 2);\n            }\n            this._dataView.setUint8(this._byteOffset, entry);\n            this._byteOffset += 1;\n        }\n    };\n    /**\n     * Stores an UInt16 in the array buffer\n     * @param entry\n     * @param byteOffset If defined, specifies where to set the value as an offset.\n     */\n    _BinaryWriter.prototype.setUInt16 = function (entry, byteOffset) {\n        if (byteOffset != null) {\n            if (byteOffset < this._byteOffset) {\n                this._dataView.setUint16(byteOffset, entry, true);\n            }\n            else {\n                Tools.Error(\"BinaryWriter: byteoffset is greater than the current binary buffer length!\");\n            }\n        }\n        else {\n            if (this._byteOffset + 2 > this._arrayBuffer.byteLength) {\n                this._resizeBuffer(this._arrayBuffer.byteLength * 2);\n            }\n            this._dataView.setUint16(this._byteOffset, entry, true);\n            this._byteOffset += 2;\n        }\n    };\n    /**\n     * Gets an UInt32 in the array buffer\n     * @param byteOffset If defined, specifies where to set the value as an offset.\n     */\n    _BinaryWriter.prototype.getUInt32 = function (byteOffset) {\n        if (byteOffset < this._byteOffset) {\n            return this._dataView.getUint32(byteOffset, true);\n        }\n        else {\n            Tools.Error(\"BinaryWriter: byteoffset is greater than the current binary buffer length!\");\n            throw new Error(\"BinaryWriter: byteoffset is greater than the current binary buffer length!\");\n        }\n    };\n    _BinaryWriter.prototype.getVector3Float32FromRef = function (vector3, byteOffset) {\n        if (byteOffset + 8 > this._byteOffset) {\n            Tools.Error(\"BinaryWriter: byteoffset is greater than the current binary buffer length!\");\n        }\n        else {\n            vector3.x = this._dataView.getFloat32(byteOffset, true);\n            vector3.y = this._dataView.getFloat32(byteOffset + 4, true);\n            vector3.z = this._dataView.getFloat32(byteOffset + 8, true);\n        }\n    };\n    _BinaryWriter.prototype.setVector3Float32FromRef = function (vector3, byteOffset) {\n        if (byteOffset + 8 > this._byteOffset) {\n            Tools.Error(\"BinaryWriter: byteoffset is greater than the current binary buffer length!\");\n        }\n        else {\n            this._dataView.setFloat32(byteOffset, vector3.x, true);\n            this._dataView.setFloat32(byteOffset + 4, vector3.y, true);\n            this._dataView.setFloat32(byteOffset + 8, vector3.z, true);\n        }\n    };\n    _BinaryWriter.prototype.getVector4Float32FromRef = function (vector4, byteOffset) {\n        if (byteOffset + 12 > this._byteOffset) {\n            Tools.Error(\"BinaryWriter: byteoffset is greater than the current binary buffer length!\");\n        }\n        else {\n            vector4.x = this._dataView.getFloat32(byteOffset, true);\n            vector4.y = this._dataView.getFloat32(byteOffset + 4, true);\n            vector4.z = this._dataView.getFloat32(byteOffset + 8, true);\n            vector4.w = this._dataView.getFloat32(byteOffset + 12, true);\n        }\n    };\n    _BinaryWriter.prototype.setVector4Float32FromRef = function (vector4, byteOffset) {\n        if (byteOffset + 12 > this._byteOffset) {\n            Tools.Error(\"BinaryWriter: byteoffset is greater than the current binary buffer length!\");\n        }\n        else {\n            this._dataView.setFloat32(byteOffset, vector4.x, true);\n            this._dataView.setFloat32(byteOffset + 4, vector4.y, true);\n            this._dataView.setFloat32(byteOffset + 8, vector4.z, true);\n            this._dataView.setFloat32(byteOffset + 12, vector4.w, true);\n        }\n    };\n    /**\n     * Stores a Float32 in the array buffer\n     * @param entry\n     * @param byteOffset\n     */\n    _BinaryWriter.prototype.setFloat32 = function (entry, byteOffset) {\n        if (isNaN(entry)) {\n            Tools.Error(\"Invalid data being written!\");\n        }\n        if (byteOffset != null) {\n            if (byteOffset < this._byteOffset) {\n                this._dataView.setFloat32(byteOffset, entry, true);\n            }\n            else {\n                Tools.Error(\"BinaryWriter: byteoffset is greater than the current binary length!\");\n            }\n        }\n        if (this._byteOffset + 4 > this._arrayBuffer.byteLength) {\n            this._resizeBuffer(this._arrayBuffer.byteLength * 2);\n        }\n        this._dataView.setFloat32(this._byteOffset, entry, true);\n        this._byteOffset += 4;\n    };\n    /**\n     * Stores an UInt32 in the array buffer\n     * @param entry\n     * @param byteOffset If defined, specifies where to set the value as an offset.\n     */\n    _BinaryWriter.prototype.setUInt32 = function (entry, byteOffset) {\n        if (byteOffset != null) {\n            if (byteOffset < this._byteOffset) {\n                this._dataView.setUint32(byteOffset, entry, true);\n            }\n            else {\n                Tools.Error(\"BinaryWriter: byteoffset is greater than the current binary buffer length!\");\n            }\n        }\n        else {\n            if (this._byteOffset + 4 > this._arrayBuffer.byteLength) {\n                this._resizeBuffer(this._arrayBuffer.byteLength * 2);\n            }\n            this._dataView.setUint32(this._byteOffset, entry, true);\n            this._byteOffset += 4;\n        }\n    };\n    /**\n     * Stores an Int16 in the array buffer\n     * @param entry\n     * @param byteOffset If defined, specifies where to set the value as an offset.\n     */\n    _BinaryWriter.prototype.setInt16 = function (entry, byteOffset) {\n        if (byteOffset != null) {\n            if (byteOffset < this._byteOffset) {\n                this._dataView.setInt16(byteOffset, entry, true);\n            }\n            else {\n                Tools.Error(\"BinaryWriter: byteoffset is greater than the current binary buffer length!\");\n            }\n        }\n        else {\n            if (this._byteOffset + 2 > this._arrayBuffer.byteLength) {\n                this._resizeBuffer(this._arrayBuffer.byteLength * 2);\n            }\n            this._dataView.setInt16(this._byteOffset, entry, true);\n            this._byteOffset += 2;\n        }\n    };\n    /**\n     * Stores a byte in the array buffer\n     * @param entry\n     * @param byteOffset If defined, specifies where to set the value as an offset.\n     */\n    _BinaryWriter.prototype.setByte = function (entry, byteOffset) {\n        if (byteOffset != null) {\n            if (byteOffset < this._byteOffset) {\n                this._dataView.setInt8(byteOffset, entry);\n            }\n            else {\n                Tools.Error(\"BinaryWriter: byteoffset is greater than the current binary buffer length!\");\n            }\n        }\n        else {\n            if (this._byteOffset + 1 > this._arrayBuffer.byteLength) {\n                this._resizeBuffer(this._arrayBuffer.byteLength * 2);\n            }\n            this._dataView.setInt8(this._byteOffset, entry);\n            this._byteOffset++;\n        }\n    };\n    return _BinaryWriter;\n}());\nexport { _BinaryWriter };\n//# sourceMappingURL=glTFExporter.js.map","/** @hidden */\n// eslint-disable-next-line no-var, @typescript-eslint/naming-convention\nexport var __IGLTFExporterExtensionV2 = 0; // I am here to allow dts to be created\n//# sourceMappingURL=glTFExporterExtension.js.map","import { _Exporter } from \"./glTFExporter.js\";\n/**\n * Class for generating glTF data from a Babylon scene.\n */\nvar GLTF2Export = /** @class */ (function () {\n    function GLTF2Export() {\n    }\n    /**\n     * Exports the geometry of the scene to .gltf file format asynchronously\n     * @param scene Babylon scene with scene hierarchy information\n     * @param filePrefix File prefix to use when generating the glTF file\n     * @param options Exporter options\n     * @returns Returns an object with a .gltf file and associates texture names\n     * as keys and their data and paths as values\n     */\n    GLTF2Export.GLTFAsync = function (scene, filePrefix, options) {\n        return scene.whenReadyAsync().then(function () {\n            var glTFPrefix = filePrefix.replace(/\\.[^/.]+$/, \"\");\n            var gltfGenerator = new _Exporter(scene, options);\n            return gltfGenerator._generateGLTFAsync(glTFPrefix);\n        });\n    };\n    GLTF2Export._PreExportAsync = function (scene, options) {\n        return Promise.resolve().then(function () {\n            if (options && options.exportWithoutWaitingForScene) {\n                return Promise.resolve();\n            }\n            else {\n                return scene.whenReadyAsync();\n            }\n        });\n    };\n    GLTF2Export._PostExportAsync = function (scene, glTFData, options) {\n        return Promise.resolve().then(function () {\n            if (options && options.exportWithoutWaitingForScene) {\n                return glTFData;\n            }\n            else {\n                return glTFData;\n            }\n        });\n    };\n    /**\n     * Exports the geometry of the scene to .glb file format asychronously\n     * @param scene Babylon scene with scene hierarchy information\n     * @param filePrefix File prefix to use when generating glb file\n     * @param options Exporter options\n     * @returns Returns an object with a .glb filename as key and data as value\n     */\n    GLTF2Export.GLBAsync = function (scene, filePrefix, options) {\n        var _this = this;\n        return this._PreExportAsync(scene, options).then(function () {\n            var glTFPrefix = filePrefix.replace(/\\.[^/.]+$/, \"\");\n            var gltfGenerator = new _Exporter(scene, options);\n            return gltfGenerator._generateGLBAsync(glTFPrefix).then(function (glTFData) {\n                return _this._PostExportAsync(scene, glTFData, options);\n            });\n        });\n    };\n    return GLTF2Export;\n}());\nexport { GLTF2Export };\n//# sourceMappingURL=glTFSerializer.js.map","// Do not edit.\nimport { ShaderStore } from \"@babylonjs/core/Engines/shaderStore.js\";\nvar name = \"textureTransformPixelShader\";\nvar shader = \"precision highp float;varying vec2 vUV;uniform sampler2D textureSampler;uniform mat4 textureTransformMat;void main(void) {\\n#define CUSTOM_FRAGMENT_MAIN_BEGIN\\nvec2 uvTransformed=(textureTransformMat*vec4(vUV.xy,1,1)).xy;gl_FragColor=texture2D(textureSampler,uvTransformed);\\n#define CUSTOM_FRAGMENT_MAIN_END\\n}\";\n// Sideeffect\nShaderStore.ShadersStore[name] = shader;\n/** @hidden */\nexport var textureTransformPixelShader = { name: name, shader: shader };\n//# sourceMappingURL=textureTransform.fragment.js.map","import { Tools } from \"@babylonjs/core/Misc/tools.js\";\nimport { ProceduralTexture } from \"@babylonjs/core/Materials/Textures/Procedurals/proceduralTexture.js\";\nimport { _Exporter } from \"../glTFExporter.js\";\nvar NAME = \"KHR_texture_transform\";\nimport \"../shaders/textureTransform.fragment.js\";\n/**\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nvar KHR_texture_transform = /** @class */ (function () {\n    function KHR_texture_transform() {\n        this._recordedTextures = [];\n        /** Name of this extension */\n        this.name = NAME;\n        /** Defines whether this extension is enabled */\n        this.enabled = true;\n        /** Defines whether this extension is required */\n        this.required = false;\n        /** Reference to the glTF exporter */\n        this._wasUsed = false;\n    }\n    KHR_texture_transform.prototype.dispose = function () {\n        for (var _i = 0, _a = this._recordedTextures; _i < _a.length; _i++) {\n            var texture = _a[_i];\n            texture.dispose();\n        }\n    };\n    Object.defineProperty(KHR_texture_transform.prototype, \"wasUsed\", {\n        /** @hidden */\n        get: function () {\n            return this._wasUsed;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    KHR_texture_transform.prototype.postExportTexture = function (context, textureInfo, babylonTexture) {\n        var canUseExtension = babylonTexture &&\n            ((babylonTexture.uAng === 0 && babylonTexture.wAng === 0 && babylonTexture.vAng === 0) ||\n                (babylonTexture.uRotationCenter === 0 && babylonTexture.vRotationCenter === 0));\n        if (canUseExtension) {\n            var textureTransform = {};\n            var transformIsRequired = false;\n            if (babylonTexture.uOffset !== 0 || babylonTexture.vOffset !== 0) {\n                textureTransform.offset = [babylonTexture.uOffset, babylonTexture.vOffset];\n                transformIsRequired = true;\n            }\n            if (babylonTexture.uScale !== 1 || babylonTexture.vScale !== 1) {\n                textureTransform.scale = [babylonTexture.uScale, babylonTexture.vScale];\n                transformIsRequired = true;\n            }\n            if (babylonTexture.wAng !== 0) {\n                textureTransform.rotation = babylonTexture.wAng;\n                transformIsRequired = true;\n            }\n            if (babylonTexture.coordinatesIndex !== 0) {\n                textureTransform.texCoord = babylonTexture.coordinatesIndex;\n                transformIsRequired = true;\n            }\n            if (!transformIsRequired) {\n                return;\n            }\n            this._wasUsed = true;\n            if (!textureInfo.extensions) {\n                textureInfo.extensions = {};\n            }\n            textureInfo.extensions[NAME] = textureTransform;\n        }\n    };\n    KHR_texture_transform.prototype.preExportTextureAsync = function (context, babylonTexture) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            var scene = babylonTexture.getScene();\n            if (!scene) {\n                reject(\"\".concat(context, \": \\\"scene\\\" is not defined for Babylon texture \").concat(babylonTexture.name, \"!\"));\n                return;\n            }\n            var bakeTextureTransform = false;\n            /*\n             * The KHR_texture_transform schema only supports rotation around the origin.\n             * the texture must be baked to preserve appearance.\n             * see: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_texture_transform#gltf-schema-updates\n             */\n            if ((babylonTexture.uAng !== 0 || babylonTexture.wAng !== 0 || babylonTexture.vAng !== 0) &&\n                (babylonTexture.uRotationCenter !== 0 || babylonTexture.vRotationCenter !== 0)) {\n                bakeTextureTransform = true;\n            }\n            if (!bakeTextureTransform) {\n                resolve(babylonTexture);\n                return;\n            }\n            return _this._textureTransformTextureAsync(babylonTexture, scene)\n                .then(function (proceduralTexture) {\n                resolve(proceduralTexture);\n            })\n                .catch(function (e) {\n                reject(e);\n            });\n        });\n    };\n    /**\n     * Transform the babylon texture by the offset, rotation and scale parameters using a procedural texture\n     * @param babylonTexture\n     * @param scene\n     */\n    KHR_texture_transform.prototype._textureTransformTextureAsync = function (babylonTexture, scene) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var proceduralTexture = new ProceduralTexture(\"\".concat(babylonTexture.name), babylonTexture.getSize(), \"textureTransform\", scene);\n            if (!proceduralTexture) {\n                Tools.Log(\"Cannot create procedural texture for \".concat(babylonTexture.name, \"!\"));\n                resolve(babylonTexture);\n            }\n            proceduralTexture.reservedDataStore = {\n                hidden: true,\n                source: babylonTexture,\n            };\n            _this._recordedTextures.push(proceduralTexture);\n            proceduralTexture.coordinatesIndex = babylonTexture.coordinatesIndex;\n            proceduralTexture.setTexture(\"textureSampler\", babylonTexture);\n            proceduralTexture.setMatrix(\"textureTransformMat\", babylonTexture.getTextureMatrix());\n            // isReady trigger creation of effect if it doesnt exist yet\n            if (proceduralTexture.isReady()) {\n                proceduralTexture.render();\n                resolve(proceduralTexture);\n            }\n            else {\n                proceduralTexture.getEffect().executeWhenCompiled(function () {\n                    proceduralTexture.render();\n                    resolve(proceduralTexture);\n                });\n            }\n        });\n    };\n    return KHR_texture_transform;\n}());\nexport { KHR_texture_transform };\n_Exporter.RegisterExtension(NAME, function () { return new KHR_texture_transform(); });\n//# sourceMappingURL=KHR_texture_transform.js.map","import { Vector3, Quaternion, TmpVectors, Matrix } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { Color3 } from \"@babylonjs/core/Maths/math.color.js\";\nimport { Light } from \"@babylonjs/core/Lights/light.js\";\nimport { DirectionalLight } from \"@babylonjs/core/Lights/directionalLight.js\";\nimport { ShadowLight } from \"@babylonjs/core/Lights/shadowLight.js\";\nimport { _Exporter } from \"../glTFExporter.js\";\nimport { Logger } from \"@babylonjs/core/Misc/logger.js\";\nimport { _GLTFUtilities } from \"../glTFUtilities.js\";\nvar NAME = \"KHR_lights_punctual\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/master/extensions/2.0/Khronos/KHR_lights_punctual/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nvar KHR_lights_punctual = /** @class */ (function () {\n    /**\n     * @param exporter\n     * @hidden\n     */\n    function KHR_lights_punctual(exporter) {\n        /** The name of this extension. */\n        this.name = NAME;\n        /** Defines whether this extension is enabled. */\n        this.enabled = true;\n        /** Defines whether this extension is required */\n        this.required = false;\n        this._exporter = exporter;\n    }\n    /** @hidden */\n    KHR_lights_punctual.prototype.dispose = function () {\n        this._lights = null;\n    };\n    Object.defineProperty(KHR_lights_punctual.prototype, \"wasUsed\", {\n        /** @hidden */\n        get: function () {\n            return !!this._lights;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /** @hidden */\n    KHR_lights_punctual.prototype.onExporting = function () {\n        this._exporter._glTF.extensions[NAME] = this._lights;\n    };\n    /**\n     * Define this method to modify the default behavior when exporting a node\n     * @param context The context when exporting the node\n     * @param node glTF node\n     * @param babylonNode BabylonJS node\n     * @param nodeMap Node mapping of unique id to glTF node index\n     * @returns nullable INode promise\n     */\n    KHR_lights_punctual.prototype.postExportNodeAsync = function (context, node, babylonNode, nodeMap) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            if (node && babylonNode instanceof ShadowLight) {\n                var babylonLight = babylonNode;\n                var light = void 0;\n                var lightType = babylonLight.getTypeID() == Light.LIGHTTYPEID_POINTLIGHT\n                    ? \"point\" /* POINT */\n                    : babylonLight.getTypeID() == Light.LIGHTTYPEID_DIRECTIONALLIGHT\n                        ? \"directional\" /* DIRECTIONAL */\n                        : babylonLight.getTypeID() == Light.LIGHTTYPEID_SPOTLIGHT\n                            ? \"spot\" /* SPOT */\n                            : null;\n                if (lightType == null) {\n                    Logger.Warn(\"\".concat(context, \": Light \").concat(babylonLight.name, \" is not supported in \").concat(NAME));\n                }\n                else {\n                    var lightPosition = babylonLight.position.clone();\n                    var convertToRightHandedSystem = _this._exporter._convertToRightHandedSystemMap[babylonNode.uniqueId];\n                    if (!lightPosition.equals(Vector3.Zero())) {\n                        if (convertToRightHandedSystem) {\n                            _GLTFUtilities._GetRightHandedPositionVector3FromRef(lightPosition);\n                        }\n                        node.translation = lightPosition.asArray();\n                    }\n                    if (lightType !== \"point\" /* POINT */) {\n                        var localAxis = babylonLight.direction;\n                        var yaw = -Math.atan2(localAxis.z * (_this._exporter._babylonScene.useRightHandedSystem ? -1 : 1), localAxis.x) + Math.PI / 2;\n                        var len = Math.sqrt(localAxis.x * localAxis.x + localAxis.z * localAxis.z);\n                        var pitch = -Math.atan2(localAxis.y, len);\n                        var lightRotationQuaternion = Quaternion.RotationYawPitchRoll(yaw, pitch, 0);\n                        if (convertToRightHandedSystem) {\n                            _GLTFUtilities._GetRightHandedQuaternionFromRef(lightRotationQuaternion);\n                        }\n                        if (!lightRotationQuaternion.equals(Quaternion.Identity())) {\n                            node.rotation = lightRotationQuaternion.asArray();\n                        }\n                    }\n                    if (babylonLight.falloffType !== Light.FALLOFF_GLTF) {\n                        Logger.Warn(\"\".concat(context, \": Light falloff for \").concat(babylonLight.name, \" does not match the \").concat(NAME, \" specification!\"));\n                    }\n                    light = {\n                        type: lightType,\n                    };\n                    if (!babylonLight.diffuse.equals(Color3.White())) {\n                        light.color = babylonLight.diffuse.asArray();\n                    }\n                    if (babylonLight.intensity !== 1.0) {\n                        light.intensity = babylonLight.intensity;\n                    }\n                    if (babylonLight.range !== Number.MAX_VALUE) {\n                        light.range = babylonLight.range;\n                    }\n                    if (lightType === \"spot\" /* SPOT */) {\n                        var babylonSpotLight = babylonLight;\n                        if (babylonSpotLight.angle !== Math.PI / 2.0) {\n                            if (light.spot == null) {\n                                light.spot = {};\n                            }\n                            light.spot.outerConeAngle = babylonSpotLight.angle / 2.0;\n                        }\n                        if (babylonSpotLight.innerAngle !== 0) {\n                            if (light.spot == null) {\n                                light.spot = {};\n                            }\n                            light.spot.innerConeAngle = babylonSpotLight.innerAngle / 2.0;\n                        }\n                    }\n                    if (_this._lights == null) {\n                        _this._lights = {\n                            lights: [],\n                        };\n                    }\n                    _this._lights.lights.push(light);\n                    var lightReference = {\n                        light: _this._lights.lights.length - 1,\n                    };\n                    // Avoid duplicating the Light's parent node if possible.\n                    var parentBabylonNode = babylonNode.parent;\n                    if (parentBabylonNode && parentBabylonNode.getChildren().length == 1) {\n                        var parentNode = _this._exporter._nodes[nodeMap[parentBabylonNode.uniqueId]];\n                        if (parentNode) {\n                            var parentNodeLocalMatrix = TmpVectors.Matrix[0];\n                            var parentInvertNodeLocalMatrix = TmpVectors.Matrix[1];\n                            var parentNodeLocalTranslation = parentNode.translation\n                                ? new Vector3(parentNode.translation[0], parentNode.translation[1], parentNode.translation[2])\n                                : Vector3.Zero();\n                            var parentNodeLocalRotation = parentNode.rotation\n                                ? new Quaternion(parentNode.rotation[0], parentNode.rotation[1], parentNode.rotation[2], parentNode.rotation[3])\n                                : Quaternion.Identity();\n                            var parentNodeLocalScale = parentNode.scale ? new Vector3(parentNode.scale[0], parentNode.scale[1], parentNode.scale[2]) : Vector3.One();\n                            Matrix.ComposeToRef(parentNodeLocalScale, parentNodeLocalRotation, parentNodeLocalTranslation, parentNodeLocalMatrix);\n                            parentNodeLocalMatrix.invertToRef(parentInvertNodeLocalMatrix);\n                            // Convert light local matrix to local matrix relative to grandparent, facing -Z\n                            var lightLocalMatrix = TmpVectors.Matrix[2];\n                            var nodeLocalTranslation = node.translation ? new Vector3(node.translation[0], node.translation[1], node.translation[2]) : Vector3.Zero();\n                            // Undo directional light positional offset\n                            if (babylonLight instanceof DirectionalLight) {\n                                nodeLocalTranslation.subtractInPlace(_this._exporter._babylonScene.useRightHandedSystem\n                                    ? babylonLight.direction\n                                    : _GLTFUtilities._GetRightHandedPositionVector3(babylonLight.direction));\n                            }\n                            var nodeLocalRotation = _this._exporter._babylonScene.useRightHandedSystem ? Quaternion.Identity() : new Quaternion(0, 1, 0, 0);\n                            if (node.rotation) {\n                                nodeLocalRotation.multiplyInPlace(new Quaternion(node.rotation[0], node.rotation[1], node.rotation[2], node.rotation[3]));\n                            }\n                            var nodeLocalScale = node.scale ? new Vector3(node.scale[0], node.scale[1], node.scale[2]) : Vector3.One();\n                            Matrix.ComposeToRef(nodeLocalScale, nodeLocalRotation, nodeLocalTranslation, lightLocalMatrix);\n                            lightLocalMatrix.multiplyToRef(parentInvertNodeLocalMatrix, lightLocalMatrix);\n                            var parentNewScale = TmpVectors.Vector3[0];\n                            var parentNewRotationQuaternion = TmpVectors.Quaternion[0];\n                            var parentNewTranslation = TmpVectors.Vector3[1];\n                            lightLocalMatrix.decompose(parentNewScale, parentNewRotationQuaternion, parentNewTranslation);\n                            parentNode.scale = parentNewScale.asArray();\n                            parentNode.rotation = parentNewRotationQuaternion.asArray();\n                            parentNode.translation = parentNewTranslation.asArray();\n                            if (parentNode.extensions == null) {\n                                parentNode.extensions = {};\n                            }\n                            parentNode.extensions[NAME] = lightReference;\n                            // Do not export the original node\n                            resolve(null);\n                            return;\n                        }\n                    }\n                    if (node.extensions == null) {\n                        node.extensions = {};\n                    }\n                    node.extensions[NAME] = lightReference;\n                }\n            }\n            resolve(node);\n        });\n    };\n    return KHR_lights_punctual;\n}());\nexport { KHR_lights_punctual };\n_Exporter.RegisterExtension(NAME, function (exporter) { return new KHR_lights_punctual(exporter); });\n//# sourceMappingURL=KHR_lights_punctual.js.map","import { _Exporter } from \"../glTFExporter.js\";\nimport { PBRBaseMaterial } from \"@babylonjs/core/Materials/PBR/pbrBaseMaterial.js\";\nimport { Tools } from \"@babylonjs/core/Misc/tools.js\";\nvar NAME = \"KHR_materials_clearcoat\";\n/**\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nvar KHR_materials_clearcoat = /** @class */ (function () {\n    function KHR_materials_clearcoat(exporter) {\n        /** Name of this extension */\n        this.name = NAME;\n        /** Defines whether this extension is enabled */\n        this.enabled = true;\n        /** Defines whether this extension is required */\n        this.required = false;\n        this._wasUsed = false;\n        this._exporter = exporter;\n    }\n    KHR_materials_clearcoat.prototype.dispose = function () { };\n    Object.defineProperty(KHR_materials_clearcoat.prototype, \"wasUsed\", {\n        /** @hidden */\n        get: function () {\n            return this._wasUsed;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    KHR_materials_clearcoat.prototype.postExportMaterialAdditionalTextures = function (context, node, babylonMaterial) {\n        var additionalTextures = [];\n        if (babylonMaterial instanceof PBRBaseMaterial) {\n            if (babylonMaterial.clearCoat.isEnabled) {\n                if (babylonMaterial.clearCoat.texture) {\n                    additionalTextures.push(babylonMaterial.clearCoat.texture);\n                }\n                if (!babylonMaterial.clearCoat.useRoughnessFromMainTexture && babylonMaterial.clearCoat.textureRoughness) {\n                    additionalTextures.push(babylonMaterial.clearCoat.textureRoughness);\n                }\n                if (babylonMaterial.clearCoat.bumpTexture) {\n                    additionalTextures.push(babylonMaterial.clearCoat.bumpTexture);\n                }\n                return additionalTextures;\n            }\n        }\n        return [];\n    };\n    KHR_materials_clearcoat.prototype.postExportMaterialAsync = function (context, node, babylonMaterial) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            if (babylonMaterial instanceof PBRBaseMaterial) {\n                if (!babylonMaterial.clearCoat.isEnabled) {\n                    resolve(node);\n                    return;\n                }\n                _this._wasUsed = true;\n                node.extensions = node.extensions || {};\n                var clearCoatTextureInfo = _this._exporter._glTFMaterialExporter._getTextureInfo(babylonMaterial.clearCoat.texture);\n                var clearCoatTextureRoughnessInfo = void 0;\n                if (babylonMaterial.clearCoat.useRoughnessFromMainTexture) {\n                    clearCoatTextureRoughnessInfo = _this._exporter._glTFMaterialExporter._getTextureInfo(babylonMaterial.clearCoat.texture);\n                }\n                else {\n                    clearCoatTextureRoughnessInfo = _this._exporter._glTFMaterialExporter._getTextureInfo(babylonMaterial.clearCoat.textureRoughness);\n                }\n                if (babylonMaterial.clearCoat.isTintEnabled) {\n                    Tools.Warn(\"Clear Color tint is not supported for glTF export. Ignoring for: \".concat(babylonMaterial.name));\n                }\n                if (babylonMaterial.clearCoat.remapF0OnInterfaceChange) {\n                    Tools.Warn(\"Clear Color F0 remapping is not supported for glTF export. Ignoring for: \".concat(babylonMaterial.name));\n                }\n                var clearCoatNormalTextureInfo = _this._exporter._glTFMaterialExporter._getTextureInfo(babylonMaterial.clearCoat.bumpTexture);\n                var clearCoatInfo_1 = {\n                    clearcoatFactor: babylonMaterial.clearCoat.intensity,\n                    clearcoatTexture: clearCoatTextureInfo !== null && clearCoatTextureInfo !== void 0 ? clearCoatTextureInfo : undefined,\n                    clearcoatRoughnessFactor: babylonMaterial.clearCoat.roughness,\n                    clearcoatRoughnessTexture: clearCoatTextureRoughnessInfo !== null && clearCoatTextureRoughnessInfo !== void 0 ? clearCoatTextureRoughnessInfo : undefined,\n                    clearcoatNormalTexture: clearCoatNormalTextureInfo !== null && clearCoatNormalTextureInfo !== void 0 ? clearCoatNormalTextureInfo : undefined,\n                    hasTextures: function () {\n                        return clearCoatInfo_1.clearcoatTexture !== null || clearCoatInfo_1.clearcoatRoughnessTexture !== null || clearCoatInfo_1.clearcoatRoughnessTexture !== null;\n                    },\n                };\n                node.extensions[NAME] = clearCoatInfo_1;\n            }\n            resolve(node);\n        });\n    };\n    return KHR_materials_clearcoat;\n}());\nexport { KHR_materials_clearcoat };\n_Exporter.RegisterExtension(NAME, function (exporter) { return new KHR_materials_clearcoat(exporter); });\n//# sourceMappingURL=KHR_materials_clearcoat.js.map","import { _Exporter } from \"../glTFExporter.js\";\nimport { PBRBaseMaterial } from \"@babylonjs/core/Materials/PBR/pbrBaseMaterial.js\";\nvar NAME = \"KHR_materials_iridescence\";\n/**\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nvar KHR_materials_iridescence = /** @class */ (function () {\n    function KHR_materials_iridescence(exporter) {\n        /** Name of this extension */\n        this.name = NAME;\n        /** Defines whether this extension is enabled */\n        this.enabled = true;\n        /** Defines whether this extension is required */\n        this.required = false;\n        this._wasUsed = false;\n        this._exporter = exporter;\n    }\n    KHR_materials_iridescence.prototype.dispose = function () { };\n    Object.defineProperty(KHR_materials_iridescence.prototype, \"wasUsed\", {\n        /** @hidden */\n        get: function () {\n            return this._wasUsed;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    KHR_materials_iridescence.prototype.postExportMaterialAdditionalTextures = function (context, node, babylonMaterial) {\n        var additionalTextures = [];\n        if (babylonMaterial instanceof PBRBaseMaterial) {\n            if (babylonMaterial.iridescence.isEnabled) {\n                if (babylonMaterial.iridescence.texture) {\n                    additionalTextures.push(babylonMaterial.iridescence.texture);\n                }\n                if (babylonMaterial.iridescence.thicknessTexture && babylonMaterial.iridescence.thicknessTexture !== babylonMaterial.iridescence.texture) {\n                    additionalTextures.push(babylonMaterial.iridescence.thicknessTexture);\n                }\n                return additionalTextures;\n            }\n        }\n        return [];\n    };\n    KHR_materials_iridescence.prototype.postExportMaterialAsync = function (context, node, babylonMaterial) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            if (babylonMaterial instanceof PBRBaseMaterial) {\n                if (!babylonMaterial.iridescence.isEnabled) {\n                    resolve(node);\n                    return;\n                }\n                _this._wasUsed = true;\n                node.extensions = node.extensions || {};\n                var iridescenceTextureInfo = _this._exporter._glTFMaterialExporter._getTextureInfo(babylonMaterial.iridescence.texture);\n                var iridescenceThicknessTextureInfo = _this._exporter._glTFMaterialExporter._getTextureInfo(babylonMaterial.iridescence.thicknessTexture);\n                var iridescenceInfo_1 = {\n                    iridescenceFactor: babylonMaterial.iridescence.intensity,\n                    iridescenceIor: babylonMaterial.iridescence.indexOfRefraction,\n                    iridescenceThicknessMinimum: babylonMaterial.iridescence.minimumThickness,\n                    iridescenceThicknessMaximum: babylonMaterial.iridescence.maximumThickness,\n                    iridescenceTexture: iridescenceTextureInfo !== null && iridescenceTextureInfo !== void 0 ? iridescenceTextureInfo : undefined,\n                    iridescenceThicknessTexture: iridescenceThicknessTextureInfo !== null && iridescenceThicknessTextureInfo !== void 0 ? iridescenceThicknessTextureInfo : undefined,\n                    hasTextures: function () {\n                        return iridescenceInfo_1.iridescenceTexture !== null || iridescenceInfo_1.iridescenceThicknessTexture !== null;\n                    },\n                };\n                node.extensions[NAME] = iridescenceInfo_1;\n            }\n            resolve(node);\n        });\n    };\n    return KHR_materials_iridescence;\n}());\nexport { KHR_materials_iridescence };\n_Exporter.RegisterExtension(NAME, function (exporter) { return new KHR_materials_iridescence(exporter); });\n//# sourceMappingURL=KHR_materials_iridescence.js.map","import { _Exporter } from \"../glTFExporter.js\";\nimport { PBRMaterial } from \"@babylonjs/core/Materials/PBR/pbrMaterial.js\";\nvar NAME = \"KHR_materials_sheen\";\n/**\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nvar KHR_materials_sheen = /** @class */ (function () {\n    function KHR_materials_sheen(exporter) {\n        /** Name of this extension */\n        this.name = NAME;\n        /** Defines whether this extension is enabled */\n        this.enabled = true;\n        /** Defines whether this extension is required */\n        this.required = false;\n        this._wasUsed = false;\n        this._exporter = exporter;\n    }\n    KHR_materials_sheen.prototype.dispose = function () { };\n    Object.defineProperty(KHR_materials_sheen.prototype, \"wasUsed\", {\n        /** @hidden */\n        get: function () {\n            return this._wasUsed;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    KHR_materials_sheen.prototype.postExportMaterialAdditionalTextures = function (context, node, babylonMaterial) {\n        if (babylonMaterial instanceof PBRMaterial) {\n            if (babylonMaterial.sheen.isEnabled && babylonMaterial.sheen.texture) {\n                return [babylonMaterial.sheen.texture];\n            }\n        }\n        return [];\n    };\n    KHR_materials_sheen.prototype.postExportMaterialAsync = function (context, node, babylonMaterial) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var _a, _b, _c, _d;\n            if (babylonMaterial instanceof PBRMaterial) {\n                if (!babylonMaterial.sheen.isEnabled) {\n                    resolve(node);\n                    return;\n                }\n                _this._wasUsed = true;\n                if (node.extensions == null) {\n                    node.extensions = {};\n                }\n                var sheenInfo_1 = {\n                    sheenColorFactor: babylonMaterial.sheen.color.asArray(),\n                    sheenRoughnessFactor: (_a = babylonMaterial.sheen.roughness) !== null && _a !== void 0 ? _a : 0,\n                    hasTextures: function () {\n                        return sheenInfo_1.sheenColorTexture !== null || sheenInfo_1.sheenRoughnessTexture !== null;\n                    },\n                };\n                if (babylonMaterial.sheen.texture) {\n                    sheenInfo_1.sheenColorTexture = (_b = _this._exporter._glTFMaterialExporter._getTextureInfo(babylonMaterial.sheen.texture)) !== null && _b !== void 0 ? _b : undefined;\n                }\n                if (babylonMaterial.sheen.textureRoughness && !babylonMaterial.sheen.useRoughnessFromMainTexture) {\n                    sheenInfo_1.sheenRoughnessTexture = (_c = _this._exporter._glTFMaterialExporter._getTextureInfo(babylonMaterial.sheen.textureRoughness)) !== null && _c !== void 0 ? _c : undefined;\n                }\n                else if (babylonMaterial.sheen.texture && babylonMaterial.sheen.useRoughnessFromMainTexture) {\n                    sheenInfo_1.sheenRoughnessTexture = (_d = _this._exporter._glTFMaterialExporter._getTextureInfo(babylonMaterial.sheen.texture)) !== null && _d !== void 0 ? _d : undefined;\n                }\n                node.extensions[NAME] = sheenInfo_1;\n            }\n            resolve(node);\n        });\n    };\n    return KHR_materials_sheen;\n}());\nexport { KHR_materials_sheen };\n_Exporter.RegisterExtension(NAME, function (exporter) { return new KHR_materials_sheen(exporter); });\n//# sourceMappingURL=KHR_materials_sheen.js.map","import { _Exporter } from \"../glTFExporter.js\";\nimport { PBRMaterial } from \"@babylonjs/core/Materials/PBR/pbrMaterial.js\";\nimport { StandardMaterial } from \"@babylonjs/core/Materials/standardMaterial.js\";\nvar NAME = \"KHR_materials_unlit\";\n/**\n * @hidden\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nvar KHR_materials_unlit = /** @class */ (function () {\n    function KHR_materials_unlit() {\n        /** Name of this extension */\n        this.name = NAME;\n        /** Defines whether this extension is enabled */\n        this.enabled = true;\n        /** Defines whether this extension is required */\n        this.required = false;\n        this._wasUsed = false;\n    }\n    Object.defineProperty(KHR_materials_unlit.prototype, \"wasUsed\", {\n        /** @hidden */\n        get: function () {\n            return this._wasUsed;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    KHR_materials_unlit.prototype.dispose = function () { };\n    KHR_materials_unlit.prototype.postExportMaterialAsync = function (context, node, babylonMaterial) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var unlitMaterial = false;\n            if (babylonMaterial instanceof PBRMaterial) {\n                unlitMaterial = babylonMaterial.unlit;\n            }\n            else if (babylonMaterial instanceof StandardMaterial) {\n                unlitMaterial = babylonMaterial.disableLighting;\n            }\n            if (unlitMaterial) {\n                _this._wasUsed = true;\n                if (node.extensions == null) {\n                    node.extensions = {};\n                }\n                node.extensions[NAME] = {};\n            }\n            resolve(node);\n        });\n    };\n    return KHR_materials_unlit;\n}());\nexport { KHR_materials_unlit };\n_Exporter.RegisterExtension(NAME, function () { return new KHR_materials_unlit(); });\n//# sourceMappingURL=KHR_materials_unlit.js.map","import { _Exporter } from \"../glTFExporter.js\";\nimport { PBRMaterial } from \"@babylonjs/core/Materials/PBR/pbrMaterial.js\";\nvar NAME = \"KHR_materials_ior\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_materials_ior/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nvar KHR_materials_ior = /** @class */ (function () {\n    function KHR_materials_ior() {\n        /** Name of this extension */\n        this.name = NAME;\n        /** Defines whether this extension is enabled */\n        this.enabled = true;\n        /** Defines whether this extension is required */\n        this.required = false;\n        this._wasUsed = false;\n    }\n    KHR_materials_ior.prototype.dispose = function () { };\n    Object.defineProperty(KHR_materials_ior.prototype, \"wasUsed\", {\n        /** @hidden */\n        get: function () {\n            return this._wasUsed;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    KHR_materials_ior.prototype._isExtensionEnabled = function (mat) {\n        // This extension must not be used on a material that also uses KHR_materials_unlit\n        if (mat.unlit) {\n            return false;\n        }\n        return mat.indexOfRefraction != undefined && mat.indexOfRefraction != 1.5; // 1.5 is normative default value.\n    };\n    KHR_materials_ior.prototype.postExportMaterialAsync = function (context, node, babylonMaterial) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            if (babylonMaterial instanceof PBRMaterial && _this._isExtensionEnabled(babylonMaterial)) {\n                _this._wasUsed = true;\n                var iorInfo = {\n                    ior: babylonMaterial.indexOfRefraction,\n                };\n                node.extensions = node.extensions || {};\n                node.extensions[NAME] = iorInfo;\n            }\n            resolve(node);\n        });\n    };\n    return KHR_materials_ior;\n}());\nexport { KHR_materials_ior };\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n_Exporter.RegisterExtension(NAME, function (exporter) { return new KHR_materials_ior(); });\n//# sourceMappingURL=KHR_materials_ior.js.map","import { _Exporter } from \"../glTFExporter.js\";\nimport { PBRMaterial } from \"@babylonjs/core/Materials/PBR/pbrMaterial.js\";\nvar NAME = \"KHR_materials_specular\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_materials_specular/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nvar KHR_materials_specular = /** @class */ (function () {\n    function KHR_materials_specular(exporter) {\n        /** Name of this extension */\n        this.name = NAME;\n        /** Defines whether this extension is enabled */\n        this.enabled = true;\n        /** Defines whether this extension is required */\n        this.required = false;\n        this._wasUsed = false;\n        this._exporter = exporter;\n    }\n    KHR_materials_specular.prototype.dispose = function () { };\n    Object.defineProperty(KHR_materials_specular.prototype, \"wasUsed\", {\n        /** @hidden */\n        get: function () {\n            return this._wasUsed;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    KHR_materials_specular.prototype.postExportMaterialAdditionalTextures = function (context, node, babylonMaterial) {\n        var additionalTextures = [];\n        if (babylonMaterial instanceof PBRMaterial) {\n            if (this._isExtensionEnabled(babylonMaterial)) {\n                if (babylonMaterial.metallicReflectanceTexture) {\n                    additionalTextures.push(babylonMaterial.metallicReflectanceTexture);\n                }\n                if (babylonMaterial.reflectanceTexture) {\n                    additionalTextures.push(babylonMaterial.reflectanceTexture);\n                }\n                return additionalTextures;\n            }\n        }\n        return additionalTextures;\n    };\n    KHR_materials_specular.prototype._isExtensionEnabled = function (mat) {\n        // This extension must not be used on a material that also uses KHR_materials_unlit\n        if (mat.unlit) {\n            return false;\n        }\n        return ((mat.metallicF0Factor != undefined && mat.metallicF0Factor != 1.0) ||\n            (mat.metallicReflectanceColor != undefined && !mat.metallicReflectanceColor.equalsFloats(1.0, 1.0, 1.0)) ||\n            this._hasTexturesExtension(mat));\n    };\n    KHR_materials_specular.prototype._hasTexturesExtension = function (mat) {\n        return mat.metallicReflectanceTexture != null || mat.reflectanceTexture != null;\n    };\n    KHR_materials_specular.prototype.postExportMaterialAsync = function (context, node, babylonMaterial) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var _a, _b;\n            if (babylonMaterial instanceof PBRMaterial && _this._isExtensionEnabled(babylonMaterial)) {\n                _this._wasUsed = true;\n                node.extensions = node.extensions || {};\n                var metallicReflectanceTexture = (_a = _this._exporter._glTFMaterialExporter._getTextureInfo(babylonMaterial.metallicReflectanceTexture)) !== null && _a !== void 0 ? _a : undefined;\n                var reflectanceTexture = (_b = _this._exporter._glTFMaterialExporter._getTextureInfo(babylonMaterial.reflectanceTexture)) !== null && _b !== void 0 ? _b : undefined;\n                var metallicF0Factor = babylonMaterial.metallicF0Factor == 1.0 ? undefined : babylonMaterial.metallicF0Factor;\n                var metallicReflectanceColor = babylonMaterial.metallicReflectanceColor.equalsFloats(1.0, 1.0, 1.0)\n                    ? undefined\n                    : babylonMaterial.metallicReflectanceColor.asArray();\n                var specularInfo = {\n                    specularFactor: metallicF0Factor,\n                    specularTexture: metallicReflectanceTexture,\n                    specularColorFactor: metallicReflectanceColor,\n                    specularColorTexture: reflectanceTexture,\n                    hasTextures: function () {\n                        return _this._hasTexturesExtension(babylonMaterial);\n                    },\n                };\n                node.extensions[NAME] = specularInfo;\n            }\n            resolve(node);\n        });\n    };\n    return KHR_materials_specular;\n}());\nexport { KHR_materials_specular };\n_Exporter.RegisterExtension(NAME, function (exporter) { return new KHR_materials_specular(exporter); });\n//# sourceMappingURL=KHR_materials_specular.js.map","import { _Exporter } from \"../glTFExporter.js\";\nimport { PBRMaterial } from \"@babylonjs/core/Materials/PBR/pbrMaterial.js\";\nimport { Color3 } from \"@babylonjs/core/Maths/math.color.js\";\nvar NAME = \"KHR_materials_volume\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_materials_volume/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nvar KHR_materials_volume = /** @class */ (function () {\n    function KHR_materials_volume(exporter) {\n        /** Name of this extension */\n        this.name = NAME;\n        /** Defines whether this extension is enabled */\n        this.enabled = true;\n        /** Defines whether this extension is required */\n        this.required = false;\n        this._wasUsed = false;\n        this._exporter = exporter;\n    }\n    KHR_materials_volume.prototype.dispose = function () { };\n    Object.defineProperty(KHR_materials_volume.prototype, \"wasUsed\", {\n        /** @hidden */\n        get: function () {\n            return this._wasUsed;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    KHR_materials_volume.prototype.postExportMaterialAdditionalTextures = function (context, node, babylonMaterial) {\n        var additionalTextures = [];\n        if (babylonMaterial instanceof PBRMaterial) {\n            if (this._isExtensionEnabled(babylonMaterial)) {\n                if (babylonMaterial.subSurface.thicknessTexture) {\n                    additionalTextures.push(babylonMaterial.subSurface.thicknessTexture);\n                }\n                return additionalTextures;\n            }\n        }\n        return additionalTextures;\n    };\n    KHR_materials_volume.prototype._isExtensionEnabled = function (mat) {\n        // This extension must not be used on a material that also uses KHR_materials_unlit\n        if (mat.unlit) {\n            return false;\n        }\n        var subs = mat.subSurface;\n        // this extension requires either the KHR_materials_transmission or KHR_materials_translucency extensions.\n        if (!subs.isRefractionEnabled && !subs.isTranslucencyEnabled) {\n            return false;\n        }\n        return ((subs.maximumThickness != undefined && subs.maximumThickness != 0) ||\n            (subs.tintColorAtDistance != undefined && subs.tintColorAtDistance != Number.POSITIVE_INFINITY) ||\n            (subs.tintColor != undefined && subs.tintColor != Color3.White()) ||\n            this._hasTexturesExtension(mat));\n    };\n    KHR_materials_volume.prototype._hasTexturesExtension = function (mat) {\n        return mat.subSurface.thicknessTexture != null;\n    };\n    KHR_materials_volume.prototype.postExportMaterialAsync = function (context, node, babylonMaterial) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var _a;\n            if (babylonMaterial instanceof PBRMaterial && _this._isExtensionEnabled(babylonMaterial)) {\n                _this._wasUsed = true;\n                var subs = babylonMaterial.subSurface;\n                var thicknessFactor = subs.maximumThickness == 0 ? undefined : subs.maximumThickness;\n                var thicknessTexture = (_a = _this._exporter._glTFMaterialExporter._getTextureInfo(subs.thicknessTexture)) !== null && _a !== void 0 ? _a : undefined;\n                var attenuationDistance = subs.tintColorAtDistance == Number.POSITIVE_INFINITY ? undefined : subs.tintColorAtDistance;\n                var attenuationColor = subs.tintColor.equalsFloats(1.0, 1.0, 1.0) ? undefined : subs.tintColor.asArray();\n                var volumeInfo = {\n                    thicknessFactor: thicknessFactor,\n                    thicknessTexture: thicknessTexture,\n                    attenuationDistance: attenuationDistance,\n                    attenuationColor: attenuationColor,\n                    hasTextures: function () {\n                        return _this._hasTexturesExtension(babylonMaterial);\n                    },\n                };\n                node.extensions = node.extensions || {};\n                node.extensions[NAME] = volumeInfo;\n            }\n            resolve(node);\n        });\n    };\n    return KHR_materials_volume;\n}());\nexport { KHR_materials_volume };\n_Exporter.RegisterExtension(NAME, function (exporter) { return new KHR_materials_volume(exporter); });\n//# sourceMappingURL=KHR_materials_volume.js.map","import { _Exporter } from \"../glTFExporter.js\";\nimport { PBRMaterial } from \"@babylonjs/core/Materials/PBR/pbrMaterial.js\";\nvar NAME = \"KHR_materials_transmission\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Khronos/KHR_materials_transmission/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nvar KHR_materials_transmission = /** @class */ (function () {\n    function KHR_materials_transmission(exporter) {\n        /** Name of this extension */\n        this.name = NAME;\n        /** Defines whether this extension is enabled */\n        this.enabled = true;\n        /** Defines whether this extension is required */\n        this.required = false;\n        this._wasUsed = false;\n        this._exporter = exporter;\n    }\n    KHR_materials_transmission.prototype.dispose = function () { };\n    Object.defineProperty(KHR_materials_transmission.prototype, \"wasUsed\", {\n        /** @hidden */\n        get: function () {\n            return this._wasUsed;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    KHR_materials_transmission.prototype.postExportMaterialAdditionalTextures = function (context, node, babylonMaterial) {\n        var additionalTextures = [];\n        if (babylonMaterial instanceof PBRMaterial) {\n            if (this._isExtensionEnabled(babylonMaterial)) {\n                if (babylonMaterial.subSurface.thicknessTexture) {\n                    additionalTextures.push(babylonMaterial.subSurface.thicknessTexture);\n                }\n                return additionalTextures;\n            }\n        }\n        return additionalTextures;\n    };\n    KHR_materials_transmission.prototype._isExtensionEnabled = function (mat) {\n        // This extension must not be used on a material that also uses KHR_materials_unlit\n        if (mat.unlit) {\n            return false;\n        }\n        var subs = mat.subSurface;\n        return (subs.isRefractionEnabled && subs.refractionIntensity != undefined && subs.refractionIntensity != 0) || this._hasTexturesExtension(mat);\n    };\n    KHR_materials_transmission.prototype._hasTexturesExtension = function (mat) {\n        return mat.subSurface.refractionIntensityTexture != null;\n    };\n    KHR_materials_transmission.prototype.postExportMaterialAsync = function (context, node, babylonMaterial) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            var _a;\n            if (babylonMaterial instanceof PBRMaterial && _this._isExtensionEnabled(babylonMaterial)) {\n                _this._wasUsed = true;\n                var subs = babylonMaterial.subSurface;\n                var transmissionFactor = subs.refractionIntensity === 0 ? undefined : subs.refractionIntensity;\n                var transmissionTexture = (_a = _this._exporter._glTFMaterialExporter._getTextureInfo(subs.refractionIntensityTexture)) !== null && _a !== void 0 ? _a : undefined;\n                var volumeInfo = {\n                    transmissionFactor: transmissionFactor,\n                    transmissionTexture: transmissionTexture,\n                    hasTextures: function () {\n                        return _this._hasTexturesExtension(babylonMaterial);\n                    },\n                };\n                node.extensions = node.extensions || {};\n                node.extensions[NAME] = volumeInfo;\n            }\n            resolve(node);\n        });\n    };\n    return KHR_materials_transmission;\n}());\nexport { KHR_materials_transmission };\n_Exporter.RegisterExtension(NAME, function (exporter) { return new KHR_materials_transmission(exporter); });\n//# sourceMappingURL=KHR_materials_transmission.js.map","import { _Exporter } from \"../glTFExporter.js\";\nimport { Mesh } from \"@babylonjs/core/Meshes/mesh.js\";\nimport \"@babylonjs/core/Meshes/thinInstanceMesh.js\";\nimport { TmpVectors, Quaternion, Vector3 } from \"@babylonjs/core/Maths/math.vector.js\";\nimport { VertexBuffer } from \"@babylonjs/core/Buffers/buffer.js\";\nvar NAME = \"EXT_mesh_gpu_instancing\";\n/**\n * [Specification](https://github.com/KhronosGroup/glTF/blob/main/extensions/2.0/Vendor/EXT_mesh_gpu_instancing/README.md)\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nvar EXT_mesh_gpu_instancing = /** @class */ (function () {\n    function EXT_mesh_gpu_instancing(exporter) {\n        /** Name of this extension */\n        this.name = NAME;\n        /** Defines whether this extension is enabled */\n        this.enabled = true;\n        /** Defines whether this extension is required */\n        this.required = false;\n        this._wasUsed = false;\n        this._exporter = exporter;\n    }\n    EXT_mesh_gpu_instancing.prototype.dispose = function () { };\n    Object.defineProperty(EXT_mesh_gpu_instancing.prototype, \"wasUsed\", {\n        /** @hidden */\n        get: function () {\n            return this._wasUsed;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    EXT_mesh_gpu_instancing.prototype.postExportNodeAsync = function (context, node, babylonNode, nodeMap, binaryWriter) {\n        var _this = this;\n        return new Promise(function (resolve) {\n            if (node && babylonNode instanceof Mesh) {\n                if (babylonNode.hasThinInstances && binaryWriter) {\n                    _this._wasUsed = true;\n                    var noTranslation = Vector3.Zero();\n                    var noRotation = Quaternion.Identity();\n                    var noScale = Vector3.One();\n                    // retreive all the instance world matrix\n                    var matrix = babylonNode.thinInstanceGetWorldMatrices();\n                    var iwt = TmpVectors.Vector3[2];\n                    var iwr = TmpVectors.Quaternion[1];\n                    var iws = TmpVectors.Vector3[3];\n                    var hasAnyInstanceWorldTranslation = false;\n                    var hasAnyInstanceWorldRotation = false;\n                    var hasAnyInstanceWorldScale = false;\n                    // prepare temp buffers\n                    var translationBuffer = new Float32Array(babylonNode.thinInstanceCount * 3);\n                    var rotationBuffer = new Float32Array(babylonNode.thinInstanceCount * 4);\n                    var scaleBuffer = new Float32Array(babylonNode.thinInstanceCount * 3);\n                    var i = 0;\n                    for (var _i = 0, matrix_1 = matrix; _i < matrix_1.length; _i++) {\n                        var m = matrix_1[_i];\n                        m.decompose(iws, iwr, iwt);\n                        // fill the temp buffer\n                        translationBuffer.set(iwt.asArray(), i * 3);\n                        rotationBuffer.set(iwr.normalize().asArray(), i * 4); // ensure the quaternion is normalized\n                        scaleBuffer.set(iws.asArray(), i * 3);\n                        // this is where we decide if there is any transformation\n                        hasAnyInstanceWorldTranslation = hasAnyInstanceWorldTranslation || !iwt.equalsWithEpsilon(noTranslation);\n                        hasAnyInstanceWorldRotation = hasAnyInstanceWorldRotation || !iwr.equalsWithEpsilon(noRotation);\n                        hasAnyInstanceWorldScale = hasAnyInstanceWorldScale || !iws.equalsWithEpsilon(noScale);\n                        i++;\n                    }\n                    var extension = {\n                        attributes: {},\n                    };\n                    // do we need to write TRANSLATION ?\n                    if (hasAnyInstanceWorldTranslation) {\n                        extension.attributes[\"TRANSLATION\"] = _this._buildAccessor(translationBuffer, \"VEC3\" /* VEC3 */, babylonNode.thinInstanceCount, binaryWriter, 5126 /* FLOAT */);\n                    }\n                    // do we need to write ROTATION ?\n                    if (hasAnyInstanceWorldRotation) {\n                        var componentType = 5126 /* FLOAT */; // we decided to stay on FLOAT for now see https://github.com/BabylonJS/Babylon.js/pull/12495\n                        extension.attributes[\"ROTATION\"] = _this._buildAccessor(rotationBuffer, \"VEC4\" /* VEC4 */, babylonNode.thinInstanceCount, binaryWriter, componentType);\n                    }\n                    // do we need to write SCALE ?\n                    if (hasAnyInstanceWorldScale) {\n                        extension.attributes[\"SCALE\"] = _this._buildAccessor(scaleBuffer, \"VEC3\" /* VEC3 */, babylonNode.thinInstanceCount, binaryWriter, 5126 /* FLOAT */);\n                    }\n                    /* eslint-enable @typescript-eslint/naming-convention*/\n                    node.extensions = node.extensions || {};\n                    node.extensions[NAME] = extension;\n                }\n            }\n            resolve(node);\n        });\n    };\n    EXT_mesh_gpu_instancing.prototype._buildAccessor = function (buffer, type, count, binaryWriter, componentType) {\n        // write the buffer\n        var bufferOffset = binaryWriter.getByteOffset();\n        switch (componentType) {\n            case 5126 /* FLOAT */: {\n                for (var i = 0; i != buffer.length; i++) {\n                    binaryWriter.setFloat32(buffer[i]);\n                }\n                break;\n            }\n            case 5120 /* BYTE */: {\n                for (var i = 0; i != buffer.length; i++) {\n                    binaryWriter.setByte(buffer[i] * 127);\n                }\n                break;\n            }\n            case 5122 /* SHORT */: {\n                for (var i = 0; i != buffer.length; i++) {\n                    binaryWriter.setInt16(buffer[i] * 32767);\n                }\n                break;\n            }\n        }\n        // build the buffer view\n        var bv = { buffer: 0, byteOffset: bufferOffset, byteLength: buffer.length * VertexBuffer.GetTypeByteLength(componentType) };\n        var bufferViewIndex = this._exporter._bufferViews.length;\n        this._exporter._bufferViews.push(bv);\n        // finally build the accessor\n        var accessorIndex = this._exporter._accessors.length;\n        var accessor = {\n            bufferView: bufferViewIndex,\n            componentType: componentType,\n            count: count,\n            type: type,\n            normalized: componentType == 5120 /* BYTE */ || componentType == 5122 /* SHORT */,\n        };\n        this._exporter._accessors.push(accessor);\n        return accessorIndex;\n    };\n    return EXT_mesh_gpu_instancing;\n}());\nexport { EXT_mesh_gpu_instancing };\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n_Exporter.RegisterExtension(NAME, function (exporter) { return new EXT_mesh_gpu_instancing(exporter); });\n//# sourceMappingURL=EXT_mesh_gpu_instancing.js.map","import { VertexBuffer } from \"@babylonjs/core/Buffers/buffer.js\";\nimport { Vector3 } from \"@babylonjs/core/Maths/math.vector.js\";\n/**\n * Class for generating STL data from a Babylon scene.\n */\nvar STLExport = /** @class */ (function () {\n    function STLExport() {\n    }\n    /**\n     * Exports the geometry of a Mesh array in .STL file format (ASCII)\n     * @param meshes list defines the mesh to serialize\n     * @param download triggers the automatic download of the file.\n     * @param fileName changes the downloads fileName.\n     * @param binary changes the STL to a binary type.\n     * @param isLittleEndian toggle for binary type exporter.\n     * @param doNotBakeTransform toggle if meshes transforms should be baked or not.\n     * @returns the STL as UTF8 string\n     */\n    STLExport.CreateSTL = function (meshes, download, fileName, binary, isLittleEndian, doNotBakeTransform) {\n        //Binary support adapted from https://gist.github.com/paulkaplan/6d5f0ab2c7e8fdc68a61\n        if (download === void 0) { download = true; }\n        if (fileName === void 0) { fileName = \"stlmesh\"; }\n        if (binary === void 0) { binary = false; }\n        if (isLittleEndian === void 0) { isLittleEndian = true; }\n        if (doNotBakeTransform === void 0) { doNotBakeTransform = false; }\n        var getFaceData = function (indices, vertices, i) {\n            var id = [indices[i] * 3, indices[i + 1] * 3, indices[i + 2] * 3];\n            var v = [\n                new Vector3(vertices[id[0]], vertices[id[0] + 2], vertices[id[0] + 1]),\n                new Vector3(vertices[id[1]], vertices[id[1] + 2], vertices[id[1] + 1]),\n                new Vector3(vertices[id[2]], vertices[id[2] + 2], vertices[id[2] + 1]),\n            ];\n            var p1p2 = v[0].subtract(v[1]);\n            var p3p2 = v[2].subtract(v[1]);\n            var n = Vector3.Cross(p3p2, p1p2).normalize();\n            return { v: v, n: n };\n        };\n        var writeVector = function (dataview, offset, vector, isLittleEndian) {\n            offset = writeFloat(dataview, offset, vector.x, isLittleEndian);\n            offset = writeFloat(dataview, offset, vector.y, isLittleEndian);\n            return writeFloat(dataview, offset, vector.z, isLittleEndian);\n        };\n        var writeFloat = function (dataview, offset, value, isLittleEndian) {\n            dataview.setFloat32(offset, value, isLittleEndian);\n            return offset + 4;\n        };\n        var data;\n        var faceCount = 0;\n        var offset = 0;\n        if (binary) {\n            for (var i = 0; i < meshes.length; i++) {\n                var mesh = meshes[i];\n                var indices = mesh.getIndices();\n                faceCount += indices ? indices.length / 3 : 0;\n            }\n            var bufferSize = 84 + 50 * faceCount;\n            var buffer = new ArrayBuffer(bufferSize);\n            data = new DataView(buffer);\n            offset += 80;\n            data.setUint32(offset, faceCount, isLittleEndian);\n            offset += 4;\n        }\n        else {\n            data = \"solid stlmesh\\r\\n\";\n        }\n        for (var i = 0; i < meshes.length; i++) {\n            var mesh = meshes[i];\n            if (!doNotBakeTransform) {\n                mesh.bakeCurrentTransformIntoVertices();\n            }\n            var vertices = mesh.getVerticesData(VertexBuffer.PositionKind) || [];\n            var indices = mesh.getIndices() || [];\n            for (var i_1 = 0; i_1 < indices.length; i_1 += 3) {\n                var fd = getFaceData(indices, vertices, i_1);\n                if (binary) {\n                    offset = writeVector(data, offset, fd.n, isLittleEndian);\n                    offset = writeVector(data, offset, fd.v[0], isLittleEndian);\n                    offset = writeVector(data, offset, fd.v[1], isLittleEndian);\n                    offset = writeVector(data, offset, fd.v[2], isLittleEndian);\n                    offset += 2;\n                }\n                else {\n                    data += \"facet normal \" + fd.n.x + \" \" + fd.n.y + \" \" + fd.n.z + \"\\r\\n\";\n                    data += \"\\touter loop\\r\\n\";\n                    data += \"\\t\\tvertex \" + fd.v[0].x + \" \" + fd.v[0].y + \" \" + fd.v[0].z + \"\\r\\n\";\n                    data += \"\\t\\tvertex \" + fd.v[1].x + \" \" + fd.v[1].y + \" \" + fd.v[1].z + \"\\r\\n\";\n                    data += \"\\t\\tvertex \" + fd.v[2].x + \" \" + fd.v[2].y + \" \" + fd.v[2].z + \"\\r\\n\";\n                    data += \"\\tendloop\\r\\n\";\n                    data += \"endfacet\\r\\n\";\n                }\n            }\n        }\n        if (!binary) {\n            data += \"endsolid stlmesh\";\n        }\n        if (download) {\n            var a = document.createElement(\"a\");\n            var blob = new Blob([data], { type: \"application/octet-stream\" });\n            a.href = window.URL.createObjectURL(blob);\n            a.download = fileName + \".stl\";\n            a.click();\n        }\n        return data;\n    };\n    return STLExport;\n}());\nexport { STLExport };\n//# sourceMappingURL=stlSerializer.js.map"],"names":["exports","byteLength","b64","lens","getLens","validLen","placeHoldersLen","toByteArray","tmp","i","arr","Arr","_byteLength","curByte","len","revLookup","charCodeAt","fromByteArray","uint8","length","extraBytes","parts","maxChunkLength","len2","push","encodeChunk","lookup","join","Uint8Array","Array","code","Error","indexOf","start","end","num","output","base64","ieee754","customInspectSymbol","Symbol","Buffer","SlowBuffer","alloc","INSPECT_MAX_BYTES","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","value","string","encoding","isEncoding","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","buffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","m","bidirectionalIndexOf","val","dir","arrayIndexOf","call","lastIndexOf","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","offset","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","c","hi","lo","utf16leToBytes","Math","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","kMaxLength","TYPED_ARRAY_SUPPORT","proto","foo","e","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","stack","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","floor","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","abs","INVALID_BASE64_RE","Infinity","leadSurrogate","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","shader","LavaMaterialDefines","_super","_this","DIFFUSE","CLIPPLANE","CLIPPLANE2","CLIPPLANE3","CLIPPLANE4","CLIPPLANE5","CLIPPLANE6","ALPHATEST","DEPTHPREPASS","POINTSIZE","FOG","LIGHT0","LIGHT1","LIGHT2","LIGHT3","SPOTLIGHT0","SPOTLIGHT1","SPOTLIGHT2","SPOTLIGHT3","HEMILIGHT0","HEMILIGHT1","HEMILIGHT2","HEMILIGHT3","DIRLIGHT0","DIRLIGHT1","DIRLIGHT2","DIRLIGHT3","POINTLIGHT0","POINTLIGHT1","POINTLIGHT2","POINTLIGHT3","SHADOW0","SHADOW1","SHADOW2","SHADOW3","SHADOWS","SHADOWESM0","SHADOWESM1","SHADOWESM2","SHADOWESM3","SHADOWPOISSON0","SHADOWPOISSON1","SHADOWPOISSON2","SHADOWPOISSON3","SHADOWPCF0","SHADOWPCF1","SHADOWPCF2","SHADOWPCF3","SHADOWPCSS0","SHADOWPCSS1","SHADOWPCSS2","SHADOWPCSS3","NORMAL","UV1","UV2","VERTEXCOLOR","VERTEXALPHA","NUM_BONE_INFLUENCERS","BonesPerMesh","INSTANCES","INSTANCESCOLOR","UNLIT","IMAGEPROCESSINGPOSTPROCESS","SKIPFINALCOLORCLAMP","rebuild","LavaMaterial","scene","speed","movingSpeed","lowFrequencySpeed","fogDensity","_lastTime","diffuseColor","_disableLighting","_unlit","_maxSimultaneousLights","_scaledDiffuse","needAlphaBlending","alpha","needAlphaTesting","getAlphaTestTexture","isReadyForSubMesh","mesh","subMesh","useInstances","isFrozen","effect","_wasPreviouslyReady","materialDefines","defines","getScene","_isReadyForSubMesh","engine","getEngine","_areTexturesDirty","_needUVs","texturesEnabled","_diffuseTexture","isReady","pointsCloud","fogEnabled","_shouldTurnAlphaTestOn","_needNormals","isDirty","markAsProcessed","resetCachedMaterial","fallbacks","addFallback","addCPUSkinningFallback","imageProcessingConfiguration","applyByPostProcess","attribs","uniforms","samplers","uniformBuffers","uniformsNames","uniformBuffersNames","maxSimultaneousLights","setEffect","createEffect","attributes","onCompiled","onError","indexParameters","_materialContext","_renderId","getRenderId","bindForSubMesh","world","_activeEffect","bindOnlyWorldMatrix","setMatrix","getTransformMatrix","_mustRebind","diffuseTexture","setTexture","setFloat2","coordinatesIndex","level","getTextureMatrix","noiseTexture","setFloat","pointSize","bindEyePosition","setColor4","visibility","lightsEnabled","disableLighting","applyFog","fogMode","getViewMatrix","getDeltaTime","fogColor","setColor3","_afterBind","getAnimatables","results","animations","getActiveTextures","activeTextures","hasTexture","texture","dispose","forceDisposeEffect","clone","serialize","serializationObject","customType","getClassName","Parse","source","rootUrl","MixMaterialDefines","SPECULARTERM","MIXMAP2","MixMaterial","specularColor","specularPower","_mixTexture1","_diffuseTexture1","_diffuseTexture2","_diffuseTexture3","_diffuseTexture4","_mixTexture2","_diffuseTexture5","_diffuseTexture6","_diffuseTexture7","_diffuseTexture8","uScale","vScale","NormalMaterialDefines","LIGHTING","NormalMaterial","needAlphaBlendingForMesh","ShadowOnlyMaterialDefines","ShadowOnlyMaterial","_needAlphaBlending","shadowColor","_activeLight","light","_getFirstShadowLightForMesh","_i","_a","lightSources","shadowEnabled","_b","lightPosition","splice","shadowGenerator","getShadowGenerator","csg","autoCalcDepthBounds","SimpleMaterialDefines","SimpleMaterial","SkyMaterialDefines","SkyMaterial","luminance","turbidity","rayleigh","mieCoefficient","mieDirectionalG","distance","inclination","azimuth","sunPosition","useSunPosition","cameraOffset","up","_cameraPosition","_skyOrientation","markAsMiscDirty","camera","activeCamera","cameraWorldMatrix","getWorldMatrix","z","setVector3","theta","PI","phi","cos","sin","rotateByQuaternionToRef","TerrainMaterialDefines","BUMP","TerrainMaterial","mixTexture","diffuseTexture1","diffuseTexture2","diffuseTexture3","bumpTexture1","bumpTexture2","bumpTexture3","_mixTexture","getCaps","standardDerivatives","_bumpTexture1","_bumpTexture2","_bumpTexture3","TriPlanarMaterialDefines","DIFFUSEX","DIFFUSEY","DIFFUSEZ","BUMPX","BUMPY","BUMPZ","TriPlanarMaterial","tileSize","textures","diffuseTextureX","diffuseTextureY","diffuseTextureZ","textureDefines","normalTextureX","normalTextureY","normalTextureZ","getCachedMaterial","_diffuseTextureX","_diffuseTextureY","_diffuseTextureZ","_normalTextureX","_normalTextureY","_normalTextureZ","WaterMaterialDefines","REFLECTION","LOGARITHMICDEPTH","USE_REVERSE_DEPTHBUFFER","FRESNELSEPARATE","BUMPSUPERIMPOSE","BUMPAFFECTSREFLECTION","IMAGEPROCESSING","VIGNETTE","VIGNETTEBLENDMODEMULTIPLY","VIGNETTEBLENDMODEOPAQUE","TONEMAPPING","TONEMAPPING_ACES","CONTRAST","EXPOSURE","COLORCURVES","COLORGRADING","COLORGRADING3D","SAMPLER3DGREENDEPTH","SAMPLER3DBGRMAP","WaterMaterial","renderTargetSize","windForce","windDirection","waveHeight","bumpHeight","_bumpSuperimpose","_fresnelSeparate","_bumpAffectsReflection","waterColor","colorBlendFactor","waterColor2","colorBlendFactor2","waveLength","waveSpeed","waveCount","disableClipPlane","_renderTargets","_mesh","_reflectionTransform","_lastDeltaTime","_createRenderTargets","getRenderTargetTextures","reset","_reflectionRTT","_refractionRTT","_imageProcessingConfiguration","_imageProcessingObserver","onUpdateParameters","add","_markAllSubMeshesAsImageProcessingDirty","_useLogarithmicDepth","fragmentDepthSupported","_markAllSubMeshesAsMiscDirty","addToRenderList","node","renderList","enableRenderTargets","enable","refreshRate","getRenderList","bumpTexture","_areMiscDirty","_areImageProcessingDirty","prepareDefines","IS_REFLECTION_LINEAR","reflectionTexture","gammaSpace","IS_REFRACTION_LINEAR","refractionTexture","_waitingRenderList","getNodeById","wrvp","multiply","getProjectionMatrix","deltaTime","setVector2","bind","isVisible","width","height","wrapU","wrapV","ignoreCameraViewport","savedViewMatrix","clipPlane","mirrorMatrix","onBeforeRender","positiony","position","onAfterRender","multiplyToRef","setTransformMatrix","cullBackFaces","_mirroredCameraPosition","_bumpTexture","index","customRenderTargets","remove","id","mat","CreateDefaultMesh","subdivisions","updatable","_TangentType","OBJExport","OBJ","materials","matlibname","globalposition","v","textureV","inverseTransform","transform","computeWorldMatrix","invertToRef","bakeTransformIntoVertices","material","g","geometry","trunkVerts","getVerticesData","trunkNormals","trunkUV","trunkFaces","getIndices","currentV","currentTextureV","useRightHandedSystem","indices","textureIndices","blanks","facePositions","faceUVs","faceNormals","MTL","toFixed","ambientColor","r","emissiveColor","ambientTexture","specularTexture","opacityTexture","__IGLTFExporterExtension","_GLTFUtilities","_CreateBufferView","bufferIndex","byteStride","bufferview","_CreateAccessor","bufferviewIndex","componentType","count","accessor","bufferView","_CalculateMinMaxPositions","positions","vertexStart","vertexCount","convertToRightHandedSystem","indexOffset","vector","length_1","_GetRightHandedPositionVector3FromRef","asArray","_GetRightHandedPositionVector3","_GetRightHandedPositionArray3FromRef","_GetRightHandedNormalVector3","_GetRightHandedNormalVector3FromRef","_GetRightHandedNormalArray3FromRef","_GetRightHandedVector4FromRef","w","_GetRightHandedArray4FromRef","_GetRightHandedQuaternionFromRef","quaternion","_GetRightHandedQuaternionArrayFromRef","_NormalizeTangentFromRef","tangent","sqrt","_GetDataAccessorElementCount","accessorType","_GLTFAnimation","_CreateNodeAnimation","babylonTransformNode","animation","animationChannelTargetPath","useQuaternion","animationSampleRate","inputs","outputs","keyFrames","getKeys","minMaxKeyFrames","_CalculateMinMaxKeyFrames","interpolationOrBake","_DeduceInterpolation","frameDelta","interpolation","interpolationType","shouldBakeAnimation","_CreateBakedAnimation","framePerSecond","_CreateLinearOrStepAnimation","_CreateCubicSplineAnimation","samplerInterpolation","inputsMin","inputsMax","_DeduceAnimationInfo","dataAccessorType","property","targetProperty","_CreateNodeAnimationFromNodeAnimations","babylonNode","runtimeGLTFAnimation","idleGLTFAnimations","nodeMap","nodes","binaryWriter","bufferViews","accessors","glTFAnimation","animationInfo","channels","_AddAnimation","hasRunningRuntimeAnimations","_CreateMorphTargetAnimationFromMorphTargetAnimations","morphTargetManager","numTargets","getTarget","combinedAnimation","dataType","loopMode","enableBlending","combinedAnimationKeys","animationKeys","animationKey","k","frame","setKeys","_CreateNodeAndMorphAnimationFromAnimationGroups","babylonScene","glTFAnimations","convertToRightHandedSystemMap","animationGroups","_loop_1","animationGroup","morphAnimations","Map","sampleAnimations","morphAnimationMeshes","Set","animationGroupFrameDiff","to","_loop_2","targetAnimation","targetedAnimations","uniqueId","babylonMorphTarget_1","babylonMorphTargetManager_1","morphTargetManagers","find","babylonMesh","meshes","has","forEach","combinedAnimationGroup","sampleAnimationKeys","numAnimationKeys","morphTarget","animationsByMorphTarget","morphTargetAnimation","influence","inTangent","outTangent","animationGroups_1","morphAnimationChannels","keyframeAccessorIndex","dataAccessorIndex","outputLength","animationSampler","animationChannel","animationData","currentInput","newInputs","shift","nodeIndex","getByteOffset","setFloat32","entry","sampler","path","minFrame","maxFrame","fps","sampleRate","minMaxFrames","time","quaternionCache","previousTime","maxUsedFrame","currKeyFrame","nextKeyFrame","prevKeyFrame","endFrame","f","state","key","repeatCount","_interpolate","_SetInterpolatedValue","_ConvertFactorToVector3OrQuaternion","factor","animationType","componentName","basePositionRotationOrScale","_GetBasePositionRotationOrScale","normalize","cacheValue","parent","keyFrame","_AddKeyframeValue","_AddSplineTangent","INTANGENT","OUTTANGENT","rotationQuaternion","rotation","scaling","newPositionRotationOrScale","posRotScale","length_2","tangentType","tangentValue","GLTFData","glTFFiles","downloadFiles","endsWith","suffix","link","document","createElement","body","appendChild","setAttribute","download","blob","mimeType","href","window","URL","createObjectURL","Blob","click","_GLTFMaterialExporter","exporter","_textureMap","_exporter","_FuzzyEquals","color1","color2","epsilon","_convertMaterialsToGLTFAsync","exportMaterials","hasTextureCoords","promises","_convertStandardMaterialAsync","_convertPBRMaterialAsync","Promise","all","then","_stripTexturesFromMaterial","originalMaterial","newMaterial","doubleSided","alphaMode","alphaCutoff","emissiveFactor","originalPBRMetallicRoughness","pbrMetallicRoughness","baseColorFactor","metallicFactor","roughnessFactor","_hasTexturesPresent","emissiveTexture","normalTexture","occlusionTexture","pbrMat","baseColorTexture","metallicRoughnessTexture","extensions","extension","extensionObject","hasTextures","_getTextureInfo","babylonTexture","textureUid","uid","_convertToGLTFPBRMetallicRoughness","babylonStandardMaterial","P0","P1","P2","P3","diffuse","toLinearSpace","scale","opacity","roughness","t","p0","p1","p2","p3","cubicBezierCurve","solveForRoughness","_MaxSpecularPower","_SolveMetallic","specular","oneMinusSpecularStrength","_DielectricSpecular","D","_SetAlphaMode","glTFMaterial","babylonMaterial","alphaCutOff","materialMap","_materialMap","_materials","glTFPbrMetallicRoughness","backFaceCulling","twoSidedLighting","_exportTextureAsync","glTFTexture","glTFEmissiveTexture","strength","_Epsilon","_finishMaterial","tasks","textures_1","_extensionsPostExportMaterialAdditionalTextures","resolve","extensionWork","_extensionsPostExportMaterialAsync","_createBase64FromCanvasAsync","textureType","hostingScene","tempTexture","label","_babylonScene","createRawTexture","sent","_readTexturePixels","_createWhiteTexture","_resizeTexturesToSameDimensions","texture1","texture2","resizedTexture1","resizedTexture2","texture1Size","getSize","texture2Size","_convertPixelArrayToFloat32","pixels","Float32Array","_convertSpecularGlossinessTexturesToMetallicRoughnessAsync","specularGlossinessTexture","factors","resizedTextures","diffuseSize","diffuseBuffer","specularGlossinessBuffer","diffusePixels","specularPixels","metallicRoughnessBuffer","baseColorBuffer","maxBaseColor","maxMetallic","maxRoughness","glossiness","specularGlossiness","metallicRoughness","metallicRoughnessFactors_1","writeOutMetallicRoughnessTexture","writeOutBaseColorTexture","h","destinationOffset","linearBaseColorPixel","sRGBBaseColorPixel","metallicRoughnessPixel","promise","readPixels","reject","_convertSpecularGlossinessToMetallicRoughness","baseColor","metallic","hasAlpha","toGammaSpace","metallicRoughnessBase64","metallicRoughnessTextureBase64","baseColorBase64","baseColorTextureBase64","diffusePerceivedBrightness","_getPerceivedBrightness","specularPerceivedBrightness","_getMaxComponent","baseColorFromDiffuse","baseColorFromSpecular","subtract","clampToRef","color","_convertMetalRoughFactorsToMetallicRoughnessAsync","babylonPBRMaterial","_albedoColor","_metallic","_roughness","_albedoTexture","metallicTexture","_metallicTexture","_getGLTFTextureSampler","_getGLTFTextureWrapModesSampler","samplingMode","magFilter","minFilter","_getGLTFTextureWrapMode","wrapMode","wrapS","wrapT","_convertSpecGlossFactorsToMetallicRoughnessAsync","_samplers","_textures","specGloss","_reflectivityColor","_microSurface","samplerIndex","albedoTexture","reflectivityTexture","_reflectivityTexture","useMicrosurfaceFromReflectivityMapAlpha","_useMicroSurfaceFromReflectivityMapAlpha","metallicRoughnessFactors","glTFBaseColorTexture","_getTextureInfoFromBase64","glTFMRColorTexture","isMetallicWorkflow","albedoColor","_setMetallicRoughnessPbrMaterial","_twoSidedLighting","bumpTexture_1","_ambientTexture","texCoord","ambientTextureStrength","_ambientTextureStrength","_emissiveTexture","_emissiveColor","_getPixelsFromTexture","extensionPromise","_extensionsPreExportTextureAsync","_exportTextureInfoAsync","samplerIndex_1","foundSamplerIndex","s","base64Data","textureInfo","_extensionsPostExportTextures","base64Texture","baseTextureName","texCoordIndex","images","_images","imageData","_imageData","binStr","atob","arrBuff","imageValues","textureName","originalTextureName","glTFImage","uri","_Exporter","options","_includeCoordinateSystemConversionNodes","_extensions","_glTF","asset","generator","version","_bufferViews","_accessors","_meshes","_scenes","_cameras","_nodes","_skins","_animations","_orderedImageData","_options","_animationSampleRate","includeCoordinateSystemConversionNodes","_glTFMaterialExporter","_loadExtensions","_applyExtension","actionAsync","currentPromise","newNode","_applyExtensions","_ExtensionNames","name_1","context","preExportTextureAsync","_extensionsPostExportMeshPrimitiveAsync","meshPrimitive","babylonSubMesh","postExportMeshPrimitiveAsync","_extensionsPostExportNodeAsync","postExportNodeAsync","postExportMaterialAsync","name_2","postExportMaterialAdditionalTextures","name_3","postExportTexture","_forEachExtensions","action","name_4","enabled","_extensionsOnExporting","wasUsed","extensionsUsed","required","extensionsRequired","onExporting","name_5","_ExtensionFactories","extensionKey","RegisterExtension","factory","UnregisterExtension","_reorderIndicesBasedOnPrimitiveMode","submesh","primitiveMode","babylonIndices","indexStart","indexCount","secondIndex","getUInt32","thirdIndex","setUInt32","_reorderVertexAttributeDataBasedOnPrimitiveMode","sideOrientation","vertexBufferKind","meshAttributeArray","_reorderTriangleFillMode","_reorderTriangleStripDrawMode","_reorderTriangleFanMode","vertexBuffer","_getVertexBufferFromMesh","getMesh","stride","verticesCount","vertexData","verticesStart","_writeVertexAttributeData","vertices","vertexAttributeKind","vertices_1","vertex","component","_writeAttributeData","attributeComponentKind","writeBinaryFunc","vertexAttributes","length_3","length_4","meshMaterial","convertToLinear","length_5","toLinearSpaceToRef","length_6","length_7","length_8","setUInt8","setUInt16","vertexAttributes_1","vertexAttribute_1","writeMorphTargetAttributeData","morphTargetAttributeArray","minMax","difference","difference4","morphData","subtractToRef","copyFromFloats","vertexAttributes_2","vertexAttribute_2","_generateJSON","shouldUseGlb","glTFPrefix","prettyPrint","imageName","_totalByteLength","buffers","scenes","cameras","skins","image","JSON","stringify","_generateGLTFAsync","_generateBinaryAsync","binaryBuffer","jsonText","bin","glTFFileName","glTFBinFile","container","_BinaryWriter","_createSceneAsync","_localEngine","getArrayBuffer","_getPadding","remainder","_generateGLBAsync","encodedJsonText","glbFileName","jsonLength","imageByteLength","TextEncoder","encode","jsonPadding","binPadding","imagePadding","headerLength","headerBuffer","headerBufferView","DataView","setUint32","jsonChunkBuffer","jsonChunkBufferView","jsonData","blankCharCode","charCode","codePointAt","jsonPaddingView","binaryChunkBuffer","binaryChunkBufferView","binPaddingBuffer","binPaddingView","imagePaddingBuffer","imagePaddingView","glbData","glbFile","_setNodeTransformation","getPivotPoint","equalsToFloats","translation","multiplyInPlace","_setCameraTransformation","babylonCamera","absoluteRotation","attributeKind","bufferMesh","isVerticesDataPresent","getVertexBuffer","_createBufferViewKind","kind","sourceMesh","typeByteLength","_setMorphTargetAttributes","babylonMorphTarget","targets","hasNormals","vertexNormals","morphNormals","getNormals","bufferViewIndex","hasPositions","vertexPositions","morphPositions","getPositions","POSITION","hasTangents","vertexTangents","morphTangents","getTangents","TANGENT","_getMeshPrimitiveMode","fillMode","_setPrimitiveMode","mode","_setAttributeKind","COLOR_0","TEXCOORD_0","TEXCOORD_1","JOINTS_0","JOINTS_1","WEIGHTS_0","WEIGHTS_1","_setPrimitiveAttributesAsync","attributeData","accessorComponentType","indexBufferViewIndex","vertexAttributeBufferViews","attributeData_1","attribute","getTotalIndices","length_9","subMeshes","_c","getMaterial","defaultMaterial","materialIndex","subMaterial","subMaterials","_d","attributeData_2","exportUnusedUVs","keys","overrideMaterialSideOrientation","_e","attributeData_3","byteOffset_1","primitives","_isBabylonCoordinateSystemConvertingNode","determinant","glTFNodeIndex","glTFNode","directDescendents","transformNodes","lights","rootNodesToLeftHanded","_convertToRightHandedSystem","_convertToRightHandedSystemMap","rootNodes","rootNode","getDescendants","descendant","indexRootNode","cameraMap","shouldExportNode","glTFCamera","perspective","aspectRatio","getAspectRatio","yfov","fovMode","fov","znear","minZ","zfar","maxZ","halfWidth","orthoLeft","orthoRight","getRenderWidth","halfHeight","orthoBottom","orthoTop","getRenderHeight","orthographic","xmag","ymag","_getExportNodes","exportNodes","_createNodeMapAndAnimationsAsync","_createSkinsAsync","skinMap","_nodeMap","nodes_1","metadata","metadataSelector","extras","gltf","skeleton","skin","children","directDescendents_1","descendent","nodes_2","promiseChain","_createNodeAsync","nodes_3","idleGLTFAnimation","weights","skeletons","bones","joints","inverseBindMatrices","boneIndexMap","maxBoneIndex","boneIndex","bone","getIndex","getInvertedAbsoluteTransform","transformNode","getTransformNode","bufferViewOffset","bindMatrixAccessor","inverseBindAccessorIndex","cell","_arrayBuffer","_dataView","_byteOffset","_resizeBuffer","newBuffer","oldUint8Array","newUint8Array","length_10","setUint8","setUint16","getUint32","getVector3Float32FromRef","vector3","getFloat32","setVector3Float32FromRef","getVector4Float32FromRef","vector4","setVector4Float32FromRef","isNaN","setInt16","setByte","setInt8","__IGLTFExporterExtensionV2","GLTF2Export","GLTFAsync","filePrefix","whenReadyAsync","_PreExportAsync","exportWithoutWaitingForScene","_PostExportAsync","glTFData","GLBAsync","NAME","KHR_texture_transform","_recordedTextures","_wasUsed","uAng","wAng","vAng","uRotationCenter","vRotationCenter","textureTransform","transformIsRequired","uOffset","vOffset","bakeTextureTransform","_textureTransformTextureAsync","proceduralTexture","catch","reservedDataStore","hidden","render","getEffect","executeWhenCompiled","KHR_lights_punctual","_lights","babylonLight","lightType","getTypeID","localAxis","direction","yaw","atan2","pitch","lightRotationQuaternion","falloffType","intensity","MAX_VALUE","babylonSpotLight","angle","spot","outerConeAngle","innerAngle","innerConeAngle","lightReference","parentBabylonNode","getChildren","parentNode","parentNodeLocalMatrix","parentInvertNodeLocalMatrix","parentNodeLocalTranslation","parentNodeLocalRotation","parentNodeLocalScale","lightLocalMatrix","nodeLocalTranslation","subtractInPlace","nodeLocalRotation","nodeLocalScale","parentNewScale","parentNewRotationQuaternion","parentNewTranslation","decompose","KHR_materials_clearcoat","additionalTextures","clearCoat","isEnabled","useRoughnessFromMainTexture","textureRoughness","clearCoatTextureInfo","clearCoatTextureRoughnessInfo","isTintEnabled","remapF0OnInterfaceChange","clearCoatNormalTextureInfo","clearCoatInfo_1","clearcoatFactor","clearcoatTexture","clearcoatRoughnessFactor","clearcoatRoughnessTexture","clearcoatNormalTexture","KHR_materials_iridescence","iridescence","thicknessTexture","iridescenceTextureInfo","iridescenceThicknessTextureInfo","iridescenceInfo_1","iridescenceFactor","iridescenceIor","indexOfRefraction","iridescenceThicknessMinimum","minimumThickness","iridescenceThicknessMaximum","maximumThickness","iridescenceTexture","iridescenceThicknessTexture","KHR_materials_sheen","sheen","sheenInfo_1","sheenColorFactor","sheenRoughnessFactor","sheenColorTexture","sheenRoughnessTexture","KHR_materials_unlit","unlitMaterial","unlit","KHR_materials_ior","_isExtensionEnabled","iorInfo","ior","KHR_materials_specular","metallicReflectanceTexture","reflectanceTexture","metallicF0Factor","metallicReflectanceColor","equalsFloats","_hasTexturesExtension","specularInfo","specularFactor","specularColorFactor","specularColorTexture","KHR_materials_volume","subSurface","subs","isRefractionEnabled","isTranslucencyEnabled","tintColorAtDistance","POSITIVE_INFINITY","tintColor","volumeInfo","thicknessFactor","attenuationDistance","attenuationColor","KHR_materials_transmission","refractionIntensity","refractionIntensityTexture","transmissionFactor","transmissionTexture","EXT_mesh_gpu_instancing","hasThinInstances","noTranslation","noRotation","noScale","matrix","thinInstanceGetWorldMatrices","iwt","iwr","iws","hasAnyInstanceWorldTranslation","hasAnyInstanceWorldRotation","hasAnyInstanceWorldScale","translationBuffer","thinInstanceCount","rotationBuffer","scaleBuffer","matrix_1","equalsWithEpsilon","_buildAccessor","bufferOffset","bv","accessorIndex","normalized","STLExport","CreateSTL","fileName","binary","isLittleEndian","doNotBakeTransform","getFaceData","p1p2","p3p2","writeVector","dataview","faceCount","bakeCurrentTransformIntoVertices","i_1","fd"],"sourceRoot":""}