{"version":3,"file":"js/225.a2646c8c.js","mappings":"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","sources":["webpack:///./components/QueryPane/index.tsx","webpack:///./components/SModal/index.tsx","webpack:///./components/SPagination/index.tsx","webpack:///./components/CardList/Items/Collect.tsx","webpack:///./components/CardList/Collect.tsx","webpack:///./views/list/Collect.tsx","webpack:///./views/list/modules/Preview.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { Paper, InputBase } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\n\r\nconst SelfPaper = styled(Paper)(({ theme }) => ({\r\n  border: \"1px solid #E2E2E2\",\r\n  p: \"0 0 0 4px\",\r\n  display: \"inline-flex\",\r\n  alignItems: \"center\",\r\n  width: 400,\r\n  height: 36,\r\n  boxShadow: \"none\",\r\n  borderRadius: \"5px\",\r\n}));\r\n\r\nconst SearchPane = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  padding: \"0 3px\",\r\n  background: \"#075FB8\",\r\n  height: \"100%\",\r\n  width: 36,\r\n  color: \"#fff\",\r\n  borderRadius: \"0 5px 5px 0\",\r\n  cursor: \"pointer\",\r\n}));\r\n\r\nexport default function QueryPane(props) {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleClick = () => {\r\n    const { search } = props;\r\n    search && search(value);\r\n  };\r\n\r\n  const changeVal = (e) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  const keyEvent = (e) => {\r\n    if (e.keyCode !== 13) {\r\n      return;\r\n    }\r\n    handleClick();\r\n  };\r\n\r\n  return (\r\n    <SelfPaper>\r\n      <InputBase\r\n        sx={{ ml: 1, flex: 1 }}\r\n        placeholder=\"搜索\"\r\n        value={value}\r\n        onChange={changeVal}\r\n        onKeyUp={keyEvent}\r\n      />\r\n      <SearchPane onClick={handleClick}>\r\n        <SearchIcon />\r\n      </SearchPane>\r\n    </SelfPaper>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport {\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Paper, { PaperProps } from \"@mui/material/Paper\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Draggable from \"react-draggable\";\r\n\r\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\r\n  \"& .MuiDialogContent-root\": {\r\n    padding: theme.spacing(2),\r\n  },\r\n  \"& .MuiDialogActions-root\": {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nexport interface DialogTitleProps {\r\n  id: string;\r\n  children?: React.ReactNode;\r\n  onClose: () => void;\r\n}\r\n\r\nconst BootstrapDialogTitle = (props: DialogTitleProps) => {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 2, cursor: \"move\" }} {...other}>\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n};\r\n\r\nconst PaperComponent = (props: PaperProps) => {\r\n  return (\r\n    <Draggable\r\n      handle=\"#draggable-dialog-title\"\r\n      cancel={'[class*=\"MuiDialogContent-root\"]'}\r\n    >\r\n      <Paper {...props} />\r\n    </Draggable>\r\n  );\r\n};\r\n\r\ninterface SModalProps {\r\n  visible?: boolean;\r\n  title?: string;\r\n  size?: any;\r\n  width?: number;\r\n  children?: any;\r\n  header?: any;\r\n  footer?: any;\r\n  fullWidth?: boolean;\r\n  sx?: object;\r\n  height?: string | number;\r\n  hideFooter?: boolean;\r\n  handleClose?: Function;\r\n  handleOk?: Function;\r\n}\r\n\r\nconst SModal: React.FC<SModalProps> = ({\r\n  title,\r\n  visible,\r\n  size,\r\n  children,\r\n  header,\r\n  footer,\r\n  fullWidth,\r\n  sx,\r\n  height,\r\n  hideFooter,\r\n  handleOk,\r\n  handleClose,\r\n}) => {\r\n  const closeMethod = () => {\r\n    handleClose && handleClose();\r\n  };\r\n\r\n  const okMethod = () => {\r\n    handleOk && handleOk();\r\n  };\r\n  return (\r\n    <BootstrapDialog\r\n      // onClose={closeMethod}\r\n      open={visible}\r\n      maxWidth={size}\r\n      fullWidth={fullWidth}\r\n      PaperComponent={PaperComponent}\r\n      aria-labelledby=\"draggable-dialog-title\"\r\n    >\r\n      {header ? (\r\n        header\r\n      ) : (\r\n        <BootstrapDialogTitle id=\"draggable-dialog-title\" onClose={closeMethod}>\r\n          {title}\r\n        </BootstrapDialogTitle>\r\n      )}\r\n      <DialogContent\r\n        sx={{\r\n          // minHeight: `${minHeight}px`,\r\n          height: `${height ? height + \"px\" : \"auto\"}`,\r\n        }}\r\n        dividers\r\n      >\r\n        {children}\r\n      </DialogContent>\r\n      {hideFooter ? null : (\r\n        <DialogActions>\r\n          {footer ? (\r\n            footer\r\n          ) : (\r\n            <>\r\n              <Button onClick={closeMethod}>取消</Button>\r\n              <Button onClick={okMethod}>确定</Button>\r\n            </>\r\n          )}\r\n        </DialogActions>\r\n      )}\r\n    </BootstrapDialog>\r\n  );\r\n};\r\n\r\nexport default SModal;\r\n","import React from \"react\";\r\n\r\nimport { TablePagination } from \"@mui/material\";\r\n\r\ninterface STableProp {\r\n  total?: number;\r\n  pagenation?: {\r\n    pageNum?: number;\r\n    pageSize?: number;\r\n    pageSizeOptions?: Array<number>;\r\n  };\r\n  onPageChange?: (pageNum: number) => void;\r\n  onRowsPerPageChange?: (pageSize: number) => void;\r\n}\r\n\r\nconst STable: React.FC<STableProp> = ({\r\n  total,\r\n  pagenation,\r\n  onPageChange,\r\n  onRowsPerPageChange,\r\n}) => {\r\n  const { pageNum, pageSize, pageSizeOptions } = pagenation;\r\n\r\n  const changePage = (event: unknown, newPage: number) => {\r\n    onPageChange && onPageChange(newPage + 1);\r\n  };\r\n\r\n  const changeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    onRowsPerPageChange &&\r\n      onRowsPerPageChange(parseInt(event.target.value, 10));\r\n  };\r\n\r\n  return (\r\n    <TablePagination\r\n      rowsPerPageOptions={pageSizeOptions || []}\r\n      component=\"div\"\r\n      count={total}\r\n      rowsPerPage={pageSize}\r\n      page={pageNum > 0 ? pageNum - 1 : 0}\r\n      onPageChange={changePage}\r\n      onRowsPerPageChange={changeRowsPerPage}\r\n      labelRowsPerPage=\"每页条数：\"\r\n      labelDisplayedRows={({ from, to }) => {\r\n        return `${from}–${to} 共 ${Math.ceil(total / pageSize)}页, ${total}条`;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default STable;\r\n","import * as React from \"react\";\r\n\r\nimport { Card, CardContent, IconButton } from \"@mui/material\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { ShoppingCart, Favorite } from \"@mui/icons-material\";\r\n\r\nimport { validateImage } from \"~/utils/utils\";\r\nimport { commonStore } from \"~/stores/commonStore\";\r\nimport SIcon from \"~/components/SIcon\";\r\n\r\nconst CardIcon = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  width: \"100%\",\r\n  height: \"70%\",\r\n  \"& i\": {\r\n    fontSize: \"10em\",\r\n    color: \"rgb(255, 208, 129)\",\r\n  },\r\n}));\r\n\r\nconst FooterMenu = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  width: \"100%\",\r\n  height: \"15%\",\r\n  fontSize: \"16px\",\r\n  \"& div\": {\r\n    cursor: \"pointer\",\r\n  },\r\n  \"& i\": {\r\n    fontSize: \"16px\",\r\n    marginRight: \"5px\",\r\n  },\r\n}));\r\n\r\nconst NamePane = styled(\"div\")(({ theme }) => ({\r\n  display: \"flex\",\r\n  // justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  width: \"300px\",\r\n  height: \"15%\",\r\n  fontSize: \"14px\",\r\n  // color: \"#fff\",\r\n  // position: \"relative\",\r\n  zIndex: 100,\r\n  // background: \"rgba(0, 0, 0, .3)\",\r\n}));\r\n\r\ntype MenuObj = {\r\n  key: string | number;\r\n  title: string;\r\n  icon?: string;\r\n  type?: string;\r\n};\r\n\r\ntype DataItemObj = {\r\n  record_id?: string;\r\n  record_status?: string | number;\r\n  create_id?: string;\r\n  create_at?: string;\r\n  update_id?: string;\r\n  update_at?: string;\r\n  product_code?: string;\r\n  product_sn?: string;\r\n  product_name?: string;\r\n  product_type?: string;\r\n  possessor_code?: string;\r\n  pic?: string;\r\n  publish_status?: string | number;\r\n  new_status?: string | number;\r\n  recommand_status?: string | number;\r\n  verify_status?: string | number;\r\n  sort_order?: string | number;\r\n  price?: string | number;\r\n  score?: string | number;\r\n  description: null;\r\n  stock?: string | number;\r\n  sale?: string | number;\r\n  product_views?: string | number;\r\n  product_cites?: string | number;\r\n  real_code?: string;\r\n  real_type?: string;\r\n  id?: string | number;\r\n  user_name?: string;\r\n  source_type?: string;\r\n  is_bought: true;\r\n};\r\n\r\ntype FormatObj = {\r\n  id?: string;\r\n  name?: string;\r\n  count?: string;\r\n  createdTime?: string;\r\n  updatedTime?: string;\r\n  img?: string;\r\n  key?: string;\r\n};\r\n\r\ninterface CardListProps {\r\n  dataItem?: DataItemObj;\r\n  dataIndex?: number;\r\n  ipagenation?: {\r\n    pageNum: number;\r\n    pageSize: number;\r\n    pageSizeOptions?: Array<number>;\r\n  };\r\n  menuList?: Array<MenuObj>;\r\n  sx?: object;\r\n  total?: number;\r\n  keyFormat?: FormatObj;\r\n  moreList?: Array<MenuObj>;\r\n  doubleClick?: Function;\r\n  handleClick?: Function;\r\n  handleChangePage?: (pageNum: number) => void;\r\n  handleChangeRowsPerPage?: (pageSize: number) => void;\r\n  menuClick?: (key: string, dataItem: DataItemObj) => void;\r\n}\r\n\r\nconst defaultFormat = {\r\n  id: \"id\",\r\n  name: \"name\",\r\n  count: \"count\",\r\n  createdTime: \"createdTime\",\r\n  updatedTime: \"updatedTime\",\r\n  img: \"img\",\r\n  key: \"key\",\r\n};\r\n\r\nlet count = 0;\r\nconst CardItem: React.FC<CardListProps> = ({\r\n  dataItem,\r\n  dataIndex,\r\n  keyFormat,\r\n  handleClick,\r\n  doubleClick,\r\n  menuClick,\r\n}) => {\r\n  const clickCard = (item, index) => {\r\n    count += 1;\r\n    setTimeout(() => {\r\n      if (count === 1) {\r\n        handleClick && handleClick(item, index);\r\n      } else if (count === 2) {\r\n        doubleClick && doubleClick(item, index);\r\n      }\r\n      count = 0;\r\n    }, 300);\r\n  };\r\n\r\n  const renderItem = () => {\r\n    let format = Object.assign(defaultFormat, keyFormat || {});\r\n    return (\r\n      <Card className=\"projectCardItem\">\r\n        <CardContent\r\n          sx={{ width: \"100%\", height: \"300px\", userSelect: \"none\" }}\r\n          onClick={() => clickCard(dataItem, dataIndex)}\r\n        >\r\n          <CardIcon>\r\n            {dataItem[format.img] &&\r\n            validateImage(\r\n              commonStore.prefix +\r\n                dataItem[format.key] +\r\n                \"/\" +\r\n                dataItem[format.img]\r\n            ) ? (\r\n              <img\r\n                src={`${commonStore.prefix}${dataItem[format.key]}/${\r\n                  dataItem[format.img]\r\n                }?t=${new Date().getTime()}`}\r\n                style={{ height: \"100%\" }}\r\n              />\r\n            ) : (\r\n              <img src=\"/static/images/bg.png\" />\r\n            )}\r\n          </CardIcon>\r\n          <NamePane>\r\n            <p>{dataItem.product_name}</p>\r\n          </NamePane>\r\n          <FooterMenu>\r\n            <div>积分：{dataItem.score}</div>\r\n            <div>\r\n              {/* <Favorite\r\n                sx={{ color: \"rgb(216, 30, 6)\", marginRight: \"10px\" }}\r\n                onClick={() => menuClick && menuClick(\"uncollect\", dataItem)}\r\n              ></Favorite>\r\n              <ShoppingCart\r\n                sx={{ color: \"#FF6600\" }}\r\n                onClick={() => menuClick && menuClick(\"buy\", dataItem)}\r\n              ></ShoppingCart> */}\r\n              <IconButton\r\n                sx={{ marginRight: \"5px\" }}\r\n                onClick={(e) => menuClick && menuClick(\"uncollect\", dataItem)}\r\n              >\r\n                <SIcon\r\n                  sx={{\r\n                    color: \"rgb(216, 30, 6)\",\r\n                    fontSize: \"1.5rem\",\r\n                  }}\r\n                  type=\"favorite\"\r\n                ></SIcon>\r\n              </IconButton>\r\n              <IconButton\r\n                onClick={(e) => menuClick && menuClick(\"buy\", dataItem)}\r\n              >\r\n                <SIcon\r\n                  sx={{ color: \"#FF6600\", fontSize: \"1.5rem\" }}\r\n                  type=\"shopping_cart\"\r\n                ></SIcon>\r\n              </IconButton>\r\n            </div>\r\n          </FooterMenu>\r\n        </CardContent>\r\n      </Card>\r\n    );\r\n  };\r\n\r\n  return renderItem();\r\n};\r\n\r\nexport default CardItem;\r\n","import * as React from \"react\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport CardItem from \"./Items/Collect\";\r\nimport SPagination from \"~/components/SPagination\";\r\n\r\nconst CardPane = styled(\"div\")(({ theme }) => ({\r\n  padding: \"20px\",\r\n  display: \"grid\",\r\n  flexWrap: \"wrap\",\r\n  gridTemplateColumns: \"repeat(auto-fill, calc((100% - 25px * 4) / 5))\",\r\n  gridGap: \"25px 25px\",\r\n  \"& .projectCardItem\": {\r\n    width: \"100%\",\r\n    maxHeight: 300,\r\n    boxShadow: \"0px 0px 8px 0px rgba(0, 0, 0, 0.08)\",\r\n    borderRadius: \"5px\",\r\n  },\r\n  \"& .activePane\": {\r\n    boxShadow: \"0px 0px 8px 0px rgba(7, 95, 184, 0.46)\",\r\n  },\r\n  \"& .activeIcon\": {\r\n    color: \"#1890ff\",\r\n  },\r\n  \"& .projectCardItem:hover\": {\r\n    boxShadow: \"0px 0px 8px 0px rgba(7, 95, 184, 0.46)\",\r\n    \"& .hover-icon\": {\r\n      color: \"#1890ff\",\r\n    },\r\n  },\r\n  \"& .MuiCardContent-root:last-child\": {\r\n    paddingBottom: \"16px\",\r\n  },\r\n}));\r\n\r\nconst NoData = styled(\"div\")(({ theme }) => ({\r\n  textAlign: \"center\",\r\n  fontSize: \"14px\",\r\n  padding: \"20px 0\",\r\n  \"& img\": {\r\n    width: 300,\r\n    height: 300,\r\n  },\r\n  \"& p\": {\r\n    margin: 0,\r\n  },\r\n}));\r\n\r\ntype MenuObj = {\r\n  key: string | number;\r\n  title: string;\r\n  icon?: string;\r\n  type?: string;\r\n};\r\n\r\ninterface CardListProps {\r\n  dataSource: Array<any>;\r\n  ipagenation?: {\r\n    pageNum: number;\r\n    pageSize: number;\r\n    pageSizeOptions?: Array<number>;\r\n  };\r\n  menuList?: Array<MenuObj>;\r\n  sx?: object;\r\n  total?: number;\r\n  keyFormat?: object;\r\n  moreList?: Array<MenuObj>;\r\n  doubleClick?: Function;\r\n  handleClick?: Function;\r\n  handleChangePage?: (pageNum: number) => void;\r\n  handleChangeRowsPerPage?: (pageSize: number) => void;\r\n  menuClick?: (type: string, dataSourceItem: object) => void;\r\n  add?: () => void;\r\n}\r\n\r\nconst CardList: React.FC<CardListProps> = ({\r\n  dataSource,\r\n  ipagenation,\r\n  sx,\r\n  total,\r\n  keyFormat,\r\n  doubleClick,\r\n  handleClick,\r\n  handleChangePage,\r\n  handleChangeRowsPerPage,\r\n  menuClick,\r\n}) => {\r\n  return (\r\n    <>\r\n      <CardPane sx={sx}>\r\n        {dataSource.map((dataItem, dataIndex) => (\r\n          <CardItem\r\n            key={dataIndex}\r\n            dataIndex={dataIndex}\r\n            dataItem={dataItem}\r\n            keyFormat={keyFormat}\r\n            handleClick={handleClick}\r\n            doubleClick={doubleClick}\r\n            menuClick={menuClick}\r\n          ></CardItem>\r\n        ))}\r\n      </CardPane>\r\n      {ipagenation && total > 0 ? (\r\n        <SPagination\r\n          pagenation={ipagenation}\r\n          total={total}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      ) : null}\r\n      {!dataSource || dataSource.length === 0 ? (\r\n        <NoData>\r\n          <img src=\"/static/images/nodata.svg\" />\r\n          <p>暂无数据</p>\r\n        </NoData>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\nimport { Grid, TextField, Box, Tabs, Tab } from \"@mui/material\";\r\n\r\nimport CardList from \"~/components/CardList/Collect\";\r\nimport SModal from \"~/components/SModal\";\r\nimport QueryPane from \"~/components/QueryPane\";\r\n\r\nimport { httpAction, getAction, deleteAction } from \"~/apis/manage\";\r\nimport { message } from \"~/utils/message\";\r\nimport { confirm } from \"~/utils/confirm\";\r\nimport Preview from \"./modules/Preview\";\r\n\r\nconst Input = styled(TextField)(({ theme }) => ({\r\n  \"& input\": {\r\n    height: \"1em\",\r\n    width: \"300px\",\r\n  },\r\n}));\r\nconst SlefBox = styled(Box)(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  padding: \"0 20px\",\r\n}));\r\n\r\nexport default function Model(props) {\r\n  const [visible, setVisible] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    appName: \"\",\r\n  });\r\n  const [dataSource, setDataSource] = useState([]);\r\n  const [ipagenation, setIpagenation] = useState({\r\n    pageNum: 1,\r\n    pageSize: 10,\r\n  });\r\n  const [total, setTotal] = useState(0);\r\n  const [categoryList, setCategoryList] = useState([\r\n    {\r\n      label: \"项目\",\r\n      value: \"M0001\",\r\n    },\r\n    {\r\n      label: \"场景\",\r\n      value: \"M0002\",\r\n    },\r\n    {\r\n      label: \"组件\",\r\n      value: \"M0003,M0004\",\r\n    },\r\n  ]);\r\n  const [tabValue, setTabValue] = useState(\"M0001\");\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [previewURL, setPreviewURL] = useState(\"\");\r\n  const previewRef = useRef(null);\r\n\r\n  const url = {\r\n    list: \"editor/appcollection/list\",\r\n    edit: \"editor/appcollection/edit\",\r\n    delete: \"editor/appcollection/delete/\",\r\n    buy: \"trade/buy\",\r\n  };\r\n\r\n  // 点击确认回调\r\n  const handleOk = () => {\r\n    let data = {\r\n      appName: formData.appName,\r\n      projectId: props.projectId,\r\n    };\r\n    addOrEditApp(data);\r\n    setVisible(false);\r\n  };\r\n\r\n  // 改变输入框值\r\n  const changeValue = (event, type) => {\r\n    let obj = { ...formData };\r\n    obj[type] = event.target.value;\r\n    setFormData(obj);\r\n  };\r\n\r\n  // 点击取消回调\r\n  const handleClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  /* 应用--start */\r\n  // 获取应用列表\r\n  const getList = (formData?: {}) => {\r\n    let params = {\r\n      page: ipagenation.pageNum,\r\n      limit: ipagenation.pageSize,\r\n      category: tabValue,\r\n      name: inputValue,\r\n      ...formData,\r\n    };\r\n    getAction(url.list, params)\r\n      .then((res) => {\r\n        if (res[\"code\"] === 0) {\r\n          let { list, total_count } = res.data;\r\n          if (list && list.length > 0) {\r\n            setDataSource(list);\r\n            setTotal(total_count);\r\n          } else {\r\n            setDataSource([]);\r\n            setTotal(0);\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    // }\r\n  };\r\n\r\n  // 新增、编辑项目\r\n  const addOrEditApp = (data) => {\r\n    let type = \"post\",\r\n      dataUrl = url.edit;\r\n    httpAction(dataUrl, data, type).then((res) => {\r\n      if (res[\"code\"] === 0) {\r\n        getList();\r\n        message.success(\"操作成功\");\r\n      }\r\n    });\r\n  };\r\n  /* 应用--end */\r\n\r\n  const cardMenuClick = (type, item) => {\r\n    if (type === \"buy\") {\r\n      confirm({\r\n        title: \"提示\",\r\n        content: `本次消费${item.score}积分，是否购买${item.product_name}？`,\r\n        onOk: () => buy(item.product_code),\r\n      });\r\n    } else if (type === \"uncollect\") {\r\n      // confirm({\r\n      //   title: \"提示\",\r\n      //   content: `确定要取消收藏商品“${item.product_name}”？`,\r\n      uncollect(item.product_code);\r\n      // });\r\n    }\r\n  };\r\n\r\n  const uncollect = (code) => {\r\n    deleteAction(url.delete + code, { code }).then((res) => {\r\n      if (res[\"code\"] === 0) {\r\n        getList();\r\n        message.success(\"操作成功\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const buy = (productCode) => {\r\n    httpAction(url.buy, { productCode }, \"post\").then((res) => {\r\n      if (res[\"code\"] === 0) {\r\n        getList();\r\n        message.success(\"操作成功\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleChangePage = (page) => {\r\n    setIpagenation({\r\n      pageNum: page,\r\n      pageSize: ipagenation.pageSize,\r\n    });\r\n    getList({ page });\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    setIpagenation({\r\n      pageNum: 1,\r\n      pageSize: rowsPerPage,\r\n    });\r\n    getList({ limit: rowsPerPage });\r\n  };\r\n\r\n  const getCategoryList = () => {\r\n    getAction(\"portal/market/category\", {})\r\n      .then((res) => {\r\n        if (res[\"code\"] === 0) {\r\n          let { list } = res.data;\r\n          if (list && list.length > 0) {\r\n            setCategoryList(list);\r\n            setTabValue(list[0][\"value\"]);\r\n            getList({ category: list[0][\"value\"] });\r\n          } else {\r\n            setCategoryList([]);\r\n            setTabValue(null);\r\n            getList();\r\n          }\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const search = (val) => {\r\n    setInputValue(val);\r\n    getList({ name: val });\r\n  };\r\n\r\n  const changeTab = (obj, value) => {\r\n    setTabValue(value);\r\n    getList({ category: value });\r\n  };\r\n\r\n  const doubleClick = (record, index) => {\r\n    // window.open(`/preview.html?code=${record.product_code}`, \"_blank\");\r\n    previewMethod(record);\r\n  };\r\n\r\n  const previewMethod = (item) => {\r\n    previewRef.current.open(item.product_code);\r\n    setPreviewURL(`/shop.html?code=${item.product_code}&frame=1`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // getCategoryList();\r\n    getList();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SlefBox>\r\n        <Tabs value={tabValue} onChange={changeTab}>\r\n          {categoryList &&\r\n            categoryList.map((item, index) => (\r\n              <Tab key={index} label={item.label} value={item.value} />\r\n            ))}\r\n        </Tabs>\r\n        <QueryPane search={search}></QueryPane>\r\n      </SlefBox>\r\n      <CardList\r\n        dataSource={dataSource}\r\n        menuClick={cardMenuClick}\r\n        ipagenation={ipagenation}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        keyFormat={{ img: \"pic\", key: \"real_code\" }}\r\n        doubleClick={doubleClick}\r\n        total={total}\r\n      ></CardList>\r\n      <SModal\r\n        size=\"sm\"\r\n        title=\"新增\"\r\n        visible={visible}\r\n        handleOk={handleOk}\r\n        handleClose={handleClose}\r\n        fullWidth={true}\r\n      >\r\n        <Grid container spacing={2}>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sx={{\r\n              display: \"inline-flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              height: \"80px\",\r\n            }}\r\n          >\r\n            <span style={{ fontSize: \"14px\" }}>应用名称：</span>\r\n            <Input\r\n              size=\"small\"\r\n              value={formData.appName}\r\n              onChange={(event) => {\r\n                changeValue(event, \"appName\");\r\n              }}\r\n            ></Input>\r\n          </Grid>\r\n        </Grid>\r\n      </SModal>\r\n      <Preview previewRef={previewRef} url={previewURL}></Preview>\r\n    </>\r\n  );\r\n}\r\n","import React, { useImperativeHandle, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\nimport SModal from \"~/components/SModal\";\r\nimport { previewChannel } from \"~/utils/previewChannel\";\r\n\r\ninterface FileTreeProps {\r\n  url?: string;\r\n  previewRef?: any;\r\n  code?: string | number;\r\n}\r\n\r\nconst SelfIframe = styled(\"iframe\")(({ theme }) => ({\r\n  width: \"100%\",\r\n  height: \"calc(100% - 32px)\",\r\n  border: \"none\",\r\n  margin: \"0\",\r\n  padding: \"0\",\r\n}));\r\n\r\nconst Preview: React.FC<FileTreeProps> = ({ url, previewRef }) => {\r\n  const [visible, setVisible] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useImperativeHandle(previewRef, () => ({\r\n    open,\r\n  }));\r\n\r\n  const handleOk = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setVisible(false);\r\n  };\r\n\r\n  const open = (code?: null) => {\r\n    setVisible(true);\r\n    respFuc(code);\r\n  };\r\n\r\n  const respFuc = (code?: null) => {\r\n    console.log(\"code1: \", code);\r\n    previewChannel.addEventListener(\"message\", (e) => {\r\n      console.log(e);\r\n      const { type } = e.data;\r\n      if (type === \"close_preview\") {\r\n        setVisible(false);\r\n      } else if (type === \"apply-shop\") {\r\n        // setTimeout(() => {\r\n        navigate(\"/editor?code=\" + code);\r\n        handleClose();\r\n        //   console.log(\"code2: \", code);\r\n        // }, 10);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <SModal\r\n      size=\"xl\"\r\n      title=\"预览\"\r\n      visible={visible}\r\n      handleOk={handleOk}\r\n      handleClose={handleClose}\r\n      fullWidth={true}\r\n      height={800}\r\n      hideFooter={true}\r\n    >\r\n      <SelfIframe src={url}></SelfIframe>\r\n    </SModal>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n"],"names":["SelfPaper","styled","Paper","theme","border","p","display","alignItems","width","height","boxShadow","borderRadius","SearchPane","justifyContent","padding","background","color","cursor","QueryPane","props","value","setValue","useState","handleClick","search","sx","ml","flex","placeholder","onChange","e","target","onKeyUp","keyCode","onClick","BootstrapDialog","Dialog","spacing","BootstrapDialogTitle","children","onClose","other","m","position","right","top","palette","grey","PaperComponent","handle","cancel","title","visible","size","header","footer","fullWidth","hideFooter","handleOk","handleClose","closeMethod","open","maxWidth","id","dividers","total","pagenation","onPageChange","onRowsPerPageChange","pageNum","pageSize","pageSizeOptions","rowsPerPageOptions","component","count","rowsPerPage","page","event","newPage","labelRowsPerPage","labelDisplayedRows","from","to","Math","ceil","CardIcon","fontSize","FooterMenu","marginRight","NamePane","zIndex","defaultFormat","name","createdTime","updatedTime","img","key","dataItem","dataIndex","keyFormat","doubleClick","menuClick","format","Card","className","CardContent","userSelect","clickCard","item","index","validateImage","commonStore","src","Date","getTime","style","product_name","score","IconButton","SIcon","type","renderItem","CardPane","flexWrap","gridTemplateColumns","gridGap","maxHeight","paddingBottom","NoData","textAlign","margin","dataSource","ipagenation","handleChangePage","handleChangeRowsPerPage","SPagination","length","Input","TextField","SlefBox","Box","Model","setVisible","formData","setFormData","appName","setDataSource","setIpagenation","setTotal","categoryList","setCategoryList","label","tabValue","setTabValue","inputValue","setInputValue","previewURL","setPreviewURL","previewRef","useRef","url","getList","params","limit","category","getAction","then","res","list","total_count","data","catch","err","addOrEditApp","dataUrl","httpAction","message","uncollect","code","deleteAction","buy","productCode","previewMethod","current","product_code","useEffect","Tabs","obj","Tab","val","confirm","content","onOk","record","SModal","projectId","Grid","container","xs","changeValue","Preview","SelfIframe","navigate","useNavigate","useImperativeHandle","respFuc","previewChannel"],"sourceRoot":""}