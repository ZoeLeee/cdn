{"version":3,"file":"js/vender~d858ed4b.4488f582.js","mappings":"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","sources":["webpack:///../../../node_modules/cesium/Source/DataSources/SampledPositionProperty.js","webpack:///../../../node_modules/cesium/Source/DataSources/SampledProperty.js","webpack:///../../../node_modules/cesium/Source/DataSources/ScaledPositionProperty.js","webpack:///../../../node_modules/cesium/Source/DataSources/StaticGeometryColorBatch.js","webpack:///../../../node_modules/cesium/Source/DataSources/StaticGeometryPerMaterialBatch.js","webpack:///../../../node_modules/cesium/Source/DataSources/StaticGroundGeometryColorBatch.js","webpack:///../../../node_modules/cesium/Source/DataSources/StaticGroundGeometryPerMaterialBatch.js","webpack:///../../../node_modules/cesium/Source/DataSources/StaticGroundPolylinePerMaterialBatch.js","webpack:///../../../node_modules/cesium/Source/DataSources/StaticOutlineGeometryBatch.js","webpack:///../../../node_modules/cesium/Source/DataSources/StripeMaterialProperty.js","webpack:///../../../node_modules/cesium/Source/DataSources/StripeOrientation.js","webpack:///../../../node_modules/cesium/Source/DataSources/TerrainOffsetProperty.js","webpack:///../../../node_modules/cesium/Source/DataSources/TimeIntervalCollectionPositionProperty.js","webpack:///../../../node_modules/cesium/Source/DataSources/TimeIntervalCollectionProperty.js","webpack:///../../../node_modules/cesium/Source/DataSources/VelocityOrientationProperty.js","webpack:///../../../node_modules/cesium/Source/DataSources/VelocityVectorProperty.js","webpack:///../../../node_modules/cesium/Source/DataSources/Visualizer.js","webpack:///../../../node_modules/cesium/Source/DataSources/WallGeometryUpdater.js","webpack:///../../../node_modules/cesium/Source/DataSources/WallGraphics.js","webpack:///../../../node_modules/cesium/Source/DataSources/createMaterialPropertyDescriptor.js","webpack:///../../../node_modules/cesium/Source/DataSources/createPropertyDescriptor.js","webpack:///../../../node_modules/cesium/Source/DataSources/createRawPropertyDescriptor.js","webpack:///../../../node_modules/cesium/Source/DataSources/exportKml.js","webpack:///../../../node_modules/cesium/Source/DataSources/heightReferenceOnEntityPropertyChanged.js","webpack:///../../../node_modules/cesium/Source/Renderer/AutomaticUniforms.js","webpack:///../../../node_modules/cesium/Source/Renderer/Buffer.js","webpack:///../../../node_modules/cesium/Source/Renderer/BufferUsage.js","webpack:///../../../node_modules/cesium/Source/Renderer/ClearCommand.js","webpack:///../../../node_modules/cesium/Source/Renderer/ComputeCommand.js","webpack:///../../../node_modules/cesium/Source/Renderer/ComputeEngine.js","webpack:///../../../node_modules/cesium/Source/Renderer/Context.js","webpack:///../../../node_modules/cesium/Source/Renderer/ContextLimits.js","webpack:///../../../node_modules/cesium/Source/Renderer/CubeMap.js","webpack:///../../../node_modules/cesium/Source/Renderer/CubeMapFace.js","webpack:///../../../node_modules/cesium/Source/Renderer/DrawCommand.js","webpack:///../../../node_modules/cesium/Source/Renderer/Framebuffer.js","webpack:///../../../node_modules/cesium/Source/Renderer/FramebufferManager.js","webpack:///../../../node_modules/cesium/Source/Renderer/MipmapHint.js","webpack:///../../../node_modules/cesium/Source/Renderer/MultisampleFramebuffer.js","webpack:///../../../node_modules/cesium/Source/Renderer/Pass.js","webpack:///../../../node_modules/cesium/Source/Renderer/PassState.js","webpack:///../../../node_modules/cesium/Source/Renderer/PixelDatatype.js","webpack:///../../../node_modules/cesium/Source/Renderer/RenderState.js","webpack:///../../../node_modules/cesium/Source/Renderer/Renderbuffer.js","webpack:///../../../node_modules/cesium/Source/Renderer/RenderbufferFormat.js","webpack:///../../../node_modules/cesium/Source/Renderer/Sampler.js","webpack:///../../../node_modules/cesium/Source/Renderer/ShaderBuilder.js","webpack:///../../../node_modules/cesium/Source/Renderer/ShaderCache.js","webpack:///../../../node_modules/cesium/Source/Renderer/ShaderDestination.js","webpack:///../../../node_modules/cesium/Source/Renderer/ShaderFunction.js","webpack:///../../../node_modules/cesium/Source/Renderer/ShaderProgram.js","webpack:///../../../node_modules/cesium/Source/Renderer/ShaderSource.js","webpack:///../../../node_modules/cesium/Source/Renderer/ShaderStruct.js","webpack:///../../../node_modules/cesium/Source/Renderer/Texture.js","webpack:///../../../node_modules/cesium/Source/Renderer/TextureCache.js","webpack:///../../../node_modules/cesium/Source/Renderer/TextureMagnificationFilter.js","webpack:///../../../node_modules/cesium/Source/Renderer/TextureMinificationFilter.js","webpack:///../../../node_modules/cesium/Source/Renderer/TextureWrap.js","webpack:///../../../node_modules/cesium/Source/Renderer/UniformState.js","webpack:///../../../node_modules/cesium/Source/Renderer/VertexArray.js","webpack:///../../../node_modules/cesium/Source/Renderer/VertexArrayFacade.js","webpack:///../../../node_modules/cesium/Source/Renderer/createUniform.js","webpack:///../../../node_modules/cesium/Source/Renderer/createUniformArray.js","webpack:///../../../node_modules/cesium/Source/Renderer/freezeRenderState.js","webpack:///../../../node_modules/cesium/Source/Renderer/loadCubeMap.js","webpack:///../../../node_modules/cesium/Source/Renderer/modernizeShader.js"],"sourcesContent":["import Cartesian3 from \"../Core/Cartesian3.js\";\nimport Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport ReferenceFrame from \"../Core/ReferenceFrame.js\";\nimport PositionProperty from \"./PositionProperty.js\";\nimport Property from \"./Property.js\";\nimport SampledProperty from \"./SampledProperty.js\";\n\n/**\n * A {@link SampledProperty} which is also a {@link PositionProperty}.\n *\n * @alias SampledPositionProperty\n * @constructor\n *\n * @param {ReferenceFrame} [referenceFrame=ReferenceFrame.FIXED] The reference frame in which the position is defined.\n * @param {Number} [numberOfDerivatives=0] The number of derivatives that accompany each position; i.e. velocity, acceleration, etc...\n */\nfunction SampledPositionProperty(referenceFrame, numberOfDerivatives) {\n  numberOfDerivatives = defaultValue(numberOfDerivatives, 0);\n\n  let derivativeTypes;\n  if (numberOfDerivatives > 0) {\n    derivativeTypes = new Array(numberOfDerivatives);\n    for (let i = 0; i < numberOfDerivatives; i++) {\n      derivativeTypes[i] = Cartesian3;\n    }\n  }\n\n  this._numberOfDerivatives = numberOfDerivatives;\n  this._property = new SampledProperty(Cartesian3, derivativeTypes);\n  this._definitionChanged = new Event();\n  this._referenceFrame = defaultValue(referenceFrame, ReferenceFrame.FIXED);\n\n  this._property._definitionChanged.addEventListener(function () {\n    this._definitionChanged.raiseEvent(this);\n  }, this);\n}\n\nObject.defineProperties(SampledPositionProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof SampledPositionProperty.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return this._property.isConstant;\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof SampledPositionProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets the reference frame in which the position is defined.\n   * @memberof SampledPositionProperty.prototype\n   * @type {ReferenceFrame}\n   * @default ReferenceFrame.FIXED;\n   */\n  referenceFrame: {\n    get: function () {\n      return this._referenceFrame;\n    },\n  },\n  /**\n   * Gets the degree of interpolation to perform when retrieving a value. Call <code>setInterpolationOptions</code> to set this.\n   * @memberof SampledPositionProperty.prototype\n   *\n   * @type {Number}\n   * @default 1\n   * @readonly\n   */\n  interpolationDegree: {\n    get: function () {\n      return this._property.interpolationDegree;\n    },\n  },\n  /**\n   * Gets the interpolation algorithm to use when retrieving a value. Call <code>setInterpolationOptions</code> to set this.\n   * @memberof SampledPositionProperty.prototype\n   *\n   * @type {InterpolationAlgorithm}\n   * @default LinearApproximation\n   * @readonly\n   */\n  interpolationAlgorithm: {\n    get: function () {\n      return this._property.interpolationAlgorithm;\n    },\n  },\n  /**\n   * The number of derivatives contained by this property; i.e. 0 for just position, 1 for velocity, etc.\n   * @memberof SampledPositionProperty.prototype\n   *\n   * @type {Number}\n   * @default 0\n   */\n  numberOfDerivatives: {\n    get: function () {\n      return this._numberOfDerivatives;\n    },\n  },\n  /**\n   * Gets or sets the type of extrapolation to perform when a value\n   * is requested at a time after any available samples.\n   * @memberof SampledPositionProperty.prototype\n   * @type {ExtrapolationType}\n   * @default ExtrapolationType.NONE\n   */\n  forwardExtrapolationType: {\n    get: function () {\n      return this._property.forwardExtrapolationType;\n    },\n    set: function (value) {\n      this._property.forwardExtrapolationType = value;\n    },\n  },\n  /**\n   * Gets or sets the amount of time to extrapolate forward before\n   * the property becomes undefined.  A value of 0 will extrapolate forever.\n   * @memberof SampledPositionProperty.prototype\n   * @type {Number}\n   * @default 0\n   */\n  forwardExtrapolationDuration: {\n    get: function () {\n      return this._property.forwardExtrapolationDuration;\n    },\n    set: function (value) {\n      this._property.forwardExtrapolationDuration = value;\n    },\n  },\n  /**\n   * Gets or sets the type of extrapolation to perform when a value\n   * is requested at a time before any available samples.\n   * @memberof SampledPositionProperty.prototype\n   * @type {ExtrapolationType}\n   * @default ExtrapolationType.NONE\n   */\n  backwardExtrapolationType: {\n    get: function () {\n      return this._property.backwardExtrapolationType;\n    },\n    set: function (value) {\n      this._property.backwardExtrapolationType = value;\n    },\n  },\n  /**\n   * Gets or sets the amount of time to extrapolate backward\n   * before the property becomes undefined.  A value of 0 will extrapolate forever.\n   * @memberof SampledPositionProperty.prototype\n   * @type {Number}\n   * @default 0\n   */\n  backwardExtrapolationDuration: {\n    get: function () {\n      return this._property.backwardExtrapolationDuration;\n    },\n    set: function (value) {\n      this._property.backwardExtrapolationDuration = value;\n    },\n  },\n});\n\n/**\n * Gets the position at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {Cartesian3} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {Cartesian3 | undefined} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nSampledPositionProperty.prototype.getValue = function (time, result) {\n  return this.getValueInReferenceFrame(time, ReferenceFrame.FIXED, result);\n};\n\n/**\n * Gets the position at the provided time and in the provided reference frame.\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {ReferenceFrame} referenceFrame The desired referenceFrame of the result.\n * @param {Cartesian3} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {Cartesian3 | undefined} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nSampledPositionProperty.prototype.getValueInReferenceFrame = function (\n  time,\n  referenceFrame,\n  result\n) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"time\", time);\n  Check.defined(\"referenceFrame\", referenceFrame);\n  //>>includeEnd('debug');\n\n  result = this._property.getValue(time, result);\n  if (defined(result)) {\n    return PositionProperty.convertToReferenceFrame(\n      time,\n      result,\n      this._referenceFrame,\n      referenceFrame,\n      result\n    );\n  }\n  return undefined;\n};\n\n/**\n * Sets the algorithm and degree to use when interpolating a position.\n *\n * @param {Object} [options] Object with the following properties:\n * @param {InterpolationAlgorithm} [options.interpolationAlgorithm] The new interpolation algorithm.  If undefined, the existing property will be unchanged.\n * @param {Number} [options.interpolationDegree] The new interpolation degree.  If undefined, the existing property will be unchanged.\n */\nSampledPositionProperty.prototype.setInterpolationOptions = function (options) {\n  this._property.setInterpolationOptions(options);\n};\n\n/**\n * Adds a new sample.\n *\n * @param {JulianDate} time The sample time.\n * @param {Cartesian3} position The position at the provided time.\n * @param {Cartesian3[]} [derivatives] The array of derivative values at the provided time.\n */\nSampledPositionProperty.prototype.addSample = function (\n  time,\n  position,\n  derivatives\n) {\n  const numberOfDerivatives = this._numberOfDerivatives;\n  //>>includeStart('debug', pragmas.debug);\n  if (\n    numberOfDerivatives > 0 &&\n    (!defined(derivatives) || derivatives.length !== numberOfDerivatives)\n  ) {\n    throw new DeveloperError(\n      \"derivatives length must be equal to the number of derivatives.\"\n    );\n  }\n  //>>includeEnd('debug');\n  this._property.addSample(time, position, derivatives);\n};\n\n/**\n * Adds multiple samples via parallel arrays.\n *\n * @param {JulianDate[]} times An array of JulianDate instances where each index is a sample time.\n * @param {Cartesian3[]} positions An array of Cartesian3 position instances, where each value corresponds to the provided time index.\n * @param {Array[]} [derivatives] An array where each value is another array containing derivatives for the corresponding time index.\n *\n * @exception {DeveloperError} All arrays must be the same length.\n */\nSampledPositionProperty.prototype.addSamples = function (\n  times,\n  positions,\n  derivatives\n) {\n  this._property.addSamples(times, positions, derivatives);\n};\n\n/**\n * Adds samples as a single packed array where each new sample is represented as a date,\n * followed by the packed representation of the corresponding value and derivatives.\n *\n * @param {Number[]} packedSamples The array of packed samples.\n * @param {JulianDate} [epoch] If any of the dates in packedSamples are numbers, they are considered an offset from this epoch, in seconds.\n */\nSampledPositionProperty.prototype.addSamplesPackedArray = function (\n  packedSamples,\n  epoch\n) {\n  this._property.addSamplesPackedArray(packedSamples, epoch);\n};\n\n/**\n * Removes a sample at the given time, if present.\n *\n * @param {JulianDate} time The sample time.\n * @returns {Boolean} <code>true</code> if a sample at time was removed, <code>false</code> otherwise.\n */\nSampledPositionProperty.prototype.removeSample = function (time) {\n  return this._property.removeSample(time);\n};\n\n/**\n * Removes all samples for the given time interval.\n *\n * @param {TimeInterval} time The time interval for which to remove all samples.\n */\nSampledPositionProperty.prototype.removeSamples = function (timeInterval) {\n  this._property.removeSamples(timeInterval);\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nSampledPositionProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof SampledPositionProperty &&\n      Property.equals(this._property, other._property) && //\n      this._referenceFrame === other._referenceFrame)\n  );\n};\nexport default SampledPositionProperty;\n","import binarySearch from \"../Core/binarySearch.js\";\nimport Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport ExtrapolationType from \"../Core/ExtrapolationType.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport LinearApproximation from \"../Core/LinearApproximation.js\";\n\nconst PackableNumber = {\n  packedLength: 1,\n  pack: function (value, array, startingIndex) {\n    startingIndex = defaultValue(startingIndex, 0);\n    array[startingIndex] = value;\n  },\n  unpack: function (array, startingIndex, result) {\n    startingIndex = defaultValue(startingIndex, 0);\n    return array[startingIndex];\n  },\n};\n\n//We can't use splice for inserting new elements because function apply can't handle\n//a huge number of arguments.  See https://code.google.com/p/chromium/issues/detail?id=56588\nfunction arrayInsert(array, startIndex, items) {\n  let i;\n  const arrayLength = array.length;\n  const itemsLength = items.length;\n  const newLength = arrayLength + itemsLength;\n\n  array.length = newLength;\n  if (arrayLength !== startIndex) {\n    let q = arrayLength - 1;\n    for (i = newLength - 1; i >= startIndex; i--) {\n      array[i] = array[q--];\n    }\n  }\n\n  for (i = 0; i < itemsLength; i++) {\n    array[startIndex++] = items[i];\n  }\n}\n\nfunction convertDate(date, epoch) {\n  if (date instanceof JulianDate) {\n    return date;\n  }\n  if (typeof date === \"string\") {\n    return JulianDate.fromIso8601(date);\n  }\n  return JulianDate.addSeconds(epoch, date, new JulianDate());\n}\n\nconst timesSpliceArgs = [];\nconst valuesSpliceArgs = [];\n\nfunction mergeNewSamples(epoch, times, values, newData, packedLength) {\n  let newDataIndex = 0;\n  let i;\n  let prevItem;\n  let timesInsertionPoint;\n  let valuesInsertionPoint;\n  let currentTime;\n  let nextTime;\n\n  while (newDataIndex < newData.length) {\n    currentTime = convertDate(newData[newDataIndex], epoch);\n    timesInsertionPoint = binarySearch(times, currentTime, JulianDate.compare);\n    let timesSpliceArgsCount = 0;\n    let valuesSpliceArgsCount = 0;\n\n    if (timesInsertionPoint < 0) {\n      //Doesn't exist, insert as many additional values as we can.\n      timesInsertionPoint = ~timesInsertionPoint;\n\n      valuesInsertionPoint = timesInsertionPoint * packedLength;\n      prevItem = undefined;\n      nextTime = times[timesInsertionPoint];\n      while (newDataIndex < newData.length) {\n        currentTime = convertDate(newData[newDataIndex], epoch);\n        if (\n          (defined(prevItem) &&\n            JulianDate.compare(prevItem, currentTime) >= 0) ||\n          (defined(nextTime) && JulianDate.compare(currentTime, nextTime) >= 0)\n        ) {\n          break;\n        }\n        timesSpliceArgs[timesSpliceArgsCount++] = currentTime;\n        newDataIndex = newDataIndex + 1;\n        for (i = 0; i < packedLength; i++) {\n          valuesSpliceArgs[valuesSpliceArgsCount++] = newData[newDataIndex];\n          newDataIndex = newDataIndex + 1;\n        }\n        prevItem = currentTime;\n      }\n\n      if (timesSpliceArgsCount > 0) {\n        valuesSpliceArgs.length = valuesSpliceArgsCount;\n        arrayInsert(values, valuesInsertionPoint, valuesSpliceArgs);\n\n        timesSpliceArgs.length = timesSpliceArgsCount;\n        arrayInsert(times, timesInsertionPoint, timesSpliceArgs);\n      }\n    } else {\n      //Found an exact match\n      for (i = 0; i < packedLength; i++) {\n        newDataIndex++;\n        values[timesInsertionPoint * packedLength + i] = newData[newDataIndex];\n      }\n      newDataIndex++;\n    }\n  }\n}\n\n/**\n * A {@link Property} whose value is interpolated for a given time from the\n * provided set of samples and specified interpolation algorithm and degree.\n * @alias SampledProperty\n * @constructor\n *\n * @param {Number|Packable} type The type of property.\n * @param {Packable[]} [derivativeTypes] When supplied, indicates that samples will contain derivative information of the specified types.\n *\n *\n * @example\n * //Create a linearly interpolated Cartesian2\n * const property = new Cesium.SampledProperty(Cesium.Cartesian2);\n *\n * //Populate it with data\n * property.addSample(Cesium.JulianDate.fromIso8601('2012-08-01T00:00:00.00Z'), new Cesium.Cartesian2(0, 0));\n * property.addSample(Cesium.JulianDate.fromIso8601('2012-08-02T00:00:00.00Z'), new Cesium.Cartesian2(4, 7));\n *\n * //Retrieve an interpolated value\n * const result = property.getValue(Cesium.JulianDate.fromIso8601('2012-08-01T12:00:00.00Z'));\n *\n * @example\n * //Create a simple numeric SampledProperty that uses third degree Hermite Polynomial Approximation\n * const property = new Cesium.SampledProperty(Number);\n * property.setInterpolationOptions({\n *     interpolationDegree : 3,\n *     interpolationAlgorithm : Cesium.HermitePolynomialApproximation\n * });\n *\n * //Populate it with data\n * property.addSample(Cesium.JulianDate.fromIso8601('2012-08-01T00:00:00.00Z'), 1.0);\n * property.addSample(Cesium.JulianDate.fromIso8601('2012-08-01T00:01:00.00Z'), 6.0);\n * property.addSample(Cesium.JulianDate.fromIso8601('2012-08-01T00:02:00.00Z'), 12.0);\n * property.addSample(Cesium.JulianDate.fromIso8601('2012-08-01T00:03:30.00Z'), 5.0);\n * property.addSample(Cesium.JulianDate.fromIso8601('2012-08-01T00:06:30.00Z'), 2.0);\n *\n * //Samples can be added in any order.\n * property.addSample(Cesium.JulianDate.fromIso8601('2012-08-01T00:00:30.00Z'), 6.2);\n *\n * //Retrieve an interpolated value\n * const result = property.getValue(Cesium.JulianDate.fromIso8601('2012-08-01T00:02:34.00Z'));\n *\n * @see SampledPositionProperty\n */\nfunction SampledProperty(type, derivativeTypes) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"type\", type);\n  //>>includeEnd('debug');\n\n  let innerType = type;\n  if (innerType === Number) {\n    innerType = PackableNumber;\n  }\n  let packedLength = innerType.packedLength;\n  let packedInterpolationLength = defaultValue(\n    innerType.packedInterpolationLength,\n    packedLength\n  );\n\n  let inputOrder = 0;\n  let innerDerivativeTypes;\n  if (defined(derivativeTypes)) {\n    const length = derivativeTypes.length;\n    innerDerivativeTypes = new Array(length);\n    for (let i = 0; i < length; i++) {\n      let derivativeType = derivativeTypes[i];\n      if (derivativeType === Number) {\n        derivativeType = PackableNumber;\n      }\n      const derivativePackedLength = derivativeType.packedLength;\n      packedLength += derivativePackedLength;\n      packedInterpolationLength += defaultValue(\n        derivativeType.packedInterpolationLength,\n        derivativePackedLength\n      );\n      innerDerivativeTypes[i] = derivativeType;\n    }\n    inputOrder = length;\n  }\n\n  this._type = type;\n  this._innerType = innerType;\n  this._interpolationDegree = 1;\n  this._interpolationAlgorithm = LinearApproximation;\n  this._numberOfPoints = 0;\n  this._times = [];\n  this._values = [];\n  this._xTable = [];\n  this._yTable = [];\n  this._packedLength = packedLength;\n  this._packedInterpolationLength = packedInterpolationLength;\n  this._updateTableLength = true;\n  this._interpolationResult = new Array(packedInterpolationLength);\n  this._definitionChanged = new Event();\n  this._derivativeTypes = derivativeTypes;\n  this._innerDerivativeTypes = innerDerivativeTypes;\n  this._inputOrder = inputOrder;\n  this._forwardExtrapolationType = ExtrapolationType.NONE;\n  this._forwardExtrapolationDuration = 0;\n  this._backwardExtrapolationType = ExtrapolationType.NONE;\n  this._backwardExtrapolationDuration = 0;\n}\n\nObject.defineProperties(SampledProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof SampledProperty.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return this._values.length === 0;\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof SampledProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets the type of property.\n   * @memberof SampledProperty.prototype\n   * @type {*}\n   */\n  type: {\n    get: function () {\n      return this._type;\n    },\n  },\n  /**\n   * Gets the derivative types used by this property.\n   * @memberof SampledProperty.prototype\n   * @type {Packable[]}\n   */\n  derivativeTypes: {\n    get: function () {\n      return this._derivativeTypes;\n    },\n  },\n  /**\n   * Gets the degree of interpolation to perform when retrieving a value.\n   * @memberof SampledProperty.prototype\n   * @type {Number}\n   * @default 1\n   */\n  interpolationDegree: {\n    get: function () {\n      return this._interpolationDegree;\n    },\n  },\n  /**\n   * Gets the interpolation algorithm to use when retrieving a value.\n   * @memberof SampledProperty.prototype\n   * @type {InterpolationAlgorithm}\n   * @default LinearApproximation\n   */\n  interpolationAlgorithm: {\n    get: function () {\n      return this._interpolationAlgorithm;\n    },\n  },\n  /**\n   * Gets or sets the type of extrapolation to perform when a value\n   * is requested at a time after any available samples.\n   * @memberof SampledProperty.prototype\n   * @type {ExtrapolationType}\n   * @default ExtrapolationType.NONE\n   */\n  forwardExtrapolationType: {\n    get: function () {\n      return this._forwardExtrapolationType;\n    },\n    set: function (value) {\n      if (this._forwardExtrapolationType !== value) {\n        this._forwardExtrapolationType = value;\n        this._definitionChanged.raiseEvent(this);\n      }\n    },\n  },\n  /**\n   * Gets or sets the amount of time to extrapolate forward before\n   * the property becomes undefined.  A value of 0 will extrapolate forever.\n   * @memberof SampledProperty.prototype\n   * @type {Number}\n   * @default 0\n   */\n  forwardExtrapolationDuration: {\n    get: function () {\n      return this._forwardExtrapolationDuration;\n    },\n    set: function (value) {\n      if (this._forwardExtrapolationDuration !== value) {\n        this._forwardExtrapolationDuration = value;\n        this._definitionChanged.raiseEvent(this);\n      }\n    },\n  },\n  /**\n   * Gets or sets the type of extrapolation to perform when a value\n   * is requested at a time before any available samples.\n   * @memberof SampledProperty.prototype\n   * @type {ExtrapolationType}\n   * @default ExtrapolationType.NONE\n   */\n  backwardExtrapolationType: {\n    get: function () {\n      return this._backwardExtrapolationType;\n    },\n    set: function (value) {\n      if (this._backwardExtrapolationType !== value) {\n        this._backwardExtrapolationType = value;\n        this._definitionChanged.raiseEvent(this);\n      }\n    },\n  },\n  /**\n   * Gets or sets the amount of time to extrapolate backward\n   * before the property becomes undefined.  A value of 0 will extrapolate forever.\n   * @memberof SampledProperty.prototype\n   * @type {Number}\n   * @default 0\n   */\n  backwardExtrapolationDuration: {\n    get: function () {\n      return this._backwardExtrapolationDuration;\n    },\n    set: function (value) {\n      if (this._backwardExtrapolationDuration !== value) {\n        this._backwardExtrapolationDuration = value;\n        this._definitionChanged.raiseEvent(this);\n      }\n    },\n  },\n});\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nSampledProperty.prototype.getValue = function (time, result) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"time\", time);\n  //>>includeEnd('debug');\n\n  const times = this._times;\n  const timesLength = times.length;\n  if (timesLength === 0) {\n    return undefined;\n  }\n\n  let timeout;\n  const innerType = this._innerType;\n  const values = this._values;\n  let index = binarySearch(times, time, JulianDate.compare);\n\n  if (index < 0) {\n    index = ~index;\n\n    if (index === 0) {\n      const startTime = times[index];\n      timeout = this._backwardExtrapolationDuration;\n      if (\n        this._backwardExtrapolationType === ExtrapolationType.NONE ||\n        (timeout !== 0 &&\n          JulianDate.secondsDifference(startTime, time) > timeout)\n      ) {\n        return undefined;\n      }\n      if (this._backwardExtrapolationType === ExtrapolationType.HOLD) {\n        return innerType.unpack(values, 0, result);\n      }\n    }\n\n    if (index >= timesLength) {\n      index = timesLength - 1;\n      const endTime = times[index];\n      timeout = this._forwardExtrapolationDuration;\n      if (\n        this._forwardExtrapolationType === ExtrapolationType.NONE ||\n        (timeout !== 0 && JulianDate.secondsDifference(time, endTime) > timeout)\n      ) {\n        return undefined;\n      }\n      if (this._forwardExtrapolationType === ExtrapolationType.HOLD) {\n        index = timesLength - 1;\n        return innerType.unpack(values, index * innerType.packedLength, result);\n      }\n    }\n\n    const xTable = this._xTable;\n    const yTable = this._yTable;\n    const interpolationAlgorithm = this._interpolationAlgorithm;\n    const packedInterpolationLength = this._packedInterpolationLength;\n    const inputOrder = this._inputOrder;\n\n    if (this._updateTableLength) {\n      this._updateTableLength = false;\n      const numberOfPoints = Math.min(\n        interpolationAlgorithm.getRequiredDataPoints(\n          this._interpolationDegree,\n          inputOrder\n        ),\n        timesLength\n      );\n      if (numberOfPoints !== this._numberOfPoints) {\n        this._numberOfPoints = numberOfPoints;\n        xTable.length = numberOfPoints;\n        yTable.length = numberOfPoints * packedInterpolationLength;\n      }\n    }\n\n    const degree = this._numberOfPoints - 1;\n    if (degree < 1) {\n      return undefined;\n    }\n\n    let firstIndex = 0;\n    let lastIndex = timesLength - 1;\n    const pointsInCollection = lastIndex - firstIndex + 1;\n\n    if (pointsInCollection >= degree + 1) {\n      let computedFirstIndex = index - ((degree / 2) | 0) - 1;\n      if (computedFirstIndex < firstIndex) {\n        computedFirstIndex = firstIndex;\n      }\n      let computedLastIndex = computedFirstIndex + degree;\n      if (computedLastIndex > lastIndex) {\n        computedLastIndex = lastIndex;\n        computedFirstIndex = computedLastIndex - degree;\n        if (computedFirstIndex < firstIndex) {\n          computedFirstIndex = firstIndex;\n        }\n      }\n\n      firstIndex = computedFirstIndex;\n      lastIndex = computedLastIndex;\n    }\n    const length = lastIndex - firstIndex + 1;\n\n    // Build the tables\n    for (let i = 0; i < length; ++i) {\n      xTable[i] = JulianDate.secondsDifference(\n        times[firstIndex + i],\n        times[lastIndex]\n      );\n    }\n\n    if (!defined(innerType.convertPackedArrayForInterpolation)) {\n      let destinationIndex = 0;\n      const packedLength = this._packedLength;\n      let sourceIndex = firstIndex * packedLength;\n      const stop = (lastIndex + 1) * packedLength;\n\n      while (sourceIndex < stop) {\n        yTable[destinationIndex] = values[sourceIndex];\n        sourceIndex++;\n        destinationIndex++;\n      }\n    } else {\n      innerType.convertPackedArrayForInterpolation(\n        values,\n        firstIndex,\n        lastIndex,\n        yTable\n      );\n    }\n\n    // Interpolate!\n    const x = JulianDate.secondsDifference(time, times[lastIndex]);\n    let interpolationResult;\n    if (inputOrder === 0 || !defined(interpolationAlgorithm.interpolate)) {\n      interpolationResult = interpolationAlgorithm.interpolateOrderZero(\n        x,\n        xTable,\n        yTable,\n        packedInterpolationLength,\n        this._interpolationResult\n      );\n    } else {\n      const yStride = Math.floor(packedInterpolationLength / (inputOrder + 1));\n      interpolationResult = interpolationAlgorithm.interpolate(\n        x,\n        xTable,\n        yTable,\n        yStride,\n        inputOrder,\n        inputOrder,\n        this._interpolationResult\n      );\n    }\n\n    if (!defined(innerType.unpackInterpolationResult)) {\n      return innerType.unpack(interpolationResult, 0, result);\n    }\n    return innerType.unpackInterpolationResult(\n      interpolationResult,\n      values,\n      firstIndex,\n      lastIndex,\n      result\n    );\n  }\n  return innerType.unpack(values, index * this._packedLength, result);\n};\n\n/**\n * Sets the algorithm and degree to use when interpolating a value.\n *\n * @param {Object} [options] Object with the following properties:\n * @param {InterpolationAlgorithm} [options.interpolationAlgorithm] The new interpolation algorithm.  If undefined, the existing property will be unchanged.\n * @param {Number} [options.interpolationDegree] The new interpolation degree.  If undefined, the existing property will be unchanged.\n */\nSampledProperty.prototype.setInterpolationOptions = function (options) {\n  if (!defined(options)) {\n    return;\n  }\n\n  let valuesChanged = false;\n\n  const interpolationAlgorithm = options.interpolationAlgorithm;\n  const interpolationDegree = options.interpolationDegree;\n\n  if (\n    defined(interpolationAlgorithm) &&\n    this._interpolationAlgorithm !== interpolationAlgorithm\n  ) {\n    this._interpolationAlgorithm = interpolationAlgorithm;\n    valuesChanged = true;\n  }\n\n  if (\n    defined(interpolationDegree) &&\n    this._interpolationDegree !== interpolationDegree\n  ) {\n    this._interpolationDegree = interpolationDegree;\n    valuesChanged = true;\n  }\n\n  if (valuesChanged) {\n    this._updateTableLength = true;\n    this._definitionChanged.raiseEvent(this);\n  }\n};\n\n/**\n * Adds a new sample.\n *\n * @param {JulianDate} time The sample time.\n * @param {Packable} value The value at the provided time.\n * @param {Packable[]} [derivatives] The array of derivatives at the provided time.\n */\nSampledProperty.prototype.addSample = function (time, value, derivatives) {\n  const innerDerivativeTypes = this._innerDerivativeTypes;\n  const hasDerivatives = defined(innerDerivativeTypes);\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"time\", time);\n  Check.defined(\"value\", value);\n  if (hasDerivatives) {\n    Check.defined(\"derivatives\", derivatives);\n  }\n  //>>includeEnd('debug');\n\n  const innerType = this._innerType;\n  const data = [];\n  data.push(time);\n  innerType.pack(value, data, data.length);\n\n  if (hasDerivatives) {\n    const derivativesLength = innerDerivativeTypes.length;\n    for (let x = 0; x < derivativesLength; x++) {\n      innerDerivativeTypes[x].pack(derivatives[x], data, data.length);\n    }\n  }\n  mergeNewSamples(\n    undefined,\n    this._times,\n    this._values,\n    data,\n    this._packedLength\n  );\n  this._updateTableLength = true;\n  this._definitionChanged.raiseEvent(this);\n};\n\n/**\n * Adds an array of samples.\n *\n * @param {JulianDate[]} times An array of JulianDate instances where each index is a sample time.\n * @param {Packable[]} values The array of values, where each value corresponds to the provided times index.\n * @param {Array[]} [derivativeValues] An array where each item is the array of derivatives at the equivalent time index.\n *\n * @exception {DeveloperError} times and values must be the same length.\n * @exception {DeveloperError} times and derivativeValues must be the same length.\n */\nSampledProperty.prototype.addSamples = function (\n  times,\n  values,\n  derivativeValues\n) {\n  const innerDerivativeTypes = this._innerDerivativeTypes;\n  const hasDerivatives = defined(innerDerivativeTypes);\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"times\", times);\n  Check.defined(\"values\", values);\n  if (times.length !== values.length) {\n    throw new DeveloperError(\"times and values must be the same length.\");\n  }\n  if (\n    hasDerivatives &&\n    (!defined(derivativeValues) || derivativeValues.length !== times.length)\n  ) {\n    throw new DeveloperError(\n      \"times and derivativeValues must be the same length.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  const innerType = this._innerType;\n  const length = times.length;\n  const data = [];\n  for (let i = 0; i < length; i++) {\n    data.push(times[i]);\n    innerType.pack(values[i], data, data.length);\n\n    if (hasDerivatives) {\n      const derivatives = derivativeValues[i];\n      const derivativesLength = innerDerivativeTypes.length;\n      for (let x = 0; x < derivativesLength; x++) {\n        innerDerivativeTypes[x].pack(derivatives[x], data, data.length);\n      }\n    }\n  }\n  mergeNewSamples(\n    undefined,\n    this._times,\n    this._values,\n    data,\n    this._packedLength\n  );\n  this._updateTableLength = true;\n  this._definitionChanged.raiseEvent(this);\n};\n\n/**\n * Adds samples as a single packed array where each new sample is represented as a date,\n * followed by the packed representation of the corresponding value and derivatives.\n *\n * @param {Number[]} packedSamples The array of packed samples.\n * @param {JulianDate} [epoch] If any of the dates in packedSamples are numbers, they are considered an offset from this epoch, in seconds.\n */\nSampledProperty.prototype.addSamplesPackedArray = function (\n  packedSamples,\n  epoch\n) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"packedSamples\", packedSamples);\n  //>>includeEnd('debug');\n\n  mergeNewSamples(\n    epoch,\n    this._times,\n    this._values,\n    packedSamples,\n    this._packedLength\n  );\n  this._updateTableLength = true;\n  this._definitionChanged.raiseEvent(this);\n};\n\n/**\n * Removes a sample at the given time, if present.\n *\n * @param {JulianDate} time The sample time.\n * @returns {Boolean} <code>true</code> if a sample at time was removed, <code>false</code> otherwise.\n */\nSampledProperty.prototype.removeSample = function (time) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"time\", time);\n  //>>includeEnd('debug');\n\n  const index = binarySearch(this._times, time, JulianDate.compare);\n  if (index < 0) {\n    return false;\n  }\n  removeSamples(this, index, 1);\n  return true;\n};\n\nfunction removeSamples(property, startIndex, numberToRemove) {\n  const packedLength = property._packedLength;\n  property._times.splice(startIndex, numberToRemove);\n  property._values.splice(\n    startIndex * packedLength,\n    numberToRemove * packedLength\n  );\n  property._updateTableLength = true;\n  property._definitionChanged.raiseEvent(property);\n}\n\n/**\n * Removes all samples for the given time interval.\n *\n * @param {TimeInterval} time The time interval for which to remove all samples.\n */\nSampledProperty.prototype.removeSamples = function (timeInterval) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"timeInterval\", timeInterval);\n  //>>includeEnd('debug');\n\n  const times = this._times;\n  let startIndex = binarySearch(times, timeInterval.start, JulianDate.compare);\n  if (startIndex < 0) {\n    startIndex = ~startIndex;\n  } else if (!timeInterval.isStartIncluded) {\n    ++startIndex;\n  }\n  let stopIndex = binarySearch(times, timeInterval.stop, JulianDate.compare);\n  if (stopIndex < 0) {\n    stopIndex = ~stopIndex;\n  } else if (timeInterval.isStopIncluded) {\n    ++stopIndex;\n  }\n\n  removeSamples(this, startIndex, stopIndex - startIndex);\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nSampledProperty.prototype.equals = function (other) {\n  if (this === other) {\n    return true;\n  }\n  if (!defined(other)) {\n    return false;\n  }\n\n  if (\n    this._type !== other._type || //\n    this._interpolationDegree !== other._interpolationDegree || //\n    this._interpolationAlgorithm !== other._interpolationAlgorithm\n  ) {\n    return false;\n  }\n\n  const derivativeTypes = this._derivativeTypes;\n  const hasDerivatives = defined(derivativeTypes);\n  const otherDerivativeTypes = other._derivativeTypes;\n  const otherHasDerivatives = defined(otherDerivativeTypes);\n  if (hasDerivatives !== otherHasDerivatives) {\n    return false;\n  }\n\n  let i;\n  let length;\n  if (hasDerivatives) {\n    length = derivativeTypes.length;\n    if (length !== otherDerivativeTypes.length) {\n      return false;\n    }\n\n    for (i = 0; i < length; i++) {\n      if (derivativeTypes[i] !== otherDerivativeTypes[i]) {\n        return false;\n      }\n    }\n  }\n\n  const times = this._times;\n  const otherTimes = other._times;\n  length = times.length;\n\n  if (length !== otherTimes.length) {\n    return false;\n  }\n\n  for (i = 0; i < length; i++) {\n    if (!JulianDate.equals(times[i], otherTimes[i])) {\n      return false;\n    }\n  }\n\n  const values = this._values;\n  const otherValues = other._values;\n  length = values.length;\n\n  //Since time lengths are equal, values length and other length are guaranteed to be equal.\n  for (i = 0; i < length; i++) {\n    if (values[i] !== otherValues[i]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\n//Exposed for testing.\nSampledProperty._mergeNewSamples = mergeNewSamples;\nexport default SampledProperty;\n","import defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Ellipsoid from \"../Core/Ellipsoid.js\";\nimport Event from \"../Core/Event.js\";\nimport ReferenceFrame from \"../Core/ReferenceFrame.js\";\nimport Property from \"./Property.js\";\n\n/**\n * This is a temporary class for scaling position properties to the WGS84 surface.\n * It will go away or be refactored to support data with arbitrary height references.\n * @private\n */\nfunction ScaledPositionProperty(value) {\n  this._definitionChanged = new Event();\n  this._value = undefined;\n  this._removeSubscription = undefined;\n  this.setValue(value);\n}\n\nObject.defineProperties(ScaledPositionProperty.prototype, {\n  isConstant: {\n    get: function () {\n      return Property.isConstant(this._value);\n    },\n  },\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  referenceFrame: {\n    get: function () {\n      return defined(this._value)\n        ? this._value.referenceFrame\n        : ReferenceFrame.FIXED;\n    },\n  },\n});\n\nScaledPositionProperty.prototype.getValue = function (time, result) {\n  return this.getValueInReferenceFrame(time, ReferenceFrame.FIXED, result);\n};\n\nScaledPositionProperty.prototype.setValue = function (value) {\n  if (this._value !== value) {\n    this._value = value;\n\n    if (defined(this._removeSubscription)) {\n      this._removeSubscription();\n      this._removeSubscription = undefined;\n    }\n\n    if (defined(value)) {\n      this._removeSubscription = value.definitionChanged.addEventListener(\n        this._raiseDefinitionChanged,\n        this\n      );\n    }\n    this._definitionChanged.raiseEvent(this);\n  }\n};\n\nScaledPositionProperty.prototype.getValueInReferenceFrame = function (\n  time,\n  referenceFrame,\n  result\n) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(time)) {\n    throw new DeveloperError(\"time is required.\");\n  }\n  if (!defined(referenceFrame)) {\n    throw new DeveloperError(\"referenceFrame is required.\");\n  }\n  //>>includeEnd('debug');\n\n  if (!defined(this._value)) {\n    return undefined;\n  }\n\n  result = this._value.getValueInReferenceFrame(time, referenceFrame, result);\n  return defined(result)\n    ? Ellipsoid.WGS84.scaleToGeodeticSurface(result, result)\n    : undefined;\n};\n\nScaledPositionProperty.prototype.equals = function (other) {\n  return (\n    this === other ||\n    (other instanceof ScaledPositionProperty && this._value === other._value)\n  );\n};\n\nScaledPositionProperty.prototype._raiseDefinitionChanged = function () {\n  this._definitionChanged.raiseEvent(this);\n};\nexport default ScaledPositionProperty;\n","import AssociativeArray from \"../Core/AssociativeArray.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Color from \"../Core/Color.js\";\nimport ColorGeometryInstanceAttribute from \"../Core/ColorGeometryInstanceAttribute.js\";\nimport defined from \"../Core/defined.js\";\nimport DistanceDisplayCondition from \"../Core/DistanceDisplayCondition.js\";\nimport DistanceDisplayConditionGeometryInstanceAttribute from \"../Core/DistanceDisplayConditionGeometryInstanceAttribute.js\";\nimport OffsetGeometryInstanceAttribute from \"../Core/OffsetGeometryInstanceAttribute.js\";\nimport ShowGeometryInstanceAttribute from \"../Core/ShowGeometryInstanceAttribute.js\";\nimport Primitive from \"../Scene/Primitive.js\";\nimport BoundingSphereState from \"./BoundingSphereState.js\";\nimport ColorMaterialProperty from \"./ColorMaterialProperty.js\";\nimport MaterialProperty from \"./MaterialProperty.js\";\nimport Property from \"./Property.js\";\n\nconst colorScratch = new Color();\nconst distanceDisplayConditionScratch = new DistanceDisplayCondition();\nconst defaultDistanceDisplayCondition = new DistanceDisplayCondition();\nconst defaultOffset = Cartesian3.ZERO;\nconst offsetScratch = new Cartesian3();\n\nfunction Batch(\n  primitives,\n  translucent,\n  appearanceType,\n  depthFailAppearanceType,\n  depthFailMaterialProperty,\n  closed,\n  shadows\n) {\n  this.translucent = translucent;\n  this.appearanceType = appearanceType;\n  this.depthFailAppearanceType = depthFailAppearanceType;\n  this.depthFailMaterialProperty = depthFailMaterialProperty;\n  this.depthFailMaterial = undefined;\n  this.closed = closed;\n  this.shadows = shadows;\n  this.primitives = primitives;\n  this.createPrimitive = false;\n  this.waitingOnCreate = false;\n  this.primitive = undefined;\n  this.oldPrimitive = undefined;\n  this.geometry = new AssociativeArray();\n  this.updaters = new AssociativeArray();\n  this.updatersWithAttributes = new AssociativeArray();\n  this.attributes = new AssociativeArray();\n  this.subscriptions = new AssociativeArray();\n  this.showsUpdated = new AssociativeArray();\n  this.itemsToRemove = [];\n  this.invalidated = false;\n\n  let removeMaterialSubscription;\n  if (defined(depthFailMaterialProperty)) {\n    removeMaterialSubscription = depthFailMaterialProperty.definitionChanged.addEventListener(\n      Batch.prototype.onMaterialChanged,\n      this\n    );\n  }\n  this.removeMaterialSubscription = removeMaterialSubscription;\n}\n\nBatch.prototype.onMaterialChanged = function () {\n  this.invalidated = true;\n};\n\nBatch.prototype.isMaterial = function (updater) {\n  const material = this.depthFailMaterialProperty;\n  const updaterMaterial = updater.depthFailMaterialProperty;\n  if (updaterMaterial === material) {\n    return true;\n  }\n  if (defined(material)) {\n    return material.equals(updaterMaterial);\n  }\n  return false;\n};\n\nBatch.prototype.add = function (updater, instance) {\n  const id = updater.id;\n  this.createPrimitive = true;\n  this.geometry.set(id, instance);\n  this.updaters.set(id, updater);\n  if (\n    !updater.hasConstantFill ||\n    !updater.fillMaterialProperty.isConstant ||\n    !Property.isConstant(updater.distanceDisplayConditionProperty) ||\n    !Property.isConstant(updater.terrainOffsetProperty)\n  ) {\n    this.updatersWithAttributes.set(id, updater);\n  } else {\n    const that = this;\n    this.subscriptions.set(\n      id,\n      updater.entity.definitionChanged.addEventListener(function (\n        entity,\n        propertyName,\n        newValue,\n        oldValue\n      ) {\n        if (propertyName === \"isShowing\") {\n          that.showsUpdated.set(updater.id, updater);\n        }\n      })\n    );\n  }\n};\n\nBatch.prototype.remove = function (updater) {\n  const id = updater.id;\n  this.createPrimitive = this.geometry.remove(id) || this.createPrimitive;\n  if (this.updaters.remove(id)) {\n    this.updatersWithAttributes.remove(id);\n    const unsubscribe = this.subscriptions.get(id);\n    if (defined(unsubscribe)) {\n      unsubscribe();\n      this.subscriptions.remove(id);\n      this.showsUpdated.remove(id);\n    }\n    return true;\n  }\n  return false;\n};\n\nBatch.prototype.update = function (time) {\n  let isUpdated = true;\n  let removedCount = 0;\n  let primitive = this.primitive;\n  const primitives = this.primitives;\n  let i;\n\n  if (this.createPrimitive) {\n    const geometries = this.geometry.values;\n    const geometriesLength = geometries.length;\n    if (geometriesLength > 0) {\n      if (defined(primitive)) {\n        if (!defined(this.oldPrimitive)) {\n          this.oldPrimitive = primitive;\n        } else {\n          primitives.remove(primitive);\n        }\n      }\n\n      let depthFailAppearance;\n      if (defined(this.depthFailAppearanceType)) {\n        if (defined(this.depthFailMaterialProperty)) {\n          this.depthFailMaterial = MaterialProperty.getValue(\n            time,\n            this.depthFailMaterialProperty,\n            this.depthFailMaterial\n          );\n        }\n        depthFailAppearance = new this.depthFailAppearanceType({\n          material: this.depthFailMaterial,\n          translucent: this.translucent,\n          closed: this.closed,\n        });\n      }\n\n      primitive = new Primitive({\n        show: false,\n        asynchronous: true,\n        geometryInstances: geometries.slice(),\n        appearance: new this.appearanceType({\n          translucent: this.translucent,\n          closed: this.closed,\n        }),\n        depthFailAppearance: depthFailAppearance,\n        shadows: this.shadows,\n      });\n      primitives.add(primitive);\n      isUpdated = false;\n    } else {\n      if (defined(primitive)) {\n        primitives.remove(primitive);\n        primitive = undefined;\n      }\n      const oldPrimitive = this.oldPrimitive;\n      if (defined(oldPrimitive)) {\n        primitives.remove(oldPrimitive);\n        this.oldPrimitive = undefined;\n      }\n    }\n\n    this.attributes.removeAll();\n    this.primitive = primitive;\n    this.createPrimitive = false;\n    this.waitingOnCreate = true;\n  } else if (defined(primitive) && primitive.ready) {\n    primitive.show = true;\n    if (defined(this.oldPrimitive)) {\n      primitives.remove(this.oldPrimitive);\n      this.oldPrimitive = undefined;\n    }\n\n    if (\n      defined(this.depthFailAppearanceType) &&\n      !(this.depthFailMaterialProperty instanceof ColorMaterialProperty)\n    ) {\n      this.depthFailMaterial = MaterialProperty.getValue(\n        time,\n        this.depthFailMaterialProperty,\n        this.depthFailMaterial\n      );\n      this.primitive.depthFailAppearance.material = this.depthFailMaterial;\n    }\n\n    const updatersWithAttributes = this.updatersWithAttributes.values;\n    const length = updatersWithAttributes.length;\n    const waitingOnCreate = this.waitingOnCreate;\n    for (i = 0; i < length; i++) {\n      const updater = updatersWithAttributes[i];\n      const instance = this.geometry.get(updater.id);\n\n      let attributes = this.attributes.get(instance.id.id);\n      if (!defined(attributes)) {\n        attributes = primitive.getGeometryInstanceAttributes(instance.id);\n        this.attributes.set(instance.id.id, attributes);\n      }\n\n      if (!updater.fillMaterialProperty.isConstant || waitingOnCreate) {\n        const colorProperty = updater.fillMaterialProperty.color;\n        const resultColor = Property.getValueOrDefault(\n          colorProperty,\n          time,\n          Color.WHITE,\n          colorScratch\n        );\n        if (!Color.equals(attributes._lastColor, resultColor)) {\n          attributes._lastColor = Color.clone(\n            resultColor,\n            attributes._lastColor\n          );\n          attributes.color = ColorGeometryInstanceAttribute.toValue(\n            resultColor,\n            attributes.color\n          );\n          if (\n            (this.translucent && attributes.color[3] === 255) ||\n            (!this.translucent && attributes.color[3] !== 255)\n          ) {\n            this.itemsToRemove[removedCount++] = updater;\n          }\n        }\n      }\n\n      if (\n        defined(this.depthFailAppearanceType) &&\n        updater.depthFailMaterialProperty instanceof ColorMaterialProperty &&\n        (!updater.depthFailMaterialProperty.isConstant || waitingOnCreate)\n      ) {\n        const depthFailColorProperty = updater.depthFailMaterialProperty.color;\n        const depthColor = Property.getValueOrDefault(\n          depthFailColorProperty,\n          time,\n          Color.WHITE,\n          colorScratch\n        );\n        if (!Color.equals(attributes._lastDepthFailColor, depthColor)) {\n          attributes._lastDepthFailColor = Color.clone(\n            depthColor,\n            attributes._lastDepthFailColor\n          );\n          attributes.depthFailColor = ColorGeometryInstanceAttribute.toValue(\n            depthColor,\n            attributes.depthFailColor\n          );\n        }\n      }\n\n      const show =\n        updater.entity.isShowing &&\n        (updater.hasConstantFill || updater.isFilled(time));\n      const currentShow = attributes.show[0] === 1;\n      if (show !== currentShow) {\n        attributes.show = ShowGeometryInstanceAttribute.toValue(\n          show,\n          attributes.show\n        );\n      }\n\n      const distanceDisplayConditionProperty =\n        updater.distanceDisplayConditionProperty;\n      if (!Property.isConstant(distanceDisplayConditionProperty)) {\n        const distanceDisplayCondition = Property.getValueOrDefault(\n          distanceDisplayConditionProperty,\n          time,\n          defaultDistanceDisplayCondition,\n          distanceDisplayConditionScratch\n        );\n        if (\n          !DistanceDisplayCondition.equals(\n            distanceDisplayCondition,\n            attributes._lastDistanceDisplayCondition\n          )\n        ) {\n          attributes._lastDistanceDisplayCondition = DistanceDisplayCondition.clone(\n            distanceDisplayCondition,\n            attributes._lastDistanceDisplayCondition\n          );\n          attributes.distanceDisplayCondition = DistanceDisplayConditionGeometryInstanceAttribute.toValue(\n            distanceDisplayCondition,\n            attributes.distanceDisplayCondition\n          );\n        }\n      }\n\n      const offsetProperty = updater.terrainOffsetProperty;\n      if (!Property.isConstant(offsetProperty)) {\n        const offset = Property.getValueOrDefault(\n          offsetProperty,\n          time,\n          defaultOffset,\n          offsetScratch\n        );\n        if (!Cartesian3.equals(offset, attributes._lastOffset)) {\n          attributes._lastOffset = Cartesian3.clone(\n            offset,\n            attributes._lastOffset\n          );\n          attributes.offset = OffsetGeometryInstanceAttribute.toValue(\n            offset,\n            attributes.offset\n          );\n        }\n      }\n    }\n\n    this.updateShows(primitive);\n    this.waitingOnCreate = false;\n  } else if (defined(primitive) && !primitive.ready) {\n    isUpdated = false;\n  }\n  this.itemsToRemove.length = removedCount;\n  return isUpdated;\n};\n\nBatch.prototype.updateShows = function (primitive) {\n  const showsUpdated = this.showsUpdated.values;\n  const length = showsUpdated.length;\n  for (let i = 0; i < length; i++) {\n    const updater = showsUpdated[i];\n    const instance = this.geometry.get(updater.id);\n\n    let attributes = this.attributes.get(instance.id.id);\n    if (!defined(attributes)) {\n      attributes = primitive.getGeometryInstanceAttributes(instance.id);\n      this.attributes.set(instance.id.id, attributes);\n    }\n\n    const show = updater.entity.isShowing;\n    const currentShow = attributes.show[0] === 1;\n    if (show !== currentShow) {\n      attributes.show = ShowGeometryInstanceAttribute.toValue(\n        show,\n        attributes.show\n      );\n      instance.attributes.show.value[0] = attributes.show[0];\n    }\n  }\n  this.showsUpdated.removeAll();\n};\n\nBatch.prototype.contains = function (updater) {\n  return this.updaters.contains(updater.id);\n};\n\nBatch.prototype.getBoundingSphere = function (updater, result) {\n  const primitive = this.primitive;\n  if (!primitive.ready) {\n    return BoundingSphereState.PENDING;\n  }\n  const attributes = primitive.getGeometryInstanceAttributes(updater.entity);\n  if (\n    !defined(attributes) ||\n    !defined(attributes.boundingSphere) || //\n    (defined(attributes.show) && attributes.show[0] === 0)\n  ) {\n    return BoundingSphereState.FAILED;\n  }\n  attributes.boundingSphere.clone(result);\n  return BoundingSphereState.DONE;\n};\n\nBatch.prototype.destroy = function () {\n  const primitive = this.primitive;\n  const primitives = this.primitives;\n  if (defined(primitive)) {\n    primitives.remove(primitive);\n  }\n  const oldPrimitive = this.oldPrimitive;\n  if (defined(oldPrimitive)) {\n    primitives.remove(oldPrimitive);\n  }\n  if (defined(this.removeMaterialSubscription)) {\n    this.removeMaterialSubscription();\n  }\n};\n\n/**\n * @private\n */\nfunction StaticGeometryColorBatch(\n  primitives,\n  appearanceType,\n  depthFailAppearanceType,\n  closed,\n  shadows\n) {\n  this._solidItems = [];\n  this._translucentItems = [];\n  this._primitives = primitives;\n  this._appearanceType = appearanceType;\n  this._depthFailAppearanceType = depthFailAppearanceType;\n  this._closed = closed;\n  this._shadows = shadows;\n}\n\nStaticGeometryColorBatch.prototype.add = function (time, updater) {\n  let items;\n  let translucent;\n  const instance = updater.createFillGeometryInstance(time);\n  if (instance.attributes.color.value[3] === 255) {\n    items = this._solidItems;\n    translucent = false;\n  } else {\n    items = this._translucentItems;\n    translucent = true;\n  }\n\n  const length = items.length;\n  for (let i = 0; i < length; i++) {\n    const item = items[i];\n    if (item.isMaterial(updater)) {\n      item.add(updater, instance);\n      return;\n    }\n  }\n  const batch = new Batch(\n    this._primitives,\n    translucent,\n    this._appearanceType,\n    this._depthFailAppearanceType,\n    updater.depthFailMaterialProperty,\n    this._closed,\n    this._shadows\n  );\n  batch.add(updater, instance);\n  items.push(batch);\n};\n\nfunction removeItem(items, updater) {\n  const length = items.length;\n  for (let i = length - 1; i >= 0; i--) {\n    const item = items[i];\n    if (item.remove(updater)) {\n      if (item.updaters.length === 0) {\n        items.splice(i, 1);\n        item.destroy();\n      }\n      return true;\n    }\n  }\n  return false;\n}\n\nStaticGeometryColorBatch.prototype.remove = function (updater) {\n  if (!removeItem(this._solidItems, updater)) {\n    removeItem(this._translucentItems, updater);\n  }\n};\n\nfunction moveItems(batch, items, time) {\n  let itemsMoved = false;\n  const length = items.length;\n  for (let i = 0; i < length; ++i) {\n    const item = items[i];\n    const itemsToRemove = item.itemsToRemove;\n    const itemsToMoveLength = itemsToRemove.length;\n    if (itemsToMoveLength > 0) {\n      for (i = 0; i < itemsToMoveLength; i++) {\n        const updater = itemsToRemove[i];\n        item.remove(updater);\n        batch.add(time, updater);\n        itemsMoved = true;\n      }\n    }\n  }\n  return itemsMoved;\n}\n\nfunction updateItems(batch, items, time, isUpdated) {\n  let length = items.length;\n  let i;\n  for (i = length - 1; i >= 0; i--) {\n    const item = items[i];\n    if (item.invalidated) {\n      items.splice(i, 1);\n      const updaters = item.updaters.values;\n      const updatersLength = updaters.length;\n      for (let h = 0; h < updatersLength; h++) {\n        batch.add(time, updaters[h]);\n      }\n      item.destroy();\n    }\n  }\n\n  length = items.length;\n  for (i = 0; i < length; ++i) {\n    isUpdated = items[i].update(time) && isUpdated;\n  }\n  return isUpdated;\n}\n\nStaticGeometryColorBatch.prototype.update = function (time) {\n  //Perform initial update\n  let isUpdated = updateItems(this, this._solidItems, time, true);\n  isUpdated =\n    updateItems(this, this._translucentItems, time, isUpdated) && isUpdated;\n\n  //If any items swapped between solid/translucent, we need to\n  //move them between batches\n  const solidsMoved = moveItems(this, this._solidItems, time);\n  const translucentsMoved = moveItems(this, this._translucentItems, time);\n\n  //If we moved anything around, we need to re-build the primitive\n  if (solidsMoved || translucentsMoved) {\n    isUpdated =\n      updateItems(this, this._solidItems, time, isUpdated) && isUpdated;\n    isUpdated =\n      updateItems(this, this._translucentItems, time, isUpdated) && isUpdated;\n  }\n\n  return isUpdated;\n};\n\nfunction getBoundingSphere(items, updater, result) {\n  const length = items.length;\n  for (let i = 0; i < length; i++) {\n    const item = items[i];\n    if (item.contains(updater)) {\n      return item.getBoundingSphere(updater, result);\n    }\n  }\n  return BoundingSphereState.FAILED;\n}\n\nStaticGeometryColorBatch.prototype.getBoundingSphere = function (\n  updater,\n  result\n) {\n  const boundingSphere = getBoundingSphere(this._solidItems, updater, result);\n  if (boundingSphere === BoundingSphereState.FAILED) {\n    return getBoundingSphere(this._translucentItems, updater, result);\n  }\n  return boundingSphere;\n};\n\nfunction removeAllPrimitives(items) {\n  const length = items.length;\n  for (let i = 0; i < length; i++) {\n    items[i].destroy();\n  }\n  items.length = 0;\n}\n\nStaticGeometryColorBatch.prototype.removeAllPrimitives = function () {\n  removeAllPrimitives(this._solidItems);\n  removeAllPrimitives(this._translucentItems);\n};\nexport default StaticGeometryColorBatch;\n","import AssociativeArray from \"../Core/AssociativeArray.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Color from \"../Core/Color.js\";\nimport ColorGeometryInstanceAttribute from \"../Core/ColorGeometryInstanceAttribute.js\";\nimport defined from \"../Core/defined.js\";\nimport DistanceDisplayCondition from \"../Core/DistanceDisplayCondition.js\";\nimport DistanceDisplayConditionGeometryInstanceAttribute from \"../Core/DistanceDisplayConditionGeometryInstanceAttribute.js\";\nimport OffsetGeometryInstanceAttribute from \"../Core/OffsetGeometryInstanceAttribute.js\";\nimport ShowGeometryInstanceAttribute from \"../Core/ShowGeometryInstanceAttribute.js\";\nimport Primitive from \"../Scene/Primitive.js\";\nimport BoundingSphereState from \"./BoundingSphereState.js\";\nimport ColorMaterialProperty from \"./ColorMaterialProperty.js\";\nimport MaterialProperty from \"./MaterialProperty.js\";\nimport Property from \"./Property.js\";\n\nconst distanceDisplayConditionScratch = new DistanceDisplayCondition();\nconst defaultDistanceDisplayCondition = new DistanceDisplayCondition();\nconst defaultOffset = Cartesian3.ZERO;\nconst offsetScratch = new Cartesian3();\n\nfunction Batch(\n  primitives,\n  appearanceType,\n  materialProperty,\n  depthFailAppearanceType,\n  depthFailMaterialProperty,\n  closed,\n  shadows\n) {\n  this.primitives = primitives;\n  this.appearanceType = appearanceType;\n  this.materialProperty = materialProperty;\n  this.depthFailAppearanceType = depthFailAppearanceType;\n  this.depthFailMaterialProperty = depthFailMaterialProperty;\n  this.closed = closed;\n  this.shadows = shadows;\n  this.updaters = new AssociativeArray();\n  this.createPrimitive = true;\n  this.primitive = undefined;\n  this.oldPrimitive = undefined;\n  this.geometry = new AssociativeArray();\n  this.material = undefined;\n  this.depthFailMaterial = undefined;\n  this.updatersWithAttributes = new AssociativeArray();\n  this.attributes = new AssociativeArray();\n  this.invalidated = false;\n  this.removeMaterialSubscription = materialProperty.definitionChanged.addEventListener(\n    Batch.prototype.onMaterialChanged,\n    this\n  );\n  this.subscriptions = new AssociativeArray();\n  this.showsUpdated = new AssociativeArray();\n}\n\nBatch.prototype.onMaterialChanged = function () {\n  this.invalidated = true;\n};\n\nBatch.prototype.isMaterial = function (updater) {\n  const material = this.materialProperty;\n  const updaterMaterial = updater.fillMaterialProperty;\n  const depthFailMaterial = this.depthFailMaterialProperty;\n  const updaterDepthFailMaterial = updater.depthFailMaterialProperty;\n\n  if (\n    updaterMaterial === material &&\n    updaterDepthFailMaterial === depthFailMaterial\n  ) {\n    return true;\n  }\n  let equals = defined(material) && material.equals(updaterMaterial);\n  equals =\n    ((!defined(depthFailMaterial) && !defined(updaterDepthFailMaterial)) ||\n      (defined(depthFailMaterial) &&\n        depthFailMaterial.equals(updaterDepthFailMaterial))) &&\n    equals;\n  return equals;\n};\n\nBatch.prototype.add = function (time, updater) {\n  const id = updater.id;\n  this.updaters.set(id, updater);\n  this.geometry.set(id, updater.createFillGeometryInstance(time));\n  if (\n    !updater.hasConstantFill ||\n    !updater.fillMaterialProperty.isConstant ||\n    !Property.isConstant(updater.distanceDisplayConditionProperty) ||\n    !Property.isConstant(updater.terrainOffsetProperty)\n  ) {\n    this.updatersWithAttributes.set(id, updater);\n  } else {\n    const that = this;\n    this.subscriptions.set(\n      id,\n      updater.entity.definitionChanged.addEventListener(function (\n        entity,\n        propertyName,\n        newValue,\n        oldValue\n      ) {\n        if (propertyName === \"isShowing\") {\n          that.showsUpdated.set(updater.id, updater);\n        }\n      })\n    );\n  }\n  this.createPrimitive = true;\n};\n\nBatch.prototype.remove = function (updater) {\n  const id = updater.id;\n  this.createPrimitive = this.geometry.remove(id) || this.createPrimitive;\n  if (this.updaters.remove(id)) {\n    this.updatersWithAttributes.remove(id);\n    const unsubscribe = this.subscriptions.get(id);\n    if (defined(unsubscribe)) {\n      unsubscribe();\n      this.subscriptions.remove(id);\n      this.showsUpdated.remove(id);\n    }\n    return true;\n  }\n  return false;\n};\n\nconst colorScratch = new Color();\n\nBatch.prototype.update = function (time) {\n  let isUpdated = true;\n  let primitive = this.primitive;\n  const primitives = this.primitives;\n  const geometries = this.geometry.values;\n  let i;\n\n  if (this.createPrimitive) {\n    const geometriesLength = geometries.length;\n    if (geometriesLength > 0) {\n      if (defined(primitive)) {\n        if (!defined(this.oldPrimitive)) {\n          this.oldPrimitive = primitive;\n        } else {\n          primitives.remove(primitive);\n        }\n      }\n\n      this.material = MaterialProperty.getValue(\n        time,\n        this.materialProperty,\n        this.material\n      );\n\n      let depthFailAppearance;\n      if (defined(this.depthFailMaterialProperty)) {\n        this.depthFailMaterial = MaterialProperty.getValue(\n          time,\n          this.depthFailMaterialProperty,\n          this.depthFailMaterial\n        );\n        depthFailAppearance = new this.depthFailAppearanceType({\n          material: this.depthFailMaterial,\n          translucent: this.depthFailMaterial.isTranslucent(),\n          closed: this.closed,\n        });\n      }\n\n      primitive = new Primitive({\n        show: false,\n        asynchronous: true,\n        geometryInstances: geometries.slice(),\n        appearance: new this.appearanceType({\n          material: this.material,\n          translucent: this.material.isTranslucent(),\n          closed: this.closed,\n        }),\n        depthFailAppearance: depthFailAppearance,\n        shadows: this.shadows,\n      });\n\n      primitives.add(primitive);\n      isUpdated = false;\n    } else {\n      if (defined(primitive)) {\n        primitives.remove(primitive);\n        primitive = undefined;\n      }\n      const oldPrimitive = this.oldPrimitive;\n      if (defined(oldPrimitive)) {\n        primitives.remove(oldPrimitive);\n        this.oldPrimitive = undefined;\n      }\n    }\n\n    this.attributes.removeAll();\n    this.primitive = primitive;\n    this.createPrimitive = false;\n  } else if (defined(primitive) && primitive.ready) {\n    primitive.show = true;\n    if (defined(this.oldPrimitive)) {\n      primitives.remove(this.oldPrimitive);\n      this.oldPrimitive = undefined;\n    }\n\n    this.material = MaterialProperty.getValue(\n      time,\n      this.materialProperty,\n      this.material\n    );\n    this.primitive.appearance.material = this.material;\n\n    if (\n      defined(this.depthFailAppearanceType) &&\n      !(this.depthFailMaterialProperty instanceof ColorMaterialProperty)\n    ) {\n      this.depthFailMaterial = MaterialProperty.getValue(\n        time,\n        this.depthFailMaterialProperty,\n        this.depthFailMaterial\n      );\n      this.primitive.depthFailAppearance.material = this.depthFailMaterial;\n    }\n\n    const updatersWithAttributes = this.updatersWithAttributes.values;\n    const length = updatersWithAttributes.length;\n    for (i = 0; i < length; i++) {\n      const updater = updatersWithAttributes[i];\n      const entity = updater.entity;\n      const instance = this.geometry.get(updater.id);\n\n      let attributes = this.attributes.get(instance.id.id);\n      if (!defined(attributes)) {\n        attributes = primitive.getGeometryInstanceAttributes(instance.id);\n        this.attributes.set(instance.id.id, attributes);\n      }\n\n      if (\n        defined(this.depthFailAppearanceType) &&\n        this.depthFailMaterialProperty instanceof ColorMaterialProperty &&\n        !updater.depthFailMaterialProperty.isConstant\n      ) {\n        const depthFailColorProperty = updater.depthFailMaterialProperty.color;\n        const depthFailColor = Property.getValueOrDefault(\n          depthFailColorProperty,\n          time,\n          Color.WHITE,\n          colorScratch\n        );\n        if (!Color.equals(attributes._lastDepthFailColor, depthFailColor)) {\n          attributes._lastDepthFailColor = Color.clone(\n            depthFailColor,\n            attributes._lastDepthFailColor\n          );\n          attributes.depthFailColor = ColorGeometryInstanceAttribute.toValue(\n            depthFailColor,\n            attributes.depthFailColor\n          );\n        }\n      }\n\n      const show =\n        entity.isShowing && (updater.hasConstantFill || updater.isFilled(time));\n      const currentShow = attributes.show[0] === 1;\n      if (show !== currentShow) {\n        attributes.show = ShowGeometryInstanceAttribute.toValue(\n          show,\n          attributes.show\n        );\n      }\n\n      const distanceDisplayConditionProperty =\n        updater.distanceDisplayConditionProperty;\n      if (!Property.isConstant(distanceDisplayConditionProperty)) {\n        const distanceDisplayCondition = Property.getValueOrDefault(\n          distanceDisplayConditionProperty,\n          time,\n          defaultDistanceDisplayCondition,\n          distanceDisplayConditionScratch\n        );\n        if (\n          !DistanceDisplayCondition.equals(\n            distanceDisplayCondition,\n            attributes._lastDistanceDisplayCondition\n          )\n        ) {\n          attributes._lastDistanceDisplayCondition = DistanceDisplayCondition.clone(\n            distanceDisplayCondition,\n            attributes._lastDistanceDisplayCondition\n          );\n          attributes.distanceDisplayCondition = DistanceDisplayConditionGeometryInstanceAttribute.toValue(\n            distanceDisplayCondition,\n            attributes.distanceDisplayCondition\n          );\n        }\n      }\n\n      const offsetProperty = updater.terrainOffsetProperty;\n      if (!Property.isConstant(offsetProperty)) {\n        const offset = Property.getValueOrDefault(\n          offsetProperty,\n          time,\n          defaultOffset,\n          offsetScratch\n        );\n        if (!Cartesian3.equals(offset, attributes._lastOffset)) {\n          attributes._lastOffset = Cartesian3.clone(\n            offset,\n            attributes._lastOffset\n          );\n          attributes.offset = OffsetGeometryInstanceAttribute.toValue(\n            offset,\n            attributes.offset\n          );\n        }\n      }\n    }\n\n    this.updateShows(primitive);\n  } else if (defined(primitive) && !primitive.ready) {\n    isUpdated = false;\n  }\n  return isUpdated;\n};\n\nBatch.prototype.updateShows = function (primitive) {\n  const showsUpdated = this.showsUpdated.values;\n  const length = showsUpdated.length;\n  for (let i = 0; i < length; i++) {\n    const updater = showsUpdated[i];\n    const entity = updater.entity;\n    const instance = this.geometry.get(updater.id);\n\n    let attributes = this.attributes.get(instance.id.id);\n    if (!defined(attributes)) {\n      attributes = primitive.getGeometryInstanceAttributes(instance.id);\n      this.attributes.set(instance.id.id, attributes);\n    }\n\n    const show = entity.isShowing;\n    const currentShow = attributes.show[0] === 1;\n    if (show !== currentShow) {\n      attributes.show = ShowGeometryInstanceAttribute.toValue(\n        show,\n        attributes.show\n      );\n      instance.attributes.show.value[0] = attributes.show[0];\n    }\n  }\n  this.showsUpdated.removeAll();\n};\n\nBatch.prototype.contains = function (updater) {\n  return this.updaters.contains(updater.id);\n};\n\nBatch.prototype.getBoundingSphere = function (updater, result) {\n  const primitive = this.primitive;\n  if (!primitive.ready) {\n    return BoundingSphereState.PENDING;\n  }\n  const attributes = primitive.getGeometryInstanceAttributes(updater.entity);\n  if (\n    !defined(attributes) ||\n    !defined(attributes.boundingSphere) ||\n    (defined(attributes.show) && attributes.show[0] === 0)\n  ) {\n    return BoundingSphereState.FAILED;\n  }\n  attributes.boundingSphere.clone(result);\n  return BoundingSphereState.DONE;\n};\n\nBatch.prototype.destroy = function () {\n  const primitive = this.primitive;\n  const primitives = this.primitives;\n  if (defined(primitive)) {\n    primitives.remove(primitive);\n  }\n  const oldPrimitive = this.oldPrimitive;\n  if (defined(oldPrimitive)) {\n    primitives.remove(oldPrimitive);\n  }\n  this.removeMaterialSubscription();\n};\n\n/**\n * @private\n */\nfunction StaticGeometryPerMaterialBatch(\n  primitives,\n  appearanceType,\n  depthFailAppearanceType,\n  closed,\n  shadows\n) {\n  this._items = [];\n  this._primitives = primitives;\n  this._appearanceType = appearanceType;\n  this._depthFailAppearanceType = depthFailAppearanceType;\n  this._closed = closed;\n  this._shadows = shadows;\n}\n\nStaticGeometryPerMaterialBatch.prototype.add = function (time, updater) {\n  const items = this._items;\n  const length = items.length;\n  for (let i = 0; i < length; i++) {\n    const item = items[i];\n    if (item.isMaterial(updater)) {\n      item.add(time, updater);\n      return;\n    }\n  }\n  const batch = new Batch(\n    this._primitives,\n    this._appearanceType,\n    updater.fillMaterialProperty,\n    this._depthFailAppearanceType,\n    updater.depthFailMaterialProperty,\n    this._closed,\n    this._shadows\n  );\n  batch.add(time, updater);\n  items.push(batch);\n};\n\nStaticGeometryPerMaterialBatch.prototype.remove = function (updater) {\n  const items = this._items;\n  const length = items.length;\n  for (let i = length - 1; i >= 0; i--) {\n    const item = items[i];\n    if (item.remove(updater)) {\n      if (item.updaters.length === 0) {\n        items.splice(i, 1);\n        item.destroy();\n      }\n      break;\n    }\n  }\n};\n\nStaticGeometryPerMaterialBatch.prototype.update = function (time) {\n  let i;\n  const items = this._items;\n  const length = items.length;\n\n  for (i = length - 1; i >= 0; i--) {\n    const item = items[i];\n    if (item.invalidated) {\n      items.splice(i, 1);\n      const updaters = item.updaters.values;\n      const updatersLength = updaters.length;\n      for (let h = 0; h < updatersLength; h++) {\n        this.add(time, updaters[h]);\n      }\n      item.destroy();\n    }\n  }\n\n  let isUpdated = true;\n  for (i = 0; i < items.length; i++) {\n    isUpdated = items[i].update(time) && isUpdated;\n  }\n  return isUpdated;\n};\n\nStaticGeometryPerMaterialBatch.prototype.getBoundingSphere = function (\n  updater,\n  result\n) {\n  const items = this._items;\n  const length = items.length;\n  for (let i = 0; i < length; i++) {\n    const item = items[i];\n    if (item.contains(updater)) {\n      return item.getBoundingSphere(updater, result);\n    }\n  }\n  return BoundingSphereState.FAILED;\n};\n\nStaticGeometryPerMaterialBatch.prototype.removeAllPrimitives = function () {\n  const items = this._items;\n  const length = items.length;\n  for (let i = 0; i < length; i++) {\n    items[i].destroy();\n  }\n  this._items.length = 0;\n};\nexport default StaticGeometryPerMaterialBatch;\n","import AssociativeArray from \"../Core/AssociativeArray.js\";\nimport Color from \"../Core/Color.js\";\nimport ColorGeometryInstanceAttribute from \"../Core/ColorGeometryInstanceAttribute.js\";\nimport defined from \"../Core/defined.js\";\nimport DistanceDisplayCondition from \"../Core/DistanceDisplayCondition.js\";\nimport DistanceDisplayConditionGeometryInstanceAttribute from \"../Core/DistanceDisplayConditionGeometryInstanceAttribute.js\";\nimport ShowGeometryInstanceAttribute from \"../Core/ShowGeometryInstanceAttribute.js\";\nimport GroundPrimitive from \"../Scene/GroundPrimitive.js\";\nimport BoundingSphereState from \"./BoundingSphereState.js\";\nimport Property from \"./Property.js\";\nimport RectangleCollisionChecker from \"../Core/RectangleCollisionChecker.js\";\n\nconst colorScratch = new Color();\nconst distanceDisplayConditionScratch = new DistanceDisplayCondition();\nconst defaultDistanceDisplayCondition = new DistanceDisplayCondition();\n\nfunction Batch(primitives, classificationType, color, zIndex) {\n  this.primitives = primitives;\n  this.zIndex = zIndex;\n  this.classificationType = classificationType;\n  this.color = color;\n  this.createPrimitive = false;\n  this.waitingOnCreate = false;\n  this.primitive = undefined;\n  this.oldPrimitive = undefined;\n  this.geometry = new AssociativeArray();\n  this.updaters = new AssociativeArray();\n  this.updatersWithAttributes = new AssociativeArray();\n  this.attributes = new AssociativeArray();\n  this.subscriptions = new AssociativeArray();\n  this.showsUpdated = new AssociativeArray();\n  this.itemsToRemove = [];\n  this.isDirty = false;\n  this.rectangleCollisionCheck = new RectangleCollisionChecker();\n}\n\nBatch.prototype.overlapping = function (rectangle) {\n  return this.rectangleCollisionCheck.collides(rectangle);\n};\n\nBatch.prototype.add = function (updater, instance) {\n  const id = updater.id;\n  this.createPrimitive = true;\n  this.geometry.set(id, instance);\n  this.updaters.set(id, updater);\n  this.rectangleCollisionCheck.insert(id, instance.geometry.rectangle);\n  if (\n    !updater.hasConstantFill ||\n    !updater.fillMaterialProperty.isConstant ||\n    !Property.isConstant(updater.distanceDisplayConditionProperty)\n  ) {\n    this.updatersWithAttributes.set(id, updater);\n  } else {\n    const that = this;\n    this.subscriptions.set(\n      id,\n      updater.entity.definitionChanged.addEventListener(function (\n        entity,\n        propertyName,\n        newValue,\n        oldValue\n      ) {\n        if (propertyName === \"isShowing\") {\n          that.showsUpdated.set(updater.id, updater);\n        }\n      })\n    );\n  }\n};\n\nBatch.prototype.remove = function (updater) {\n  const id = updater.id;\n  const geometryInstance = this.geometry.get(id);\n  this.createPrimitive = this.geometry.remove(id) || this.createPrimitive;\n  if (this.updaters.remove(id)) {\n    this.rectangleCollisionCheck.remove(\n      id,\n      geometryInstance.geometry.rectangle\n    );\n    this.updatersWithAttributes.remove(id);\n    const unsubscribe = this.subscriptions.get(id);\n    if (defined(unsubscribe)) {\n      unsubscribe();\n      this.subscriptions.remove(id);\n      this.showsUpdated.remove(id);\n    }\n    return true;\n  }\n  return false;\n};\n\nBatch.prototype.update = function (time) {\n  let isUpdated = true;\n  const removedCount = 0;\n  let primitive = this.primitive;\n  const primitives = this.primitives;\n  let i;\n\n  if (this.createPrimitive) {\n    const geometries = this.geometry.values;\n    const geometriesLength = geometries.length;\n    if (geometriesLength > 0) {\n      if (defined(primitive)) {\n        if (!defined(this.oldPrimitive)) {\n          this.oldPrimitive = primitive;\n        } else {\n          primitives.remove(primitive);\n        }\n      }\n\n      primitive = new GroundPrimitive({\n        show: false,\n        asynchronous: true,\n        geometryInstances: geometries.slice(),\n        classificationType: this.classificationType,\n      });\n      primitives.add(primitive, this.zIndex);\n      isUpdated = false;\n    } else {\n      if (defined(primitive)) {\n        primitives.remove(primitive);\n        primitive = undefined;\n      }\n      const oldPrimitive = this.oldPrimitive;\n      if (defined(oldPrimitive)) {\n        primitives.remove(oldPrimitive);\n        this.oldPrimitive = undefined;\n      }\n    }\n\n    this.attributes.removeAll();\n    this.primitive = primitive;\n    this.createPrimitive = false;\n    this.waitingOnCreate = true;\n  } else if (defined(primitive) && primitive.ready) {\n    primitive.show = true;\n    if (defined(this.oldPrimitive)) {\n      primitives.remove(this.oldPrimitive);\n      this.oldPrimitive = undefined;\n    }\n    const updatersWithAttributes = this.updatersWithAttributes.values;\n    const length = updatersWithAttributes.length;\n    const waitingOnCreate = this.waitingOnCreate;\n    for (i = 0; i < length; i++) {\n      const updater = updatersWithAttributes[i];\n      const instance = this.geometry.get(updater.id);\n\n      let attributes = this.attributes.get(instance.id.id);\n      if (!defined(attributes)) {\n        attributes = primitive.getGeometryInstanceAttributes(instance.id);\n        this.attributes.set(instance.id.id, attributes);\n      }\n\n      if (!updater.fillMaterialProperty.isConstant || waitingOnCreate) {\n        const colorProperty = updater.fillMaterialProperty.color;\n        const fillColor = Property.getValueOrDefault(\n          colorProperty,\n          time,\n          Color.WHITE,\n          colorScratch\n        );\n\n        if (!Color.equals(attributes._lastColor, fillColor)) {\n          attributes._lastColor = Color.clone(fillColor, attributes._lastColor);\n          attributes.color = ColorGeometryInstanceAttribute.toValue(\n            fillColor,\n            attributes.color\n          );\n        }\n      }\n\n      const show =\n        updater.entity.isShowing &&\n        (updater.hasConstantFill || updater.isFilled(time));\n      const currentShow = attributes.show[0] === 1;\n      if (show !== currentShow) {\n        attributes.show = ShowGeometryInstanceAttribute.toValue(\n          show,\n          attributes.show\n        );\n      }\n\n      const distanceDisplayConditionProperty =\n        updater.distanceDisplayConditionProperty;\n      if (!Property.isConstant(distanceDisplayConditionProperty)) {\n        const distanceDisplayCondition = Property.getValueOrDefault(\n          distanceDisplayConditionProperty,\n          time,\n          defaultDistanceDisplayCondition,\n          distanceDisplayConditionScratch\n        );\n        if (\n          !DistanceDisplayCondition.equals(\n            distanceDisplayCondition,\n            attributes._lastDistanceDisplayCondition\n          )\n        ) {\n          attributes._lastDistanceDisplayCondition = DistanceDisplayCondition.clone(\n            distanceDisplayCondition,\n            attributes._lastDistanceDisplayCondition\n          );\n          attributes.distanceDisplayCondition = DistanceDisplayConditionGeometryInstanceAttribute.toValue(\n            distanceDisplayCondition,\n            attributes.distanceDisplayCondition\n          );\n        }\n      }\n    }\n\n    this.updateShows(primitive);\n    this.waitingOnCreate = false;\n  } else if (defined(primitive) && !primitive.ready) {\n    isUpdated = false;\n  }\n  this.itemsToRemove.length = removedCount;\n  return isUpdated;\n};\n\nBatch.prototype.updateShows = function (primitive) {\n  const showsUpdated = this.showsUpdated.values;\n  const length = showsUpdated.length;\n  for (let i = 0; i < length; i++) {\n    const updater = showsUpdated[i];\n    const instance = this.geometry.get(updater.id);\n\n    let attributes = this.attributes.get(instance.id.id);\n    if (!defined(attributes)) {\n      attributes = primitive.getGeometryInstanceAttributes(instance.id);\n      this.attributes.set(instance.id.id, attributes);\n    }\n\n    const show = updater.entity.isShowing;\n    const currentShow = attributes.show[0] === 1;\n    if (show !== currentShow) {\n      attributes.show = ShowGeometryInstanceAttribute.toValue(\n        show,\n        attributes.show\n      );\n      instance.attributes.show.value[0] = attributes.show[0];\n    }\n  }\n  this.showsUpdated.removeAll();\n};\n\nBatch.prototype.contains = function (updater) {\n  return this.updaters.contains(updater.id);\n};\n\nBatch.prototype.getBoundingSphere = function (updater, result) {\n  const primitive = this.primitive;\n  if (!primitive.ready) {\n    return BoundingSphereState.PENDING;\n  }\n\n  const bs = primitive.getBoundingSphere(updater.entity);\n  if (!defined(bs)) {\n    return BoundingSphereState.FAILED;\n  }\n\n  bs.clone(result);\n  return BoundingSphereState.DONE;\n};\n\nBatch.prototype.removeAllPrimitives = function () {\n  const primitives = this.primitives;\n\n  const primitive = this.primitive;\n  if (defined(primitive)) {\n    primitives.remove(primitive);\n    this.primitive = undefined;\n    this.geometry.removeAll();\n    this.updaters.removeAll();\n  }\n\n  const oldPrimitive = this.oldPrimitive;\n  if (defined(oldPrimitive)) {\n    primitives.remove(oldPrimitive);\n    this.oldPrimitive = undefined;\n  }\n};\n\n/**\n * @private\n */\nfunction StaticGroundGeometryColorBatch(primitives, classificationType) {\n  this._batches = [];\n  this._primitives = primitives;\n  this._classificationType = classificationType;\n}\n\nStaticGroundGeometryColorBatch.prototype.add = function (time, updater) {\n  const instance = updater.createFillGeometryInstance(time);\n  const batches = this._batches;\n  const zIndex = Property.getValueOrDefault(updater.zIndex, 0);\n  let batch;\n  const length = batches.length;\n  for (let i = 0; i < length; ++i) {\n    const item = batches[i];\n    if (\n      item.zIndex === zIndex &&\n      !item.overlapping(instance.geometry.rectangle)\n    ) {\n      batch = item;\n      break;\n    }\n  }\n\n  if (!defined(batch)) {\n    batch = new Batch(\n      this._primitives,\n      this._classificationType,\n      instance.attributes.color.value,\n      zIndex\n    );\n    batches.push(batch);\n  }\n  batch.add(updater, instance);\n  return batch;\n};\n\nStaticGroundGeometryColorBatch.prototype.remove = function (updater) {\n  const batches = this._batches;\n  const count = batches.length;\n  for (let i = 0; i < count; ++i) {\n    if (batches[i].remove(updater)) {\n      return;\n    }\n  }\n};\n\nStaticGroundGeometryColorBatch.prototype.update = function (time) {\n  let i;\n  let updater;\n\n  //Perform initial update\n  let isUpdated = true;\n  const batches = this._batches;\n  const batchCount = batches.length;\n  for (i = 0; i < batchCount; ++i) {\n    isUpdated = batches[i].update(time) && isUpdated;\n  }\n\n  //If any items swapped between batches we need to move them\n  for (i = 0; i < batchCount; ++i) {\n    const oldBatch = batches[i];\n    const itemsToRemove = oldBatch.itemsToRemove;\n    const itemsToMoveLength = itemsToRemove.length;\n    for (let j = 0; j < itemsToMoveLength; j++) {\n      updater = itemsToRemove[j];\n      oldBatch.remove(updater);\n      const newBatch = this.add(time, updater);\n      oldBatch.isDirty = true;\n      newBatch.isDirty = true;\n    }\n  }\n\n  //If we moved anything around, we need to re-build the primitive and remove empty batches\n  for (i = batchCount - 1; i >= 0; --i) {\n    const batch = batches[i];\n    if (batch.isDirty) {\n      isUpdated = batches[i].update(time) && isUpdated;\n      batch.isDirty = false;\n    }\n    if (batch.geometry.length === 0) {\n      batches.splice(i, 1);\n    }\n  }\n\n  return isUpdated;\n};\n\nStaticGroundGeometryColorBatch.prototype.getBoundingSphere = function (\n  updater,\n  result\n) {\n  const batches = this._batches;\n  const batchCount = batches.length;\n  for (let i = 0; i < batchCount; ++i) {\n    const batch = batches[i];\n    if (batch.contains(updater)) {\n      return batch.getBoundingSphere(updater, result);\n    }\n  }\n\n  return BoundingSphereState.FAILED;\n};\n\nStaticGroundGeometryColorBatch.prototype.removeAllPrimitives = function () {\n  const batches = this._batches;\n  const batchCount = batches.length;\n  for (let i = 0; i < batchCount; ++i) {\n    batches[i].removeAllPrimitives();\n  }\n};\nexport default StaticGroundGeometryColorBatch;\n","import AssociativeArray from \"../Core/AssociativeArray.js\";\nimport defined from \"../Core/defined.js\";\nimport DistanceDisplayCondition from \"../Core/DistanceDisplayCondition.js\";\nimport DistanceDisplayConditionGeometryInstanceAttribute from \"../Core/DistanceDisplayConditionGeometryInstanceAttribute.js\";\nimport RectangleCollisionChecker from \"../Core/RectangleCollisionChecker.js\";\nimport ShowGeometryInstanceAttribute from \"../Core/ShowGeometryInstanceAttribute.js\";\nimport GroundPrimitive from \"../Scene/GroundPrimitive.js\";\nimport ShadowVolumeAppearance from \"../Scene/ShadowVolumeAppearance.js\";\nimport BoundingSphereState from \"./BoundingSphereState.js\";\nimport ColorMaterialProperty from \"./ColorMaterialProperty.js\";\nimport MaterialProperty from \"./MaterialProperty.js\";\nimport Property from \"./Property.js\";\n\nconst distanceDisplayConditionScratch = new DistanceDisplayCondition();\nconst defaultDistanceDisplayCondition = new DistanceDisplayCondition();\n\n// Encapsulates a Primitive and all the entities that it represents.\nfunction Batch(\n  primitives,\n  classificationType,\n  appearanceType,\n  materialProperty,\n  usingSphericalTextureCoordinates,\n  zIndex\n) {\n  this.primitives = primitives; // scene level primitive collection\n  this.classificationType = classificationType;\n  this.appearanceType = appearanceType;\n  this.materialProperty = materialProperty;\n  this.updaters = new AssociativeArray();\n  this.createPrimitive = true;\n  this.primitive = undefined; // a GroundPrimitive encapsulating all the entities\n  this.oldPrimitive = undefined;\n  this.geometry = new AssociativeArray();\n  this.material = undefined;\n  this.updatersWithAttributes = new AssociativeArray();\n  this.attributes = new AssociativeArray();\n  this.invalidated = false;\n  this.removeMaterialSubscription = materialProperty.definitionChanged.addEventListener(\n    Batch.prototype.onMaterialChanged,\n    this\n  );\n  this.subscriptions = new AssociativeArray();\n  this.showsUpdated = new AssociativeArray();\n  this.usingSphericalTextureCoordinates = usingSphericalTextureCoordinates;\n  this.zIndex = zIndex;\n  this.rectangleCollisionCheck = new RectangleCollisionChecker();\n}\n\nBatch.prototype.onMaterialChanged = function () {\n  this.invalidated = true;\n};\n\nBatch.prototype.overlapping = function (rectangle) {\n  return this.rectangleCollisionCheck.collides(rectangle);\n};\n\n// Check if the given updater's material is compatible with this batch\nBatch.prototype.isMaterial = function (updater) {\n  const material = this.materialProperty;\n  const updaterMaterial = updater.fillMaterialProperty;\n\n  if (\n    updaterMaterial === material ||\n    (updaterMaterial instanceof ColorMaterialProperty &&\n      material instanceof ColorMaterialProperty)\n  ) {\n    return true;\n  }\n  return defined(material) && material.equals(updaterMaterial);\n};\n\nBatch.prototype.add = function (time, updater, geometryInstance) {\n  const id = updater.id;\n  this.updaters.set(id, updater);\n  this.geometry.set(id, geometryInstance);\n  this.rectangleCollisionCheck.insert(id, geometryInstance.geometry.rectangle);\n  // Updaters with dynamic attributes must be tracked separately, may exit the batch\n  if (\n    !updater.hasConstantFill ||\n    !updater.fillMaterialProperty.isConstant ||\n    !Property.isConstant(updater.distanceDisplayConditionProperty)\n  ) {\n    this.updatersWithAttributes.set(id, updater);\n  } else {\n    const that = this;\n    // Listen for show changes. These will be synchronized in updateShows.\n    this.subscriptions.set(\n      id,\n      updater.entity.definitionChanged.addEventListener(function (\n        entity,\n        propertyName,\n        newValue,\n        oldValue\n      ) {\n        if (propertyName === \"isShowing\") {\n          that.showsUpdated.set(updater.id, updater);\n        }\n      })\n    );\n  }\n  this.createPrimitive = true;\n};\n\nBatch.prototype.remove = function (updater) {\n  const id = updater.id;\n  const geometryInstance = this.geometry.get(id);\n  this.createPrimitive = this.geometry.remove(id) || this.createPrimitive;\n  if (this.updaters.remove(id)) {\n    this.rectangleCollisionCheck.remove(\n      id,\n      geometryInstance.geometry.rectangle\n    );\n    this.updatersWithAttributes.remove(id);\n    const unsubscribe = this.subscriptions.get(id);\n    if (defined(unsubscribe)) {\n      unsubscribe();\n      this.subscriptions.remove(id);\n    }\n    return true;\n  }\n  return false;\n};\n\nBatch.prototype.update = function (time) {\n  let isUpdated = true;\n  let primitive = this.primitive;\n  const primitives = this.primitives;\n  const geometries = this.geometry.values;\n  let i;\n\n  if (this.createPrimitive) {\n    const geometriesLength = geometries.length;\n    if (geometriesLength > 0) {\n      if (defined(primitive)) {\n        // Keep a handle to the old primitive so it can be removed when the updated version is ready.\n        if (!defined(this.oldPrimitive)) {\n          this.oldPrimitive = primitive;\n        } else {\n          // For if the new primitive changes again before it is ready.\n          primitives.remove(primitive);\n        }\n      }\n\n      this.material = MaterialProperty.getValue(\n        time,\n        this.materialProperty,\n        this.material\n      );\n\n      primitive = new GroundPrimitive({\n        show: false,\n        asynchronous: true,\n        geometryInstances: geometries.slice(),\n        appearance: new this.appearanceType({\n          material: this.material,\n          // translucent and closed properties overridden\n        }),\n        classificationType: this.classificationType,\n      });\n\n      primitives.add(primitive, this.zIndex);\n      isUpdated = false;\n    } else {\n      if (defined(primitive)) {\n        primitives.remove(primitive);\n        primitive = undefined;\n      }\n      const oldPrimitive = this.oldPrimitive;\n      if (defined(oldPrimitive)) {\n        primitives.remove(oldPrimitive);\n        this.oldPrimitive = undefined;\n      }\n    }\n\n    this.attributes.removeAll();\n    this.primitive = primitive;\n    this.createPrimitive = false;\n  } else if (defined(primitive) && primitive.ready) {\n    primitive.show = true;\n    if (defined(this.oldPrimitive)) {\n      primitives.remove(this.oldPrimitive);\n      this.oldPrimitive = undefined;\n    }\n\n    this.material = MaterialProperty.getValue(\n      time,\n      this.materialProperty,\n      this.material\n    );\n    this.primitive.appearance.material = this.material;\n\n    const updatersWithAttributes = this.updatersWithAttributes.values;\n    const length = updatersWithAttributes.length;\n    for (i = 0; i < length; i++) {\n      const updater = updatersWithAttributes[i];\n      const entity = updater.entity;\n      const instance = this.geometry.get(updater.id);\n\n      let attributes = this.attributes.get(instance.id.id);\n      if (!defined(attributes)) {\n        attributes = primitive.getGeometryInstanceAttributes(instance.id);\n        this.attributes.set(instance.id.id, attributes);\n      }\n\n      const show =\n        entity.isShowing && (updater.hasConstantFill || updater.isFilled(time));\n      const currentShow = attributes.show[0] === 1;\n      if (show !== currentShow) {\n        attributes.show = ShowGeometryInstanceAttribute.toValue(\n          show,\n          attributes.show\n        );\n      }\n\n      const distanceDisplayConditionProperty =\n        updater.distanceDisplayConditionProperty;\n      if (!Property.isConstant(distanceDisplayConditionProperty)) {\n        const distanceDisplayCondition = Property.getValueOrDefault(\n          distanceDisplayConditionProperty,\n          time,\n          defaultDistanceDisplayCondition,\n          distanceDisplayConditionScratch\n        );\n        if (\n          !DistanceDisplayCondition.equals(\n            distanceDisplayCondition,\n            attributes._lastDistanceDisplayCondition\n          )\n        ) {\n          attributes._lastDistanceDisplayCondition = DistanceDisplayCondition.clone(\n            distanceDisplayCondition,\n            attributes._lastDistanceDisplayCondition\n          );\n          attributes.distanceDisplayCondition = DistanceDisplayConditionGeometryInstanceAttribute.toValue(\n            distanceDisplayCondition,\n            attributes.distanceDisplayCondition\n          );\n        }\n      }\n    }\n\n    this.updateShows(primitive);\n  } else if (defined(primitive) && !primitive.ready) {\n    isUpdated = false;\n  }\n  return isUpdated;\n};\n\nBatch.prototype.updateShows = function (primitive) {\n  const showsUpdated = this.showsUpdated.values;\n  const length = showsUpdated.length;\n  for (let i = 0; i < length; i++) {\n    const updater = showsUpdated[i];\n    const entity = updater.entity;\n    const instance = this.geometry.get(updater.id);\n\n    let attributes = this.attributes.get(instance.id.id);\n    if (!defined(attributes)) {\n      attributes = primitive.getGeometryInstanceAttributes(instance.id);\n      this.attributes.set(instance.id.id, attributes);\n    }\n\n    const show = entity.isShowing;\n    const currentShow = attributes.show[0] === 1;\n    if (show !== currentShow) {\n      attributes.show = ShowGeometryInstanceAttribute.toValue(\n        show,\n        attributes.show\n      );\n      instance.attributes.show.value[0] = attributes.show[0];\n    }\n  }\n  this.showsUpdated.removeAll();\n};\n\nBatch.prototype.contains = function (updater) {\n  return this.updaters.contains(updater.id);\n};\n\nBatch.prototype.getBoundingSphere = function (updater, result) {\n  const primitive = this.primitive;\n  if (!primitive.ready) {\n    return BoundingSphereState.PENDING;\n  }\n  const attributes = primitive.getGeometryInstanceAttributes(updater.entity);\n  if (\n    !defined(attributes) ||\n    !defined(attributes.boundingSphere) ||\n    (defined(attributes.show) && attributes.show[0] === 0)\n  ) {\n    return BoundingSphereState.FAILED;\n  }\n  attributes.boundingSphere.clone(result);\n  return BoundingSphereState.DONE;\n};\n\nBatch.prototype.destroy = function () {\n  const primitive = this.primitive;\n  const primitives = this.primitives;\n  if (defined(primitive)) {\n    primitives.remove(primitive);\n  }\n  const oldPrimitive = this.oldPrimitive;\n  if (defined(oldPrimitive)) {\n    primitives.remove(oldPrimitive);\n  }\n  this.removeMaterialSubscription();\n};\n\n/**\n * @private\n */\nfunction StaticGroundGeometryPerMaterialBatch(\n  primitives,\n  classificationType,\n  appearanceType\n) {\n  this._items = [];\n  this._primitives = primitives;\n  this._classificationType = classificationType;\n  this._appearanceType = appearanceType;\n}\n\nStaticGroundGeometryPerMaterialBatch.prototype.add = function (time, updater) {\n  const items = this._items;\n  const length = items.length;\n  const geometryInstance = updater.createFillGeometryInstance(time);\n  const usingSphericalTextureCoordinates = ShadowVolumeAppearance.shouldUseSphericalCoordinates(\n    geometryInstance.geometry.rectangle\n  );\n  const zIndex = Property.getValueOrDefault(updater.zIndex, 0);\n  // Check if the Entity represented by the updater can be placed in an existing batch. Requirements:\n  // * compatible material (same material or same color)\n  // * same type of texture coordinates (spherical vs. planar)\n  // * conservatively non-overlapping with any entities in the existing batch\n  for (let i = 0; i < length; ++i) {\n    const item = items[i];\n    if (\n      item.isMaterial(updater) &&\n      item.usingSphericalTextureCoordinates ===\n        usingSphericalTextureCoordinates &&\n      item.zIndex === zIndex &&\n      !item.overlapping(geometryInstance.geometry.rectangle)\n    ) {\n      item.add(time, updater, geometryInstance);\n      return;\n    }\n  }\n  // If a compatible batch wasn't found, create a new batch.\n  const batch = new Batch(\n    this._primitives,\n    this._classificationType,\n    this._appearanceType,\n    updater.fillMaterialProperty,\n    usingSphericalTextureCoordinates,\n    zIndex\n  );\n  batch.add(time, updater, geometryInstance);\n  items.push(batch);\n};\n\nStaticGroundGeometryPerMaterialBatch.prototype.remove = function (updater) {\n  const items = this._items;\n  const length = items.length;\n  for (let i = length - 1; i >= 0; i--) {\n    const item = items[i];\n    if (item.remove(updater)) {\n      if (item.updaters.length === 0) {\n        items.splice(i, 1);\n        item.destroy();\n      }\n      break;\n    }\n  }\n};\n\nStaticGroundGeometryPerMaterialBatch.prototype.update = function (time) {\n  let i;\n  const items = this._items;\n  const length = items.length;\n\n  for (i = length - 1; i >= 0; i--) {\n    const item = items[i];\n    if (item.invalidated) {\n      items.splice(i, 1);\n      const updaters = item.updaters.values;\n      const updatersLength = updaters.length;\n      for (let h = 0; h < updatersLength; h++) {\n        this.add(time, updaters[h]);\n      }\n      item.destroy();\n    }\n  }\n\n  let isUpdated = true;\n  for (i = 0; i < items.length; i++) {\n    isUpdated = items[i].update(time) && isUpdated;\n  }\n  return isUpdated;\n};\n\nStaticGroundGeometryPerMaterialBatch.prototype.getBoundingSphere = function (\n  updater,\n  result\n) {\n  const items = this._items;\n  const length = items.length;\n  for (let i = 0; i < length; i++) {\n    const item = items[i];\n    if (item.contains(updater)) {\n      return item.getBoundingSphere(updater, result);\n    }\n  }\n  return BoundingSphereState.FAILED;\n};\n\nStaticGroundGeometryPerMaterialBatch.prototype.removeAllPrimitives = function () {\n  const items = this._items;\n  const length = items.length;\n  for (let i = 0; i < length; i++) {\n    items[i].destroy();\n  }\n  this._items.length = 0;\n};\nexport default StaticGroundGeometryPerMaterialBatch;\n","import AssociativeArray from \"../Core/AssociativeArray.js\";\nimport Color from \"../Core/Color.js\";\nimport ColorGeometryInstanceAttribute from \"../Core/ColorGeometryInstanceAttribute.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DistanceDisplayCondition from \"../Core/DistanceDisplayCondition.js\";\nimport DistanceDisplayConditionGeometryInstanceAttribute from \"../Core/DistanceDisplayConditionGeometryInstanceAttribute.js\";\nimport ShowGeometryInstanceAttribute from \"../Core/ShowGeometryInstanceAttribute.js\";\nimport GroundPolylinePrimitive from \"../Scene/GroundPolylinePrimitive.js\";\nimport PolylineColorAppearance from \"../Scene/PolylineColorAppearance.js\";\nimport PolylineMaterialAppearance from \"../Scene/PolylineMaterialAppearance.js\";\nimport BoundingSphereState from \"./BoundingSphereState.js\";\nimport ColorMaterialProperty from \"./ColorMaterialProperty.js\";\nimport MaterialProperty from \"./MaterialProperty.js\";\nimport Property from \"./Property.js\";\n\nconst scratchColor = new Color();\nconst distanceDisplayConditionScratch = new DistanceDisplayCondition();\nconst defaultDistanceDisplayCondition = new DistanceDisplayCondition();\n\n// Encapsulates a Primitive and all the entities that it represents.\nfunction Batch(\n  orderedGroundPrimitives,\n  classificationType,\n  materialProperty,\n  zIndex,\n  asynchronous\n) {\n  let appearanceType;\n  if (materialProperty instanceof ColorMaterialProperty) {\n    appearanceType = PolylineColorAppearance;\n  } else {\n    appearanceType = PolylineMaterialAppearance;\n  }\n\n  this.orderedGroundPrimitives = orderedGroundPrimitives; // scene level primitive collection\n  this.classificationType = classificationType;\n  this.appearanceType = appearanceType;\n  this.materialProperty = materialProperty;\n  this.updaters = new AssociativeArray();\n  this.createPrimitive = true;\n  this.primitive = undefined; // a GroundPolylinePrimitive encapsulating all the entities\n  this.oldPrimitive = undefined;\n  this.geometry = new AssociativeArray();\n  this.material = undefined;\n  this.updatersWithAttributes = new AssociativeArray();\n  this.attributes = new AssociativeArray();\n  this.invalidated = false;\n  this.removeMaterialSubscription = materialProperty.definitionChanged.addEventListener(\n    Batch.prototype.onMaterialChanged,\n    this\n  );\n  this.subscriptions = new AssociativeArray();\n  this.showsUpdated = new AssociativeArray();\n  this.zIndex = zIndex;\n\n  this._asynchronous = asynchronous;\n}\n\nBatch.prototype.onMaterialChanged = function () {\n  this.invalidated = true;\n};\n\n// Check if the given updater's material is compatible with this batch\nBatch.prototype.isMaterial = function (updater) {\n  const material = this.materialProperty;\n  const updaterMaterial = updater.fillMaterialProperty;\n\n  if (\n    updaterMaterial === material ||\n    (updaterMaterial instanceof ColorMaterialProperty &&\n      material instanceof ColorMaterialProperty)\n  ) {\n    return true;\n  }\n  return defined(material) && material.equals(updaterMaterial);\n};\n\nBatch.prototype.add = function (time, updater, geometryInstance) {\n  const id = updater.id;\n  this.updaters.set(id, updater);\n  this.geometry.set(id, geometryInstance);\n  // Updaters with dynamic attributes must be tracked separately, may exit the batch\n  if (\n    !updater.hasConstantFill ||\n    !updater.fillMaterialProperty.isConstant ||\n    !Property.isConstant(updater.distanceDisplayConditionProperty)\n  ) {\n    this.updatersWithAttributes.set(id, updater);\n  } else {\n    const that = this;\n    // Listen for show changes. These will be synchronized in updateShows.\n    this.subscriptions.set(\n      id,\n      updater.entity.definitionChanged.addEventListener(function (\n        entity,\n        propertyName,\n        newValue,\n        oldValue\n      ) {\n        if (propertyName === \"isShowing\") {\n          that.showsUpdated.set(updater.id, updater);\n        }\n      })\n    );\n  }\n  this.createPrimitive = true;\n};\n\nBatch.prototype.remove = function (updater) {\n  const id = updater.id;\n  this.createPrimitive = this.geometry.remove(id) || this.createPrimitive;\n  if (this.updaters.remove(id)) {\n    this.updatersWithAttributes.remove(id);\n    const unsubscribe = this.subscriptions.get(id);\n    if (defined(unsubscribe)) {\n      unsubscribe();\n      this.subscriptions.remove(id);\n    }\n    return true;\n  }\n  return false;\n};\n\nBatch.prototype.update = function (time) {\n  let isUpdated = true;\n  let primitive = this.primitive;\n  const orderedGroundPrimitives = this.orderedGroundPrimitives;\n  const geometries = this.geometry.values;\n  let i;\n\n  if (this.createPrimitive) {\n    const geometriesLength = geometries.length;\n    if (geometriesLength > 0) {\n      if (defined(primitive)) {\n        // Keep a handle to the old primitive so it can be removed when the updated version is ready.\n        if (!defined(this.oldPrimitive)) {\n          this.oldPrimitive = primitive;\n        } else {\n          // For if the new primitive changes again before it is ready.\n          orderedGroundPrimitives.remove(primitive);\n        }\n      }\n\n      primitive = new GroundPolylinePrimitive({\n        show: false,\n        asynchronous: this._asynchronous,\n        geometryInstances: geometries.slice(),\n        appearance: new this.appearanceType(),\n        classificationType: this.classificationType,\n      });\n\n      if (this.appearanceType === PolylineMaterialAppearance) {\n        this.material = MaterialProperty.getValue(\n          time,\n          this.materialProperty,\n          this.material\n        );\n        primitive.appearance.material = this.material;\n      }\n\n      orderedGroundPrimitives.add(primitive, this.zIndex);\n      isUpdated = false;\n    } else {\n      if (defined(primitive)) {\n        orderedGroundPrimitives.remove(primitive);\n        primitive = undefined;\n      }\n      const oldPrimitive = this.oldPrimitive;\n      if (defined(oldPrimitive)) {\n        orderedGroundPrimitives.remove(oldPrimitive);\n        this.oldPrimitive = undefined;\n      }\n    }\n\n    this.attributes.removeAll();\n    this.primitive = primitive;\n    this.createPrimitive = false;\n  } else if (defined(primitive) && primitive.ready) {\n    primitive.show = true;\n    if (defined(this.oldPrimitive)) {\n      orderedGroundPrimitives.remove(this.oldPrimitive);\n      this.oldPrimitive = undefined;\n    }\n\n    if (this.appearanceType === PolylineMaterialAppearance) {\n      this.material = MaterialProperty.getValue(\n        time,\n        this.materialProperty,\n        this.material\n      );\n      this.primitive.appearance.material = this.material;\n    }\n    const updatersWithAttributes = this.updatersWithAttributes.values;\n    const length = updatersWithAttributes.length;\n    for (i = 0; i < length; i++) {\n      const updater = updatersWithAttributes[i];\n      const entity = updater.entity;\n      const instance = this.geometry.get(updater.id);\n\n      let attributes = this.attributes.get(instance.id.id);\n      if (!defined(attributes)) {\n        attributes = primitive.getGeometryInstanceAttributes(instance.id);\n        this.attributes.set(instance.id.id, attributes);\n      }\n\n      if (!updater.fillMaterialProperty.isConstant) {\n        const colorProperty = updater.fillMaterialProperty.color;\n        const resultColor = Property.getValueOrDefault(\n          colorProperty,\n          time,\n          Color.WHITE,\n          scratchColor\n        );\n        if (!Color.equals(attributes._lastColor, resultColor)) {\n          attributes._lastColor = Color.clone(\n            resultColor,\n            attributes._lastColor\n          );\n          attributes.color = ColorGeometryInstanceAttribute.toValue(\n            resultColor,\n            attributes.color\n          );\n        }\n      }\n\n      const show =\n        entity.isShowing && (updater.hasConstantFill || updater.isFilled(time));\n      const currentShow = attributes.show[0] === 1;\n      if (show !== currentShow) {\n        attributes.show = ShowGeometryInstanceAttribute.toValue(\n          show,\n          attributes.show\n        );\n      }\n\n      const distanceDisplayConditionProperty =\n        updater.distanceDisplayConditionProperty;\n      if (!Property.isConstant(distanceDisplayConditionProperty)) {\n        const distanceDisplayCondition = Property.getValueOrDefault(\n          distanceDisplayConditionProperty,\n          time,\n          defaultDistanceDisplayCondition,\n          distanceDisplayConditionScratch\n        );\n        if (\n          !DistanceDisplayCondition.equals(\n            distanceDisplayCondition,\n            attributes._lastDistanceDisplayCondition\n          )\n        ) {\n          attributes._lastDistanceDisplayCondition = DistanceDisplayCondition.clone(\n            distanceDisplayCondition,\n            attributes._lastDistanceDisplayCondition\n          );\n          attributes.distanceDisplayCondition = DistanceDisplayConditionGeometryInstanceAttribute.toValue(\n            distanceDisplayCondition,\n            attributes.distanceDisplayCondition\n          );\n        }\n      }\n    }\n\n    this.updateShows(primitive);\n  } else if (defined(primitive) && !primitive.ready) {\n    isUpdated = false;\n  }\n  return isUpdated;\n};\n\nBatch.prototype.updateShows = function (primitive) {\n  const showsUpdated = this.showsUpdated.values;\n  const length = showsUpdated.length;\n  for (let i = 0; i < length; i++) {\n    const updater = showsUpdated[i];\n    const entity = updater.entity;\n    const instance = this.geometry.get(updater.id);\n\n    let attributes = this.attributes.get(instance.id.id);\n    if (!defined(attributes)) {\n      attributes = primitive.getGeometryInstanceAttributes(instance.id);\n      this.attributes.set(instance.id.id, attributes);\n    }\n\n    const show = entity.isShowing;\n    const currentShow = attributes.show[0] === 1;\n    if (show !== currentShow) {\n      attributes.show = ShowGeometryInstanceAttribute.toValue(\n        show,\n        attributes.show\n      );\n      instance.attributes.show.value[0] = attributes.show[0];\n    }\n  }\n  this.showsUpdated.removeAll();\n};\n\nBatch.prototype.contains = function (updater) {\n  return this.updaters.contains(updater.id);\n};\n\nBatch.prototype.getBoundingSphere = function (updater, result) {\n  const primitive = this.primitive;\n  if (!primitive.ready) {\n    return BoundingSphereState.PENDING;\n  }\n  const attributes = primitive.getGeometryInstanceAttributes(updater.entity);\n  if (\n    !defined(attributes) ||\n    !defined(attributes.boundingSphere) ||\n    (defined(attributes.show) && attributes.show[0] === 0)\n  ) {\n    return BoundingSphereState.FAILED;\n  }\n  attributes.boundingSphere.clone(result);\n  return BoundingSphereState.DONE;\n};\n\nBatch.prototype.destroy = function () {\n  const primitive = this.primitive;\n  const orderedGroundPrimitives = this.orderedGroundPrimitives;\n  if (defined(primitive)) {\n    orderedGroundPrimitives.remove(primitive);\n  }\n  const oldPrimitive = this.oldPrimitive;\n  if (defined(oldPrimitive)) {\n    orderedGroundPrimitives.remove(oldPrimitive);\n  }\n  this.removeMaterialSubscription();\n};\n\n/**\n * @private\n */\nfunction StaticGroundPolylinePerMaterialBatch(\n  orderedGroundPrimitives,\n  classificationType,\n  asynchronous\n) {\n  this._items = [];\n  this._orderedGroundPrimitives = orderedGroundPrimitives;\n  this._classificationType = classificationType;\n  this._asynchronous = defaultValue(asynchronous, true);\n}\n\nStaticGroundPolylinePerMaterialBatch.prototype.add = function (time, updater) {\n  const items = this._items;\n  const length = items.length;\n  const geometryInstance = updater.createFillGeometryInstance(time);\n  const zIndex = Property.getValueOrDefault(updater.zIndex, 0);\n  // Check if the Entity represented by the updater has the same material or a material representable with per-instance color.\n  for (let i = 0; i < length; ++i) {\n    const item = items[i];\n    if (item.isMaterial(updater) && item.zIndex === zIndex) {\n      item.add(time, updater, geometryInstance);\n      return;\n    }\n  }\n  // If a compatible batch wasn't found, create a new batch.\n  const batch = new Batch(\n    this._orderedGroundPrimitives,\n    this._classificationType,\n    updater.fillMaterialProperty,\n    zIndex,\n    this._asynchronous\n  );\n  batch.add(time, updater, geometryInstance);\n  items.push(batch);\n};\n\nStaticGroundPolylinePerMaterialBatch.prototype.remove = function (updater) {\n  const items = this._items;\n  const length = items.length;\n  for (let i = length - 1; i >= 0; i--) {\n    const item = items[i];\n    if (item.remove(updater)) {\n      if (item.updaters.length === 0) {\n        items.splice(i, 1);\n        item.destroy();\n      }\n      break;\n    }\n  }\n};\n\nStaticGroundPolylinePerMaterialBatch.prototype.update = function (time) {\n  let i;\n  const items = this._items;\n  const length = items.length;\n\n  for (i = length - 1; i >= 0; i--) {\n    const item = items[i];\n    if (item.invalidated) {\n      items.splice(i, 1);\n      const updaters = item.updaters.values;\n      const updatersLength = updaters.length;\n      for (let h = 0; h < updatersLength; h++) {\n        this.add(time, updaters[h]);\n      }\n      item.destroy();\n    }\n  }\n\n  let isUpdated = true;\n  for (i = 0; i < items.length; i++) {\n    isUpdated = items[i].update(time) && isUpdated;\n  }\n  return isUpdated;\n};\n\nStaticGroundPolylinePerMaterialBatch.prototype.getBoundingSphere = function (\n  updater,\n  result\n) {\n  const items = this._items;\n  const length = items.length;\n  for (let i = 0; i < length; i++) {\n    const item = items[i];\n    if (item.contains(updater)) {\n      return item.getBoundingSphere(updater, result);\n    }\n  }\n  return BoundingSphereState.FAILED;\n};\n\nStaticGroundPolylinePerMaterialBatch.prototype.removeAllPrimitives = function () {\n  const items = this._items;\n  const length = items.length;\n  for (let i = 0; i < length; i++) {\n    items[i].destroy();\n  }\n  this._items.length = 0;\n};\nexport default StaticGroundPolylinePerMaterialBatch;\n","import AssociativeArray from \"../Core/AssociativeArray.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Color from \"../Core/Color.js\";\nimport ColorGeometryInstanceAttribute from \"../Core/ColorGeometryInstanceAttribute.js\";\nimport defined from \"../Core/defined.js\";\nimport DistanceDisplayCondition from \"../Core/DistanceDisplayCondition.js\";\nimport DistanceDisplayConditionGeometryInstanceAttribute from \"../Core/DistanceDisplayConditionGeometryInstanceAttribute.js\";\nimport OffsetGeometryInstanceAttribute from \"../Core/OffsetGeometryInstanceAttribute.js\";\nimport ShowGeometryInstanceAttribute from \"../Core/ShowGeometryInstanceAttribute.js\";\nimport PerInstanceColorAppearance from \"../Scene/PerInstanceColorAppearance.js\";\nimport Primitive from \"../Scene/Primitive.js\";\nimport BoundingSphereState from \"./BoundingSphereState.js\";\nimport Property from \"./Property.js\";\n\nconst colorScratch = new Color();\nconst distanceDisplayConditionScratch = new DistanceDisplayCondition();\nconst defaultDistanceDisplayCondition = new DistanceDisplayCondition();\nconst defaultOffset = Cartesian3.ZERO;\nconst offsetScratch = new Cartesian3();\n\nfunction Batch(primitives, translucent, width, shadows) {\n  this.translucent = translucent;\n  this.width = width;\n  this.shadows = shadows;\n  this.primitives = primitives;\n  this.createPrimitive = false;\n  this.waitingOnCreate = false;\n  this.primitive = undefined;\n  this.oldPrimitive = undefined;\n  this.geometry = new AssociativeArray();\n  this.updaters = new AssociativeArray();\n  this.updatersWithAttributes = new AssociativeArray();\n  this.attributes = new AssociativeArray();\n  this.itemsToRemove = [];\n  this.subscriptions = new AssociativeArray();\n  this.showsUpdated = new AssociativeArray();\n}\nBatch.prototype.add = function (updater, instance) {\n  const id = updater.id;\n  this.createPrimitive = true;\n  this.geometry.set(id, instance);\n  this.updaters.set(id, updater);\n  if (\n    !updater.hasConstantOutline ||\n    !updater.outlineColorProperty.isConstant ||\n    !Property.isConstant(updater.distanceDisplayConditionProperty) ||\n    !Property.isConstant(updater.terrainOffsetProperty)\n  ) {\n    this.updatersWithAttributes.set(id, updater);\n  } else {\n    const that = this;\n    this.subscriptions.set(\n      id,\n      updater.entity.definitionChanged.addEventListener(function (\n        entity,\n        propertyName,\n        newValue,\n        oldValue\n      ) {\n        if (propertyName === \"isShowing\") {\n          that.showsUpdated.set(updater.id, updater);\n        }\n      })\n    );\n  }\n};\n\nBatch.prototype.remove = function (updater) {\n  const id = updater.id;\n  this.createPrimitive = this.geometry.remove(id) || this.createPrimitive;\n  if (this.updaters.remove(id)) {\n    this.updatersWithAttributes.remove(id);\n    const unsubscribe = this.subscriptions.get(id);\n    if (defined(unsubscribe)) {\n      unsubscribe();\n      this.subscriptions.remove(id);\n      this.showsUpdated.remove(id);\n    }\n    return true;\n  }\n  return false;\n};\n\nBatch.prototype.update = function (time) {\n  let isUpdated = true;\n  let removedCount = 0;\n  let primitive = this.primitive;\n  const primitives = this.primitives;\n  let i;\n\n  if (this.createPrimitive) {\n    const geometries = this.geometry.values;\n    const geometriesLength = geometries.length;\n    if (geometriesLength > 0) {\n      if (defined(primitive)) {\n        if (!defined(this.oldPrimitive)) {\n          this.oldPrimitive = primitive;\n        } else {\n          primitives.remove(primitive);\n        }\n      }\n\n      primitive = new Primitive({\n        show: false,\n        asynchronous: true,\n        geometryInstances: geometries.slice(),\n        appearance: new PerInstanceColorAppearance({\n          flat: true,\n          translucent: this.translucent,\n          renderState: {\n            lineWidth: this.width,\n          },\n        }),\n        shadows: this.shadows,\n      });\n\n      primitives.add(primitive);\n      isUpdated = false;\n    } else {\n      if (defined(primitive)) {\n        primitives.remove(primitive);\n        primitive = undefined;\n      }\n      const oldPrimitive = this.oldPrimitive;\n      if (defined(oldPrimitive)) {\n        primitives.remove(oldPrimitive);\n        this.oldPrimitive = undefined;\n      }\n    }\n\n    this.attributes.removeAll();\n    this.primitive = primitive;\n    this.createPrimitive = false;\n    this.waitingOnCreate = true;\n  } else if (defined(primitive) && primitive.ready) {\n    primitive.show = true;\n    if (defined(this.oldPrimitive)) {\n      primitives.remove(this.oldPrimitive);\n      this.oldPrimitive = undefined;\n    }\n\n    const updatersWithAttributes = this.updatersWithAttributes.values;\n    const length = updatersWithAttributes.length;\n    const waitingOnCreate = this.waitingOnCreate;\n    for (i = 0; i < length; i++) {\n      const updater = updatersWithAttributes[i];\n      const instance = this.geometry.get(updater.id);\n\n      let attributes = this.attributes.get(instance.id.id);\n      if (!defined(attributes)) {\n        attributes = primitive.getGeometryInstanceAttributes(instance.id);\n        this.attributes.set(instance.id.id, attributes);\n      }\n\n      if (!updater.outlineColorProperty.isConstant || waitingOnCreate) {\n        const outlineColorProperty = updater.outlineColorProperty;\n        const outlineColor = Property.getValueOrDefault(\n          outlineColorProperty,\n          time,\n          Color.WHITE,\n          colorScratch\n        );\n        if (!Color.equals(attributes._lastColor, outlineColor)) {\n          attributes._lastColor = Color.clone(\n            outlineColor,\n            attributes._lastColor\n          );\n          attributes.color = ColorGeometryInstanceAttribute.toValue(\n            outlineColor,\n            attributes.color\n          );\n          if (\n            (this.translucent && attributes.color[3] === 255) ||\n            (!this.translucent && attributes.color[3] !== 255)\n          ) {\n            this.itemsToRemove[removedCount++] = updater;\n          }\n        }\n      }\n\n      const show =\n        updater.entity.isShowing &&\n        (updater.hasConstantOutline || updater.isOutlineVisible(time));\n      const currentShow = attributes.show[0] === 1;\n      if (show !== currentShow) {\n        attributes.show = ShowGeometryInstanceAttribute.toValue(\n          show,\n          attributes.show\n        );\n      }\n\n      const distanceDisplayConditionProperty =\n        updater.distanceDisplayConditionProperty;\n      if (!Property.isConstant(distanceDisplayConditionProperty)) {\n        const distanceDisplayCondition = Property.getValueOrDefault(\n          distanceDisplayConditionProperty,\n          time,\n          defaultDistanceDisplayCondition,\n          distanceDisplayConditionScratch\n        );\n        if (\n          !DistanceDisplayCondition.equals(\n            distanceDisplayCondition,\n            attributes._lastDistanceDisplayCondition\n          )\n        ) {\n          attributes._lastDistanceDisplayCondition = DistanceDisplayCondition.clone(\n            distanceDisplayCondition,\n            attributes._lastDistanceDisplayCondition\n          );\n          attributes.distanceDisplayCondition = DistanceDisplayConditionGeometryInstanceAttribute.toValue(\n            distanceDisplayCondition,\n            attributes.distanceDisplayCondition\n          );\n        }\n      }\n\n      const offsetProperty = updater.terrainOffsetProperty;\n      if (!Property.isConstant(offsetProperty)) {\n        const offset = Property.getValueOrDefault(\n          offsetProperty,\n          time,\n          defaultOffset,\n          offsetScratch\n        );\n        if (!Cartesian3.equals(offset, attributes._lastOffset)) {\n          attributes._lastOffset = Cartesian3.clone(\n            offset,\n            attributes._lastOffset\n          );\n          attributes.offset = OffsetGeometryInstanceAttribute.toValue(\n            offset,\n            attributes.offset\n          );\n        }\n      }\n    }\n\n    this.updateShows(primitive);\n    this.waitingOnCreate = false;\n  } else if (defined(primitive) && !primitive.ready) {\n    isUpdated = false;\n  }\n\n  this.itemsToRemove.length = removedCount;\n  return isUpdated;\n};\n\nBatch.prototype.updateShows = function (primitive) {\n  const showsUpdated = this.showsUpdated.values;\n  const length = showsUpdated.length;\n  for (let i = 0; i < length; i++) {\n    const updater = showsUpdated[i];\n    const instance = this.geometry.get(updater.id);\n\n    let attributes = this.attributes.get(instance.id.id);\n    if (!defined(attributes)) {\n      attributes = primitive.getGeometryInstanceAttributes(instance.id);\n      this.attributes.set(instance.id.id, attributes);\n    }\n\n    const show = updater.entity.isShowing;\n    const currentShow = attributes.show[0] === 1;\n    if (show !== currentShow) {\n      attributes.show = ShowGeometryInstanceAttribute.toValue(\n        show,\n        attributes.show\n      );\n      instance.attributes.show.value[0] = attributes.show[0];\n    }\n  }\n  this.showsUpdated.removeAll();\n};\n\nBatch.prototype.contains = function (updater) {\n  return this.updaters.contains(updater.id);\n};\n\nBatch.prototype.getBoundingSphere = function (updater, result) {\n  const primitive = this.primitive;\n  if (!primitive.ready) {\n    return BoundingSphereState.PENDING;\n  }\n  const attributes = primitive.getGeometryInstanceAttributes(updater.entity);\n  if (\n    !defined(attributes) ||\n    !defined(attributes.boundingSphere) || //\n    (defined(attributes.show) && attributes.show[0] === 0)\n  ) {\n    return BoundingSphereState.FAILED;\n  }\n  attributes.boundingSphere.clone(result);\n  return BoundingSphereState.DONE;\n};\n\nBatch.prototype.removeAllPrimitives = function () {\n  const primitives = this.primitives;\n\n  const primitive = this.primitive;\n  if (defined(primitive)) {\n    primitives.remove(primitive);\n    this.primitive = undefined;\n    this.geometry.removeAll();\n    this.updaters.removeAll();\n  }\n\n  const oldPrimitive = this.oldPrimitive;\n  if (defined(oldPrimitive)) {\n    primitives.remove(oldPrimitive);\n    this.oldPrimitive = undefined;\n  }\n};\n\n/**\n * @private\n */\nfunction StaticOutlineGeometryBatch(primitives, scene, shadows) {\n  this._primitives = primitives;\n  this._scene = scene;\n  this._shadows = shadows;\n  this._solidBatches = new AssociativeArray();\n  this._translucentBatches = new AssociativeArray();\n}\nStaticOutlineGeometryBatch.prototype.add = function (time, updater) {\n  const instance = updater.createOutlineGeometryInstance(time);\n  const width = this._scene.clampLineWidth(updater.outlineWidth);\n  let batches;\n  let batch;\n  if (instance.attributes.color.value[3] === 255) {\n    batches = this._solidBatches;\n    batch = batches.get(width);\n    if (!defined(batch)) {\n      batch = new Batch(this._primitives, false, width, this._shadows);\n      batches.set(width, batch);\n    }\n    batch.add(updater, instance);\n  } else {\n    batches = this._translucentBatches;\n    batch = batches.get(width);\n    if (!defined(batch)) {\n      batch = new Batch(this._primitives, true, width, this._shadows);\n      batches.set(width, batch);\n    }\n    batch.add(updater, instance);\n  }\n};\n\nStaticOutlineGeometryBatch.prototype.remove = function (updater) {\n  let i;\n\n  const solidBatches = this._solidBatches.values;\n  const solidBatchesLength = solidBatches.length;\n  for (i = 0; i < solidBatchesLength; i++) {\n    if (solidBatches[i].remove(updater)) {\n      return;\n    }\n  }\n\n  const translucentBatches = this._translucentBatches.values;\n  const translucentBatchesLength = translucentBatches.length;\n  for (i = 0; i < translucentBatchesLength; i++) {\n    if (translucentBatches[i].remove(updater)) {\n      return;\n    }\n  }\n};\n\nStaticOutlineGeometryBatch.prototype.update = function (time) {\n  let i;\n  let x;\n  let updater;\n  let batch;\n  const solidBatches = this._solidBatches.values;\n  const solidBatchesLength = solidBatches.length;\n  const translucentBatches = this._translucentBatches.values;\n  const translucentBatchesLength = translucentBatches.length;\n  let itemsToRemove;\n  let isUpdated = true;\n  let needUpdate = false;\n\n  do {\n    needUpdate = false;\n    for (x = 0; x < solidBatchesLength; x++) {\n      batch = solidBatches[x];\n      //Perform initial update\n      isUpdated = batch.update(time);\n\n      //If any items swapped between solid/translucent, we need to\n      //move them between batches\n      itemsToRemove = batch.itemsToRemove;\n      const solidsToMoveLength = itemsToRemove.length;\n      if (solidsToMoveLength > 0) {\n        needUpdate = true;\n        for (i = 0; i < solidsToMoveLength; i++) {\n          updater = itemsToRemove[i];\n          batch.remove(updater);\n          this.add(time, updater);\n        }\n      }\n    }\n    for (x = 0; x < translucentBatchesLength; x++) {\n      batch = translucentBatches[x];\n      //Perform initial update\n      isUpdated = batch.update(time);\n\n      //If any items swapped between solid/translucent, we need to\n      //move them between batches\n      itemsToRemove = batch.itemsToRemove;\n      const translucentToMoveLength = itemsToRemove.length;\n      if (translucentToMoveLength > 0) {\n        needUpdate = true;\n        for (i = 0; i < translucentToMoveLength; i++) {\n          updater = itemsToRemove[i];\n          batch.remove(updater);\n          this.add(time, updater);\n        }\n      }\n    }\n  } while (needUpdate);\n\n  return isUpdated;\n};\n\nStaticOutlineGeometryBatch.prototype.getBoundingSphere = function (\n  updater,\n  result\n) {\n  let i;\n\n  const solidBatches = this._solidBatches.values;\n  const solidBatchesLength = solidBatches.length;\n  for (i = 0; i < solidBatchesLength; i++) {\n    const solidBatch = solidBatches[i];\n    if (solidBatch.contains(updater)) {\n      return solidBatch.getBoundingSphere(updater, result);\n    }\n  }\n\n  const translucentBatches = this._translucentBatches.values;\n  const translucentBatchesLength = translucentBatches.length;\n  for (i = 0; i < translucentBatchesLength; i++) {\n    const translucentBatch = translucentBatches[i];\n    if (translucentBatch.contains(updater)) {\n      return translucentBatch.getBoundingSphere(updater, result);\n    }\n  }\n\n  return BoundingSphereState.FAILED;\n};\n\nStaticOutlineGeometryBatch.prototype.removeAllPrimitives = function () {\n  let i;\n\n  const solidBatches = this._solidBatches.values;\n  const solidBatchesLength = solidBatches.length;\n  for (i = 0; i < solidBatchesLength; i++) {\n    solidBatches[i].removeAllPrimitives();\n  }\n\n  const translucentBatches = this._translucentBatches.values;\n  const translucentBatchesLength = translucentBatches.length;\n  for (i = 0; i < translucentBatchesLength; i++) {\n    translucentBatches[i].removeAllPrimitives();\n  }\n};\nexport default StaticOutlineGeometryBatch;\n","import Color from \"../Core/Color.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport Event from \"../Core/Event.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport Property from \"./Property.js\";\nimport StripeOrientation from \"./StripeOrientation.js\";\n\nconst defaultOrientation = StripeOrientation.HORIZONTAL;\nconst defaultEvenColor = Color.WHITE;\nconst defaultOddColor = Color.BLACK;\nconst defaultOffset = 0;\nconst defaultRepeat = 1;\n\n/**\n * A {@link MaterialProperty} that maps to stripe {@link Material} uniforms.\n * @alias StripeMaterialProperty\n * @constructor\n *\n * @param {Object} [options] Object with the following properties:\n * @param {Property|StripeOrientation} [options.orientation=StripeOrientation.HORIZONTAL] A Property specifying the {@link StripeOrientation}.\n * @param {Property|Color} [options.evenColor=Color.WHITE] A Property specifying the first {@link Color}.\n * @param {Property|Color} [options.oddColor=Color.BLACK] A Property specifying the second {@link Color}.\n * @param {Property|Number} [options.offset=0] A numeric Property specifying how far into the pattern to start the material.\n * @param {Property|Number} [options.repeat=1] A numeric Property specifying how many times the stripes repeat.\n */\nfunction StripeMaterialProperty(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  this._definitionChanged = new Event();\n  this._orientation = undefined;\n  this._orientationSubscription = undefined;\n  this._evenColor = undefined;\n  this._evenColorSubscription = undefined;\n  this._oddColor = undefined;\n  this._oddColorSubscription = undefined;\n  this._offset = undefined;\n  this._offsetSubscription = undefined;\n  this._repeat = undefined;\n  this._repeatSubscription = undefined;\n\n  this.orientation = options.orientation;\n  this.evenColor = options.evenColor;\n  this.oddColor = options.oddColor;\n  this.offset = options.offset;\n  this.repeat = options.repeat;\n}\n\nObject.defineProperties(StripeMaterialProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof StripeMaterialProperty.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return (\n        Property.isConstant(this._orientation) && //\n        Property.isConstant(this._evenColor) && //\n        Property.isConstant(this._oddColor) && //\n        Property.isConstant(this._offset) && //\n        Property.isConstant(this._repeat)\n      );\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof StripeMaterialProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the Property specifying the {@link StripeOrientation}/\n   * @memberof StripeMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default StripeOrientation.HORIZONTAL\n   */\n  orientation: createPropertyDescriptor(\"orientation\"),\n\n  /**\n   * Gets or sets the Property specifying the first {@link Color}.\n   * @memberof StripeMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default Color.WHITE\n   */\n  evenColor: createPropertyDescriptor(\"evenColor\"),\n\n  /**\n   * Gets or sets the Property specifying the second {@link Color}.\n   * @memberof StripeMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default Color.BLACK\n   */\n  oddColor: createPropertyDescriptor(\"oddColor\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the point into the pattern\n   * to begin drawing; with 0.0 being the beginning of the even color, 1.0 the beginning\n   * of the odd color, 2.0 being the even color again, and any multiple or fractional values\n   * being in between.\n   * @memberof StripeMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default 0.0\n   */\n  offset: createPropertyDescriptor(\"offset\"),\n\n  /**\n   * Gets or sets the numeric Property specifying how many times the stripes repeat.\n   * @memberof StripeMaterialProperty.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  repeat: createPropertyDescriptor(\"repeat\"),\n});\n\n/**\n * Gets the {@link Material} type at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the type.\n * @returns {String} The type of material.\n */\nStripeMaterialProperty.prototype.getType = function (time) {\n  return \"Stripe\";\n};\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nStripeMaterialProperty.prototype.getValue = function (time, result) {\n  if (!defined(result)) {\n    result = {};\n  }\n  result.horizontal =\n    Property.getValueOrDefault(this._orientation, time, defaultOrientation) ===\n    StripeOrientation.HORIZONTAL;\n  result.evenColor = Property.getValueOrClonedDefault(\n    this._evenColor,\n    time,\n    defaultEvenColor,\n    result.evenColor\n  );\n  result.oddColor = Property.getValueOrClonedDefault(\n    this._oddColor,\n    time,\n    defaultOddColor,\n    result.oddColor\n  );\n  result.offset = Property.getValueOrDefault(this._offset, time, defaultOffset);\n  result.repeat = Property.getValueOrDefault(this._repeat, time, defaultRepeat);\n  return result;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nStripeMaterialProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof StripeMaterialProperty && //\n      Property.equals(this._orientation, other._orientation) && //\n      Property.equals(this._evenColor, other._evenColor) && //\n      Property.equals(this._oddColor, other._oddColor) && //\n      Property.equals(this._offset, other._offset) && //\n      Property.equals(this._repeat, other._repeat))\n  );\n};\nexport default StripeMaterialProperty;\n","/**\n * Defined the orientation of stripes in {@link StripeMaterialProperty}.\n *\n * @enum {Number}\n */\nconst StripeOrientation = {\n  /**\n   * Horizontal orientation.\n   * @type {Number}\n   */\n  HORIZONTAL: 0,\n\n  /**\n   * Vertical orientation.\n   * @type {Number}\n   */\n  VERTICAL: 1,\n};\nexport default Object.freeze(StripeOrientation);\n","import Cartesian3 from \"../Core/Cartesian3.js\";\nimport Cartographic from \"../Core/Cartographic.js\";\nimport Check from \"../Core/Check.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport Event from \"../Core/Event.js\";\nimport Iso8601 from \"../Core/Iso8601.js\";\nimport CesiumMath from \"../Core/Math.js\";\nimport HeightReference from \"../Scene/HeightReference.js\";\nimport SceneMode from \"../Scene/SceneMode.js\";\nimport Property from \"./Property.js\";\n\nconst scratchPosition = new Cartesian3();\nconst scratchCarto = new Cartographic();\n\n/**\n * @private\n */\nfunction TerrainOffsetProperty(\n  scene,\n  positionProperty,\n  heightReferenceProperty,\n  extrudedHeightReferenceProperty\n) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"scene\", scene);\n  Check.defined(\"positionProperty\", positionProperty);\n  //>>includeEnd('debug');\n\n  this._scene = scene;\n  this._heightReference = heightReferenceProperty;\n  this._extrudedHeightReference = extrudedHeightReferenceProperty;\n  this._positionProperty = positionProperty;\n\n  this._position = new Cartesian3();\n  this._cartographicPosition = new Cartographic();\n  this._normal = new Cartesian3();\n\n  this._definitionChanged = new Event();\n  this._terrainHeight = 0;\n  this._removeCallbackFunc = undefined;\n  this._removeEventListener = undefined;\n  this._removeModeListener = undefined;\n\n  const that = this;\n  if (defined(scene.globe)) {\n    this._removeEventListener = scene.terrainProviderChanged.addEventListener(\n      function () {\n        that._updateClamping();\n      }\n    );\n    this._removeModeListener = scene.morphComplete.addEventListener(\n      function () {\n        that._updateClamping();\n      }\n    );\n  }\n\n  if (positionProperty.isConstant) {\n    const position = positionProperty.getValue(\n      Iso8601.MINIMUM_VALUE,\n      scratchPosition\n    );\n    if (\n      !defined(position) ||\n      Cartesian3.equals(position, Cartesian3.ZERO) ||\n      !defined(scene.globe)\n    ) {\n      return;\n    }\n    this._position = Cartesian3.clone(position, this._position);\n\n    this._updateClamping();\n\n    this._normal = scene.globe.ellipsoid.geodeticSurfaceNormal(\n      position,\n      this._normal\n    );\n  }\n}\n\nObject.defineProperties(TerrainOffsetProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.\n   * @memberof TerrainOffsetProperty.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return false;\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * @memberof TerrainOffsetProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n});\n\n/**\n * @private\n */\nTerrainOffsetProperty.prototype._updateClamping = function () {\n  if (defined(this._removeCallbackFunc)) {\n    this._removeCallbackFunc();\n  }\n\n  const scene = this._scene;\n  const globe = scene.globe;\n  const position = this._position;\n\n  if (!defined(globe) || Cartesian3.equals(position, Cartesian3.ZERO)) {\n    this._terrainHeight = 0;\n    return;\n  }\n  const ellipsoid = globe.ellipsoid;\n  const surface = globe._surface;\n\n  const that = this;\n  const cartographicPosition = ellipsoid.cartesianToCartographic(\n    position,\n    this._cartographicPosition\n  );\n  const height = globe.getHeight(cartographicPosition);\n  if (defined(height)) {\n    this._terrainHeight = height;\n  } else {\n    this._terrainHeight = 0;\n  }\n\n  function updateFunction(clampedPosition) {\n    if (scene.mode === SceneMode.SCENE3D) {\n      const carto = ellipsoid.cartesianToCartographic(\n        clampedPosition,\n        scratchCarto\n      );\n      that._terrainHeight = carto.height;\n    } else {\n      that._terrainHeight = clampedPosition.x;\n    }\n    that.definitionChanged.raiseEvent();\n  }\n  this._removeCallbackFunc = surface.updateHeight(\n    cartographicPosition,\n    updateFunction\n  );\n};\n\n/**\n * Gets the height relative to the terrain based on the positions.\n *\n * @returns {Cartesian3} The offset\n */\nTerrainOffsetProperty.prototype.getValue = function (time, result) {\n  const heightReference = Property.getValueOrDefault(\n    this._heightReference,\n    time,\n    HeightReference.NONE\n  );\n  const extrudedHeightReference = Property.getValueOrDefault(\n    this._extrudedHeightReference,\n    time,\n    HeightReference.NONE\n  );\n\n  if (\n    heightReference === HeightReference.NONE &&\n    extrudedHeightReference !== HeightReference.RELATIVE_TO_GROUND\n  ) {\n    this._position = Cartesian3.clone(Cartesian3.ZERO, this._position);\n    return Cartesian3.clone(Cartesian3.ZERO, result);\n  }\n\n  if (this._positionProperty.isConstant) {\n    return Cartesian3.multiplyByScalar(\n      this._normal,\n      this._terrainHeight,\n      result\n    );\n  }\n\n  const scene = this._scene;\n  const position = this._positionProperty.getValue(time, scratchPosition);\n  if (\n    !defined(position) ||\n    Cartesian3.equals(position, Cartesian3.ZERO) ||\n    !defined(scene.globe)\n  ) {\n    return Cartesian3.clone(Cartesian3.ZERO, result);\n  }\n\n  if (\n    Cartesian3.equalsEpsilon(this._position, position, CesiumMath.EPSILON10)\n  ) {\n    return Cartesian3.multiplyByScalar(\n      this._normal,\n      this._terrainHeight,\n      result\n    );\n  }\n\n  this._position = Cartesian3.clone(position, this._position);\n\n  this._updateClamping();\n\n  const normal = scene.globe.ellipsoid.geodeticSurfaceNormal(\n    position,\n    this._normal\n  );\n  return Cartesian3.multiplyByScalar(normal, this._terrainHeight, result);\n};\n\nTerrainOffsetProperty.prototype.isDestroyed = function () {\n  return false;\n};\n\nTerrainOffsetProperty.prototype.destroy = function () {\n  if (defined(this._removeEventListener)) {\n    this._removeEventListener();\n  }\n  if (defined(this._removeModeListener)) {\n    this._removeModeListener();\n  }\n  if (defined(this._removeCallbackFunc)) {\n    this._removeCallbackFunc();\n  }\n  return destroyObject(this);\n};\n\n/**\n * A function which creates one or more providers.\n * @callback TerrainOffsetProperty.PositionFunction\n * @param {JulianDate} time The clock time at which to retrieve the position\n * @param {Cartesian3} result The result position\n * @returns {Cartesian3} The position at which to do the terrain height check\n */\nexport default TerrainOffsetProperty;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport ReferenceFrame from \"../Core/ReferenceFrame.js\";\nimport TimeIntervalCollection from \"../Core/TimeIntervalCollection.js\";\nimport PositionProperty from \"./PositionProperty.js\";\nimport Property from \"./Property.js\";\n\n/**\n * A {@link TimeIntervalCollectionProperty} which is also a {@link PositionProperty}.\n *\n * @alias TimeIntervalCollectionPositionProperty\n * @constructor\n *\n * @param {ReferenceFrame} [referenceFrame=ReferenceFrame.FIXED] The reference frame in which the position is defined.\n */\nfunction TimeIntervalCollectionPositionProperty(referenceFrame) {\n  this._definitionChanged = new Event();\n  this._intervals = new TimeIntervalCollection();\n  this._intervals.changedEvent.addEventListener(\n    TimeIntervalCollectionPositionProperty.prototype._intervalsChanged,\n    this\n  );\n  this._referenceFrame = defaultValue(referenceFrame, ReferenceFrame.FIXED);\n}\n\nObject.defineProperties(TimeIntervalCollectionPositionProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof TimeIntervalCollectionPositionProperty.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return this._intervals.isEmpty;\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is considered to have changed if a call to getValue would return\n   * a different result for the same time.\n   * @memberof TimeIntervalCollectionPositionProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets the interval collection.\n   * @memberof TimeIntervalCollectionPositionProperty.prototype\n   * @type {TimeIntervalCollection}\n   * @readonly\n   */\n  intervals: {\n    get: function () {\n      return this._intervals;\n    },\n  },\n  /**\n   * Gets the reference frame in which the position is defined.\n   * @memberof TimeIntervalCollectionPositionProperty.prototype\n   * @type {ReferenceFrame}\n   * @readonly\n   * @default ReferenceFrame.FIXED;\n   */\n  referenceFrame: {\n    get: function () {\n      return this._referenceFrame;\n    },\n  },\n});\n\n/**\n * Gets the value of the property at the provided time in the fixed frame.\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {Cartesian3 | undefined} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nTimeIntervalCollectionPositionProperty.prototype.getValue = function (\n  time,\n  result\n) {\n  return this.getValueInReferenceFrame(time, ReferenceFrame.FIXED, result);\n};\n\n/**\n * Gets the value of the property at the provided time and in the provided reference frame.\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {ReferenceFrame} referenceFrame The desired referenceFrame of the result.\n * @param {Cartesian3} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {Cartesian3 | undefined} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nTimeIntervalCollectionPositionProperty.prototype.getValueInReferenceFrame = function (\n  time,\n  referenceFrame,\n  result\n) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(time)) {\n    throw new DeveloperError(\"time is required.\");\n  }\n  if (!defined(referenceFrame)) {\n    throw new DeveloperError(\"referenceFrame is required.\");\n  }\n  //>>includeEnd('debug');\n\n  const position = this._intervals.findDataForIntervalContainingDate(time);\n  if (defined(position)) {\n    return PositionProperty.convertToReferenceFrame(\n      time,\n      position,\n      this._referenceFrame,\n      referenceFrame,\n      result\n    );\n  }\n  return undefined;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nTimeIntervalCollectionPositionProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof TimeIntervalCollectionPositionProperty && //\n      this._intervals.equals(other._intervals, Property.equals) && //\n      this._referenceFrame === other._referenceFrame)\n  );\n};\n\n/**\n * @private\n */\nTimeIntervalCollectionPositionProperty.prototype._intervalsChanged = function () {\n  this._definitionChanged.raiseEvent(this);\n};\nexport default TimeIntervalCollectionPositionProperty;\n","import defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport TimeIntervalCollection from \"../Core/TimeIntervalCollection.js\";\nimport Property from \"./Property.js\";\n\n/**\n * A {@link Property} which is defined by a {@link TimeIntervalCollection}, where the\n * data property of each {@link TimeInterval} represents the value at time.\n *\n * @alias TimeIntervalCollectionProperty\n * @constructor\n *\n * @example\n * //Create a Cartesian2 interval property which contains data on August 1st, 2012\n * //and uses a different value every 6 hours.\n * const composite = new Cesium.TimeIntervalCollectionProperty();\n * composite.intervals.addInterval(Cesium.TimeInterval.fromIso8601({\n *     iso8601 : '2012-08-01T00:00:00.00Z/2012-08-01T06:00:00.00Z',\n *     isStartIncluded : true,\n *     isStopIncluded : false,\n *     data : new Cesium.Cartesian2(2.0, 3.4)\n * }));\n * composite.intervals.addInterval(Cesium.TimeInterval.fromIso8601({\n *     iso8601 : '2012-08-01T06:00:00.00Z/2012-08-01T12:00:00.00Z',\n *     isStartIncluded : true,\n *     isStopIncluded : false,\n *     data : new Cesium.Cartesian2(12.0, 2.7)\n * }));\n * composite.intervals.addInterval(Cesium.TimeInterval.fromIso8601({\n *     iso8601 : '2012-08-01T12:00:00.00Z/2012-08-01T18:00:00.00Z',\n *     isStartIncluded : true,\n *     isStopIncluded : false,\n *     data : new Cesium.Cartesian2(5.0, 12.4)\n * }));\n * composite.intervals.addInterval(Cesium.TimeInterval.fromIso8601({\n *     iso8601 : '2012-08-01T18:00:00.00Z/2012-08-02T00:00:00.00Z',\n *     isStartIncluded : true,\n *     isStopIncluded : true,\n *     data : new Cesium.Cartesian2(85.0, 4.1)\n * }));\n */\nfunction TimeIntervalCollectionProperty() {\n  this._definitionChanged = new Event();\n  this._intervals = new TimeIntervalCollection();\n  this._intervals.changedEvent.addEventListener(\n    TimeIntervalCollectionProperty.prototype._intervalsChanged,\n    this\n  );\n}\n\nObject.defineProperties(TimeIntervalCollectionProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.  A property is considered\n   * constant if getValue always returns the same result for the current definition.\n   * @memberof TimeIntervalCollectionProperty.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return this._intervals.isEmpty;\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * The definition is changed whenever setValue is called with data different\n   * than the current value.\n   * @memberof TimeIntervalCollectionProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets the interval collection.\n   * @memberof TimeIntervalCollectionProperty.prototype\n   *\n   * @type {TimeIntervalCollection}\n   * @readonly\n   */\n  intervals: {\n    get: function () {\n      return this._intervals;\n    },\n  },\n});\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} time The time for which to retrieve the value.\n * @param {Object} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {Object} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nTimeIntervalCollectionProperty.prototype.getValue = function (time, result) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(time)) {\n    throw new DeveloperError(\"time is required\");\n  }\n  //>>includeEnd('debug');\n\n  const value = this._intervals.findDataForIntervalContainingDate(time);\n  if (defined(value) && typeof value.clone === \"function\") {\n    return value.clone(result);\n  }\n  return value;\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nTimeIntervalCollectionProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof TimeIntervalCollectionProperty && //\n      this._intervals.equals(other._intervals, Property.equals))\n  );\n};\n\n/**\n * @private\n */\nTimeIntervalCollectionProperty.prototype._intervalsChanged = function () {\n  this._definitionChanged.raiseEvent(this);\n};\nexport default TimeIntervalCollectionProperty;\n","import Cartesian3 from \"../Core/Cartesian3.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport Ellipsoid from \"../Core/Ellipsoid.js\";\nimport Event from \"../Core/Event.js\";\nimport Matrix3 from \"../Core/Matrix3.js\";\nimport Quaternion from \"../Core/Quaternion.js\";\nimport Transforms from \"../Core/Transforms.js\";\nimport Property from \"./Property.js\";\nimport VelocityVectorProperty from \"./VelocityVectorProperty.js\";\n\n/**\n * A {@link Property} which evaluates to a {@link Quaternion} rotation\n * based on the velocity of the provided {@link PositionProperty}.\n *\n * @alias VelocityOrientationProperty\n * @constructor\n *\n * @param {PositionProperty} [position] The position property used to compute the orientation.\n * @param {Ellipsoid} [ellipsoid=Ellipsoid.WGS84] The ellipsoid used to determine which way is up.\n *\n * @example\n * //Create an entity with position and orientation.\n * const position = new Cesium.SampledProperty();\n * position.addSamples(...);\n * const entity = viewer.entities.add({\n *   position : position,\n *   orientation : new Cesium.VelocityOrientationProperty(position)\n * }));\n */\nfunction VelocityOrientationProperty(position, ellipsoid) {\n  this._velocityVectorProperty = new VelocityVectorProperty(position, true);\n  this._subscription = undefined;\n  this._ellipsoid = undefined;\n  this._definitionChanged = new Event();\n\n  this.ellipsoid = defaultValue(ellipsoid, Ellipsoid.WGS84);\n\n  const that = this;\n  this._velocityVectorProperty.definitionChanged.addEventListener(function () {\n    that._definitionChanged.raiseEvent(that);\n  });\n}\n\nObject.defineProperties(VelocityOrientationProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.\n   * @memberof VelocityOrientationProperty.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return Property.isConstant(this._velocityVectorProperty);\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * @memberof VelocityOrientationProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets or sets the position property used to compute orientation.\n   * @memberof VelocityOrientationProperty.prototype\n   *\n   * @type {Property|undefined}\n   */\n  position: {\n    get: function () {\n      return this._velocityVectorProperty.position;\n    },\n    set: function (value) {\n      this._velocityVectorProperty.position = value;\n    },\n  },\n  /**\n   * Gets or sets the ellipsoid used to determine which way is up.\n   * @memberof VelocityOrientationProperty.prototype\n   *\n   * @type {Property|undefined}\n   */\n  ellipsoid: {\n    get: function () {\n      return this._ellipsoid;\n    },\n    set: function (value) {\n      const oldValue = this._ellipsoid;\n      if (oldValue !== value) {\n        this._ellipsoid = value;\n        this._definitionChanged.raiseEvent(this);\n      }\n    },\n  },\n});\n\nconst positionScratch = new Cartesian3();\nconst velocityScratch = new Cartesian3();\nconst rotationScratch = new Matrix3();\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} [time] The time for which to retrieve the value.\n * @param {Quaternion} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {Quaternion} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nVelocityOrientationProperty.prototype.getValue = function (time, result) {\n  const velocity = this._velocityVectorProperty._getValue(\n    time,\n    velocityScratch,\n    positionScratch\n  );\n\n  if (!defined(velocity)) {\n    return undefined;\n  }\n\n  Transforms.rotationMatrixFromPositionVelocity(\n    positionScratch,\n    velocity,\n    this._ellipsoid,\n    rotationScratch\n  );\n  return Quaternion.fromRotationMatrix(rotationScratch, result);\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nVelocityOrientationProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof VelocityOrientationProperty &&\n      Property.equals(\n        this._velocityVectorProperty,\n        other._velocityVectorProperty\n      ) &&\n      (this._ellipsoid === other._ellipsoid ||\n        this._ellipsoid.equals(other._ellipsoid)))\n  );\n};\nexport default VelocityOrientationProperty;\n","import Cartesian3 from \"../Core/Cartesian3.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport Property from \"./Property.js\";\n\n/**\n * A {@link Property} which evaluates to a {@link Cartesian3} vector\n * based on the velocity of the provided {@link PositionProperty}.\n *\n * @alias VelocityVectorProperty\n * @constructor\n *\n * @param {PositionProperty} [position] The position property used to compute the velocity.\n * @param {Boolean} [normalize=true] Whether to normalize the computed velocity vector.\n *\n * @example\n * //Create an entity with a billboard rotated to match its velocity.\n * const position = new Cesium.SampledProperty();\n * position.addSamples(...);\n * const entity = viewer.entities.add({\n *   position : position,\n *   billboard : {\n *     image : 'image.png',\n *     alignedAxis : new Cesium.VelocityVectorProperty(position, true) // alignedAxis must be a unit vector\n *   }\n * }));\n */\nfunction VelocityVectorProperty(position, normalize) {\n  this._position = undefined;\n  this._subscription = undefined;\n  this._definitionChanged = new Event();\n  this._normalize = defaultValue(normalize, true);\n\n  this.position = position;\n}\n\nObject.defineProperties(VelocityVectorProperty.prototype, {\n  /**\n   * Gets a value indicating if this property is constant.\n   * @memberof VelocityVectorProperty.prototype\n   *\n   * @type {Boolean}\n   * @readonly\n   */\n  isConstant: {\n    get: function () {\n      return Property.isConstant(this._position);\n    },\n  },\n  /**\n   * Gets the event that is raised whenever the definition of this property changes.\n   * @memberof VelocityVectorProperty.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n  /**\n   * Gets or sets the position property used to compute the velocity vector.\n   * @memberof VelocityVectorProperty.prototype\n   *\n   * @type {Property|undefined}\n   */\n  position: {\n    get: function () {\n      return this._position;\n    },\n    set: function (value) {\n      const oldValue = this._position;\n      if (oldValue !== value) {\n        if (defined(oldValue)) {\n          this._subscription();\n        }\n\n        this._position = value;\n\n        if (defined(value)) {\n          this._subscription = value._definitionChanged.addEventListener(\n            function () {\n              this._definitionChanged.raiseEvent(this);\n            },\n            this\n          );\n        }\n\n        this._definitionChanged.raiseEvent(this);\n      }\n    },\n  },\n  /**\n   * Gets or sets whether the vector produced by this property\n   * will be normalized or not.\n   * @memberof VelocityVectorProperty.prototype\n   *\n   * @type {Boolean}\n   */\n  normalize: {\n    get: function () {\n      return this._normalize;\n    },\n    set: function (value) {\n      if (this._normalize === value) {\n        return;\n      }\n\n      this._normalize = value;\n      this._definitionChanged.raiseEvent(this);\n    },\n  },\n});\n\nconst position1Scratch = new Cartesian3();\nconst position2Scratch = new Cartesian3();\nconst timeScratch = new JulianDate();\nconst step = 1.0 / 60.0;\n\n/**\n * Gets the value of the property at the provided time.\n *\n * @param {JulianDate} [time] The time for which to retrieve the value.\n * @param {Cartesian3} [result] The object to store the value into, if omitted, a new instance is created and returned.\n * @returns {Cartesian3} The modified result parameter or a new instance if the result parameter was not supplied.\n */\nVelocityVectorProperty.prototype.getValue = function (time, result) {\n  return this._getValue(time, result);\n};\n\n/**\n * @private\n */\nVelocityVectorProperty.prototype._getValue = function (\n  time,\n  velocityResult,\n  positionResult\n) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(time)) {\n    throw new DeveloperError(\"time is required\");\n  }\n  //>>includeEnd('debug');\n\n  if (!defined(velocityResult)) {\n    velocityResult = new Cartesian3();\n  }\n\n  const property = this._position;\n  if (Property.isConstant(property)) {\n    return this._normalize\n      ? undefined\n      : Cartesian3.clone(Cartesian3.ZERO, velocityResult);\n  }\n\n  let position1 = property.getValue(time, position1Scratch);\n  let position2 = property.getValue(\n    JulianDate.addSeconds(time, step, timeScratch),\n    position2Scratch\n  );\n\n  //If we don't have a position for now, return undefined.\n  if (!defined(position1)) {\n    return undefined;\n  }\n\n  //If we don't have a position for now + step, see if we have a position for now - step.\n  if (!defined(position2)) {\n    position2 = position1;\n    position1 = property.getValue(\n      JulianDate.addSeconds(time, -step, timeScratch),\n      position2Scratch\n    );\n\n    if (!defined(position1)) {\n      return undefined;\n    }\n  }\n\n  if (Cartesian3.equals(position1, position2)) {\n    return this._normalize\n      ? undefined\n      : Cartesian3.clone(Cartesian3.ZERO, velocityResult);\n  }\n\n  if (defined(positionResult)) {\n    position1.clone(positionResult);\n  }\n\n  const velocity = Cartesian3.subtract(position2, position1, velocityResult);\n  if (this._normalize) {\n    return Cartesian3.normalize(velocity, velocityResult);\n  }\n\n  return Cartesian3.divideByScalar(velocity, step, velocityResult);\n};\n\n/**\n * Compares this property to the provided property and returns\n * <code>true</code> if they are equal, <code>false</code> otherwise.\n *\n * @param {Property} [other] The other property.\n * @returns {Boolean} <code>true</code> if left and right are equal, <code>false</code> otherwise.\n */\nVelocityVectorProperty.prototype.equals = function (other) {\n  return (\n    this === other || //\n    (other instanceof VelocityVectorProperty &&\n      Property.equals(this._position, other._position))\n  );\n};\nexport default VelocityVectorProperty;\n","import DeveloperError from \"../Core/DeveloperError.js\";\n\n/**\n * Defines the interface for visualizers. Visualizers are plug-ins to\n * {@link DataSourceDisplay} that render data associated with\n * {@link DataSource} instances.\n * This object is an interface for documentation purposes and is not intended\n * to be instantiated directly.\n * @alias Visualizer\n * @constructor\n *\n * @see BillboardVisualizer\n * @see LabelVisualizer\n * @see ModelVisualizer\n * @see PathVisualizer\n * @see PointVisualizer\n * @see GeometryVisualizer\n */\nfunction Visualizer() {\n  DeveloperError.throwInstantiationError();\n}\n\n/**\n * Updates the visualization to the provided time.\n * @function\n *\n * @param {JulianDate} time The time.\n *\n * @returns {Boolean} True if the display was updated to the provided time,\n * false if the visualizer is waiting for an asynchronous operation to\n * complete before data can be updated.\n */\nVisualizer.prototype.update = DeveloperError.throwInstantiationError;\n\n/**\n * Computes a bounding sphere which encloses the visualization produced for the specified entity.\n * The bounding sphere is in the fixed frame of the scene's globe.\n *\n * @param {Entity} entity The entity whose bounding sphere to compute.\n * @param {BoundingSphere} result The bounding sphere onto which to store the result.\n * @returns {BoundingSphereState} BoundingSphereState.DONE if the result contains the bounding sphere,\n *                       BoundingSphereState.PENDING if the result is still being computed, or\n *                       BoundingSphereState.FAILED if the entity has no visualization in the current scene.\n * @private\n */\nVisualizer.prototype.getBoundingSphere = DeveloperError.throwInstantiationError;\n\n/**\n * Returns true if this object was destroyed; otherwise, false.\n * @function\n *\n * @returns {Boolean} True if this object was destroyed; otherwise, false.\n */\nVisualizer.prototype.isDestroyed = DeveloperError.throwInstantiationError;\n\n/**\n * Removes all visualization and cleans up any resources associated with this instance.\n * @function\n */\nVisualizer.prototype.destroy = DeveloperError.throwInstantiationError;\nexport default Visualizer;\n","import Check from \"../Core/Check.js\";\nimport Color from \"../Core/Color.js\";\nimport ColorGeometryInstanceAttribute from \"../Core/ColorGeometryInstanceAttribute.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport DistanceDisplayConditionGeometryInstanceAttribute from \"../Core/DistanceDisplayConditionGeometryInstanceAttribute.js\";\nimport GeometryInstance from \"../Core/GeometryInstance.js\";\nimport Iso8601 from \"../Core/Iso8601.js\";\nimport ShowGeometryInstanceAttribute from \"../Core/ShowGeometryInstanceAttribute.js\";\nimport WallGeometry from \"../Core/WallGeometry.js\";\nimport WallOutlineGeometry from \"../Core/WallOutlineGeometry.js\";\nimport MaterialAppearance from \"../Scene/MaterialAppearance.js\";\nimport PerInstanceColorAppearance from \"../Scene/PerInstanceColorAppearance.js\";\nimport ColorMaterialProperty from \"./ColorMaterialProperty.js\";\nimport DynamicGeometryUpdater from \"./DynamicGeometryUpdater.js\";\nimport GeometryUpdater from \"./GeometryUpdater.js\";\nimport Property from \"./Property.js\";\n\nconst scratchColor = new Color();\n\nfunction WallGeometryOptions(entity) {\n  this.id = entity;\n  this.vertexFormat = undefined;\n  this.positions = undefined;\n  this.minimumHeights = undefined;\n  this.maximumHeights = undefined;\n  this.granularity = undefined;\n}\n\n/**\n * A {@link GeometryUpdater} for walls.\n * Clients do not normally create this class directly, but instead rely on {@link DataSourceDisplay}.\n * @alias WallGeometryUpdater\n * @constructor\n *\n * @param {Entity} entity The entity containing the geometry to be visualized.\n * @param {Scene} scene The scene where visualization is taking place.\n */\nfunction WallGeometryUpdater(entity, scene) {\n  GeometryUpdater.call(this, {\n    entity: entity,\n    scene: scene,\n    geometryOptions: new WallGeometryOptions(entity),\n    geometryPropertyName: \"wall\",\n    observedPropertyNames: [\"availability\", \"wall\"],\n  });\n\n  this._onEntityPropertyChanged(entity, \"wall\", entity.wall, undefined);\n}\n\nif (defined(Object.create)) {\n  WallGeometryUpdater.prototype = Object.create(GeometryUpdater.prototype);\n  WallGeometryUpdater.prototype.constructor = WallGeometryUpdater;\n}\n\n/**\n * Creates the geometry instance which represents the fill of the geometry.\n *\n * @param {JulianDate} time The time to use when retrieving initial attribute values.\n * @returns {GeometryInstance} The geometry instance representing the filled portion of the geometry.\n *\n * @exception {DeveloperError} This instance does not represent a filled geometry.\n */\nWallGeometryUpdater.prototype.createFillGeometryInstance = function (time) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"time\", time);\n\n  if (!this._fillEnabled) {\n    throw new DeveloperError(\n      \"This instance does not represent a filled geometry.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  const entity = this._entity;\n  const isAvailable = entity.isAvailable(time);\n\n  let attributes;\n\n  let color;\n  const show = new ShowGeometryInstanceAttribute(\n    isAvailable &&\n      entity.isShowing &&\n      this._showProperty.getValue(time) &&\n      this._fillProperty.getValue(time)\n  );\n  const distanceDisplayCondition = this._distanceDisplayConditionProperty.getValue(\n    time\n  );\n  const distanceDisplayConditionAttribute = DistanceDisplayConditionGeometryInstanceAttribute.fromDistanceDisplayCondition(\n    distanceDisplayCondition\n  );\n  if (this._materialProperty instanceof ColorMaterialProperty) {\n    let currentColor;\n    if (\n      defined(this._materialProperty.color) &&\n      (this._materialProperty.color.isConstant || isAvailable)\n    ) {\n      currentColor = this._materialProperty.color.getValue(time, scratchColor);\n    }\n    if (!defined(currentColor)) {\n      currentColor = Color.WHITE;\n    }\n    color = ColorGeometryInstanceAttribute.fromColor(currentColor);\n    attributes = {\n      show: show,\n      distanceDisplayCondition: distanceDisplayConditionAttribute,\n      color: color,\n    };\n  } else {\n    attributes = {\n      show: show,\n      distanceDisplayCondition: distanceDisplayConditionAttribute,\n    };\n  }\n\n  return new GeometryInstance({\n    id: entity,\n    geometry: new WallGeometry(this._options),\n    attributes: attributes,\n  });\n};\n\n/**\n * Creates the geometry instance which represents the outline of the geometry.\n *\n * @param {JulianDate} time The time to use when retrieving initial attribute values.\n * @returns {GeometryInstance} The geometry instance representing the outline portion of the geometry.\n *\n * @exception {DeveloperError} This instance does not represent an outlined geometry.\n */\nWallGeometryUpdater.prototype.createOutlineGeometryInstance = function (time) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"time\", time);\n\n  if (!this._outlineEnabled) {\n    throw new DeveloperError(\n      \"This instance does not represent an outlined geometry.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  const entity = this._entity;\n  const isAvailable = entity.isAvailable(time);\n  const outlineColor = Property.getValueOrDefault(\n    this._outlineColorProperty,\n    time,\n    Color.BLACK,\n    scratchColor\n  );\n  const distanceDisplayCondition = this._distanceDisplayConditionProperty.getValue(\n    time\n  );\n\n  return new GeometryInstance({\n    id: entity,\n    geometry: new WallOutlineGeometry(this._options),\n    attributes: {\n      show: new ShowGeometryInstanceAttribute(\n        isAvailable &&\n          entity.isShowing &&\n          this._showProperty.getValue(time) &&\n          this._showOutlineProperty.getValue(time)\n      ),\n      color: ColorGeometryInstanceAttribute.fromColor(outlineColor),\n      distanceDisplayCondition: DistanceDisplayConditionGeometryInstanceAttribute.fromDistanceDisplayCondition(\n        distanceDisplayCondition\n      ),\n    },\n  });\n};\n\nWallGeometryUpdater.prototype._isHidden = function (entity, wall) {\n  return (\n    !defined(wall.positions) ||\n    GeometryUpdater.prototype._isHidden.call(this, entity, wall)\n  );\n};\n\nWallGeometryUpdater.prototype._getIsClosed = function (options) {\n  return false;\n};\n\nWallGeometryUpdater.prototype._isDynamic = function (entity, wall) {\n  return (\n    !wall.positions.isConstant || //\n    !Property.isConstant(wall.minimumHeights) || //\n    !Property.isConstant(wall.maximumHeights) || //\n    !Property.isConstant(wall.outlineWidth) || //\n    !Property.isConstant(wall.granularity)\n  );\n};\n\nWallGeometryUpdater.prototype._setStaticOptions = function (entity, wall) {\n  const minimumHeights = wall.minimumHeights;\n  const maximumHeights = wall.maximumHeights;\n  const granularity = wall.granularity;\n  const isColorMaterial =\n    this._materialProperty instanceof ColorMaterialProperty;\n\n  const options = this._options;\n  options.vertexFormat = isColorMaterial\n    ? PerInstanceColorAppearance.VERTEX_FORMAT\n    : MaterialAppearance.MaterialSupport.TEXTURED.vertexFormat;\n  options.positions = wall.positions.getValue(\n    Iso8601.MINIMUM_VALUE,\n    options.positions\n  );\n  options.minimumHeights = defined(minimumHeights)\n    ? minimumHeights.getValue(Iso8601.MINIMUM_VALUE, options.minimumHeights)\n    : undefined;\n  options.maximumHeights = defined(maximumHeights)\n    ? maximumHeights.getValue(Iso8601.MINIMUM_VALUE, options.maximumHeights)\n    : undefined;\n  options.granularity = defined(granularity)\n    ? granularity.getValue(Iso8601.MINIMUM_VALUE)\n    : undefined;\n};\n\nWallGeometryUpdater.DynamicGeometryUpdater = DynamicWallGeometryUpdater;\n\n/**\n * @private\n */\nfunction DynamicWallGeometryUpdater(\n  geometryUpdater,\n  primitives,\n  groundPrimitives\n) {\n  DynamicGeometryUpdater.call(\n    this,\n    geometryUpdater,\n    primitives,\n    groundPrimitives\n  );\n}\n\nif (defined(Object.create)) {\n  DynamicWallGeometryUpdater.prototype = Object.create(\n    DynamicGeometryUpdater.prototype\n  );\n  DynamicWallGeometryUpdater.prototype.constructor = DynamicWallGeometryUpdater;\n}\n\nDynamicWallGeometryUpdater.prototype._isHidden = function (entity, wall, time) {\n  return (\n    !defined(this._options.positions) ||\n    DynamicGeometryUpdater.prototype._isHidden.call(this, entity, wall, time)\n  );\n};\n\nDynamicWallGeometryUpdater.prototype._setOptions = function (\n  entity,\n  wall,\n  time\n) {\n  const options = this._options;\n  options.positions = Property.getValueOrUndefined(\n    wall.positions,\n    time,\n    options.positions\n  );\n  options.minimumHeights = Property.getValueOrUndefined(\n    wall.minimumHeights,\n    time,\n    options.minimumHeights\n  );\n  options.maximumHeights = Property.getValueOrUndefined(\n    wall.maximumHeights,\n    time,\n    options.maximumHeights\n  );\n  options.granularity = Property.getValueOrUndefined(wall.granularity, time);\n};\nexport default WallGeometryUpdater;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Event from \"../Core/Event.js\";\nimport createMaterialPropertyDescriptor from \"./createMaterialPropertyDescriptor.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\n/**\n * @typedef {Object} WallGraphics.ConstructorOptions\n *\n * Initialization options for the WallGraphics constructor\n *\n * @property {Property | boolean} [show=true] A boolean Property specifying the visibility of the wall.\n * @property {Property | Array<Cartesian3>} [positions] A Property specifying the array of {@link Cartesian3} positions which define the top of the wall.\n * @property {Property | Array<number>} [minimumHeights] A Property specifying an array of heights to be used for the bottom of the wall instead of the globe surface.\n * @property {Property | Array<number>} [maximumHeights] A Property specifying an array of heights to be used for the top of the wall instead of the height of each position.\n * @property {Property | number} [granularity=Cesium.Math.RADIANS_PER_DEGREE] A numeric Property specifying the angular distance between each latitude and longitude point.\n * @property {Property | boolean} [fill=true] A boolean Property specifying whether the wall is filled with the provided material.\n * @property {MaterialProperty | Color} [material=Color.WHITE] A Property specifying the material used to fill the wall.\n * @property {Property | boolean} [outline=false] A boolean Property specifying whether the wall is outlined.\n * @property {Property | Color} [outlineColor=Color.BLACK] A Property specifying the {@link Color} of the outline.\n * @property {Property | number} [outlineWidth=1.0] A numeric Property specifying the width of the outline.\n * @property {Property | ShadowMode} [shadows=ShadowMode.DISABLED] An enum Property specifying whether the wall casts or receives shadows from light sources.\n * @property {Property | DistanceDisplayCondition} [distanceDisplayCondition] A Property specifying at what distance from the camera that this wall will be displayed.\n */\n\n/**\n * Describes a two dimensional wall defined as a line strip and optional maximum and minimum heights.\n * The wall conforms to the curvature of the globe and can be placed along the surface or at altitude.\n *\n * @alias WallGraphics\n * @constructor\n *\n * @param {WallGraphics.ConstructorOptions} [options] Object describing initialization options\n *\n * @see Entity\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Wall.html|Cesium Sandcastle Wall Demo}\n */\nfunction WallGraphics(options) {\n  this._definitionChanged = new Event();\n  this._show = undefined;\n  this._showSubscription = undefined;\n  this._positions = undefined;\n  this._positionsSubscription = undefined;\n  this._minimumHeights = undefined;\n  this._minimumHeightsSubscription = undefined;\n  this._maximumHeights = undefined;\n  this._maximumHeightsSubscription = undefined;\n  this._granularity = undefined;\n  this._granularitySubscription = undefined;\n  this._fill = undefined;\n  this._fillSubscription = undefined;\n  this._material = undefined;\n  this._materialSubscription = undefined;\n  this._outline = undefined;\n  this._outlineSubscription = undefined;\n  this._outlineColor = undefined;\n  this._outlineColorSubscription = undefined;\n  this._outlineWidth = undefined;\n  this._outlineWidthSubscription = undefined;\n  this._shadows = undefined;\n  this._shadowsSubscription = undefined;\n  this._distanceDisplayCondition = undefined;\n  this._distanceDisplayConditionSubscription = undefined;\n\n  this.merge(defaultValue(options, defaultValue.EMPTY_OBJECT));\n}\n\nObject.defineProperties(WallGraphics.prototype, {\n  /**\n   * Gets the event that is raised whenever a property or sub-property is changed or modified.\n   * @memberof WallGraphics.prototype\n   *\n   * @type {Event}\n   * @readonly\n   */\n  definitionChanged: {\n    get: function () {\n      return this._definitionChanged;\n    },\n  },\n\n  /**\n   * Gets or sets the boolean Property specifying the visibility of the wall.\n   * @memberof WallGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  show: createPropertyDescriptor(\"show\"),\n\n  /**\n   * Gets or sets the Property specifying the array of {@link Cartesian3} positions which define the top of the wall.\n   * @memberof WallGraphics.prototype\n   * @type {Property|undefined}\n   */\n  positions: createPropertyDescriptor(\"positions\"),\n\n  /**\n   * Gets or sets the Property specifying an array of heights to be used for the bottom of the wall instead of the surface of the globe.\n   * If defined, the array must be the same length as {@link Wall#positions}.\n   * @memberof WallGraphics.prototype\n   * @type {Property|undefined}\n   */\n  minimumHeights: createPropertyDescriptor(\"minimumHeights\"),\n\n  /**\n   * Gets or sets the Property specifying an array of heights to be used for the top of the wall instead of the height of each position.\n   * If defined, the array must be the same length as {@link Wall#positions}.\n   * @memberof WallGraphics.prototype\n   * @type {Property|undefined}\n   */\n  maximumHeights: createPropertyDescriptor(\"maximumHeights\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the angular distance between points on the wall.\n   * @memberof WallGraphics.prototype\n   * @type {Property|undefined}\n   * @default {CesiumMath.RADIANS_PER_DEGREE}\n   */\n  granularity: createPropertyDescriptor(\"granularity\"),\n\n  /**\n   * Gets or sets the boolean Property specifying whether the wall is filled with the provided material.\n   * @memberof WallGraphics.prototype\n   * @type {Property|undefined}\n   * @default true\n   */\n  fill: createPropertyDescriptor(\"fill\"),\n\n  /**\n   * Gets or sets the Property specifying the material used to fill the wall.\n   * @memberof WallGraphics.prototype\n   * @type {MaterialProperty}\n   * @default Color.WHITE\n   */\n  material: createMaterialPropertyDescriptor(\"material\"),\n\n  /**\n   * Gets or sets the Property specifying whether the wall is outlined.\n   * @memberof WallGraphics.prototype\n   * @type {Property|undefined}\n   * @default false\n   */\n  outline: createPropertyDescriptor(\"outline\"),\n\n  /**\n   * Gets or sets the Property specifying the {@link Color} of the outline.\n   * @memberof WallGraphics.prototype\n   * @type {Property|undefined}\n   * @default Color.BLACK\n   */\n  outlineColor: createPropertyDescriptor(\"outlineColor\"),\n\n  /**\n   * Gets or sets the numeric Property specifying the width of the outline.\n   * <p>\n   * Note: This property will be ignored on all major browsers on Windows platforms. For details, see (@link https://github.com/CesiumGS/cesium/issues/40}.\n   * </p>\n   * @memberof WallGraphics.prototype\n   * @type {Property|undefined}\n   * @default 1.0\n   */\n  outlineWidth: createPropertyDescriptor(\"outlineWidth\"),\n\n  /**\n   * Get or sets the enum Property specifying whether the wall\n   * casts or receives shadows from light sources.\n   * @memberof WallGraphics.prototype\n   * @type {Property|undefined}\n   * @default ShadowMode.DISABLED\n   */\n  shadows: createPropertyDescriptor(\"shadows\"),\n\n  /**\n   * Gets or sets the {@link DistanceDisplayCondition} Property specifying at what distance from the camera that this wall will be displayed.\n   * @memberof WallGraphics.prototype\n   * @type {Property|undefined}\n   */\n  distanceDisplayCondition: createPropertyDescriptor(\n    \"distanceDisplayCondition\"\n  ),\n});\n\n/**\n * Duplicates this instance.\n *\n * @param {WallGraphics} [result] The object onto which to store the result.\n * @returns {WallGraphics} The modified result parameter or a new instance if one was not provided.\n */\nWallGraphics.prototype.clone = function (result) {\n  if (!defined(result)) {\n    return new WallGraphics(this);\n  }\n  result.show = this.show;\n  result.positions = this.positions;\n  result.minimumHeights = this.minimumHeights;\n  result.maximumHeights = this.maximumHeights;\n  result.granularity = this.granularity;\n  result.fill = this.fill;\n  result.material = this.material;\n  result.outline = this.outline;\n  result.outlineColor = this.outlineColor;\n  result.outlineWidth = this.outlineWidth;\n  result.shadows = this.shadows;\n  result.distanceDisplayCondition = this.distanceDisplayCondition;\n  return result;\n};\n\n/**\n * Assigns each unassigned property on this object to the value\n * of the same property on the provided source object.\n *\n * @param {WallGraphics} source The object to be merged into this object.\n */\nWallGraphics.prototype.merge = function (source) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(source)) {\n    throw new DeveloperError(\"source is required.\");\n  }\n  //>>includeEnd('debug');\n\n  this.show = defaultValue(this.show, source.show);\n  this.positions = defaultValue(this.positions, source.positions);\n  this.minimumHeights = defaultValue(\n    this.minimumHeights,\n    source.minimumHeights\n  );\n  this.maximumHeights = defaultValue(\n    this.maximumHeights,\n    source.maximumHeights\n  );\n  this.granularity = defaultValue(this.granularity, source.granularity);\n  this.fill = defaultValue(this.fill, source.fill);\n  this.material = defaultValue(this.material, source.material);\n  this.outline = defaultValue(this.outline, source.outline);\n  this.outlineColor = defaultValue(this.outlineColor, source.outlineColor);\n  this.outlineWidth = defaultValue(this.outlineWidth, source.outlineWidth);\n  this.shadows = defaultValue(this.shadows, source.shadows);\n  this.distanceDisplayCondition = defaultValue(\n    this.distanceDisplayCondition,\n    source.distanceDisplayCondition\n  );\n};\nexport default WallGraphics;\n","import Color from \"../Core/Color.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Resource from \"../Core/Resource.js\";\nimport ColorMaterialProperty from \"./ColorMaterialProperty.js\";\nimport createPropertyDescriptor from \"./createPropertyDescriptor.js\";\nimport ImageMaterialProperty from \"./ImageMaterialProperty.js\";\n\nfunction createMaterialProperty(value) {\n  if (value instanceof Color) {\n    return new ColorMaterialProperty(value);\n  }\n\n  if (\n    typeof value === \"string\" ||\n    value instanceof Resource ||\n    value instanceof HTMLCanvasElement ||\n    value instanceof HTMLVideoElement\n  ) {\n    const result = new ImageMaterialProperty();\n    result.image = value;\n    return result;\n  }\n\n  //>>includeStart('debug', pragmas.debug);\n  throw new DeveloperError(`Unable to infer material type: ${value}`);\n  //>>includeEnd('debug');\n}\n\n/**\n * @private\n */\nfunction createMaterialPropertyDescriptor(name, configurable) {\n  return createPropertyDescriptor(name, configurable, createMaterialProperty);\n}\nexport default createMaterialPropertyDescriptor;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport ConstantProperty from \"./ConstantProperty.js\";\n\nfunction createProperty(\n  name,\n  privateName,\n  subscriptionName,\n  configurable,\n  createPropertyCallback\n) {\n  return {\n    configurable: configurable,\n    get: function () {\n      return this[privateName];\n    },\n    set: function (value) {\n      const oldValue = this[privateName];\n      const subscription = this[subscriptionName];\n      if (defined(subscription)) {\n        subscription();\n        this[subscriptionName] = undefined;\n      }\n\n      const hasValue = value !== undefined;\n      if (\n        hasValue &&\n        (!defined(value) || !defined(value.getValue)) &&\n        defined(createPropertyCallback)\n      ) {\n        value = createPropertyCallback(value);\n      }\n\n      if (oldValue !== value) {\n        this[privateName] = value;\n        this._definitionChanged.raiseEvent(this, name, value, oldValue);\n      }\n\n      if (defined(value) && defined(value.definitionChanged)) {\n        this[subscriptionName] = value.definitionChanged.addEventListener(\n          function () {\n            this._definitionChanged.raiseEvent(this, name, value, value);\n          },\n          this\n        );\n      }\n    },\n  };\n}\n\nfunction createConstantProperty(value) {\n  return new ConstantProperty(value);\n}\n\n/**\n * Used to consistently define all DataSources graphics objects.\n * This is broken into two functions because the Chrome profiler does a better\n * job of optimizing lookups if it notices that the string is constant throughout the function.\n * @private\n */\nfunction createPropertyDescriptor(name, configurable, createPropertyCallback) {\n  //Safari 8.0.3 has a JavaScript bug that causes it to confuse two variables and treat them as the same.\n  //The two extra toString calls work around the issue.\n  return createProperty(\n    name,\n    `_${name.toString()}`,\n    `_${name.toString()}Subscription`,\n    defaultValue(configurable, false),\n    defaultValue(createPropertyCallback, createConstantProperty)\n  );\n}\nexport default createPropertyDescriptor;\n","import createPropertyDescriptor from \"./createPropertyDescriptor.js\";\n\nfunction createRawProperty(value) {\n  return value;\n}\n\n/**\n * @private\n */\nfunction createRawPropertyDescriptor(name, configurable) {\n  return createPropertyDescriptor(name, configurable, createRawProperty);\n}\nexport default createRawPropertyDescriptor;\n","import buildModuleUrl from \"../Core/buildModuleUrl.js\";\nimport Cartesian2 from \"../Core/Cartesian2.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Cartographic from \"../Core/Cartographic.js\";\nimport Color from \"../Core/Color.js\";\nimport createGuid from \"../Core/createGuid.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defer from \"../Core/defer.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Ellipsoid from \"../Core/Ellipsoid.js\";\nimport Iso8601 from \"../Core/Iso8601.js\";\nimport JulianDate from \"../Core/JulianDate.js\";\nimport CesiumMath from \"../Core/Math.js\";\nimport Rectangle from \"../Core/Rectangle.js\";\nimport ReferenceFrame from \"../Core/ReferenceFrame.js\";\nimport Resource from \"../Core/Resource.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\nimport TimeInterval from \"../Core/TimeInterval.js\";\nimport TimeIntervalCollection from \"../Core/TimeIntervalCollection.js\";\nimport HeightReference from \"../Scene/HeightReference.js\";\nimport HorizontalOrigin from \"../Scene/HorizontalOrigin.js\";\nimport VerticalOrigin from \"../Scene/VerticalOrigin.js\";\nimport zip from \"../ThirdParty/zip.js\";\nimport BillboardGraphics from \"./BillboardGraphics.js\";\nimport CompositePositionProperty from \"./CompositePositionProperty.js\";\nimport ModelGraphics from \"./ModelGraphics.js\";\nimport RectangleGraphics from \"./RectangleGraphics.js\";\nimport SampledPositionProperty from \"./SampledPositionProperty.js\";\nimport SampledProperty from \"./SampledProperty.js\";\nimport ScaledPositionProperty from \"./ScaledPositionProperty.js\";\n\nconst BILLBOARD_SIZE = 32;\nconst kmlNamespace = \"http://www.opengis.net/kml/2.2\";\nconst gxNamespace = \"http://www.google.com/kml/ext/2.2\";\nconst xmlnsNamespace = \"http://www.w3.org/2000/xmlns/\";\n\n//\n// Handles files external to the KML (eg. textures and models)\n//\nfunction ExternalFileHandler(modelCallback) {\n  this._files = {};\n  this._promises = [];\n  this._count = 0;\n  this._modelCallback = modelCallback;\n}\n\nconst imageTypeRegex = /^data:image\\/([^,;]+)/;\nExternalFileHandler.prototype.texture = function (texture) {\n  const that = this;\n  let filename;\n\n  if (typeof texture === \"string\" || texture instanceof Resource) {\n    texture = Resource.createIfNeeded(texture);\n    if (!texture.isDataUri) {\n      return texture.url;\n    }\n\n    // If its a data URI try and get the correct extension and then fetch the blob\n    const regexResult = texture.url.match(imageTypeRegex);\n    filename = `texture_${++this._count}`;\n    if (defined(regexResult)) {\n      filename += `.${regexResult[1]}`;\n    }\n\n    const promise = texture.fetchBlob().then(function (blob) {\n      that._files[filename] = blob;\n    });\n\n    this._promises.push(promise);\n\n    return filename;\n  }\n\n  if (texture instanceof HTMLCanvasElement) {\n    const deferred = defer();\n    this._promises.push(deferred.promise);\n\n    filename = `texture_${++this._count}.png`;\n    texture.toBlob(function (blob) {\n      that._files[filename] = blob;\n      deferred.resolve();\n    });\n\n    return filename;\n  }\n\n  return \"\";\n};\n\nfunction getModelBlobHander(that, filename) {\n  return function (blob) {\n    that._files[filename] = blob;\n  };\n}\n\nExternalFileHandler.prototype.model = function (model, time) {\n  const modelCallback = this._modelCallback;\n  if (!defined(modelCallback)) {\n    throw new RuntimeError(\n      \"Encountered a model entity while exporting to KML, but no model callback was supplied.\"\n    );\n  }\n\n  const externalFiles = {};\n  const url = modelCallback(model, time, externalFiles);\n\n  // Iterate through external files and add them to our list once the promise resolves\n  for (const filename in externalFiles) {\n    if (externalFiles.hasOwnProperty(filename)) {\n      const promise = Promise.resolve(externalFiles[filename]);\n      this._promises.push(promise);\n\n      promise.then(getModelBlobHander(this, filename));\n    }\n  }\n\n  return url;\n};\n\nObject.defineProperties(ExternalFileHandler.prototype, {\n  promise: {\n    get: function () {\n      return Promise.all(this._promises);\n    },\n  },\n  files: {\n    get: function () {\n      return this._files;\n    },\n  },\n});\n\n//\n// Handles getting values from properties taking the desired time and default values into account\n//\nfunction ValueGetter(time) {\n  this._time = time;\n}\n\nValueGetter.prototype.get = function (property, defaultVal, result) {\n  let value;\n  if (defined(property)) {\n    value = defined(property.getValue)\n      ? property.getValue(this._time, result)\n      : property;\n  }\n\n  return defaultValue(value, defaultVal);\n};\n\nValueGetter.prototype.getColor = function (property, defaultVal) {\n  const result = this.get(property, defaultVal);\n  if (defined(result)) {\n    return colorToString(result);\n  }\n};\n\nValueGetter.prototype.getMaterialType = function (property) {\n  if (!defined(property)) {\n    return;\n  }\n\n  return property.getType(this._time);\n};\n\n//\n// Caches styles so we don't generate a ton of duplicate styles\n//\nfunction StyleCache() {\n  this._ids = {};\n  this._styles = {};\n  this._count = 0;\n}\n\nStyleCache.prototype.get = function (element) {\n  const ids = this._ids;\n  const key = element.innerHTML;\n  if (defined(ids[key])) {\n    return ids[key];\n  }\n\n  let styleId = `style-${++this._count}`;\n  element.setAttribute(\"id\", styleId);\n\n  // Store with #\n  styleId = `#${styleId}`;\n  ids[key] = styleId;\n  this._styles[key] = element;\n\n  return styleId;\n};\n\nStyleCache.prototype.save = function (parentElement) {\n  const styles = this._styles;\n\n  const firstElement = parentElement.childNodes[0];\n  for (const key in styles) {\n    if (styles.hasOwnProperty(key)) {\n      parentElement.insertBefore(styles[key], firstElement);\n    }\n  }\n};\n\n//\n// Manages the generation of IDs because an entity may have geometry and a Folder for children\n//\nfunction IdManager() {\n  this._ids = {};\n}\n\nIdManager.prototype.get = function (id) {\n  if (!defined(id)) {\n    return this.get(createGuid());\n  }\n\n  const ids = this._ids;\n  if (!defined(ids[id])) {\n    ids[id] = 0;\n    return id;\n  }\n\n  return `${id.toString()}-${++ids[id]}`;\n};\n\n/**\n * @typedef exportKmlResultKml\n * @type {Object}\n * @property {String} kml The generated KML.\n * @property {Object.<string, Blob>} externalFiles An object dictionary of external files\n */\n\n/**\n * @typedef exportKmlResultKmz\n * @type {Object}\n * @property {Blob} kmz The generated kmz file.\n */\n\n/**\n * Exports an EntityCollection as a KML document. Only Point, Billboard, Model, Path, Polygon, Polyline geometries\n * will be exported. Note that there is not a 1 to 1 mapping of Entity properties to KML Feature properties. For\n * example, entity properties that are time dynamic but cannot be dynamic in KML are exported with their values at\n * options.time or the beginning of the EntityCollection's time interval if not specified. For time-dynamic properties\n * that are supported in KML, we use the samples if it is a {@link SampledProperty} otherwise we sample the value using\n * the options.sampleDuration. Point, Billboard, Model and Path geometries with time-dynamic positions will be exported\n * as gx:Track Features. Not all Materials are representable in KML, so for more advanced Materials just the primary\n * color is used. Canvas objects are exported as PNG images.\n *\n * @function exportKml\n *\n * @param {Object} options An object with the following properties:\n * @param {EntityCollection} options.entities The EntityCollection to export as KML.\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid for the output file.\n * @param {exportKmlModelCallback} [options.modelCallback] A callback that will be called with a {@link ModelGraphics} instance and should return the URI to use in the KML. Required if a model exists in the entity collection.\n * @param {JulianDate} [options.time=entities.computeAvailability().start] The time value to use to get properties that are not time varying in KML.\n * @param {TimeInterval} [options.defaultAvailability=entities.computeAvailability()] The interval that will be sampled if an entity doesn't have an availability.\n * @param {Number} [options.sampleDuration=60] The number of seconds to sample properties that are varying in KML.\n * @param {Boolean} [options.kmz=false] If true KML and external files will be compressed into a kmz file.\n *\n * @returns {Promise<exportKmlResultKml|exportKmlResultKmz>} A promise that resolved to an object containing the KML string and a dictionary of external file blobs, or a kmz file as a blob if options.kmz is true.\n * @demo {@link https://sandcastle.cesium.com/index.html?src=Export%20KML.html|Cesium Sandcastle KML Export Demo}\n * @example\n * Cesium.exportKml({\n *      entities: entityCollection\n *  })\n *   .then(function(result) {\n *     // The XML string is in result.kml\n *\n *     const externalFiles = result.externalFiles\n *     for(const file in externalFiles) {\n *       // file is the name of the file used in the KML document as the href\n *       // externalFiles[file] is a blob with the contents of the file\n *     }\n *   });\n *\n */\nfunction exportKml(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  const entities = options.entities;\n  const kmz = defaultValue(options.kmz, false);\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(entities)) {\n    throw new DeveloperError(\"entities is required.\");\n  }\n  //>>includeEnd('debug');\n\n  // Get the state that is passed around during the recursion\n  // This is separated out for testing.\n  const state = exportKml._createState(options);\n\n  // Filter EntityCollection so we only have top level entities\n  const rootEntities = entities.values.filter(function (entity) {\n    return !defined(entity.parent);\n  });\n\n  // Add the <Document>\n  const kmlDoc = state.kmlDoc;\n  const kmlElement = kmlDoc.documentElement;\n  kmlElement.setAttributeNS(xmlnsNamespace, \"xmlns:gx\", gxNamespace);\n  const kmlDocumentElement = kmlDoc.createElement(\"Document\");\n  kmlElement.appendChild(kmlDocumentElement);\n\n  // Create the KML Hierarchy\n  recurseEntities(state, kmlDocumentElement, rootEntities);\n\n  // Write out the <Style> elements\n  state.styleCache.save(kmlDocumentElement);\n\n  // Once all the blobs have resolved return the KML string along with the blob collection\n  const externalFileHandler = state.externalFileHandler;\n  return externalFileHandler.promise.then(function () {\n    const serializer = new XMLSerializer();\n    const kmlString = serializer.serializeToString(state.kmlDoc);\n    if (kmz) {\n      return createKmz(kmlString, externalFileHandler.files);\n    }\n\n    return {\n      kml: kmlString,\n      externalFiles: externalFileHandler.files,\n    };\n  });\n}\n\nfunction createKmz(kmlString, externalFiles) {\n  const zWorkerUrl = buildModuleUrl(\"ThirdParty/Workers/z-worker-pako.js\");\n  zip.configure({\n    workerScripts: {\n      deflate: [zWorkerUrl, \"./pako_deflate.min.js\"],\n      inflate: [zWorkerUrl, \"./pako_inflate.min.js\"],\n    },\n  });\n  const blobWriter = new zip.BlobWriter();\n  const writer = new zip.ZipWriter(blobWriter);\n  // We need to only write one file at a time so the zip doesn't get corrupted\n  return writer\n    .add(\"doc.kml\", new zip.TextReader(kmlString))\n    .then(function () {\n      const keys = Object.keys(externalFiles);\n      return addExternalFilesToZip(writer, keys, externalFiles, 0);\n    })\n    .then(function () {\n      return writer.close();\n    })\n    .then(function (blob) {\n      return {\n        kmz: blob,\n      };\n    });\n}\n\nfunction addExternalFilesToZip(writer, keys, externalFiles, index) {\n  if (keys.length === index) {\n    return;\n  }\n  const filename = keys[index];\n  return writer\n    .add(filename, new zip.BlobReader(externalFiles[filename]))\n    .then(function () {\n      return addExternalFilesToZip(writer, keys, externalFiles, index + 1);\n    });\n}\n\nexportKml._createState = function (options) {\n  const entities = options.entities;\n\n  const styleCache = new StyleCache();\n\n  // Use the start time as the default because just in case they define\n  //  properties with an interval even if they don't change.\n  const entityAvailability = entities.computeAvailability();\n  const time = defined(options.time) ? options.time : entityAvailability.start;\n\n  // Figure out how we will sample dynamic position properties\n  let defaultAvailability = defaultValue(\n    options.defaultAvailability,\n    entityAvailability\n  );\n  const sampleDuration = defaultValue(options.sampleDuration, 60);\n\n  // Make sure we don't have infinite availability if we need to sample\n  if (defaultAvailability.start === Iso8601.MINIMUM_VALUE) {\n    if (defaultAvailability.stop === Iso8601.MAXIMUM_VALUE) {\n      // Infinite, so just use the default\n      defaultAvailability = new TimeInterval();\n    } else {\n      // No start time, so just sample 10 times before the stop\n      JulianDate.addSeconds(\n        defaultAvailability.stop,\n        -10 * sampleDuration,\n        defaultAvailability.start\n      );\n    }\n  } else if (defaultAvailability.stop === Iso8601.MAXIMUM_VALUE) {\n    // No stop time, so just sample 10 times after the start\n    JulianDate.addSeconds(\n      defaultAvailability.start,\n      10 * sampleDuration,\n      defaultAvailability.stop\n    );\n  }\n\n  const externalFileHandler = new ExternalFileHandler(options.modelCallback);\n\n  const kmlDoc = document.implementation.createDocument(kmlNamespace, \"kml\");\n  return {\n    kmlDoc: kmlDoc,\n    ellipsoid: defaultValue(options.ellipsoid, Ellipsoid.WGS84),\n    idManager: new IdManager(),\n    styleCache: styleCache,\n    externalFileHandler: externalFileHandler,\n    time: time,\n    valueGetter: new ValueGetter(time),\n    sampleDuration: sampleDuration,\n    // Wrap it in a TimeIntervalCollection because that is what entity.availability is\n    defaultAvailability: new TimeIntervalCollection([defaultAvailability]),\n  };\n};\n\nfunction recurseEntities(state, parentNode, entities) {\n  const kmlDoc = state.kmlDoc;\n  const styleCache = state.styleCache;\n  const valueGetter = state.valueGetter;\n  const idManager = state.idManager;\n\n  const count = entities.length;\n  let overlays;\n  let geometries;\n  let styles;\n  for (let i = 0; i < count; ++i) {\n    const entity = entities[i];\n    overlays = [];\n    geometries = [];\n    styles = [];\n\n    createPoint(state, entity, geometries, styles);\n    createLineString(state, entity.polyline, geometries, styles);\n    createPolygon(state, entity.rectangle, geometries, styles, overlays);\n    createPolygon(state, entity.polygon, geometries, styles, overlays);\n    createModel(state, entity, entity.model, geometries, styles);\n\n    let timeSpan;\n    const availability = entity.availability;\n    if (defined(availability)) {\n      timeSpan = kmlDoc.createElement(\"TimeSpan\");\n\n      if (!JulianDate.equals(availability.start, Iso8601.MINIMUM_VALUE)) {\n        timeSpan.appendChild(\n          createBasicElementWithText(\n            kmlDoc,\n            \"begin\",\n            JulianDate.toIso8601(availability.start)\n          )\n        );\n      }\n\n      if (!JulianDate.equals(availability.stop, Iso8601.MAXIMUM_VALUE)) {\n        timeSpan.appendChild(\n          createBasicElementWithText(\n            kmlDoc,\n            \"end\",\n            JulianDate.toIso8601(availability.stop)\n          )\n        );\n      }\n    }\n\n    for (let overlayIndex = 0; overlayIndex < overlays.length; ++overlayIndex) {\n      const overlay = overlays[overlayIndex];\n\n      overlay.setAttribute(\"id\", idManager.get(entity.id));\n      overlay.appendChild(\n        createBasicElementWithText(kmlDoc, \"name\", entity.name)\n      );\n      overlay.appendChild(\n        createBasicElementWithText(kmlDoc, \"visibility\", entity.show)\n      );\n      overlay.appendChild(\n        createBasicElementWithText(kmlDoc, \"description\", entity.description)\n      );\n\n      if (defined(timeSpan)) {\n        overlay.appendChild(timeSpan);\n      }\n\n      parentNode.appendChild(overlay);\n    }\n\n    const geometryCount = geometries.length;\n    if (geometryCount > 0) {\n      const placemark = kmlDoc.createElement(\"Placemark\");\n      placemark.setAttribute(\"id\", idManager.get(entity.id));\n\n      let name = entity.name;\n      const labelGraphics = entity.label;\n      if (defined(labelGraphics)) {\n        const labelStyle = kmlDoc.createElement(\"LabelStyle\");\n\n        // KML only shows the name as a label, so just change the name if we need to show a label\n        const text = valueGetter.get(labelGraphics.text);\n        name = defined(text) && text.length > 0 ? text : name;\n\n        const color = valueGetter.getColor(labelGraphics.fillColor);\n        if (defined(color)) {\n          labelStyle.appendChild(\n            createBasicElementWithText(kmlDoc, \"color\", color)\n          );\n          labelStyle.appendChild(\n            createBasicElementWithText(kmlDoc, \"colorMode\", \"normal\")\n          );\n        }\n\n        const scale = valueGetter.get(labelGraphics.scale);\n        if (defined(scale)) {\n          labelStyle.appendChild(\n            createBasicElementWithText(kmlDoc, \"scale\", scale)\n          );\n        }\n\n        styles.push(labelStyle);\n      }\n\n      placemark.appendChild(createBasicElementWithText(kmlDoc, \"name\", name));\n      placemark.appendChild(\n        createBasicElementWithText(kmlDoc, \"visibility\", entity.show)\n      );\n      placemark.appendChild(\n        createBasicElementWithText(kmlDoc, \"description\", entity.description)\n      );\n\n      if (defined(timeSpan)) {\n        placemark.appendChild(timeSpan);\n      }\n\n      parentNode.appendChild(placemark);\n\n      const styleCount = styles.length;\n      if (styleCount > 0) {\n        const style = kmlDoc.createElement(\"Style\");\n        for (let styleIndex = 0; styleIndex < styleCount; ++styleIndex) {\n          style.appendChild(styles[styleIndex]);\n        }\n\n        placemark.appendChild(\n          createBasicElementWithText(kmlDoc, \"styleUrl\", styleCache.get(style))\n        );\n      }\n\n      if (geometries.length === 1) {\n        placemark.appendChild(geometries[0]);\n      } else if (geometries.length > 1) {\n        const multigeometry = kmlDoc.createElement(\"MultiGeometry\");\n        for (\n          let geometryIndex = 0;\n          geometryIndex < geometryCount;\n          ++geometryIndex\n        ) {\n          multigeometry.appendChild(geometries[geometryIndex]);\n        }\n        placemark.appendChild(multigeometry);\n      }\n    }\n\n    const children = entity._children;\n    if (children.length > 0) {\n      const folderNode = kmlDoc.createElement(\"Folder\");\n      folderNode.setAttribute(\"id\", idManager.get(entity.id));\n      folderNode.appendChild(\n        createBasicElementWithText(kmlDoc, \"name\", entity.name)\n      );\n      folderNode.appendChild(\n        createBasicElementWithText(kmlDoc, \"visibility\", entity.show)\n      );\n      folderNode.appendChild(\n        createBasicElementWithText(kmlDoc, \"description\", entity.description)\n      );\n\n      parentNode.appendChild(folderNode);\n\n      recurseEntities(state, folderNode, children);\n    }\n  }\n}\n\nconst scratchCartesian3 = new Cartesian3();\nconst scratchCartographic = new Cartographic();\nconst scratchJulianDate = new JulianDate();\n\nfunction createPoint(state, entity, geometries, styles) {\n  const kmlDoc = state.kmlDoc;\n  const ellipsoid = state.ellipsoid;\n  const valueGetter = state.valueGetter;\n\n  const pointGraphics = defaultValue(entity.billboard, entity.point);\n  if (!defined(pointGraphics) && !defined(entity.path)) {\n    return;\n  }\n\n  // If the point isn't constant then create gx:Track or gx:MultiTrack\n  const entityPositionProperty = entity.position;\n  if (!entityPositionProperty.isConstant) {\n    createTracks(state, entity, pointGraphics, geometries, styles);\n    return;\n  }\n\n  valueGetter.get(entityPositionProperty, undefined, scratchCartesian3);\n  const coordinates = createBasicElementWithText(\n    kmlDoc,\n    \"coordinates\",\n    getCoordinates(scratchCartesian3, ellipsoid)\n  );\n\n  const pointGeometry = kmlDoc.createElement(\"Point\");\n\n  // Set altitude mode\n  const altitudeMode = kmlDoc.createElement(\"altitudeMode\");\n  altitudeMode.appendChild(\n    getAltitudeMode(state, pointGraphics.heightReference)\n  );\n  pointGeometry.appendChild(altitudeMode);\n\n  pointGeometry.appendChild(coordinates);\n  geometries.push(pointGeometry);\n\n  // Create style\n  const iconStyle =\n    pointGraphics instanceof BillboardGraphics\n      ? createIconStyleFromBillboard(state, pointGraphics)\n      : createIconStyleFromPoint(state, pointGraphics);\n  styles.push(iconStyle);\n}\n\nfunction createTracks(state, entity, pointGraphics, geometries, styles) {\n  const kmlDoc = state.kmlDoc;\n  const ellipsoid = state.ellipsoid;\n  const valueGetter = state.valueGetter;\n\n  let intervals;\n  const entityPositionProperty = entity.position;\n  let useEntityPositionProperty = true;\n  if (entityPositionProperty instanceof CompositePositionProperty) {\n    intervals = entityPositionProperty.intervals;\n    useEntityPositionProperty = false;\n  } else {\n    intervals = defaultValue(entity.availability, state.defaultAvailability);\n  }\n\n  const isModel = pointGraphics instanceof ModelGraphics;\n\n  let i, j, times;\n  const tracks = [];\n  for (i = 0; i < intervals.length; ++i) {\n    const interval = intervals.get(i);\n    let positionProperty = useEntityPositionProperty\n      ? entityPositionProperty\n      : interval.data;\n\n    const trackAltitudeMode = kmlDoc.createElement(\"altitudeMode\");\n    // This is something that KML importing uses to handle clampToGround,\n    //  so just extract the internal property and set the altitudeMode.\n    if (positionProperty instanceof ScaledPositionProperty) {\n      positionProperty = positionProperty._value;\n      trackAltitudeMode.appendChild(\n        getAltitudeMode(state, HeightReference.CLAMP_TO_GROUND)\n      );\n    } else if (defined(pointGraphics)) {\n      trackAltitudeMode.appendChild(\n        getAltitudeMode(state, pointGraphics.heightReference)\n      );\n    } else {\n      // Path graphics only, which has no height reference\n      trackAltitudeMode.appendChild(\n        getAltitudeMode(state, HeightReference.NONE)\n      );\n    }\n\n    const positionTimes = [];\n    const positionValues = [];\n\n    if (positionProperty.isConstant) {\n      valueGetter.get(positionProperty, undefined, scratchCartesian3);\n      const constCoordinates = createBasicElementWithText(\n        kmlDoc,\n        \"coordinates\",\n        getCoordinates(scratchCartesian3, ellipsoid)\n      );\n\n      // This interval is constant so add a track with the same position\n      positionTimes.push(JulianDate.toIso8601(interval.start));\n      positionValues.push(constCoordinates);\n      positionTimes.push(JulianDate.toIso8601(interval.stop));\n      positionValues.push(constCoordinates);\n    } else if (positionProperty instanceof SampledPositionProperty) {\n      times = positionProperty._property._times;\n\n      for (j = 0; j < times.length; ++j) {\n        positionTimes.push(JulianDate.toIso8601(times[j]));\n        positionProperty.getValueInReferenceFrame(\n          times[j],\n          ReferenceFrame.FIXED,\n          scratchCartesian3\n        );\n        positionValues.push(getCoordinates(scratchCartesian3, ellipsoid));\n      }\n    } else if (positionProperty instanceof SampledProperty) {\n      times = positionProperty._times;\n      const values = positionProperty._values;\n\n      for (j = 0; j < times.length; ++j) {\n        positionTimes.push(JulianDate.toIso8601(times[j]));\n        Cartesian3.fromArray(values, j * 3, scratchCartesian3);\n        positionValues.push(getCoordinates(scratchCartesian3, ellipsoid));\n      }\n    } else {\n      const duration = state.sampleDuration;\n      interval.start.clone(scratchJulianDate);\n      if (!interval.isStartIncluded) {\n        JulianDate.addSeconds(scratchJulianDate, duration, scratchJulianDate);\n      }\n\n      const stopDate = interval.stop;\n      while (JulianDate.lessThan(scratchJulianDate, stopDate)) {\n        positionProperty.getValue(scratchJulianDate, scratchCartesian3);\n\n        positionTimes.push(JulianDate.toIso8601(scratchJulianDate));\n        positionValues.push(getCoordinates(scratchCartesian3, ellipsoid));\n\n        JulianDate.addSeconds(scratchJulianDate, duration, scratchJulianDate);\n      }\n\n      if (\n        interval.isStopIncluded &&\n        JulianDate.equals(scratchJulianDate, stopDate)\n      ) {\n        positionProperty.getValue(scratchJulianDate, scratchCartesian3);\n\n        positionTimes.push(JulianDate.toIso8601(scratchJulianDate));\n        positionValues.push(getCoordinates(scratchCartesian3, ellipsoid));\n      }\n    }\n\n    const trackGeometry = kmlDoc.createElementNS(gxNamespace, \"Track\");\n    trackGeometry.appendChild(trackAltitudeMode);\n\n    for (let k = 0; k < positionTimes.length; ++k) {\n      const when = createBasicElementWithText(kmlDoc, \"when\", positionTimes[k]);\n      const coord = createBasicElementWithText(\n        kmlDoc,\n        \"coord\",\n        positionValues[k],\n        gxNamespace\n      );\n\n      trackGeometry.appendChild(when);\n      trackGeometry.appendChild(coord);\n    }\n\n    if (isModel) {\n      trackGeometry.appendChild(createModelGeometry(state, pointGraphics));\n    }\n\n    tracks.push(trackGeometry);\n  }\n\n  // If one track, then use it otherwise combine into a multitrack\n  if (tracks.length === 1) {\n    geometries.push(tracks[0]);\n  } else if (tracks.length > 1) {\n    const multiTrackGeometry = kmlDoc.createElementNS(\n      gxNamespace,\n      \"MultiTrack\"\n    );\n\n    for (i = 0; i < tracks.length; ++i) {\n      multiTrackGeometry.appendChild(tracks[i]);\n    }\n\n    geometries.push(multiTrackGeometry);\n  }\n\n  // Create style\n  if (defined(pointGraphics) && !isModel) {\n    const iconStyle =\n      pointGraphics instanceof BillboardGraphics\n        ? createIconStyleFromBillboard(state, pointGraphics)\n        : createIconStyleFromPoint(state, pointGraphics);\n    styles.push(iconStyle);\n  }\n\n  // See if we have a line that needs to be drawn\n  const path = entity.path;\n  if (defined(path)) {\n    const width = valueGetter.get(path.width);\n    const material = path.material;\n    if (defined(material) || defined(width)) {\n      const lineStyle = kmlDoc.createElement(\"LineStyle\");\n      if (defined(width)) {\n        lineStyle.appendChild(\n          createBasicElementWithText(kmlDoc, \"width\", width)\n        );\n      }\n\n      processMaterial(state, material, lineStyle);\n      styles.push(lineStyle);\n    }\n  }\n}\n\nfunction createIconStyleFromPoint(state, pointGraphics) {\n  const kmlDoc = state.kmlDoc;\n  const valueGetter = state.valueGetter;\n\n  const iconStyle = kmlDoc.createElement(\"IconStyle\");\n\n  const color = valueGetter.getColor(pointGraphics.color);\n  if (defined(color)) {\n    iconStyle.appendChild(createBasicElementWithText(kmlDoc, \"color\", color));\n    iconStyle.appendChild(\n      createBasicElementWithText(kmlDoc, \"colorMode\", \"normal\")\n    );\n  }\n\n  const pixelSize = valueGetter.get(pointGraphics.pixelSize);\n  if (defined(pixelSize)) {\n    iconStyle.appendChild(\n      createBasicElementWithText(kmlDoc, \"scale\", pixelSize / BILLBOARD_SIZE)\n    );\n  }\n\n  return iconStyle;\n}\n\nfunction createIconStyleFromBillboard(state, billboardGraphics) {\n  const kmlDoc = state.kmlDoc;\n  const valueGetter = state.valueGetter;\n  const externalFileHandler = state.externalFileHandler;\n\n  const iconStyle = kmlDoc.createElement(\"IconStyle\");\n\n  let image = valueGetter.get(billboardGraphics.image);\n  if (defined(image)) {\n    image = externalFileHandler.texture(image);\n\n    const icon = kmlDoc.createElement(\"Icon\");\n    icon.appendChild(createBasicElementWithText(kmlDoc, \"href\", image));\n\n    const imageSubRegion = valueGetter.get(billboardGraphics.imageSubRegion);\n    if (defined(imageSubRegion)) {\n      icon.appendChild(\n        createBasicElementWithText(kmlDoc, \"x\", imageSubRegion.x, gxNamespace)\n      );\n      icon.appendChild(\n        createBasicElementWithText(kmlDoc, \"y\", imageSubRegion.y, gxNamespace)\n      );\n      icon.appendChild(\n        createBasicElementWithText(\n          kmlDoc,\n          \"w\",\n          imageSubRegion.width,\n          gxNamespace\n        )\n      );\n      icon.appendChild(\n        createBasicElementWithText(\n          kmlDoc,\n          \"h\",\n          imageSubRegion.height,\n          gxNamespace\n        )\n      );\n    }\n\n    iconStyle.appendChild(icon);\n  }\n\n  const color = valueGetter.getColor(billboardGraphics.color);\n  if (defined(color)) {\n    iconStyle.appendChild(createBasicElementWithText(kmlDoc, \"color\", color));\n    iconStyle.appendChild(\n      createBasicElementWithText(kmlDoc, \"colorMode\", \"normal\")\n    );\n  }\n\n  let scale = valueGetter.get(billboardGraphics.scale);\n  if (defined(scale)) {\n    iconStyle.appendChild(createBasicElementWithText(kmlDoc, \"scale\", scale));\n  }\n\n  const pixelOffset = valueGetter.get(billboardGraphics.pixelOffset);\n  if (defined(pixelOffset)) {\n    scale = defaultValue(scale, 1.0);\n\n    Cartesian2.divideByScalar(pixelOffset, scale, pixelOffset);\n\n    const width = valueGetter.get(billboardGraphics.width, BILLBOARD_SIZE);\n    const height = valueGetter.get(billboardGraphics.height, BILLBOARD_SIZE);\n\n    // KML Hotspots are from the bottom left, but we work from the top left\n\n    // Move to left\n    const horizontalOrigin = valueGetter.get(\n      billboardGraphics.horizontalOrigin,\n      HorizontalOrigin.CENTER\n    );\n    if (horizontalOrigin === HorizontalOrigin.CENTER) {\n      pixelOffset.x -= width * 0.5;\n    } else if (horizontalOrigin === HorizontalOrigin.RIGHT) {\n      pixelOffset.x -= width;\n    }\n\n    // Move to bottom\n    const verticalOrigin = valueGetter.get(\n      billboardGraphics.verticalOrigin,\n      VerticalOrigin.CENTER\n    );\n    if (verticalOrigin === VerticalOrigin.TOP) {\n      pixelOffset.y += height;\n    } else if (verticalOrigin === VerticalOrigin.CENTER) {\n      pixelOffset.y += height * 0.5;\n    }\n\n    const hotSpot = kmlDoc.createElement(\"hotSpot\");\n    hotSpot.setAttribute(\"x\", -pixelOffset.x);\n    hotSpot.setAttribute(\"y\", pixelOffset.y);\n    hotSpot.setAttribute(\"xunits\", \"pixels\");\n    hotSpot.setAttribute(\"yunits\", \"pixels\");\n\n    iconStyle.appendChild(hotSpot);\n  }\n\n  // We can only specify heading so if axis isn't Z, then we skip the rotation\n  // GE treats a heading of zero as no heading but can still point north using a 360 degree angle\n  let rotation = valueGetter.get(billboardGraphics.rotation);\n  const alignedAxis = valueGetter.get(billboardGraphics.alignedAxis);\n  if (defined(rotation) && Cartesian3.equals(Cartesian3.UNIT_Z, alignedAxis)) {\n    rotation = CesiumMath.toDegrees(-rotation);\n    if (rotation === 0) {\n      rotation = 360;\n    }\n\n    iconStyle.appendChild(\n      createBasicElementWithText(kmlDoc, \"heading\", rotation)\n    );\n  }\n\n  return iconStyle;\n}\n\nfunction createLineString(state, polylineGraphics, geometries, styles) {\n  const kmlDoc = state.kmlDoc;\n  const ellipsoid = state.ellipsoid;\n  const valueGetter = state.valueGetter;\n\n  if (!defined(polylineGraphics)) {\n    return;\n  }\n\n  const lineStringGeometry = kmlDoc.createElement(\"LineString\");\n\n  // Set altitude mode\n  const altitudeMode = kmlDoc.createElement(\"altitudeMode\");\n  const clampToGround = valueGetter.get(polylineGraphics.clampToGround, false);\n  let altitudeModeText;\n  if (clampToGround) {\n    lineStringGeometry.appendChild(\n      createBasicElementWithText(kmlDoc, \"tessellate\", true)\n    );\n    altitudeModeText = kmlDoc.createTextNode(\"clampToGround\");\n  } else {\n    altitudeModeText = kmlDoc.createTextNode(\"absolute\");\n  }\n  altitudeMode.appendChild(altitudeModeText);\n  lineStringGeometry.appendChild(altitudeMode);\n\n  // Set coordinates\n  const positionsProperty = polylineGraphics.positions;\n  const cartesians = valueGetter.get(positionsProperty);\n  const coordinates = createBasicElementWithText(\n    kmlDoc,\n    \"coordinates\",\n    getCoordinates(cartesians, ellipsoid)\n  );\n  lineStringGeometry.appendChild(coordinates);\n\n  // Set draw order\n  const zIndex = valueGetter.get(polylineGraphics.zIndex);\n  if (clampToGround && defined(zIndex)) {\n    lineStringGeometry.appendChild(\n      createBasicElementWithText(kmlDoc, \"drawOrder\", zIndex, gxNamespace)\n    );\n  }\n\n  geometries.push(lineStringGeometry);\n\n  // Create style\n  const lineStyle = kmlDoc.createElement(\"LineStyle\");\n\n  const width = valueGetter.get(polylineGraphics.width);\n  if (defined(width)) {\n    lineStyle.appendChild(createBasicElementWithText(kmlDoc, \"width\", width));\n  }\n\n  processMaterial(state, polylineGraphics.material, lineStyle);\n\n  styles.push(lineStyle);\n}\n\nfunction getRectangleBoundaries(state, rectangleGraphics, extrudedHeight) {\n  const kmlDoc = state.kmlDoc;\n  const valueGetter = state.valueGetter;\n\n  let height = valueGetter.get(rectangleGraphics.height, 0.0);\n\n  if (extrudedHeight > 0) {\n    // We extrude up and KML extrudes down, so if we extrude, set the polygon height to\n    // the extruded height so KML will look similar to Cesium\n    height = extrudedHeight;\n  }\n\n  const coordinatesProperty = rectangleGraphics.coordinates;\n  const rectangle = valueGetter.get(coordinatesProperty);\n\n  const coordinateStrings = [];\n  const cornerFunction = [\n    Rectangle.northeast,\n    Rectangle.southeast,\n    Rectangle.southwest,\n    Rectangle.northwest,\n  ];\n\n  for (let i = 0; i < 4; ++i) {\n    cornerFunction[i](rectangle, scratchCartographic);\n    coordinateStrings.push(\n      `${CesiumMath.toDegrees(\n        scratchCartographic.longitude\n      )},${CesiumMath.toDegrees(scratchCartographic.latitude)},${height}`\n    );\n  }\n\n  const coordinates = createBasicElementWithText(\n    kmlDoc,\n    \"coordinates\",\n    coordinateStrings.join(\" \")\n  );\n\n  const outerBoundaryIs = kmlDoc.createElement(\"outerBoundaryIs\");\n  const linearRing = kmlDoc.createElement(\"LinearRing\");\n  linearRing.appendChild(coordinates);\n  outerBoundaryIs.appendChild(linearRing);\n\n  return [outerBoundaryIs];\n}\n\nfunction getLinearRing(state, positions, height, perPositionHeight) {\n  const kmlDoc = state.kmlDoc;\n  const ellipsoid = state.ellipsoid;\n\n  const coordinateStrings = [];\n  const positionCount = positions.length;\n  for (let i = 0; i < positionCount; ++i) {\n    Cartographic.fromCartesian(positions[i], ellipsoid, scratchCartographic);\n    coordinateStrings.push(\n      `${CesiumMath.toDegrees(\n        scratchCartographic.longitude\n      )},${CesiumMath.toDegrees(scratchCartographic.latitude)},${\n        perPositionHeight ? scratchCartographic.height : height\n      }`\n    );\n  }\n\n  const coordinates = createBasicElementWithText(\n    kmlDoc,\n    \"coordinates\",\n    coordinateStrings.join(\" \")\n  );\n  const linearRing = kmlDoc.createElement(\"LinearRing\");\n  linearRing.appendChild(coordinates);\n\n  return linearRing;\n}\n\nfunction getPolygonBoundaries(state, polygonGraphics, extrudedHeight) {\n  const kmlDoc = state.kmlDoc;\n  const valueGetter = state.valueGetter;\n\n  let height = valueGetter.get(polygonGraphics.height, 0.0);\n  const perPositionHeight = valueGetter.get(\n    polygonGraphics.perPositionHeight,\n    false\n  );\n\n  if (!perPositionHeight && extrudedHeight > 0) {\n    // We extrude up and KML extrudes down, so if we extrude, set the polygon height to\n    // the extruded height so KML will look similar to Cesium\n    height = extrudedHeight;\n  }\n\n  const boundaries = [];\n  const hierarchyProperty = polygonGraphics.hierarchy;\n  const hierarchy = valueGetter.get(hierarchyProperty);\n\n  // Polygon hierarchy can sometimes just be an array of positions\n  const positions = Array.isArray(hierarchy) ? hierarchy : hierarchy.positions;\n\n  // Polygon boundaries\n  const outerBoundaryIs = kmlDoc.createElement(\"outerBoundaryIs\");\n  outerBoundaryIs.appendChild(\n    getLinearRing(state, positions, height, perPositionHeight)\n  );\n  boundaries.push(outerBoundaryIs);\n\n  // Hole boundaries\n  const holes = hierarchy.holes;\n  if (defined(holes)) {\n    const holeCount = holes.length;\n    for (let i = 0; i < holeCount; ++i) {\n      const innerBoundaryIs = kmlDoc.createElement(\"innerBoundaryIs\");\n      innerBoundaryIs.appendChild(\n        getLinearRing(state, holes[i].positions, height, perPositionHeight)\n      );\n      boundaries.push(innerBoundaryIs);\n    }\n  }\n\n  return boundaries;\n}\n\nfunction createPolygon(state, geometry, geometries, styles, overlays) {\n  const kmlDoc = state.kmlDoc;\n  const valueGetter = state.valueGetter;\n\n  if (!defined(geometry)) {\n    return;\n  }\n\n  // Detect textured quads and use ground overlays instead\n  const isRectangle = geometry instanceof RectangleGraphics;\n  if (\n    isRectangle &&\n    valueGetter.getMaterialType(geometry.material) === \"Image\"\n  ) {\n    createGroundOverlay(state, geometry, overlays);\n    return;\n  }\n\n  const polygonGeometry = kmlDoc.createElement(\"Polygon\");\n\n  const extrudedHeight = valueGetter.get(geometry.extrudedHeight, 0.0);\n  if (extrudedHeight > 0) {\n    polygonGeometry.appendChild(\n      createBasicElementWithText(kmlDoc, \"extrude\", true)\n    );\n  }\n\n  // Set boundaries\n  const boundaries = isRectangle\n    ? getRectangleBoundaries(state, geometry, extrudedHeight)\n    : getPolygonBoundaries(state, geometry, extrudedHeight);\n\n  const boundaryCount = boundaries.length;\n  for (let i = 0; i < boundaryCount; ++i) {\n    polygonGeometry.appendChild(boundaries[i]);\n  }\n\n  // Set altitude mode\n  const altitudeMode = kmlDoc.createElement(\"altitudeMode\");\n  altitudeMode.appendChild(getAltitudeMode(state, geometry.heightReference));\n  polygonGeometry.appendChild(altitudeMode);\n\n  geometries.push(polygonGeometry);\n\n  // Create style\n  const polyStyle = kmlDoc.createElement(\"PolyStyle\");\n\n  const fill = valueGetter.get(geometry.fill, false);\n  if (fill) {\n    polyStyle.appendChild(createBasicElementWithText(kmlDoc, \"fill\", fill));\n  }\n\n  processMaterial(state, geometry.material, polyStyle);\n\n  const outline = valueGetter.get(geometry.outline, false);\n  if (outline) {\n    polyStyle.appendChild(\n      createBasicElementWithText(kmlDoc, \"outline\", outline)\n    );\n\n    // Outline uses LineStyle\n    const lineStyle = kmlDoc.createElement(\"LineStyle\");\n\n    const outlineWidth = valueGetter.get(geometry.outlineWidth, 1.0);\n    lineStyle.appendChild(\n      createBasicElementWithText(kmlDoc, \"width\", outlineWidth)\n    );\n\n    const outlineColor = valueGetter.getColor(\n      geometry.outlineColor,\n      Color.BLACK\n    );\n    lineStyle.appendChild(\n      createBasicElementWithText(kmlDoc, \"color\", outlineColor)\n    );\n    lineStyle.appendChild(\n      createBasicElementWithText(kmlDoc, \"colorMode\", \"normal\")\n    );\n\n    styles.push(lineStyle);\n  }\n\n  styles.push(polyStyle);\n}\n\nfunction createGroundOverlay(state, rectangleGraphics, overlays) {\n  const kmlDoc = state.kmlDoc;\n  const valueGetter = state.valueGetter;\n  const externalFileHandler = state.externalFileHandler;\n\n  const groundOverlay = kmlDoc.createElement(\"GroundOverlay\");\n\n  // Set altitude mode\n  const altitudeMode = kmlDoc.createElement(\"altitudeMode\");\n  altitudeMode.appendChild(\n    getAltitudeMode(state, rectangleGraphics.heightReference)\n  );\n  groundOverlay.appendChild(altitudeMode);\n\n  const height = valueGetter.get(rectangleGraphics.height);\n  if (defined(height)) {\n    groundOverlay.appendChild(\n      createBasicElementWithText(kmlDoc, \"altitude\", height)\n    );\n  }\n\n  const rectangle = valueGetter.get(rectangleGraphics.coordinates);\n  const latLonBox = kmlDoc.createElement(\"LatLonBox\");\n  latLonBox.appendChild(\n    createBasicElementWithText(\n      kmlDoc,\n      \"north\",\n      CesiumMath.toDegrees(rectangle.north)\n    )\n  );\n  latLonBox.appendChild(\n    createBasicElementWithText(\n      kmlDoc,\n      \"south\",\n      CesiumMath.toDegrees(rectangle.south)\n    )\n  );\n  latLonBox.appendChild(\n    createBasicElementWithText(\n      kmlDoc,\n      \"east\",\n      CesiumMath.toDegrees(rectangle.east)\n    )\n  );\n  latLonBox.appendChild(\n    createBasicElementWithText(\n      kmlDoc,\n      \"west\",\n      CesiumMath.toDegrees(rectangle.west)\n    )\n  );\n  groundOverlay.appendChild(latLonBox);\n\n  // We should only end up here if we have an ImageMaterialProperty\n  const material = valueGetter.get(rectangleGraphics.material);\n  const href = externalFileHandler.texture(material.image);\n  const icon = kmlDoc.createElement(\"Icon\");\n  icon.appendChild(createBasicElementWithText(kmlDoc, \"href\", href));\n  groundOverlay.appendChild(icon);\n\n  const color = material.color;\n  if (defined(color)) {\n    groundOverlay.appendChild(\n      createBasicElementWithText(kmlDoc, \"color\", colorToString(material.color))\n    );\n  }\n\n  overlays.push(groundOverlay);\n}\n\nfunction createModelGeometry(state, modelGraphics) {\n  const kmlDoc = state.kmlDoc;\n  const valueGetter = state.valueGetter;\n  const externalFileHandler = state.externalFileHandler;\n\n  const modelGeometry = kmlDoc.createElement(\"Model\");\n\n  const scale = valueGetter.get(modelGraphics.scale);\n  if (defined(scale)) {\n    const scaleElement = kmlDoc.createElement(\"scale\");\n    scaleElement.appendChild(createBasicElementWithText(kmlDoc, \"x\", scale));\n    scaleElement.appendChild(createBasicElementWithText(kmlDoc, \"y\", scale));\n    scaleElement.appendChild(createBasicElementWithText(kmlDoc, \"z\", scale));\n    modelGeometry.appendChild(scaleElement);\n  }\n\n  const link = kmlDoc.createElement(\"Link\");\n  const uri = externalFileHandler.model(modelGraphics, state.time);\n\n  link.appendChild(createBasicElementWithText(kmlDoc, \"href\", uri));\n  modelGeometry.appendChild(link);\n\n  return modelGeometry;\n}\n\nfunction createModel(state, entity, modelGraphics, geometries, styles) {\n  const kmlDoc = state.kmlDoc;\n  const ellipsoid = state.ellipsoid;\n  const valueGetter = state.valueGetter;\n\n  if (!defined(modelGraphics)) {\n    return;\n  }\n\n  // If the point isn't constant then create gx:Track or gx:MultiTrack\n  const entityPositionProperty = entity.position;\n  if (!entityPositionProperty.isConstant) {\n    createTracks(state, entity, modelGraphics, geometries, styles);\n    return;\n  }\n\n  const modelGeometry = createModelGeometry(state, modelGraphics);\n\n  // Set altitude mode\n  const altitudeMode = kmlDoc.createElement(\"altitudeMode\");\n  altitudeMode.appendChild(\n    getAltitudeMode(state, modelGraphics.heightReference)\n  );\n  modelGeometry.appendChild(altitudeMode);\n\n  valueGetter.get(entityPositionProperty, undefined, scratchCartesian3);\n  Cartographic.fromCartesian(scratchCartesian3, ellipsoid, scratchCartographic);\n  const location = kmlDoc.createElement(\"Location\");\n  location.appendChild(\n    createBasicElementWithText(\n      kmlDoc,\n      \"longitude\",\n      CesiumMath.toDegrees(scratchCartographic.longitude)\n    )\n  );\n  location.appendChild(\n    createBasicElementWithText(\n      kmlDoc,\n      \"latitude\",\n      CesiumMath.toDegrees(scratchCartographic.latitude)\n    )\n  );\n  location.appendChild(\n    createBasicElementWithText(kmlDoc, \"altitude\", scratchCartographic.height)\n  );\n  modelGeometry.appendChild(location);\n\n  geometries.push(modelGeometry);\n}\n\nfunction processMaterial(state, materialProperty, style) {\n  const kmlDoc = state.kmlDoc;\n  const valueGetter = state.valueGetter;\n\n  if (!defined(materialProperty)) {\n    return;\n  }\n\n  const material = valueGetter.get(materialProperty);\n  if (!defined(material)) {\n    return;\n  }\n\n  let color;\n  const type = valueGetter.getMaterialType(materialProperty);\n  let outlineColor;\n  let outlineWidth;\n  switch (type) {\n    case \"Image\":\n      // Image materials are only able to be represented on rectangles, so if we make it\n      //  here we can't texture a generic polygon or polyline in KML, so just use white.\n      color = colorToString(Color.WHITE);\n      break;\n    case \"Color\":\n    case \"Grid\":\n    case \"PolylineGlow\":\n    case \"PolylineArrow\":\n    case \"PolylineDash\":\n      color = colorToString(material.color);\n      break;\n    case \"PolylineOutline\":\n      color = colorToString(material.color);\n\n      outlineColor = colorToString(material.outlineColor);\n      outlineWidth = material.outlineWidth;\n      style.appendChild(\n        createBasicElementWithText(\n          kmlDoc,\n          \"outerColor\",\n          outlineColor,\n          gxNamespace\n        )\n      );\n      style.appendChild(\n        createBasicElementWithText(\n          kmlDoc,\n          \"outerWidth\",\n          outlineWidth,\n          gxNamespace\n        )\n      );\n      break;\n    case \"Stripe\":\n      color = colorToString(material.oddColor);\n      break;\n  }\n\n  if (defined(color)) {\n    style.appendChild(createBasicElementWithText(kmlDoc, \"color\", color));\n    style.appendChild(\n      createBasicElementWithText(kmlDoc, \"colorMode\", \"normal\")\n    );\n  }\n}\n\nfunction getAltitudeMode(state, heightReferenceProperty) {\n  const kmlDoc = state.kmlDoc;\n  const valueGetter = state.valueGetter;\n\n  const heightReference = valueGetter.get(\n    heightReferenceProperty,\n    HeightReference.NONE\n  );\n  let altitudeModeText;\n  switch (heightReference) {\n    case HeightReference.NONE:\n      altitudeModeText = kmlDoc.createTextNode(\"absolute\");\n      break;\n    case HeightReference.CLAMP_TO_GROUND:\n      altitudeModeText = kmlDoc.createTextNode(\"clampToGround\");\n      break;\n    case HeightReference.RELATIVE_TO_GROUND:\n      altitudeModeText = kmlDoc.createTextNode(\"relativeToGround\");\n      break;\n  }\n\n  return altitudeModeText;\n}\n\nfunction getCoordinates(coordinates, ellipsoid) {\n  if (!Array.isArray(coordinates)) {\n    coordinates = [coordinates];\n  }\n\n  const count = coordinates.length;\n  const coordinateStrings = [];\n  for (let i = 0; i < count; ++i) {\n    Cartographic.fromCartesian(coordinates[i], ellipsoid, scratchCartographic);\n    coordinateStrings.push(\n      `${CesiumMath.toDegrees(\n        scratchCartographic.longitude\n      )},${CesiumMath.toDegrees(scratchCartographic.latitude)},${\n        scratchCartographic.height\n      }`\n    );\n  }\n\n  return coordinateStrings.join(\" \");\n}\n\nfunction createBasicElementWithText(\n  kmlDoc,\n  elementName,\n  elementValue,\n  namespace\n) {\n  elementValue = defaultValue(elementValue, \"\");\n\n  if (typeof elementValue === \"boolean\") {\n    elementValue = elementValue ? \"1\" : \"0\";\n  }\n\n  // Create element with optional namespace\n  const element = defined(namespace)\n    ? kmlDoc.createElementNS(namespace, elementName)\n    : kmlDoc.createElement(elementName);\n\n  // Wrap value in CDATA section if it contains HTML\n  const text =\n    elementValue === \"string\" && elementValue.indexOf(\"<\") !== -1\n      ? kmlDoc.createCDATASection(elementValue)\n      : kmlDoc.createTextNode(elementValue);\n\n  element.appendChild(text);\n\n  return element;\n}\n\nfunction colorToString(color) {\n  let result = \"\";\n  const bytes = color.toBytes();\n  for (let i = 3; i >= 0; --i) {\n    result +=\n      bytes[i] < 16 ? `0${bytes[i].toString(16)}` : bytes[i].toString(16);\n  }\n\n  return result;\n}\n\n/**\n * Since KML does not support glTF models, this callback is required to specify what URL to use for the model in the KML document.\n * It can also be used to add additional files to the <code>externalFiles</code> object, which is the list of files embedded in the exported KMZ,\n * or otherwise returned with the KML string when exporting.\n *\n * @callback exportKmlModelCallback\n *\n * @param {ModelGraphics} model The ModelGraphics instance for an Entity.\n * @param {JulianDate} time The time that any properties should use to get the value.\n * @param {Object} externalFiles An object that maps a filename to a Blob or a Promise that resolves to a Blob.\n * @returns {String} The URL to use for the href in the KML document.\n */\nexport default exportKml;\n","import defined from \"../Core/defined.js\";\nimport CallbackProperty from \"./CallbackProperty.js\";\nimport GeometryUpdater from \"./GeometryUpdater.js\";\nimport TerrainOffsetProperty from \"./TerrainOffsetProperty.js\";\n\nfunction heightReferenceOnEntityPropertyChanged(\n  entity,\n  propertyName,\n  newValue,\n  oldValue\n) {\n  GeometryUpdater.prototype._onEntityPropertyChanged.call(\n    this,\n    entity,\n    propertyName,\n    newValue,\n    oldValue\n  );\n  if (this._observedPropertyNames.indexOf(propertyName) === -1) {\n    return;\n  }\n\n  const geometry = this._entity[this._geometryPropertyName];\n  if (!defined(geometry)) {\n    return;\n  }\n\n  if (defined(this._terrainOffsetProperty)) {\n    this._terrainOffsetProperty.destroy();\n    this._terrainOffsetProperty = undefined;\n  }\n\n  const heightReferenceProperty = geometry.heightReference;\n\n  if (defined(heightReferenceProperty)) {\n    const centerPosition = new CallbackProperty(\n      this._computeCenter.bind(this),\n      !this._dynamic\n    );\n    this._terrainOffsetProperty = new TerrainOffsetProperty(\n      this._scene,\n      centerPosition,\n      heightReferenceProperty\n    );\n  }\n}\nexport default heightReferenceOnEntityPropertyChanged;\n","import Cartesian3 from \"../Core/Cartesian3.js\";\nimport Matrix4 from \"../Core/Matrix4.js\";\nimport WebGLConstants from \"../Core/WebGLConstants.js\";\n\nconst viewerPositionWCScratch = new Cartesian3();\n\nfunction AutomaticUniform(options) {\n  this._size = options.size;\n  this._datatype = options.datatype;\n  this.getValue = options.getValue;\n}\n\nconst datatypeToGlsl = {};\ndatatypeToGlsl[WebGLConstants.FLOAT] = \"float\";\ndatatypeToGlsl[WebGLConstants.FLOAT_VEC2] = \"vec2\";\ndatatypeToGlsl[WebGLConstants.FLOAT_VEC3] = \"vec3\";\ndatatypeToGlsl[WebGLConstants.FLOAT_VEC4] = \"vec4\";\ndatatypeToGlsl[WebGLConstants.INT] = \"int\";\ndatatypeToGlsl[WebGLConstants.INT_VEC2] = \"ivec2\";\ndatatypeToGlsl[WebGLConstants.INT_VEC3] = \"ivec3\";\ndatatypeToGlsl[WebGLConstants.INT_VEC4] = \"ivec4\";\ndatatypeToGlsl[WebGLConstants.BOOL] = \"bool\";\ndatatypeToGlsl[WebGLConstants.BOOL_VEC2] = \"bvec2\";\ndatatypeToGlsl[WebGLConstants.BOOL_VEC3] = \"bvec3\";\ndatatypeToGlsl[WebGLConstants.BOOL_VEC4] = \"bvec4\";\ndatatypeToGlsl[WebGLConstants.FLOAT_MAT2] = \"mat2\";\ndatatypeToGlsl[WebGLConstants.FLOAT_MAT3] = \"mat3\";\ndatatypeToGlsl[WebGLConstants.FLOAT_MAT4] = \"mat4\";\ndatatypeToGlsl[WebGLConstants.SAMPLER_2D] = \"sampler2D\";\ndatatypeToGlsl[WebGLConstants.SAMPLER_CUBE] = \"samplerCube\";\n\nAutomaticUniform.prototype.getDeclaration = function (name) {\n  let declaration = `uniform ${datatypeToGlsl[this._datatype]} ${name}`;\n\n  const size = this._size;\n  if (size === 1) {\n    declaration += \";\";\n  } else {\n    declaration += `[${size.toString()}];`;\n  }\n\n  return declaration;\n};\n\n/**\n * @private\n */\nconst AutomaticUniforms = {\n  /**\n   * An automatic GLSL uniform containing the viewport's <code>x</code>, <code>y</code>, <code>width</code>,\n   * and <code>height</code> properties in an <code>vec4</code>'s <code>x</code>, <code>y</code>, <code>z</code>,\n   * and <code>w</code> components, respectively.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform vec4 czm_viewport;\n   *\n   * // Scale the window coordinate components to [0, 1] by dividing\n   * // by the viewport's width and height.\n   * vec2 v = gl_FragCoord.xy / czm_viewport.zw;\n   *\n   * @see Context#getViewport\n   */\n  czm_viewport: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_VEC4,\n    getValue: function (uniformState) {\n      return uniformState.viewportCartesian4;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 4x4 orthographic projection matrix that\n   * transforms window coordinates to clip coordinates.  Clip coordinates is the\n   * coordinate system for a vertex shader's <code>gl_Position</code> output.\n   * <br /><br />\n   * This transform is useful when a vertex shader inputs or manipulates window coordinates\n   * as done by {@link BillboardCollection}.\n   * <br /><br />\n   * Do not confuse {@link czm_viewportTransformation} with <code>czm_viewportOrthographic</code>.\n   * The former transforms from normalized device coordinates to window coordinates; the later transforms\n   * from window coordinates to clip coordinates, and is often used to assign to <code>gl_Position</code>.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat4 czm_viewportOrthographic;\n   *\n   * // Example\n   * gl_Position = czm_viewportOrthographic * vec4(windowPosition, 0.0, 1.0);\n   *\n   * @see UniformState#viewportOrthographic\n   * @see czm_viewport\n   * @see czm_viewportTransformation\n   * @see BillboardCollection\n   */\n  czm_viewportOrthographic: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT4,\n    getValue: function (uniformState) {\n      return uniformState.viewportOrthographic;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 4x4 transformation matrix that\n   * transforms normalized device coordinates to window coordinates.  The context's\n   * full viewport is used, and the depth range is assumed to be <code>near = 0</code>\n   * and <code>far = 1</code>.\n   * <br /><br />\n   * This transform is useful when there is a need to manipulate window coordinates\n   * in a vertex shader as done by {@link BillboardCollection}.  In many cases,\n   * this matrix will not be used directly; instead, {@link czm_modelToWindowCoordinates}\n   * will be used to transform directly from model to window coordinates.\n   * <br /><br />\n   * Do not confuse <code>czm_viewportTransformation</code> with {@link czm_viewportOrthographic}.\n   * The former transforms from normalized device coordinates to window coordinates; the later transforms\n   * from window coordinates to clip coordinates, and is often used to assign to <code>gl_Position</code>.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat4 czm_viewportTransformation;\n   *\n   * // Use czm_viewportTransformation as part of the\n   * // transform from model to window coordinates.\n   * vec4 q = czm_modelViewProjection * positionMC;               // model to clip coordinates\n   * q.xyz /= q.w;                                                // clip to normalized device coordinates (ndc)\n   * q.xyz = (czm_viewportTransformation * vec4(q.xyz, 1.0)).xyz; // ndc to window coordinates\n   *\n   * @see UniformState#viewportTransformation\n   * @see czm_viewport\n   * @see czm_viewportOrthographic\n   * @see czm_modelToWindowCoordinates\n   * @see BillboardCollection\n   */\n  czm_viewportTransformation: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT4,\n    getValue: function (uniformState) {\n      return uniformState.viewportTransformation;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing the depth of the scene\n   * after the globe pass and then updated after the 3D Tiles pass.\n   * The depth is packed into an RGBA texture.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform sampler2D czm_globeDepthTexture;\n   *\n   * // Get the depth at the current fragment\n   * vec2 coords = gl_FragCoord.xy / czm_viewport.zw;\n   * float depth = czm_unpackDepth(texture2D(czm_globeDepthTexture, coords));\n   */\n  czm_globeDepthTexture: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.SAMPLER_2D,\n    getValue: function (uniformState) {\n      return uniformState.globeDepthTexture;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 4x4 model transformation matrix that\n   * transforms model coordinates to world coordinates.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat4 czm_model;\n   *\n   * // Example\n   * vec4 worldPosition = czm_model * modelPosition;\n   *\n   * @see UniformState#model\n   * @see czm_inverseModel\n   * @see czm_modelView\n   * @see czm_modelViewProjection\n   */\n  czm_model: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT4,\n    getValue: function (uniformState) {\n      return uniformState.model;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 4x4 model transformation matrix that\n   * transforms world coordinates to model coordinates.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat4 czm_inverseModel;\n   *\n   * // Example\n   * vec4 modelPosition = czm_inverseModel * worldPosition;\n   *\n   * @see UniformState#inverseModel\n   * @see czm_model\n   * @see czm_inverseModelView\n   */\n  czm_inverseModel: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT4,\n    getValue: function (uniformState) {\n      return uniformState.inverseModel;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 4x4 view transformation matrix that\n   * transforms world coordinates to eye coordinates.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat4 czm_view;\n   *\n   * // Example\n   * vec4 eyePosition = czm_view * worldPosition;\n   *\n   * @see UniformState#view\n   * @see czm_viewRotation\n   * @see czm_modelView\n   * @see czm_viewProjection\n   * @see czm_modelViewProjection\n   * @see czm_inverseView\n   */\n  czm_view: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT4,\n    getValue: function (uniformState) {\n      return uniformState.view;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 4x4 view transformation matrix that\n   * transforms 3D world coordinates to eye coordinates.  In 3D mode, this is identical to\n   * {@link czm_view}, but in 2D and Columbus View it represents the view matrix\n   * as if the camera were at an equivalent location in 3D mode.  This is useful for lighting\n   * 2D and Columbus View in the same way that 3D is lit.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat4 czm_view3D;\n   *\n   * // Example\n   * vec4 eyePosition3D = czm_view3D * worldPosition3D;\n   *\n   * @see UniformState#view3D\n   * @see czm_view\n   */\n  czm_view3D: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT4,\n    getValue: function (uniformState) {\n      return uniformState.view3D;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 3x3 view rotation matrix that\n   * transforms vectors in world coordinates to eye coordinates.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat3 czm_viewRotation;\n   *\n   * // Example\n   * vec3 eyeVector = czm_viewRotation * worldVector;\n   *\n   * @see UniformState#viewRotation\n   * @see czm_view\n   * @see czm_inverseView\n   * @see czm_inverseViewRotation\n   */\n  czm_viewRotation: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT3,\n    getValue: function (uniformState) {\n      return uniformState.viewRotation;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 3x3 view rotation matrix that\n   * transforms vectors in 3D world coordinates to eye coordinates.  In 3D mode, this is identical to\n   * {@link czm_viewRotation}, but in 2D and Columbus View it represents the view matrix\n   * as if the camera were at an equivalent location in 3D mode.  This is useful for lighting\n   * 2D and Columbus View in the same way that 3D is lit.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat3 czm_viewRotation3D;\n   *\n   * // Example\n   * vec3 eyeVector = czm_viewRotation3D * worldVector;\n   *\n   * @see UniformState#viewRotation3D\n   * @see czm_viewRotation\n   */\n  czm_viewRotation3D: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT3,\n    getValue: function (uniformState) {\n      return uniformState.viewRotation3D;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 4x4 transformation matrix that\n   * transforms from eye coordinates to world coordinates.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat4 czm_inverseView;\n   *\n   * // Example\n   * vec4 worldPosition = czm_inverseView * eyePosition;\n   *\n   * @see UniformState#inverseView\n   * @see czm_view\n   * @see czm_inverseNormal\n   */\n  czm_inverseView: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT4,\n    getValue: function (uniformState) {\n      return uniformState.inverseView;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 4x4 transformation matrix that\n   * transforms from 3D eye coordinates to world coordinates.  In 3D mode, this is identical to\n   * {@link czm_inverseView}, but in 2D and Columbus View it represents the inverse view matrix\n   * as if the camera were at an equivalent location in 3D mode.  This is useful for lighting\n   * 2D and Columbus View in the same way that 3D is lit.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat4 czm_inverseView3D;\n   *\n   * // Example\n   * vec4 worldPosition = czm_inverseView3D * eyePosition;\n   *\n   * @see UniformState#inverseView3D\n   * @see czm_inverseView\n   */\n  czm_inverseView3D: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT4,\n    getValue: function (uniformState) {\n      return uniformState.inverseView3D;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 3x3 rotation matrix that\n   * transforms vectors from eye coordinates to world coordinates.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat3 czm_inverseViewRotation;\n   *\n   * // Example\n   * vec4 worldVector = czm_inverseViewRotation * eyeVector;\n   *\n   * @see UniformState#inverseView\n   * @see czm_view\n   * @see czm_viewRotation\n   * @see czm_inverseViewRotation\n   */\n  czm_inverseViewRotation: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT3,\n    getValue: function (uniformState) {\n      return uniformState.inverseViewRotation;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 3x3 rotation matrix that\n   * transforms vectors from 3D eye coordinates to world coordinates.  In 3D mode, this is identical to\n   * {@link czm_inverseViewRotation}, but in 2D and Columbus View it represents the inverse view matrix\n   * as if the camera were at an equivalent location in 3D mode.  This is useful for lighting\n   * 2D and Columbus View in the same way that 3D is lit.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat3 czm_inverseViewRotation3D;\n   *\n   * // Example\n   * vec4 worldVector = czm_inverseViewRotation3D * eyeVector;\n   *\n   * @see UniformState#inverseView3D\n   * @see czm_inverseViewRotation\n   */\n  czm_inverseViewRotation3D: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT3,\n    getValue: function (uniformState) {\n      return uniformState.inverseViewRotation3D;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 4x4 projection transformation matrix that\n   * transforms eye coordinates to clip coordinates.  Clip coordinates is the\n   * coordinate system for a vertex shader's <code>gl_Position</code> output.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat4 czm_projection;\n   *\n   * // Example\n   * gl_Position = czm_projection * eyePosition;\n   *\n   * @see UniformState#projection\n   * @see czm_viewProjection\n   * @see czm_modelViewProjection\n   * @see czm_infiniteProjection\n   */\n  czm_projection: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT4,\n    getValue: function (uniformState) {\n      return uniformState.projection;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 4x4 inverse projection transformation matrix that\n   * transforms from clip coordinates to eye coordinates. Clip coordinates is the\n   * coordinate system for a vertex shader's <code>gl_Position</code> output.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat4 czm_inverseProjection;\n   *\n   * // Example\n   * vec4 eyePosition = czm_inverseProjection * clipPosition;\n   *\n   * @see UniformState#inverseProjection\n   * @see czm_projection\n   */\n  czm_inverseProjection: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT4,\n    getValue: function (uniformState) {\n      return uniformState.inverseProjection;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 4x4 projection transformation matrix with the far plane at infinity,\n   * that transforms eye coordinates to clip coordinates.  Clip coordinates is the\n   * coordinate system for a vertex shader's <code>gl_Position</code> output.  An infinite far plane is used\n   * in algorithms like shadow volumes and GPU ray casting with proxy geometry to ensure that triangles\n   * are not clipped by the far plane.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat4 czm_infiniteProjection;\n   *\n   * // Example\n   * gl_Position = czm_infiniteProjection * eyePosition;\n   *\n   * @see UniformState#infiniteProjection\n   * @see czm_projection\n   * @see czm_modelViewInfiniteProjection\n   */\n  czm_infiniteProjection: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT4,\n    getValue: function (uniformState) {\n      return uniformState.infiniteProjection;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 4x4 model-view transformation matrix that\n   * transforms model coordinates to eye coordinates.\n   * <br /><br />\n   * Positions should be transformed to eye coordinates using <code>czm_modelView</code> and\n   * normals should be transformed using {@link czm_normal}.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat4 czm_modelView;\n   *\n   * // Example\n   * vec4 eyePosition = czm_modelView * modelPosition;\n   *\n   * // The above is equivalent to, but more efficient than:\n   * vec4 eyePosition = czm_view * czm_model * modelPosition;\n   *\n   * @see UniformState#modelView\n   * @see czm_model\n   * @see czm_view\n   * @see czm_modelViewProjection\n   * @see czm_normal\n   */\n  czm_modelView: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT4,\n    getValue: function (uniformState) {\n      return uniformState.modelView;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 4x4 model-view transformation matrix that\n   * transforms 3D model coordinates to eye coordinates.  In 3D mode, this is identical to\n   * {@link czm_modelView}, but in 2D and Columbus View it represents the model-view matrix\n   * as if the camera were at an equivalent location in 3D mode.  This is useful for lighting\n   * 2D and Columbus View in the same way that 3D is lit.\n   * <br /><br />\n   * Positions should be transformed to eye coordinates using <code>czm_modelView3D</code> and\n   * normals should be transformed using {@link czm_normal3D}.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat4 czm_modelView3D;\n   *\n   * // Example\n   * vec4 eyePosition = czm_modelView3D * modelPosition;\n   *\n   * // The above is equivalent to, but more efficient than:\n   * vec4 eyePosition = czm_view3D * czm_model * modelPosition;\n   *\n   * @see UniformState#modelView3D\n   * @see czm_modelView\n   */\n  czm_modelView3D: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT4,\n    getValue: function (uniformState) {\n      return uniformState.modelView3D;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 4x4 model-view transformation matrix that\n   * transforms model coordinates, relative to the eye, to eye coordinates.  This is used\n   * in conjunction with {@link czm_translateRelativeToEye}.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat4 czm_modelViewRelativeToEye;\n   *\n   * // Example\n   * attribute vec3 positionHigh;\n   * attribute vec3 positionLow;\n   *\n   * void main()\n   * {\n   *   vec4 p = czm_translateRelativeToEye(positionHigh, positionLow);\n   *   gl_Position = czm_projection * (czm_modelViewRelativeToEye * p);\n   * }\n   *\n   * @see czm_modelViewProjectionRelativeToEye\n   * @see czm_translateRelativeToEye\n   * @see EncodedCartesian3\n   */\n  czm_modelViewRelativeToEye: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT4,\n    getValue: function (uniformState) {\n      return uniformState.modelViewRelativeToEye;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 4x4 transformation matrix that\n   * transforms from eye coordinates to model coordinates.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat4 czm_inverseModelView;\n   *\n   * // Example\n   * vec4 modelPosition = czm_inverseModelView * eyePosition;\n   *\n   * @see UniformState#inverseModelView\n   * @see czm_modelView\n   */\n  czm_inverseModelView: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT4,\n    getValue: function (uniformState) {\n      return uniformState.inverseModelView;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 4x4 transformation matrix that\n   * transforms from eye coordinates to 3D model coordinates.  In 3D mode, this is identical to\n   * {@link czm_inverseModelView}, but in 2D and Columbus View it represents the inverse model-view matrix\n   * as if the camera were at an equivalent location in 3D mode.  This is useful for lighting\n   * 2D and Columbus View in the same way that 3D is lit.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat4 czm_inverseModelView3D;\n   *\n   * // Example\n   * vec4 modelPosition = czm_inverseModelView3D * eyePosition;\n   *\n   * @see UniformState#inverseModelView\n   * @see czm_inverseModelView\n   * @see czm_modelView3D\n   */\n  czm_inverseModelView3D: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT4,\n    getValue: function (uniformState) {\n      return uniformState.inverseModelView3D;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 4x4 view-projection transformation matrix that\n   * transforms world coordinates to clip coordinates.  Clip coordinates is the\n   * coordinate system for a vertex shader's <code>gl_Position</code> output.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat4 czm_viewProjection;\n   *\n   * // Example\n   * vec4 gl_Position = czm_viewProjection * czm_model * modelPosition;\n   *\n   * // The above is equivalent to, but more efficient than:\n   * gl_Position = czm_projection * czm_view * czm_model * modelPosition;\n   *\n   * @see UniformState#viewProjection\n   * @see czm_view\n   * @see czm_projection\n   * @see czm_modelViewProjection\n   * @see czm_inverseViewProjection\n   */\n  czm_viewProjection: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT4,\n    getValue: function (uniformState) {\n      return uniformState.viewProjection;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 4x4 view-projection transformation matrix that\n   * transforms clip coordinates to world coordinates.  Clip coordinates is the\n   * coordinate system for a vertex shader's <code>gl_Position</code> output.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat4 czm_inverseViewProjection;\n   *\n   * // Example\n   * vec4 worldPosition = czm_inverseViewProjection * clipPosition;\n   *\n   * @see UniformState#inverseViewProjection\n   * @see czm_viewProjection\n   */\n  czm_inverseViewProjection: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT4,\n    getValue: function (uniformState) {\n      return uniformState.inverseViewProjection;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 4x4 model-view-projection transformation matrix that\n   * transforms model coordinates to clip coordinates.  Clip coordinates is the\n   * coordinate system for a vertex shader's <code>gl_Position</code> output.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat4 czm_modelViewProjection;\n   *\n   * // Example\n   * vec4 gl_Position = czm_modelViewProjection * modelPosition;\n   *\n   * // The above is equivalent to, but more efficient than:\n   * gl_Position = czm_projection * czm_view * czm_model * modelPosition;\n   *\n   * @see UniformState#modelViewProjection\n   * @see czm_model\n   * @see czm_view\n   * @see czm_projection\n   * @see czm_modelView\n   * @see czm_viewProjection\n   * @see czm_modelViewInfiniteProjection\n   * @see czm_inverseModelViewProjection\n   */\n  czm_modelViewProjection: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT4,\n    getValue: function (uniformState) {\n      return uniformState.modelViewProjection;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 4x4 inverse model-view-projection transformation matrix that\n   * transforms clip coordinates to model coordinates.  Clip coordinates is the\n   * coordinate system for a vertex shader's <code>gl_Position</code> output.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat4 czm_inverseModelViewProjection;\n   *\n   * // Example\n   * vec4 modelPosition = czm_inverseModelViewProjection * clipPosition;\n   *\n   * @see UniformState#modelViewProjection\n   * @see czm_modelViewProjection\n   */\n  czm_inverseModelViewProjection: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT4,\n    getValue: function (uniformState) {\n      return uniformState.inverseModelViewProjection;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 4x4 model-view-projection transformation matrix that\n   * transforms model coordinates, relative to the eye, to clip coordinates.  Clip coordinates is the\n   * coordinate system for a vertex shader's <code>gl_Position</code> output.  This is used in\n   * conjunction with {@link czm_translateRelativeToEye}.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat4 czm_modelViewProjectionRelativeToEye;\n   *\n   * // Example\n   * attribute vec3 positionHigh;\n   * attribute vec3 positionLow;\n   *\n   * void main()\n   * {\n   *   vec4 p = czm_translateRelativeToEye(positionHigh, positionLow);\n   *   gl_Position = czm_modelViewProjectionRelativeToEye * p;\n   * }\n   *\n   * @see czm_modelViewRelativeToEye\n   * @see czm_translateRelativeToEye\n   * @see EncodedCartesian3\n   */\n  czm_modelViewProjectionRelativeToEye: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT4,\n    getValue: function (uniformState) {\n      return uniformState.modelViewProjectionRelativeToEye;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 4x4 model-view-projection transformation matrix that\n   * transforms model coordinates to clip coordinates.  Clip coordinates is the\n   * coordinate system for a vertex shader's <code>gl_Position</code> output.  The projection matrix places\n   * the far plane at infinity.  This is useful in algorithms like shadow volumes and GPU ray casting with\n   * proxy geometry to ensure that triangles are not clipped by the far plane.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat4 czm_modelViewInfiniteProjection;\n   *\n   * // Example\n   * vec4 gl_Position = czm_modelViewInfiniteProjection * modelPosition;\n   *\n   * // The above is equivalent to, but more efficient than:\n   * gl_Position = czm_infiniteProjection * czm_view * czm_model * modelPosition;\n   *\n   * @see UniformState#modelViewInfiniteProjection\n   * @see czm_model\n   * @see czm_view\n   * @see czm_infiniteProjection\n   * @see czm_modelViewProjection\n   */\n  czm_modelViewInfiniteProjection: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT4,\n    getValue: function (uniformState) {\n      return uniformState.modelViewInfiniteProjection;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform that indicates if the current camera is orthographic in 3D.\n   *\n   * @see UniformState#orthographicIn3D\n   */\n  czm_orthographicIn3D: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT,\n    getValue: function (uniformState) {\n      return uniformState.orthographicIn3D ? 1 : 0;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 3x3 normal transformation matrix that\n   * transforms normal vectors in model coordinates to eye coordinates.\n   * <br /><br />\n   * Positions should be transformed to eye coordinates using {@link czm_modelView} and\n   * normals should be transformed using <code>czm_normal</code>.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat3 czm_normal;\n   *\n   * // Example\n   * vec3 eyeNormal = czm_normal * normal;\n   *\n   * @see UniformState#normal\n   * @see czm_inverseNormal\n   * @see czm_modelView\n   */\n  czm_normal: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT3,\n    getValue: function (uniformState) {\n      return uniformState.normal;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 3x3 normal transformation matrix that\n   * transforms normal vectors in 3D model coordinates to eye coordinates.\n   * In 3D mode, this is identical to\n   * {@link czm_normal}, but in 2D and Columbus View it represents the normal transformation\n   * matrix as if the camera were at an equivalent location in 3D mode.  This is useful for lighting\n   * 2D and Columbus View in the same way that 3D is lit.\n   * <br /><br />\n   * Positions should be transformed to eye coordinates using {@link czm_modelView3D} and\n   * normals should be transformed using <code>czm_normal3D</code>.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat3 czm_normal3D;\n   *\n   * // Example\n   * vec3 eyeNormal = czm_normal3D * normal;\n   *\n   * @see UniformState#normal3D\n   * @see czm_normal\n   */\n  czm_normal3D: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT3,\n    getValue: function (uniformState) {\n      return uniformState.normal3D;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 3x3 normal transformation matrix that\n   * transforms normal vectors in eye coordinates to model coordinates.  This is\n   * the opposite of the transform provided by {@link czm_normal}.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat3 czm_inverseNormal;\n   *\n   * // Example\n   * vec3 normalMC = czm_inverseNormal * normalEC;\n   *\n   * @see UniformState#inverseNormal\n   * @see czm_normal\n   * @see czm_modelView\n   * @see czm_inverseView\n   */\n  czm_inverseNormal: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT3,\n    getValue: function (uniformState) {\n      return uniformState.inverseNormal;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 3x3 normal transformation matrix that\n   * transforms normal vectors in eye coordinates to 3D model coordinates.  This is\n   * the opposite of the transform provided by {@link czm_normal}.\n   * In 3D mode, this is identical to\n   * {@link czm_inverseNormal}, but in 2D and Columbus View it represents the inverse normal transformation\n   * matrix as if the camera were at an equivalent location in 3D mode.  This is useful for lighting\n   * 2D and Columbus View in the same way that 3D is lit.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat3 czm_inverseNormal3D;\n   *\n   * // Example\n   * vec3 normalMC = czm_inverseNormal3D * normalEC;\n   *\n   * @see UniformState#inverseNormal3D\n   * @see czm_inverseNormal\n   */\n  czm_inverseNormal3D: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT3,\n    getValue: function (uniformState) {\n      return uniformState.inverseNormal3D;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform containing the height in meters of the\n   * eye (camera) above or below the ellipsoid.\n   *\n   * @see UniformState#eyeHeight\n   */\n  czm_eyeHeight: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT,\n    getValue: function (uniformState) {\n      return uniformState.eyeHeight;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform containing height (<code>x</code>) and height squared (<code>y</code>)\n   * in meters of the eye (camera) above the 2D world plane. This uniform is only valid\n   * when the {@link SceneMode} is <code>SCENE2D</code>.\n   *\n   * @see UniformState#eyeHeight2D\n   */\n  czm_eyeHeight2D: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_VEC2,\n    getValue: function (uniformState) {\n      return uniformState.eyeHeight2D;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform containing the near distance (<code>x</code>) and the far distance (<code>y</code>)\n   * of the frustum defined by the camera.  This is the largest possible frustum, not an individual\n   * frustum used for multi-frustum rendering.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform vec2 czm_entireFrustum;\n   *\n   * // Example\n   * float frustumLength = czm_entireFrustum.y - czm_entireFrustum.x;\n   *\n   * @see UniformState#entireFrustum\n   * @see czm_currentFrustum\n   */\n  czm_entireFrustum: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_VEC2,\n    getValue: function (uniformState) {\n      return uniformState.entireFrustum;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform containing the near distance (<code>x</code>) and the far distance (<code>y</code>)\n   * of the frustum defined by the camera.  This is the individual\n   * frustum used for multi-frustum rendering.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform vec2 czm_currentFrustum;\n   *\n   * // Example\n   * float frustumLength = czm_currentFrustum.y - czm_currentFrustum.x;\n   *\n   * @see UniformState#currentFrustum\n   * @see czm_entireFrustum\n   */\n  czm_currentFrustum: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_VEC2,\n    getValue: function (uniformState) {\n      return uniformState.currentFrustum;\n    },\n  }),\n\n  /**\n   * The distances to the frustum planes. The top, bottom, left and right distances are\n   * the x, y, z, and w components, respectively.\n   */\n  czm_frustumPlanes: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_VEC4,\n    getValue: function (uniformState) {\n      return uniformState.frustumPlanes;\n    },\n  }),\n\n  /**\n   * Gets the far plane's distance from the near plane, plus 1.0.\n   */\n  czm_farDepthFromNearPlusOne: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT,\n    getValue: function (uniformState) {\n      return uniformState.farDepthFromNearPlusOne;\n    },\n  }),\n\n  /**\n   * Gets the log2 of {@link AutomaticUniforms#czm_farDepthFromNearPlusOne}.\n   */\n  czm_log2FarDepthFromNearPlusOne: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT,\n    getValue: function (uniformState) {\n      return uniformState.log2FarDepthFromNearPlusOne;\n    },\n  }),\n\n  /**\n   * Gets 1.0 divided by {@link AutomaticUniforms#czm_log2FarDepthFromNearPlusOne}.\n   */\n  czm_oneOverLog2FarDepthFromNearPlusOne: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT,\n    getValue: function (uniformState) {\n      return uniformState.oneOverLog2FarDepthFromNearPlusOne;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing the sun position in world coordinates.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform vec3 czm_sunPositionWC;\n   *\n   * @see UniformState#sunPositionWC\n   * @see czm_sunPositionColumbusView\n   * @see czm_sunDirectionWC\n   */\n  czm_sunPositionWC: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_VEC3,\n    getValue: function (uniformState) {\n      return uniformState.sunPositionWC;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing the sun position in Columbus view world coordinates.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform vec3 czm_sunPositionColumbusView;\n   *\n   * @see UniformState#sunPositionColumbusView\n   * @see czm_sunPositionWC\n   */\n  czm_sunPositionColumbusView: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_VEC3,\n    getValue: function (uniformState) {\n      return uniformState.sunPositionColumbusView;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing the normalized direction to the sun in eye coordinates.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform vec3 czm_sunDirectionEC;\n   *\n   * // Example\n   * float diffuse = max(dot(czm_sunDirectionEC, normalEC), 0.0);\n   *\n   * @see UniformState#sunDirectionEC\n   * @see czm_moonDirectionEC\n   * @see czm_sunDirectionWC\n   */\n  czm_sunDirectionEC: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_VEC3,\n    getValue: function (uniformState) {\n      return uniformState.sunDirectionEC;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing the normalized direction to the sun in world coordinates.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform vec3 czm_sunDirectionWC;\n   *\n   * // Example\n   * float diffuse = max(dot(czm_sunDirectionWC, normalWC), 0.0);\n   *\n   * @see UniformState#sunDirectionWC\n   * @see czm_sunPositionWC\n   * @see czm_sunDirectionEC\n   */\n  czm_sunDirectionWC: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_VEC3,\n    getValue: function (uniformState) {\n      return uniformState.sunDirectionWC;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing the normalized direction to the moon in eye coordinates.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform vec3 czm_moonDirectionEC;\n   *\n   * // Example\n   * float diffuse = max(dot(czm_moonDirectionEC, normalEC), 0.0);\n   *\n   * @see UniformState#moonDirectionEC\n   * @see czm_sunDirectionEC\n   */\n  czm_moonDirectionEC: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_VEC3,\n    getValue: function (uniformState) {\n      return uniformState.moonDirectionEC;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing the normalized direction to the scene's light source in eye coordinates.\n   * This is commonly used for directional lighting computations.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform vec3 czm_lightDirectionEC;\n   *\n   * // Example\n   * float diffuse = max(dot(czm_lightDirectionEC, normalEC), 0.0);\n   *\n   * @see UniformState#lightDirectionEC\n   * @see czm_lightDirectionWC\n   */\n  czm_lightDirectionEC: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_VEC3,\n    getValue: function (uniformState) {\n      return uniformState.lightDirectionEC;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing the normalized direction to the scene's light source in world coordinates.\n   * This is commonly used for directional lighting computations.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform vec3 czm_lightDirectionWC;\n   *\n   * // Example\n   * float diffuse = max(dot(czm_lightDirectionWC, normalWC), 0.0);\n   *\n   * @see UniformState#lightDirectionWC\n   * @see czm_lightDirectionEC\n   */\n  czm_lightDirectionWC: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_VEC3,\n    getValue: function (uniformState) {\n      return uniformState.lightDirectionWC;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform that represents the color of light emitted by the scene's light source. This\n   * is equivalent to the light color multiplied by the light intensity limited to a maximum luminance of 1.0\n   * suitable for non-HDR lighting.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform vec3 czm_lightColor;\n   *\n   * // Example\n   * vec3 diffuseColor = czm_lightColor * max(dot(czm_lightDirectionWC, normalWC), 0.0);\n   *\n   * @see UniformState#lightColor\n   * @see czm_lightColorHdr\n   */\n  czm_lightColor: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_VEC3,\n    getValue: function (uniformState) {\n      return uniformState.lightColor;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform that represents the high dynamic range color of light emitted by the scene's light\n   * source. This is equivalent to the light color multiplied by the light intensity suitable for HDR lighting.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform vec3 czm_lightColorHdr;\n   *\n   * // Example\n   * vec3 diffuseColor = czm_lightColorHdr * max(dot(czm_lightDirectionWC, normalWC), 0.0);\n   *\n   * @see UniformState#lightColorHdr\n   * @see czm_lightColor\n   */\n  czm_lightColorHdr: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_VEC3,\n    getValue: function (uniformState) {\n      return uniformState.lightColorHdr;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing the high bits of the camera position in model\n   * coordinates.  This is used for GPU RTE to eliminate jittering artifacts when rendering\n   * as described in {@link http://help.agi.com/AGIComponents/html/BlogPrecisionsPrecisions.htm|Precisions, Precisions}.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform vec3 czm_encodedCameraPositionMCHigh;\n   *\n   * @see czm_encodedCameraPositionMCLow\n   * @see czm_modelViewRelativeToEye\n   * @see czm_modelViewProjectionRelativeToEye\n   */\n  czm_encodedCameraPositionMCHigh: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_VEC3,\n    getValue: function (uniformState) {\n      return uniformState.encodedCameraPositionMCHigh;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing the low bits of the camera position in model\n   * coordinates.  This is used for GPU RTE to eliminate jittering artifacts when rendering\n   * as described in {@linkhttp://help.agi.com/AGIComponents/html/BlogPrecisionsPrecisions.htm|Precisions, Precisions}.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform vec3 czm_encodedCameraPositionMCLow;\n   *\n   * @see czm_encodedCameraPositionMCHigh\n   * @see czm_modelViewRelativeToEye\n   * @see czm_modelViewProjectionRelativeToEye\n   */\n  czm_encodedCameraPositionMCLow: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_VEC3,\n    getValue: function (uniformState) {\n      return uniformState.encodedCameraPositionMCLow;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing the position of the viewer (camera) in world coordinates.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform vec3 czm_viewerPositionWC;\n   */\n  czm_viewerPositionWC: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_VEC3,\n    getValue: function (uniformState) {\n      return Matrix4.getTranslation(\n        uniformState.inverseView,\n        viewerPositionWCScratch\n      );\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing the frame number. This uniform is automatically incremented\n   * every frame.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform float czm_frameNumber;\n   */\n  czm_frameNumber: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT,\n    getValue: function (uniformState) {\n      return uniformState.frameState.frameNumber;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing the current morph transition time between\n   * 2D/Columbus View and 3D, with 0.0 being 2D or Columbus View and 1.0 being 3D.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform float czm_morphTime;\n   *\n   * // Example\n   * vec4 p = czm_columbusViewMorph(position2D, position3D, czm_morphTime);\n   */\n  czm_morphTime: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT,\n    getValue: function (uniformState) {\n      return uniformState.frameState.morphTime;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing the current {@link SceneMode}, expressed\n   * as a float.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform float czm_sceneMode;\n   *\n   * // Example\n   * if (czm_sceneMode == czm_sceneMode2D)\n   * {\n   *     eyeHeightSq = czm_eyeHeight2D.y;\n   * }\n   *\n   * @see czm_sceneMode2D\n   * @see czm_sceneModeColumbusView\n   * @see czm_sceneMode3D\n   * @see czm_sceneModeMorphing\n   */\n  czm_sceneMode: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT,\n    getValue: function (uniformState) {\n      return uniformState.frameState.mode;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing the current rendering pass.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform float czm_pass;\n   *\n   * // Example\n   * if ((czm_pass == czm_passTranslucent) && isOpaque())\n   * {\n   *     gl_Position *= 0.0; // Cull opaque geometry in the translucent pass\n   * }\n   */\n  czm_pass: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT,\n    getValue: function (uniformState) {\n      return uniformState.pass;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing the current scene background color.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform vec4 czm_backgroundColor;\n   *\n   * // Example: If the given color's RGB matches the background color, invert it.\n   * vec4 adjustColorForContrast(vec4 color)\n   * {\n   *     if (czm_backgroundColor.rgb == color.rgb)\n   *     {\n   *         color.rgb = vec3(1.0) - color.rgb;\n   *     }\n   *\n   *     return color;\n   * }\n   */\n  czm_backgroundColor: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_VEC4,\n    getValue: function (uniformState) {\n      return uniformState.backgroundColor;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform containing the BRDF look up texture used for image-based lighting computations.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform sampler2D czm_brdfLut;\n   *\n   * // Example: For a given roughness and NdotV value, find the material's BRDF information in the red and green channels\n   * float roughness = 0.5;\n   * float NdotV = dot(normal, view);\n   * vec2 brdfLut = texture2D(czm_brdfLut, vec2(NdotV, 1.0 - roughness)).rg;\n   */\n  czm_brdfLut: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.SAMPLER_2D,\n    getValue: function (uniformState) {\n      return uniformState.brdfLut;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform containing the environment map used within the scene.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform samplerCube czm_environmentMap;\n   *\n   * // Example: Create a perfect reflection of the environment map on a  model\n   * float reflected = reflect(view, normal);\n   * vec4 reflectedColor = textureCube(czm_environmentMap, reflected);\n   */\n  czm_environmentMap: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.SAMPLER_CUBE,\n    getValue: function (uniformState) {\n      return uniformState.environmentMap;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform containing the specular environment map atlas used within the scene.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform sampler2D czm_specularEnvironmentMaps;\n   */\n  czm_specularEnvironmentMaps: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.SAMPLER_2D,\n    getValue: function (uniformState) {\n      return uniformState.specularEnvironmentMaps;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform containing the size of the specular environment map atlas used within the scene.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform vec2 czm_specularEnvironmentMapSize;\n   */\n  czm_specularEnvironmentMapSize: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_VEC2,\n    getValue: function (uniformState) {\n      return uniformState.specularEnvironmentMapsDimensions;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform containing the maximum level-of-detail of the specular environment map atlas used within the scene.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform float czm_specularEnvironmentMapsMaximumLOD;\n   */\n  czm_specularEnvironmentMapsMaximumLOD: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT,\n    getValue: function (uniformState) {\n      return uniformState.specularEnvironmentMapsMaximumLOD;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform containing the spherical harmonic coefficients used within the scene.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform vec3[9] czm_sphericalHarmonicCoefficients;\n   */\n  czm_sphericalHarmonicCoefficients: new AutomaticUniform({\n    size: 9,\n    datatype: WebGLConstants.FLOAT_VEC3,\n    getValue: function (uniformState) {\n      return uniformState.sphericalHarmonicCoefficients;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing a 3x3 rotation matrix that transforms\n   * from True Equator Mean Equinox (TEME) axes to the pseudo-fixed axes at the current scene time.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform mat3 czm_temeToPseudoFixed;\n   *\n   * // Example\n   * vec3 pseudoFixed = czm_temeToPseudoFixed * teme;\n   *\n   * @see UniformState#temeToPseudoFixedMatrix\n   * @see Transforms.computeTemeToPseudoFixedMatrix\n   */\n  czm_temeToPseudoFixed: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_MAT3,\n    getValue: function (uniformState) {\n      return uniformState.temeToPseudoFixedMatrix;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing the ratio of canvas coordinate space to canvas pixel space.\n   *\n   * @example\n   * uniform float czm_pixelRatio;\n   */\n  czm_pixelRatio: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT,\n    getValue: function (uniformState) {\n      return uniformState.pixelRatio;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform scalar used to mix a color with the fog color based on the distance to the camera.\n   *\n   * @see czm_fog\n   */\n  czm_fogDensity: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT,\n    getValue: function (uniformState) {\n      return uniformState.fogDensity;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing the splitter position to use when rendering with a splitter.\n   * This will be in pixel coordinates relative to the canvas.\n   *\n   * @example\n   * // GLSL declaration\n   * uniform float czm_splitPosition;\n   */\n  czm_splitPosition: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT,\n    getValue: function (uniformState) {\n      return uniformState.splitPosition;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform scalar representing the geometric tolerance per meter\n   */\n  czm_geometricToleranceOverMeter: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT,\n    getValue: function (uniformState) {\n      return uniformState.geometricToleranceOverMeter;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform representing the distance from the camera at which to disable the depth test of billboards, labels and points\n   * to, for example, prevent clipping against terrain. When set to zero, the depth test should always be applied. When less than zero,\n   * the depth test should never be applied.\n   */\n  czm_minimumDisableDepthTestDistance: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT,\n    getValue: function (uniformState) {\n      return uniformState.minimumDisableDepthTestDistance;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform that will be the highlight color of unclassified 3D Tiles.\n   */\n  czm_invertClassificationColor: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_VEC4,\n    getValue: function (uniformState) {\n      return uniformState.invertClassificationColor;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform that is used for gamma correction.\n   */\n  czm_gamma: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT,\n    getValue: function (uniformState) {\n      return uniformState.gamma;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform that stores the ellipsoid radii.\n   */\n  czm_ellipsoidRadii: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_VEC3,\n    getValue: function (uniformState) {\n      return uniformState.ellipsoid.radii;\n    },\n  }),\n\n  /**\n   * An automatic GLSL uniform that stores the ellipsoid inverse radii.\n   */\n  czm_ellipsoidInverseRadii: new AutomaticUniform({\n    size: 1,\n    datatype: WebGLConstants.FLOAT_VEC3,\n    getValue: function (uniformState) {\n      return uniformState.ellipsoid.oneOverRadii;\n    },\n  }),\n};\nexport default AutomaticUniforms;\n","import Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport IndexDatatype from \"../Core/IndexDatatype.js\";\nimport WebGLConstants from \"../Core/WebGLConstants.js\";\nimport BufferUsage from \"./BufferUsage.js\";\n\n/**\n * @private\n */\nfunction Buffer(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"options.context\", options.context);\n\n  if (!defined(options.typedArray) && !defined(options.sizeInBytes)) {\n    throw new DeveloperError(\n      \"Either options.sizeInBytes or options.typedArray is required.\"\n    );\n  }\n\n  if (defined(options.typedArray) && defined(options.sizeInBytes)) {\n    throw new DeveloperError(\n      \"Cannot pass in both options.sizeInBytes and options.typedArray.\"\n    );\n  }\n\n  if (defined(options.typedArray)) {\n    Check.typeOf.object(\"options.typedArray\", options.typedArray);\n    Check.typeOf.number(\n      \"options.typedArray.byteLength\",\n      options.typedArray.byteLength\n    );\n  }\n\n  if (!BufferUsage.validate(options.usage)) {\n    throw new DeveloperError(\"usage is invalid.\");\n  }\n  //>>includeEnd('debug');\n\n  const gl = options.context._gl;\n  const bufferTarget = options.bufferTarget;\n  const typedArray = options.typedArray;\n  let sizeInBytes = options.sizeInBytes;\n  const usage = options.usage;\n  const hasArray = defined(typedArray);\n\n  if (hasArray) {\n    sizeInBytes = typedArray.byteLength;\n  }\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.number.greaterThan(\"sizeInBytes\", sizeInBytes, 0);\n  //>>includeEnd('debug');\n\n  const buffer = gl.createBuffer();\n  gl.bindBuffer(bufferTarget, buffer);\n  gl.bufferData(bufferTarget, hasArray ? typedArray : sizeInBytes, usage);\n  gl.bindBuffer(bufferTarget, null);\n\n  this._gl = gl;\n  this._webgl2 = options.context._webgl2;\n  this._bufferTarget = bufferTarget;\n  this._sizeInBytes = sizeInBytes;\n  this._usage = usage;\n  this._buffer = buffer;\n  this.vertexArrayDestroyable = true;\n}\n\n/**\n * Creates a vertex buffer, which contains untyped vertex data in GPU-controlled memory.\n * <br /><br />\n * A vertex array defines the actual makeup of a vertex, e.g., positions, normals, texture coordinates,\n * etc., by interpreting the raw data in one or more vertex buffers.\n *\n * @param {Object} options An object containing the following properties:\n * @param {Context} options.context The context in which to create the buffer\n * @param {ArrayBufferView} [options.typedArray] A typed array containing the data to copy to the buffer.\n * @param {Number} [options.sizeInBytes] A <code>Number</code> defining the size of the buffer in bytes. Required if options.typedArray is not given.\n * @param {BufferUsage} options.usage Specifies the expected usage pattern of the buffer. On some GL implementations, this can significantly affect performance. See {@link BufferUsage}.\n * @returns {VertexBuffer} The vertex buffer, ready to be attached to a vertex array.\n *\n * @exception {DeveloperError} Must specify either <options.typedArray> or <options.sizeInBytes>, but not both.\n * @exception {DeveloperError} The buffer size must be greater than zero.\n * @exception {DeveloperError} Invalid <code>usage</code>.\n *\n *\n * @example\n * // Example 1. Create a dynamic vertex buffer 16 bytes in size.\n * const buffer = Buffer.createVertexBuffer({\n *     context : context,\n *     sizeInBytes : 16,\n *     usage : BufferUsage.DYNAMIC_DRAW\n * });\n *\n * @example\n * // Example 2. Create a dynamic vertex buffer from three floating-point values.\n * // The data copied to the vertex buffer is considered raw bytes until it is\n * // interpreted as vertices using a vertex array.\n * const positionBuffer = buffer.createVertexBuffer({\n *     context : context,\n *     typedArray : new Float32Array([0, 0, 0]),\n *     usage : BufferUsage.STATIC_DRAW\n * });\n *\n * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glGenBuffer.xml|glGenBuffer}\n * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glBindBuffer.xml|glBindBuffer} with <code>ARRAY_BUFFER</code>\n * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glBufferData.xml|glBufferData} with <code>ARRAY_BUFFER</code>\n */\nBuffer.createVertexBuffer = function (options) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"options.context\", options.context);\n  //>>includeEnd('debug');\n\n  return new Buffer({\n    context: options.context,\n    bufferTarget: WebGLConstants.ARRAY_BUFFER,\n    typedArray: options.typedArray,\n    sizeInBytes: options.sizeInBytes,\n    usage: options.usage,\n  });\n};\n\n/**\n * Creates an index buffer, which contains typed indices in GPU-controlled memory.\n * <br /><br />\n * An index buffer can be attached to a vertex array to select vertices for rendering.\n * <code>Context.draw</code> can render using the entire index buffer or a subset\n * of the index buffer defined by an offset and count.\n *\n * @param {Object} options An object containing the following properties:\n * @param {Context} options.context The context in which to create the buffer\n * @param {ArrayBufferView} [options.typedArray] A typed array containing the data to copy to the buffer.\n * @param {Number} [options.sizeInBytes] A <code>Number</code> defining the size of the buffer in bytes. Required if options.typedArray is not given.\n * @param {BufferUsage} options.usage Specifies the expected usage pattern of the buffer. On some GL implementations, this can significantly affect performance. See {@link BufferUsage}.\n * @param {IndexDatatype} options.indexDatatype The datatype of indices in the buffer.\n * @returns {IndexBuffer} The index buffer, ready to be attached to a vertex array.\n *\n * @exception {DeveloperError} Must specify either <options.typedArray> or <options.sizeInBytes>, but not both.\n * @exception {DeveloperError} IndexDatatype.UNSIGNED_INT requires OES_element_index_uint, which is not supported on this system. Check context.elementIndexUint.\n * @exception {DeveloperError} The size in bytes must be greater than zero.\n * @exception {DeveloperError} Invalid <code>usage</code>.\n * @exception {DeveloperError} Invalid <code>indexDatatype</code>.\n *\n *\n * @example\n * // Example 1. Create a stream index buffer of unsigned shorts that is\n * // 16 bytes in size.\n * const buffer = Buffer.createIndexBuffer({\n *     context : context,\n *     sizeInBytes : 16,\n *     usage : BufferUsage.STREAM_DRAW,\n *     indexDatatype : IndexDatatype.UNSIGNED_SHORT\n * });\n *\n * @example\n * // Example 2. Create a static index buffer containing three unsigned shorts.\n * const buffer = Buffer.createIndexBuffer({\n *     context : context,\n *     typedArray : new Uint16Array([0, 1, 2]),\n *     usage : BufferUsage.STATIC_DRAW,\n *     indexDatatype : IndexDatatype.UNSIGNED_SHORT\n * });\n *\n * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glGenBuffer.xml|glGenBuffer}\n * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glBindBuffer.xml|glBindBuffer} with <code>ELEMENT_ARRAY_BUFFER</code>\n * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glBufferData.xml|glBufferData} with <code>ELEMENT_ARRAY_BUFFER</code>\n */\nBuffer.createIndexBuffer = function (options) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"options.context\", options.context);\n\n  if (!IndexDatatype.validate(options.indexDatatype)) {\n    throw new DeveloperError(\"Invalid indexDatatype.\");\n  }\n\n  if (\n    options.indexDatatype === IndexDatatype.UNSIGNED_INT &&\n    !options.context.elementIndexUint\n  ) {\n    throw new DeveloperError(\n      \"IndexDatatype.UNSIGNED_INT requires OES_element_index_uint, which is not supported on this system.  Check context.elementIndexUint.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  const context = options.context;\n  const indexDatatype = options.indexDatatype;\n\n  const bytesPerIndex = IndexDatatype.getSizeInBytes(indexDatatype);\n  const buffer = new Buffer({\n    context: context,\n    bufferTarget: WebGLConstants.ELEMENT_ARRAY_BUFFER,\n    typedArray: options.typedArray,\n    sizeInBytes: options.sizeInBytes,\n    usage: options.usage,\n  });\n\n  const numberOfIndices = buffer.sizeInBytes / bytesPerIndex;\n\n  Object.defineProperties(buffer, {\n    indexDatatype: {\n      get: function () {\n        return indexDatatype;\n      },\n    },\n    bytesPerIndex: {\n      get: function () {\n        return bytesPerIndex;\n      },\n    },\n    numberOfIndices: {\n      get: function () {\n        return numberOfIndices;\n      },\n    },\n  });\n\n  return buffer;\n};\n\nObject.defineProperties(Buffer.prototype, {\n  sizeInBytes: {\n    get: function () {\n      return this._sizeInBytes;\n    },\n  },\n\n  usage: {\n    get: function () {\n      return this._usage;\n    },\n  },\n});\n\nBuffer.prototype._getBuffer = function () {\n  return this._buffer;\n};\n\nBuffer.prototype.copyFromArrayView = function (arrayView, offsetInBytes) {\n  offsetInBytes = defaultValue(offsetInBytes, 0);\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"arrayView\", arrayView);\n  Check.typeOf.number.lessThanOrEquals(\n    \"offsetInBytes + arrayView.byteLength\",\n    offsetInBytes + arrayView.byteLength,\n    this._sizeInBytes\n  );\n  //>>includeEnd('debug');\n\n  const gl = this._gl;\n  const target = this._bufferTarget;\n  gl.bindBuffer(target, this._buffer);\n  gl.bufferSubData(target, offsetInBytes, arrayView);\n  gl.bindBuffer(target, null);\n};\n\nBuffer.prototype.copyFromBuffer = function (\n  readBuffer,\n  readOffset,\n  writeOffset,\n  sizeInBytes\n) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!this._webgl2) {\n    throw new DeveloperError(\"A WebGL 2 context is required.\");\n  }\n  if (!defined(readBuffer)) {\n    throw new DeveloperError(\"readBuffer must be defined.\");\n  }\n  if (!defined(sizeInBytes) || sizeInBytes <= 0) {\n    throw new DeveloperError(\n      \"sizeInBytes must be defined and be greater than zero.\"\n    );\n  }\n  if (\n    !defined(readOffset) ||\n    readOffset < 0 ||\n    readOffset + sizeInBytes > readBuffer._sizeInBytes\n  ) {\n    throw new DeveloperError(\n      \"readOffset must be greater than or equal to zero and readOffset + sizeInBytes must be less than of equal to readBuffer.sizeInBytes.\"\n    );\n  }\n  if (\n    !defined(writeOffset) ||\n    writeOffset < 0 ||\n    writeOffset + sizeInBytes > this._sizeInBytes\n  ) {\n    throw new DeveloperError(\n      \"writeOffset must be greater than or equal to zero and writeOffset + sizeInBytes must be less than of equal to this.sizeInBytes.\"\n    );\n  }\n  if (\n    this._buffer === readBuffer._buffer &&\n    ((writeOffset >= readOffset && writeOffset < readOffset + sizeInBytes) ||\n      (readOffset > writeOffset && readOffset < writeOffset + sizeInBytes))\n  ) {\n    throw new DeveloperError(\n      \"When readBuffer is equal to this, the ranges [readOffset + sizeInBytes) and [writeOffset, writeOffset + sizeInBytes) must not overlap.\"\n    );\n  }\n  if (\n    (this._bufferTarget === WebGLConstants.ELEMENT_ARRAY_BUFFER &&\n      readBuffer._bufferTarget !== WebGLConstants.ELEMENT_ARRAY_BUFFER) ||\n    (this._bufferTarget !== WebGLConstants.ELEMENT_ARRAY_BUFFER &&\n      readBuffer._bufferTarget === WebGLConstants.ELEMENT_ARRAY_BUFFER)\n  ) {\n    throw new DeveloperError(\n      \"Can not copy an index buffer into another buffer type.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  const readTarget = WebGLConstants.COPY_READ_BUFFER;\n  const writeTarget = WebGLConstants.COPY_WRITE_BUFFER;\n\n  const gl = this._gl;\n  gl.bindBuffer(writeTarget, this._buffer);\n  gl.bindBuffer(readTarget, readBuffer._buffer);\n  gl.copyBufferSubData(\n    readTarget,\n    writeTarget,\n    readOffset,\n    writeOffset,\n    sizeInBytes\n  );\n  gl.bindBuffer(writeTarget, null);\n  gl.bindBuffer(readTarget, null);\n};\n\nBuffer.prototype.getBufferData = function (\n  arrayView,\n  sourceOffset,\n  destinationOffset,\n  length\n) {\n  sourceOffset = defaultValue(sourceOffset, 0);\n  destinationOffset = defaultValue(destinationOffset, 0);\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!this._webgl2) {\n    throw new DeveloperError(\"A WebGL 2 context is required.\");\n  }\n  if (!defined(arrayView)) {\n    throw new DeveloperError(\"arrayView is required.\");\n  }\n\n  let copyLength;\n  let elementSize;\n  let arrayLength = arrayView.byteLength;\n  if (!defined(length)) {\n    if (defined(arrayLength)) {\n      copyLength = arrayLength - destinationOffset;\n      elementSize = 1;\n    } else {\n      arrayLength = arrayView.length;\n      copyLength = arrayLength - destinationOffset;\n      elementSize = arrayView.BYTES_PER_ELEMENT;\n    }\n  } else {\n    copyLength = length;\n    if (defined(arrayLength)) {\n      elementSize = 1;\n    } else {\n      arrayLength = arrayView.length;\n      elementSize = arrayView.BYTES_PER_ELEMENT;\n    }\n  }\n\n  if (destinationOffset < 0 || destinationOffset > arrayLength) {\n    throw new DeveloperError(\n      \"destinationOffset must be greater than zero and less than the arrayView length.\"\n    );\n  }\n  if (destinationOffset + copyLength > arrayLength) {\n    throw new DeveloperError(\n      \"destinationOffset + length must be less than or equal to the arrayViewLength.\"\n    );\n  }\n  if (sourceOffset < 0 || sourceOffset > this._sizeInBytes) {\n    throw new DeveloperError(\n      \"sourceOffset must be greater than zero and less than the buffers size.\"\n    );\n  }\n  if (sourceOffset + copyLength * elementSize > this._sizeInBytes) {\n    throw new DeveloperError(\n      \"sourceOffset + length must be less than the buffers size.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  const gl = this._gl;\n  const target = WebGLConstants.COPY_READ_BUFFER;\n  gl.bindBuffer(target, this._buffer);\n  gl.getBufferSubData(\n    target,\n    sourceOffset,\n    arrayView,\n    destinationOffset,\n    length\n  );\n  gl.bindBuffer(target, null);\n};\n\nBuffer.prototype.isDestroyed = function () {\n  return false;\n};\n\nBuffer.prototype.destroy = function () {\n  this._gl.deleteBuffer(this._buffer);\n  return destroyObject(this);\n};\nexport default Buffer;\n","import WebGLConstants from \"../Core/WebGLConstants.js\";\n\n/**\n * @private\n */\nconst BufferUsage = {\n  STREAM_DRAW: WebGLConstants.STREAM_DRAW,\n  STATIC_DRAW: WebGLConstants.STATIC_DRAW,\n  DYNAMIC_DRAW: WebGLConstants.DYNAMIC_DRAW,\n\n  validate: function (bufferUsage) {\n    return (\n      bufferUsage === BufferUsage.STREAM_DRAW ||\n      bufferUsage === BufferUsage.STATIC_DRAW ||\n      bufferUsage === BufferUsage.DYNAMIC_DRAW\n    );\n  },\n};\nexport default Object.freeze(BufferUsage);\n","import Color from \"../Core/Color.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\n\n/**\n * Represents a command to the renderer for clearing a framebuffer.\n *\n * @private\n * @constructor\n */\nfunction ClearCommand(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  /**\n   * The value to clear the color buffer to.  When <code>undefined</code>, the color buffer is not cleared.\n   *\n   * @type {Color}\n   *\n   * @default undefined\n   */\n  this.color = options.color;\n\n  /**\n   * The value to clear the depth buffer to.  When <code>undefined</code>, the depth buffer is not cleared.\n   *\n   * @type {Number}\n   *\n   * @default undefined\n   */\n  this.depth = options.depth;\n\n  /**\n   * The value to clear the stencil buffer to.  When <code>undefined</code>, the stencil buffer is not cleared.\n   *\n   * @type {Number}\n   *\n   * @default undefined\n   */\n  this.stencil = options.stencil;\n\n  /**\n   * The render state to apply when executing the clear command.  The following states affect clearing:\n   * scissor test, color mask, depth mask, and stencil mask.  When the render state is\n   * <code>undefined</code>, the default render state is used.\n   *\n   * @type {RenderState}\n   *\n   * @default undefined\n   */\n  this.renderState = options.renderState;\n\n  /**\n   * The framebuffer to clear.\n   *\n   * @type {Framebuffer}\n   *\n   * @default undefined\n   */\n  this.framebuffer = options.framebuffer;\n\n  /**\n   * The object who created this command.  This is useful for debugging command\n   * execution; it allows you to see who created a command when you only have a\n   * reference to the command, and can be used to selectively execute commands\n   * with {@link Scene#debugCommandFilter}.\n   *\n   * @type {Object}\n   *\n   * @default undefined\n   *\n   * @see Scene#debugCommandFilter\n   */\n  this.owner = options.owner;\n\n  /**\n   * The pass in which to run this command.\n   *\n   * @type {Pass}\n   *\n   * @default undefined\n   */\n  this.pass = options.pass;\n}\n\n/**\n * Clears color to (0.0, 0.0, 0.0, 0.0); depth to 1.0; and stencil to 0.\n *\n * @type {ClearCommand}\n *\n * @constant\n */\nClearCommand.ALL = Object.freeze(\n  new ClearCommand({\n    color: new Color(0.0, 0.0, 0.0, 0.0),\n    depth: 1.0,\n    stencil: 0.0,\n  })\n);\n\nClearCommand.prototype.execute = function (context, passState) {\n  context.clear(this, passState);\n};\nexport default ClearCommand;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport Pass from \"./Pass.js\";\n\n/**\n * Represents a command to the renderer for GPU Compute (using old-school GPGPU).\n *\n * @private\n * @constructor\n */\nfunction ComputeCommand(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  /**\n   * The vertex array. If none is provided, a viewport quad will be used.\n   *\n   * @type {VertexArray}\n   * @default undefined\n   */\n  this.vertexArray = options.vertexArray;\n\n  /**\n   * The fragment shader source. The default vertex shader is ViewportQuadVS.\n   *\n   * @type {ShaderSource}\n   * @default undefined\n   */\n  this.fragmentShaderSource = options.fragmentShaderSource;\n\n  /**\n   * The shader program to apply.\n   *\n   * @type {ShaderProgram}\n   * @default undefined\n   */\n  this.shaderProgram = options.shaderProgram;\n\n  /**\n   * An object with functions whose names match the uniforms in the shader program\n   * and return values to set those uniforms.\n   *\n   * @type {Object}\n   * @default undefined\n   */\n  this.uniformMap = options.uniformMap;\n\n  /**\n   * Texture to use for offscreen rendering.\n   *\n   * @type {Texture}\n   * @default undefined\n   */\n  this.outputTexture = options.outputTexture;\n\n  /**\n   * Function that is called immediately before the ComputeCommand is executed. Used to\n   * update any renderer resources. Takes the ComputeCommand as its single argument.\n   *\n   * @type {Function}\n   * @default undefined\n   */\n  this.preExecute = options.preExecute;\n\n  /**\n   * Function that is called after the ComputeCommand is executed. Takes the output\n   * texture as its single argument.\n   *\n   * @type {Function}\n   * @default undefined\n   */\n  this.postExecute = options.postExecute;\n\n  /**\n   * Function that is called when the command is canceled\n   *\n   * @type {Function}\n   * @default undefined\n   */\n  this.canceled = options.canceled;\n\n  /**\n   * Whether the renderer resources will persist beyond this call. If not, they\n   * will be destroyed after completion.\n   *\n   * @type {Boolean}\n   * @default false\n   */\n  this.persists = defaultValue(options.persists, false);\n\n  /**\n   * The pass when to render. Always compute pass.\n   *\n   * @type {Pass}\n   * @default Pass.COMPUTE;\n   */\n  this.pass = Pass.COMPUTE;\n\n  /**\n   * The object who created this command.  This is useful for debugging command\n   * execution; it allows us to see who created a command when we only have a\n   * reference to the command, and can be used to selectively execute commands\n   * with {@link Scene#debugCommandFilter}.\n   *\n   * @type {Object}\n   * @default undefined\n   *\n   * @see Scene#debugCommandFilter\n   */\n  this.owner = options.owner;\n}\n\n/**\n * Executes the compute command.\n *\n * @param {ComputeEngine} computeEngine The context that processes the compute command.\n */\nComputeCommand.prototype.execute = function (computeEngine) {\n  computeEngine.execute(this);\n};\nexport default ComputeCommand;\n","import BoundingRectangle from \"../Core/BoundingRectangle.js\";\nimport Check from \"../Core/Check.js\";\nimport Color from \"../Core/Color.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport PrimitiveType from \"../Core/PrimitiveType.js\";\nimport ViewportQuadVS from \"../Shaders/ViewportQuadVS.js\";\nimport ClearCommand from \"./ClearCommand.js\";\nimport DrawCommand from \"./DrawCommand.js\";\nimport Framebuffer from \"./Framebuffer.js\";\nimport RenderState from \"./RenderState.js\";\nimport ShaderProgram from \"./ShaderProgram.js\";\n\n/**\n * @private\n */\nfunction ComputeEngine(context) {\n  this._context = context;\n}\n\nlet renderStateScratch;\nconst drawCommandScratch = new DrawCommand({\n  primitiveType: PrimitiveType.TRIANGLES,\n});\nconst clearCommandScratch = new ClearCommand({\n  color: new Color(0.0, 0.0, 0.0, 0.0),\n});\n\nfunction createFramebuffer(context, outputTexture) {\n  return new Framebuffer({\n    context: context,\n    colorTextures: [outputTexture],\n    destroyAttachments: false,\n  });\n}\n\nfunction createViewportQuadShader(context, fragmentShaderSource) {\n  return ShaderProgram.fromCache({\n    context: context,\n    vertexShaderSource: ViewportQuadVS,\n    fragmentShaderSource: fragmentShaderSource,\n    attributeLocations: {\n      position: 0,\n      textureCoordinates: 1,\n    },\n  });\n}\n\nfunction createRenderState(width, height) {\n  if (\n    !defined(renderStateScratch) ||\n    renderStateScratch.viewport.width !== width ||\n    renderStateScratch.viewport.height !== height\n  ) {\n    renderStateScratch = RenderState.fromCache({\n      viewport: new BoundingRectangle(0, 0, width, height),\n    });\n  }\n  return renderStateScratch;\n}\n\nComputeEngine.prototype.execute = function (computeCommand) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"computeCommand\", computeCommand);\n  //>>includeEnd('debug');\n\n  // This may modify the command's resources, so do error checking afterwards\n  if (defined(computeCommand.preExecute)) {\n    computeCommand.preExecute(computeCommand);\n  }\n\n  //>>includeStart('debug', pragmas.debug);\n  if (\n    !defined(computeCommand.fragmentShaderSource) &&\n    !defined(computeCommand.shaderProgram)\n  ) {\n    throw new DeveloperError(\n      \"computeCommand.fragmentShaderSource or computeCommand.shaderProgram is required.\"\n    );\n  }\n\n  Check.defined(\"computeCommand.outputTexture\", computeCommand.outputTexture);\n  //>>includeEnd('debug');\n\n  const outputTexture = computeCommand.outputTexture;\n  const width = outputTexture.width;\n  const height = outputTexture.height;\n\n  const context = this._context;\n  const vertexArray = defined(computeCommand.vertexArray)\n    ? computeCommand.vertexArray\n    : context.getViewportQuadVertexArray();\n  const shaderProgram = defined(computeCommand.shaderProgram)\n    ? computeCommand.shaderProgram\n    : createViewportQuadShader(context, computeCommand.fragmentShaderSource);\n  const framebuffer = createFramebuffer(context, outputTexture);\n  const renderState = createRenderState(width, height);\n  const uniformMap = computeCommand.uniformMap;\n\n  const clearCommand = clearCommandScratch;\n  clearCommand.framebuffer = framebuffer;\n  clearCommand.renderState = renderState;\n  clearCommand.execute(context);\n\n  const drawCommand = drawCommandScratch;\n  drawCommand.vertexArray = vertexArray;\n  drawCommand.renderState = renderState;\n  drawCommand.shaderProgram = shaderProgram;\n  drawCommand.uniformMap = uniformMap;\n  drawCommand.framebuffer = framebuffer;\n  drawCommand.execute(context);\n\n  framebuffer.destroy();\n\n  if (!computeCommand.persists) {\n    shaderProgram.destroy();\n    if (defined(computeCommand.vertexArray)) {\n      vertexArray.destroy();\n    }\n  }\n\n  if (defined(computeCommand.postExecute)) {\n    computeCommand.postExecute(outputTexture);\n  }\n};\n\nComputeEngine.prototype.isDestroyed = function () {\n  return false;\n};\n\nComputeEngine.prototype.destroy = function () {\n  return destroyObject(this);\n};\nexport default ComputeEngine;\n","import Check from \"../Core/Check.js\";\nimport clone from \"../Core/clone.js\";\nimport Color from \"../Core/Color.js\";\nimport ComponentDatatype from \"../Core/ComponentDatatype.js\";\nimport createGuid from \"../Core/createGuid.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Geometry from \"../Core/Geometry.js\";\nimport GeometryAttribute from \"../Core/GeometryAttribute.js\";\nimport loadKTX2 from \"../Core/loadKTX2.js\";\nimport Matrix4 from \"../Core/Matrix4.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\nimport PrimitiveType from \"../Core/PrimitiveType.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\nimport WebGLConstants from \"../Core/WebGLConstants.js\";\nimport ViewportQuadVS from \"../Shaders/ViewportQuadVS.js\";\nimport BufferUsage from \"./BufferUsage.js\";\nimport ClearCommand from \"./ClearCommand.js\";\nimport ContextLimits from \"./ContextLimits.js\";\nimport CubeMap from \"./CubeMap.js\";\nimport DrawCommand from \"./DrawCommand.js\";\nimport PassState from \"./PassState.js\";\nimport PixelDatatype from \"./PixelDatatype.js\";\nimport RenderState from \"./RenderState.js\";\nimport ShaderCache from \"./ShaderCache.js\";\nimport ShaderProgram from \"./ShaderProgram.js\";\nimport Texture from \"./Texture.js\";\nimport TextureCache from \"./TextureCache.js\";\nimport UniformState from \"./UniformState.js\";\nimport VertexArray from \"./VertexArray.js\";\n\nfunction errorToString(gl, error) {\n  let message = \"WebGL Error:  \";\n  switch (error) {\n    case gl.INVALID_ENUM:\n      message += \"INVALID_ENUM\";\n      break;\n    case gl.INVALID_VALUE:\n      message += \"INVALID_VALUE\";\n      break;\n    case gl.INVALID_OPERATION:\n      message += \"INVALID_OPERATION\";\n      break;\n    case gl.OUT_OF_MEMORY:\n      message += \"OUT_OF_MEMORY\";\n      break;\n    case gl.CONTEXT_LOST_WEBGL:\n      message += \"CONTEXT_LOST_WEBGL lost\";\n      break;\n    default:\n      message += `Unknown (${error})`;\n  }\n\n  return message;\n}\n\nfunction createErrorMessage(gl, glFunc, glFuncArguments, error) {\n  let message = `${errorToString(gl, error)}: ${glFunc.name}(`;\n\n  for (let i = 0; i < glFuncArguments.length; ++i) {\n    if (i !== 0) {\n      message += \", \";\n    }\n    message += glFuncArguments[i];\n  }\n  message += \");\";\n\n  return message;\n}\n\nfunction throwOnError(gl, glFunc, glFuncArguments) {\n  const error = gl.getError();\n  if (error !== gl.NO_ERROR) {\n    throw new RuntimeError(\n      createErrorMessage(gl, glFunc, glFuncArguments, error)\n    );\n  }\n}\n\nfunction makeGetterSetter(gl, propertyName, logFunction) {\n  return {\n    get: function () {\n      const value = gl[propertyName];\n      logFunction(gl, `get: ${propertyName}`, value);\n      return gl[propertyName];\n    },\n    set: function (value) {\n      gl[propertyName] = value;\n      logFunction(gl, `set: ${propertyName}`, value);\n    },\n  };\n}\n\nfunction wrapGL(gl, logFunction) {\n  if (!defined(logFunction)) {\n    return gl;\n  }\n\n  function wrapFunction(property) {\n    return function () {\n      const result = property.apply(gl, arguments);\n      logFunction(gl, property, arguments);\n      return result;\n    };\n  }\n\n  const glWrapper = {};\n\n  // JavaScript linters normally demand that a for..in loop must directly contain an if,\n  // but in our loop below, we actually intend to iterate all properties, including\n  // those in the prototype.\n  /*eslint-disable guard-for-in*/\n  for (const propertyName in gl) {\n    const property = gl[propertyName];\n\n    // wrap any functions we encounter, otherwise just copy the property to the wrapper.\n    if (property instanceof Function) {\n      glWrapper[propertyName] = wrapFunction(property);\n    } else {\n      Object.defineProperty(\n        glWrapper,\n        propertyName,\n        makeGetterSetter(gl, propertyName, logFunction)\n      );\n    }\n  }\n  /*eslint-enable guard-for-in*/\n\n  return glWrapper;\n}\n\nfunction getExtension(gl, names) {\n  const length = names.length;\n  for (let i = 0; i < length; ++i) {\n    const extension = gl.getExtension(names[i]);\n    if (extension) {\n      return extension;\n    }\n  }\n\n  return undefined;\n}\n\n/**\n * @private\n * @constructor\n */\nfunction Context(canvas, options) {\n  // this check must use typeof, not defined, because defined doesn't work with undeclared variables.\n  if (typeof WebGLRenderingContext === \"undefined\") {\n    throw new RuntimeError(\n      \"The browser does not support WebGL.  Visit http://get.webgl.org.\"\n    );\n  }\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"canvas\", canvas);\n  //>>includeEnd('debug');\n\n  this._canvas = canvas;\n\n  options = clone(options, true);\n  // Don't use defaultValue.EMPTY_OBJECT here because the options object gets modified in the next line.\n  options = defaultValue(options, {});\n  options.allowTextureFilterAnisotropic = defaultValue(\n    options.allowTextureFilterAnisotropic,\n    true\n  );\n  const webglOptions = defaultValue(options.webgl, {});\n\n  // Override select WebGL defaults\n  webglOptions.alpha = defaultValue(webglOptions.alpha, false); // WebGL default is true\n  webglOptions.stencil = defaultValue(webglOptions.stencil, true); // WebGL default is false\n\n  const requestWebgl2 =\n    defaultValue(options.requestWebgl2, false) &&\n    typeof WebGL2RenderingContext !== \"undefined\";\n  let webgl2 = false;\n\n  let glContext;\n  const getWebGLStub = options.getWebGLStub;\n\n  if (!defined(getWebGLStub)) {\n    if (requestWebgl2) {\n      glContext =\n        canvas.getContext(\"webgl2\", webglOptions) ||\n        canvas.getContext(\"experimental-webgl2\", webglOptions) ||\n        undefined;\n      if (defined(glContext)) {\n        webgl2 = true;\n      }\n    }\n    if (!defined(glContext)) {\n      glContext =\n        canvas.getContext(\"webgl\", webglOptions) ||\n        canvas.getContext(\"experimental-webgl\", webglOptions) ||\n        undefined;\n    }\n    if (!defined(glContext)) {\n      throw new RuntimeError(\n        \"The browser supports WebGL, but initialization failed.\"\n      );\n    }\n  } else {\n    // Use WebGL stub when requested for unit tests\n    glContext = getWebGLStub(canvas, webglOptions);\n  }\n\n  this._originalGLContext = glContext;\n  this._gl = glContext;\n  this._webgl2 = webgl2;\n  this._id = createGuid();\n\n  // Validation and logging disabled by default for speed.\n  this.validateFramebuffer = false;\n  this.validateShaderProgram = false;\n  this.logShaderCompilation = false;\n\n  this._throwOnWebGLError = false;\n\n  this._shaderCache = new ShaderCache(this);\n  this._textureCache = new TextureCache();\n\n  const gl = glContext;\n\n  this._stencilBits = gl.getParameter(gl.STENCIL_BITS);\n\n  ContextLimits._maximumCombinedTextureImageUnits = gl.getParameter(\n    gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS\n  ); // min: 8\n  ContextLimits._maximumCubeMapSize = gl.getParameter(\n    gl.MAX_CUBE_MAP_TEXTURE_SIZE\n  ); // min: 16\n  ContextLimits._maximumFragmentUniformVectors = gl.getParameter(\n    gl.MAX_FRAGMENT_UNIFORM_VECTORS\n  ); // min: 16\n  ContextLimits._maximumTextureImageUnits = gl.getParameter(\n    gl.MAX_TEXTURE_IMAGE_UNITS\n  ); // min: 8\n  ContextLimits._maximumRenderbufferSize = gl.getParameter(\n    gl.MAX_RENDERBUFFER_SIZE\n  ); // min: 1\n  ContextLimits._maximumTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE); // min: 64\n  ContextLimits._maximumVaryingVectors = gl.getParameter(\n    gl.MAX_VARYING_VECTORS\n  ); // min: 8\n  ContextLimits._maximumVertexAttributes = gl.getParameter(\n    gl.MAX_VERTEX_ATTRIBS\n  ); // min: 8\n  ContextLimits._maximumVertexTextureImageUnits = gl.getParameter(\n    gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS\n  ); // min: 0\n  ContextLimits._maximumVertexUniformVectors = gl.getParameter(\n    gl.MAX_VERTEX_UNIFORM_VECTORS\n  ); // min: 128\n\n  ContextLimits._maximumSamples = this._webgl2\n    ? gl.getParameter(gl.MAX_SAMPLES)\n    : 0;\n\n  const aliasedLineWidthRange = gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE); // must include 1\n  ContextLimits._minimumAliasedLineWidth = aliasedLineWidthRange[0];\n  ContextLimits._maximumAliasedLineWidth = aliasedLineWidthRange[1];\n\n  const aliasedPointSizeRange = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE); // must include 1\n  ContextLimits._minimumAliasedPointSize = aliasedPointSizeRange[0];\n  ContextLimits._maximumAliasedPointSize = aliasedPointSizeRange[1];\n\n  const maximumViewportDimensions = gl.getParameter(gl.MAX_VIEWPORT_DIMS);\n  ContextLimits._maximumViewportWidth = maximumViewportDimensions[0];\n  ContextLimits._maximumViewportHeight = maximumViewportDimensions[1];\n\n  const highpFloat = gl.getShaderPrecisionFormat(\n    gl.FRAGMENT_SHADER,\n    gl.HIGH_FLOAT\n  );\n  ContextLimits._highpFloatSupported = highpFloat.precision !== 0;\n  const highpInt = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT);\n  ContextLimits._highpIntSupported = highpInt.rangeMax !== 0;\n\n  this._antialias = gl.getContextAttributes().antialias;\n\n  // Query and initialize extensions\n  this._standardDerivatives = !!getExtension(gl, [\"OES_standard_derivatives\"]);\n  this._blendMinmax = !!getExtension(gl, [\"EXT_blend_minmax\"]);\n  this._elementIndexUint = !!getExtension(gl, [\"OES_element_index_uint\"]);\n  this._depthTexture = !!getExtension(gl, [\n    \"WEBGL_depth_texture\",\n    \"WEBKIT_WEBGL_depth_texture\",\n  ]);\n  this._fragDepth = !!getExtension(gl, [\"EXT_frag_depth\"]);\n  this._debugShaders = getExtension(gl, [\"WEBGL_debug_shaders\"]);\n\n  this._textureFloat = !!getExtension(gl, [\"OES_texture_float\"]);\n  this._textureHalfFloat = !!getExtension(gl, [\"OES_texture_half_float\"]);\n\n  this._textureFloatLinear = !!getExtension(gl, [\"OES_texture_float_linear\"]);\n  this._textureHalfFloatLinear = !!getExtension(gl, [\n    \"OES_texture_half_float_linear\",\n  ]);\n\n  this._colorBufferFloat = !!getExtension(gl, [\n    \"EXT_color_buffer_float\",\n    \"WEBGL_color_buffer_float\",\n  ]);\n  this._floatBlend = !!getExtension(gl, [\"EXT_float_blend\"]);\n  this._colorBufferHalfFloat = !!getExtension(gl, [\n    \"EXT_color_buffer_half_float\",\n  ]);\n\n  this._s3tc = !!getExtension(gl, [\n    \"WEBGL_compressed_texture_s3tc\",\n    \"MOZ_WEBGL_compressed_texture_s3tc\",\n    \"WEBKIT_WEBGL_compressed_texture_s3tc\",\n  ]);\n  this._pvrtc = !!getExtension(gl, [\n    \"WEBGL_compressed_texture_pvrtc\",\n    \"WEBKIT_WEBGL_compressed_texture_pvrtc\",\n  ]);\n  this._astc = !!getExtension(gl, [\"WEBGL_compressed_texture_astc\"]);\n  this._etc = !!getExtension(gl, [\"WEBG_compressed_texture_etc\"]);\n  this._etc1 = !!getExtension(gl, [\"WEBGL_compressed_texture_etc1\"]);\n  this._bc7 = !!getExtension(gl, [\"EXT_texture_compression_bptc\"]);\n\n  // It is necessary to pass supported formats to loadKTX2\n  // because imagery layers don't have access to the context.\n  loadKTX2.setKTX2SupportedFormats(\n    this._s3tc,\n    this._pvrtc,\n    this._astc,\n    this._etc,\n    this._etc1,\n    this._bc7\n  );\n\n  const textureFilterAnisotropic = options.allowTextureFilterAnisotropic\n    ? getExtension(gl, [\n        \"EXT_texture_filter_anisotropic\",\n        \"WEBKIT_EXT_texture_filter_anisotropic\",\n      ])\n    : undefined;\n  this._textureFilterAnisotropic = textureFilterAnisotropic;\n  ContextLimits._maximumTextureFilterAnisotropy = defined(\n    textureFilterAnisotropic\n  )\n    ? gl.getParameter(textureFilterAnisotropic.MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n    : 1.0;\n\n  let glCreateVertexArray;\n  let glBindVertexArray;\n  let glDeleteVertexArray;\n\n  let glDrawElementsInstanced;\n  let glDrawArraysInstanced;\n  let glVertexAttribDivisor;\n\n  let glDrawBuffers;\n\n  let vertexArrayObject;\n  let instancedArrays;\n  let drawBuffers;\n\n  if (webgl2) {\n    const that = this;\n\n    glCreateVertexArray = function () {\n      return that._gl.createVertexArray();\n    };\n    glBindVertexArray = function (vao) {\n      that._gl.bindVertexArray(vao);\n    };\n    glDeleteVertexArray = function (vao) {\n      that._gl.deleteVertexArray(vao);\n    };\n\n    glDrawElementsInstanced = function (\n      mode,\n      count,\n      type,\n      offset,\n      instanceCount\n    ) {\n      gl.drawElementsInstanced(mode, count, type, offset, instanceCount);\n    };\n    glDrawArraysInstanced = function (mode, first, count, instanceCount) {\n      gl.drawArraysInstanced(mode, first, count, instanceCount);\n    };\n    glVertexAttribDivisor = function (index, divisor) {\n      gl.vertexAttribDivisor(index, divisor);\n    };\n\n    glDrawBuffers = function (buffers) {\n      gl.drawBuffers(buffers);\n    };\n  } else {\n    vertexArrayObject = getExtension(gl, [\"OES_vertex_array_object\"]);\n    if (defined(vertexArrayObject)) {\n      glCreateVertexArray = function () {\n        return vertexArrayObject.createVertexArrayOES();\n      };\n      glBindVertexArray = function (vertexArray) {\n        vertexArrayObject.bindVertexArrayOES(vertexArray);\n      };\n      glDeleteVertexArray = function (vertexArray) {\n        vertexArrayObject.deleteVertexArrayOES(vertexArray);\n      };\n    }\n\n    instancedArrays = getExtension(gl, [\"ANGLE_instanced_arrays\"]);\n    if (defined(instancedArrays)) {\n      glDrawElementsInstanced = function (\n        mode,\n        count,\n        type,\n        offset,\n        instanceCount\n      ) {\n        instancedArrays.drawElementsInstancedANGLE(\n          mode,\n          count,\n          type,\n          offset,\n          instanceCount\n        );\n      };\n      glDrawArraysInstanced = function (mode, first, count, instanceCount) {\n        instancedArrays.drawArraysInstancedANGLE(\n          mode,\n          first,\n          count,\n          instanceCount\n        );\n      };\n      glVertexAttribDivisor = function (index, divisor) {\n        instancedArrays.vertexAttribDivisorANGLE(index, divisor);\n      };\n    }\n\n    drawBuffers = getExtension(gl, [\"WEBGL_draw_buffers\"]);\n    if (defined(drawBuffers)) {\n      glDrawBuffers = function (buffers) {\n        drawBuffers.drawBuffersWEBGL(buffers);\n      };\n    }\n  }\n\n  this.glCreateVertexArray = glCreateVertexArray;\n  this.glBindVertexArray = glBindVertexArray;\n  this.glDeleteVertexArray = glDeleteVertexArray;\n\n  this.glDrawElementsInstanced = glDrawElementsInstanced;\n  this.glDrawArraysInstanced = glDrawArraysInstanced;\n  this.glVertexAttribDivisor = glVertexAttribDivisor;\n\n  this.glDrawBuffers = glDrawBuffers;\n\n  this._vertexArrayObject = !!vertexArrayObject;\n  this._instancedArrays = !!instancedArrays;\n  this._drawBuffers = !!drawBuffers;\n\n  ContextLimits._maximumDrawBuffers = this.drawBuffers\n    ? gl.getParameter(WebGLConstants.MAX_DRAW_BUFFERS)\n    : 1;\n  ContextLimits._maximumColorAttachments = this.drawBuffers\n    ? gl.getParameter(WebGLConstants.MAX_COLOR_ATTACHMENTS)\n    : 1;\n\n  this._clearColor = new Color(0.0, 0.0, 0.0, 0.0);\n  this._clearDepth = 1.0;\n  this._clearStencil = 0;\n\n  const us = new UniformState();\n  const ps = new PassState(this);\n  const rs = RenderState.fromCache();\n\n  this._defaultPassState = ps;\n  this._defaultRenderState = rs;\n  // default texture has a value of (1, 1, 1)\n  // default emissive texture has a value of (0, 0, 0)\n  // default normal texture is +z which is encoded as (0.5, 0.5, 1)\n  this._defaultTexture = undefined;\n  this._defaultEmissiveTexture = undefined;\n  this._defaultNormalTexture = undefined;\n  this._defaultCubeMap = undefined;\n\n  this._us = us;\n  this._currentRenderState = rs;\n  this._currentPassState = ps;\n  this._currentFramebuffer = undefined;\n  this._maxFrameTextureUnitIndex = 0;\n\n  // Vertex attribute divisor state cache. Workaround for ANGLE (also look at VertexArray.setVertexAttribDivisor)\n  this._vertexAttribDivisors = [];\n  this._previousDrawInstanced = false;\n  for (let i = 0; i < ContextLimits._maximumVertexAttributes; i++) {\n    this._vertexAttribDivisors.push(0);\n  }\n\n  this._pickObjects = {};\n  this._nextPickColor = new Uint32Array(1);\n\n  /**\n   * @example\n   * {\n   *   webgl : {\n   *     alpha : false,\n   *     depth : true,\n   *     stencil : false,\n   *     antialias : true,\n   *     premultipliedAlpha : true,\n   *     preserveDrawingBuffer : false,\n   *     failIfMajorPerformanceCaveat : true\n   *   },\n   *   allowTextureFilterAnisotropic : true\n   * }\n   */\n  this.options = options;\n\n  /**\n   * A cache of objects tied to this context.  Just before the Context is destroyed,\n   * <code>destroy</code> will be invoked on each object in this object literal that has\n   * such a method.  This is useful for caching any objects that might otherwise\n   * be stored globally, except they're tied to a particular context, and to manage\n   * their lifetime.\n   *\n   * @type {Object}\n   */\n  this.cache = {};\n\n  RenderState.apply(gl, rs, ps);\n}\n\nconst defaultFramebufferMarker = {};\n\nObject.defineProperties(Context.prototype, {\n  id: {\n    get: function () {\n      return this._id;\n    },\n  },\n  webgl2: {\n    get: function () {\n      return this._webgl2;\n    },\n  },\n  canvas: {\n    get: function () {\n      return this._canvas;\n    },\n  },\n  shaderCache: {\n    get: function () {\n      return this._shaderCache;\n    },\n  },\n  textureCache: {\n    get: function () {\n      return this._textureCache;\n    },\n  },\n  uniformState: {\n    get: function () {\n      return this._us;\n    },\n  },\n\n  /**\n   * The number of stencil bits per pixel in the default bound framebuffer.  The minimum is eight bits.\n   * @memberof Context.prototype\n   * @type {Number}\n   * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glGet.xml|glGet} with <code>STENCIL_BITS</code>.\n   */\n  stencilBits: {\n    get: function () {\n      return this._stencilBits;\n    },\n  },\n\n  /**\n   * <code>true</code> if the WebGL context supports stencil buffers.\n   * Stencil buffers are not supported by all systems.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   */\n  stencilBuffer: {\n    get: function () {\n      return this._stencilBits >= 8;\n    },\n  },\n\n  /**\n   * <code>true</code> if the WebGL context supports antialiasing.  By default\n   * antialiasing is requested, but it is not supported by all systems.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   */\n  antialias: {\n    get: function () {\n      return this._antialias;\n    },\n  },\n\n  /**\n   * <code>true</code> if the WebGL context supports multisample antialiasing. Requires\n   * WebGL2.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   */\n  msaa: {\n    get: function () {\n      return this._webgl2;\n    },\n  },\n\n  /**\n   * <code>true</code> if the OES_standard_derivatives extension is supported.  This\n   * extension provides access to <code>dFdx</code>, <code>dFdy</code>, and <code>fwidth</code>\n   * functions from GLSL.  A shader using these functions still needs to explicitly enable the\n   * extension with <code>#extension GL_OES_standard_derivatives : enable</code>.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link http://www.khronos.org/registry/gles/extensions/OES/OES_standard_derivatives.txt|OES_standard_derivatives}\n   */\n  standardDerivatives: {\n    get: function () {\n      return this._standardDerivatives || this._webgl2;\n    },\n  },\n\n  /**\n   * <code>true</code> if the EXT_float_blend extension is supported. This\n   * extension enables blending with 32-bit float values.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/EXT_float_blend/}\n   */\n  floatBlend: {\n    get: function () {\n      return this._floatBlend;\n    },\n  },\n\n  /**\n   * <code>true</code> if the EXT_blend_minmax extension is supported.  This\n   * extension extends blending capabilities by adding two new blend equations:\n   * the minimum or maximum color components of the source and destination colors.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/EXT_blend_minmax/}\n   */\n  blendMinmax: {\n    get: function () {\n      return this._blendMinmax || this._webgl2;\n    },\n  },\n\n  /**\n   * <code>true</code> if the OES_element_index_uint extension is supported.  This\n   * extension allows the use of unsigned int indices, which can improve performance by\n   * eliminating batch breaking caused by unsigned short indices.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link http://www.khronos.org/registry/webgl/extensions/OES_element_index_uint/|OES_element_index_uint}\n   */\n  elementIndexUint: {\n    get: function () {\n      return this._elementIndexUint || this._webgl2;\n    },\n  },\n\n  /**\n   * <code>true</code> if WEBGL_depth_texture is supported.  This extension provides\n   * access to depth textures that, for example, can be attached to framebuffers for shadow mapping.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link http://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/|WEBGL_depth_texture}\n   */\n  depthTexture: {\n    get: function () {\n      return this._depthTexture || this._webgl2;\n    },\n  },\n\n  /**\n   * <code>true</code> if OES_texture_float is supported. This extension provides\n   * access to floating point textures that, for example, can be attached to framebuffers for high dynamic range.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/OES_texture_float/}\n   */\n  floatingPointTexture: {\n    get: function () {\n      return this._webgl2 || this._textureFloat;\n    },\n  },\n\n  /**\n   * <code>true</code> if OES_texture_half_float is supported. This extension provides\n   * access to floating point textures that, for example, can be attached to framebuffers for high dynamic range.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/OES_texture_half_float/}\n   */\n  halfFloatingPointTexture: {\n    get: function () {\n      return this._webgl2 || this._textureHalfFloat;\n    },\n  },\n\n  /**\n   * <code>true</code> if OES_texture_float_linear is supported. This extension provides\n   * access to linear sampling methods for minification and magnification filters of floating-point textures.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/OES_texture_float_linear/}\n   */\n  textureFloatLinear: {\n    get: function () {\n      return this._textureFloatLinear;\n    },\n  },\n\n  /**\n   * <code>true</code> if OES_texture_half_float_linear is supported. This extension provides\n   * access to linear sampling methods for minification and magnification filters of half floating-point textures.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/OES_texture_half_float_linear/}\n   */\n  textureHalfFloatLinear: {\n    get: function () {\n      return (\n        (this._webgl2 && this._textureFloatLinear) ||\n        (!this._webgl2 && this._textureHalfFloatLinear)\n      );\n    },\n  },\n\n  /**\n   * <code>true</code> if EXT_texture_filter_anisotropic is supported. This extension provides\n   * access to anisotropic filtering for textured surfaces at an oblique angle from the viewer.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/EXT_texture_filter_anisotropic/}\n   */\n  textureFilterAnisotropic: {\n    get: function () {\n      return !!this._textureFilterAnisotropic;\n    },\n  },\n\n  /**\n   * <code>true</code> if WEBGL_compressed_texture_s3tc is supported.  This extension provides\n   * access to DXT compressed textures.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_s3tc/}\n   */\n  s3tc: {\n    get: function () {\n      return this._s3tc;\n    },\n  },\n\n  /**\n   * <code>true</code> if WEBGL_compressed_texture_pvrtc is supported.  This extension provides\n   * access to PVR compressed textures.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_pvrtc/}\n   */\n  pvrtc: {\n    get: function () {\n      return this._pvrtc;\n    },\n  },\n\n  /**\n   * <code>true</code> if WEBGL_compressed_texture_astc is supported.  This extension provides\n   * access to ASTC compressed textures.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_astc/}\n   */\n  astc: {\n    get: function () {\n      return this._astc;\n    },\n  },\n\n  /**\n   * <code>true</code> if WEBGL_compressed_texture_etc is supported.  This extension provides\n   * access to ETC compressed textures.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_etc/}\n   */\n  etc: {\n    get: function () {\n      return this._etc;\n    },\n  },\n\n  /**\n   * <code>true</code> if WEBGL_compressed_texture_etc1 is supported.  This extension provides\n   * access to ETC1 compressed textures.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/WEBGL_compressed_texture_etc1/}\n   */\n  etc1: {\n    get: function () {\n      return this._etc1;\n    },\n  },\n\n  /**\n   * <code>true</code> if EXT_texture_compression_bptc is supported.  This extension provides\n   * access to BC7 compressed textures.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/EXT_texture_compression_bptc/}\n   */\n  bc7: {\n    get: function () {\n      return this._bc7;\n    },\n  },\n\n  /**\n   * <code>true</code> if S3TC, PVRTC, ASTC, ETC, ETC1, or BC7 compression is supported.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   */\n  supportsBasis: {\n    get: function () {\n      return (\n        this._s3tc ||\n        this._pvrtc ||\n        this._astc ||\n        this._etc ||\n        this._etc1 ||\n        this._bc7\n      );\n    },\n  },\n\n  /**\n   * <code>true</code> if the OES_vertex_array_object extension is supported.  This\n   * extension can improve performance by reducing the overhead of switching vertex arrays.\n   * When enabled, this extension is automatically used by {@link VertexArray}.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link http://www.khronos.org/registry/webgl/extensions/OES_vertex_array_object/|OES_vertex_array_object}\n   */\n  vertexArrayObject: {\n    get: function () {\n      return this._vertexArrayObject || this._webgl2;\n    },\n  },\n\n  /**\n   * <code>true</code> if the EXT_frag_depth extension is supported.  This\n   * extension provides access to the <code>gl_FragDepthEXT</code> built-in output variable\n   * from GLSL fragment shaders.  A shader using these functions still needs to explicitly enable the\n   * extension with <code>#extension GL_EXT_frag_depth : enable</code>.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link http://www.khronos.org/registry/webgl/extensions/EXT_frag_depth/|EXT_frag_depth}\n   */\n  fragmentDepth: {\n    get: function () {\n      return this._fragDepth || this._webgl2;\n    },\n  },\n\n  /**\n   * <code>true</code> if the ANGLE_instanced_arrays extension is supported.  This\n   * extension provides access to instanced rendering.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/ANGLE_instanced_arrays}\n   */\n  instancedArrays: {\n    get: function () {\n      return this._instancedArrays || this._webgl2;\n    },\n  },\n\n  /**\n   * <code>true</code> if the EXT_color_buffer_float extension is supported.  This\n   * extension makes the gl.RGBA32F format color renderable.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/WEBGL_color_buffer_float/}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/EXT_color_buffer_float/}\n   */\n  colorBufferFloat: {\n    get: function () {\n      return this._colorBufferFloat;\n    },\n  },\n\n  /**\n   * <code>true</code> if the EXT_color_buffer_half_float extension is supported.  This\n   * extension makes the format gl.RGBA16F format color renderable.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/EXT_color_buffer_half_float/}\n   * @see {@link https://www.khronos.org/registry/webgl/extensions/EXT_color_buffer_float/}\n   */\n  colorBufferHalfFloat: {\n    get: function () {\n      return (\n        (this._webgl2 && this._colorBufferFloat) ||\n        (!this._webgl2 && this._colorBufferHalfFloat)\n      );\n    },\n  },\n\n  /**\n   * <code>true</code> if the WEBGL_draw_buffers extension is supported. This\n   * extensions provides support for multiple render targets. The framebuffer object can have mutiple\n   * color attachments and the GLSL fragment shader can write to the built-in output array <code>gl_FragData</code>.\n   * A shader using this feature needs to explicitly enable the extension with\n   * <code>#extension GL_EXT_draw_buffers : enable</code>.\n   * @memberof Context.prototype\n   * @type {Boolean}\n   * @see {@link http://www.khronos.org/registry/webgl/extensions/WEBGL_draw_buffers/|WEBGL_draw_buffers}\n   */\n  drawBuffers: {\n    get: function () {\n      return this._drawBuffers || this._webgl2;\n    },\n  },\n\n  debugShaders: {\n    get: function () {\n      return this._debugShaders;\n    },\n  },\n\n  throwOnWebGLError: {\n    get: function () {\n      return this._throwOnWebGLError;\n    },\n    set: function (value) {\n      this._throwOnWebGLError = value;\n      this._gl = wrapGL(\n        this._originalGLContext,\n        value ? throwOnError : undefined\n      );\n    },\n  },\n\n  /**\n   * A 1x1 RGBA texture initialized to [255, 255, 255, 255].  This can\n   * be used as a placeholder texture while other textures are downloaded.\n   * @memberof Context.prototype\n   * @type {Texture}\n   */\n  defaultTexture: {\n    get: function () {\n      if (this._defaultTexture === undefined) {\n        this._defaultTexture = new Texture({\n          context: this,\n          source: {\n            width: 1,\n            height: 1,\n            arrayBufferView: new Uint8Array([255, 255, 255, 255]),\n          },\n          flipY: false,\n        });\n      }\n\n      return this._defaultTexture;\n    },\n  },\n  /**\n   * A 1x1 RGB texture initialized to [0, 0, 0] representing a material that is\n   * not emissive. This can be used as a placeholder texture for emissive\n   * textures while other textures are downloaded.\n   * @memberof Context.prototype\n   * @type {Texture}\n   */\n  defaultEmissiveTexture: {\n    get: function () {\n      if (this._defaultEmissiveTexture === undefined) {\n        this._defaultEmissiveTexture = new Texture({\n          context: this,\n          pixelFormat: PixelFormat.RGB,\n          source: {\n            width: 1,\n            height: 1,\n            arrayBufferView: new Uint8Array([0, 0, 0]),\n          },\n          flipY: false,\n        });\n      }\n\n      return this._defaultEmissiveTexture;\n    },\n  },\n  /**\n   * A 1x1 RGBA texture initialized to [128, 128, 255] to encode a tangent\n   * space normal pointing in the +z direction, i.e. (0, 0, 1). This can\n   * be used as a placeholder normal texture while other textures are\n   * downloaded.\n   * @memberof Context.prototype\n   * @type {Texture}\n   */\n  defaultNormalTexture: {\n    get: function () {\n      if (this._defaultNormalTexture === undefined) {\n        this._defaultNormalTexture = new Texture({\n          context: this,\n          pixelFormat: PixelFormat.RGB,\n          source: {\n            width: 1,\n            height: 1,\n            arrayBufferView: new Uint8Array([128, 128, 255]),\n          },\n          flipY: false,\n        });\n      }\n\n      return this._defaultNormalTexture;\n    },\n  },\n\n  /**\n   * A cube map, where each face is a 1x1 RGBA texture initialized to\n   * [255, 255, 255, 255].  This can be used as a placeholder cube map while\n   * other cube maps are downloaded.\n   * @memberof Context.prototype\n   * @type {CubeMap}\n   */\n  defaultCubeMap: {\n    get: function () {\n      if (this._defaultCubeMap === undefined) {\n        const face = {\n          width: 1,\n          height: 1,\n          arrayBufferView: new Uint8Array([255, 255, 255, 255]),\n        };\n\n        this._defaultCubeMap = new CubeMap({\n          context: this,\n          source: {\n            positiveX: face,\n            negativeX: face,\n            positiveY: face,\n            negativeY: face,\n            positiveZ: face,\n            negativeZ: face,\n          },\n          flipY: false,\n        });\n      }\n\n      return this._defaultCubeMap;\n    },\n  },\n\n  /**\n   * The drawingBufferHeight of the underlying GL context.\n   * @memberof Context.prototype\n   * @type {Number}\n   * @see {@link https://www.khronos.org/registry/webgl/specs/1.0/#DOM-WebGLRenderingContext-drawingBufferHeight|drawingBufferHeight}\n   */\n  drawingBufferHeight: {\n    get: function () {\n      return this._gl.drawingBufferHeight;\n    },\n  },\n\n  /**\n   * The drawingBufferWidth of the underlying GL context.\n   * @memberof Context.prototype\n   * @type {Number}\n   * @see {@link https://www.khronos.org/registry/webgl/specs/1.0/#DOM-WebGLRenderingContext-drawingBufferWidth|drawingBufferWidth}\n   */\n  drawingBufferWidth: {\n    get: function () {\n      return this._gl.drawingBufferWidth;\n    },\n  },\n\n  /**\n   * Gets an object representing the currently bound framebuffer.  While this instance is not an actual\n   * {@link Framebuffer}, it is used to represent the default framebuffer in calls to\n   * {@link Texture.fromFramebuffer}.\n   * @memberof Context.prototype\n   * @type {Object}\n   */\n  defaultFramebuffer: {\n    get: function () {\n      return defaultFramebufferMarker;\n    },\n  },\n});\n\n/**\n * Validates a framebuffer.\n * Available in debug builds only.\n * @private\n */\nfunction validateFramebuffer(context) {\n  //>>includeStart('debug', pragmas.debug);\n  if (context.validateFramebuffer) {\n    const gl = context._gl;\n    const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n\n    if (status !== gl.FRAMEBUFFER_COMPLETE) {\n      let message;\n\n      switch (status) {\n        case gl.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n          message =\n            \"Framebuffer is not complete.  Incomplete attachment: at least one attachment point with a renderbuffer or texture attached has its attached object no longer in existence or has an attached image with a width or height of zero, or the color attachment point has a non-color-renderable image attached, or the depth attachment point has a non-depth-renderable image attached, or the stencil attachment point has a non-stencil-renderable image attached.  Color-renderable formats include GL_RGBA4, GL_RGB5_A1, and GL_RGB565. GL_DEPTH_COMPONENT16 is the only depth-renderable format. GL_STENCIL_INDEX8 is the only stencil-renderable format.\";\n          break;\n        case gl.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n          message =\n            \"Framebuffer is not complete.  Incomplete dimensions: not all attached images have the same width and height.\";\n          break;\n        case gl.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n          message =\n            \"Framebuffer is not complete.  Missing attachment: no images are attached to the framebuffer.\";\n          break;\n        case gl.FRAMEBUFFER_UNSUPPORTED:\n          message =\n            \"Framebuffer is not complete.  Unsupported: the combination of internal formats of the attached images violates an implementation-dependent set of restrictions.\";\n          break;\n      }\n\n      throw new DeveloperError(message);\n    }\n  }\n  //>>includeEnd('debug');\n}\n\nfunction applyRenderState(context, renderState, passState, clear) {\n  const previousRenderState = context._currentRenderState;\n  const previousPassState = context._currentPassState;\n  context._currentRenderState = renderState;\n  context._currentPassState = passState;\n  RenderState.partialApply(\n    context._gl,\n    previousRenderState,\n    renderState,\n    previousPassState,\n    passState,\n    clear\n  );\n}\n\nlet scratchBackBufferArray;\n// this check must use typeof, not defined, because defined doesn't work with undeclared variables.\nif (typeof WebGLRenderingContext !== \"undefined\") {\n  scratchBackBufferArray = [WebGLConstants.BACK];\n}\n\nfunction bindFramebuffer(context, framebuffer) {\n  if (framebuffer !== context._currentFramebuffer) {\n    context._currentFramebuffer = framebuffer;\n    let buffers = scratchBackBufferArray;\n\n    if (defined(framebuffer)) {\n      framebuffer._bind();\n      validateFramebuffer(context);\n\n      // TODO: Need a way for a command to give what draw buffers are active.\n      buffers = framebuffer._getActiveColorAttachments();\n    } else {\n      const gl = context._gl;\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    }\n\n    if (context.drawBuffers) {\n      context.glDrawBuffers(buffers);\n    }\n  }\n}\n\nconst defaultClearCommand = new ClearCommand();\n\nContext.prototype.clear = function (clearCommand, passState) {\n  clearCommand = defaultValue(clearCommand, defaultClearCommand);\n  passState = defaultValue(passState, this._defaultPassState);\n\n  const gl = this._gl;\n  let bitmask = 0;\n\n  const c = clearCommand.color;\n  const d = clearCommand.depth;\n  const s = clearCommand.stencil;\n\n  if (defined(c)) {\n    if (!Color.equals(this._clearColor, c)) {\n      Color.clone(c, this._clearColor);\n      gl.clearColor(c.red, c.green, c.blue, c.alpha);\n    }\n    bitmask |= gl.COLOR_BUFFER_BIT;\n  }\n\n  if (defined(d)) {\n    if (d !== this._clearDepth) {\n      this._clearDepth = d;\n      gl.clearDepth(d);\n    }\n    bitmask |= gl.DEPTH_BUFFER_BIT;\n  }\n\n  if (defined(s)) {\n    if (s !== this._clearStencil) {\n      this._clearStencil = s;\n      gl.clearStencil(s);\n    }\n    bitmask |= gl.STENCIL_BUFFER_BIT;\n  }\n\n  const rs = defaultValue(clearCommand.renderState, this._defaultRenderState);\n  applyRenderState(this, rs, passState, true);\n\n  // The command's framebuffer takes presidence over the pass' framebuffer, e.g., for off-screen rendering.\n  const framebuffer = defaultValue(\n    clearCommand.framebuffer,\n    passState.framebuffer\n  );\n  bindFramebuffer(this, framebuffer);\n\n  gl.clear(bitmask);\n};\n\nfunction beginDraw(\n  context,\n  framebuffer,\n  passState,\n  shaderProgram,\n  renderState\n) {\n  //>>includeStart('debug', pragmas.debug);\n  if (defined(framebuffer) && renderState.depthTest) {\n    if (renderState.depthTest.enabled && !framebuffer.hasDepthAttachment) {\n      throw new DeveloperError(\n        \"The depth test can not be enabled (drawCommand.renderState.depthTest.enabled) because the framebuffer (drawCommand.framebuffer) does not have a depth or depth-stencil renderbuffer.\"\n      );\n    }\n  }\n  //>>includeEnd('debug');\n\n  bindFramebuffer(context, framebuffer);\n  applyRenderState(context, renderState, passState, false);\n  shaderProgram._bind();\n  context._maxFrameTextureUnitIndex = Math.max(\n    context._maxFrameTextureUnitIndex,\n    shaderProgram.maximumTextureUnitIndex\n  );\n}\n\nfunction continueDraw(context, drawCommand, shaderProgram, uniformMap) {\n  const primitiveType = drawCommand._primitiveType;\n  const va = drawCommand._vertexArray;\n  let offset = drawCommand._offset;\n  let count = drawCommand._count;\n  const instanceCount = drawCommand.instanceCount;\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!PrimitiveType.validate(primitiveType)) {\n    throw new DeveloperError(\n      \"drawCommand.primitiveType is required and must be valid.\"\n    );\n  }\n\n  Check.defined(\"drawCommand.vertexArray\", va);\n  Check.typeOf.number.greaterThanOrEquals(\"drawCommand.offset\", offset, 0);\n  if (defined(count)) {\n    Check.typeOf.number.greaterThanOrEquals(\"drawCommand.count\", count, 0);\n  }\n  Check.typeOf.number.greaterThanOrEquals(\n    \"drawCommand.instanceCount\",\n    instanceCount,\n    0\n  );\n  if (instanceCount > 0 && !context.instancedArrays) {\n    throw new DeveloperError(\"Instanced arrays extension is not supported\");\n  }\n  //>>includeEnd('debug');\n\n  context._us.model = defaultValue(drawCommand._modelMatrix, Matrix4.IDENTITY);\n  shaderProgram._setUniforms(\n    uniformMap,\n    context._us,\n    context.validateShaderProgram\n  );\n\n  va._bind();\n  const indexBuffer = va.indexBuffer;\n\n  if (defined(indexBuffer)) {\n    offset = offset * indexBuffer.bytesPerIndex; // offset in vertices to offset in bytes\n    count = defaultValue(count, indexBuffer.numberOfIndices);\n    if (instanceCount === 0) {\n      context._gl.drawElements(\n        primitiveType,\n        count,\n        indexBuffer.indexDatatype,\n        offset\n      );\n    } else {\n      context.glDrawElementsInstanced(\n        primitiveType,\n        count,\n        indexBuffer.indexDatatype,\n        offset,\n        instanceCount\n      );\n    }\n  } else {\n    count = defaultValue(count, va.numberOfVertices);\n    if (instanceCount === 0) {\n      context._gl.drawArrays(primitiveType, offset, count);\n    } else {\n      context.glDrawArraysInstanced(\n        primitiveType,\n        offset,\n        count,\n        instanceCount\n      );\n    }\n  }\n\n  va._unBind();\n}\n\nContext.prototype.draw = function (\n  drawCommand,\n  passState,\n  shaderProgram,\n  uniformMap\n) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"drawCommand\", drawCommand);\n  Check.defined(\"drawCommand.shaderProgram\", drawCommand._shaderProgram);\n  //>>includeEnd('debug');\n\n  passState = defaultValue(passState, this._defaultPassState);\n  // The command's framebuffer takes presidence over the pass' framebuffer, e.g., for off-screen rendering.\n  const framebuffer = defaultValue(\n    drawCommand._framebuffer,\n    passState.framebuffer\n  );\n  const renderState = defaultValue(\n    drawCommand._renderState,\n    this._defaultRenderState\n  );\n  shaderProgram = defaultValue(shaderProgram, drawCommand._shaderProgram);\n  uniformMap = defaultValue(uniformMap, drawCommand._uniformMap);\n\n  beginDraw(this, framebuffer, passState, shaderProgram, renderState);\n  continueDraw(this, drawCommand, shaderProgram, uniformMap);\n};\n\nContext.prototype.endFrame = function () {\n  const gl = this._gl;\n  gl.useProgram(null);\n\n  this._currentFramebuffer = undefined;\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n  const buffers = scratchBackBufferArray;\n  if (this.drawBuffers) {\n    this.glDrawBuffers(buffers);\n  }\n\n  const length = this._maxFrameTextureUnitIndex;\n  this._maxFrameTextureUnitIndex = 0;\n\n  for (let i = 0; i < length; ++i) {\n    gl.activeTexture(gl.TEXTURE0 + i);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindTexture(gl.TEXTURE_CUBE_MAP, null);\n  }\n};\n\nContext.prototype.readPixels = function (readState) {\n  const gl = this._gl;\n\n  readState = defaultValue(readState, defaultValue.EMPTY_OBJECT);\n  const x = Math.max(defaultValue(readState.x, 0), 0);\n  const y = Math.max(defaultValue(readState.y, 0), 0);\n  const width = defaultValue(readState.width, gl.drawingBufferWidth);\n  const height = defaultValue(readState.height, gl.drawingBufferHeight);\n  const framebuffer = readState.framebuffer;\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.number.greaterThan(\"readState.width\", width, 0);\n  Check.typeOf.number.greaterThan(\"readState.height\", height, 0);\n  //>>includeEnd('debug');\n\n  let pixelDatatype = PixelDatatype.UNSIGNED_BYTE;\n  if (defined(framebuffer) && framebuffer.numberOfColorAttachments > 0) {\n    pixelDatatype = framebuffer.getColorTexture(0).pixelDatatype;\n  }\n\n  const pixels = PixelFormat.createTypedArray(\n    PixelFormat.RGBA,\n    pixelDatatype,\n    width,\n    height\n  );\n\n  bindFramebuffer(this, framebuffer);\n\n  gl.readPixels(\n    x,\n    y,\n    width,\n    height,\n    PixelFormat.RGBA,\n    PixelDatatype.toWebGLConstant(pixelDatatype, this),\n    pixels\n  );\n\n  return pixels;\n};\n\nconst viewportQuadAttributeLocations = {\n  position: 0,\n  textureCoordinates: 1,\n};\n\nContext.prototype.getViewportQuadVertexArray = function () {\n  // Per-context cache for viewport quads\n  let vertexArray = this.cache.viewportQuad_vertexArray;\n\n  if (!defined(vertexArray)) {\n    const geometry = new Geometry({\n      attributes: {\n        position: new GeometryAttribute({\n          componentDatatype: ComponentDatatype.FLOAT,\n          componentsPerAttribute: 2,\n          values: [-1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0],\n        }),\n\n        textureCoordinates: new GeometryAttribute({\n          componentDatatype: ComponentDatatype.FLOAT,\n          componentsPerAttribute: 2,\n          values: [0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0],\n        }),\n      },\n      // Workaround Internet Explorer 11.0.8 lack of TRIANGLE_FAN\n      indices: new Uint16Array([0, 1, 2, 0, 2, 3]),\n      primitiveType: PrimitiveType.TRIANGLES,\n    });\n\n    vertexArray = VertexArray.fromGeometry({\n      context: this,\n      geometry: geometry,\n      attributeLocations: viewportQuadAttributeLocations,\n      bufferUsage: BufferUsage.STATIC_DRAW,\n      interleave: true,\n    });\n\n    this.cache.viewportQuad_vertexArray = vertexArray;\n  }\n\n  return vertexArray;\n};\n\nContext.prototype.createViewportQuadCommand = function (\n  fragmentShaderSource,\n  overrides\n) {\n  overrides = defaultValue(overrides, defaultValue.EMPTY_OBJECT);\n\n  return new DrawCommand({\n    vertexArray: this.getViewportQuadVertexArray(),\n    primitiveType: PrimitiveType.TRIANGLES,\n    renderState: overrides.renderState,\n    shaderProgram: ShaderProgram.fromCache({\n      context: this,\n      vertexShaderSource: ViewportQuadVS,\n      fragmentShaderSource: fragmentShaderSource,\n      attributeLocations: viewportQuadAttributeLocations,\n    }),\n    uniformMap: overrides.uniformMap,\n    owner: overrides.owner,\n    framebuffer: overrides.framebuffer,\n    pass: overrides.pass,\n  });\n};\n\n/**\n * Gets the object associated with a pick color.\n *\n * @param {Color} pickColor The pick color.\n * @returns {Object} The object associated with the pick color, or undefined if no object is associated with that color.\n *\n * @example\n * const object = context.getObjectByPickColor(pickColor);\n *\n * @see Context#createPickId\n */\nContext.prototype.getObjectByPickColor = function (pickColor) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"pickColor\", pickColor);\n  //>>includeEnd('debug');\n\n  return this._pickObjects[pickColor.toRgba()];\n};\n\nfunction PickId(pickObjects, key, color) {\n  this._pickObjects = pickObjects;\n  this.key = key;\n  this.color = color;\n}\n\nObject.defineProperties(PickId.prototype, {\n  object: {\n    get: function () {\n      return this._pickObjects[this.key];\n    },\n    set: function (value) {\n      this._pickObjects[this.key] = value;\n    },\n  },\n});\n\nPickId.prototype.destroy = function () {\n  delete this._pickObjects[this.key];\n  return undefined;\n};\n\n/**\n * Creates a unique ID associated with the input object for use with color-buffer picking.\n * The ID has an RGBA color value unique to this context.  You must call destroy()\n * on the pick ID when destroying the input object.\n *\n * @param {Object} object The object to associate with the pick ID.\n * @returns {Object} A PickId object with a <code>color</code> property.\n *\n * @exception {RuntimeError} Out of unique Pick IDs.\n *\n *\n * @example\n * this._pickId = context.createPickId({\n *   primitive : this,\n *   id : this.id\n * });\n *\n * @see Context#getObjectByPickColor\n */\nContext.prototype.createPickId = function (object) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"object\", object);\n  //>>includeEnd('debug');\n\n  // the increment and assignment have to be separate statements to\n  // actually detect overflow in the Uint32 value\n  ++this._nextPickColor[0];\n  const key = this._nextPickColor[0];\n  if (key === 0) {\n    // In case of overflow\n    throw new RuntimeError(\"Out of unique Pick IDs.\");\n  }\n\n  this._pickObjects[key] = object;\n  return new PickId(this._pickObjects, key, Color.fromRgba(key));\n};\n\nContext.prototype.isDestroyed = function () {\n  return false;\n};\n\nContext.prototype.destroy = function () {\n  // Destroy all objects in the cache that have a destroy method.\n  const cache = this.cache;\n  for (const property in cache) {\n    if (cache.hasOwnProperty(property)) {\n      const propertyValue = cache[property];\n      if (defined(propertyValue.destroy)) {\n        propertyValue.destroy();\n      }\n    }\n  }\n\n  this._shaderCache = this._shaderCache.destroy();\n  this._textureCache = this._textureCache.destroy();\n  this._defaultTexture = this._defaultTexture && this._defaultTexture.destroy();\n  this._defaultEmissiveTexture =\n    this._defaultEmissiveTexture && this._defaultEmissiveTexture.destroy();\n  this._defaultNormalTexture =\n    this._defaultNormalTexture && this._defaultNormalTexture.destroy();\n  this._defaultCubeMap = this._defaultCubeMap && this._defaultCubeMap.destroy();\n\n  return destroyObject(this);\n};\nexport default Context;\n","/**\n * @private\n */\nconst ContextLimits = {\n  _maximumCombinedTextureImageUnits: 0,\n  _maximumCubeMapSize: 0,\n  _maximumFragmentUniformVectors: 0,\n  _maximumTextureImageUnits: 0,\n  _maximumRenderbufferSize: 0,\n  _maximumTextureSize: 0,\n  _maximumVaryingVectors: 0,\n  _maximumVertexAttributes: 0,\n  _maximumVertexTextureImageUnits: 0,\n  _maximumVertexUniformVectors: 0,\n  _minimumAliasedLineWidth: 0,\n  _maximumAliasedLineWidth: 0,\n  _minimumAliasedPointSize: 0,\n  _maximumAliasedPointSize: 0,\n  _maximumViewportWidth: 0,\n  _maximumViewportHeight: 0,\n  _maximumTextureFilterAnisotropy: 0,\n  _maximumDrawBuffers: 0,\n  _maximumColorAttachments: 0,\n  _maximumSamples: 0,\n  _highpFloatSupported: false,\n  _highpIntSupported: false,\n};\n\nObject.defineProperties(ContextLimits, {\n  /**\n   * The maximum number of texture units that can be used from the vertex and fragment\n   * shader with this WebGL implementation.  The minimum is eight.  If both shaders access the\n   * same texture unit, this counts as two texture units.\n   * @memberof ContextLimits\n   * @type {Number}\n   * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glGet.xml|glGet} with <code>MAX_COMBINED_TEXTURE_IMAGE_UNITS</code>.\n   */\n  maximumCombinedTextureImageUnits: {\n    get: function () {\n      return ContextLimits._maximumCombinedTextureImageUnits;\n    },\n  },\n\n  /**\n   * The approximate maximum cube mape width and height supported by this WebGL implementation.\n   * The minimum is 16, but most desktop and laptop implementations will support much larger sizes like 8,192.\n   * @memberof ContextLimits\n   * @type {Number}\n   * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glGet.xml|glGet} with <code>MAX_CUBE_MAP_TEXTURE_SIZE</code>.\n   */\n  maximumCubeMapSize: {\n    get: function () {\n      return ContextLimits._maximumCubeMapSize;\n    },\n  },\n\n  /**\n   * The maximum number of <code>vec4</code>, <code>ivec4</code>, and <code>bvec4</code>\n   * uniforms that can be used by a fragment shader with this WebGL implementation.  The minimum is 16.\n   * @memberof ContextLimits\n   * @type {Number}\n   * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glGet.xml|glGet} with <code>MAX_FRAGMENT_UNIFORM_VECTORS</code>.\n   */\n  maximumFragmentUniformVectors: {\n    get: function () {\n      return ContextLimits._maximumFragmentUniformVectors;\n    },\n  },\n\n  /**\n   * The maximum number of texture units that can be used from the fragment shader with this WebGL implementation.  The minimum is eight.\n   * @memberof ContextLimits\n   * @type {Number}\n   * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glGet.xml|glGet} with <code>MAX_TEXTURE_IMAGE_UNITS</code>.\n   */\n  maximumTextureImageUnits: {\n    get: function () {\n      return ContextLimits._maximumTextureImageUnits;\n    },\n  },\n\n  /**\n   * The maximum renderbuffer width and height supported by this WebGL implementation.\n   * The minimum is 16, but most desktop and laptop implementations will support much larger sizes like 8,192.\n   * @memberof ContextLimits\n   * @type {Number}\n   * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glGet.xml|glGet} with <code>MAX_RENDERBUFFER_SIZE</code>.\n   */\n  maximumRenderbufferSize: {\n    get: function () {\n      return ContextLimits._maximumRenderbufferSize;\n    },\n  },\n\n  /**\n   * The approximate maximum texture width and height supported by this WebGL implementation.\n   * The minimum is 64, but most desktop and laptop implementations will support much larger sizes like 8,192.\n   * @memberof ContextLimits\n   * @type {Number}\n   * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glGet.xml|glGet} with <code>MAX_TEXTURE_SIZE</code>.\n   */\n  maximumTextureSize: {\n    get: function () {\n      return ContextLimits._maximumTextureSize;\n    },\n  },\n\n  /**\n   * The maximum number of <code>vec4</code> varying variables supported by this WebGL implementation.\n   * The minimum is eight.  Matrices and arrays count as multiple <code>vec4</code>s.\n   * @memberof ContextLimits\n   * @type {Number}\n   * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glGet.xml|glGet} with <code>MAX_VARYING_VECTORS</code>.\n   */\n  maximumVaryingVectors: {\n    get: function () {\n      return ContextLimits._maximumVaryingVectors;\n    },\n  },\n\n  /**\n   * The maximum number of <code>vec4</code> vertex attributes supported by this WebGL implementation.  The minimum is eight.\n   * @memberof ContextLimits\n   * @type {Number}\n   * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glGet.xml|glGet} with <code>MAX_VERTEX_ATTRIBS</code>.\n   */\n  maximumVertexAttributes: {\n    get: function () {\n      return ContextLimits._maximumVertexAttributes;\n    },\n  },\n\n  /**\n   * The maximum number of texture units that can be used from the vertex shader with this WebGL implementation.\n   * The minimum is zero, which means the GL does not support vertex texture fetch.\n   * @memberof ContextLimits\n   * @type {Number}\n   * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glGet.xml|glGet} with <code>MAX_VERTEX_TEXTURE_IMAGE_UNITS</code>.\n   */\n  maximumVertexTextureImageUnits: {\n    get: function () {\n      return ContextLimits._maximumVertexTextureImageUnits;\n    },\n  },\n\n  /**\n   * The maximum number of <code>vec4</code>, <code>ivec4</code>, and <code>bvec4</code>\n   * uniforms that can be used by a vertex shader with this WebGL implementation.  The minimum is 16.\n   * @memberof ContextLimits\n   * @type {Number}\n   * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glGet.xml|glGet} with <code>MAX_VERTEX_UNIFORM_VECTORS</code>.\n   */\n  maximumVertexUniformVectors: {\n    get: function () {\n      return ContextLimits._maximumVertexUniformVectors;\n    },\n  },\n\n  /**\n   * The minimum aliased line width, in pixels, supported by this WebGL implementation.  It will be at most one.\n   * @memberof ContextLimits\n   * @type {Number}\n   * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glGet.xml|glGet} with <code>ALIASED_LINE_WIDTH_RANGE</code>.\n   */\n  minimumAliasedLineWidth: {\n    get: function () {\n      return ContextLimits._minimumAliasedLineWidth;\n    },\n  },\n\n  /**\n   * The maximum aliased line width, in pixels, supported by this WebGL implementation.  It will be at least one.\n   * @memberof ContextLimits\n   * @type {Number}\n   * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glGet.xml|glGet} with <code>ALIASED_LINE_WIDTH_RANGE</code>.\n   */\n  maximumAliasedLineWidth: {\n    get: function () {\n      return ContextLimits._maximumAliasedLineWidth;\n    },\n  },\n\n  /**\n   * The minimum aliased point size, in pixels, supported by this WebGL implementation.  It will be at most one.\n   * @memberof ContextLimits\n   * @type {Number}\n   * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glGet.xml|glGet} with <code>ALIASED_POINT_SIZE_RANGE</code>.\n   */\n  minimumAliasedPointSize: {\n    get: function () {\n      return ContextLimits._minimumAliasedPointSize;\n    },\n  },\n\n  /**\n   * The maximum aliased point size, in pixels, supported by this WebGL implementation.  It will be at least one.\n   * @memberof ContextLimits\n   * @type {Number}\n   * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glGet.xml|glGet} with <code>ALIASED_POINT_SIZE_RANGE</code>.\n   */\n  maximumAliasedPointSize: {\n    get: function () {\n      return ContextLimits._maximumAliasedPointSize;\n    },\n  },\n\n  /**\n   * The maximum supported width of the viewport.  It will be at least as large as the visible width of the associated canvas.\n   * @memberof ContextLimits\n   * @type {Number}\n   * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glGet.xml|glGet} with <code>MAX_VIEWPORT_DIMS</code>.\n   */\n  maximumViewportWidth: {\n    get: function () {\n      return ContextLimits._maximumViewportWidth;\n    },\n  },\n\n  /**\n   * The maximum supported height of the viewport.  It will be at least as large as the visible height of the associated canvas.\n   * @memberof ContextLimits\n   * @type {Number}\n   * @see {@link https://www.khronos.org/opengles/sdk/docs/man/xhtml/glGet.xml|glGet} with <code>MAX_VIEWPORT_DIMS</code>.\n   */\n  maximumViewportHeight: {\n    get: function () {\n      return ContextLimits._maximumViewportHeight;\n    },\n  },\n\n  /**\n   * The maximum degree of anisotropy for texture filtering\n   * @memberof ContextLimits\n   * @type {Number}\n   */\n  maximumTextureFilterAnisotropy: {\n    get: function () {\n      return ContextLimits._maximumTextureFilterAnisotropy;\n    },\n  },\n\n  /**\n   * The maximum number of simultaneous outputs that may be written in a fragment shader.\n   * @memberof ContextLimits\n   * @type {Number}\n   */\n  maximumDrawBuffers: {\n    get: function () {\n      return ContextLimits._maximumDrawBuffers;\n    },\n  },\n\n  /**\n   * The maximum number of color attachments supported.\n   * @memberof ContextLimits\n   * @type {Number}\n   */\n  maximumColorAttachments: {\n    get: function () {\n      return ContextLimits._maximumColorAttachments;\n    },\n  },\n\n  /**\n   * The maximum number of samples supported for multisampling.\n   * @memberof ContextLimits\n   * @type {Number}\n   */\n  maximumSamples: {\n    get: function () {\n      return ContextLimits._maximumSamples;\n    },\n  },\n\n  /**\n   * High precision float supported (<code>highp</code>) in fragment shaders.\n   * @memberof ContextLimits\n   * @type {Boolean}\n   */\n  highpFloatSupported: {\n    get: function () {\n      return ContextLimits._highpFloatSupported;\n    },\n  },\n\n  /**\n   * High precision int supported (<code>highp</code>) in fragment shaders.\n   * @memberof ContextLimits\n   * @type {Boolean}\n   */\n  highpIntSupported: {\n    get: function () {\n      return ContextLimits._highpIntSupported;\n    },\n  },\n});\nexport default ContextLimits;\n","import Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport CesiumMath from \"../Core/Math.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\nimport ContextLimits from \"./ContextLimits.js\";\nimport CubeMapFace from \"./CubeMapFace.js\";\nimport MipmapHint from \"./MipmapHint.js\";\nimport PixelDatatype from \"./PixelDatatype.js\";\nimport Sampler from \"./Sampler.js\";\nimport TextureMagnificationFilter from \"./TextureMagnificationFilter.js\";\nimport TextureMinificationFilter from \"./TextureMinificationFilter.js\";\n\n/**\n * @private\n */\nfunction CubeMap(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"options.context\", options.context);\n  //>>includeEnd('debug');\n\n  const context = options.context;\n  const source = options.source;\n  let width;\n  let height;\n\n  if (defined(source)) {\n    const faces = [\n      source.positiveX,\n      source.negativeX,\n      source.positiveY,\n      source.negativeY,\n      source.positiveZ,\n      source.negativeZ,\n    ];\n\n    //>>includeStart('debug', pragmas.debug);\n    if (\n      !faces[0] ||\n      !faces[1] ||\n      !faces[2] ||\n      !faces[3] ||\n      !faces[4] ||\n      !faces[5]\n    ) {\n      throw new DeveloperError(\n        \"options.source requires positiveX, negativeX, positiveY, negativeY, positiveZ, and negativeZ faces.\"\n      );\n    }\n    //>>includeEnd('debug');\n\n    width = faces[0].width;\n    height = faces[0].height;\n\n    //>>includeStart('debug', pragmas.debug);\n    for (let i = 1; i < 6; ++i) {\n      if (\n        Number(faces[i].width) !== width ||\n        Number(faces[i].height) !== height\n      ) {\n        throw new DeveloperError(\n          \"Each face in options.source must have the same width and height.\"\n        );\n      }\n    }\n    //>>includeEnd('debug');\n  } else {\n    width = options.width;\n    height = options.height;\n  }\n\n  const size = width;\n  const pixelDatatype = defaultValue(\n    options.pixelDatatype,\n    PixelDatatype.UNSIGNED_BYTE\n  );\n  const pixelFormat = defaultValue(options.pixelFormat, PixelFormat.RGBA);\n  const internalFormat = PixelFormat.toInternalFormat(\n    pixelFormat,\n    pixelDatatype,\n    context\n  );\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(width) || !defined(height)) {\n    throw new DeveloperError(\n      \"options requires a source field to create an initialized cube map or width and height fields to create a blank cube map.\"\n    );\n  }\n\n  if (width !== height) {\n    throw new DeveloperError(\"Width must equal height.\");\n  }\n\n  if (size <= 0) {\n    throw new DeveloperError(\"Width and height must be greater than zero.\");\n  }\n\n  if (size > ContextLimits.maximumCubeMapSize) {\n    throw new DeveloperError(\n      `Width and height must be less than or equal to the maximum cube map size (${ContextLimits.maximumCubeMapSize}).  Check maximumCubeMapSize.`\n    );\n  }\n\n  if (!PixelFormat.validate(pixelFormat)) {\n    throw new DeveloperError(\"Invalid options.pixelFormat.\");\n  }\n\n  if (PixelFormat.isDepthFormat(pixelFormat)) {\n    throw new DeveloperError(\n      \"options.pixelFormat cannot be DEPTH_COMPONENT or DEPTH_STENCIL.\"\n    );\n  }\n\n  if (!PixelDatatype.validate(pixelDatatype)) {\n    throw new DeveloperError(\"Invalid options.pixelDatatype.\");\n  }\n\n  if (pixelDatatype === PixelDatatype.FLOAT && !context.floatingPointTexture) {\n    throw new DeveloperError(\n      \"When options.pixelDatatype is FLOAT, this WebGL implementation must support the OES_texture_float extension.\"\n    );\n  }\n\n  if (\n    pixelDatatype === PixelDatatype.HALF_FLOAT &&\n    !context.halfFloatingPointTexture\n  ) {\n    throw new DeveloperError(\n      \"When options.pixelDatatype is HALF_FLOAT, this WebGL implementation must support the OES_texture_half_float extension.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  const sizeInBytes =\n    PixelFormat.textureSizeInBytes(pixelFormat, pixelDatatype, size, size) * 6;\n\n  // Use premultiplied alpha for opaque textures should perform better on Chrome:\n  // http://media.tojicode.com/webglCamp4/#20\n  const preMultiplyAlpha =\n    options.preMultiplyAlpha ||\n    pixelFormat === PixelFormat.RGB ||\n    pixelFormat === PixelFormat.LUMINANCE;\n  const flipY = defaultValue(options.flipY, true);\n  const skipColorSpaceConversion = defaultValue(\n    options.skipColorSpaceConversion,\n    false\n  );\n\n  const gl = context._gl;\n  const textureTarget = gl.TEXTURE_CUBE_MAP;\n  const texture = gl.createTexture();\n\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(textureTarget, texture);\n\n  function createFace(\n    target,\n    sourceFace,\n    preMultiplyAlpha,\n    flipY,\n    skipColorSpaceConversion\n  ) {\n    let arrayBufferView = sourceFace.arrayBufferView;\n    if (!defined(arrayBufferView)) {\n      arrayBufferView = sourceFace.bufferView;\n    }\n\n    let unpackAlignment = 4;\n    if (defined(arrayBufferView)) {\n      unpackAlignment = PixelFormat.alignmentInBytes(\n        pixelFormat,\n        pixelDatatype,\n        width\n      );\n    }\n\n    gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\n\n    if (skipColorSpaceConversion) {\n      gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, gl.NONE);\n    } else {\n      gl.pixelStorei(\n        gl.UNPACK_COLORSPACE_CONVERSION_WEBGL,\n        gl.BROWSER_DEFAULT_WEBGL\n      );\n    }\n\n    if (defined(arrayBufferView)) {\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n      if (flipY) {\n        arrayBufferView = PixelFormat.flipY(\n          arrayBufferView,\n          pixelFormat,\n          pixelDatatype,\n          size,\n          size\n        );\n      }\n      gl.texImage2D(\n        target,\n        0,\n        internalFormat,\n        size,\n        size,\n        0,\n        pixelFormat,\n        PixelDatatype.toWebGLConstant(pixelDatatype, context),\n        arrayBufferView\n      );\n    } else {\n      // Only valid for DOM-Element uploads\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, preMultiplyAlpha);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\n\n      // Source: ImageData, HTMLImageElement, HTMLCanvasElement, or HTMLVideoElement\n      gl.texImage2D(\n        target,\n        0,\n        internalFormat,\n        pixelFormat,\n        PixelDatatype.toWebGLConstant(pixelDatatype, context),\n        sourceFace\n      );\n    }\n  }\n\n  if (defined(source)) {\n    createFace(\n      gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n      source.positiveX,\n      preMultiplyAlpha,\n      flipY,\n      skipColorSpaceConversion\n    );\n    createFace(\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n      source.negativeX,\n      preMultiplyAlpha,\n      flipY,\n      skipColorSpaceConversion\n    );\n    createFace(\n      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n      source.positiveY,\n      preMultiplyAlpha,\n      flipY,\n      skipColorSpaceConversion\n    );\n    createFace(\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n      source.negativeY,\n      preMultiplyAlpha,\n      flipY,\n      skipColorSpaceConversion\n    );\n    createFace(\n      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n      source.positiveZ,\n      preMultiplyAlpha,\n      flipY,\n      skipColorSpaceConversion\n    );\n    createFace(\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n      source.negativeZ,\n      preMultiplyAlpha,\n      flipY,\n      skipColorSpaceConversion\n    );\n  } else {\n    gl.texImage2D(\n      gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n      0,\n      internalFormat,\n      size,\n      size,\n      0,\n      pixelFormat,\n      PixelDatatype.toWebGLConstant(pixelDatatype, context),\n      null\n    );\n    gl.texImage2D(\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n      0,\n      internalFormat,\n      size,\n      size,\n      0,\n      pixelFormat,\n      PixelDatatype.toWebGLConstant(pixelDatatype, context),\n      null\n    );\n    gl.texImage2D(\n      gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n      0,\n      internalFormat,\n      size,\n      size,\n      0,\n      pixelFormat,\n      PixelDatatype.toWebGLConstant(pixelDatatype, context),\n      null\n    );\n    gl.texImage2D(\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n      0,\n      internalFormat,\n      size,\n      size,\n      0,\n      pixelFormat,\n      PixelDatatype.toWebGLConstant(pixelDatatype, context),\n      null\n    );\n    gl.texImage2D(\n      gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n      0,\n      internalFormat,\n      size,\n      size,\n      0,\n      pixelFormat,\n      PixelDatatype.toWebGLConstant(pixelDatatype, context),\n      null\n    );\n    gl.texImage2D(\n      gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n      0,\n      internalFormat,\n      size,\n      size,\n      0,\n      pixelFormat,\n      PixelDatatype.toWebGLConstant(pixelDatatype, context),\n      null\n    );\n  }\n  gl.bindTexture(textureTarget, null);\n\n  this._context = context;\n  this._textureFilterAnisotropic = context._textureFilterAnisotropic;\n  this._textureTarget = textureTarget;\n  this._texture = texture;\n  this._pixelFormat = pixelFormat;\n  this._pixelDatatype = pixelDatatype;\n  this._size = size;\n  this._hasMipmap = false;\n  this._sizeInBytes = sizeInBytes;\n  this._preMultiplyAlpha = preMultiplyAlpha;\n  this._flipY = flipY;\n  this._sampler = undefined;\n\n  const initialized = defined(source);\n  this._positiveX = new CubeMapFace(\n    context,\n    texture,\n    textureTarget,\n    gl.TEXTURE_CUBE_MAP_POSITIVE_X,\n    internalFormat,\n    pixelFormat,\n    pixelDatatype,\n    size,\n    preMultiplyAlpha,\n    flipY,\n    initialized\n  );\n  this._negativeX = new CubeMapFace(\n    context,\n    texture,\n    textureTarget,\n    gl.TEXTURE_CUBE_MAP_NEGATIVE_X,\n    internalFormat,\n    pixelFormat,\n    pixelDatatype,\n    size,\n    preMultiplyAlpha,\n    flipY,\n    initialized\n  );\n  this._positiveY = new CubeMapFace(\n    context,\n    texture,\n    textureTarget,\n    gl.TEXTURE_CUBE_MAP_POSITIVE_Y,\n    internalFormat,\n    pixelFormat,\n    pixelDatatype,\n    size,\n    preMultiplyAlpha,\n    flipY,\n    initialized\n  );\n  this._negativeY = new CubeMapFace(\n    context,\n    texture,\n    textureTarget,\n    gl.TEXTURE_CUBE_MAP_NEGATIVE_Y,\n    internalFormat,\n    pixelFormat,\n    pixelDatatype,\n    size,\n    preMultiplyAlpha,\n    flipY,\n    initialized\n  );\n  this._positiveZ = new CubeMapFace(\n    context,\n    texture,\n    textureTarget,\n    gl.TEXTURE_CUBE_MAP_POSITIVE_Z,\n    internalFormat,\n    pixelFormat,\n    pixelDatatype,\n    size,\n    preMultiplyAlpha,\n    flipY,\n    initialized\n  );\n  this._negativeZ = new CubeMapFace(\n    context,\n    texture,\n    textureTarget,\n    gl.TEXTURE_CUBE_MAP_NEGATIVE_Z,\n    internalFormat,\n    pixelFormat,\n    pixelDatatype,\n    size,\n    preMultiplyAlpha,\n    flipY,\n    initialized\n  );\n\n  this.sampler = defined(options.sampler) ? options.sampler : new Sampler();\n}\n\nObject.defineProperties(CubeMap.prototype, {\n  positiveX: {\n    get: function () {\n      return this._positiveX;\n    },\n  },\n  negativeX: {\n    get: function () {\n      return this._negativeX;\n    },\n  },\n  positiveY: {\n    get: function () {\n      return this._positiveY;\n    },\n  },\n  negativeY: {\n    get: function () {\n      return this._negativeY;\n    },\n  },\n  positiveZ: {\n    get: function () {\n      return this._positiveZ;\n    },\n  },\n  negativeZ: {\n    get: function () {\n      return this._negativeZ;\n    },\n  },\n  sampler: {\n    get: function () {\n      return this._sampler;\n    },\n    set: function (sampler) {\n      let minificationFilter = sampler.minificationFilter;\n      let magnificationFilter = sampler.magnificationFilter;\n\n      const mipmap =\n        minificationFilter ===\n          TextureMinificationFilter.NEAREST_MIPMAP_NEAREST ||\n        minificationFilter ===\n          TextureMinificationFilter.NEAREST_MIPMAP_LINEAR ||\n        minificationFilter ===\n          TextureMinificationFilter.LINEAR_MIPMAP_NEAREST ||\n        minificationFilter === TextureMinificationFilter.LINEAR_MIPMAP_LINEAR;\n\n      const context = this._context;\n      const pixelDatatype = this._pixelDatatype;\n\n      // float textures only support nearest filtering unless the linear extensions are supported, so override the sampler's settings\n      if (\n        (pixelDatatype === PixelDatatype.FLOAT &&\n          !context.textureFloatLinear) ||\n        (pixelDatatype === PixelDatatype.HALF_FLOAT &&\n          !context.textureHalfFloatLinear)\n      ) {\n        minificationFilter = mipmap\n          ? TextureMinificationFilter.NEAREST_MIPMAP_NEAREST\n          : TextureMinificationFilter.NEAREST;\n        magnificationFilter = TextureMagnificationFilter.NEAREST;\n      }\n\n      const gl = context._gl;\n      const target = this._textureTarget;\n\n      gl.activeTexture(gl.TEXTURE0);\n      gl.bindTexture(target, this._texture);\n      gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, minificationFilter);\n      gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, magnificationFilter);\n      gl.texParameteri(target, gl.TEXTURE_WRAP_S, sampler.wrapS);\n      gl.texParameteri(target, gl.TEXTURE_WRAP_T, sampler.wrapT);\n      if (defined(this._textureFilterAnisotropic)) {\n        gl.texParameteri(\n          target,\n          this._textureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT,\n          sampler.maximumAnisotropy\n        );\n      }\n      gl.bindTexture(target, null);\n\n      this._sampler = sampler;\n    },\n  },\n  pixelFormat: {\n    get: function () {\n      return this._pixelFormat;\n    },\n  },\n  pixelDatatype: {\n    get: function () {\n      return this._pixelDatatype;\n    },\n  },\n  width: {\n    get: function () {\n      return this._size;\n    },\n  },\n  height: {\n    get: function () {\n      return this._size;\n    },\n  },\n  sizeInBytes: {\n    get: function () {\n      if (this._hasMipmap) {\n        return Math.floor((this._sizeInBytes * 4) / 3);\n      }\n      return this._sizeInBytes;\n    },\n  },\n  preMultiplyAlpha: {\n    get: function () {\n      return this._preMultiplyAlpha;\n    },\n  },\n  flipY: {\n    get: function () {\n      return this._flipY;\n    },\n  },\n\n  _target: {\n    get: function () {\n      return this._textureTarget;\n    },\n  },\n});\n\n/**\n * Generates a complete mipmap chain for each cubemap face.\n *\n * @param {MipmapHint} [hint=MipmapHint.DONT_CARE] A performance vs. quality hint.\n *\n * @exception {DeveloperError} hint is invalid.\n * @exception {DeveloperError} This CubeMap's width must be a power of two to call generateMipmap().\n * @exception {DeveloperError} This CubeMap's height must be a power of two to call generateMipmap().\n * @exception {DeveloperError} This CubeMap was destroyed, i.e., destroy() was called.\n *\n * @example\n * // Generate mipmaps, and then set the sampler so mipmaps are used for\n * // minification when the cube map is sampled.\n * cubeMap.generateMipmap();\n * cubeMap.sampler = new Sampler({\n *   minificationFilter : Cesium.TextureMinificationFilter.NEAREST_MIPMAP_LINEAR\n * });\n */\nCubeMap.prototype.generateMipmap = function (hint) {\n  hint = defaultValue(hint, MipmapHint.DONT_CARE);\n\n  //>>includeStart('debug', pragmas.debug);\n  if (this._size > 1 && !CesiumMath.isPowerOfTwo(this._size)) {\n    throw new DeveloperError(\n      \"width and height must be a power of two to call generateMipmap().\"\n    );\n  }\n  if (!MipmapHint.validate(hint)) {\n    throw new DeveloperError(\"hint is invalid.\");\n  }\n  //>>includeEnd('debug');\n\n  this._hasMipmap = true;\n\n  const gl = this._context._gl;\n  const target = this._textureTarget;\n  gl.hint(gl.GENERATE_MIPMAP_HINT, hint);\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(target, this._texture);\n  gl.generateMipmap(target);\n  gl.bindTexture(target, null);\n};\n\nCubeMap.prototype.isDestroyed = function () {\n  return false;\n};\n\nCubeMap.prototype.destroy = function () {\n  this._context._gl.deleteTexture(this._texture);\n  this._positiveX = destroyObject(this._positiveX);\n  this._negativeX = destroyObject(this._negativeX);\n  this._positiveY = destroyObject(this._positiveY);\n  this._negativeY = destroyObject(this._negativeY);\n  this._positiveZ = destroyObject(this._positiveZ);\n  this._negativeZ = destroyObject(this._negativeZ);\n  return destroyObject(this);\n};\nexport default CubeMap;\n","import Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\nimport PixelDatatype from \"./PixelDatatype.js\";\n\n/**\n * @private\n */\nfunction CubeMapFace(\n  context,\n  texture,\n  textureTarget,\n  targetFace,\n  internalFormat,\n  pixelFormat,\n  pixelDatatype,\n  size,\n  preMultiplyAlpha,\n  flipY,\n  initialized\n) {\n  this._context = context;\n  this._texture = texture;\n  this._textureTarget = textureTarget;\n  this._targetFace = targetFace;\n  this._pixelDatatype = pixelDatatype;\n  this._internalFormat = internalFormat;\n  this._pixelFormat = pixelFormat;\n  this._size = size;\n  this._preMultiplyAlpha = preMultiplyAlpha;\n  this._flipY = flipY;\n  this._initialized = initialized;\n}\n\nObject.defineProperties(CubeMapFace.prototype, {\n  pixelFormat: {\n    get: function () {\n      return this._pixelFormat;\n    },\n  },\n  pixelDatatype: {\n    get: function () {\n      return this._pixelDatatype;\n    },\n  },\n  _target: {\n    get: function () {\n      return this._targetFace;\n    },\n  },\n});\n\n/**\n * Copies texels from the source to the cubemap's face.\n * @param {Object} options Object with the following properties:\n * @param {Object} options.source The source {@link ImageData}, {@link HTMLImageElement}, {@link HTMLCanvasElement}, {@link HTMLVideoElement},\n *                              or an object with a width, height, and arrayBufferView properties.\n * @param {Number} [options.xOffset=0] An offset in the x direction in the cubemap where copying begins.\n * @param {Number} [options.yOffset=0] An offset in the y direction in the cubemap where copying begins.\n * @param {Boolean} [options.skipColorSpaceConversion=false] If true, any custom gamma or color profiles in the texture will be ignored.\n * @exception {DeveloperError} xOffset must be greater than or equal to zero.\n * @exception {DeveloperError} yOffset must be greater than or equal to zero.\n * @exception {DeveloperError} xOffset + source.width must be less than or equal to width.\n * @exception {DeveloperError} yOffset + source.height must be less than or equal to height.\n * @exception {DeveloperError} This CubeMap was destroyed, i.e., destroy() was called.\n *\n * @example\n * // Create a cubemap with 1x1 faces, and make the +x face red.\n * const cubeMap = new CubeMap({\n *   context : context\n *   width : 1,\n *   height : 1\n * });\n * cubeMap.positiveX.copyFrom({\n *   source: {\n *     width : 1,\n *     height : 1,\n *     arrayBufferView : new Uint8Array([255, 0, 0, 255])\n *   }\n * });\n */\nCubeMapFace.prototype.copyFrom = function (options) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"options\", options);\n  //>>includeEnd('debug');\n\n  const xOffset = defaultValue(options.xOffset, 0);\n  const yOffset = defaultValue(options.yOffset, 0);\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"options.source\", options.source);\n  Check.typeOf.number.greaterThanOrEquals(\"xOffset\", xOffset, 0);\n  Check.typeOf.number.greaterThanOrEquals(\"yOffset\", yOffset, 0);\n  if (xOffset + options.source.width > this._size) {\n    throw new DeveloperError(\n      \"xOffset + options.source.width must be less than or equal to width.\"\n    );\n  }\n  if (yOffset + options.source.height > this._size) {\n    throw new DeveloperError(\n      \"yOffset + options.source.height must be less than or equal to height.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  const source = options.source;\n\n  const gl = this._context._gl;\n  const target = this._textureTarget;\n  const targetFace = this._targetFace;\n\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(target, this._texture);\n\n  const width = source.width;\n  const height = source.height;\n  let arrayBufferView = source.arrayBufferView;\n\n  const size = this._size;\n  const pixelFormat = this._pixelFormat;\n  const internalFormat = this._internalFormat;\n  const pixelDatatype = this._pixelDatatype;\n\n  const preMultiplyAlpha = this._preMultiplyAlpha;\n  const flipY = this._flipY;\n  const skipColorSpaceConversion = defaultValue(\n    options.skipColorSpaceConversion,\n    false\n  );\n\n  let unpackAlignment = 4;\n  if (defined(arrayBufferView)) {\n    unpackAlignment = PixelFormat.alignmentInBytes(\n      pixelFormat,\n      pixelDatatype,\n      width\n    );\n  }\n\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\n\n  if (skipColorSpaceConversion) {\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, gl.NONE);\n  } else {\n    gl.pixelStorei(\n      gl.UNPACK_COLORSPACE_CONVERSION_WEBGL,\n      gl.BROWSER_DEFAULT_WEBGL\n    );\n  }\n\n  let uploaded = false;\n  if (!this._initialized) {\n    if (xOffset === 0 && yOffset === 0 && width === size && height === size) {\n      // initialize the entire texture\n      if (defined(arrayBufferView)) {\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n        if (flipY) {\n          arrayBufferView = PixelFormat.flipY(\n            arrayBufferView,\n            pixelFormat,\n            pixelDatatype,\n            size,\n            size\n          );\n        }\n        gl.texImage2D(\n          targetFace,\n          0,\n          internalFormat,\n          size,\n          size,\n          0,\n          pixelFormat,\n          PixelDatatype.toWebGLConstant(pixelDatatype, this._context),\n          arrayBufferView\n        );\n      } else {\n        // Only valid for DOM-Element uploads\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, preMultiplyAlpha);\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\n\n        gl.texImage2D(\n          targetFace,\n          0,\n          internalFormat,\n          pixelFormat,\n          PixelDatatype.toWebGLConstant(pixelDatatype, this._context),\n          source\n        );\n      }\n      uploaded = true;\n    } else {\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n      // initialize the entire texture to zero\n      const bufferView = PixelFormat.createTypedArray(\n        pixelFormat,\n        pixelDatatype,\n        size,\n        size\n      );\n      gl.texImage2D(\n        targetFace,\n        0,\n        internalFormat,\n        size,\n        size,\n        0,\n        pixelFormat,\n        PixelDatatype.toWebGLConstant(pixelDatatype, this._context),\n        bufferView\n      );\n    }\n    this._initialized = true;\n  }\n\n  if (!uploaded) {\n    if (defined(arrayBufferView)) {\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n      if (flipY) {\n        arrayBufferView = PixelFormat.flipY(\n          arrayBufferView,\n          pixelFormat,\n          pixelDatatype,\n          width,\n          height\n        );\n      }\n      gl.texSubImage2D(\n        targetFace,\n        0,\n        xOffset,\n        yOffset,\n        width,\n        height,\n        pixelFormat,\n        PixelDatatype.toWebGLConstant(pixelDatatype, this._context),\n        arrayBufferView\n      );\n    } else {\n      // Only valid for DOM-Element uploads\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, preMultiplyAlpha);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\n\n      // Source: ImageData, HTMLImageElement, HTMLCanvasElement, or HTMLVideoElement\n      gl.texSubImage2D(\n        targetFace,\n        0,\n        xOffset,\n        yOffset,\n        pixelFormat,\n        PixelDatatype.toWebGLConstant(pixelDatatype, this._context),\n        source\n      );\n    }\n  }\n\n  gl.bindTexture(target, null);\n};\n\n/**\n * Copies texels from the framebuffer to the cubemap's face.\n *\n * @param {Number} [xOffset=0] An offset in the x direction in the cubemap where copying begins.\n * @param {Number} [yOffset=0] An offset in the y direction in the cubemap where copying begins.\n * @param {Number} [framebufferXOffset=0] An offset in the x direction in the framebuffer where copying begins from.\n * @param {Number} [framebufferYOffset=0] An offset in the y direction in the framebuffer where copying begins from.\n * @param {Number} [width=CubeMap's width] The width of the subimage to copy.\n * @param {Number} [height=CubeMap's height] The height of the subimage to copy.\n *\n * @exception {DeveloperError} Cannot call copyFromFramebuffer when the texture pixel data type is FLOAT.\n * @exception {DeveloperError} Cannot call copyFromFramebuffer when the texture pixel data type is HALF_FLOAT.\n * @exception {DeveloperError} This CubeMap was destroyed, i.e., destroy() was called.\n * @exception {DeveloperError} xOffset must be greater than or equal to zero.\n * @exception {DeveloperError} yOffset must be greater than or equal to zero.\n * @exception {DeveloperError} framebufferXOffset must be greater than or equal to zero.\n * @exception {DeveloperError} framebufferYOffset must be greater than or equal to zero.\n * @exception {DeveloperError} xOffset + source.width must be less than or equal to width.\n * @exception {DeveloperError} yOffset + source.height must be less than or equal to height.\n * @exception {DeveloperError} This CubeMap was destroyed, i.e., destroy() was called.\n *\n * @example\n * // Copy the framebuffer contents to the +x cube map face.\n * cubeMap.positiveX.copyFromFramebuffer();\n */\nCubeMapFace.prototype.copyFromFramebuffer = function (\n  xOffset,\n  yOffset,\n  framebufferXOffset,\n  framebufferYOffset,\n  width,\n  height\n) {\n  xOffset = defaultValue(xOffset, 0);\n  yOffset = defaultValue(yOffset, 0);\n  framebufferXOffset = defaultValue(framebufferXOffset, 0);\n  framebufferYOffset = defaultValue(framebufferYOffset, 0);\n  width = defaultValue(width, this._size);\n  height = defaultValue(height, this._size);\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.number.greaterThanOrEquals(\"xOffset\", xOffset, 0);\n  Check.typeOf.number.greaterThanOrEquals(\"yOffset\", yOffset, 0);\n  Check.typeOf.number.greaterThanOrEquals(\n    \"framebufferXOffset\",\n    framebufferXOffset,\n    0\n  );\n  Check.typeOf.number.greaterThanOrEquals(\n    \"framebufferYOffset\",\n    framebufferYOffset,\n    0\n  );\n  if (xOffset + width > this._size) {\n    throw new DeveloperError(\n      \"xOffset + source.width must be less than or equal to width.\"\n    );\n  }\n  if (yOffset + height > this._size) {\n    throw new DeveloperError(\n      \"yOffset + source.height must be less than or equal to height.\"\n    );\n  }\n  if (this._pixelDatatype === PixelDatatype.FLOAT) {\n    throw new DeveloperError(\n      \"Cannot call copyFromFramebuffer when the texture pixel data type is FLOAT.\"\n    );\n  }\n  if (this._pixelDatatype === PixelDatatype.HALF_FLOAT) {\n    throw new DeveloperError(\n      \"Cannot call copyFromFramebuffer when the texture pixel data type is HALF_FLOAT.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  const gl = this._context._gl;\n  const target = this._textureTarget;\n\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(target, this._texture);\n  gl.copyTexSubImage2D(\n    this._targetFace,\n    0,\n    xOffset,\n    yOffset,\n    framebufferXOffset,\n    framebufferYOffset,\n    width,\n    height\n  );\n  gl.bindTexture(target, null);\n  this._initialized = true;\n};\nexport default CubeMapFace;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport PrimitiveType from \"../Core/PrimitiveType.js\";\n\nconst Flags = {\n  CULL: 1,\n  OCCLUDE: 2,\n  EXECUTE_IN_CLOSEST_FRUSTUM: 4,\n  DEBUG_SHOW_BOUNDING_VOLUME: 8,\n  CAST_SHADOWS: 16,\n  RECEIVE_SHADOWS: 32,\n  PICK_ONLY: 64,\n  DEPTH_FOR_TRANSLUCENT_CLASSIFICATION: 128,\n};\n\n/**\n * Represents a command to the renderer for drawing.\n *\n * @private\n */\nfunction DrawCommand(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  this._boundingVolume = options.boundingVolume;\n  this._orientedBoundingBox = options.orientedBoundingBox;\n  this._modelMatrix = options.modelMatrix;\n  this._primitiveType = defaultValue(\n    options.primitiveType,\n    PrimitiveType.TRIANGLES\n  );\n  this._vertexArray = options.vertexArray;\n  this._count = options.count;\n  this._offset = defaultValue(options.offset, 0);\n  this._instanceCount = defaultValue(options.instanceCount, 0);\n  this._shaderProgram = options.shaderProgram;\n  this._uniformMap = options.uniformMap;\n  this._renderState = options.renderState;\n  this._framebuffer = options.framebuffer;\n  this._pass = options.pass;\n  this._owner = options.owner;\n  this._debugOverlappingFrustums = 0;\n  this._pickId = options.pickId;\n\n  // Set initial flags.\n  this._flags = 0;\n  this.cull = defaultValue(options.cull, true);\n  this.occlude = defaultValue(options.occlude, true);\n  this.executeInClosestFrustum = defaultValue(\n    options.executeInClosestFrustum,\n    false\n  );\n  this.debugShowBoundingVolume = defaultValue(\n    options.debugShowBoundingVolume,\n    false\n  );\n  this.castShadows = defaultValue(options.castShadows, false);\n  this.receiveShadows = defaultValue(options.receiveShadows, false);\n  this.pickOnly = defaultValue(options.pickOnly, false);\n  this.depthForTranslucentClassification = defaultValue(\n    options.depthForTranslucentClassification,\n    false\n  );\n\n  this.dirty = true;\n  this.lastDirtyTime = 0;\n\n  /**\n   * @private\n   */\n  this.derivedCommands = {};\n}\n\nfunction hasFlag(command, flag) {\n  return (command._flags & flag) === flag;\n}\n\nfunction setFlag(command, flag, value) {\n  if (value) {\n    command._flags |= flag;\n  } else {\n    command._flags &= ~flag;\n  }\n}\n\nObject.defineProperties(DrawCommand.prototype, {\n  /**\n   * The bounding volume of the geometry in world space.  This is used for culling and frustum selection.\n   * <p>\n   * For best rendering performance, use the tightest possible bounding volume.  Although\n   * <code>undefined</code> is allowed, always try to provide a bounding volume to\n   * allow the tightest possible near and far planes to be computed for the scene, and\n   * minimize the number of frustums needed.\n   * </p>\n   *\n   * @memberof DrawCommand.prototype\n   * @type {Object}\n   * @default undefined\n   *\n   * @see DrawCommand#debugShowBoundingVolume\n   */\n  boundingVolume: {\n    get: function () {\n      return this._boundingVolume;\n    },\n    set: function (value) {\n      if (this._boundingVolume !== value) {\n        this._boundingVolume = value;\n        this.dirty = true;\n      }\n    },\n  },\n\n  /**\n   * The oriented bounding box of the geometry in world space. If this is defined, it is used instead of\n   * {@link DrawCommand#boundingVolume} for plane intersection testing.\n   *\n   * @memberof DrawCommand.prototype\n   * @type {OrientedBoundingBox}\n   * @default undefined\n   *\n   * @see DrawCommand#debugShowBoundingVolume\n   */\n  orientedBoundingBox: {\n    get: function () {\n      return this._orientedBoundingBox;\n    },\n    set: function (value) {\n      if (this._orientedBoundingBox !== value) {\n        this._orientedBoundingBox = value;\n        this.dirty = true;\n      }\n    },\n  },\n\n  /**\n   * When <code>true</code>, the renderer frustum and horizon culls the command based on its {@link DrawCommand#boundingVolume}.\n   * If the command was already culled, set this to <code>false</code> for a performance improvement.\n   *\n   * @memberof DrawCommand.prototype\n   * @type {Boolean}\n   * @default true\n   */\n  cull: {\n    get: function () {\n      return hasFlag(this, Flags.CULL);\n    },\n    set: function (value) {\n      if (hasFlag(this, Flags.CULL) !== value) {\n        setFlag(this, Flags.CULL, value);\n        this.dirty = true;\n      }\n    },\n  },\n\n  /**\n   * When <code>true</code>, the horizon culls the command based on its {@link DrawCommand#boundingVolume}.\n   * {@link DrawCommand#cull} must also be <code>true</code> in order for the command to be culled.\n   *\n   * @memberof DrawCommand.prototype\n   * @type {Boolean}\n   * @default true\n   */\n  occlude: {\n    get: function () {\n      return hasFlag(this, Flags.OCCLUDE);\n    },\n    set: function (value) {\n      if (hasFlag(this, Flags.OCCLUDE) !== value) {\n        setFlag(this, Flags.OCCLUDE, value);\n        this.dirty = true;\n      }\n    },\n  },\n\n  /**\n   * The transformation from the geometry in model space to world space.\n   * <p>\n   * When <code>undefined</code>, the geometry is assumed to be defined in world space.\n   * </p>\n   *\n   * @memberof DrawCommand.prototype\n   * @type {Matrix4}\n   * @default undefined\n   */\n  modelMatrix: {\n    get: function () {\n      return this._modelMatrix;\n    },\n    set: function (value) {\n      if (this._modelMatrix !== value) {\n        this._modelMatrix = value;\n        this.dirty = true;\n      }\n    },\n  },\n\n  /**\n   * The type of geometry in the vertex array.\n   *\n   * @memberof DrawCommand.prototype\n   * @type {PrimitiveType}\n   * @default PrimitiveType.TRIANGLES\n   */\n  primitiveType: {\n    get: function () {\n      return this._primitiveType;\n    },\n    set: function (value) {\n      if (this._primitiveType !== value) {\n        this._primitiveType = value;\n        this.dirty = true;\n      }\n    },\n  },\n\n  /**\n   * The vertex array.\n   *\n   * @memberof DrawCommand.prototype\n   * @type {VertexArray}\n   * @default undefined\n   */\n  vertexArray: {\n    get: function () {\n      return this._vertexArray;\n    },\n    set: function (value) {\n      if (this._vertexArray !== value) {\n        this._vertexArray = value;\n        this.dirty = true;\n      }\n    },\n  },\n\n  /**\n   * The number of vertices to draw in the vertex array.\n   *\n   * @memberof DrawCommand.prototype\n   * @type {Number}\n   * @default undefined\n   */\n  count: {\n    get: function () {\n      return this._count;\n    },\n    set: function (value) {\n      if (this._count !== value) {\n        this._count = value;\n        this.dirty = true;\n      }\n    },\n  },\n\n  /**\n   * The offset to start drawing in the vertex array.\n   *\n   * @memberof DrawCommand.prototype\n   * @type {Number}\n   * @default 0\n   */\n  offset: {\n    get: function () {\n      return this._offset;\n    },\n    set: function (value) {\n      if (this._offset !== value) {\n        this._offset = value;\n        this.dirty = true;\n      }\n    },\n  },\n\n  /**\n   * The number of instances to draw.\n   *\n   * @memberof DrawCommand.prototype\n   * @type {Number}\n   * @default 0\n   */\n  instanceCount: {\n    get: function () {\n      return this._instanceCount;\n    },\n    set: function (value) {\n      if (this._instanceCount !== value) {\n        this._instanceCount = value;\n        this.dirty = true;\n      }\n    },\n  },\n\n  /**\n   * The shader program to apply.\n   *\n   * @memberof DrawCommand.prototype\n   * @type {ShaderProgram}\n   * @default undefined\n   */\n  shaderProgram: {\n    get: function () {\n      return this._shaderProgram;\n    },\n    set: function (value) {\n      if (this._shaderProgram !== value) {\n        this._shaderProgram = value;\n        this.dirty = true;\n      }\n    },\n  },\n\n  /**\n   * Whether this command should cast shadows when shadowing is enabled.\n   *\n   * @memberof DrawCommand.prototype\n   * @type {Boolean}\n   * @default false\n   */\n  castShadows: {\n    get: function () {\n      return hasFlag(this, Flags.CAST_SHADOWS);\n    },\n    set: function (value) {\n      if (hasFlag(this, Flags.CAST_SHADOWS) !== value) {\n        setFlag(this, Flags.CAST_SHADOWS, value);\n        this.dirty = true;\n      }\n    },\n  },\n\n  /**\n   * Whether this command should receive shadows when shadowing is enabled.\n   *\n   * @memberof DrawCommand.prototype\n   * @type {Boolean}\n   * @default false\n   */\n  receiveShadows: {\n    get: function () {\n      return hasFlag(this, Flags.RECEIVE_SHADOWS);\n    },\n    set: function (value) {\n      if (hasFlag(this, Flags.RECEIVE_SHADOWS) !== value) {\n        setFlag(this, Flags.RECEIVE_SHADOWS, value);\n        this.dirty = true;\n      }\n    },\n  },\n\n  /**\n   * An object with functions whose names match the uniforms in the shader program\n   * and return values to set those uniforms.\n   *\n   * @memberof DrawCommand.prototype\n   * @type {Object}\n   * @default undefined\n   */\n  uniformMap: {\n    get: function () {\n      return this._uniformMap;\n    },\n    set: function (value) {\n      if (this._uniformMap !== value) {\n        this._uniformMap = value;\n        this.dirty = true;\n      }\n    },\n  },\n\n  /**\n   * The render state.\n   *\n   * @memberof DrawCommand.prototype\n   * @type {RenderState}\n   * @default undefined\n   */\n  renderState: {\n    get: function () {\n      return this._renderState;\n    },\n    set: function (value) {\n      if (this._renderState !== value) {\n        this._renderState = value;\n        this.dirty = true;\n      }\n    },\n  },\n\n  /**\n   * The framebuffer to draw to.\n   *\n   * @memberof DrawCommand.prototype\n   * @type {Framebuffer}\n   * @default undefined\n   */\n  framebuffer: {\n    get: function () {\n      return this._framebuffer;\n    },\n    set: function (value) {\n      if (this._framebuffer !== value) {\n        this._framebuffer = value;\n        this.dirty = true;\n      }\n    },\n  },\n\n  /**\n   * The pass when to render.\n   *\n   * @memberof DrawCommand.prototype\n   * @type {Pass}\n   * @default undefined\n   */\n  pass: {\n    get: function () {\n      return this._pass;\n    },\n    set: function (value) {\n      if (this._pass !== value) {\n        this._pass = value;\n        this.dirty = true;\n      }\n    },\n  },\n\n  /**\n   * Specifies if this command is only to be executed in the frustum closest\n   * to the eye containing the bounding volume. Defaults to <code>false</code>.\n   *\n   * @memberof DrawCommand.prototype\n   * @type {Boolean}\n   * @default false\n   */\n  executeInClosestFrustum: {\n    get: function () {\n      return hasFlag(this, Flags.EXECUTE_IN_CLOSEST_FRUSTUM);\n    },\n    set: function (value) {\n      if (hasFlag(this, Flags.EXECUTE_IN_CLOSEST_FRUSTUM) !== value) {\n        setFlag(this, Flags.EXECUTE_IN_CLOSEST_FRUSTUM, value);\n        this.dirty = true;\n      }\n    },\n  },\n\n  /**\n   * The object who created this command.  This is useful for debugging command\n   * execution; it allows us to see who created a command when we only have a\n   * reference to the command, and can be used to selectively execute commands\n   * with {@link Scene#debugCommandFilter}.\n   *\n   * @memberof DrawCommand.prototype\n   * @type {Object}\n   * @default undefined\n   *\n   * @see Scene#debugCommandFilter\n   */\n  owner: {\n    get: function () {\n      return this._owner;\n    },\n    set: function (value) {\n      if (this._owner !== value) {\n        this._owner = value;\n        this.dirty = true;\n      }\n    },\n  },\n\n  /**\n   * This property is for debugging only; it is not for production use nor is it optimized.\n   * <p>\n   * Draws the {@link DrawCommand#boundingVolume} for this command, assuming it is a sphere, when the command executes.\n   * </p>\n   *\n   * @memberof DrawCommand.prototype\n   * @type {Boolean}\n   * @default false\n   *\n   * @see DrawCommand#boundingVolume\n   */\n  debugShowBoundingVolume: {\n    get: function () {\n      return hasFlag(this, Flags.DEBUG_SHOW_BOUNDING_VOLUME);\n    },\n    set: function (value) {\n      if (hasFlag(this, Flags.DEBUG_SHOW_BOUNDING_VOLUME) !== value) {\n        setFlag(this, Flags.DEBUG_SHOW_BOUNDING_VOLUME, value);\n        this.dirty = true;\n      }\n    },\n  },\n\n  /**\n   * Used to implement Scene.debugShowFrustums.\n   * @private\n   */\n  debugOverlappingFrustums: {\n    get: function () {\n      return this._debugOverlappingFrustums;\n    },\n    set: function (value) {\n      if (this._debugOverlappingFrustums !== value) {\n        this._debugOverlappingFrustums = value;\n        this.dirty = true;\n      }\n    },\n  },\n  /**\n   * A GLSL string that will evaluate to a pick id. When <code>undefined</code>, the command will only draw depth\n   * during the pick pass.\n   *\n   * @memberof DrawCommand.prototype\n   * @type {String}\n   * @default undefined\n   */\n  pickId: {\n    get: function () {\n      return this._pickId;\n    },\n    set: function (value) {\n      if (this._pickId !== value) {\n        this._pickId = value;\n        this.dirty = true;\n      }\n    },\n  },\n  /**\n   * Whether this command should be executed in the pick pass only.\n   *\n   * @memberof DrawCommand.prototype\n   * @type {Boolean}\n   * @default false\n   */\n  pickOnly: {\n    get: function () {\n      return hasFlag(this, Flags.PICK_ONLY);\n    },\n    set: function (value) {\n      if (hasFlag(this, Flags.PICK_ONLY) !== value) {\n        setFlag(this, Flags.PICK_ONLY, value);\n        this.dirty = true;\n      }\n    },\n  },\n  /**\n   * Whether this command should be derived to draw depth for classification of translucent primitives.\n   *\n   * @memberof DrawCommand.prototype\n   * @type {Boolean}\n   * @default false\n   */\n  depthForTranslucentClassification: {\n    get: function () {\n      return hasFlag(this, Flags.DEPTH_FOR_TRANSLUCENT_CLASSIFICATION);\n    },\n    set: function (value) {\n      if (hasFlag(this, Flags.DEPTH_FOR_TRANSLUCENT_CLASSIFICATION) !== value) {\n        setFlag(this, Flags.DEPTH_FOR_TRANSLUCENT_CLASSIFICATION, value);\n        this.dirty = true;\n      }\n    },\n  },\n});\n\n/**\n * @private\n */\nDrawCommand.shallowClone = function (command, result) {\n  if (!defined(command)) {\n    return undefined;\n  }\n  if (!defined(result)) {\n    result = new DrawCommand();\n  }\n\n  result._boundingVolume = command._boundingVolume;\n  result._orientedBoundingBox = command._orientedBoundingBox;\n  result._modelMatrix = command._modelMatrix;\n  result._primitiveType = command._primitiveType;\n  result._vertexArray = command._vertexArray;\n  result._count = command._count;\n  result._offset = command._offset;\n  result._instanceCount = command._instanceCount;\n  result._shaderProgram = command._shaderProgram;\n  result._uniformMap = command._uniformMap;\n  result._renderState = command._renderState;\n  result._framebuffer = command._framebuffer;\n  result._pass = command._pass;\n  result._owner = command._owner;\n  result._debugOverlappingFrustums = command._debugOverlappingFrustums;\n  result._pickId = command._pickId;\n  result._flags = command._flags;\n\n  result.dirty = true;\n  result.lastDirtyTime = 0;\n\n  return result;\n};\n\n/**\n * Executes the draw command.\n *\n * @param {Context} context The renderer context in which to draw.\n * @param {PassState} [passState] The state for the current render pass.\n */\nDrawCommand.prototype.execute = function (context, passState) {\n  context.draw(this, passState);\n};\nexport default DrawCommand;\n","import Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\nimport ContextLimits from \"./ContextLimits.js\";\nimport PixelDatatype from \"./PixelDatatype.js\";\n\nfunction attachTexture(framebuffer, attachment, texture) {\n  const gl = framebuffer._gl;\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER,\n    attachment,\n    texture._target,\n    texture._texture,\n    0\n  );\n}\n\nfunction attachRenderbuffer(framebuffer, attachment, renderbuffer) {\n  const gl = framebuffer._gl;\n  gl.framebufferRenderbuffer(\n    gl.FRAMEBUFFER,\n    attachment,\n    gl.RENDERBUFFER,\n    renderbuffer._getRenderbuffer()\n  );\n}\n\n/**\n * Creates a framebuffer with optional initial color, depth, and stencil attachments.\n * Framebuffers are used for render-to-texture effects; they allow us to render to\n * textures in one pass, and read from it in a later pass.\n *\n * @param {Object} options The initial framebuffer attachments as shown in the example below. <code>context</code> is required. The possible properties are <code>colorTextures</code>, <code>colorRenderbuffers</code>, <code>depthTexture</code>, <code>depthRenderbuffer</code>, <code>stencilRenderbuffer</code>, <code>depthStencilTexture</code>, <code>depthStencilRenderbuffer</code>, and <code>destroyAttachments</code>.\n *\n * @exception {DeveloperError} Cannot have both color texture and color renderbuffer attachments.\n * @exception {DeveloperError} Cannot have both a depth texture and depth renderbuffer attachment.\n * @exception {DeveloperError} Cannot have both a depth-stencil texture and depth-stencil renderbuffer attachment.\n * @exception {DeveloperError} Cannot have both a depth and depth-stencil renderbuffer.\n * @exception {DeveloperError} Cannot have both a stencil and depth-stencil renderbuffer.\n * @exception {DeveloperError} Cannot have both a depth and stencil renderbuffer.\n * @exception {DeveloperError} The color-texture pixel-format must be a color format.\n * @exception {DeveloperError} The depth-texture pixel-format must be DEPTH_COMPONENT.\n * @exception {DeveloperError} The depth-stencil-texture pixel-format must be DEPTH_STENCIL.\n * @exception {DeveloperError} The number of color attachments exceeds the number supported.\n * @exception {DeveloperError} The color-texture pixel datatype is HALF_FLOAT and the WebGL implementation does not support the EXT_color_buffer_half_float extension.\n * @exception {DeveloperError} The color-texture pixel datatype is FLOAT and the WebGL implementation does not support the EXT_color_buffer_float or WEBGL_color_buffer_float extensions.\n *\n * @example\n * // Create a framebuffer with color and depth texture attachments.\n * const width = context.canvas.clientWidth;\n * const height = context.canvas.clientHeight;\n * const framebuffer = new Framebuffer({\n *   context : context,\n *   colorTextures : [new Texture({\n *     context : context,\n *     width : width,\n *     height : height,\n *     pixelFormat : PixelFormat.RGBA\n *   })],\n *   depthTexture : new Texture({\n *     context : context,\n *     width : width,\n *     height : height,\n *     pixelFormat : PixelFormat.DEPTH_COMPONENT,\n *     pixelDatatype : PixelDatatype.UNSIGNED_SHORT\n *   })\n * });\n *\n * @private\n * @constructor\n */\nfunction Framebuffer(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  const context = options.context;\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"options.context\", context);\n  //>>includeEnd('debug');\n\n  const gl = context._gl;\n  const maximumColorAttachments = ContextLimits.maximumColorAttachments;\n\n  this._gl = gl;\n  this._framebuffer = gl.createFramebuffer();\n\n  this._colorTextures = [];\n  this._colorRenderbuffers = [];\n  this._activeColorAttachments = [];\n\n  this._depthTexture = undefined;\n  this._depthRenderbuffer = undefined;\n  this._stencilRenderbuffer = undefined;\n  this._depthStencilTexture = undefined;\n  this._depthStencilRenderbuffer = undefined;\n\n  /**\n   * When true, the framebuffer owns its attachments so they will be destroyed when\n   * {@link Framebuffer#destroy} is called or when a new attachment is assigned\n   * to an attachment point.\n   *\n   * @type {Boolean}\n   * @default true\n   *\n   * @see Framebuffer#destroy\n   */\n  this.destroyAttachments = defaultValue(options.destroyAttachments, true);\n\n  // Throw if a texture and renderbuffer are attached to the same point.  This won't\n  // cause a WebGL error (because only one will be attached), but is likely a developer error.\n\n  //>>includeStart('debug', pragmas.debug);\n  if (defined(options.colorTextures) && defined(options.colorRenderbuffers)) {\n    throw new DeveloperError(\n      \"Cannot have both color texture and color renderbuffer attachments.\"\n    );\n  }\n  if (defined(options.depthTexture) && defined(options.depthRenderbuffer)) {\n    throw new DeveloperError(\n      \"Cannot have both a depth texture and depth renderbuffer attachment.\"\n    );\n  }\n  if (\n    defined(options.depthStencilTexture) &&\n    defined(options.depthStencilRenderbuffer)\n  ) {\n    throw new DeveloperError(\n      \"Cannot have both a depth-stencil texture and depth-stencil renderbuffer attachment.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  // Avoid errors defined in Section 6.5 of the WebGL spec\n  const depthAttachment =\n    defined(options.depthTexture) || defined(options.depthRenderbuffer);\n  const depthStencilAttachment =\n    defined(options.depthStencilTexture) ||\n    defined(options.depthStencilRenderbuffer);\n\n  //>>includeStart('debug', pragmas.debug);\n  if (depthAttachment && depthStencilAttachment) {\n    throw new DeveloperError(\n      \"Cannot have both a depth and depth-stencil attachment.\"\n    );\n  }\n  if (defined(options.stencilRenderbuffer) && depthStencilAttachment) {\n    throw new DeveloperError(\n      \"Cannot have both a stencil and depth-stencil attachment.\"\n    );\n  }\n  if (depthAttachment && defined(options.stencilRenderbuffer)) {\n    throw new DeveloperError(\n      \"Cannot have both a depth and stencil attachment.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  ///////////////////////////////////////////////////////////////////\n\n  this._bind();\n\n  let texture;\n  let renderbuffer;\n  let i;\n  let length;\n  let attachmentEnum;\n\n  if (defined(options.colorTextures)) {\n    const textures = options.colorTextures;\n    length = this._colorTextures.length = this._activeColorAttachments.length =\n      textures.length;\n\n    //>>includeStart('debug', pragmas.debug);\n    if (length > maximumColorAttachments) {\n      throw new DeveloperError(\n        \"The number of color attachments exceeds the number supported.\"\n      );\n    }\n    //>>includeEnd('debug');\n\n    for (i = 0; i < length; ++i) {\n      texture = textures[i];\n\n      //>>includeStart('debug', pragmas.debug);\n      if (!PixelFormat.isColorFormat(texture.pixelFormat)) {\n        throw new DeveloperError(\n          \"The color-texture pixel-format must be a color format.\"\n        );\n      }\n      if (\n        texture.pixelDatatype === PixelDatatype.FLOAT &&\n        !context.colorBufferFloat\n      ) {\n        throw new DeveloperError(\n          \"The color texture pixel datatype is FLOAT and the WebGL implementation does not support the EXT_color_buffer_float or WEBGL_color_buffer_float extensions. See Context.colorBufferFloat.\"\n        );\n      }\n      if (\n        texture.pixelDatatype === PixelDatatype.HALF_FLOAT &&\n        !context.colorBufferHalfFloat\n      ) {\n        throw new DeveloperError(\n          \"The color texture pixel datatype is HALF_FLOAT and the WebGL implementation does not support the EXT_color_buffer_half_float extension. See Context.colorBufferHalfFloat.\"\n        );\n      }\n      //>>includeEnd('debug');\n\n      attachmentEnum = this._gl.COLOR_ATTACHMENT0 + i;\n      attachTexture(this, attachmentEnum, texture);\n      this._activeColorAttachments[i] = attachmentEnum;\n      this._colorTextures[i] = texture;\n    }\n  }\n\n  if (defined(options.colorRenderbuffers)) {\n    const renderbuffers = options.colorRenderbuffers;\n    length = this._colorRenderbuffers.length = this._activeColorAttachments.length =\n      renderbuffers.length;\n\n    //>>includeStart('debug', pragmas.debug);\n    if (length > maximumColorAttachments) {\n      throw new DeveloperError(\n        \"The number of color attachments exceeds the number supported.\"\n      );\n    }\n    //>>includeEnd('debug');\n\n    for (i = 0; i < length; ++i) {\n      renderbuffer = renderbuffers[i];\n      attachmentEnum = this._gl.COLOR_ATTACHMENT0 + i;\n      attachRenderbuffer(this, attachmentEnum, renderbuffer);\n      this._activeColorAttachments[i] = attachmentEnum;\n      this._colorRenderbuffers[i] = renderbuffer;\n    }\n  }\n\n  if (defined(options.depthTexture)) {\n    texture = options.depthTexture;\n\n    //>>includeStart('debug', pragmas.debug);\n    if (texture.pixelFormat !== PixelFormat.DEPTH_COMPONENT) {\n      throw new DeveloperError(\n        \"The depth-texture pixel-format must be DEPTH_COMPONENT.\"\n      );\n    }\n    //>>includeEnd('debug');\n\n    attachTexture(this, this._gl.DEPTH_ATTACHMENT, texture);\n    this._depthTexture = texture;\n  }\n\n  if (defined(options.depthRenderbuffer)) {\n    renderbuffer = options.depthRenderbuffer;\n    attachRenderbuffer(this, this._gl.DEPTH_ATTACHMENT, renderbuffer);\n    this._depthRenderbuffer = renderbuffer;\n  }\n\n  if (defined(options.stencilRenderbuffer)) {\n    renderbuffer = options.stencilRenderbuffer;\n    attachRenderbuffer(this, this._gl.STENCIL_ATTACHMENT, renderbuffer);\n    this._stencilRenderbuffer = renderbuffer;\n  }\n\n  if (defined(options.depthStencilTexture)) {\n    texture = options.depthStencilTexture;\n\n    //>>includeStart('debug', pragmas.debug);\n    if (texture.pixelFormat !== PixelFormat.DEPTH_STENCIL) {\n      throw new DeveloperError(\n        \"The depth-stencil pixel-format must be DEPTH_STENCIL.\"\n      );\n    }\n    //>>includeEnd('debug');\n\n    attachTexture(this, this._gl.DEPTH_STENCIL_ATTACHMENT, texture);\n    this._depthStencilTexture = texture;\n  }\n\n  if (defined(options.depthStencilRenderbuffer)) {\n    renderbuffer = options.depthStencilRenderbuffer;\n    attachRenderbuffer(this, this._gl.DEPTH_STENCIL_ATTACHMENT, renderbuffer);\n    this._depthStencilRenderbuffer = renderbuffer;\n  }\n\n  this._unBind();\n}\n\nObject.defineProperties(Framebuffer.prototype, {\n  /**\n   * The status of the framebuffer. If the status is not WebGLConstants.FRAMEBUFFER_COMPLETE,\n   * a {@link DeveloperError} will be thrown when attempting to render to the framebuffer.\n   * @memberof Framebuffer.prototype\n   * @type {Number}\n   */\n  status: {\n    get: function () {\n      this._bind();\n      const status = this._gl.checkFramebufferStatus(this._gl.FRAMEBUFFER);\n      this._unBind();\n      return status;\n    },\n  },\n  numberOfColorAttachments: {\n    get: function () {\n      return this._activeColorAttachments.length;\n    },\n  },\n  depthTexture: {\n    get: function () {\n      return this._depthTexture;\n    },\n  },\n  depthRenderbuffer: {\n    get: function () {\n      return this._depthRenderbuffer;\n    },\n  },\n  stencilRenderbuffer: {\n    get: function () {\n      return this._stencilRenderbuffer;\n    },\n  },\n  depthStencilTexture: {\n    get: function () {\n      return this._depthStencilTexture;\n    },\n  },\n  depthStencilRenderbuffer: {\n    get: function () {\n      return this._depthStencilRenderbuffer;\n    },\n  },\n\n  /**\n   * True if the framebuffer has a depth attachment.  Depth attachments include\n   * depth and depth-stencil textures, and depth and depth-stencil renderbuffers.  When\n   * rendering to a framebuffer, a depth attachment is required for the depth test to have effect.\n   * @memberof Framebuffer.prototype\n   * @type {Boolean}\n   */\n  hasDepthAttachment: {\n    get: function () {\n      return !!(\n        this.depthTexture ||\n        this.depthRenderbuffer ||\n        this.depthStencilTexture ||\n        this.depthStencilRenderbuffer\n      );\n    },\n  },\n});\n\nFramebuffer.prototype._bind = function () {\n  const gl = this._gl;\n  gl.bindFramebuffer(gl.FRAMEBUFFER, this._framebuffer);\n};\n\nFramebuffer.prototype._unBind = function () {\n  const gl = this._gl;\n  gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n};\n\nFramebuffer.prototype.bindDraw = function () {\n  const gl = this._gl;\n  gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, this._framebuffer);\n};\n\nFramebuffer.prototype.bindRead = function () {\n  const gl = this._gl;\n  gl.bindFramebuffer(gl.READ_FRAMEBUFFER, this._framebuffer);\n};\n\nFramebuffer.prototype._getActiveColorAttachments = function () {\n  return this._activeColorAttachments;\n};\n\nFramebuffer.prototype.getColorTexture = function (index) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(index) || index < 0 || index >= this._colorTextures.length) {\n    throw new DeveloperError(\n      \"index is required, must be greater than or equal to zero and must be less than the number of color attachments.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  return this._colorTextures[index];\n};\n\nFramebuffer.prototype.getColorRenderbuffer = function (index) {\n  //>>includeStart('debug', pragmas.debug);\n  if (\n    !defined(index) ||\n    index < 0 ||\n    index >= this._colorRenderbuffers.length\n  ) {\n    throw new DeveloperError(\n      \"index is required, must be greater than or equal to zero and must be less than the number of color attachments.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  return this._colorRenderbuffers[index];\n};\n\nFramebuffer.prototype.isDestroyed = function () {\n  return false;\n};\n\nFramebuffer.prototype.destroy = function () {\n  if (this.destroyAttachments) {\n    // If the color texture is a cube map face, it is owned by the cube map, and will not be destroyed.\n    let i = 0;\n    const textures = this._colorTextures;\n    let length = textures.length;\n    for (; i < length; ++i) {\n      const texture = textures[i];\n      if (defined(texture)) {\n        texture.destroy();\n      }\n    }\n\n    const renderbuffers = this._colorRenderbuffers;\n    length = renderbuffers.length;\n    for (i = 0; i < length; ++i) {\n      const renderbuffer = renderbuffers[i];\n      if (defined(renderbuffer)) {\n        renderbuffer.destroy();\n      }\n    }\n\n    this._depthTexture = this._depthTexture && this._depthTexture.destroy();\n    this._depthRenderbuffer =\n      this._depthRenderbuffer && this._depthRenderbuffer.destroy();\n    this._stencilRenderbuffer =\n      this._stencilRenderbuffer && this._stencilRenderbuffer.destroy();\n    this._depthStencilTexture =\n      this._depthStencilTexture && this._depthStencilTexture.destroy();\n    this._depthStencilRenderbuffer =\n      this._depthStencilRenderbuffer &&\n      this._depthStencilRenderbuffer.destroy();\n  }\n\n  this._gl.deleteFramebuffer(this._framebuffer);\n  return destroyObject(this);\n};\nexport default Framebuffer;\n","import Framebuffer from \"./Framebuffer.js\";\nimport MultisampleFramebuffer from \"./MultisampleFramebuffer.js\";\nimport PixelDatatype from \"./PixelDatatype.js\";\nimport Renderbuffer from \"./Renderbuffer.js\";\nimport RenderbufferFormat from \"./RenderbufferFormat.js\";\nimport Sampler from \"./Sampler.js\";\nimport Texture from \"./Texture.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\n\n/**\n * Creates a wrapper object around a framebuffer and its resources.\n *\n * @param {Object} options Object with the following properties:\n * @param {Number} [options.numSamples=1] The multisampling rate of the render targets. Requires a WebGL2 context.\n * @param {Number} [options.colorAttachmentsLength=1] The number of color attachments this FramebufferManager will create.\n * @param {Boolean} [options.color=true] Whether the FramebufferManager will use color attachments.\n * @param {Boolean} [options.depth=false] Whether the FramebufferManager will use depth attachments.\n * @param {Boolean} [options.depthStencil=false] Whether the FramebufferManager will use depth-stencil attachments.\n * @param {Boolean} [options.supportsDepthTexture=false] Whether the FramebufferManager will create a depth texture when the extension is supported.\n * @param {Boolean} [options.createColorAttachments=true] Whether the FramebufferManager will construct its own color attachments.\n * @param {Boolean} [options.createDepthAttachments=true] Whether the FramebufferManager will construct its own depth attachments.\n * @param {PixelDatatype} [options.pixelDatatype=undefined] The default pixel datatype to use when creating color attachments.\n * @param {PixelFormat} [options.pixelFormat=undefined] The default pixel format to use when creating color attachments.\n *\n * @exception {DeveloperError} Must enable at least one type of framebuffer attachment.\n * @exception {DeveloperError} Cannot have both a depth and depth-stencil attachment.\n *\n * @private\n * @constructor\n */\nfunction FramebufferManager(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  this._numSamples = defaultValue(options.numSamples, 1);\n  this._colorAttachmentsLength = defaultValue(\n    options.colorAttachmentsLength,\n    1\n  );\n\n  this._color = defaultValue(options.color, true);\n  this._depth = defaultValue(options.depth, false);\n  this._depthStencil = defaultValue(options.depthStencil, false);\n  this._supportsDepthTexture = defaultValue(\n    options.supportsDepthTexture,\n    false\n  );\n  //>>includeStart('debug', pragmas.debug);\n  if (!this._color && !this._depth && !this._depthStencil) {\n    throw new DeveloperError(\n      \"Must enable at least one type of framebuffer attachment.\"\n    );\n  }\n  if (this._depth && this._depthStencil) {\n    throw new DeveloperError(\n      \"Cannot have both a depth and depth-stencil attachment.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  this._createColorAttachments = defaultValue(\n    options.createColorAttachments,\n    true\n  );\n  this._createDepthAttachments = defaultValue(\n    options.createDepthAttachments,\n    true\n  );\n\n  this._pixelDatatype = options.pixelDatatype;\n  this._pixelFormat = options.pixelFormat;\n\n  this._width = undefined;\n  this._height = undefined;\n\n  this._framebuffer = undefined;\n  this._multisampleFramebuffer = undefined;\n  this._colorTextures = undefined;\n  if (this._color) {\n    this._colorTextures = new Array(this._colorAttachmentsLength);\n    this._colorRenderbuffers = new Array(this._colorAttachmentsLength);\n  }\n  this._colorRenderbuffer = undefined;\n  this._depthStencilRenderbuffer = undefined;\n  this._depthStencilTexture = undefined;\n  this._depthRenderbuffer = undefined;\n  this._depthTexture = undefined;\n\n  this._attachmentsDirty = false;\n}\n\nObject.defineProperties(FramebufferManager.prototype, {\n  framebuffer: {\n    get: function () {\n      if (this._numSamples > 1) {\n        return this._multisampleFramebuffer.getRenderFramebuffer();\n      }\n      return this._framebuffer;\n    },\n  },\n  numSamples: {\n    get: function () {\n      return this._numSamples;\n    },\n  },\n  status: {\n    get: function () {\n      return this.framebuffer.status;\n    },\n  },\n});\n\nFramebufferManager.prototype.isDirty = function (\n  width,\n  height,\n  numSamples,\n  pixelDatatype,\n  pixelFormat\n) {\n  numSamples = defaultValue(numSamples, 1);\n  const dimensionChanged = this._width !== width || this._height !== height;\n  const samplesChanged = this._numSamples !== numSamples;\n  const pixelChanged =\n    (defined(pixelDatatype) && this._pixelDatatype !== pixelDatatype) ||\n    (defined(pixelFormat) && this._pixelFormat !== pixelFormat);\n  const framebufferDefined =\n    numSamples === 1\n      ? defined(this._framebuffer)\n      : defined(this._multisampleFramebuffer);\n\n  return (\n    this._attachmentsDirty ||\n    dimensionChanged ||\n    samplesChanged ||\n    pixelChanged ||\n    !framebufferDefined ||\n    (this._color && !defined(this._colorTextures[0]))\n  );\n};\n\nFramebufferManager.prototype.update = function (\n  context,\n  width,\n  height,\n  numSamples,\n  pixelDatatype,\n  pixelFormat\n) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(width) || !defined(height)) {\n    throw new DeveloperError(\"width and height must be defined.\");\n  }\n  //>>includeEnd('debug');\n  numSamples = context.msaa ? defaultValue(numSamples, 1) : 1;\n  pixelDatatype = defaultValue(\n    pixelDatatype,\n    this._color\n      ? defaultValue(this._pixelDatatype, PixelDatatype.UNSIGNED_BYTE)\n      : undefined\n  );\n  pixelFormat = defaultValue(\n    pixelFormat,\n    this._color ? defaultValue(this._pixelFormat, PixelFormat.RGBA) : undefined\n  );\n\n  if (this.isDirty(width, height, numSamples, pixelDatatype, pixelFormat)) {\n    this.destroy();\n    this._width = width;\n    this._height = height;\n    this._numSamples = numSamples;\n    this._pixelDatatype = pixelDatatype;\n    this._pixelFormat = pixelFormat;\n    this._attachmentsDirty = false;\n\n    // Create color texture\n    if (this._color && this._createColorAttachments) {\n      for (let i = 0; i < this._colorAttachmentsLength; ++i) {\n        this._colorTextures[i] = new Texture({\n          context: context,\n          width: width,\n          height: height,\n          pixelFormat: pixelFormat,\n          pixelDatatype: pixelDatatype,\n          sampler: Sampler.NEAREST,\n        });\n        if (this._numSamples > 1) {\n          const format = RenderbufferFormat.getColorFormat(pixelDatatype);\n          this._colorRenderbuffers[i] = new Renderbuffer({\n            context: context,\n            width: width,\n            height: height,\n            format: format,\n            numSamples: this._numSamples,\n          });\n        }\n      }\n    }\n\n    // Create depth stencil texture or renderbuffer\n    if (this._depthStencil && this._createDepthAttachments) {\n      if (this._supportsDepthTexture && context.depthTexture) {\n        this._depthStencilTexture = new Texture({\n          context: context,\n          width: width,\n          height: height,\n          pixelFormat: PixelFormat.DEPTH_STENCIL,\n          pixelDatatype: PixelDatatype.UNSIGNED_INT_24_8,\n          sampler: Sampler.NEAREST,\n        });\n        if (this._numSamples > 1) {\n          this._depthStencilRenderbuffer = new Renderbuffer({\n            context: context,\n            width: width,\n            height: height,\n            format: RenderbufferFormat.DEPTH24_STENCIL8,\n            numSamples: this._numSamples,\n          });\n        }\n      } else {\n        this._depthStencilRenderbuffer = new Renderbuffer({\n          context: context,\n          width: width,\n          height: height,\n          format: RenderbufferFormat.DEPTH_STENCIL,\n        });\n      }\n    }\n\n    // Create depth texture\n    if (this._depth && this._createDepthAttachments) {\n      if (this._supportsDepthTexture && context.depthTexture) {\n        this._depthTexture = new Texture({\n          context: context,\n          width: width,\n          height: height,\n          pixelFormat: PixelFormat.DEPTH_COMPONENT,\n          pixelDatatype: PixelDatatype.UNSIGNED_INT,\n          sampler: Sampler.NEAREST,\n        });\n      } else {\n        this._depthRenderbuffer = new Renderbuffer({\n          context: context,\n          width: width,\n          height: height,\n          format: RenderbufferFormat.DEPTH_COMPONENT16,\n        });\n      }\n    }\n\n    if (this._numSamples > 1) {\n      this._multisampleFramebuffer = new MultisampleFramebuffer({\n        context: context,\n        width: this._width,\n        height: this._height,\n        colorTextures: this._colorTextures,\n        colorRenderbuffers: this._colorRenderbuffers,\n        depthStencilTexture: this._depthStencilTexture,\n        depthStencilRenderbuffer: this._depthStencilRenderbuffer,\n        destroyAttachments: false,\n      });\n    } else {\n      this._framebuffer = new Framebuffer({\n        context: context,\n        colorTextures: this._colorTextures,\n        depthTexture: this._depthTexture,\n        depthRenderbuffer: this._depthRenderbuffer,\n        depthStencilTexture: this._depthStencilTexture,\n        depthStencilRenderbuffer: this._depthStencilRenderbuffer,\n        destroyAttachments: false,\n      });\n    }\n  }\n};\n\nFramebufferManager.prototype.getColorTexture = function (index) {\n  index = defaultValue(index, 0);\n  //>>includeStart('debug', pragmas.debug);\n  if (index >= this._colorAttachmentsLength) {\n    throw new DeveloperError(\n      \"index must be smaller than total number of color attachments.\"\n    );\n  }\n  //>>includeEnd('debug');\n  return this._colorTextures[index];\n};\n\nFramebufferManager.prototype.setColorTexture = function (texture, index) {\n  index = defaultValue(index, 0);\n  //>>includeStart('debug', pragmas.debug);\n  if (this._createColorAttachments) {\n    throw new DeveloperError(\n      \"createColorAttachments must be false if setColorTexture is called.\"\n    );\n  }\n  if (index >= this._colorAttachmentsLength) {\n    throw new DeveloperError(\n      \"index must be smaller than total number of color attachments.\"\n    );\n  }\n  //>>includeEnd('debug');\n  this._attachmentsDirty = texture !== this._colorTextures[index];\n  this._colorTextures[index] = texture;\n};\n\nFramebufferManager.prototype.getColorRenderbuffer = function (index) {\n  index = defaultValue(index, 0);\n  //>>includeStart('debug', pragmas.debug);\n  if (index >= this._colorAttachmentsLength) {\n    throw new DeveloperError(\n      \"index must be smaller than total number of color attachments.\"\n    );\n  }\n  //>>includeEnd('debug');\n  return this._colorRenderbuffers[index];\n};\n\nFramebufferManager.prototype.setColorRenderbuffer = function (\n  renderbuffer,\n  index\n) {\n  index = defaultValue(index, 0);\n  //>>includeStart('debug', pragmas.debug);\n  if (this._createColorAttachments) {\n    throw new DeveloperError(\n      \"createColorAttachments must be false if setColorRenderbuffer is called.\"\n    );\n  }\n  if (index >= this._colorAttachmentsLength) {\n    throw new DeveloperError(\n      \"index must be smaller than total number of color attachments.\"\n    );\n  }\n  //>>includeEnd('debug');\n  this._attachmentsDirty = renderbuffer !== this._colorRenderbuffers[index];\n  this._colorRenderbuffers[index] = renderbuffer;\n};\n\nFramebufferManager.prototype.getDepthRenderbuffer = function () {\n  return this._depthRenderbuffer;\n};\n\nFramebufferManager.prototype.setDepthRenderbuffer = function (renderbuffer) {\n  //>>includeStart('debug', pragmas.debug);\n  if (this._createDepthAttachments) {\n    throw new DeveloperError(\n      \"createDepthAttachments must be false if setDepthRenderbuffer is called.\"\n    );\n  }\n  //>>includeEnd('debug');\n  this._attachmentsDirty = renderbuffer !== this._depthRenderbuffer;\n  this._depthRenderbuffer = renderbuffer;\n};\n\nFramebufferManager.prototype.getDepthTexture = function () {\n  return this._depthTexture;\n};\n\nFramebufferManager.prototype.setDepthTexture = function (texture) {\n  //>>includeStart('debug', pragmas.debug);\n  if (this._createDepthAttachments) {\n    throw new DeveloperError(\n      \"createDepthAttachments must be false if setDepthTexture is called.\"\n    );\n  }\n  //>>includeEnd('debug');\n  this._attachmentsDirty = texture !== this._depthTexture;\n  this._depthTexture = texture;\n};\n\nFramebufferManager.prototype.getDepthStencilRenderbuffer = function () {\n  return this._depthStencilRenderbuffer;\n};\n\nFramebufferManager.prototype.setDepthStencilRenderbuffer = function (\n  renderbuffer\n) {\n  //>>includeStart('debug', pragmas.debug);\n  if (this._createDepthAttachments) {\n    throw new DeveloperError(\n      \"createDepthAttachments must be false if setDepthStencilRenderbuffer is called.\"\n    );\n  }\n  //>>includeEnd('debug');\n  this._attachmentsDirty = renderbuffer !== this._depthStencilRenderbuffer;\n  this._depthStencilRenderbuffer = renderbuffer;\n};\n\nFramebufferManager.prototype.getDepthStencilTexture = function () {\n  return this._depthStencilTexture;\n};\n\nFramebufferManager.prototype.setDepthStencilTexture = function (texture) {\n  //>>includeStart('debug', pragmas.debug);\n  if (this._createDepthAttachments) {\n    throw new DeveloperError(\n      \"createDepthAttachments must be false if setDepthStencilTexture is called.\"\n    );\n  }\n  //>>includeEnd('debug');\n  this._attachmentsDirty = texture !== this._depthStencilTexture;\n  this._depthStencilTexture = texture;\n};\n\nFramebufferManager.prototype.prepareTextures = function (context, blitStencil) {\n  if (this._numSamples > 1) {\n    this._multisampleFramebuffer.blitFramebuffers(context, blitStencil);\n  }\n};\n\nFramebufferManager.prototype.clear = function (\n  context,\n  clearCommand,\n  passState\n) {\n  const framebuffer = clearCommand.framebuffer;\n  clearCommand.framebuffer = this.framebuffer;\n  clearCommand.execute(context, passState);\n  clearCommand.framebuffer = framebuffer;\n};\n\nFramebufferManager.prototype.destroyFramebuffer = function () {\n  this._framebuffer = this._framebuffer && this._framebuffer.destroy();\n  this._multisampleFramebuffer =\n    this._multisampleFramebuffer && this._multisampleFramebuffer.destroy();\n};\n\nFramebufferManager.prototype.destroy = function () {\n  if (this._color) {\n    let i;\n    const length = this._colorTextures.length;\n    for (i = 0; i < length; ++i) {\n      const texture = this._colorTextures[i];\n      if (this._createColorAttachments) {\n        if (defined(texture) && !texture.isDestroyed()) {\n          this._colorTextures[i].destroy();\n          this._colorTextures[i] = undefined;\n        }\n      }\n      if (defined(texture) && texture.isDestroyed()) {\n        this._colorTextures[i] = undefined;\n      }\n      const renderbuffer = this._colorRenderbuffers[i];\n      if (this._createColorAttachments) {\n        if (defined(renderbuffer) && !renderbuffer.isDestroyed()) {\n          this._colorRenderbuffers[i].destroy();\n          this._colorRenderbuffers[i] = undefined;\n        }\n      }\n      if (defined(renderbuffer) && renderbuffer.isDestroyed()) {\n        this._colorRenderbuffers[i] = undefined;\n      }\n    }\n  }\n\n  if (this._depthStencil) {\n    if (this._createDepthAttachments) {\n      this._depthStencilTexture =\n        this._depthStencilTexture && this._depthStencilTexture.destroy();\n      this._depthStencilRenderbuffer =\n        this._depthStencilRenderbuffer &&\n        this._depthStencilRenderbuffer.destroy();\n    }\n    if (\n      defined(this._depthStencilTexture) &&\n      this._depthStencilTexture.isDestroyed()\n    ) {\n      this._depthStencilTexture = undefined;\n    }\n    if (\n      defined(this._depthStencilRenderbuffer) &&\n      this._depthStencilRenderbuffer.isDestroyed()\n    ) {\n      this._depthStencilRenderbuffer = undefined;\n    }\n  }\n\n  if (this._depth) {\n    if (this._createDepthAttachments) {\n      this._depthTexture = this._depthTexture && this._depthTexture.destroy();\n      this._depthRenderbuffer =\n        this._depthRenderbuffer && this._depthRenderbuffer.destroy();\n    }\n    if (defined(this._depthTexture) && this._depthTexture.isDestroyed()) {\n      this._depthTexture = undefined;\n    }\n    if (\n      defined(this._depthRenderbuffer) &&\n      this._depthRenderbuffer.isDestroyed()\n    ) {\n      this._depthRenderbuffer = undefined;\n    }\n  }\n\n  this.destroyFramebuffer();\n};\nexport default FramebufferManager;\n","import WebGLConstants from \"../Core/WebGLConstants.js\";\n\n/**\n * @private\n */\nconst MipmapHint = {\n  DONT_CARE: WebGLConstants.DONT_CARE,\n  FASTEST: WebGLConstants.FASTEST,\n  NICEST: WebGLConstants.NICEST,\n\n  validate: function (mipmapHint) {\n    return (\n      mipmapHint === MipmapHint.DONT_CARE ||\n      mipmapHint === MipmapHint.FASTEST ||\n      mipmapHint === MipmapHint.NICEST\n    );\n  },\n};\nexport default Object.freeze(MipmapHint);\n","import Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Framebuffer from \"./Framebuffer.js\";\n\n/**\n * Creates a multisampling wrapper around two framebuffers with optional initial\n * color and depth-stencil attachments. The first framebuffer has multisampled\n * renderbuffer attachments and is bound to READ_FRAMEBUFFER during the blit. The\n * second is bound to DRAW_FRAMEBUFFER during the blit, and has texture attachments\n * to store the copied pixels.\n *\n * @param {Object} options The initial framebuffer attachments. <code>context</code>, <code>width</code>, and <code>height</code> are required. The possible properties are <code>colorTextures</code>, <code>colorRenderbuffers</code>, <code>depthStencilTexture</code>, <code>depthStencilRenderbuffer</code>, and <code>destroyAttachments</code>.\n *\n * @exception {DeveloperError} Both color renderbuffer and texture attachments must be provided.\n * @exception {DeveloperError} Both depth-stencil renderbuffer and texture attachments must be provided.\n *\n * @private\n * @constructor\n */\nfunction MultisampleFramebuffer(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  const context = options.context;\n  const width = options.width;\n  const height = options.height;\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"options.context\", context);\n  Check.defined(\"options.width\", width);\n  Check.defined(\"options.height\", height);\n  //>>includeEnd('debug');\n  this._width = width;\n  this._height = height;\n\n  const colorRenderbuffers = options.colorRenderbuffers;\n  const colorTextures = options.colorTextures;\n  if (defined(colorRenderbuffers) !== defined(colorTextures)) {\n    throw new DeveloperError(\n      \"Both color renderbuffer and texture attachments must be provided.\"\n    );\n  }\n\n  const depthStencilRenderbuffer = options.depthStencilRenderbuffer;\n  const depthStencilTexture = options.depthStencilTexture;\n  if (defined(depthStencilRenderbuffer) !== defined(depthStencilTexture)) {\n    throw new DeveloperError(\n      \"Both depth-stencil renderbuffer and texture attachments must be provided.\"\n    );\n  }\n\n  this._renderFramebuffer = new Framebuffer({\n    context: context,\n    colorRenderbuffers: colorRenderbuffers,\n    depthStencilRenderbuffer: depthStencilRenderbuffer,\n    destroyAttachments: options.destroyAttachments,\n  });\n  this._colorFramebuffer = new Framebuffer({\n    context: context,\n    colorTextures: colorTextures,\n    depthStencilTexture: depthStencilTexture,\n    destroyAttachments: options.destroyAttachments,\n  });\n}\n\nMultisampleFramebuffer.prototype.getRenderFramebuffer = function () {\n  return this._renderFramebuffer;\n};\n\nMultisampleFramebuffer.prototype.getColorFramebuffer = function () {\n  return this._colorFramebuffer;\n};\n\nMultisampleFramebuffer.prototype.blitFramebuffers = function (\n  context,\n  blitStencil\n) {\n  this._renderFramebuffer.bindRead();\n  this._colorFramebuffer.bindDraw();\n  const gl = context._gl;\n  let mask = 0;\n  if (this._colorFramebuffer._colorTextures.length > 0) {\n    mask |= gl.COLOR_BUFFER_BIT;\n  }\n  if (defined(this._colorFramebuffer.depthStencilTexture)) {\n    mask |= gl.DEPTH_BUFFER_BIT | (blitStencil ? gl.STENCIL_BUFFER_BIT : 0);\n  }\n  gl.blitFramebuffer(\n    0,\n    0,\n    this._width,\n    this._height,\n    0,\n    0,\n    this._width,\n    this._height,\n    mask,\n    gl.NEAREST\n  );\n  gl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n  gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n};\n\nMultisampleFramebuffer.prototype.isDestroyed = function () {\n  return false;\n};\n\nMultisampleFramebuffer.prototype.destroy = function () {\n  this._renderFramebuffer.destroy();\n  this._colorFramebuffer.destroy();\n  return destroyObject(this);\n};\n\nexport default MultisampleFramebuffer;\n","/**\n * The render pass for a command.\n *\n * @private\n */\nconst Pass = {\n  // If you add/modify/remove Pass constants, also change the automatic GLSL constants\n  // that start with 'czm_pass'\n  //\n  // Commands are executed in order by pass up to the translucent pass.\n  // Translucent geometry needs special handling (sorting/OIT). The compute pass\n  // is executed first and the overlay pass is executed last. Both are not sorted\n  // by frustum.\n  ENVIRONMENT: 0,\n  COMPUTE: 1,\n  GLOBE: 2,\n  TERRAIN_CLASSIFICATION: 3,\n  CESIUM_3D_TILE: 4,\n  CESIUM_3D_TILE_CLASSIFICATION: 5,\n  CESIUM_3D_TILE_CLASSIFICATION_IGNORE_SHOW: 6,\n  OPAQUE: 7,\n  TRANSLUCENT: 8,\n  OVERLAY: 9,\n  NUMBER_OF_PASSES: 10,\n};\nexport default Object.freeze(Pass);\n","/**\n * The state for a particular rendering pass.  This is used to supplement the state\n * in a command being executed.\n *\n * @private\n * @constructor\n */\nfunction PassState(context) {\n  /**\n   * The context used to execute commands for this pass.\n   *\n   * @type {Context}\n   */\n  this.context = context;\n\n  /**\n   * The framebuffer to render to.  This framebuffer is used unless a {@link DrawCommand}\n   * or {@link ClearCommand} explicitly define a framebuffer, which is used for off-screen\n   * rendering.\n   *\n   * @type {Framebuffer}\n   * @default undefined\n   */\n  this.framebuffer = undefined;\n\n  /**\n   * When defined, this overrides the blending property of a {@link DrawCommand}'s render state.\n   * This is used to, for example, to allow the renderer to turn off blending during the picking pass.\n   * <p>\n   * When this is <code>undefined</code>, the {@link DrawCommand}'s property is used.\n   * </p>\n   *\n   * @type {Boolean}\n   * @default undefined\n   */\n  this.blendingEnabled = undefined;\n\n  /**\n   * When defined, this overrides the scissor test property of a {@link DrawCommand}'s render state.\n   * This is used to, for example, to allow the renderer to scissor out the pick region during the picking pass.\n   * <p>\n   * When this is <code>undefined</code>, the {@link DrawCommand}'s property is used.\n   * </p>\n   *\n   * @type {Object}\n   * @default undefined\n   */\n  this.scissorTest = undefined;\n\n  /**\n   * The viewport used when one is not defined by a {@link DrawCommand}'s render state.\n   * @type {BoundingRectangle}\n   * @default undefined\n   */\n  this.viewport = undefined;\n}\nexport default PassState;\n","import WebGLConstants from \"../Core/WebGLConstants.js\";\n\n/**\n * The data type of a pixel.\n *\n * @enum {Number}\n * @see PostProcessStage\n */\nconst PixelDatatype = {\n  UNSIGNED_BYTE: WebGLConstants.UNSIGNED_BYTE,\n  UNSIGNED_SHORT: WebGLConstants.UNSIGNED_SHORT,\n  UNSIGNED_INT: WebGLConstants.UNSIGNED_INT,\n  FLOAT: WebGLConstants.FLOAT,\n  HALF_FLOAT: WebGLConstants.HALF_FLOAT_OES,\n  UNSIGNED_INT_24_8: WebGLConstants.UNSIGNED_INT_24_8,\n  UNSIGNED_SHORT_4_4_4_4: WebGLConstants.UNSIGNED_SHORT_4_4_4_4,\n  UNSIGNED_SHORT_5_5_5_1: WebGLConstants.UNSIGNED_SHORT_5_5_5_1,\n  UNSIGNED_SHORT_5_6_5: WebGLConstants.UNSIGNED_SHORT_5_6_5,\n};\n\n/**\n  @private\n*/\nPixelDatatype.toWebGLConstant = function (pixelDatatype, context) {\n  switch (pixelDatatype) {\n    case PixelDatatype.UNSIGNED_BYTE:\n      return WebGLConstants.UNSIGNED_BYTE;\n    case PixelDatatype.UNSIGNED_SHORT:\n      return WebGLConstants.UNSIGNED_SHORT;\n    case PixelDatatype.UNSIGNED_INT:\n      return WebGLConstants.UNSIGNED_INT;\n    case PixelDatatype.FLOAT:\n      return WebGLConstants.FLOAT;\n    case PixelDatatype.HALF_FLOAT:\n      return context.webgl2\n        ? WebGLConstants.HALF_FLOAT\n        : WebGLConstants.HALF_FLOAT_OES;\n    case PixelDatatype.UNSIGNED_INT_24_8:\n      return WebGLConstants.UNSIGNED_INT_24_8;\n    case PixelDatatype.UNSIGNED_SHORT_4_4_4_4:\n      return WebGLConstants.UNSIGNED_SHORT_4_4_4_4;\n    case PixelDatatype.UNSIGNED_SHORT_5_5_5_1:\n      return WebGLConstants.UNSIGNED_SHORT_5_5_5_1;\n    case PixelDatatype.UNSIGNED_SHORT_5_6_5:\n      return PixelDatatype.UNSIGNED_SHORT_5_6_5;\n  }\n};\n\n/**\n  @private\n*/\nPixelDatatype.isPacked = function (pixelDatatype) {\n  return (\n    pixelDatatype === PixelDatatype.UNSIGNED_INT_24_8 ||\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_4_4_4_4 ||\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_5_5_5_1 ||\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_5_6_5\n  );\n};\n\n/**\n  @private\n*/\nPixelDatatype.sizeInBytes = function (pixelDatatype) {\n  switch (pixelDatatype) {\n    case PixelDatatype.UNSIGNED_BYTE:\n      return 1;\n    case PixelDatatype.UNSIGNED_SHORT:\n    case PixelDatatype.UNSIGNED_SHORT_4_4_4_4:\n    case PixelDatatype.UNSIGNED_SHORT_5_5_5_1:\n    case PixelDatatype.UNSIGNED_SHORT_5_6_5:\n    case PixelDatatype.HALF_FLOAT:\n      return 2;\n    case PixelDatatype.UNSIGNED_INT:\n    case PixelDatatype.FLOAT:\n    case PixelDatatype.UNSIGNED_INT_24_8:\n      return 4;\n  }\n};\n\n/**\n  @private\n*/\nPixelDatatype.validate = function (pixelDatatype) {\n  return (\n    pixelDatatype === PixelDatatype.UNSIGNED_BYTE ||\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT ||\n    pixelDatatype === PixelDatatype.UNSIGNED_INT ||\n    pixelDatatype === PixelDatatype.FLOAT ||\n    pixelDatatype === PixelDatatype.HALF_FLOAT ||\n    pixelDatatype === PixelDatatype.UNSIGNED_INT_24_8 ||\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_4_4_4_4 ||\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_5_5_5_1 ||\n    pixelDatatype === PixelDatatype.UNSIGNED_SHORT_5_6_5\n  );\n};\n\nexport default Object.freeze(PixelDatatype);\n","import BoundingRectangle from \"../Core/BoundingRectangle.js\";\nimport Color from \"../Core/Color.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport WebGLConstants from \"../Core/WebGLConstants.js\";\nimport WindingOrder from \"../Core/WindingOrder.js\";\nimport ContextLimits from \"./ContextLimits.js\";\nimport freezeRenderState from \"./freezeRenderState.js\";\n\nfunction validateBlendEquation(blendEquation) {\n  return (\n    blendEquation === WebGLConstants.FUNC_ADD ||\n    blendEquation === WebGLConstants.FUNC_SUBTRACT ||\n    blendEquation === WebGLConstants.FUNC_REVERSE_SUBTRACT ||\n    blendEquation === WebGLConstants.MIN ||\n    blendEquation === WebGLConstants.MAX\n  );\n}\n\nfunction validateBlendFunction(blendFunction) {\n  return (\n    blendFunction === WebGLConstants.ZERO ||\n    blendFunction === WebGLConstants.ONE ||\n    blendFunction === WebGLConstants.SRC_COLOR ||\n    blendFunction === WebGLConstants.ONE_MINUS_SRC_COLOR ||\n    blendFunction === WebGLConstants.DST_COLOR ||\n    blendFunction === WebGLConstants.ONE_MINUS_DST_COLOR ||\n    blendFunction === WebGLConstants.SRC_ALPHA ||\n    blendFunction === WebGLConstants.ONE_MINUS_SRC_ALPHA ||\n    blendFunction === WebGLConstants.DST_ALPHA ||\n    blendFunction === WebGLConstants.ONE_MINUS_DST_ALPHA ||\n    blendFunction === WebGLConstants.CONSTANT_COLOR ||\n    blendFunction === WebGLConstants.ONE_MINUS_CONSTANT_COLOR ||\n    blendFunction === WebGLConstants.CONSTANT_ALPHA ||\n    blendFunction === WebGLConstants.ONE_MINUS_CONSTANT_ALPHA ||\n    blendFunction === WebGLConstants.SRC_ALPHA_SATURATE\n  );\n}\n\nfunction validateCullFace(cullFace) {\n  return (\n    cullFace === WebGLConstants.FRONT ||\n    cullFace === WebGLConstants.BACK ||\n    cullFace === WebGLConstants.FRONT_AND_BACK\n  );\n}\n\nfunction validateDepthFunction(depthFunction) {\n  return (\n    depthFunction === WebGLConstants.NEVER ||\n    depthFunction === WebGLConstants.LESS ||\n    depthFunction === WebGLConstants.EQUAL ||\n    depthFunction === WebGLConstants.LEQUAL ||\n    depthFunction === WebGLConstants.GREATER ||\n    depthFunction === WebGLConstants.NOTEQUAL ||\n    depthFunction === WebGLConstants.GEQUAL ||\n    depthFunction === WebGLConstants.ALWAYS\n  );\n}\n\nfunction validateStencilFunction(stencilFunction) {\n  return (\n    stencilFunction === WebGLConstants.NEVER ||\n    stencilFunction === WebGLConstants.LESS ||\n    stencilFunction === WebGLConstants.EQUAL ||\n    stencilFunction === WebGLConstants.LEQUAL ||\n    stencilFunction === WebGLConstants.GREATER ||\n    stencilFunction === WebGLConstants.NOTEQUAL ||\n    stencilFunction === WebGLConstants.GEQUAL ||\n    stencilFunction === WebGLConstants.ALWAYS\n  );\n}\n\nfunction validateStencilOperation(stencilOperation) {\n  return (\n    stencilOperation === WebGLConstants.ZERO ||\n    stencilOperation === WebGLConstants.KEEP ||\n    stencilOperation === WebGLConstants.REPLACE ||\n    stencilOperation === WebGLConstants.INCR ||\n    stencilOperation === WebGLConstants.DECR ||\n    stencilOperation === WebGLConstants.INVERT ||\n    stencilOperation === WebGLConstants.INCR_WRAP ||\n    stencilOperation === WebGLConstants.DECR_WRAP\n  );\n}\n\n/**\n * @private\n */\nfunction RenderState(renderState) {\n  const rs = defaultValue(renderState, defaultValue.EMPTY_OBJECT);\n  const cull = defaultValue(rs.cull, defaultValue.EMPTY_OBJECT);\n  const polygonOffset = defaultValue(\n    rs.polygonOffset,\n    defaultValue.EMPTY_OBJECT\n  );\n  const scissorTest = defaultValue(rs.scissorTest, defaultValue.EMPTY_OBJECT);\n  const scissorTestRectangle = defaultValue(\n    scissorTest.rectangle,\n    defaultValue.EMPTY_OBJECT\n  );\n  const depthRange = defaultValue(rs.depthRange, defaultValue.EMPTY_OBJECT);\n  const depthTest = defaultValue(rs.depthTest, defaultValue.EMPTY_OBJECT);\n  const colorMask = defaultValue(rs.colorMask, defaultValue.EMPTY_OBJECT);\n  const blending = defaultValue(rs.blending, defaultValue.EMPTY_OBJECT);\n  const blendingColor = defaultValue(blending.color, defaultValue.EMPTY_OBJECT);\n  const stencilTest = defaultValue(rs.stencilTest, defaultValue.EMPTY_OBJECT);\n  const stencilTestFrontOperation = defaultValue(\n    stencilTest.frontOperation,\n    defaultValue.EMPTY_OBJECT\n  );\n  const stencilTestBackOperation = defaultValue(\n    stencilTest.backOperation,\n    defaultValue.EMPTY_OBJECT\n  );\n  const sampleCoverage = defaultValue(\n    rs.sampleCoverage,\n    defaultValue.EMPTY_OBJECT\n  );\n  const viewport = rs.viewport;\n\n  this.frontFace = defaultValue(rs.frontFace, WindingOrder.COUNTER_CLOCKWISE);\n  this.cull = {\n    enabled: defaultValue(cull.enabled, false),\n    face: defaultValue(cull.face, WebGLConstants.BACK),\n  };\n  this.lineWidth = defaultValue(rs.lineWidth, 1.0);\n  this.polygonOffset = {\n    enabled: defaultValue(polygonOffset.enabled, false),\n    factor: defaultValue(polygonOffset.factor, 0),\n    units: defaultValue(polygonOffset.units, 0),\n  };\n  this.scissorTest = {\n    enabled: defaultValue(scissorTest.enabled, false),\n    rectangle: BoundingRectangle.clone(scissorTestRectangle),\n  };\n  this.depthRange = {\n    near: defaultValue(depthRange.near, 0),\n    far: defaultValue(depthRange.far, 1),\n  };\n  this.depthTest = {\n    enabled: defaultValue(depthTest.enabled, false),\n    func: defaultValue(depthTest.func, WebGLConstants.LESS), // func, because function is a JavaScript keyword\n  };\n  this.colorMask = {\n    red: defaultValue(colorMask.red, true),\n    green: defaultValue(colorMask.green, true),\n    blue: defaultValue(colorMask.blue, true),\n    alpha: defaultValue(colorMask.alpha, true),\n  };\n  this.depthMask = defaultValue(rs.depthMask, true);\n  this.stencilMask = defaultValue(rs.stencilMask, ~0);\n  this.blending = {\n    enabled: defaultValue(blending.enabled, false),\n    color: new Color(\n      defaultValue(blendingColor.red, 0.0),\n      defaultValue(blendingColor.green, 0.0),\n      defaultValue(blendingColor.blue, 0.0),\n      defaultValue(blendingColor.alpha, 0.0)\n    ),\n    equationRgb: defaultValue(blending.equationRgb, WebGLConstants.FUNC_ADD),\n    equationAlpha: defaultValue(\n      blending.equationAlpha,\n      WebGLConstants.FUNC_ADD\n    ),\n    functionSourceRgb: defaultValue(\n      blending.functionSourceRgb,\n      WebGLConstants.ONE\n    ),\n    functionSourceAlpha: defaultValue(\n      blending.functionSourceAlpha,\n      WebGLConstants.ONE\n    ),\n    functionDestinationRgb: defaultValue(\n      blending.functionDestinationRgb,\n      WebGLConstants.ZERO\n    ),\n    functionDestinationAlpha: defaultValue(\n      blending.functionDestinationAlpha,\n      WebGLConstants.ZERO\n    ),\n  };\n  this.stencilTest = {\n    enabled: defaultValue(stencilTest.enabled, false),\n    frontFunction: defaultValue(\n      stencilTest.frontFunction,\n      WebGLConstants.ALWAYS\n    ),\n    backFunction: defaultValue(stencilTest.backFunction, WebGLConstants.ALWAYS),\n    reference: defaultValue(stencilTest.reference, 0),\n    mask: defaultValue(stencilTest.mask, ~0),\n    frontOperation: {\n      fail: defaultValue(stencilTestFrontOperation.fail, WebGLConstants.KEEP),\n      zFail: defaultValue(stencilTestFrontOperation.zFail, WebGLConstants.KEEP),\n      zPass: defaultValue(stencilTestFrontOperation.zPass, WebGLConstants.KEEP),\n    },\n    backOperation: {\n      fail: defaultValue(stencilTestBackOperation.fail, WebGLConstants.KEEP),\n      zFail: defaultValue(stencilTestBackOperation.zFail, WebGLConstants.KEEP),\n      zPass: defaultValue(stencilTestBackOperation.zPass, WebGLConstants.KEEP),\n    },\n  };\n  this.sampleCoverage = {\n    enabled: defaultValue(sampleCoverage.enabled, false),\n    value: defaultValue(sampleCoverage.value, 1.0),\n    invert: defaultValue(sampleCoverage.invert, false),\n  };\n  this.viewport = defined(viewport)\n    ? new BoundingRectangle(\n        viewport.x,\n        viewport.y,\n        viewport.width,\n        viewport.height\n      )\n    : undefined;\n\n  //>>includeStart('debug', pragmas.debug);\n  if (\n    this.lineWidth < ContextLimits.minimumAliasedLineWidth ||\n    this.lineWidth > ContextLimits.maximumAliasedLineWidth\n  ) {\n    throw new DeveloperError(\n      \"renderState.lineWidth is out of range.  Check minimumAliasedLineWidth and maximumAliasedLineWidth.\"\n    );\n  }\n  if (!WindingOrder.validate(this.frontFace)) {\n    throw new DeveloperError(\"Invalid renderState.frontFace.\");\n  }\n  if (!validateCullFace(this.cull.face)) {\n    throw new DeveloperError(\"Invalid renderState.cull.face.\");\n  }\n  if (\n    this.scissorTest.rectangle.width < 0 ||\n    this.scissorTest.rectangle.height < 0\n  ) {\n    throw new DeveloperError(\n      \"renderState.scissorTest.rectangle.width and renderState.scissorTest.rectangle.height must be greater than or equal to zero.\"\n    );\n  }\n  if (this.depthRange.near > this.depthRange.far) {\n    // WebGL specific - not an error in GL ES\n    throw new DeveloperError(\n      \"renderState.depthRange.near can not be greater than renderState.depthRange.far.\"\n    );\n  }\n  if (this.depthRange.near < 0) {\n    // Would be clamped by GL\n    throw new DeveloperError(\n      \"renderState.depthRange.near must be greater than or equal to zero.\"\n    );\n  }\n  if (this.depthRange.far > 1) {\n    // Would be clamped by GL\n    throw new DeveloperError(\n      \"renderState.depthRange.far must be less than or equal to one.\"\n    );\n  }\n  if (!validateDepthFunction(this.depthTest.func)) {\n    throw new DeveloperError(\"Invalid renderState.depthTest.func.\");\n  }\n  if (\n    this.blending.color.red < 0.0 ||\n    this.blending.color.red > 1.0 ||\n    this.blending.color.green < 0.0 ||\n    this.blending.color.green > 1.0 ||\n    this.blending.color.blue < 0.0 ||\n    this.blending.color.blue > 1.0 ||\n    this.blending.color.alpha < 0.0 ||\n    this.blending.color.alpha > 1.0\n  ) {\n    // Would be clamped by GL\n    throw new DeveloperError(\n      \"renderState.blending.color components must be greater than or equal to zero and less than or equal to one.\"\n    );\n  }\n  if (!validateBlendEquation(this.blending.equationRgb)) {\n    throw new DeveloperError(\"Invalid renderState.blending.equationRgb.\");\n  }\n  if (!validateBlendEquation(this.blending.equationAlpha)) {\n    throw new DeveloperError(\"Invalid renderState.blending.equationAlpha.\");\n  }\n  if (!validateBlendFunction(this.blending.functionSourceRgb)) {\n    throw new DeveloperError(\"Invalid renderState.blending.functionSourceRgb.\");\n  }\n  if (!validateBlendFunction(this.blending.functionSourceAlpha)) {\n    throw new DeveloperError(\n      \"Invalid renderState.blending.functionSourceAlpha.\"\n    );\n  }\n  if (!validateBlendFunction(this.blending.functionDestinationRgb)) {\n    throw new DeveloperError(\n      \"Invalid renderState.blending.functionDestinationRgb.\"\n    );\n  }\n  if (!validateBlendFunction(this.blending.functionDestinationAlpha)) {\n    throw new DeveloperError(\n      \"Invalid renderState.blending.functionDestinationAlpha.\"\n    );\n  }\n  if (!validateStencilFunction(this.stencilTest.frontFunction)) {\n    throw new DeveloperError(\"Invalid renderState.stencilTest.frontFunction.\");\n  }\n  if (!validateStencilFunction(this.stencilTest.backFunction)) {\n    throw new DeveloperError(\"Invalid renderState.stencilTest.backFunction.\");\n  }\n  if (!validateStencilOperation(this.stencilTest.frontOperation.fail)) {\n    throw new DeveloperError(\n      \"Invalid renderState.stencilTest.frontOperation.fail.\"\n    );\n  }\n  if (!validateStencilOperation(this.stencilTest.frontOperation.zFail)) {\n    throw new DeveloperError(\n      \"Invalid renderState.stencilTest.frontOperation.zFail.\"\n    );\n  }\n  if (!validateStencilOperation(this.stencilTest.frontOperation.zPass)) {\n    throw new DeveloperError(\n      \"Invalid renderState.stencilTest.frontOperation.zPass.\"\n    );\n  }\n  if (!validateStencilOperation(this.stencilTest.backOperation.fail)) {\n    throw new DeveloperError(\n      \"Invalid renderState.stencilTest.backOperation.fail.\"\n    );\n  }\n  if (!validateStencilOperation(this.stencilTest.backOperation.zFail)) {\n    throw new DeveloperError(\n      \"Invalid renderState.stencilTest.backOperation.zFail.\"\n    );\n  }\n  if (!validateStencilOperation(this.stencilTest.backOperation.zPass)) {\n    throw new DeveloperError(\n      \"Invalid renderState.stencilTest.backOperation.zPass.\"\n    );\n  }\n\n  if (defined(this.viewport)) {\n    if (this.viewport.width < 0) {\n      throw new DeveloperError(\n        \"renderState.viewport.width must be greater than or equal to zero.\"\n      );\n    }\n    if (this.viewport.height < 0) {\n      throw new DeveloperError(\n        \"renderState.viewport.height must be greater than or equal to zero.\"\n      );\n    }\n\n    if (this.viewport.width > ContextLimits.maximumViewportWidth) {\n      throw new DeveloperError(\n        `renderState.viewport.width must be less than or equal to the maximum viewport width (${ContextLimits.maximumViewportWidth.toString()}).  Check maximumViewportWidth.`\n      );\n    }\n    if (this.viewport.height > ContextLimits.maximumViewportHeight) {\n      throw new DeveloperError(\n        `renderState.viewport.height must be less than or equal to the maximum viewport height (${ContextLimits.maximumViewportHeight.toString()}).  Check maximumViewportHeight.`\n      );\n    }\n  }\n  //>>includeEnd('debug');\n\n  this.id = 0;\n  this._applyFunctions = [];\n}\n\nlet nextRenderStateId = 0;\nlet renderStateCache = {};\n\n/**\n * Validates and then finds or creates an immutable render state, which defines the pipeline\n * state for a {@link DrawCommand} or {@link ClearCommand}.  All inputs states are optional.  Omitted states\n * use the defaults shown in the example below.\n *\n * @param {Object} [renderState] The states defining the render state as shown in the example below.\n *\n * @exception {RuntimeError} renderState.lineWidth is out of range.\n * @exception {DeveloperError} Invalid renderState.frontFace.\n * @exception {DeveloperError} Invalid renderState.cull.face.\n * @exception {DeveloperError} scissorTest.rectangle.width and scissorTest.rectangle.height must be greater than or equal to zero.\n * @exception {DeveloperError} renderState.depthRange.near can't be greater than renderState.depthRange.far.\n * @exception {DeveloperError} renderState.depthRange.near must be greater than or equal to zero.\n * @exception {DeveloperError} renderState.depthRange.far must be less than or equal to zero.\n * @exception {DeveloperError} Invalid renderState.depthTest.func.\n * @exception {DeveloperError} renderState.blending.color components must be greater than or equal to zero and less than or equal to one\n * @exception {DeveloperError} Invalid renderState.blending.equationRgb.\n * @exception {DeveloperError} Invalid renderState.blending.equationAlpha.\n * @exception {DeveloperError} Invalid renderState.blending.functionSourceRgb.\n * @exception {DeveloperError} Invalid renderState.blending.functionSourceAlpha.\n * @exception {DeveloperError} Invalid renderState.blending.functionDestinationRgb.\n * @exception {DeveloperError} Invalid renderState.blending.functionDestinationAlpha.\n * @exception {DeveloperError} Invalid renderState.stencilTest.frontFunction.\n * @exception {DeveloperError} Invalid renderState.stencilTest.backFunction.\n * @exception {DeveloperError} Invalid renderState.stencilTest.frontOperation.fail.\n * @exception {DeveloperError} Invalid renderState.stencilTest.frontOperation.zFail.\n * @exception {DeveloperError} Invalid renderState.stencilTest.frontOperation.zPass.\n * @exception {DeveloperError} Invalid renderState.stencilTest.backOperation.fail.\n * @exception {DeveloperError} Invalid renderState.stencilTest.backOperation.zFail.\n * @exception {DeveloperError} Invalid renderState.stencilTest.backOperation.zPass.\n * @exception {DeveloperError} renderState.viewport.width must be greater than or equal to zero.\n * @exception {DeveloperError} renderState.viewport.width must be less than or equal to the maximum viewport width.\n * @exception {DeveloperError} renderState.viewport.height must be greater than or equal to zero.\n * @exception {DeveloperError} renderState.viewport.height must be less than or equal to the maximum viewport height.\n *\n *\n * @example\n * const defaults = {\n *     frontFace : WindingOrder.COUNTER_CLOCKWISE,\n *     cull : {\n *         enabled : false,\n *         face : CullFace.BACK\n *     },\n *     lineWidth : 1,\n *     polygonOffset : {\n *         enabled : false,\n *         factor : 0,\n *         units : 0\n *     },\n *     scissorTest : {\n *         enabled : false,\n *         rectangle : {\n *             x : 0,\n *             y : 0,\n *             width : 0,\n *             height : 0\n *         }\n *     },\n *     depthRange : {\n *         near : 0,\n *         far : 1\n *     },\n *     depthTest : {\n *         enabled : false,\n *         func : DepthFunction.LESS\n *      },\n *     colorMask : {\n *         red : true,\n *         green : true,\n *         blue : true,\n *         alpha : true\n *     },\n *     depthMask : true,\n *     stencilMask : ~0,\n *     blending : {\n *         enabled : false,\n *         color : {\n *             red : 0.0,\n *             green : 0.0,\n *             blue : 0.0,\n *             alpha : 0.0\n *         },\n *         equationRgb : BlendEquation.ADD,\n *         equationAlpha : BlendEquation.ADD,\n *         functionSourceRgb : BlendFunction.ONE,\n *         functionSourceAlpha : BlendFunction.ONE,\n *         functionDestinationRgb : BlendFunction.ZERO,\n *         functionDestinationAlpha : BlendFunction.ZERO\n *     },\n *     stencilTest : {\n *         enabled : false,\n *         frontFunction : StencilFunction.ALWAYS,\n *         backFunction : StencilFunction.ALWAYS,\n *         reference : 0,\n *         mask : ~0,\n *         frontOperation : {\n *             fail : StencilOperation.KEEP,\n *             zFail : StencilOperation.KEEP,\n *             zPass : StencilOperation.KEEP\n *         },\n *         backOperation : {\n *             fail : StencilOperation.KEEP,\n *             zFail : StencilOperation.KEEP,\n *             zPass : StencilOperation.KEEP\n *         }\n *     },\n *     sampleCoverage : {\n *         enabled : false,\n *         value : 1.0,\n *         invert : false\n *      }\n * };\n *\n * const rs = RenderState.fromCache(defaults);\n *\n * @see DrawCommand\n * @see ClearCommand\n *\n * @private\n */\nRenderState.fromCache = function (renderState) {\n  const partialKey = JSON.stringify(renderState);\n  let cachedState = renderStateCache[partialKey];\n  if (defined(cachedState)) {\n    ++cachedState.referenceCount;\n    return cachedState.state;\n  }\n\n  // Cache miss.  Fully define render state and try again.\n  let states = new RenderState(renderState);\n  const fullKey = JSON.stringify(states);\n  cachedState = renderStateCache[fullKey];\n  if (!defined(cachedState)) {\n    states.id = nextRenderStateId++;\n    //>>includeStart('debug', pragmas.debug);\n    states = freezeRenderState(states);\n    //>>includeEnd('debug');\n    cachedState = {\n      referenceCount: 0,\n      state: states,\n    };\n\n    // Cache full render state.  Multiple partially defined render states may map to this.\n    renderStateCache[fullKey] = cachedState;\n  }\n\n  ++cachedState.referenceCount;\n\n  // Cache partial render state so we can skip validation on a cache hit for a partially defined render state\n  renderStateCache[partialKey] = {\n    referenceCount: 1,\n    state: cachedState.state,\n  };\n\n  return cachedState.state;\n};\n\n/**\n * @private\n */\nRenderState.removeFromCache = function (renderState) {\n  const states = new RenderState(renderState);\n  const fullKey = JSON.stringify(states);\n  const fullCachedState = renderStateCache[fullKey];\n\n  // decrement partial key reference count\n  const partialKey = JSON.stringify(renderState);\n  const cachedState = renderStateCache[partialKey];\n  if (defined(cachedState)) {\n    --cachedState.referenceCount;\n\n    if (cachedState.referenceCount === 0) {\n      // remove partial key\n      delete renderStateCache[partialKey];\n\n      // decrement full key reference count\n      if (defined(fullCachedState)) {\n        --fullCachedState.referenceCount;\n      }\n    }\n  }\n\n  // remove full key if reference count is zero\n  if (defined(fullCachedState) && fullCachedState.referenceCount === 0) {\n    delete renderStateCache[fullKey];\n  }\n};\n\n/**\n * This function is for testing purposes only.\n * @private\n */\nRenderState.getCache = function () {\n  return renderStateCache;\n};\n\n/**\n * This function is for testing purposes only.\n * @private\n */\nRenderState.clearCache = function () {\n  renderStateCache = {};\n};\n\nfunction enableOrDisable(gl, glEnum, enable) {\n  if (enable) {\n    gl.enable(glEnum);\n  } else {\n    gl.disable(glEnum);\n  }\n}\n\nfunction applyFrontFace(gl, renderState) {\n  gl.frontFace(renderState.frontFace);\n}\n\nfunction applyCull(gl, renderState) {\n  const cull = renderState.cull;\n  const enabled = cull.enabled;\n\n  enableOrDisable(gl, gl.CULL_FACE, enabled);\n\n  if (enabled) {\n    gl.cullFace(cull.face);\n  }\n}\n\nfunction applyLineWidth(gl, renderState) {\n  gl.lineWidth(renderState.lineWidth);\n}\n\nfunction applyPolygonOffset(gl, renderState) {\n  const polygonOffset = renderState.polygonOffset;\n  const enabled = polygonOffset.enabled;\n\n  enableOrDisable(gl, gl.POLYGON_OFFSET_FILL, enabled);\n\n  if (enabled) {\n    gl.polygonOffset(polygonOffset.factor, polygonOffset.units);\n  }\n}\n\nfunction applyScissorTest(gl, renderState, passState) {\n  const scissorTest = renderState.scissorTest;\n  const enabled = defined(passState.scissorTest)\n    ? passState.scissorTest.enabled\n    : scissorTest.enabled;\n\n  enableOrDisable(gl, gl.SCISSOR_TEST, enabled);\n\n  if (enabled) {\n    const rectangle = defined(passState.scissorTest)\n      ? passState.scissorTest.rectangle\n      : scissorTest.rectangle;\n    gl.scissor(rectangle.x, rectangle.y, rectangle.width, rectangle.height);\n  }\n}\n\nfunction applyDepthRange(gl, renderState) {\n  const depthRange = renderState.depthRange;\n  gl.depthRange(depthRange.near, depthRange.far);\n}\n\nfunction applyDepthTest(gl, renderState) {\n  const depthTest = renderState.depthTest;\n  const enabled = depthTest.enabled;\n\n  enableOrDisable(gl, gl.DEPTH_TEST, enabled);\n\n  if (enabled) {\n    gl.depthFunc(depthTest.func);\n  }\n}\n\nfunction applyColorMask(gl, renderState) {\n  const colorMask = renderState.colorMask;\n  gl.colorMask(colorMask.red, colorMask.green, colorMask.blue, colorMask.alpha);\n}\n\nfunction applyDepthMask(gl, renderState) {\n  gl.depthMask(renderState.depthMask);\n}\n\nfunction applyStencilMask(gl, renderState) {\n  gl.stencilMask(renderState.stencilMask);\n}\n\nfunction applyBlendingColor(gl, color) {\n  gl.blendColor(color.red, color.green, color.blue, color.alpha);\n}\n\nfunction applyBlending(gl, renderState, passState) {\n  const blending = renderState.blending;\n  const enabled = defined(passState.blendingEnabled)\n    ? passState.blendingEnabled\n    : blending.enabled;\n\n  enableOrDisable(gl, gl.BLEND, enabled);\n\n  if (enabled) {\n    applyBlendingColor(gl, blending.color);\n    gl.blendEquationSeparate(blending.equationRgb, blending.equationAlpha);\n    gl.blendFuncSeparate(\n      blending.functionSourceRgb,\n      blending.functionDestinationRgb,\n      blending.functionSourceAlpha,\n      blending.functionDestinationAlpha\n    );\n  }\n}\n\nfunction applyStencilTest(gl, renderState) {\n  const stencilTest = renderState.stencilTest;\n  const enabled = stencilTest.enabled;\n\n  enableOrDisable(gl, gl.STENCIL_TEST, enabled);\n\n  if (enabled) {\n    const frontFunction = stencilTest.frontFunction;\n    const backFunction = stencilTest.backFunction;\n    const reference = stencilTest.reference;\n    const mask = stencilTest.mask;\n\n    // Section 6.8 of the WebGL spec requires the reference and masks to be the same for\n    // front- and back-face tests.  This call prevents invalid operation errors when calling\n    // stencilFuncSeparate on Firefox.  Perhaps they should delay validation to avoid requiring this.\n    gl.stencilFunc(frontFunction, reference, mask);\n    gl.stencilFuncSeparate(gl.BACK, backFunction, reference, mask);\n    gl.stencilFuncSeparate(gl.FRONT, frontFunction, reference, mask);\n\n    const frontOperation = stencilTest.frontOperation;\n    const frontOperationFail = frontOperation.fail;\n    const frontOperationZFail = frontOperation.zFail;\n    const frontOperationZPass = frontOperation.zPass;\n\n    gl.stencilOpSeparate(\n      gl.FRONT,\n      frontOperationFail,\n      frontOperationZFail,\n      frontOperationZPass\n    );\n\n    const backOperation = stencilTest.backOperation;\n    const backOperationFail = backOperation.fail;\n    const backOperationZFail = backOperation.zFail;\n    const backOperationZPass = backOperation.zPass;\n\n    gl.stencilOpSeparate(\n      gl.BACK,\n      backOperationFail,\n      backOperationZFail,\n      backOperationZPass\n    );\n  }\n}\n\nfunction applySampleCoverage(gl, renderState) {\n  const sampleCoverage = renderState.sampleCoverage;\n  const enabled = sampleCoverage.enabled;\n\n  enableOrDisable(gl, gl.SAMPLE_COVERAGE, enabled);\n\n  if (enabled) {\n    gl.sampleCoverage(sampleCoverage.value, sampleCoverage.invert);\n  }\n}\n\nconst scratchViewport = new BoundingRectangle();\n\nfunction applyViewport(gl, renderState, passState) {\n  let viewport = defaultValue(renderState.viewport, passState.viewport);\n  if (!defined(viewport)) {\n    viewport = scratchViewport;\n    viewport.width = passState.context.drawingBufferWidth;\n    viewport.height = passState.context.drawingBufferHeight;\n  }\n\n  passState.context.uniformState.viewport = viewport;\n  gl.viewport(viewport.x, viewport.y, viewport.width, viewport.height);\n}\n\nRenderState.apply = function (gl, renderState, passState) {\n  applyFrontFace(gl, renderState);\n  applyCull(gl, renderState);\n  applyLineWidth(gl, renderState);\n  applyPolygonOffset(gl, renderState);\n  applyDepthRange(gl, renderState);\n  applyDepthTest(gl, renderState);\n  applyColorMask(gl, renderState);\n  applyDepthMask(gl, renderState);\n  applyStencilMask(gl, renderState);\n  applyStencilTest(gl, renderState);\n  applySampleCoverage(gl, renderState);\n  applyScissorTest(gl, renderState, passState);\n  applyBlending(gl, renderState, passState);\n  applyViewport(gl, renderState, passState);\n};\n\nfunction createFuncs(previousState, nextState) {\n  const funcs = [];\n\n  if (previousState.frontFace !== nextState.frontFace) {\n    funcs.push(applyFrontFace);\n  }\n\n  if (\n    previousState.cull.enabled !== nextState.cull.enabled ||\n    previousState.cull.face !== nextState.cull.face\n  ) {\n    funcs.push(applyCull);\n  }\n\n  if (previousState.lineWidth !== nextState.lineWidth) {\n    funcs.push(applyLineWidth);\n  }\n\n  if (\n    previousState.polygonOffset.enabled !== nextState.polygonOffset.enabled ||\n    previousState.polygonOffset.factor !== nextState.polygonOffset.factor ||\n    previousState.polygonOffset.units !== nextState.polygonOffset.units\n  ) {\n    funcs.push(applyPolygonOffset);\n  }\n\n  if (\n    previousState.depthRange.near !== nextState.depthRange.near ||\n    previousState.depthRange.far !== nextState.depthRange.far\n  ) {\n    funcs.push(applyDepthRange);\n  }\n\n  if (\n    previousState.depthTest.enabled !== nextState.depthTest.enabled ||\n    previousState.depthTest.func !== nextState.depthTest.func\n  ) {\n    funcs.push(applyDepthTest);\n  }\n\n  if (\n    previousState.colorMask.red !== nextState.colorMask.red ||\n    previousState.colorMask.green !== nextState.colorMask.green ||\n    previousState.colorMask.blue !== nextState.colorMask.blue ||\n    previousState.colorMask.alpha !== nextState.colorMask.alpha\n  ) {\n    funcs.push(applyColorMask);\n  }\n\n  if (previousState.depthMask !== nextState.depthMask) {\n    funcs.push(applyDepthMask);\n  }\n\n  if (previousState.stencilMask !== nextState.stencilMask) {\n    funcs.push(applyStencilMask);\n  }\n\n  if (\n    previousState.stencilTest.enabled !== nextState.stencilTest.enabled ||\n    previousState.stencilTest.frontFunction !==\n      nextState.stencilTest.frontFunction ||\n    previousState.stencilTest.backFunction !==\n      nextState.stencilTest.backFunction ||\n    previousState.stencilTest.reference !== nextState.stencilTest.reference ||\n    previousState.stencilTest.mask !== nextState.stencilTest.mask ||\n    previousState.stencilTest.frontOperation.fail !==\n      nextState.stencilTest.frontOperation.fail ||\n    previousState.stencilTest.frontOperation.zFail !==\n      nextState.stencilTest.frontOperation.zFail ||\n    previousState.stencilTest.backOperation.fail !==\n      nextState.stencilTest.backOperation.fail ||\n    previousState.stencilTest.backOperation.zFail !==\n      nextState.stencilTest.backOperation.zFail ||\n    previousState.stencilTest.backOperation.zPass !==\n      nextState.stencilTest.backOperation.zPass\n  ) {\n    funcs.push(applyStencilTest);\n  }\n\n  if (\n    previousState.sampleCoverage.enabled !== nextState.sampleCoverage.enabled ||\n    previousState.sampleCoverage.value !== nextState.sampleCoverage.value ||\n    previousState.sampleCoverage.invert !== nextState.sampleCoverage.invert\n  ) {\n    funcs.push(applySampleCoverage);\n  }\n\n  return funcs;\n}\n\nRenderState.partialApply = function (\n  gl,\n  previousRenderState,\n  renderState,\n  previousPassState,\n  passState,\n  clear\n) {\n  if (previousRenderState !== renderState) {\n    // When a new render state is applied, instead of making WebGL calls for all the states or first\n    // comparing the states one-by-one with the previous state (basically a linear search), we take\n    // advantage of RenderState's immutability, and store a dynamically populated sparse data structure\n    // containing functions that make the minimum number of WebGL calls when transitioning from one state\n    // to the other.  In practice, this works well since state-to-state transitions generally only require a\n    // few WebGL calls, especially if commands are stored by state.\n    let funcs = renderState._applyFunctions[previousRenderState.id];\n    if (!defined(funcs)) {\n      funcs = createFuncs(previousRenderState, renderState);\n      renderState._applyFunctions[previousRenderState.id] = funcs;\n    }\n\n    const len = funcs.length;\n    for (let i = 0; i < len; ++i) {\n      funcs[i](gl, renderState);\n    }\n  }\n\n  const previousScissorTest = defined(previousPassState.scissorTest)\n    ? previousPassState.scissorTest\n    : previousRenderState.scissorTest;\n  const scissorTest = defined(passState.scissorTest)\n    ? passState.scissorTest\n    : renderState.scissorTest;\n\n  // Our scissor rectangle can get out of sync with the GL scissor rectangle on clears.\n  // Seems to be a problem only on ANGLE. See https://github.com/CesiumGS/cesium/issues/2994\n  if (previousScissorTest !== scissorTest || clear) {\n    applyScissorTest(gl, renderState, passState);\n  }\n\n  const previousBlendingEnabled = defined(previousPassState.blendingEnabled)\n    ? previousPassState.blendingEnabled\n    : previousRenderState.blending.enabled;\n  const blendingEnabled = defined(passState.blendingEnabled)\n    ? passState.blendingEnabled\n    : renderState.blending.enabled;\n  if (\n    previousBlendingEnabled !== blendingEnabled ||\n    (blendingEnabled && previousRenderState.blending !== renderState.blending)\n  ) {\n    applyBlending(gl, renderState, passState);\n  }\n\n  if (\n    previousRenderState !== renderState ||\n    previousPassState !== passState ||\n    previousPassState.context !== passState.context\n  ) {\n    applyViewport(gl, renderState, passState);\n  }\n};\n\nRenderState.getState = function (renderState) {\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(renderState)) {\n    throw new DeveloperError(\"renderState is required.\");\n  }\n  //>>includeEnd('debug');\n\n  return {\n    frontFace: renderState.frontFace,\n    cull: {\n      enabled: renderState.cull.enabled,\n      face: renderState.cull.face,\n    },\n    lineWidth: renderState.lineWidth,\n    polygonOffset: {\n      enabled: renderState.polygonOffset.enabled,\n      factor: renderState.polygonOffset.factor,\n      units: renderState.polygonOffset.units,\n    },\n    scissorTest: {\n      enabled: renderState.scissorTest.enabled,\n      rectangle: BoundingRectangle.clone(renderState.scissorTest.rectangle),\n    },\n    depthRange: {\n      near: renderState.depthRange.near,\n      far: renderState.depthRange.far,\n    },\n    depthTest: {\n      enabled: renderState.depthTest.enabled,\n      func: renderState.depthTest.func,\n    },\n    colorMask: {\n      red: renderState.colorMask.red,\n      green: renderState.colorMask.green,\n      blue: renderState.colorMask.blue,\n      alpha: renderState.colorMask.alpha,\n    },\n    depthMask: renderState.depthMask,\n    stencilMask: renderState.stencilMask,\n    blending: {\n      enabled: renderState.blending.enabled,\n      color: Color.clone(renderState.blending.color),\n      equationRgb: renderState.blending.equationRgb,\n      equationAlpha: renderState.blending.equationAlpha,\n      functionSourceRgb: renderState.blending.functionSourceRgb,\n      functionSourceAlpha: renderState.blending.functionSourceAlpha,\n      functionDestinationRgb: renderState.blending.functionDestinationRgb,\n      functionDestinationAlpha: renderState.blending.functionDestinationAlpha,\n    },\n    stencilTest: {\n      enabled: renderState.stencilTest.enabled,\n      frontFunction: renderState.stencilTest.frontFunction,\n      backFunction: renderState.stencilTest.backFunction,\n      reference: renderState.stencilTest.reference,\n      mask: renderState.stencilTest.mask,\n      frontOperation: {\n        fail: renderState.stencilTest.frontOperation.fail,\n        zFail: renderState.stencilTest.frontOperation.zFail,\n        zPass: renderState.stencilTest.frontOperation.zPass,\n      },\n      backOperation: {\n        fail: renderState.stencilTest.backOperation.fail,\n        zFail: renderState.stencilTest.backOperation.zFail,\n        zPass: renderState.stencilTest.backOperation.zPass,\n      },\n    },\n    sampleCoverage: {\n      enabled: renderState.sampleCoverage.enabled,\n      value: renderState.sampleCoverage.value,\n      invert: renderState.sampleCoverage.invert,\n    },\n    viewport: defined(renderState.viewport)\n      ? BoundingRectangle.clone(renderState.viewport)\n      : undefined,\n  };\n};\nexport default RenderState;\n","import Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport ContextLimits from \"./ContextLimits.js\";\nimport RenderbufferFormat from \"./RenderbufferFormat.js\";\n\n/**\n * @private\n */\nfunction Renderbuffer(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"options.context\", options.context);\n  //>>includeEnd('debug');\n\n  const context = options.context;\n  const gl = context._gl;\n  const maximumRenderbufferSize = ContextLimits.maximumRenderbufferSize;\n\n  const format = defaultValue(options.format, RenderbufferFormat.RGBA4);\n  const width = defined(options.width) ? options.width : gl.drawingBufferWidth;\n  const height = defined(options.height)\n    ? options.height\n    : gl.drawingBufferHeight;\n  const numSamples = defaultValue(options.numSamples, 1);\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!RenderbufferFormat.validate(format)) {\n    throw new DeveloperError(\"Invalid format.\");\n  }\n\n  Check.typeOf.number.greaterThan(\"width\", width, 0);\n\n  if (width > maximumRenderbufferSize) {\n    throw new DeveloperError(\n      `Width must be less than or equal to the maximum renderbuffer size (${maximumRenderbufferSize}).  Check maximumRenderbufferSize.`\n    );\n  }\n\n  Check.typeOf.number.greaterThan(\"height\", height, 0);\n\n  if (height > maximumRenderbufferSize) {\n    throw new DeveloperError(\n      `Height must be less than or equal to the maximum renderbuffer size (${maximumRenderbufferSize}).  Check maximumRenderbufferSize.`\n    );\n  }\n  //>>includeEnd('debug');\n\n  this._gl = gl;\n  this._format = format;\n  this._width = width;\n  this._height = height;\n  this._renderbuffer = this._gl.createRenderbuffer();\n\n  gl.bindRenderbuffer(gl.RENDERBUFFER, this._renderbuffer);\n  if (numSamples > 1) {\n    gl.renderbufferStorageMultisample(\n      gl.RENDERBUFFER,\n      numSamples,\n      format,\n      width,\n      height\n    );\n  } else {\n    gl.renderbufferStorage(gl.RENDERBUFFER, format, width, height);\n  }\n  gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n}\n\nObject.defineProperties(Renderbuffer.prototype, {\n  format: {\n    get: function () {\n      return this._format;\n    },\n  },\n  width: {\n    get: function () {\n      return this._width;\n    },\n  },\n  height: {\n    get: function () {\n      return this._height;\n    },\n  },\n});\n\nRenderbuffer.prototype._getRenderbuffer = function () {\n  return this._renderbuffer;\n};\n\nRenderbuffer.prototype.isDestroyed = function () {\n  return false;\n};\n\nRenderbuffer.prototype.destroy = function () {\n  this._gl.deleteRenderbuffer(this._renderbuffer);\n  return destroyObject(this);\n};\nexport default Renderbuffer;\n","import WebGLConstants from \"../Core/WebGLConstants.js\";\n\n/**\n * @private\n */\nconst RenderbufferFormat = {\n  RGBA4: WebGLConstants.RGBA4,\n  RGBA8: WebGLConstants.RGBA8,\n  RGBA16F: WebGLConstants.RGBA16F,\n  RGBA32F: WebGLConstants.RGBA32F,\n  RGB5_A1: WebGLConstants.RGB5_A1,\n  RGB565: WebGLConstants.RGB565,\n  DEPTH_COMPONENT16: WebGLConstants.DEPTH_COMPONENT16,\n  STENCIL_INDEX8: WebGLConstants.STENCIL_INDEX8,\n  DEPTH_STENCIL: WebGLConstants.DEPTH_STENCIL,\n  DEPTH24_STENCIL8: WebGLConstants.DEPTH24_STENCIL8,\n\n  validate: function (renderbufferFormat) {\n    return (\n      renderbufferFormat === RenderbufferFormat.RGBA4 ||\n      renderbufferFormat === RenderbufferFormat.RGBA8 ||\n      renderbufferFormat === RenderbufferFormat.RGBA16F ||\n      renderbufferFormat === RenderbufferFormat.RGBA32F ||\n      renderbufferFormat === RenderbufferFormat.RGB5_A1 ||\n      renderbufferFormat === RenderbufferFormat.RGB565 ||\n      renderbufferFormat === RenderbufferFormat.DEPTH_COMPONENT16 ||\n      renderbufferFormat === RenderbufferFormat.STENCIL_INDEX8 ||\n      renderbufferFormat === RenderbufferFormat.DEPTH_STENCIL ||\n      renderbufferFormat === RenderbufferFormat.DEPTH24_STENCIL8\n    );\n  },\n\n  getColorFormat: function (datatype) {\n    if (datatype === WebGLConstants.FLOAT) {\n      return RenderbufferFormat.RGBA32F;\n    } else if (datatype === WebGLConstants.HALF_FLOAT_OES) {\n      return RenderbufferFormat.RGBA16F;\n    }\n    return RenderbufferFormat.RGBA8;\n  },\n};\nexport default Object.freeze(RenderbufferFormat);\n","import Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport TextureMagnificationFilter from \"./TextureMagnificationFilter.js\";\nimport TextureMinificationFilter from \"./TextureMinificationFilter.js\";\nimport TextureWrap from \"./TextureWrap.js\";\n\n/**\n * @private\n */\nfunction Sampler(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  const wrapS = defaultValue(options.wrapS, TextureWrap.CLAMP_TO_EDGE);\n  const wrapT = defaultValue(options.wrapT, TextureWrap.CLAMP_TO_EDGE);\n  const minificationFilter = defaultValue(\n    options.minificationFilter,\n    TextureMinificationFilter.LINEAR\n  );\n  const magnificationFilter = defaultValue(\n    options.magnificationFilter,\n    TextureMagnificationFilter.LINEAR\n  );\n  const maximumAnisotropy = defined(options.maximumAnisotropy)\n    ? options.maximumAnisotropy\n    : 1.0;\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!TextureWrap.validate(wrapS)) {\n    throw new DeveloperError(\"Invalid sampler.wrapS.\");\n  }\n\n  if (!TextureWrap.validate(wrapT)) {\n    throw new DeveloperError(\"Invalid sampler.wrapT.\");\n  }\n\n  if (!TextureMinificationFilter.validate(minificationFilter)) {\n    throw new DeveloperError(\"Invalid sampler.minificationFilter.\");\n  }\n\n  if (!TextureMagnificationFilter.validate(magnificationFilter)) {\n    throw new DeveloperError(\"Invalid sampler.magnificationFilter.\");\n  }\n\n  Check.typeOf.number.greaterThanOrEquals(\n    \"maximumAnisotropy\",\n    maximumAnisotropy,\n    1.0\n  );\n  //>>includeEnd('debug');\n\n  this._wrapS = wrapS;\n  this._wrapT = wrapT;\n  this._minificationFilter = minificationFilter;\n  this._magnificationFilter = magnificationFilter;\n  this._maximumAnisotropy = maximumAnisotropy;\n}\n\nObject.defineProperties(Sampler.prototype, {\n  wrapS: {\n    get: function () {\n      return this._wrapS;\n    },\n  },\n  wrapT: {\n    get: function () {\n      return this._wrapT;\n    },\n  },\n  minificationFilter: {\n    get: function () {\n      return this._minificationFilter;\n    },\n  },\n  magnificationFilter: {\n    get: function () {\n      return this._magnificationFilter;\n    },\n  },\n  maximumAnisotropy: {\n    get: function () {\n      return this._maximumAnisotropy;\n    },\n  },\n});\n\nSampler.equals = function (left, right) {\n  return (\n    left === right ||\n    (defined(left) &&\n      defined(right) &&\n      left._wrapS === right._wrapS &&\n      left._wrapT === right._wrapT &&\n      left._minificationFilter === right._minificationFilter &&\n      left._magnificationFilter === right._magnificationFilter &&\n      left._maximumAnisotropy === right._maximumAnisotropy)\n  );\n};\n\nSampler.NEAREST = Object.freeze(\n  new Sampler({\n    wrapS: TextureWrap.CLAMP_TO_EDGE,\n    wrapT: TextureWrap.CLAMP_TO_EDGE,\n    minificationFilter: TextureMinificationFilter.NEAREST,\n    magnificationFilter: TextureMagnificationFilter.NEAREST,\n  })\n);\nexport default Sampler;\n","import Check from \"../Core/Check.js\";\nimport clone from \"../Core/clone.js\";\nimport defined from \"../Core/defined.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport ShaderDestination from \"./ShaderDestination.js\";\nimport ShaderProgram from \"./ShaderProgram.js\";\nimport ShaderSource from \"./ShaderSource.js\";\nimport ShaderStruct from \"./ShaderStruct.js\";\nimport ShaderFunction from \"./ShaderFunction.js\";\n\n/**\n * An object that makes it easier to build the text of a {@link ShaderProgram}. This tracks GLSL code for both the vertex shader and the fragment shader.\n * <p>\n * For vertex shaders, the shader builder tracks a list of <code>#defines</code>,\n * a list of attributes, a list of uniforms, and a list of shader lines. It also\n * tracks the location of each attribute so the caller can easily build the {@link VertexArray}\n * </p>\n * <p>\n * For fragment shaders, the shader builder tracks a list of <code>#defines</code>,\n * a list of attributes, a list of uniforms, and a list of shader lines.\n * </p>\n *\n * @alias ShaderBuilder\n * @constructor\n *\n * @example\n * const shaderBuilder = new ShaderBuilder();\n * shaderBuilder.addDefine(\"SOLID_COLOR\", undefined, ShaderDestination.FRAGMENT);\n * shaderBuilder.addUniform(\"vec3\", \"u_color\", ShaderDestination.FRAGMENT);\n * shaderBuilder.addVarying(\"vec3\", v_color\");\n * // These locations can be used when creating the VertexArray\n * const positionLocation = shaderBuilder.addPositionAttribute(\"vec3\", \"a_position\");\n * const colorLocation = shaderBuilder.addAttribute(\"vec3\", \"a_color\");\n * shaderBuilder.addVertexLines([\n *  \"void main()\",\n *  \"{\",\n *  \"    v_color = a_color;\",\n *  \"    gl_Position = vec4(a_position, 1.0);\",\n *  \"}\"\n * ]);\n * shaderBuilder.addFragmentLines([\n *  \"void main()\",\n *  \"{\",\n *  \"    #ifdef SOLID_COLOR\",\n *  \"    gl_FragColor = vec4(u_color, 1.0);\",\n *  \"    #else\",\n *  \"    gl_FragColor = vec4(v_color, 1.0);\",\n *  \"    #endif\",\n *  \"}\"\n * ]);\n * const shaderProgram = shaderBuilder.build(context);\n *\n * @private\n */\nexport default function ShaderBuilder() {\n  // Some WebGL implementations require attribute 0 to always\n  // be active, so the position attribute is tracked separately\n  this._positionAttributeLine = undefined;\n  this._nextAttributeLocation = 1;\n  this._attributeLocations = {};\n  this._attributeLines = [];\n\n  // Dynamically-generated structs and functions\n  // these are dictionaries of id -> ShaderStruct or ShaderFunction respectively\n  this._structs = {};\n  this._functions = {};\n\n  this._vertexShaderParts = {\n    defineLines: [],\n    uniformLines: [],\n    shaderLines: [],\n    varyingLines: [],\n    // identifiers of structs/functions to include, listed in insertion order\n    structIds: [],\n    functionIds: [],\n  };\n  this._fragmentShaderParts = {\n    defineLines: [],\n    uniformLines: [],\n    shaderLines: [],\n    varyingLines: [],\n    // identifiers of structs/functions to include, listed in insertion order\n    structIds: [],\n    functionIds: [],\n  };\n}\n\nObject.defineProperties(ShaderBuilder.prototype, {\n  /**\n   * Get a dictionary of attribute names to the integer location in\n   * the vertex shader.\n   *\n   * @memberof ShaderBuilder.prototype\n   * @type {Object.<String, Number>}\n   * @readonly\n   * @private\n   */\n  attributeLocations: {\n    get: function () {\n      return this._attributeLocations;\n    },\n  },\n});\n\n/**\n * Add a <code>#define</code> macro to one or both of the shaders. These lines\n * will appear at the top of the final shader source.\n *\n * @param {String} identifier An identifier for the macro. Identifiers must use uppercase letters with underscores to be consistent with Cesium's style guide.\n * @param {String} [value] The value of the macro. If undefined, the define will not include a value. The value will be converted to GLSL code via <code>toString()</code>\n * @param {ShaderDestination} [destination=ShaderDestination.BOTH] Whether the define appears in the vertex shader, the fragment shader, or both.\n *\n * @example\n * // creates the line \"#define ENABLE_LIGHTING\" in both shaders\n * shaderBuilder.addDefine(\"ENABLE_LIGHTING\");\n * // creates the line \"#define PI 3.141592\" in the fragment shader\n * shaderBuilder.addDefine(\"PI\", 3.141593, ShaderDestination.FRAGMENT);\n */\nShaderBuilder.prototype.addDefine = function (identifier, value, destination) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.string(\"identifier\", identifier);\n  //>>includeEnd('debug');\n\n  destination = defaultValue(destination, ShaderDestination.BOTH);\n\n  // The ShaderSource created in build() will add the #define part\n  let line = identifier;\n  if (defined(value)) {\n    line += ` ${value.toString()}`;\n  }\n\n  if (ShaderDestination.includesVertexShader(destination)) {\n    this._vertexShaderParts.defineLines.push(line);\n  }\n\n  if (ShaderDestination.includesFragmentShader(destination)) {\n    this._fragmentShaderParts.defineLines.push(line);\n  }\n};\n\n/**\n * Add a new dynamically-generated struct to the shader\n * @param {String} structId A unique ID to identify this struct in {@link ShaderBuilder#addStructField}\n * @param {String} structName The name of the struct as it will appear in the shader.\n * @param {ShaderDestination} destination Whether the struct will appear in the vertex shader, the fragment shader, or both.\n *\n * @example\n * // generates the following struct in the fragment shader\n * // struct TestStruct\n * // {\n * // };\n * shaderBuilder.addStruct(\"testStructId\", \"TestStruct\", ShaderDestination.FRAGMENT);\n */\nShaderBuilder.prototype.addStruct = function (\n  structId,\n  structName,\n  destination\n) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.string(\"structId\", structId);\n  Check.typeOf.string(\"structName\", structName);\n  Check.typeOf.number(\"destination\", destination);\n  //>>includeEnd('debug');\n  this._structs[structId] = new ShaderStruct(structName);\n  if (ShaderDestination.includesVertexShader(destination)) {\n    this._vertexShaderParts.structIds.push(structId);\n  }\n\n  if (ShaderDestination.includesFragmentShader(destination)) {\n    this._fragmentShaderParts.structIds.push(structId);\n  }\n};\n\n/**\n * Add a field to a dynamically-generated struct.\n * @param {String} structId The ID of the struct. This must be created first with {@link ShaderBuilder#addStruct}\n * @param {String} type The GLSL type of the field\n * @param {String} identifier The identifier of the field.\n *\n * @example\n * // generates the following struct in the fragment shader\n * // struct TestStruct\n * // {\n * //    float minimum;\n * //    float maximum;\n * // };\n * shaderBuilder.addStruct(\"testStructId\", \"TestStruct\", ShaderDestination.FRAGMENT);\n * shaderBuilder.addStructField(\"testStructId\", \"float\", \"maximum\");\n * shaderBuilder.addStructField(\"testStructId\", \"float\", \"minimum\");\n */\nShaderBuilder.prototype.addStructField = function (structId, type, identifier) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.string(\"structId\", structId);\n  Check.typeOf.string(\"type\", type);\n  Check.typeOf.string(\"identifier\", identifier);\n  //>>includeEnd('debug');\n  this._structs[structId].addField(type, identifier);\n};\n\n/**\n * Add a new dynamically-generated function to the shader.\n * @param {String} functionName The name of the function. This will be used to identify the function in {@link ShaderBuilder#addFunctionLines}.\n * @param {String} signature The full signature of the function as it will appear in the shader. Do not include the curly braces.\n * @param {ShaderDestination} destination Whether the struct will appear in the vertex shader, the fragment shader, or both.\n * @example\n * // generates the following function in the vertex shader\n * // vec3 testFunction(float parameter)\n * // {\n * // }\n * shaderBuilder.addStruct(\"testFunction\", \"vec3 testFunction(float parameter)\", ShaderDestination.VERTEX);\n */\nShaderBuilder.prototype.addFunction = function (\n  functionName,\n  signature,\n  destination\n) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.string(\"functionName\", functionName);\n  Check.typeOf.string(\"signature\", signature);\n  Check.typeOf.number(\"destination\", destination);\n  //>>includeEnd('debug');\n  this._functions[functionName] = new ShaderFunction(signature);\n\n  if (ShaderDestination.includesVertexShader(destination)) {\n    this._vertexShaderParts.functionIds.push(functionName);\n  }\n\n  if (ShaderDestination.includesFragmentShader(destination)) {\n    this._fragmentShaderParts.functionIds.push(functionName);\n  }\n};\n\n/**\n * Add lines to a dynamically-generated function\n * @param {String} functionName The name of the function. This must be created beforehand using {@link ShaderBuilder#addFunction}\n * @param {String[]} lines An array of lines of GLSL code to add to the function body. Do not include any preceding or ending whitespace, but do include the semicolon for each line.\n *\n * @example\n * // generates the following function in the vertex shader\n * // vec3 testFunction(float parameter)\n * // {\n * //   float signed = 2.0 * parameter - 1.0;\n * //   return vec3(signed, 0.0, 0.0);\n * // }\n * shaderBuilder.addStruct(\"testFunction\", \"vec3 testFunction(float parameter)\", ShaderDestination.VERTEX);\n * shaderBuilder.addFunctionLines(\"testFunction\", [\n *   \"float signed = 2.0 * parameter - 1.0;\",\n *   \"return vec3(parameter);\"\n * ]);\n */\nShaderBuilder.prototype.addFunctionLines = function (functionName, lines) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.string(\"functionName\", functionName);\n  Check.typeOf.object(\"lines\", lines);\n  //>>includeEnd('debug');\n  this._functions[functionName].addLines(lines);\n};\n\n/**\n * Add a uniform declaration to one or both of the shaders. These lines\n * will appear grouped near the top of the final shader source.\n *\n * @param {String} type The GLSL type of the uniform.\n * @param {String} identifier An identifier for the uniform. Identifiers must begin with <code>u_</code> to be consistent with Cesium's style guide.\n * @param {ShaderDestination} [destination=ShaderDestination.BOTH] Whether the uniform appears in the vertex shader, the fragment shader, or both.\n *\n * @example\n * // creates the line \"uniform vec3 u_resolution;\"\n * shaderBuilder.addUniform(\"vec3\", \"u_resolution\", ShaderDestination.FRAGMENT);\n * // creates the line \"uniform float u_time;\" in both shaders\n * shaderBuilder.addUniform(\"float\", \"u_time\", ShaderDestination.BOTH);\n */\nShaderBuilder.prototype.addUniform = function (type, identifier, destination) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.string(\"type\", type);\n  Check.typeOf.string(\"identifier\", identifier);\n  //>>includeEnd('debug');\n\n  destination = defaultValue(destination, ShaderDestination.BOTH);\n  const line = `uniform ${type} ${identifier};`;\n\n  if (ShaderDestination.includesVertexShader(destination)) {\n    this._vertexShaderParts.uniformLines.push(line);\n  }\n\n  if (ShaderDestination.includesFragmentShader(destination)) {\n    this._fragmentShaderParts.uniformLines.push(line);\n  }\n};\n\n/**\n * Add a position attribute declaration to the vertex shader. These lines\n * will appear grouped near the top of the final shader source.\n * <p>\n * Some WebGL implementations require attribute 0 to be enabled, so this is\n * reserved for the position attribute. For all other attributes, see\n * {@link ShaderBuilder#addAttribute}\n * </p>\n *\n * @param {String} type The GLSL type of the attribute\n * @param {String} identifier An identifier for the attribute. Identifiers must begin with <code>a_</code> to be consistent with Cesium's style guide.\n * @return {Number} The integer location of the attribute. This location can be used when creating attributes for a {@link VertexArray}. This will always be 0.\n *\n * @example\n * // creates the line \"attribute vec3 a_position;\"\n * shaderBuilder.setPositionAttribute(\"vec3\", \"a_position\");\n */\nShaderBuilder.prototype.setPositionAttribute = function (type, identifier) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.string(\"type\", type);\n  Check.typeOf.string(\"identifier\", identifier);\n\n  if (defined(this._positionAttributeLine)) {\n    throw new DeveloperError(\n      \"setPositionAttribute() must be called exactly once for the attribute used for gl_Position. For other attributes, use addAttribute()\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  this._positionAttributeLine = `attribute ${type} ${identifier};`;\n\n  // Some WebGL implementations require attribute 0 to always be active, so\n  // this builder assumes the position will always go in location 0\n  this._attributeLocations[identifier] = 0;\n  return 0;\n};\n\n/**\n * Add an attribute declaration to the vertex shader. These lines\n * will appear grouped near the top of the final shader source.\n * <p>\n * Some WebGL implementations require attribute 0 to be enabled, so this is\n * reserved for the position attribute. See {@link ShaderBuilder#setPositionAttribute}\n * </p>\n *\n * @param {String} type The GLSL type of the attribute\n * @param {String} identifier An identifier for the attribute. Identifiers must begin with <code>a_</code> to be consistent with Cesium's style guide.\n * @return {Number} The integer location of the attribute. This location can be used when creating attributes for a {@link VertexArray}\n *\n * @example\n * // creates the line \"attribute vec2 a_texCoord0;\" in the vertex shader\n * shaderBuilder.addAttribute(\"vec2\", \"a_texCoord0\");\n */\nShaderBuilder.prototype.addAttribute = function (type, identifier) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.string(\"type\", type);\n  Check.typeOf.string(\"identifier\", identifier);\n  //>>includeEnd('debug');\n\n  const line = `attribute ${type} ${identifier};`;\n  this._attributeLines.push(line);\n\n  const location = this._nextAttributeLocation;\n  this._attributeLocations[identifier] = location;\n\n  // Most attributes only require a single attribute location, but matrices\n  // require more.\n  this._nextAttributeLocation += getAttributeLocationCount(type);\n  return location;\n};\n\n/**\n * Add a varying declaration to both the vertex and fragment shaders.\n *\n * @param {String} type The GLSL type of the varying\n * @param {String} identifier An identifier for the varying. Identifiers must begin with <code>v_</code> to be consistent with Cesium's style guide.\n *\n * @example\n * // creates the line \"varying vec3 v_color;\" in both shaders\n * shaderBuilder.addVarying(\"vec3\", \"v_color\");\n */\nShaderBuilder.prototype.addVarying = function (type, identifier) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.string(\"type\", type);\n  Check.typeOf.string(\"identifier\", identifier);\n  //>>includeEnd('debug');\n\n  const line = `varying ${type} ${identifier};`;\n  this._vertexShaderParts.varyingLines.push(line);\n  this._fragmentShaderParts.varyingLines.push(line);\n};\n\n/**\n * Appends lines of GLSL code to the vertex shader\n *\n * @param {String[]} lines The lines to add to the end of the vertex shader source\n *\n * @example\n * shaderBuilder.addVertexLines([\n *  \"void main()\",\n *  \"{\",\n *  \"    v_color = a_color;\",\n *  \"    gl_Position = vec4(a_position, 1.0);\",\n *  \"}\"\n * ]);\n */\nShaderBuilder.prototype.addVertexLines = function (lines) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"lines\", lines);\n  //>>includeEnd('debug');\n\n  Array.prototype.push.apply(this._vertexShaderParts.shaderLines, lines);\n};\n\n/**\n * Appends lines of GLSL code to the fragment shader\n *\n * @param {String[]} lines The lines to add to the end of the fragment shader source\n *\n * @example\n * shaderBuilder.addFragmentLines([\n *  \"void main()\",\n *  \"{\",\n *  \"    #ifdef SOLID_COLOR\",\n *  \"    gl_FragColor = vec4(u_color, 1.0);\",\n *  \"    #else\",\n *  \"    gl_FragColor = vec4(v_color, 1.0);\",\n *  \"    #endif\",\n *  \"}\"\n * ]);\n */\nShaderBuilder.prototype.addFragmentLines = function (lines) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"lines\", lines);\n  //>>includeEnd('debug');\n  Array.prototype.push.apply(this._fragmentShaderParts.shaderLines, lines);\n};\n\n/**\n * Builds the {@link ShaderProgram} from the pieces added by the other methods.\n * Call this one time at the end of modifying the shader through the other\n * methods in this class.\n *\n * @param {Context} context The context to use for creating the shader.\n * @return {ShaderProgram} A shader program to use for rendering.\n *\n * @example\n * const shaderProgram = shaderBuilder.buildShaderProgram(context);\n */\nShaderBuilder.prototype.buildShaderProgram = function (context) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.object(\"context\", context);\n  //>>includeEnd('debug');\n\n  const positionAttribute = defined(this._positionAttributeLine)\n    ? [this._positionAttributeLine]\n    : [];\n\n  const structLines = generateStructLines(this);\n  const functionLines = generateFunctionLines(this);\n\n  // Lines are joined here so the ShaderSource\n  // generates a single #line 0 directive\n  const vertexLines = positionAttribute\n    .concat(\n      this._attributeLines,\n      this._vertexShaderParts.uniformLines,\n      this._vertexShaderParts.varyingLines,\n      structLines.vertexLines,\n      functionLines.vertexLines,\n      this._vertexShaderParts.shaderLines\n    )\n    .join(\"\\n\");\n  const vertexShaderSource = new ShaderSource({\n    defines: this._vertexShaderParts.defineLines,\n    sources: [vertexLines],\n  });\n\n  const fragmentLines = this._fragmentShaderParts.uniformLines\n    .concat(\n      this._fragmentShaderParts.varyingLines,\n      structLines.fragmentLines,\n      functionLines.fragmentLines,\n      this._fragmentShaderParts.shaderLines\n    )\n    .join(\"\\n\");\n  const fragmentShaderSource = new ShaderSource({\n    defines: this._fragmentShaderParts.defineLines,\n    sources: [fragmentLines],\n  });\n\n  return ShaderProgram.fromCache({\n    context: context,\n    vertexShaderSource: vertexShaderSource,\n    fragmentShaderSource: fragmentShaderSource,\n    attributeLocations: this._attributeLocations,\n  });\n};\n\nShaderBuilder.prototype.clone = function () {\n  return clone(this, true);\n};\n\nfunction generateStructLines(shaderBuilder) {\n  const vertexLines = [];\n  const fragmentLines = [];\n\n  let i;\n  let structIds = shaderBuilder._vertexShaderParts.structIds;\n  let structId;\n  let struct;\n  let structLines;\n  for (i = 0; i < structIds.length; i++) {\n    structId = structIds[i];\n    struct = shaderBuilder._structs[structId];\n    structLines = struct.generateGlslLines();\n    vertexLines.push.apply(vertexLines, structLines);\n  }\n\n  structIds = shaderBuilder._fragmentShaderParts.structIds;\n  for (i = 0; i < structIds.length; i++) {\n    structId = structIds[i];\n    struct = shaderBuilder._structs[structId];\n    structLines = struct.generateGlslLines();\n    fragmentLines.push.apply(fragmentLines, structLines);\n  }\n\n  return {\n    vertexLines: vertexLines,\n    fragmentLines: fragmentLines,\n  };\n}\n\nfunction getAttributeLocationCount(glslType) {\n  switch (glslType) {\n    case \"mat2\":\n      return 2;\n    case \"mat3\":\n      return 3;\n    case \"mat4\":\n      return 4;\n    default:\n      return 1;\n  }\n}\n\nfunction generateFunctionLines(shaderBuilder) {\n  const vertexLines = [];\n  const fragmentLines = [];\n\n  let i;\n  let functionIds = shaderBuilder._vertexShaderParts.functionIds;\n  let functionId;\n  let func;\n  let functionLines;\n  for (i = 0; i < functionIds.length; i++) {\n    functionId = functionIds[i];\n    func = shaderBuilder._functions[functionId];\n    functionLines = func.generateGlslLines();\n    vertexLines.push.apply(vertexLines, functionLines);\n  }\n\n  functionIds = shaderBuilder._fragmentShaderParts.functionIds;\n  for (i = 0; i < functionIds.length; i++) {\n    functionId = functionIds[i];\n    func = shaderBuilder._functions[functionId];\n    functionLines = func.generateGlslLines();\n    fragmentLines.push.apply(fragmentLines, functionLines);\n  }\n\n  return {\n    vertexLines: vertexLines,\n    fragmentLines: fragmentLines,\n  };\n}\n","import defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport ShaderProgram from \"./ShaderProgram.js\";\nimport ShaderSource from \"./ShaderSource.js\";\n\n/**\n * @private\n */\nfunction ShaderCache(context) {\n  this._context = context;\n  this._shaders = {};\n  this._numberOfShaders = 0;\n  this._shadersToRelease = {};\n}\n\nObject.defineProperties(ShaderCache.prototype, {\n  numberOfShaders: {\n    get: function () {\n      return this._numberOfShaders;\n    },\n  },\n});\n\n/**\n     * Returns a shader program from the cache, or creates and caches a new shader program,\n     * given the GLSL vertex and fragment shader source and attribute locations.\n     * <p>\n     * The difference between this and {@link ShaderCache#getShaderProgram}, is this is used to\n     * replace an existing reference to a shader program, which is passed as the first argument.\n     * </p>\n     *\n     * @param {Object} options Object with the following properties:\n     * @param {ShaderProgram} [options.shaderProgram] The shader program that is being reassigned.\n     * @param {String|ShaderSource} options.vertexShaderSource The GLSL source for the vertex shader.\n     * @param {String|ShaderSource} options.fragmentShaderSource The GLSL source for the fragment shader.\n     * @param {Object} options.attributeLocations Indices for the attribute inputs to the vertex shader.\n\n     * @returns {ShaderProgram} The cached or newly created shader program.\n     *\n     *\n     * @example\n     * this._shaderProgram = context.shaderCache.replaceShaderProgram({\n     *     shaderProgram : this._shaderProgram,\n     *     vertexShaderSource : vs,\n     *     fragmentShaderSource : fs,\n     *     attributeLocations : attributeLocations\n     * });\n     *\n     * @see ShaderCache#getShaderProgram\n     */\nShaderCache.prototype.replaceShaderProgram = function (options) {\n  if (defined(options.shaderProgram)) {\n    options.shaderProgram.destroy();\n  }\n\n  return this.getShaderProgram(options);\n};\n\n/**\n * Returns a shader program from the cache, or creates and caches a new shader program,\n * given the GLSL vertex and fragment shader source and attribute locations.\n *\n * @param {Object} options Object with the following properties:\n * @param {String|ShaderSource} options.vertexShaderSource The GLSL source for the vertex shader.\n * @param {String|ShaderSource} options.fragmentShaderSource The GLSL source for the fragment shader.\n * @param {Object} options.attributeLocations Indices for the attribute inputs to the vertex shader.\n *\n * @returns {ShaderProgram} The cached or newly created shader program.\n */\nShaderCache.prototype.getShaderProgram = function (options) {\n  // convert shaders which are provided as strings into ShaderSource objects\n  // because ShaderSource handles all the automatic including of built-in functions, etc.\n\n  let vertexShaderSource = options.vertexShaderSource;\n  let fragmentShaderSource = options.fragmentShaderSource;\n  const attributeLocations = options.attributeLocations;\n\n  if (typeof vertexShaderSource === \"string\") {\n    vertexShaderSource = new ShaderSource({\n      sources: [vertexShaderSource],\n    });\n  }\n\n  if (typeof fragmentShaderSource === \"string\") {\n    fragmentShaderSource = new ShaderSource({\n      sources: [fragmentShaderSource],\n    });\n  }\n\n  const vertexShaderText = vertexShaderSource.createCombinedVertexShader(\n    this._context\n  );\n  const fragmentShaderText = fragmentShaderSource.createCombinedFragmentShader(\n    this._context\n  );\n\n  const keyword =\n    vertexShaderText + fragmentShaderText + JSON.stringify(attributeLocations);\n  let cachedShader;\n\n  if (defined(this._shaders[keyword])) {\n    cachedShader = this._shaders[keyword];\n\n    // No longer want to release this if it was previously released.\n    delete this._shadersToRelease[keyword];\n  } else {\n    const context = this._context;\n    const shaderProgram = new ShaderProgram({\n      gl: context._gl,\n      logShaderCompilation: context.logShaderCompilation,\n      debugShaders: context.debugShaders,\n      vertexShaderSource: vertexShaderSource,\n      vertexShaderText: vertexShaderText,\n      fragmentShaderSource: fragmentShaderSource,\n      fragmentShaderText: fragmentShaderText,\n      attributeLocations: attributeLocations,\n    });\n\n    cachedShader = {\n      cache: this,\n      shaderProgram: shaderProgram,\n      keyword: keyword,\n      derivedKeywords: [],\n      count: 0,\n    };\n\n    // A shader can't be in more than one cache.\n    shaderProgram._cachedShader = cachedShader;\n    this._shaders[keyword] = cachedShader;\n    ++this._numberOfShaders;\n  }\n\n  ++cachedShader.count;\n  return cachedShader.shaderProgram;\n};\n\nShaderCache.prototype.replaceDerivedShaderProgram = function (\n  shaderProgram,\n  keyword,\n  options\n) {\n  const cachedShader = shaderProgram._cachedShader;\n  const derivedKeyword = keyword + cachedShader.keyword;\n  const cachedDerivedShader = this._shaders[derivedKeyword];\n  if (defined(cachedDerivedShader)) {\n    destroyShader(this, cachedDerivedShader);\n    const index = cachedShader.derivedKeywords.indexOf(keyword);\n    if (index > -1) {\n      cachedShader.derivedKeywords.splice(index, 1);\n    }\n  }\n\n  return this.createDerivedShaderProgram(shaderProgram, keyword, options);\n};\n\nShaderCache.prototype.getDerivedShaderProgram = function (\n  shaderProgram,\n  keyword\n) {\n  const cachedShader = shaderProgram._cachedShader;\n  const derivedKeyword = keyword + cachedShader.keyword;\n  const cachedDerivedShader = this._shaders[derivedKeyword];\n  if (!defined(cachedDerivedShader)) {\n    return undefined;\n  }\n\n  return cachedDerivedShader.shaderProgram;\n};\n\nShaderCache.prototype.createDerivedShaderProgram = function (\n  shaderProgram,\n  keyword,\n  options\n) {\n  const cachedShader = shaderProgram._cachedShader;\n  const derivedKeyword = keyword + cachedShader.keyword;\n\n  let vertexShaderSource = options.vertexShaderSource;\n  let fragmentShaderSource = options.fragmentShaderSource;\n  const attributeLocations = options.attributeLocations;\n\n  if (typeof vertexShaderSource === \"string\") {\n    vertexShaderSource = new ShaderSource({\n      sources: [vertexShaderSource],\n    });\n  }\n\n  if (typeof fragmentShaderSource === \"string\") {\n    fragmentShaderSource = new ShaderSource({\n      sources: [fragmentShaderSource],\n    });\n  }\n\n  const context = this._context;\n\n  const vertexShaderText = vertexShaderSource.createCombinedVertexShader(\n    context\n  );\n  const fragmentShaderText = fragmentShaderSource.createCombinedFragmentShader(\n    context\n  );\n\n  const derivedShaderProgram = new ShaderProgram({\n    gl: context._gl,\n    logShaderCompilation: context.logShaderCompilation,\n    debugShaders: context.debugShaders,\n    vertexShaderSource: vertexShaderSource,\n    vertexShaderText: vertexShaderText,\n    fragmentShaderSource: fragmentShaderSource,\n    fragmentShaderText: fragmentShaderText,\n    attributeLocations: attributeLocations,\n  });\n\n  const derivedCachedShader = {\n    cache: this,\n    shaderProgram: derivedShaderProgram,\n    keyword: derivedKeyword,\n    derivedKeywords: [],\n    count: 0,\n  };\n\n  cachedShader.derivedKeywords.push(keyword);\n  derivedShaderProgram._cachedShader = derivedCachedShader;\n  this._shaders[derivedKeyword] = derivedCachedShader;\n  return derivedShaderProgram;\n};\n\nfunction destroyShader(cache, cachedShader) {\n  const derivedKeywords = cachedShader.derivedKeywords;\n  const length = derivedKeywords.length;\n  for (let i = 0; i < length; ++i) {\n    const keyword = derivedKeywords[i] + cachedShader.keyword;\n    const derivedCachedShader = cache._shaders[keyword];\n    destroyShader(cache, derivedCachedShader);\n  }\n\n  delete cache._shaders[cachedShader.keyword];\n  cachedShader.shaderProgram.finalDestroy();\n}\n\nShaderCache.prototype.destroyReleasedShaderPrograms = function () {\n  const shadersToRelease = this._shadersToRelease;\n\n  for (const keyword in shadersToRelease) {\n    if (shadersToRelease.hasOwnProperty(keyword)) {\n      const cachedShader = shadersToRelease[keyword];\n      destroyShader(this, cachedShader);\n      --this._numberOfShaders;\n    }\n  }\n\n  this._shadersToRelease = {};\n};\n\nShaderCache.prototype.releaseShaderProgram = function (shaderProgram) {\n  if (defined(shaderProgram)) {\n    const cachedShader = shaderProgram._cachedShader;\n    if (cachedShader && --cachedShader.count === 0) {\n      this._shadersToRelease[cachedShader.keyword] = cachedShader;\n    }\n  }\n};\n\nShaderCache.prototype.isDestroyed = function () {\n  return false;\n};\n\nShaderCache.prototype.destroy = function () {\n  const shaders = this._shaders;\n  for (const keyword in shaders) {\n    if (shaders.hasOwnProperty(keyword)) {\n      shaders[keyword].shaderProgram.finalDestroy();\n    }\n  }\n  return destroyObject(this);\n};\nexport default ShaderCache;\n","import Check from \"../Core/Check.js\";\n\n/**\n * An enum describing whether a variable should be added to the\n * vertex shader, the fragment shader, or both.\n *\n * @private\n */\nconst ShaderDestination = {\n  VERTEX: 0,\n  FRAGMENT: 1,\n  BOTH: 2,\n};\n\n/**\n * Check if a variable should be included in the vertex shader.\n *\n * @param {ShaderDestination} destination The ShaderDestination to check\n * @return {Boolean} <code>true</code> if the variable appears in the vertex shader, or <code>false</code> otherwise\n * @private\n */\nShaderDestination.includesVertexShader = function (destination) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.number(\"destination\", destination);\n  //>>includeEnd('debug');\n\n  return (\n    destination === ShaderDestination.VERTEX ||\n    destination === ShaderDestination.BOTH\n  );\n};\n\n/**\n * Check if a variable should be included in the vertex shader.\n *\n * @param {ShaderDestination} destination The ShaderDestination to check\n * @return {Boolean} <code>true</code> if the variable appears in the vertex shader, or <code>false</code> otherwise\n * @private\n */\nShaderDestination.includesFragmentShader = function (destination) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.typeOf.number(\"destination\", destination);\n  //>>includeEnd('debug');\n  //\n  return (\n    destination === ShaderDestination.FRAGMENT ||\n    destination === ShaderDestination.BOTH\n  );\n};\n\nexport default Object.freeze(ShaderDestination);\n","/**\n * A utility for dynamically-generating a GLSL function\n *\n * @alias ShaderFunction\n * @constructor\n *\n * @see {@link ShaderBuilder}\n * @param {String} signature The full signature of the function as it will appear in the shader. Do not include the curly braces.\n * @example\n * // generate the following function\n * //\n * // void assignVaryings(vec3 position)\n * // {\n * //    v_positionEC = (czm_modelView * vec4(a_position, 1.0)).xyz;\n * //    v_texCoord = a_texCoord;\n * // }\n * const signature = \"void assignVaryings(vec3 position)\";\n * const func = new ShaderFunction(signature);\n * func.addLine(\"v_positionEC = (czm_modelView * vec4(a_position, 1.0)).xyz;\");\n * func.addLine(\"v_texCoord = a_texCoord;\");\n * const generatedLines = func.generateGlslLines();\n *\n * @private\n */\nexport default function ShaderFunction(signature) {\n  this.signature = signature;\n  this.body = [];\n}\n\n/**\n * Add an array of lines to the body of the function\n * @param {String[]} lines An array of lines of GLSL code to add to the function body. Do not include any preceding or ending whitespace, but do include the semicolon for each line.\n */\nShaderFunction.prototype.addLines = function (lines) {\n  const paddedLines = lines.map(function (line) {\n    return `    ${line}`;\n  });\n  Array.prototype.push.apply(this.body, paddedLines);\n};\n\n/**\n * Generate lines of GLSL code for use with {@link ShaderBuilder}\n * @return {String[]}\n */\nShaderFunction.prototype.generateGlslLines = function () {\n  return [].concat(this.signature, \"{\", this.body, \"}\");\n};\n","import Check from \"../Core/Check.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\nimport AutomaticUniforms from \"./AutomaticUniforms.js\";\nimport ContextLimits from \"./ContextLimits.js\";\nimport createUniform from \"./createUniform.js\";\nimport createUniformArray from \"./createUniformArray.js\";\n\nlet nextShaderProgramId = 0;\n\n/**\n * @private\n */\nfunction ShaderProgram(options) {\n  let vertexShaderText = options.vertexShaderText;\n  let fragmentShaderText = options.fragmentShaderText;\n\n  if (typeof spector !== \"undefined\") {\n    // The #line statements common in Cesium shaders interfere with the ability of the\n    // SpectorJS to show errors on the correct line. So remove them when SpectorJS\n    // is active.\n    vertexShaderText = vertexShaderText.replace(/^#line/gm, \"//#line\");\n    fragmentShaderText = fragmentShaderText.replace(/^#line/gm, \"//#line\");\n  }\n\n  const modifiedFS = handleUniformPrecisionMismatches(\n    vertexShaderText,\n    fragmentShaderText\n  );\n\n  this._gl = options.gl;\n  this._logShaderCompilation = options.logShaderCompilation;\n  this._debugShaders = options.debugShaders;\n  this._attributeLocations = options.attributeLocations;\n\n  this._program = undefined;\n  this._numberOfVertexAttributes = undefined;\n  this._vertexAttributes = undefined;\n  this._uniformsByName = undefined;\n  this._uniforms = undefined;\n  this._automaticUniforms = undefined;\n  this._manualUniforms = undefined;\n  this._duplicateUniformNames = modifiedFS.duplicateUniformNames;\n  this._cachedShader = undefined; // Used by ShaderCache\n\n  /**\n   * @private\n   */\n  this.maximumTextureUnitIndex = undefined;\n\n  this._vertexShaderSource = options.vertexShaderSource;\n  this._vertexShaderText = options.vertexShaderText;\n  this._fragmentShaderSource = options.fragmentShaderSource;\n  this._fragmentShaderText = modifiedFS.fragmentShaderText;\n\n  /**\n   * @private\n   */\n  this.id = nextShaderProgramId++;\n}\n\nShaderProgram.fromCache = function (options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"options.context\", options.context);\n  //>>includeEnd('debug');\n\n  return options.context.shaderCache.getShaderProgram(options);\n};\n\nShaderProgram.replaceCache = function (options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"options.context\", options.context);\n  //>>includeEnd('debug');\n\n  return options.context.shaderCache.replaceShaderProgram(options);\n};\n\nObject.defineProperties(ShaderProgram.prototype, {\n  /**\n   * GLSL source for the shader program's vertex shader.\n   * @memberof ShaderProgram.prototype\n   *\n   * @type {ShaderSource}\n   * @readonly\n   */\n  vertexShaderSource: {\n    get: function () {\n      return this._vertexShaderSource;\n    },\n  },\n  /**\n   * GLSL source for the shader program's fragment shader.\n   * @memberof ShaderProgram.prototype\n   *\n   * @type {ShaderSource}\n   * @readonly\n   */\n  fragmentShaderSource: {\n    get: function () {\n      return this._fragmentShaderSource;\n    },\n  },\n  vertexAttributes: {\n    get: function () {\n      initialize(this);\n      return this._vertexAttributes;\n    },\n  },\n  numberOfVertexAttributes: {\n    get: function () {\n      initialize(this);\n      return this._numberOfVertexAttributes;\n    },\n  },\n  allUniforms: {\n    get: function () {\n      initialize(this);\n      return this._uniformsByName;\n    },\n  },\n});\n\nfunction extractUniforms(shaderText) {\n  const uniformNames = [];\n  const uniformLines = shaderText.match(/uniform.*?(?![^{]*})(?=[=\\[;])/g);\n  if (defined(uniformLines)) {\n    const len = uniformLines.length;\n    for (let i = 0; i < len; i++) {\n      const line = uniformLines[i].trim();\n      const name = line.slice(line.lastIndexOf(\" \") + 1);\n      uniformNames.push(name);\n    }\n  }\n  return uniformNames;\n}\n\nfunction handleUniformPrecisionMismatches(\n  vertexShaderText,\n  fragmentShaderText\n) {\n  // If a uniform exists in both the vertex and fragment shader but with different precision qualifiers,\n  // give the fragment shader uniform a different name. This fixes shader compilation errors on devices\n  // that only support mediump in the fragment shader.\n  const duplicateUniformNames = {};\n\n  if (!ContextLimits.highpFloatSupported || !ContextLimits.highpIntSupported) {\n    let i, j;\n    let uniformName;\n    let duplicateName;\n    const vertexShaderUniforms = extractUniforms(vertexShaderText);\n    const fragmentShaderUniforms = extractUniforms(fragmentShaderText);\n    const vertexUniformsCount = vertexShaderUniforms.length;\n    const fragmentUniformsCount = fragmentShaderUniforms.length;\n\n    for (i = 0; i < vertexUniformsCount; i++) {\n      for (j = 0; j < fragmentUniformsCount; j++) {\n        if (vertexShaderUniforms[i] === fragmentShaderUniforms[j]) {\n          uniformName = vertexShaderUniforms[i];\n          duplicateName = `czm_mediump_${uniformName}`;\n          // Update fragmentShaderText with renamed uniforms\n          const re = new RegExp(`${uniformName}\\\\b`, \"g\");\n          fragmentShaderText = fragmentShaderText.replace(re, duplicateName);\n          duplicateUniformNames[duplicateName] = uniformName;\n        }\n      }\n    }\n  }\n\n  return {\n    fragmentShaderText: fragmentShaderText,\n    duplicateUniformNames: duplicateUniformNames,\n  };\n}\n\nconst consolePrefix = \"[Cesium WebGL] \";\n\nfunction createAndLinkProgram(gl, shader) {\n  const vsSource = shader._vertexShaderText;\n  const fsSource = shader._fragmentShaderText;\n\n  const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n  gl.shaderSource(vertexShader, vsSource);\n  gl.compileShader(vertexShader);\n\n  const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n  gl.shaderSource(fragmentShader, fsSource);\n  gl.compileShader(fragmentShader);\n\n  const program = gl.createProgram();\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  gl.deleteShader(vertexShader);\n  gl.deleteShader(fragmentShader);\n\n  const attributeLocations = shader._attributeLocations;\n  if (defined(attributeLocations)) {\n    for (const attribute in attributeLocations) {\n      if (attributeLocations.hasOwnProperty(attribute)) {\n        gl.bindAttribLocation(\n          program,\n          attributeLocations[attribute],\n          attribute\n        );\n      }\n    }\n  }\n\n  gl.linkProgram(program);\n\n  let log;\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    const debugShaders = shader._debugShaders;\n\n    // For performance, only check compile errors if there is a linker error.\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      log = gl.getShaderInfoLog(fragmentShader);\n      console.error(`${consolePrefix}Fragment shader compile log: ${log}`);\n      if (defined(debugShaders)) {\n        const fragmentSourceTranslation = debugShaders.getTranslatedShaderSource(\n          fragmentShader\n        );\n        if (fragmentSourceTranslation !== \"\") {\n          console.error(\n            `${consolePrefix}Translated fragment shader source:\\n${fragmentSourceTranslation}`\n          );\n        } else {\n          console.error(`${consolePrefix}Fragment shader translation failed.`);\n        }\n      }\n\n      gl.deleteProgram(program);\n      throw new RuntimeError(\n        `Fragment shader failed to compile.  Compile log: ${log}`\n      );\n    }\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      log = gl.getShaderInfoLog(vertexShader);\n      console.error(`${consolePrefix}Vertex shader compile log: ${log}`);\n      if (defined(debugShaders)) {\n        const vertexSourceTranslation = debugShaders.getTranslatedShaderSource(\n          vertexShader\n        );\n        if (vertexSourceTranslation !== \"\") {\n          console.error(\n            `${consolePrefix}Translated vertex shader source:\\n${vertexSourceTranslation}`\n          );\n        } else {\n          console.error(`${consolePrefix}Vertex shader translation failed.`);\n        }\n      }\n\n      gl.deleteProgram(program);\n      throw new RuntimeError(\n        `Vertex shader failed to compile.  Compile log: ${log}`\n      );\n    }\n\n    log = gl.getProgramInfoLog(program);\n    console.error(`${consolePrefix}Shader program link log: ${log}`);\n    if (defined(debugShaders)) {\n      console.error(\n        `${consolePrefix}Translated vertex shader source:\\n${debugShaders.getTranslatedShaderSource(\n          vertexShader\n        )}`\n      );\n      console.error(\n        `${consolePrefix}Translated fragment shader source:\\n${debugShaders.getTranslatedShaderSource(\n          fragmentShader\n        )}`\n      );\n    }\n\n    gl.deleteProgram(program);\n    throw new RuntimeError(`Program failed to link.  Link log: ${log}`);\n  }\n\n  const logShaderCompilation = shader._logShaderCompilation;\n\n  if (logShaderCompilation) {\n    log = gl.getShaderInfoLog(vertexShader);\n    if (defined(log) && log.length > 0) {\n      console.log(`${consolePrefix}Vertex shader compile log: ${log}`);\n    }\n  }\n\n  if (logShaderCompilation) {\n    log = gl.getShaderInfoLog(fragmentShader);\n    if (defined(log) && log.length > 0) {\n      console.log(`${consolePrefix}Fragment shader compile log: ${log}`);\n    }\n  }\n\n  if (logShaderCompilation) {\n    log = gl.getProgramInfoLog(program);\n    if (defined(log) && log.length > 0) {\n      console.log(`${consolePrefix}Shader program link log: ${log}`);\n    }\n  }\n\n  return program;\n}\n\nfunction findVertexAttributes(gl, program, numberOfAttributes) {\n  const attributes = {};\n  for (let i = 0; i < numberOfAttributes; ++i) {\n    const attr = gl.getActiveAttrib(program, i);\n    const location = gl.getAttribLocation(program, attr.name);\n\n    attributes[attr.name] = {\n      name: attr.name,\n      type: attr.type,\n      index: location,\n    };\n  }\n\n  return attributes;\n}\n\nfunction findUniforms(gl, program) {\n  const uniformsByName = {};\n  const uniforms = [];\n  const samplerUniforms = [];\n\n  const numberOfUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n  for (let i = 0; i < numberOfUniforms; ++i) {\n    const activeUniform = gl.getActiveUniform(program, i);\n    const suffix = \"[0]\";\n    const uniformName =\n      activeUniform.name.indexOf(\n        suffix,\n        activeUniform.name.length - suffix.length\n      ) !== -1\n        ? activeUniform.name.slice(0, activeUniform.name.length - 3)\n        : activeUniform.name;\n\n    // Ignore GLSL built-in uniforms returned in Firefox.\n    if (uniformName.indexOf(\"gl_\") !== 0) {\n      if (activeUniform.name.indexOf(\"[\") < 0) {\n        // Single uniform\n        const location = gl.getUniformLocation(program, uniformName);\n\n        // IE 11.0.9 needs this check since getUniformLocation can return null\n        // if the uniform is not active (e.g., it is optimized out).  Looks like\n        // getActiveUniform() above returns uniforms that are not actually active.\n        if (location !== null) {\n          const uniform = createUniform(\n            gl,\n            activeUniform,\n            uniformName,\n            location\n          );\n\n          uniformsByName[uniformName] = uniform;\n          uniforms.push(uniform);\n\n          if (uniform._setSampler) {\n            samplerUniforms.push(uniform);\n          }\n        }\n      } else {\n        // Uniform array\n\n        let uniformArray;\n        let locations;\n        let value;\n        let loc;\n\n        // On some platforms - Nexus 4 in Firefox for one - an array of sampler2D ends up being represented\n        // as separate uniforms, one for each array element.  Check for and handle that case.\n        const indexOfBracket = uniformName.indexOf(\"[\");\n        if (indexOfBracket >= 0) {\n          // We're assuming the array elements show up in numerical order - it seems to be true.\n          uniformArray = uniformsByName[uniformName.slice(0, indexOfBracket)];\n\n          // Nexus 4 with Android 4.3 needs this check, because it reports a uniform\n          // with the strange name webgl_3467e0265d05c3c1[1] in our globe surface shader.\n          if (!defined(uniformArray)) {\n            continue;\n          }\n\n          locations = uniformArray._locations;\n\n          // On the Nexus 4 in Chrome, we get one uniform per sampler, just like in Firefox,\n          // but the size is not 1 like it is in Firefox.  So if we push locations here,\n          // we'll end up adding too many locations.\n          if (locations.length <= 1) {\n            value = uniformArray.value;\n            loc = gl.getUniformLocation(program, uniformName);\n\n            // Workaround for IE 11.0.9.  See above.\n            if (loc !== null) {\n              locations.push(loc);\n              value.push(gl.getUniform(program, loc));\n            }\n          }\n        } else {\n          locations = [];\n          for (let j = 0; j < activeUniform.size; ++j) {\n            loc = gl.getUniformLocation(program, `${uniformName}[${j}]`);\n\n            // Workaround for IE 11.0.9.  See above.\n            if (loc !== null) {\n              locations.push(loc);\n            }\n          }\n          uniformArray = createUniformArray(\n            gl,\n            activeUniform,\n            uniformName,\n            locations\n          );\n\n          uniformsByName[uniformName] = uniformArray;\n          uniforms.push(uniformArray);\n\n          if (uniformArray._setSampler) {\n            samplerUniforms.push(uniformArray);\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    uniformsByName: uniformsByName,\n    uniforms: uniforms,\n    samplerUniforms: samplerUniforms,\n  };\n}\n\nfunction partitionUniforms(shader, uniforms) {\n  const automaticUniforms = [];\n  const manualUniforms = [];\n\n  for (const uniform in uniforms) {\n    if (uniforms.hasOwnProperty(uniform)) {\n      const uniformObject = uniforms[uniform];\n      let uniformName = uniform;\n      // if it's a duplicate uniform, use its original name so it is updated correctly\n      const duplicateUniform = shader._duplicateUniformNames[uniformName];\n      if (defined(duplicateUniform)) {\n        uniformObject.name = duplicateUniform;\n        uniformName = duplicateUniform;\n      }\n      const automaticUniform = AutomaticUniforms[uniformName];\n      if (defined(automaticUniform)) {\n        automaticUniforms.push({\n          uniform: uniformObject,\n          automaticUniform: automaticUniform,\n        });\n      } else {\n        manualUniforms.push(uniformObject);\n      }\n    }\n  }\n\n  return {\n    automaticUniforms: automaticUniforms,\n    manualUniforms: manualUniforms,\n  };\n}\n\nfunction setSamplerUniforms(gl, program, samplerUniforms) {\n  gl.useProgram(program);\n\n  let textureUnitIndex = 0;\n  const length = samplerUniforms.length;\n  for (let i = 0; i < length; ++i) {\n    textureUnitIndex = samplerUniforms[i]._setSampler(textureUnitIndex);\n  }\n\n  gl.useProgram(null);\n\n  return textureUnitIndex;\n}\n\nfunction initialize(shader) {\n  if (defined(shader._program)) {\n    return;\n  }\n\n  reinitialize(shader);\n}\n\nfunction reinitialize(shader) {\n  const oldProgram = shader._program;\n\n  const gl = shader._gl;\n  const program = createAndLinkProgram(gl, shader, shader._debugShaders);\n  const numberOfVertexAttributes = gl.getProgramParameter(\n    program,\n    gl.ACTIVE_ATTRIBUTES\n  );\n  const uniforms = findUniforms(gl, program);\n  const partitionedUniforms = partitionUniforms(\n    shader,\n    uniforms.uniformsByName\n  );\n\n  shader._program = program;\n  shader._numberOfVertexAttributes = numberOfVertexAttributes;\n  shader._vertexAttributes = findVertexAttributes(\n    gl,\n    program,\n    numberOfVertexAttributes\n  );\n  shader._uniformsByName = uniforms.uniformsByName;\n  shader._uniforms = uniforms.uniforms;\n  shader._automaticUniforms = partitionedUniforms.automaticUniforms;\n  shader._manualUniforms = partitionedUniforms.manualUniforms;\n\n  shader.maximumTextureUnitIndex = setSamplerUniforms(\n    gl,\n    program,\n    uniforms.samplerUniforms\n  );\n\n  if (oldProgram) {\n    shader._gl.deleteProgram(oldProgram);\n  }\n\n  // If SpectorJS is active, add the hook to make the shader editor work.\n  // https://github.com/BabylonJS/Spector.js/blob/master/documentation/extension.md#shader-editor\n  if (typeof spector !== \"undefined\") {\n    shader._program.__SPECTOR_rebuildProgram = function (\n      vertexSourceCode, // The new vertex shader source\n      fragmentSourceCode, // The new fragment shader source\n      onCompiled, // Callback triggered by your engine when the compilation is successful. It needs to send back the new linked program.\n      onError // Callback triggered by your engine in case of error. It needs to send the WebGL error to allow the editor to display the error in the gutter.\n    ) {\n      const originalVS = shader._vertexShaderText;\n      const originalFS = shader._fragmentShaderText;\n\n      // SpectorJS likes to replace `!=` with `! =` for unknown reasons,\n      // and that causes glsl compile failures. So fix that up.\n      const regex = / ! = /g;\n      shader._vertexShaderText = vertexSourceCode.replace(regex, \" != \");\n      shader._fragmentShaderText = fragmentSourceCode.replace(regex, \" != \");\n\n      try {\n        reinitialize(shader);\n        onCompiled(shader._program);\n      } catch (e) {\n        shader._vertexShaderText = originalVS;\n        shader._fragmentShaderText = originalFS;\n\n        // Only pass on the WebGL error:\n        const errorMatcher = /(?:Compile|Link) error: ([^]*)/;\n        const match = errorMatcher.exec(e.message);\n        if (match) {\n          onError(match[1]);\n        } else {\n          onError(e.message);\n        }\n      }\n    };\n  }\n}\n\nShaderProgram.prototype._bind = function () {\n  initialize(this);\n  this._gl.useProgram(this._program);\n};\n\nShaderProgram.prototype._setUniforms = function (\n  uniformMap,\n  uniformState,\n  validate\n) {\n  let len;\n  let i;\n\n  if (defined(uniformMap)) {\n    const manualUniforms = this._manualUniforms;\n    len = manualUniforms.length;\n    for (i = 0; i < len; ++i) {\n      const mu = manualUniforms[i];\n      mu.value = uniformMap[mu.name]();\n    }\n  }\n\n  const automaticUniforms = this._automaticUniforms;\n  len = automaticUniforms.length;\n  for (i = 0; i < len; ++i) {\n    const au = automaticUniforms[i];\n    au.uniform.value = au.automaticUniform.getValue(uniformState);\n  }\n\n  ///////////////////////////////////////////////////////////////////\n\n  // It appears that assigning the uniform values above and then setting them here\n  // (which makes the GL calls) is faster than removing this loop and making\n  // the GL calls above.  I suspect this is because each GL call pollutes the\n  // L2 cache making our JavaScript and the browser/driver ping-pong cache lines.\n  const uniforms = this._uniforms;\n  len = uniforms.length;\n  for (i = 0; i < len; ++i) {\n    uniforms[i].set();\n  }\n\n  if (validate) {\n    const gl = this._gl;\n    const program = this._program;\n\n    gl.validateProgram(program);\n    //>>includeStart('debug', pragmas.debug);\n    if (!gl.getProgramParameter(program, gl.VALIDATE_STATUS)) {\n      throw new DeveloperError(\n        `Program validation failed.  Program info log: ${gl.getProgramInfoLog(\n          program\n        )}`\n      );\n    }\n    //>>includeEnd('debug');\n  }\n};\n\nShaderProgram.prototype.isDestroyed = function () {\n  return false;\n};\n\nShaderProgram.prototype.destroy = function () {\n  this._cachedShader.cache.releaseShaderProgram(this);\n  return undefined;\n};\n\nShaderProgram.prototype.finalDestroy = function () {\n  this._gl.deleteProgram(this._program);\n  return destroyObject(this);\n};\nexport default ShaderProgram;\n","import defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport modernizeShader from \"../Renderer/modernizeShader.js\";\nimport CzmBuiltins from \"../Shaders/Builtin/CzmBuiltins.js\";\nimport AutomaticUniforms from \"./AutomaticUniforms.js\";\n\nfunction removeComments(source) {\n  // remove inline comments\n  source = source.replace(/\\/\\/.*/g, \"\");\n  // remove multiline comment block\n  return source.replace(/\\/\\*\\*[\\s\\S]*?\\*\\//gm, function (match) {\n    // preserve the number of lines in the comment block so the line numbers will be correct when debugging shaders\n    const numberOfLines = match.match(/\\n/gm).length;\n    let replacement = \"\";\n    for (let lineNumber = 0; lineNumber < numberOfLines; ++lineNumber) {\n      replacement += \"\\n\";\n    }\n    return replacement;\n  });\n}\n\nfunction getDependencyNode(name, glslSource, nodes) {\n  let dependencyNode;\n\n  // check if already loaded\n  for (let i = 0; i < nodes.length; ++i) {\n    if (nodes[i].name === name) {\n      dependencyNode = nodes[i];\n    }\n  }\n\n  if (!defined(dependencyNode)) {\n    // strip doc comments so we don't accidentally try to determine a dependency for something found\n    // in a comment\n    glslSource = removeComments(glslSource);\n\n    // create new node\n    dependencyNode = {\n      name: name,\n      glslSource: glslSource,\n      dependsOn: [],\n      requiredBy: [],\n      evaluated: false,\n    };\n    nodes.push(dependencyNode);\n  }\n\n  return dependencyNode;\n}\n\nfunction generateDependencies(currentNode, dependencyNodes) {\n  if (currentNode.evaluated) {\n    return;\n  }\n\n  currentNode.evaluated = true;\n\n  // identify all dependencies that are referenced from this glsl source code\n  let czmMatches = currentNode.glslSource.match(/\\bczm_[a-zA-Z0-9_]*/g);\n  if (defined(czmMatches) && czmMatches !== null) {\n    // remove duplicates\n    czmMatches = czmMatches.filter(function (elem, pos) {\n      return czmMatches.indexOf(elem) === pos;\n    });\n\n    czmMatches.forEach(function (element) {\n      if (\n        element !== currentNode.name &&\n        ShaderSource._czmBuiltinsAndUniforms.hasOwnProperty(element)\n      ) {\n        const referencedNode = getDependencyNode(\n          element,\n          ShaderSource._czmBuiltinsAndUniforms[element],\n          dependencyNodes\n        );\n        currentNode.dependsOn.push(referencedNode);\n        referencedNode.requiredBy.push(currentNode);\n\n        // recursive call to find any dependencies of the new node\n        generateDependencies(referencedNode, dependencyNodes);\n      }\n    });\n  }\n}\n\nfunction sortDependencies(dependencyNodes) {\n  const nodesWithoutIncomingEdges = [];\n  const allNodes = [];\n\n  while (dependencyNodes.length > 0) {\n    const node = dependencyNodes.pop();\n    allNodes.push(node);\n\n    if (node.requiredBy.length === 0) {\n      nodesWithoutIncomingEdges.push(node);\n    }\n  }\n\n  while (nodesWithoutIncomingEdges.length > 0) {\n    const currentNode = nodesWithoutIncomingEdges.shift();\n\n    dependencyNodes.push(currentNode);\n\n    for (let i = 0; i < currentNode.dependsOn.length; ++i) {\n      // remove the edge from the graph\n      const referencedNode = currentNode.dependsOn[i];\n      const index = referencedNode.requiredBy.indexOf(currentNode);\n      referencedNode.requiredBy.splice(index, 1);\n\n      // if referenced node has no more incoming edges, add to list\n      if (referencedNode.requiredBy.length === 0) {\n        nodesWithoutIncomingEdges.push(referencedNode);\n      }\n    }\n  }\n\n  // if there are any nodes left with incoming edges, then there was a circular dependency somewhere in the graph\n  const badNodes = [];\n  for (let j = 0; j < allNodes.length; ++j) {\n    if (allNodes[j].requiredBy.length !== 0) {\n      badNodes.push(allNodes[j]);\n    }\n  }\n\n  //>>includeStart('debug', pragmas.debug);\n  if (badNodes.length !== 0) {\n    let message =\n      \"A circular dependency was found in the following built-in functions/structs/constants: \\n\";\n    for (let k = 0; k < badNodes.length; ++k) {\n      message = `${message + badNodes[k].name}\\n`;\n    }\n    throw new DeveloperError(message);\n  }\n  //>>includeEnd('debug');\n}\n\nfunction getBuiltinsAndAutomaticUniforms(shaderSource) {\n  // generate a dependency graph for builtin functions\n  const dependencyNodes = [];\n  const root = getDependencyNode(\"main\", shaderSource, dependencyNodes);\n  generateDependencies(root, dependencyNodes);\n  sortDependencies(dependencyNodes);\n\n  // Concatenate the source code for the function dependencies.\n  // Iterate in reverse so that dependent items are declared before they are used.\n  let builtinsSource = \"\";\n  for (let i = dependencyNodes.length - 1; i >= 0; --i) {\n    builtinsSource = `${builtinsSource + dependencyNodes[i].glslSource}\\n`;\n  }\n\n  return builtinsSource.replace(root.glslSource, \"\");\n}\n\nfunction combineShader(shaderSource, isFragmentShader, context) {\n  let i;\n  let length;\n\n  // Combine shader sources, generally for pseudo-polymorphism, e.g., czm_getMaterial.\n  let combinedSources = \"\";\n  const sources = shaderSource.sources;\n  if (defined(sources)) {\n    for (i = 0, length = sources.length; i < length; ++i) {\n      // #line needs to be on its own line.\n      combinedSources += `\\n#line 0\\n${sources[i]}`;\n    }\n  }\n\n  combinedSources = removeComments(combinedSources);\n\n  // Extract existing shader version from sources\n  let version;\n  combinedSources = combinedSources.replace(/#version\\s+(.*?)\\n/gm, function (\n    match,\n    group1\n  ) {\n    //>>includeStart('debug', pragmas.debug);\n    if (defined(version) && version !== group1) {\n      throw new DeveloperError(\n        `inconsistent versions found: ${version} and ${group1}`\n      );\n    }\n    //>>includeEnd('debug');\n\n    // Extract #version to put at the top\n    version = group1;\n\n    // Replace original #version directive with a new line so the line numbers\n    // are not off by one.  There can be only one #version directive\n    // and it must appear at the top of the source, only preceded by\n    // whitespace and comments.\n    return \"\\n\";\n  });\n\n  // Extract shader extensions from sources\n  const extensions = [];\n  combinedSources = combinedSources.replace(/#extension.*\\n/gm, function (\n    match\n  ) {\n    // Extract extension to put at the top\n    extensions.push(match);\n\n    // Replace original #extension directive with a new line so the line numbers\n    // are not off by one.\n    return \"\\n\";\n  });\n\n  // Remove precision qualifier\n  combinedSources = combinedSources.replace(\n    /precision\\s(lowp|mediump|highp)\\s(float|int);/,\n    \"\"\n  );\n\n  // Replace main() for picked if desired.\n  const pickColorQualifier = shaderSource.pickColorQualifier;\n  if (defined(pickColorQualifier)) {\n    combinedSources = ShaderSource.createPickFragmentShaderSource(\n      combinedSources,\n      pickColorQualifier\n    );\n  }\n\n  // combine into single string\n  let result = \"\";\n\n  // #version must be first\n  // defaults to #version 100 if not specified\n  if (defined(version)) {\n    result = `#version ${version}\\n`;\n  }\n\n  const extensionsLength = extensions.length;\n  for (i = 0; i < extensionsLength; i++) {\n    result += extensions[i];\n  }\n\n  if (isFragmentShader) {\n    // If high precision isn't support replace occurrences of highp with mediump\n    // The highp keyword is not always available on older mobile devices\n    // See https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/WebGL_best_practices#In_WebGL_1_highp_float_support_is_optional_in_fragment_shaders\n    result +=\n      \"\\\n#ifdef GL_FRAGMENT_PRECISION_HIGH\\n\\\n    precision highp float;\\n\\\n    precision highp int;\\n\\\n#else\\n\\\n    precision mediump float;\\n\\\n    precision mediump int;\\n\\\n    #define highp mediump\\n\\\n#endif\\n\\n\";\n  }\n\n  // Prepend #defines for uber-shaders\n  const defines = shaderSource.defines;\n  if (defined(defines)) {\n    for (i = 0, length = defines.length; i < length; ++i) {\n      const define = defines[i];\n      if (define.length !== 0) {\n        result += `#define ${define}\\n`;\n      }\n    }\n  }\n\n  // GLSLModernizer inserts its own layout qualifiers\n  // at this position in the source\n  if (context.webgl2) {\n    result += \"#define OUTPUT_DECLARATION\\n\\n\";\n  }\n\n  // Define a constant for the OES_texture_float_linear extension since WebGL does not.\n  if (context.textureFloatLinear) {\n    result += \"#define OES_texture_float_linear\\n\\n\";\n  }\n\n  // Define a constant for the OES_texture_float extension since WebGL does not.\n  if (context.floatingPointTexture) {\n    result += \"#define OES_texture_float\\n\\n\";\n  }\n\n  // append built-ins\n  if (shaderSource.includeBuiltIns) {\n    result += getBuiltinsAndAutomaticUniforms(combinedSources);\n  }\n\n  // reset line number\n  result += \"\\n#line 0\\n\";\n\n  // append actual source\n  result += combinedSources;\n\n  // modernize the source\n  if (context.webgl2) {\n    result = modernizeShader(result, isFragmentShader, true);\n  }\n\n  return result;\n}\n\n/**\n * An object containing various inputs that will be combined to form a final GLSL shader string.\n *\n * @param {Object} [options] Object with the following properties:\n * @param {String[]} [options.sources] An array of strings to combine containing GLSL code for the shader.\n * @param {String[]} [options.defines] An array of strings containing GLSL identifiers to <code>#define</code>.\n * @param {String} [options.pickColorQualifier] The GLSL qualifier, <code>uniform</code> or <code>varying</code>, for the input <code>czm_pickColor</code>.  When defined, a pick fragment shader is generated.\n * @param {Boolean} [options.includeBuiltIns=true] If true, referenced built-in functions will be included with the combined shader.  Set to false if this shader will become a source in another shader, to avoid duplicating functions.\n *\n * @exception {DeveloperError} options.pickColorQualifier must be 'uniform' or 'varying'.\n *\n * @example\n * // 1. Prepend #defines to a shader\n * const source = new Cesium.ShaderSource({\n *   defines : ['WHITE'],\n *   sources : ['void main() { \\n#ifdef WHITE\\n gl_FragColor = vec4(1.0); \\n#else\\n gl_FragColor = vec4(0.0); \\n#endif\\n }']\n * });\n *\n * // 2. Modify a fragment shader for picking\n * const source2 = new Cesium.ShaderSource({\n *   sources : ['void main() { gl_FragColor = vec4(1.0); }'],\n *   pickColorQualifier : 'uniform'\n * });\n *\n * @private\n */\nfunction ShaderSource(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n  const pickColorQualifier = options.pickColorQualifier;\n\n  //>>includeStart('debug', pragmas.debug);\n  if (\n    defined(pickColorQualifier) &&\n    pickColorQualifier !== \"uniform\" &&\n    pickColorQualifier !== \"varying\"\n  ) {\n    throw new DeveloperError(\n      \"options.pickColorQualifier must be 'uniform' or 'varying'.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  this.defines = defined(options.defines) ? options.defines.slice(0) : [];\n  this.sources = defined(options.sources) ? options.sources.slice(0) : [];\n  this.pickColorQualifier = pickColorQualifier;\n  this.includeBuiltIns = defaultValue(options.includeBuiltIns, true);\n}\n\nShaderSource.prototype.clone = function () {\n  return new ShaderSource({\n    sources: this.sources,\n    defines: this.defines,\n    pickColorQualifier: this.pickColorQualifier,\n    includeBuiltIns: this.includeBuiltIns,\n  });\n};\n\nShaderSource.replaceMain = function (source, renamedMain) {\n  renamedMain = `void ${renamedMain}()`;\n  return source.replace(/void\\s+main\\s*\\(\\s*(?:void)?\\s*\\)/g, renamedMain);\n};\n\n/**\n * Create a single string containing the full, combined vertex shader with all dependencies and defines.\n *\n * @param {Context} context The current rendering context\n *\n * @returns {String} The combined shader string.\n */\nShaderSource.prototype.createCombinedVertexShader = function (context) {\n  return combineShader(this, false, context);\n};\n\n/**\n * Create a single string containing the full, combined fragment shader with all dependencies and defines.\n *\n * @param {Context} context The current rendering context\n *\n * @returns {String} The combined shader string.\n */\nShaderSource.prototype.createCombinedFragmentShader = function (context) {\n  return combineShader(this, true, context);\n};\n\n/**\n * For ShaderProgram testing\n * @private\n */\nShaderSource._czmBuiltinsAndUniforms = {};\n\n// combine automatic uniforms and Cesium built-ins\nfor (const builtinName in CzmBuiltins) {\n  if (CzmBuiltins.hasOwnProperty(builtinName)) {\n    ShaderSource._czmBuiltinsAndUniforms[builtinName] =\n      CzmBuiltins[builtinName];\n  }\n}\nfor (const uniformName in AutomaticUniforms) {\n  if (AutomaticUniforms.hasOwnProperty(uniformName)) {\n    const uniform = AutomaticUniforms[uniformName];\n    if (typeof uniform.getDeclaration === \"function\") {\n      ShaderSource._czmBuiltinsAndUniforms[\n        uniformName\n      ] = uniform.getDeclaration(uniformName);\n    }\n  }\n}\n\nShaderSource.createPickVertexShaderSource = function (vertexShaderSource) {\n  const renamedVS = ShaderSource.replaceMain(\n    vertexShaderSource,\n    \"czm_old_main\"\n  );\n  const pickMain =\n    \"attribute vec4 pickColor; \\n\" +\n    \"varying vec4 czm_pickColor; \\n\" +\n    \"void main() \\n\" +\n    \"{ \\n\" +\n    \"    czm_old_main(); \\n\" +\n    \"    czm_pickColor = pickColor; \\n\" +\n    \"}\";\n\n  return `${renamedVS}\\n${pickMain}`;\n};\n\nShaderSource.createPickFragmentShaderSource = function (\n  fragmentShaderSource,\n  pickColorQualifier\n) {\n  const renamedFS = ShaderSource.replaceMain(\n    fragmentShaderSource,\n    \"czm_old_main\"\n  );\n  const pickMain =\n    `${pickColorQualifier} vec4 czm_pickColor; \\n` +\n    `void main() \\n` +\n    `{ \\n` +\n    `    czm_old_main(); \\n` +\n    `    if (gl_FragColor.a == 0.0) { \\n` +\n    `       discard; \\n` +\n    `    } \\n` +\n    `    gl_FragColor = czm_pickColor; \\n` +\n    `}`;\n\n  return `${renamedFS}\\n${pickMain}`;\n};\n\nfunction containsString(shaderSource, string) {\n  const sources = shaderSource.sources;\n  const sourcesLength = sources.length;\n  for (let i = 0; i < sourcesLength; ++i) {\n    if (sources[i].indexOf(string) !== -1) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction findFirstString(shaderSource, strings) {\n  const stringsLength = strings.length;\n  for (let i = 0; i < stringsLength; ++i) {\n    const string = strings[i];\n    if (containsString(shaderSource, string)) {\n      return string;\n    }\n  }\n  return undefined;\n}\n\nconst normalVaryingNames = [\"v_normalEC\", \"v_normal\"];\n\nShaderSource.findNormalVarying = function (shaderSource) {\n  // Fix for ModelExperimental: the shader text always has the word v_normalEC\n  // wrapped in an #ifdef so instead of looking for v_normalEC look for the define\n  if (containsString(shaderSource, \"#ifdef HAS_NORMALS\")) {\n    if (containsString(shaderSource, \"#define HAS_NORMALS\")) {\n      return \"v_normalEC\";\n    }\n    return undefined;\n  }\n\n  return findFirstString(shaderSource, normalVaryingNames);\n};\n\nconst positionVaryingNames = [\"v_positionEC\"];\n\nShaderSource.findPositionVarying = function (shaderSource) {\n  return findFirstString(shaderSource, positionVaryingNames);\n};\nexport default ShaderSource;\n","/**\n * A utility for dynamically-generating a GLSL struct.\n *\n * @alias ShaderStruct\n * @constructor\n *\n * @see {@link ShaderBuilder}\n * @param {String} name The name of the struct as it will appear in the shader.\n * @example\n * // Generate the struct:\n * //\n * // struct Attributes\n * // {\n * //     vec3 position;\n * //     vec3 normal;\n * //     vec2 texCoord;\n * // };\n * const struct = new ShaderStruct(\"Attributes\");\n * struct.addField(\"vec3\", \"position\");\n * struct.addField(\"vec3\", \"normal\");\n * struct.addField(\"vec2\", \"texCoord\");\n * const generatedLines = struct.generateGlslLines();\n *\n * @private\n */\nexport default function ShaderStruct(name) {\n  this.name = name;\n  this.fields = [];\n}\n\n/**\n * Add a field to the struct\n * @param {String} type The type of the struct field\n * @param {String} identifier The identifier of the struct field\n */\nShaderStruct.prototype.addField = function (type, identifier) {\n  const field = `    ${type} ${identifier};`;\n  this.fields.push(field);\n};\n\n/**\n * Generate a list of lines of GLSL code for use with {@link ShaderBuilder}\n * @return {String[]} The generated GLSL code.\n */\nShaderStruct.prototype.generateGlslLines = function () {\n  let fields = this.fields;\n  if (fields.length === 0) {\n    // GLSL requires structs to have at least one field\n    fields = [\"    float _empty;\"];\n  }\n\n  return [].concat(`struct ${this.name}`, \"{\", fields, \"};\");\n};\n","import Cartesian2 from \"../Core/Cartesian2.js\";\nimport Check from \"../Core/Check.js\";\nimport createGuid from \"../Core/createGuid.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport CesiumMath from \"../Core/Math.js\";\nimport PixelFormat from \"../Core/PixelFormat.js\";\nimport ContextLimits from \"./ContextLimits.js\";\nimport MipmapHint from \"./MipmapHint.js\";\nimport PixelDatatype from \"./PixelDatatype.js\";\nimport Sampler from \"./Sampler.js\";\nimport TextureMagnificationFilter from \"./TextureMagnificationFilter.js\";\nimport TextureMinificationFilter from \"./TextureMinificationFilter.js\";\n\n/**\n * @private\n */\nfunction Texture(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"options.context\", options.context);\n  //>>includeEnd('debug');\n\n  const context = options.context;\n  let width = options.width;\n  let height = options.height;\n  const source = options.source;\n\n  if (defined(source)) {\n    if (!defined(width)) {\n      width = defaultValue(source.videoWidth, source.width);\n    }\n    if (!defined(height)) {\n      height = defaultValue(source.videoHeight, source.height);\n    }\n  }\n\n  const pixelFormat = defaultValue(options.pixelFormat, PixelFormat.RGBA);\n  const pixelDatatype = defaultValue(\n    options.pixelDatatype,\n    PixelDatatype.UNSIGNED_BYTE\n  );\n  const internalFormat = PixelFormat.toInternalFormat(\n    pixelFormat,\n    pixelDatatype,\n    context\n  );\n\n  const isCompressed = PixelFormat.isCompressedFormat(internalFormat);\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!defined(width) || !defined(height)) {\n    throw new DeveloperError(\n      \"options requires a source field to create an initialized texture or width and height fields to create a blank texture.\"\n    );\n  }\n\n  Check.typeOf.number.greaterThan(\"width\", width, 0);\n\n  if (width > ContextLimits.maximumTextureSize) {\n    throw new DeveloperError(\n      `Width must be less than or equal to the maximum texture size (${ContextLimits.maximumTextureSize}).  Check maximumTextureSize.`\n    );\n  }\n\n  Check.typeOf.number.greaterThan(\"height\", height, 0);\n\n  if (height > ContextLimits.maximumTextureSize) {\n    throw new DeveloperError(\n      `Height must be less than or equal to the maximum texture size (${ContextLimits.maximumTextureSize}).  Check maximumTextureSize.`\n    );\n  }\n\n  if (!PixelFormat.validate(pixelFormat)) {\n    throw new DeveloperError(\"Invalid options.pixelFormat.\");\n  }\n\n  if (!isCompressed && !PixelDatatype.validate(pixelDatatype)) {\n    throw new DeveloperError(\"Invalid options.pixelDatatype.\");\n  }\n\n  if (\n    pixelFormat === PixelFormat.DEPTH_COMPONENT &&\n    pixelDatatype !== PixelDatatype.UNSIGNED_SHORT &&\n    pixelDatatype !== PixelDatatype.UNSIGNED_INT\n  ) {\n    throw new DeveloperError(\n      \"When options.pixelFormat is DEPTH_COMPONENT, options.pixelDatatype must be UNSIGNED_SHORT or UNSIGNED_INT.\"\n    );\n  }\n\n  if (\n    pixelFormat === PixelFormat.DEPTH_STENCIL &&\n    pixelDatatype !== PixelDatatype.UNSIGNED_INT_24_8\n  ) {\n    throw new DeveloperError(\n      \"When options.pixelFormat is DEPTH_STENCIL, options.pixelDatatype must be UNSIGNED_INT_24_8.\"\n    );\n  }\n\n  if (pixelDatatype === PixelDatatype.FLOAT && !context.floatingPointTexture) {\n    throw new DeveloperError(\n      \"When options.pixelDatatype is FLOAT, this WebGL implementation must support the OES_texture_float extension.  Check context.floatingPointTexture.\"\n    );\n  }\n\n  if (\n    pixelDatatype === PixelDatatype.HALF_FLOAT &&\n    !context.halfFloatingPointTexture\n  ) {\n    throw new DeveloperError(\n      \"When options.pixelDatatype is HALF_FLOAT, this WebGL implementation must support the OES_texture_half_float extension. Check context.halfFloatingPointTexture.\"\n    );\n  }\n\n  if (PixelFormat.isDepthFormat(pixelFormat)) {\n    if (defined(source)) {\n      throw new DeveloperError(\n        \"When options.pixelFormat is DEPTH_COMPONENT or DEPTH_STENCIL, source cannot be provided.\"\n      );\n    }\n\n    if (!context.depthTexture) {\n      throw new DeveloperError(\n        \"When options.pixelFormat is DEPTH_COMPONENT or DEPTH_STENCIL, this WebGL implementation must support WEBGL_depth_texture.  Check context.depthTexture.\"\n      );\n    }\n  }\n\n  if (isCompressed) {\n    if (!defined(source) || !defined(source.arrayBufferView)) {\n      throw new DeveloperError(\n        \"When options.pixelFormat is compressed, options.source.arrayBufferView must be defined.\"\n      );\n    }\n\n    if (PixelFormat.isDXTFormat(internalFormat) && !context.s3tc) {\n      throw new DeveloperError(\n        \"When options.pixelFormat is S3TC compressed, this WebGL implementation must support the WEBGL_compressed_texture_s3tc extension. Check context.s3tc.\"\n      );\n    } else if (PixelFormat.isPVRTCFormat(internalFormat) && !context.pvrtc) {\n      throw new DeveloperError(\n        \"When options.pixelFormat is PVRTC compressed, this WebGL implementation must support the WEBGL_compressed_texture_pvrtc extension. Check context.pvrtc.\"\n      );\n    } else if (PixelFormat.isASTCFormat(internalFormat) && !context.astc) {\n      throw new DeveloperError(\n        \"When options.pixelFormat is ASTC compressed, this WebGL implementation must support the WEBGL_compressed_texture_astc extension. Check context.astc.\"\n      );\n    } else if (PixelFormat.isETC2Format(internalFormat) && !context.etc) {\n      throw new DeveloperError(\n        \"When options.pixelFormat is ETC2 compressed, this WebGL implementation must support the WEBGL_compressed_texture_etc extension. Check context.etc.\"\n      );\n    } else if (PixelFormat.isETC1Format(internalFormat) && !context.etc1) {\n      throw new DeveloperError(\n        \"When options.pixelFormat is ETC1 compressed, this WebGL implementation must support the WEBGL_compressed_texture_etc1 extension. Check context.etc1.\"\n      );\n    } else if (PixelFormat.isBC7Format(internalFormat) && !context.bc7) {\n      throw new DeveloperError(\n        \"When options.pixelFormat is BC7 compressed, this WebGL implementation must support the EXT_texture_compression_bptc extension. Check context.bc7.\"\n      );\n    }\n\n    if (\n      PixelFormat.compressedTextureSizeInBytes(\n        internalFormat,\n        width,\n        height\n      ) !== source.arrayBufferView.byteLength\n    ) {\n      throw new DeveloperError(\n        \"The byte length of the array buffer is invalid for the compressed texture with the given width and height.\"\n      );\n    }\n  }\n  //>>includeEnd('debug');\n\n  // Use premultiplied alpha for opaque textures should perform better on Chrome:\n  // http://media.tojicode.com/webglCamp4/#20\n  const preMultiplyAlpha =\n    options.preMultiplyAlpha ||\n    pixelFormat === PixelFormat.RGB ||\n    pixelFormat === PixelFormat.LUMINANCE;\n  const flipY = defaultValue(options.flipY, true);\n  const skipColorSpaceConversion = defaultValue(\n    options.skipColorSpaceConversion,\n    false\n  );\n\n  let initialized = true;\n\n  const gl = context._gl;\n  const textureTarget = gl.TEXTURE_2D;\n  const texture = gl.createTexture();\n\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(textureTarget, texture);\n\n  let unpackAlignment = 4;\n  if (defined(source) && defined(source.arrayBufferView) && !isCompressed) {\n    unpackAlignment = PixelFormat.alignmentInBytes(\n      pixelFormat,\n      pixelDatatype,\n      width\n    );\n  }\n\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\n\n  if (skipColorSpaceConversion) {\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, gl.NONE);\n  } else {\n    gl.pixelStorei(\n      gl.UNPACK_COLORSPACE_CONVERSION_WEBGL,\n      gl.BROWSER_DEFAULT_WEBGL\n    );\n  }\n\n  if (defined(source)) {\n    if (defined(source.arrayBufferView)) {\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n      // Source: typed array\n      let arrayBufferView = source.arrayBufferView;\n      let i, mipWidth, mipHeight;\n      if (isCompressed) {\n        gl.compressedTexImage2D(\n          textureTarget,\n          0,\n          internalFormat,\n          width,\n          height,\n          0,\n          arrayBufferView\n        );\n        if (defined(source.mipLevels)) {\n          mipWidth = width;\n          mipHeight = height;\n          for (i = 0; i < source.mipLevels.length; ++i) {\n            mipWidth = Math.floor(mipWidth / 2) | 0;\n            if (mipWidth < 1) {\n              mipWidth = 1;\n            }\n            mipHeight = Math.floor(mipHeight / 2) | 0;\n            if (mipHeight < 1) {\n              mipHeight = 1;\n            }\n            gl.compressedTexImage2D(\n              textureTarget,\n              i + 1,\n              internalFormat,\n              mipWidth,\n              mipHeight,\n              0,\n              source.mipLevels[i]\n            );\n          }\n        }\n      } else {\n        if (flipY) {\n          arrayBufferView = PixelFormat.flipY(\n            arrayBufferView,\n            pixelFormat,\n            pixelDatatype,\n            width,\n            height\n          );\n        }\n        gl.texImage2D(\n          textureTarget,\n          0,\n          internalFormat,\n          width,\n          height,\n          0,\n          pixelFormat,\n          PixelDatatype.toWebGLConstant(pixelDatatype, context),\n          arrayBufferView\n        );\n\n        if (defined(source.mipLevels)) {\n          mipWidth = width;\n          mipHeight = height;\n          for (i = 0; i < source.mipLevels.length; ++i) {\n            mipWidth = Math.floor(mipWidth / 2) | 0;\n            if (mipWidth < 1) {\n              mipWidth = 1;\n            }\n            mipHeight = Math.floor(mipHeight / 2) | 0;\n            if (mipHeight < 1) {\n              mipHeight = 1;\n            }\n            gl.texImage2D(\n              textureTarget,\n              i + 1,\n              internalFormat,\n              mipWidth,\n              mipHeight,\n              0,\n              pixelFormat,\n              PixelDatatype.toWebGLConstant(pixelDatatype, context),\n              source.mipLevels[i]\n            );\n          }\n        }\n      }\n    } else if (defined(source.framebuffer)) {\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n      // Source: framebuffer\n      if (source.framebuffer !== context.defaultFramebuffer) {\n        source.framebuffer._bind();\n      }\n\n      gl.copyTexImage2D(\n        textureTarget,\n        0,\n        internalFormat,\n        source.xOffset,\n        source.yOffset,\n        width,\n        height,\n        0\n      );\n\n      if (source.framebuffer !== context.defaultFramebuffer) {\n        source.framebuffer._unBind();\n      }\n    } else {\n      // Only valid for DOM-Element uploads\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, preMultiplyAlpha);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\n\n      // Source: ImageData, HTMLImageElement, HTMLCanvasElement, or HTMLVideoElement\n      gl.texImage2D(\n        textureTarget,\n        0,\n        internalFormat,\n        pixelFormat,\n        PixelDatatype.toWebGLConstant(pixelDatatype, context),\n        source\n      );\n    }\n  } else {\n    gl.texImage2D(\n      textureTarget,\n      0,\n      internalFormat,\n      width,\n      height,\n      0,\n      pixelFormat,\n      PixelDatatype.toWebGLConstant(pixelDatatype, context),\n      null\n    );\n    initialized = false;\n  }\n  gl.bindTexture(textureTarget, null);\n\n  let sizeInBytes;\n  if (isCompressed) {\n    sizeInBytes = PixelFormat.compressedTextureSizeInBytes(\n      pixelFormat,\n      width,\n      height\n    );\n  } else {\n    sizeInBytes = PixelFormat.textureSizeInBytes(\n      pixelFormat,\n      pixelDatatype,\n      width,\n      height\n    );\n  }\n\n  this._id = createGuid();\n  this._context = context;\n  this._textureFilterAnisotropic = context._textureFilterAnisotropic;\n  this._textureTarget = textureTarget;\n  this._texture = texture;\n  this._internalFormat = internalFormat;\n  this._pixelFormat = pixelFormat;\n  this._pixelDatatype = pixelDatatype;\n  this._width = width;\n  this._height = height;\n  this._dimensions = new Cartesian2(width, height);\n  this._hasMipmap = false;\n  this._sizeInBytes = sizeInBytes;\n  this._preMultiplyAlpha = preMultiplyAlpha;\n  this._flipY = flipY;\n  this._initialized = initialized;\n  this._sampler = undefined;\n\n  this.sampler = defined(options.sampler) ? options.sampler : new Sampler();\n}\n\n/**\n * This function is identical to using the Texture constructor except that it can be\n * replaced with a mock/spy in tests.\n * @private\n */\nTexture.create = function (options) {\n  return new Texture(options);\n};\n\n/**\n * Creates a texture, and copies a subimage of the framebuffer to it.  When called without arguments,\n * the texture is the same width and height as the framebuffer and contains its contents.\n *\n * @param {Object} options Object with the following properties:\n * @param {Context} options.context The context in which the Texture gets created.\n * @param {PixelFormat} [options.pixelFormat=PixelFormat.RGB] The texture's internal pixel format.\n * @param {Number} [options.framebufferXOffset=0] An offset in the x direction in the framebuffer where copying begins from.\n * @param {Number} [options.framebufferYOffset=0] An offset in the y direction in the framebuffer where copying begins from.\n * @param {Number} [options.width=canvas.clientWidth] The width of the texture in texels.\n * @param {Number} [options.height=canvas.clientHeight] The height of the texture in texels.\n * @param {Framebuffer} [options.framebuffer=defaultFramebuffer] The framebuffer from which to create the texture.  If this\n *        parameter is not specified, the default framebuffer is used.\n * @returns {Texture} A texture with contents from the framebuffer.\n *\n * @exception {DeveloperError} Invalid pixelFormat.\n * @exception {DeveloperError} pixelFormat cannot be DEPTH_COMPONENT, DEPTH_STENCIL or a compressed format.\n * @exception {DeveloperError} framebufferXOffset must be greater than or equal to zero.\n * @exception {DeveloperError} framebufferYOffset must be greater than or equal to zero.\n * @exception {DeveloperError} framebufferXOffset + width must be less than or equal to canvas.clientWidth.\n * @exception {DeveloperError} framebufferYOffset + height must be less than or equal to canvas.clientHeight.\n *\n *\n * @example\n * // Create a texture with the contents of the framebuffer.\n * const t = Texture.fromFramebuffer({\n *     context : context\n * });\n *\n * @see Sampler\n *\n * @private\n */\nTexture.fromFramebuffer = function (options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"options.context\", options.context);\n  //>>includeEnd('debug');\n\n  const context = options.context;\n  const gl = context._gl;\n\n  const pixelFormat = defaultValue(options.pixelFormat, PixelFormat.RGB);\n  const framebufferXOffset = defaultValue(options.framebufferXOffset, 0);\n  const framebufferYOffset = defaultValue(options.framebufferYOffset, 0);\n  const width = defaultValue(options.width, gl.drawingBufferWidth);\n  const height = defaultValue(options.height, gl.drawingBufferHeight);\n  const framebuffer = options.framebuffer;\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!PixelFormat.validate(pixelFormat)) {\n    throw new DeveloperError(\"Invalid pixelFormat.\");\n  }\n  if (\n    PixelFormat.isDepthFormat(pixelFormat) ||\n    PixelFormat.isCompressedFormat(pixelFormat)\n  ) {\n    throw new DeveloperError(\n      \"pixelFormat cannot be DEPTH_COMPONENT, DEPTH_STENCIL or a compressed format.\"\n    );\n  }\n  Check.defined(\"options.context\", options.context);\n  Check.typeOf.number.greaterThanOrEquals(\n    \"framebufferXOffset\",\n    framebufferXOffset,\n    0\n  );\n  Check.typeOf.number.greaterThanOrEquals(\n    \"framebufferYOffset\",\n    framebufferYOffset,\n    0\n  );\n  if (framebufferXOffset + width > gl.drawingBufferWidth) {\n    throw new DeveloperError(\n      \"framebufferXOffset + width must be less than or equal to drawingBufferWidth\"\n    );\n  }\n  if (framebufferYOffset + height > gl.drawingBufferHeight) {\n    throw new DeveloperError(\n      \"framebufferYOffset + height must be less than or equal to drawingBufferHeight.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  const texture = new Texture({\n    context: context,\n    width: width,\n    height: height,\n    pixelFormat: pixelFormat,\n    source: {\n      framebuffer: defined(framebuffer)\n        ? framebuffer\n        : context.defaultFramebuffer,\n      xOffset: framebufferXOffset,\n      yOffset: framebufferYOffset,\n      width: width,\n      height: height,\n    },\n  });\n\n  return texture;\n};\n\nObject.defineProperties(Texture.prototype, {\n  /**\n   * A unique id for the texture\n   * @memberof Texture.prototype\n   * @type {String}\n   * @readonly\n   * @private\n   */\n  id: {\n    get: function () {\n      return this._id;\n    },\n  },\n  /**\n   * The sampler to use when sampling this texture.\n   * Create a sampler by calling {@link Sampler}.  If this\n   * parameter is not specified, a default sampler is used.  The default sampler clamps texture\n   * coordinates in both directions, uses linear filtering for both magnification and minification,\n   * and uses a maximum anisotropy of 1.0.\n   * @memberof Texture.prototype\n   * @type {Object}\n   */\n  sampler: {\n    get: function () {\n      return this._sampler;\n    },\n    set: function (sampler) {\n      let minificationFilter = sampler.minificationFilter;\n      let magnificationFilter = sampler.magnificationFilter;\n      const context = this._context;\n      const pixelFormat = this._pixelFormat;\n      const pixelDatatype = this._pixelDatatype;\n\n      const mipmap =\n        minificationFilter ===\n          TextureMinificationFilter.NEAREST_MIPMAP_NEAREST ||\n        minificationFilter ===\n          TextureMinificationFilter.NEAREST_MIPMAP_LINEAR ||\n        minificationFilter ===\n          TextureMinificationFilter.LINEAR_MIPMAP_NEAREST ||\n        minificationFilter === TextureMinificationFilter.LINEAR_MIPMAP_LINEAR;\n\n      // float textures only support nearest filtering unless the linear extensions are supported, so override the sampler's settings\n      if (\n        (pixelDatatype === PixelDatatype.FLOAT &&\n          !context.textureFloatLinear) ||\n        (pixelDatatype === PixelDatatype.HALF_FLOAT &&\n          !context.textureHalfFloatLinear)\n      ) {\n        minificationFilter = mipmap\n          ? TextureMinificationFilter.NEAREST_MIPMAP_NEAREST\n          : TextureMinificationFilter.NEAREST;\n        magnificationFilter = TextureMagnificationFilter.NEAREST;\n      }\n\n      // WebGL 2 depth texture only support nearest filtering. See section 3.8.13 OpenGL ES 3 spec\n      if (context.webgl2) {\n        if (PixelFormat.isDepthFormat(pixelFormat)) {\n          minificationFilter = TextureMinificationFilter.NEAREST;\n          magnificationFilter = TextureMagnificationFilter.NEAREST;\n        }\n      }\n\n      const gl = context._gl;\n      const target = this._textureTarget;\n\n      gl.activeTexture(gl.TEXTURE0);\n      gl.bindTexture(target, this._texture);\n      gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, minificationFilter);\n      gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, magnificationFilter);\n      gl.texParameteri(target, gl.TEXTURE_WRAP_S, sampler.wrapS);\n      gl.texParameteri(target, gl.TEXTURE_WRAP_T, sampler.wrapT);\n      if (defined(this._textureFilterAnisotropic)) {\n        gl.texParameteri(\n          target,\n          this._textureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT,\n          sampler.maximumAnisotropy\n        );\n      }\n      gl.bindTexture(target, null);\n\n      this._sampler = sampler;\n    },\n  },\n  pixelFormat: {\n    get: function () {\n      return this._pixelFormat;\n    },\n  },\n  pixelDatatype: {\n    get: function () {\n      return this._pixelDatatype;\n    },\n  },\n  dimensions: {\n    get: function () {\n      return this._dimensions;\n    },\n  },\n  preMultiplyAlpha: {\n    get: function () {\n      return this._preMultiplyAlpha;\n    },\n  },\n  flipY: {\n    get: function () {\n      return this._flipY;\n    },\n  },\n  width: {\n    get: function () {\n      return this._width;\n    },\n  },\n  height: {\n    get: function () {\n      return this._height;\n    },\n  },\n  sizeInBytes: {\n    get: function () {\n      if (this._hasMipmap) {\n        return Math.floor((this._sizeInBytes * 4) / 3);\n      }\n      return this._sizeInBytes;\n    },\n  },\n  _target: {\n    get: function () {\n      return this._textureTarget;\n    },\n  },\n});\n\n/**\n * Copy new image data into this texture, from a source {@link ImageData}, {@link HTMLImageElement}, {@link HTMLCanvasElement}, or {@link HTMLVideoElement}.\n * or an object with width, height, and arrayBufferView properties.\n * @param {Object} options Object with the following properties:\n * @param {Object} options.source The source {@link ImageData}, {@link HTMLImageElement}, {@link HTMLCanvasElement}, or {@link HTMLVideoElement},\n *                        or an object with width, height, and arrayBufferView properties.\n * @param {Number} [options.xOffset=0] The offset in the x direction within the texture to copy into.\n * @param {Number} [options.yOffset=0] The offset in the y direction within the texture to copy into.\n * @param {Boolean} [options.skipColorSpaceConversion=false] If true, any custom gamma or color profiles in the texture will be ignored.\n *\n * @exception {DeveloperError} Cannot call copyFrom when the texture pixel format is DEPTH_COMPONENT or DEPTH_STENCIL.\n * @exception {DeveloperError} Cannot call copyFrom with a compressed texture pixel format.\n * @exception {DeveloperError} xOffset must be greater than or equal to zero.\n * @exception {DeveloperError} yOffset must be greater than or equal to zero.\n * @exception {DeveloperError} xOffset + source.width must be less than or equal to width.\n * @exception {DeveloperError} yOffset + source.height must be less than or equal to height.\n * @exception {DeveloperError} This texture was destroyed, i.e., destroy() was called.\n *\n * @example\n * texture.copyFrom({\n *  source: {\n *   width : 1,\n *   height : 1,\n *   arrayBufferView : new Uint8Array([255, 0, 0, 255])\n *  }\n * });\n */\nTexture.prototype.copyFrom = function (options) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"options\", options);\n  //>>includeEnd('debug');\n\n  const xOffset = defaultValue(options.xOffset, 0);\n  const yOffset = defaultValue(options.yOffset, 0);\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"options.source\", options.source);\n  if (PixelFormat.isDepthFormat(this._pixelFormat)) {\n    throw new DeveloperError(\n      \"Cannot call copyFrom when the texture pixel format is DEPTH_COMPONENT or DEPTH_STENCIL.\"\n    );\n  }\n  if (PixelFormat.isCompressedFormat(this._pixelFormat)) {\n    throw new DeveloperError(\n      \"Cannot call copyFrom with a compressed texture pixel format.\"\n    );\n  }\n  Check.typeOf.number.greaterThanOrEquals(\"xOffset\", xOffset, 0);\n  Check.typeOf.number.greaterThanOrEquals(\"yOffset\", yOffset, 0);\n  Check.typeOf.number.lessThanOrEquals(\n    \"xOffset + options.source.width\",\n    xOffset + options.source.width,\n    this._width\n  );\n  Check.typeOf.number.lessThanOrEquals(\n    \"yOffset + options.source.height\",\n    yOffset + options.source.height,\n    this._height\n  );\n  //>>includeEnd('debug');\n\n  const source = options.source;\n\n  const context = this._context;\n  const gl = context._gl;\n  const target = this._textureTarget;\n\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(target, this._texture);\n\n  const width = source.width;\n  const height = source.height;\n  let arrayBufferView = source.arrayBufferView;\n\n  const textureWidth = this._width;\n  const textureHeight = this._height;\n  const internalFormat = this._internalFormat;\n  const pixelFormat = this._pixelFormat;\n  const pixelDatatype = this._pixelDatatype;\n\n  const preMultiplyAlpha = this._preMultiplyAlpha;\n  const flipY = this._flipY;\n  const skipColorSpaceConversion = defaultValue(\n    options.skipColorSpaceConversion,\n    false\n  );\n\n  let unpackAlignment = 4;\n  if (defined(arrayBufferView)) {\n    unpackAlignment = PixelFormat.alignmentInBytes(\n      pixelFormat,\n      pixelDatatype,\n      width\n    );\n  }\n\n  gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\n\n  if (skipColorSpaceConversion) {\n    gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, gl.NONE);\n  } else {\n    gl.pixelStorei(\n      gl.UNPACK_COLORSPACE_CONVERSION_WEBGL,\n      gl.BROWSER_DEFAULT_WEBGL\n    );\n  }\n\n  let uploaded = false;\n  if (!this._initialized) {\n    if (\n      xOffset === 0 &&\n      yOffset === 0 &&\n      width === textureWidth &&\n      height === textureHeight\n    ) {\n      // initialize the entire texture\n      if (defined(arrayBufferView)) {\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n        if (flipY) {\n          arrayBufferView = PixelFormat.flipY(\n            arrayBufferView,\n            pixelFormat,\n            pixelDatatype,\n            textureWidth,\n            textureHeight\n          );\n        }\n        gl.texImage2D(\n          target,\n          0,\n          internalFormat,\n          textureWidth,\n          textureHeight,\n          0,\n          pixelFormat,\n          PixelDatatype.toWebGLConstant(pixelDatatype, context),\n          arrayBufferView\n        );\n      } else {\n        // Only valid for DOM-Element uploads\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, preMultiplyAlpha);\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\n\n        gl.texImage2D(\n          target,\n          0,\n          internalFormat,\n          pixelFormat,\n          PixelDatatype.toWebGLConstant(pixelDatatype, context),\n          source\n        );\n      }\n      uploaded = true;\n    } else {\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n      // initialize the entire texture to zero\n      const bufferView = PixelFormat.createTypedArray(\n        pixelFormat,\n        pixelDatatype,\n        textureWidth,\n        textureHeight\n      );\n      gl.texImage2D(\n        target,\n        0,\n        internalFormat,\n        textureWidth,\n        textureHeight,\n        0,\n        pixelFormat,\n        PixelDatatype.toWebGLConstant(pixelDatatype, context),\n        bufferView\n      );\n    }\n    this._initialized = true;\n  }\n\n  if (!uploaded) {\n    if (defined(arrayBufferView)) {\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\n\n      if (flipY) {\n        arrayBufferView = PixelFormat.flipY(\n          arrayBufferView,\n          pixelFormat,\n          pixelDatatype,\n          width,\n          height\n        );\n      }\n      gl.texSubImage2D(\n        target,\n        0,\n        xOffset,\n        yOffset,\n        width,\n        height,\n        pixelFormat,\n        PixelDatatype.toWebGLConstant(pixelDatatype, context),\n        arrayBufferView\n      );\n    } else {\n      // Only valid for DOM-Element uploads\n      gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, preMultiplyAlpha);\n      gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\n\n      gl.texSubImage2D(\n        target,\n        0,\n        xOffset,\n        yOffset,\n        pixelFormat,\n        PixelDatatype.toWebGLConstant(pixelDatatype, context),\n        source\n      );\n    }\n  }\n\n  gl.bindTexture(target, null);\n};\n\n/**\n * @param {Number} [xOffset=0] The offset in the x direction within the texture to copy into.\n * @param {Number} [yOffset=0] The offset in the y direction within the texture to copy into.\n * @param {Number} [framebufferXOffset=0] optional\n * @param {Number} [framebufferYOffset=0] optional\n * @param {Number} [width=width] optional\n * @param {Number} [height=height] optional\n *\n * @exception {DeveloperError} Cannot call copyFromFramebuffer when the texture pixel format is DEPTH_COMPONENT or DEPTH_STENCIL.\n * @exception {DeveloperError} Cannot call copyFromFramebuffer when the texture pixel data type is FLOAT.\n * @exception {DeveloperError} Cannot call copyFromFramebuffer when the texture pixel data type is HALF_FLOAT.\n * @exception {DeveloperError} Cannot call copyFrom with a compressed texture pixel format.\n * @exception {DeveloperError} This texture was destroyed, i.e., destroy() was called.\n * @exception {DeveloperError} xOffset must be greater than or equal to zero.\n * @exception {DeveloperError} yOffset must be greater than or equal to zero.\n * @exception {DeveloperError} framebufferXOffset must be greater than or equal to zero.\n * @exception {DeveloperError} framebufferYOffset must be greater than or equal to zero.\n * @exception {DeveloperError} xOffset + width must be less than or equal to width.\n * @exception {DeveloperError} yOffset + height must be less than or equal to height.\n */\nTexture.prototype.copyFromFramebuffer = function (\n  xOffset,\n  yOffset,\n  framebufferXOffset,\n  framebufferYOffset,\n  width,\n  height\n) {\n  xOffset = defaultValue(xOffset, 0);\n  yOffset = defaultValue(yOffset, 0);\n  framebufferXOffset = defaultValue(framebufferXOffset, 0);\n  framebufferYOffset = defaultValue(framebufferYOffset, 0);\n  width = defaultValue(width, this._width);\n  height = defaultValue(height, this._height);\n\n  //>>includeStart('debug', pragmas.debug);\n  if (PixelFormat.isDepthFormat(this._pixelFormat)) {\n    throw new DeveloperError(\n      \"Cannot call copyFromFramebuffer when the texture pixel format is DEPTH_COMPONENT or DEPTH_STENCIL.\"\n    );\n  }\n  if (this._pixelDatatype === PixelDatatype.FLOAT) {\n    throw new DeveloperError(\n      \"Cannot call copyFromFramebuffer when the texture pixel data type is FLOAT.\"\n    );\n  }\n  if (this._pixelDatatype === PixelDatatype.HALF_FLOAT) {\n    throw new DeveloperError(\n      \"Cannot call copyFromFramebuffer when the texture pixel data type is HALF_FLOAT.\"\n    );\n  }\n  if (PixelFormat.isCompressedFormat(this._pixelFormat)) {\n    throw new DeveloperError(\n      \"Cannot call copyFrom with a compressed texture pixel format.\"\n    );\n  }\n\n  Check.typeOf.number.greaterThanOrEquals(\"xOffset\", xOffset, 0);\n  Check.typeOf.number.greaterThanOrEquals(\"yOffset\", yOffset, 0);\n  Check.typeOf.number.greaterThanOrEquals(\n    \"framebufferXOffset\",\n    framebufferXOffset,\n    0\n  );\n  Check.typeOf.number.greaterThanOrEquals(\n    \"framebufferYOffset\",\n    framebufferYOffset,\n    0\n  );\n  Check.typeOf.number.lessThanOrEquals(\n    \"xOffset + width\",\n    xOffset + width,\n    this._width\n  );\n  Check.typeOf.number.lessThanOrEquals(\n    \"yOffset + height\",\n    yOffset + height,\n    this._height\n  );\n  //>>includeEnd('debug');\n\n  const gl = this._context._gl;\n  const target = this._textureTarget;\n\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(target, this._texture);\n  gl.copyTexSubImage2D(\n    target,\n    0,\n    xOffset,\n    yOffset,\n    framebufferXOffset,\n    framebufferYOffset,\n    width,\n    height\n  );\n  gl.bindTexture(target, null);\n  this._initialized = true;\n};\n\n/**\n * @param {MipmapHint} [hint=MipmapHint.DONT_CARE] optional.\n *\n * @exception {DeveloperError} Cannot call generateMipmap when the texture pixel format is DEPTH_COMPONENT or DEPTH_STENCIL.\n * @exception {DeveloperError} Cannot call generateMipmap when the texture pixel format is a compressed format.\n * @exception {DeveloperError} hint is invalid.\n * @exception {DeveloperError} This texture's width must be a power of two to call generateMipmap().\n * @exception {DeveloperError} This texture's height must be a power of two to call generateMipmap().\n * @exception {DeveloperError} This texture was destroyed, i.e., destroy() was called.\n */\nTexture.prototype.generateMipmap = function (hint) {\n  hint = defaultValue(hint, MipmapHint.DONT_CARE);\n\n  //>>includeStart('debug', pragmas.debug);\n  if (PixelFormat.isDepthFormat(this._pixelFormat)) {\n    throw new DeveloperError(\n      \"Cannot call generateMipmap when the texture pixel format is DEPTH_COMPONENT or DEPTH_STENCIL.\"\n    );\n  }\n  if (PixelFormat.isCompressedFormat(this._pixelFormat)) {\n    throw new DeveloperError(\n      \"Cannot call generateMipmap with a compressed pixel format.\"\n    );\n  }\n  if (this._width > 1 && !CesiumMath.isPowerOfTwo(this._width)) {\n    throw new DeveloperError(\n      \"width must be a power of two to call generateMipmap().\"\n    );\n  }\n  if (this._height > 1 && !CesiumMath.isPowerOfTwo(this._height)) {\n    throw new DeveloperError(\n      \"height must be a power of two to call generateMipmap().\"\n    );\n  }\n  if (!MipmapHint.validate(hint)) {\n    throw new DeveloperError(\"hint is invalid.\");\n  }\n  //>>includeEnd('debug');\n\n  this._hasMipmap = true;\n\n  const gl = this._context._gl;\n  const target = this._textureTarget;\n\n  gl.hint(gl.GENERATE_MIPMAP_HINT, hint);\n  gl.activeTexture(gl.TEXTURE0);\n  gl.bindTexture(target, this._texture);\n  gl.generateMipmap(target);\n  gl.bindTexture(target, null);\n};\n\nTexture.prototype.isDestroyed = function () {\n  return false;\n};\n\nTexture.prototype.destroy = function () {\n  this._context._gl.deleteTexture(this._texture);\n  return destroyObject(this);\n};\nexport default Texture;\n","import defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\n\n/**\n * @private\n */\nfunction TextureCache() {\n  this._textures = {};\n  this._numberOfTextures = 0;\n  this._texturesToRelease = {};\n}\n\nObject.defineProperties(TextureCache.prototype, {\n  numberOfTextures: {\n    get: function () {\n      return this._numberOfTextures;\n    },\n  },\n});\n\nTextureCache.prototype.getTexture = function (keyword) {\n  const cachedTexture = this._textures[keyword];\n  if (!defined(cachedTexture)) {\n    return undefined;\n  }\n\n  // No longer want to release this if it was previously released.\n  delete this._texturesToRelease[keyword];\n\n  ++cachedTexture.count;\n  return cachedTexture.texture;\n};\n\nTextureCache.prototype.addTexture = function (keyword, texture) {\n  const cachedTexture = {\n    texture: texture,\n    count: 1,\n  };\n\n  texture.finalDestroy = texture.destroy;\n\n  const that = this;\n  texture.destroy = function () {\n    if (--cachedTexture.count === 0) {\n      that._texturesToRelease[keyword] = cachedTexture;\n    }\n  };\n\n  this._textures[keyword] = cachedTexture;\n  ++this._numberOfTextures;\n};\n\nTextureCache.prototype.destroyReleasedTextures = function () {\n  const texturesToRelease = this._texturesToRelease;\n\n  for (const keyword in texturesToRelease) {\n    if (texturesToRelease.hasOwnProperty(keyword)) {\n      const cachedTexture = texturesToRelease[keyword];\n      delete this._textures[keyword];\n      cachedTexture.texture.finalDestroy();\n      --this._numberOfTextures;\n    }\n  }\n\n  this._texturesToRelease = {};\n};\n\nTextureCache.prototype.isDestroyed = function () {\n  return false;\n};\n\nTextureCache.prototype.destroy = function () {\n  const textures = this._textures;\n  for (const keyword in textures) {\n    if (textures.hasOwnProperty(keyword)) {\n      textures[keyword].texture.finalDestroy();\n    }\n  }\n  return destroyObject(this);\n};\nexport default TextureCache;\n","import WebGLConstants from \"../Core/WebGLConstants.js\";\n\n/**\n * Enumerates all possible filters used when magnifying WebGL textures.\n *\n * @enum {Number}\n *\n * @see TextureMinificationFilter\n */\nconst TextureMagnificationFilter = {\n  /**\n   * Samples the texture by returning the closest pixel.\n   *\n   * @type {Number}\n   * @constant\n   */\n  NEAREST: WebGLConstants.NEAREST,\n  /**\n   * Samples the texture through bi-linear interpolation of the four nearest pixels. This produces smoother results than <code>NEAREST</code> filtering.\n   *\n   * @type {Number}\n   * @constant\n   */\n  LINEAR: WebGLConstants.LINEAR,\n};\n\n/**\n * Validates the given <code>textureMinificationFilter</code> with respect to the possible enum values.\n * @param textureMagnificationFilter\n * @returns {Boolean} <code>true</code> if <code>textureMagnificationFilter</code> is valid.\n *\n * @private\n */\nTextureMagnificationFilter.validate = function (textureMagnificationFilter) {\n  return (\n    textureMagnificationFilter === TextureMagnificationFilter.NEAREST ||\n    textureMagnificationFilter === TextureMagnificationFilter.LINEAR\n  );\n};\n\nexport default Object.freeze(TextureMagnificationFilter);\n","import WebGLConstants from \"../Core/WebGLConstants.js\";\n\n/**\n * Enumerates all possible filters used when minifying WebGL textures.\n *\n * @enum {Number}\n *\n * @see TextureMagnificationFilter\n */\nconst TextureMinificationFilter = {\n  /**\n   * Samples the texture by returning the closest pixel.\n   *\n   * @type {Number}\n   * @constant\n   */\n  NEAREST: WebGLConstants.NEAREST,\n  /**\n   * Samples the texture through bi-linear interpolation of the four nearest pixels. This produces smoother results than <code>NEAREST</code> filtering.\n   *\n   * @type {Number}\n   * @constant\n   */\n  LINEAR: WebGLConstants.LINEAR,\n  /**\n   * Selects the nearest mip level and applies nearest sampling within that level.\n   * <p>\n   * Requires that the texture has a mipmap. The mip level is chosen by the view angle and screen-space size of the texture.\n   * </p>\n   *\n   * @type {Number}\n   * @constant\n   */\n  NEAREST_MIPMAP_NEAREST: WebGLConstants.NEAREST_MIPMAP_NEAREST,\n  /**\n   * Selects the nearest mip level and applies linear sampling within that level.\n   * <p>\n   * Requires that the texture has a mipmap. The mip level is chosen by the view angle and screen-space size of the texture.\n   * </p>\n   *\n   * @type {Number}\n   * @constant\n   */\n  LINEAR_MIPMAP_NEAREST: WebGLConstants.LINEAR_MIPMAP_NEAREST,\n  /**\n   * Read texture values with nearest sampling from two adjacent mip levels and linearly interpolate the results.\n   * <p>\n   * This option provides a good balance of visual quality and speed when sampling from a mipmapped texture.\n   * </p>\n   * <p>\n   * Requires that the texture has a mipmap. The mip level is chosen by the view angle and screen-space size of the texture.\n   * </p>\n   *\n   * @type {Number}\n   * @constant\n   */\n  NEAREST_MIPMAP_LINEAR: WebGLConstants.NEAREST_MIPMAP_LINEAR,\n  /**\n   * Read texture values with linear sampling from two adjacent mip levels and linearly interpolate the results.\n   * <p>\n   * This option provides a good balance of visual quality and speed when sampling from a mipmapped texture.\n   * </p>\n   * <p>\n   * Requires that the texture has a mipmap. The mip level is chosen by the view angle and screen-space size of the texture.\n   * </p>\n   * @type {Number}\n   * @constant\n   */\n  LINEAR_MIPMAP_LINEAR: WebGLConstants.LINEAR_MIPMAP_LINEAR,\n};\n\n/**\n * Validates the given <code>textureMinificationFilter</code> with respect to the possible enum values.\n *\n * @private\n *\n * @param textureMinificationFilter\n * @returns {Boolean} <code>true</code> if <code>textureMinificationFilter</code> is valid.\n */\nTextureMinificationFilter.validate = function (textureMinificationFilter) {\n  return (\n    textureMinificationFilter === TextureMinificationFilter.NEAREST ||\n    textureMinificationFilter === TextureMinificationFilter.LINEAR ||\n    textureMinificationFilter ===\n      TextureMinificationFilter.NEAREST_MIPMAP_NEAREST ||\n    textureMinificationFilter ===\n      TextureMinificationFilter.LINEAR_MIPMAP_NEAREST ||\n    textureMinificationFilter ===\n      TextureMinificationFilter.NEAREST_MIPMAP_LINEAR ||\n    textureMinificationFilter === TextureMinificationFilter.LINEAR_MIPMAP_LINEAR\n  );\n};\n\nexport default Object.freeze(TextureMinificationFilter);\n","import WebGLConstants from \"../Core/WebGLConstants.js\";\n\n/**\n * @private\n */\nconst TextureWrap = {\n  CLAMP_TO_EDGE: WebGLConstants.CLAMP_TO_EDGE,\n  REPEAT: WebGLConstants.REPEAT,\n  MIRRORED_REPEAT: WebGLConstants.MIRRORED_REPEAT,\n\n  validate: function (textureWrap) {\n    return (\n      textureWrap === TextureWrap.CLAMP_TO_EDGE ||\n      textureWrap === TextureWrap.REPEAT ||\n      textureWrap === TextureWrap.MIRRORED_REPEAT\n    );\n  },\n};\nexport default Object.freeze(TextureWrap);\n","import BoundingRectangle from \"../Core/BoundingRectangle.js\";\nimport Cartesian2 from \"../Core/Cartesian2.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Cartesian4 from \"../Core/Cartesian4.js\";\nimport Cartographic from \"../Core/Cartographic.js\";\nimport Color from \"../Core/Color.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport Ellipsoid from \"../Core/Ellipsoid.js\";\nimport EncodedCartesian3 from \"../Core/EncodedCartesian3.js\";\nimport CesiumMath from \"../Core/Math.js\";\nimport Matrix3 from \"../Core/Matrix3.js\";\nimport Matrix4 from \"../Core/Matrix4.js\";\nimport OrthographicFrustum from \"../Core/OrthographicFrustum.js\";\nimport Simon1994PlanetaryPositions from \"../Core/Simon1994PlanetaryPositions.js\";\nimport Transforms from \"../Core/Transforms.js\";\nimport SceneMode from \"../Scene/SceneMode.js\";\nimport SunLight from \"../Scene/SunLight.js\";\n\n/**\n * @private\n * @constructor\n */\nfunction UniformState() {\n  /**\n   * @type {Texture}\n   */\n  this.globeDepthTexture = undefined;\n  /**\n   * @type {Number}\n   */\n  this.gamma = undefined;\n\n  this._viewport = new BoundingRectangle();\n  this._viewportCartesian4 = new Cartesian4();\n  this._viewportDirty = false;\n  this._viewportOrthographicMatrix = Matrix4.clone(Matrix4.IDENTITY);\n  this._viewportTransformation = Matrix4.clone(Matrix4.IDENTITY);\n\n  this._model = Matrix4.clone(Matrix4.IDENTITY);\n  this._view = Matrix4.clone(Matrix4.IDENTITY);\n  this._inverseView = Matrix4.clone(Matrix4.IDENTITY);\n  this._projection = Matrix4.clone(Matrix4.IDENTITY);\n  this._infiniteProjection = Matrix4.clone(Matrix4.IDENTITY);\n  this._entireFrustum = new Cartesian2();\n  this._currentFrustum = new Cartesian2();\n  this._frustumPlanes = new Cartesian4();\n  this._farDepthFromNearPlusOne = undefined;\n  this._log2FarDepthFromNearPlusOne = undefined;\n  this._oneOverLog2FarDepthFromNearPlusOne = undefined;\n\n  this._frameState = undefined;\n  this._temeToPseudoFixed = Matrix3.clone(Matrix4.IDENTITY);\n\n  // Derived members\n  this._view3DDirty = true;\n  this._view3D = new Matrix4();\n\n  this._inverseView3DDirty = true;\n  this._inverseView3D = new Matrix4();\n\n  this._inverseModelDirty = true;\n  this._inverseModel = new Matrix4();\n\n  this._inverseTransposeModelDirty = true;\n  this._inverseTransposeModel = new Matrix3();\n\n  this._viewRotation = new Matrix3();\n  this._inverseViewRotation = new Matrix3();\n\n  this._viewRotation3D = new Matrix3();\n  this._inverseViewRotation3D = new Matrix3();\n\n  this._inverseProjectionDirty = true;\n  this._inverseProjection = new Matrix4();\n\n  this._modelViewDirty = true;\n  this._modelView = new Matrix4();\n\n  this._modelView3DDirty = true;\n  this._modelView3D = new Matrix4();\n\n  this._modelViewRelativeToEyeDirty = true;\n  this._modelViewRelativeToEye = new Matrix4();\n\n  this._inverseModelViewDirty = true;\n  this._inverseModelView = new Matrix4();\n\n  this._inverseModelView3DDirty = true;\n  this._inverseModelView3D = new Matrix4();\n\n  this._viewProjectionDirty = true;\n  this._viewProjection = new Matrix4();\n\n  this._inverseViewProjectionDirty = true;\n  this._inverseViewProjection = new Matrix4();\n\n  this._modelViewProjectionDirty = true;\n  this._modelViewProjection = new Matrix4();\n\n  this._inverseModelViewProjectionDirty = true;\n  this._inverseModelViewProjection = new Matrix4();\n\n  this._modelViewProjectionRelativeToEyeDirty = true;\n  this._modelViewProjectionRelativeToEye = new Matrix4();\n\n  this._modelViewInfiniteProjectionDirty = true;\n  this._modelViewInfiniteProjection = new Matrix4();\n\n  this._normalDirty = true;\n  this._normal = new Matrix3();\n\n  this._normal3DDirty = true;\n  this._normal3D = new Matrix3();\n\n  this._inverseNormalDirty = true;\n  this._inverseNormal = new Matrix3();\n\n  this._inverseNormal3DDirty = true;\n  this._inverseNormal3D = new Matrix3();\n\n  this._encodedCameraPositionMCDirty = true;\n  this._encodedCameraPositionMC = new EncodedCartesian3();\n  this._cameraPosition = new Cartesian3();\n\n  this._sunPositionWC = new Cartesian3();\n  this._sunPositionColumbusView = new Cartesian3();\n  this._sunDirectionWC = new Cartesian3();\n  this._sunDirectionEC = new Cartesian3();\n  this._moonDirectionEC = new Cartesian3();\n\n  this._lightDirectionWC = new Cartesian3();\n  this._lightDirectionEC = new Cartesian3();\n  this._lightColor = new Cartesian3();\n  this._lightColorHdr = new Cartesian3();\n\n  this._pass = undefined;\n  this._mode = undefined;\n  this._mapProjection = undefined;\n  this._ellipsoid = undefined;\n  this._cameraDirection = new Cartesian3();\n  this._cameraRight = new Cartesian3();\n  this._cameraUp = new Cartesian3();\n  this._frustum2DWidth = 0.0;\n  this._eyeHeight = 0.0;\n  this._eyeHeight2D = new Cartesian2();\n  this._pixelRatio = 1.0;\n  this._orthographicIn3D = false;\n  this._backgroundColor = new Color();\n\n  this._brdfLut = undefined;\n  this._environmentMap = undefined;\n\n  this._sphericalHarmonicCoefficients = undefined;\n  this._specularEnvironmentMaps = undefined;\n  this._specularEnvironmentMapsDimensions = new Cartesian2();\n  this._specularEnvironmentMapsMaximumLOD = undefined;\n\n  this._fogDensity = undefined;\n\n  this._invertClassificationColor = undefined;\n\n  this._splitPosition = 0.0;\n  this._pixelSizePerMeter = undefined;\n  this._geometricToleranceOverMeter = undefined;\n\n  this._minimumDisableDepthTestDistance = undefined;\n}\n\nObject.defineProperties(UniformState.prototype, {\n  /**\n   * @memberof UniformState.prototype\n   * @type {FrameState}\n   * @readonly\n   */\n  frameState: {\n    get: function () {\n      return this._frameState;\n    },\n  },\n  /**\n   * @memberof UniformState.prototype\n   * @type {BoundingRectangle}\n   */\n  viewport: {\n    get: function () {\n      return this._viewport;\n    },\n    set: function (viewport) {\n      if (!BoundingRectangle.equals(viewport, this._viewport)) {\n        BoundingRectangle.clone(viewport, this._viewport);\n\n        const v = this._viewport;\n        const vc = this._viewportCartesian4;\n        vc.x = v.x;\n        vc.y = v.y;\n        vc.z = v.width;\n        vc.w = v.height;\n\n        this._viewportDirty = true;\n      }\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @private\n   */\n  viewportCartesian4: {\n    get: function () {\n      return this._viewportCartesian4;\n    },\n  },\n\n  viewportOrthographic: {\n    get: function () {\n      cleanViewport(this);\n      return this._viewportOrthographicMatrix;\n    },\n  },\n\n  viewportTransformation: {\n    get: function () {\n      cleanViewport(this);\n      return this._viewportTransformation;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  model: {\n    get: function () {\n      return this._model;\n    },\n    set: function (matrix) {\n      Matrix4.clone(matrix, this._model);\n\n      this._modelView3DDirty = true;\n      this._inverseModelView3DDirty = true;\n      this._inverseModelDirty = true;\n      this._inverseTransposeModelDirty = true;\n      this._modelViewDirty = true;\n      this._inverseModelViewDirty = true;\n      this._modelViewRelativeToEyeDirty = true;\n      this._inverseModelViewDirty = true;\n      this._modelViewProjectionDirty = true;\n      this._inverseModelViewProjectionDirty = true;\n      this._modelViewProjectionRelativeToEyeDirty = true;\n      this._modelViewInfiniteProjectionDirty = true;\n      this._normalDirty = true;\n      this._inverseNormalDirty = true;\n      this._normal3DDirty = true;\n      this._inverseNormal3DDirty = true;\n      this._encodedCameraPositionMCDirty = true;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  inverseModel: {\n    get: function () {\n      if (this._inverseModelDirty) {\n        this._inverseModelDirty = false;\n\n        Matrix4.inverse(this._model, this._inverseModel);\n      }\n\n      return this._inverseModel;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @private\n   */\n  inverseTransposeModel: {\n    get: function () {\n      const m = this._inverseTransposeModel;\n      if (this._inverseTransposeModelDirty) {\n        this._inverseTransposeModelDirty = false;\n\n        Matrix4.getMatrix3(this.inverseModel, m);\n        Matrix3.transpose(m, m);\n      }\n\n      return m;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  view: {\n    get: function () {\n      return this._view;\n    },\n  },\n\n  /**\n   * The 3D view matrix.  In 3D mode, this is identical to {@link UniformState#view},\n   * but in 2D and Columbus View it is a synthetic matrix based on the equivalent position\n   * of the camera in the 3D world.\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  view3D: {\n    get: function () {\n      updateView3D(this);\n      return this._view3D;\n    },\n  },\n\n  /**\n   * The 3x3 rotation matrix of the current view matrix ({@link UniformState#view}).\n   * @memberof UniformState.prototype\n   * @type {Matrix3}\n   */\n  viewRotation: {\n    get: function () {\n      updateView3D(this);\n      return this._viewRotation;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix3}\n   */\n  viewRotation3D: {\n    get: function () {\n      updateView3D(this);\n      return this._viewRotation3D;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  inverseView: {\n    get: function () {\n      return this._inverseView;\n    },\n  },\n\n  /**\n   * the 4x4 inverse-view matrix that transforms from eye to 3D world coordinates.  In 3D mode, this is\n   * identical to {@link UniformState#inverseView}, but in 2D and Columbus View it is a synthetic matrix\n   * based on the equivalent position of the camera in the 3D world.\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  inverseView3D: {\n    get: function () {\n      updateInverseView3D(this);\n      return this._inverseView3D;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix3}\n   */\n  inverseViewRotation: {\n    get: function () {\n      return this._inverseViewRotation;\n    },\n  },\n\n  /**\n   * The 3x3 rotation matrix of the current 3D inverse-view matrix ({@link UniformState#inverseView3D}).\n   * @memberof UniformState.prototype\n   * @type {Matrix3}\n   */\n  inverseViewRotation3D: {\n    get: function () {\n      updateInverseView3D(this);\n      return this._inverseViewRotation3D;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  projection: {\n    get: function () {\n      return this._projection;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  inverseProjection: {\n    get: function () {\n      cleanInverseProjection(this);\n      return this._inverseProjection;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  infiniteProjection: {\n    get: function () {\n      return this._infiniteProjection;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  modelView: {\n    get: function () {\n      cleanModelView(this);\n      return this._modelView;\n    },\n  },\n\n  /**\n   * The 3D model-view matrix.  In 3D mode, this is equivalent to {@link UniformState#modelView}.  In 2D and\n   * Columbus View, however, it is a synthetic matrix based on the equivalent position of the camera in the 3D world.\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  modelView3D: {\n    get: function () {\n      cleanModelView3D(this);\n      return this._modelView3D;\n    },\n  },\n\n  /**\n   * Model-view relative to eye matrix.\n   *\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  modelViewRelativeToEye: {\n    get: function () {\n      cleanModelViewRelativeToEye(this);\n      return this._modelViewRelativeToEye;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  inverseModelView: {\n    get: function () {\n      cleanInverseModelView(this);\n      return this._inverseModelView;\n    },\n  },\n\n  /**\n   * The inverse of the 3D model-view matrix.  In 3D mode, this is equivalent to {@link UniformState#inverseModelView}.\n   * In 2D and Columbus View, however, it is a synthetic matrix based on the equivalent position of the camera in the 3D world.\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  inverseModelView3D: {\n    get: function () {\n      cleanInverseModelView3D(this);\n      return this._inverseModelView3D;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  viewProjection: {\n    get: function () {\n      cleanViewProjection(this);\n      return this._viewProjection;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  inverseViewProjection: {\n    get: function () {\n      cleanInverseViewProjection(this);\n      return this._inverseViewProjection;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  modelViewProjection: {\n    get: function () {\n      cleanModelViewProjection(this);\n      return this._modelViewProjection;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  inverseModelViewProjection: {\n    get: function () {\n      cleanInverseModelViewProjection(this);\n      return this._inverseModelViewProjection;\n    },\n  },\n\n  /**\n   * Model-view-projection relative to eye matrix.\n   *\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  modelViewProjectionRelativeToEye: {\n    get: function () {\n      cleanModelViewProjectionRelativeToEye(this);\n      return this._modelViewProjectionRelativeToEye;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Matrix4}\n   */\n  modelViewInfiniteProjection: {\n    get: function () {\n      cleanModelViewInfiniteProjection(this);\n      return this._modelViewInfiniteProjection;\n    },\n  },\n\n  /**\n   * A 3x3 normal transformation matrix that transforms normal vectors in model coordinates to\n   * eye coordinates.\n   * @memberof UniformState.prototype\n   * @type {Matrix3}\n   */\n  normal: {\n    get: function () {\n      cleanNormal(this);\n      return this._normal;\n    },\n  },\n\n  /**\n   * A 3x3 normal transformation matrix that transforms normal vectors in 3D model\n   * coordinates to eye coordinates.  In 3D mode, this is identical to\n   * {@link UniformState#normal}, but in 2D and Columbus View it represents the normal transformation\n   * matrix as if the camera were at an equivalent location in 3D mode.\n   * @memberof UniformState.prototype\n   * @type {Matrix3}\n   */\n  normal3D: {\n    get: function () {\n      cleanNormal3D(this);\n      return this._normal3D;\n    },\n  },\n\n  /**\n   * An inverse 3x3 normal transformation matrix that transforms normal vectors in model coordinates\n   * to eye coordinates.\n   * @memberof UniformState.prototype\n   * @type {Matrix3}\n   */\n  inverseNormal: {\n    get: function () {\n      cleanInverseNormal(this);\n      return this._inverseNormal;\n    },\n  },\n\n  /**\n   * An inverse 3x3 normal transformation matrix that transforms normal vectors in eye coordinates\n   * to 3D model coordinates.  In 3D mode, this is identical to\n   * {@link UniformState#inverseNormal}, but in 2D and Columbus View it represents the normal transformation\n   * matrix as if the camera were at an equivalent location in 3D mode.\n   * @memberof UniformState.prototype\n   * @type {Matrix3}\n   */\n  inverseNormal3D: {\n    get: function () {\n      cleanInverseNormal3D(this);\n      return this._inverseNormal3D;\n    },\n  },\n\n  /**\n   * The near distance (<code>x</code>) and the far distance (<code>y</code>) of the frustum defined by the camera.\n   * This is the largest possible frustum, not an individual frustum used for multi-frustum rendering.\n   * @memberof UniformState.prototype\n   * @type {Cartesian2}\n   */\n  entireFrustum: {\n    get: function () {\n      return this._entireFrustum;\n    },\n  },\n\n  /**\n   * The near distance (<code>x</code>) and the far distance (<code>y</code>) of the frustum defined by the camera.\n   * This is the individual frustum used for multi-frustum rendering.\n   * @memberof UniformState.prototype\n   * @type {Cartesian2}\n   */\n  currentFrustum: {\n    get: function () {\n      return this._currentFrustum;\n    },\n  },\n\n  /**\n   * The distances to the frustum planes. The top, bottom, left and right distances are\n   * the x, y, z, and w components, respectively.\n   * @memberof UniformState.prototype\n   * @type {Cartesian4}\n   */\n  frustumPlanes: {\n    get: function () {\n      return this._frustumPlanes;\n    },\n  },\n\n  /**\n   * The far plane's distance from the near plane, plus 1.0.\n   *\n   * @memberof UniformState.prototype\n   * @type {Number}\n   */\n  farDepthFromNearPlusOne: {\n    get: function () {\n      return this._farDepthFromNearPlusOne;\n    },\n  },\n\n  /**\n   * The log2 of {@link UniformState#farDepthFromNearPlusOne}.\n   *\n   * @memberof UniformState.prototype\n   * @type {Number}\n   */\n  log2FarDepthFromNearPlusOne: {\n    get: function () {\n      return this._log2FarDepthFromNearPlusOne;\n    },\n  },\n\n  /**\n   * 1.0 divided by {@link UniformState#log2FarDepthFromNearPlusOne}.\n   *\n   * @memberof UniformState.prototype\n   * @type {Number}\n   */\n  oneOverLog2FarDepthFromNearPlusOne: {\n    get: function () {\n      return this._oneOverLog2FarDepthFromNearPlusOne;\n    },\n  },\n\n  /**\n   * The height in meters of the eye (camera) above or below the ellipsoid.\n   * @memberof UniformState.prototype\n   * @type {Number}\n   */\n  eyeHeight: {\n    get: function () {\n      return this._eyeHeight;\n    },\n  },\n\n  /**\n   * The height (<code>x</code>) and the height squared (<code>y</code>)\n   * in meters of the eye (camera) above the 2D world plane. This uniform is only valid\n   * when the {@link SceneMode} is <code>SCENE2D</code>.\n   * @memberof UniformState.prototype\n   * @type {Cartesian2}\n   */\n  eyeHeight2D: {\n    get: function () {\n      return this._eyeHeight2D;\n    },\n  },\n\n  /**\n   * The sun position in 3D world coordinates at the current scene time.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3}\n   */\n  sunPositionWC: {\n    get: function () {\n      return this._sunPositionWC;\n    },\n  },\n\n  /**\n   * The sun position in 2D world coordinates at the current scene time.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3}\n   */\n  sunPositionColumbusView: {\n    get: function () {\n      return this._sunPositionColumbusView;\n    },\n  },\n\n  /**\n   * A normalized vector to the sun in 3D world coordinates at the current scene time.  Even in 2D or\n   * Columbus View mode, this returns the direction to the sun in the 3D scene.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3}\n   */\n  sunDirectionWC: {\n    get: function () {\n      return this._sunDirectionWC;\n    },\n  },\n\n  /**\n   * A normalized vector to the sun in eye coordinates at the current scene time.  In 3D mode, this\n   * returns the actual vector from the camera position to the sun position.  In 2D and Columbus View, it returns\n   * the vector from the equivalent 3D camera position to the position of the sun in the 3D scene.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3}\n   */\n  sunDirectionEC: {\n    get: function () {\n      return this._sunDirectionEC;\n    },\n  },\n\n  /**\n   * A normalized vector to the moon in eye coordinates at the current scene time.  In 3D mode, this\n   * returns the actual vector from the camera position to the moon position.  In 2D and Columbus View, it returns\n   * the vector from the equivalent 3D camera position to the position of the moon in the 3D scene.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3}\n   */\n  moonDirectionEC: {\n    get: function () {\n      return this._moonDirectionEC;\n    },\n  },\n\n  /**\n   * A normalized vector to the scene's light source in 3D world coordinates.  Even in 2D or\n   * Columbus View mode, this returns the direction to the light in the 3D scene.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3}\n   */\n  lightDirectionWC: {\n    get: function () {\n      return this._lightDirectionWC;\n    },\n  },\n\n  /**\n   * A normalized vector to the scene's light source in eye coordinates.  In 3D mode, this\n   * returns the actual vector from the camera position to the light.  In 2D and Columbus View, it returns\n   * the vector from the equivalent 3D camera position in the 3D scene.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3}\n   */\n  lightDirectionEC: {\n    get: function () {\n      return this._lightDirectionEC;\n    },\n  },\n\n  /**\n   * The color of light emitted by the scene's light source. This is equivalent to the light\n   * color multiplied by the light intensity limited to a maximum luminance of 1.0 suitable\n   * for non-HDR lighting.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3}\n   */\n  lightColor: {\n    get: function () {\n      return this._lightColor;\n    },\n  },\n\n  /**\n   * The high dynamic range color of light emitted by the scene's light source. This is equivalent to\n   * the light color multiplied by the light intensity suitable for HDR lighting.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3}\n   */\n  lightColorHdr: {\n    get: function () {\n      return this._lightColorHdr;\n    },\n  },\n\n  /**\n   * The high bits of the camera position.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3}\n   */\n  encodedCameraPositionMCHigh: {\n    get: function () {\n      cleanEncodedCameraPositionMC(this);\n      return this._encodedCameraPositionMC.high;\n    },\n  },\n\n  /**\n   * The low bits of the camera position.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3}\n   */\n  encodedCameraPositionMCLow: {\n    get: function () {\n      cleanEncodedCameraPositionMC(this);\n      return this._encodedCameraPositionMC.low;\n    },\n  },\n\n  /**\n   * A 3x3 matrix that transforms from True Equator Mean Equinox (TEME) axes to the\n   * pseudo-fixed axes at the Scene's current time.\n   * @memberof UniformState.prototype\n   * @type {Matrix3}\n   */\n  temeToPseudoFixedMatrix: {\n    get: function () {\n      return this._temeToPseudoFixed;\n    },\n  },\n\n  /**\n   * Gets the scaling factor for transforming from the canvas\n   * pixel space to canvas coordinate space.\n   * @memberof UniformState.prototype\n   * @type {Number}\n   */\n  pixelRatio: {\n    get: function () {\n      return this._pixelRatio;\n    },\n  },\n\n  /**\n   * A scalar used to mix a color with the fog color based on the distance to the camera.\n   * @memberof UniformState.prototype\n   * @type {Number}\n   */\n  fogDensity: {\n    get: function () {\n      return this._fogDensity;\n    },\n  },\n\n  /**\n   * A scalar that represents the geometric tolerance per meter\n   * @memberof UniformState.prototype\n   * @type {Number}\n   */\n  geometricToleranceOverMeter: {\n    get: function () {\n      return this._geometricToleranceOverMeter;\n    },\n  },\n\n  /**\n   * @memberof UniformState.prototype\n   * @type {Pass}\n   */\n  pass: {\n    get: function () {\n      return this._pass;\n    },\n  },\n\n  /**\n   * The current background color\n   * @memberof UniformState.prototype\n   * @type {Color}\n   */\n  backgroundColor: {\n    get: function () {\n      return this._backgroundColor;\n    },\n  },\n\n  /**\n   * The look up texture used to find the BRDF for a material\n   * @memberof UniformState.prototype\n   * @type {Texture}\n   */\n  brdfLut: {\n    get: function () {\n      return this._brdfLut;\n    },\n  },\n\n  /**\n   * The environment map of the scene\n   * @memberof UniformState.prototype\n   * @type {CubeMap}\n   */\n  environmentMap: {\n    get: function () {\n      return this._environmentMap;\n    },\n  },\n\n  /**\n   * The spherical harmonic coefficients of the scene.\n   * @memberof UniformState.prototype\n   * @type {Cartesian3[]}\n   */\n  sphericalHarmonicCoefficients: {\n    get: function () {\n      return this._sphericalHarmonicCoefficients;\n    },\n  },\n\n  /**\n   * The specular environment map atlas of the scene.\n   * @memberof UniformState.prototype\n   * @type {Texture}\n   */\n  specularEnvironmentMaps: {\n    get: function () {\n      return this._specularEnvironmentMaps;\n    },\n  },\n\n  /**\n   * The dimensions of the specular environment map atlas of the scene.\n   * @memberof UniformState.prototype\n   * @type {Cartesian2}\n   */\n  specularEnvironmentMapsDimensions: {\n    get: function () {\n      return this._specularEnvironmentMapsDimensions;\n    },\n  },\n\n  /**\n   * The maximum level-of-detail of the specular environment map atlas of the scene.\n   * @memberof UniformState.prototype\n   * @type {Number}\n   */\n  specularEnvironmentMapsMaximumLOD: {\n    get: function () {\n      return this._specularEnvironmentMapsMaximumLOD;\n    },\n  },\n\n  /**\n   * The splitter position to use when rendering with a splitter. This will be in pixel coordinates relative to the canvas.\n   * @memberof UniformState.prototype\n   * @type {Number}\n   */\n  splitPosition: {\n    get: function () {\n      return this._splitPosition;\n    },\n  },\n\n  /**\n   * The distance from the camera at which to disable the depth test of billboards, labels and points\n   * to, for example, prevent clipping against terrain. When set to zero, the depth test should always\n   * be applied. When less than zero, the depth test should never be applied.\n   *\n   * @memberof UniformState.prototype\n   * @type {Number}\n   */\n  minimumDisableDepthTestDistance: {\n    get: function () {\n      return this._minimumDisableDepthTestDistance;\n    },\n  },\n\n  /**\n   * The highlight color of unclassified 3D Tiles.\n   *\n   * @memberof UniformState.prototype\n   * @type {Color}\n   */\n  invertClassificationColor: {\n    get: function () {\n      return this._invertClassificationColor;\n    },\n  },\n\n  /**\n   * Whether or not the current projection is orthographic in 3D.\n   *\n   * @memberOf UniformState.prototype\n   * @type {Boolean}\n   */\n  orthographicIn3D: {\n    get: function () {\n      return this._orthographicIn3D;\n    },\n  },\n\n  /**\n   * The current ellipsoid.\n   *\n   * @memberOf UniformState.prototype\n   * @type {Ellipsoid}\n   */\n  ellipsoid: {\n    get: function () {\n      return defaultValue(this._ellipsoid, Ellipsoid.WGS84);\n    },\n  },\n});\n\nfunction setView(uniformState, matrix) {\n  Matrix4.clone(matrix, uniformState._view);\n  Matrix4.getMatrix3(matrix, uniformState._viewRotation);\n\n  uniformState._view3DDirty = true;\n  uniformState._inverseView3DDirty = true;\n  uniformState._modelViewDirty = true;\n  uniformState._modelView3DDirty = true;\n  uniformState._modelViewRelativeToEyeDirty = true;\n  uniformState._inverseModelViewDirty = true;\n  uniformState._inverseModelView3DDirty = true;\n  uniformState._viewProjectionDirty = true;\n  uniformState._inverseViewProjectionDirty = true;\n  uniformState._modelViewProjectionDirty = true;\n  uniformState._modelViewProjectionRelativeToEyeDirty = true;\n  uniformState._modelViewInfiniteProjectionDirty = true;\n  uniformState._normalDirty = true;\n  uniformState._inverseNormalDirty = true;\n  uniformState._normal3DDirty = true;\n  uniformState._inverseNormal3DDirty = true;\n}\n\nfunction setInverseView(uniformState, matrix) {\n  Matrix4.clone(matrix, uniformState._inverseView);\n  Matrix4.getMatrix3(matrix, uniformState._inverseViewRotation);\n}\n\nfunction setProjection(uniformState, matrix) {\n  Matrix4.clone(matrix, uniformState._projection);\n\n  uniformState._inverseProjectionDirty = true;\n  uniformState._viewProjectionDirty = true;\n  uniformState._inverseViewProjectionDirty = true;\n  uniformState._modelViewProjectionDirty = true;\n  uniformState._modelViewProjectionRelativeToEyeDirty = true;\n}\n\nfunction setInfiniteProjection(uniformState, matrix) {\n  Matrix4.clone(matrix, uniformState._infiniteProjection);\n\n  uniformState._modelViewInfiniteProjectionDirty = true;\n}\n\nfunction setCamera(uniformState, camera) {\n  Cartesian3.clone(camera.positionWC, uniformState._cameraPosition);\n  Cartesian3.clone(camera.directionWC, uniformState._cameraDirection);\n  Cartesian3.clone(camera.rightWC, uniformState._cameraRight);\n  Cartesian3.clone(camera.upWC, uniformState._cameraUp);\n\n  const positionCartographic = camera.positionCartographic;\n  if (!defined(positionCartographic)) {\n    uniformState._eyeHeight = -uniformState._ellipsoid.maximumRadius;\n  } else {\n    uniformState._eyeHeight = positionCartographic.height;\n  }\n\n  uniformState._encodedCameraPositionMCDirty = true;\n}\n\nlet transformMatrix = new Matrix3();\nconst sunCartographicScratch = new Cartographic();\nfunction setSunAndMoonDirections(uniformState, frameState) {\n  if (\n    !defined(\n      Transforms.computeIcrfToFixedMatrix(frameState.time, transformMatrix)\n    )\n  ) {\n    transformMatrix = Transforms.computeTemeToPseudoFixedMatrix(\n      frameState.time,\n      transformMatrix\n    );\n  }\n\n  let position = Simon1994PlanetaryPositions.computeSunPositionInEarthInertialFrame(\n    frameState.time,\n    uniformState._sunPositionWC\n  );\n  Matrix3.multiplyByVector(transformMatrix, position, position);\n\n  Cartesian3.normalize(position, uniformState._sunDirectionWC);\n\n  position = Matrix3.multiplyByVector(\n    uniformState.viewRotation3D,\n    position,\n    uniformState._sunDirectionEC\n  );\n  Cartesian3.normalize(position, position);\n\n  position = Simon1994PlanetaryPositions.computeMoonPositionInEarthInertialFrame(\n    frameState.time,\n    uniformState._moonDirectionEC\n  );\n  Matrix3.multiplyByVector(transformMatrix, position, position);\n  Matrix3.multiplyByVector(uniformState.viewRotation3D, position, position);\n  Cartesian3.normalize(position, position);\n\n  const projection = frameState.mapProjection;\n  const ellipsoid = projection.ellipsoid;\n  const sunCartographic = ellipsoid.cartesianToCartographic(\n    uniformState._sunPositionWC,\n    sunCartographicScratch\n  );\n  projection.project(sunCartographic, uniformState._sunPositionColumbusView);\n}\n\n/**\n * Synchronizes the frustum's state with the camera state.  This is called\n * by the {@link Scene} when rendering to ensure that automatic GLSL uniforms\n * are set to the right value.\n *\n * @param {Object} camera The camera to synchronize with.\n */\nUniformState.prototype.updateCamera = function (camera) {\n  setView(this, camera.viewMatrix);\n  setInverseView(this, camera.inverseViewMatrix);\n  setCamera(this, camera);\n\n  this._entireFrustum.x = camera.frustum.near;\n  this._entireFrustum.y = camera.frustum.far;\n  this.updateFrustum(camera.frustum);\n\n  this._orthographicIn3D =\n    this._mode !== SceneMode.SCENE2D &&\n    camera.frustum instanceof OrthographicFrustum;\n};\n\n/**\n * Synchronizes the frustum's state with the uniform state.  This is called\n * by the {@link Scene} when rendering to ensure that automatic GLSL uniforms\n * are set to the right value.\n *\n * @param {Object} frustum The frustum to synchronize with.\n */\nUniformState.prototype.updateFrustum = function (frustum) {\n  setProjection(this, frustum.projectionMatrix);\n  if (defined(frustum.infiniteProjectionMatrix)) {\n    setInfiniteProjection(this, frustum.infiniteProjectionMatrix);\n  }\n  this._currentFrustum.x = frustum.near;\n  this._currentFrustum.y = frustum.far;\n\n  this._farDepthFromNearPlusOne = frustum.far - frustum.near + 1.0;\n  this._log2FarDepthFromNearPlusOne = CesiumMath.log2(\n    this._farDepthFromNearPlusOne\n  );\n  this._oneOverLog2FarDepthFromNearPlusOne =\n    1.0 / this._log2FarDepthFromNearPlusOne;\n\n  if (defined(frustum._offCenterFrustum)) {\n    frustum = frustum._offCenterFrustum;\n  }\n\n  this._frustumPlanes.x = frustum.top;\n  this._frustumPlanes.y = frustum.bottom;\n  this._frustumPlanes.z = frustum.left;\n  this._frustumPlanes.w = frustum.right;\n};\n\nUniformState.prototype.updatePass = function (pass) {\n  this._pass = pass;\n};\n\nconst EMPTY_ARRAY = [];\nconst defaultLight = new SunLight();\n\n/**\n * Synchronizes frame state with the uniform state.  This is called\n * by the {@link Scene} when rendering to ensure that automatic GLSL uniforms\n * are set to the right value.\n *\n * @param {FrameState} frameState The frameState to synchronize with.\n */\nUniformState.prototype.update = function (frameState) {\n  this._mode = frameState.mode;\n  this._mapProjection = frameState.mapProjection;\n  this._ellipsoid = frameState.mapProjection.ellipsoid;\n  this._pixelRatio = frameState.pixelRatio;\n\n  const camera = frameState.camera;\n  this.updateCamera(camera);\n\n  if (frameState.mode === SceneMode.SCENE2D) {\n    this._frustum2DWidth = camera.frustum.right - camera.frustum.left;\n    this._eyeHeight2D.x = this._frustum2DWidth * 0.5;\n    this._eyeHeight2D.y = this._eyeHeight2D.x * this._eyeHeight2D.x;\n  } else {\n    this._frustum2DWidth = 0.0;\n    this._eyeHeight2D.x = 0.0;\n    this._eyeHeight2D.y = 0.0;\n  }\n\n  setSunAndMoonDirections(this, frameState);\n\n  const light = defaultValue(frameState.light, defaultLight);\n  if (light instanceof SunLight) {\n    this._lightDirectionWC = Cartesian3.clone(\n      this._sunDirectionWC,\n      this._lightDirectionWC\n    );\n    this._lightDirectionEC = Cartesian3.clone(\n      this._sunDirectionEC,\n      this._lightDirectionEC\n    );\n  } else {\n    this._lightDirectionWC = Cartesian3.normalize(\n      Cartesian3.negate(light.direction, this._lightDirectionWC),\n      this._lightDirectionWC\n    );\n    this._lightDirectionEC = Matrix3.multiplyByVector(\n      this.viewRotation3D,\n      this._lightDirectionWC,\n      this._lightDirectionEC\n    );\n  }\n\n  const lightColor = light.color;\n  let lightColorHdr = Cartesian3.fromElements(\n    lightColor.red,\n    lightColor.green,\n    lightColor.blue,\n    this._lightColorHdr\n  );\n  lightColorHdr = Cartesian3.multiplyByScalar(\n    lightColorHdr,\n    light.intensity,\n    lightColorHdr\n  );\n  const maximumComponent = Cartesian3.maximumComponent(lightColorHdr);\n  if (maximumComponent > 1.0) {\n    Cartesian3.divideByScalar(\n      lightColorHdr,\n      maximumComponent,\n      this._lightColor\n    );\n  } else {\n    Cartesian3.clone(lightColorHdr, this._lightColor);\n  }\n\n  const brdfLutGenerator = frameState.brdfLutGenerator;\n  const brdfLut = defined(brdfLutGenerator)\n    ? brdfLutGenerator.colorTexture\n    : undefined;\n  this._brdfLut = brdfLut;\n\n  this._environmentMap = defaultValue(\n    frameState.environmentMap,\n    frameState.context.defaultCubeMap\n  );\n\n  // IE 11 doesn't optimize out uniforms that are #ifdef'd out. So undefined values for the spherical harmonic\n  // coefficients and specular environment map atlas dimensions cause a crash.\n  this._sphericalHarmonicCoefficients = defaultValue(\n    frameState.sphericalHarmonicCoefficients,\n    EMPTY_ARRAY\n  );\n  this._specularEnvironmentMaps = frameState.specularEnvironmentMaps;\n  this._specularEnvironmentMapsMaximumLOD =\n    frameState.specularEnvironmentMapsMaximumLOD;\n\n  if (defined(this._specularEnvironmentMaps)) {\n    Cartesian2.clone(\n      this._specularEnvironmentMaps.dimensions,\n      this._specularEnvironmentMapsDimensions\n    );\n  }\n\n  this._fogDensity = frameState.fog.density;\n\n  this._invertClassificationColor = frameState.invertClassificationColor;\n\n  this._frameState = frameState;\n  this._temeToPseudoFixed = Transforms.computeTemeToPseudoFixedMatrix(\n    frameState.time,\n    this._temeToPseudoFixed\n  );\n\n  // Convert the relative splitPosition to absolute pixel coordinates\n  this._splitPosition =\n    frameState.splitPosition * frameState.context.drawingBufferWidth;\n  const fov = camera.frustum.fov;\n  const viewport = this._viewport;\n  let pixelSizePerMeter;\n  if (defined(fov)) {\n    if (viewport.height > viewport.width) {\n      pixelSizePerMeter = (Math.tan(0.5 * fov) * 2.0) / viewport.height;\n    } else {\n      pixelSizePerMeter = (Math.tan(0.5 * fov) * 2.0) / viewport.width;\n    }\n  } else {\n    pixelSizePerMeter = 1.0 / Math.max(viewport.width, viewport.height);\n  }\n\n  this._geometricToleranceOverMeter =\n    pixelSizePerMeter * frameState.maximumScreenSpaceError;\n  Color.clone(frameState.backgroundColor, this._backgroundColor);\n\n  this._minimumDisableDepthTestDistance =\n    frameState.minimumDisableDepthTestDistance;\n  this._minimumDisableDepthTestDistance *= this._minimumDisableDepthTestDistance;\n  if (this._minimumDisableDepthTestDistance === Number.POSITIVE_INFINITY) {\n    this._minimumDisableDepthTestDistance = -1.0;\n  }\n};\n\nfunction cleanViewport(uniformState) {\n  if (uniformState._viewportDirty) {\n    const v = uniformState._viewport;\n    Matrix4.computeOrthographicOffCenter(\n      v.x,\n      v.x + v.width,\n      v.y,\n      v.y + v.height,\n      0.0,\n      1.0,\n      uniformState._viewportOrthographicMatrix\n    );\n    Matrix4.computeViewportTransformation(\n      v,\n      0.0,\n      1.0,\n      uniformState._viewportTransformation\n    );\n    uniformState._viewportDirty = false;\n  }\n}\n\nfunction cleanInverseProjection(uniformState) {\n  if (uniformState._inverseProjectionDirty) {\n    uniformState._inverseProjectionDirty = false;\n\n    if (\n      uniformState._mode !== SceneMode.SCENE2D &&\n      uniformState._mode !== SceneMode.MORPHING &&\n      !uniformState._orthographicIn3D\n    ) {\n      Matrix4.inverse(\n        uniformState._projection,\n        uniformState._inverseProjection\n      );\n    } else {\n      Matrix4.clone(Matrix4.ZERO, uniformState._inverseProjection);\n    }\n  }\n}\n\n// Derived\nfunction cleanModelView(uniformState) {\n  if (uniformState._modelViewDirty) {\n    uniformState._modelViewDirty = false;\n\n    Matrix4.multiplyTransformation(\n      uniformState._view,\n      uniformState._model,\n      uniformState._modelView\n    );\n  }\n}\n\nfunction cleanModelView3D(uniformState) {\n  if (uniformState._modelView3DDirty) {\n    uniformState._modelView3DDirty = false;\n\n    Matrix4.multiplyTransformation(\n      uniformState.view3D,\n      uniformState._model,\n      uniformState._modelView3D\n    );\n  }\n}\n\nfunction cleanInverseModelView(uniformState) {\n  if (uniformState._inverseModelViewDirty) {\n    uniformState._inverseModelViewDirty = false;\n\n    Matrix4.inverse(uniformState.modelView, uniformState._inverseModelView);\n  }\n}\n\nfunction cleanInverseModelView3D(uniformState) {\n  if (uniformState._inverseModelView3DDirty) {\n    uniformState._inverseModelView3DDirty = false;\n\n    Matrix4.inverse(uniformState.modelView3D, uniformState._inverseModelView3D);\n  }\n}\n\nfunction cleanViewProjection(uniformState) {\n  if (uniformState._viewProjectionDirty) {\n    uniformState._viewProjectionDirty = false;\n\n    Matrix4.multiply(\n      uniformState._projection,\n      uniformState._view,\n      uniformState._viewProjection\n    );\n  }\n}\n\nfunction cleanInverseViewProjection(uniformState) {\n  if (uniformState._inverseViewProjectionDirty) {\n    uniformState._inverseViewProjectionDirty = false;\n\n    Matrix4.inverse(\n      uniformState.viewProjection,\n      uniformState._inverseViewProjection\n    );\n  }\n}\n\nfunction cleanModelViewProjection(uniformState) {\n  if (uniformState._modelViewProjectionDirty) {\n    uniformState._modelViewProjectionDirty = false;\n\n    Matrix4.multiply(\n      uniformState._projection,\n      uniformState.modelView,\n      uniformState._modelViewProjection\n    );\n  }\n}\n\nfunction cleanModelViewRelativeToEye(uniformState) {\n  if (uniformState._modelViewRelativeToEyeDirty) {\n    uniformState._modelViewRelativeToEyeDirty = false;\n\n    const mv = uniformState.modelView;\n    const mvRte = uniformState._modelViewRelativeToEye;\n    mvRte[0] = mv[0];\n    mvRte[1] = mv[1];\n    mvRte[2] = mv[2];\n    mvRte[3] = mv[3];\n    mvRte[4] = mv[4];\n    mvRte[5] = mv[5];\n    mvRte[6] = mv[6];\n    mvRte[7] = mv[7];\n    mvRte[8] = mv[8];\n    mvRte[9] = mv[9];\n    mvRte[10] = mv[10];\n    mvRte[11] = mv[11];\n    mvRte[12] = 0.0;\n    mvRte[13] = 0.0;\n    mvRte[14] = 0.0;\n    mvRte[15] = mv[15];\n  }\n}\n\nfunction cleanInverseModelViewProjection(uniformState) {\n  if (uniformState._inverseModelViewProjectionDirty) {\n    uniformState._inverseModelViewProjectionDirty = false;\n\n    Matrix4.inverse(\n      uniformState.modelViewProjection,\n      uniformState._inverseModelViewProjection\n    );\n  }\n}\n\nfunction cleanModelViewProjectionRelativeToEye(uniformState) {\n  if (uniformState._modelViewProjectionRelativeToEyeDirty) {\n    uniformState._modelViewProjectionRelativeToEyeDirty = false;\n\n    Matrix4.multiply(\n      uniformState._projection,\n      uniformState.modelViewRelativeToEye,\n      uniformState._modelViewProjectionRelativeToEye\n    );\n  }\n}\n\nfunction cleanModelViewInfiniteProjection(uniformState) {\n  if (uniformState._modelViewInfiniteProjectionDirty) {\n    uniformState._modelViewInfiniteProjectionDirty = false;\n\n    Matrix4.multiply(\n      uniformState._infiniteProjection,\n      uniformState.modelView,\n      uniformState._modelViewInfiniteProjection\n    );\n  }\n}\n\nfunction cleanNormal(uniformState) {\n  if (uniformState._normalDirty) {\n    uniformState._normalDirty = false;\n\n    const m = uniformState._normal;\n    Matrix4.getMatrix3(uniformState.inverseModelView, m);\n    Matrix3.getRotation(m, m);\n    Matrix3.transpose(m, m);\n  }\n}\n\nfunction cleanNormal3D(uniformState) {\n  if (uniformState._normal3DDirty) {\n    uniformState._normal3DDirty = false;\n\n    const m = uniformState._normal3D;\n    Matrix4.getMatrix3(uniformState.inverseModelView3D, m);\n    Matrix3.getRotation(m, m);\n    Matrix3.transpose(m, m);\n  }\n}\n\nfunction cleanInverseNormal(uniformState) {\n  if (uniformState._inverseNormalDirty) {\n    uniformState._inverseNormalDirty = false;\n    Matrix4.getMatrix3(\n      uniformState.inverseModelView,\n      uniformState._inverseNormal\n    );\n    Matrix3.getRotation(\n      uniformState._inverseNormal,\n      uniformState._inverseNormal\n    );\n  }\n}\n\nfunction cleanInverseNormal3D(uniformState) {\n  if (uniformState._inverseNormal3DDirty) {\n    uniformState._inverseNormal3DDirty = false;\n    Matrix4.getMatrix3(\n      uniformState.inverseModelView3D,\n      uniformState._inverseNormal3D\n    );\n    Matrix3.getRotation(\n      uniformState._inverseNormal3D,\n      uniformState._inverseNormal3D\n    );\n  }\n}\n\nconst cameraPositionMC = new Cartesian3();\n\nfunction cleanEncodedCameraPositionMC(uniformState) {\n  if (uniformState._encodedCameraPositionMCDirty) {\n    uniformState._encodedCameraPositionMCDirty = false;\n\n    Matrix4.multiplyByPoint(\n      uniformState.inverseModel,\n      uniformState._cameraPosition,\n      cameraPositionMC\n    );\n    EncodedCartesian3.fromCartesian(\n      cameraPositionMC,\n      uniformState._encodedCameraPositionMC\n    );\n  }\n}\n\nconst view2Dto3DPScratch = new Cartesian3();\nconst view2Dto3DRScratch = new Cartesian3();\nconst view2Dto3DUScratch = new Cartesian3();\nconst view2Dto3DDScratch = new Cartesian3();\nconst view2Dto3DCartographicScratch = new Cartographic();\nconst view2Dto3DCartesian3Scratch = new Cartesian3();\nconst view2Dto3DMatrix4Scratch = new Matrix4();\n\nfunction view2Dto3D(\n  position2D,\n  direction2D,\n  right2D,\n  up2D,\n  frustum2DWidth,\n  mode,\n  projection,\n  result\n) {\n  // The camera position and directions are expressed in the 2D coordinate system where the Y axis is to the East,\n  // the Z axis is to the North, and the X axis is out of the map.  Express them instead in the ENU axes where\n  // X is to the East, Y is to the North, and Z is out of the local horizontal plane.\n  const p = view2Dto3DPScratch;\n  p.x = position2D.y;\n  p.y = position2D.z;\n  p.z = position2D.x;\n\n  const r = view2Dto3DRScratch;\n  r.x = right2D.y;\n  r.y = right2D.z;\n  r.z = right2D.x;\n\n  const u = view2Dto3DUScratch;\n  u.x = up2D.y;\n  u.y = up2D.z;\n  u.z = up2D.x;\n\n  const d = view2Dto3DDScratch;\n  d.x = direction2D.y;\n  d.y = direction2D.z;\n  d.z = direction2D.x;\n\n  // In 2D, the camera height is always 12.7 million meters.\n  // The apparent height is equal to half the frustum width.\n  if (mode === SceneMode.SCENE2D) {\n    p.z = frustum2DWidth * 0.5;\n  }\n\n  // Compute the equivalent camera position in the real (3D) world.\n  // In 2D and Columbus View, the camera can travel outside the projection, and when it does so\n  // there's not really any corresponding location in the real world.  So clamp the unprojected\n  // longitude and latitude to their valid ranges.\n  const cartographic = projection.unproject(p, view2Dto3DCartographicScratch);\n  cartographic.longitude = CesiumMath.clamp(\n    cartographic.longitude,\n    -Math.PI,\n    Math.PI\n  );\n  cartographic.latitude = CesiumMath.clamp(\n    cartographic.latitude,\n    -CesiumMath.PI_OVER_TWO,\n    CesiumMath.PI_OVER_TWO\n  );\n  const ellipsoid = projection.ellipsoid;\n  const position3D = ellipsoid.cartographicToCartesian(\n    cartographic,\n    view2Dto3DCartesian3Scratch\n  );\n\n  // Compute the rotation from the local ENU at the real world camera position to the fixed axes.\n  const enuToFixed = Transforms.eastNorthUpToFixedFrame(\n    position3D,\n    ellipsoid,\n    view2Dto3DMatrix4Scratch\n  );\n\n  // Transform each camera direction to the fixed axes.\n  Matrix4.multiplyByPointAsVector(enuToFixed, r, r);\n  Matrix4.multiplyByPointAsVector(enuToFixed, u, u);\n  Matrix4.multiplyByPointAsVector(enuToFixed, d, d);\n\n  // Compute the view matrix based on the new fixed-frame camera position and directions.\n  if (!defined(result)) {\n    result = new Matrix4();\n  }\n\n  result[0] = r.x;\n  result[1] = u.x;\n  result[2] = -d.x;\n  result[3] = 0.0;\n  result[4] = r.y;\n  result[5] = u.y;\n  result[6] = -d.y;\n  result[7] = 0.0;\n  result[8] = r.z;\n  result[9] = u.z;\n  result[10] = -d.z;\n  result[11] = 0.0;\n  result[12] = -Cartesian3.dot(r, position3D);\n  result[13] = -Cartesian3.dot(u, position3D);\n  result[14] = Cartesian3.dot(d, position3D);\n  result[15] = 1.0;\n\n  return result;\n}\n\nfunction updateView3D(that) {\n  if (that._view3DDirty) {\n    if (that._mode === SceneMode.SCENE3D) {\n      Matrix4.clone(that._view, that._view3D);\n    } else {\n      view2Dto3D(\n        that._cameraPosition,\n        that._cameraDirection,\n        that._cameraRight,\n        that._cameraUp,\n        that._frustum2DWidth,\n        that._mode,\n        that._mapProjection,\n        that._view3D\n      );\n    }\n    Matrix4.getMatrix3(that._view3D, that._viewRotation3D);\n    that._view3DDirty = false;\n  }\n}\n\nfunction updateInverseView3D(that) {\n  if (that._inverseView3DDirty) {\n    Matrix4.inverseTransformation(that.view3D, that._inverseView3D);\n    Matrix4.getMatrix3(that._inverseView3D, that._inverseViewRotation3D);\n    that._inverseView3DDirty = false;\n  }\n}\nexport default UniformState;\n","import Check from \"../Core/Check.js\";\nimport ComponentDatatype from \"../Core/ComponentDatatype.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Geometry from \"../Core/Geometry.js\";\nimport IndexDatatype from \"../Core/IndexDatatype.js\";\nimport CesiumMath from \"../Core/Math.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\nimport Buffer from \"./Buffer.js\";\nimport BufferUsage from \"./BufferUsage.js\";\nimport ContextLimits from \"./ContextLimits.js\";\n\nfunction addAttribute(attributes, attribute, index, context) {\n  const hasVertexBuffer = defined(attribute.vertexBuffer);\n  const hasValue = defined(attribute.value);\n  const componentsPerAttribute = attribute.value\n    ? attribute.value.length\n    : attribute.componentsPerAttribute;\n\n  //>>includeStart('debug', pragmas.debug);\n  if (!hasVertexBuffer && !hasValue) {\n    throw new DeveloperError(\"attribute must have a vertexBuffer or a value.\");\n  }\n  if (hasVertexBuffer && hasValue) {\n    throw new DeveloperError(\n      \"attribute cannot have both a vertexBuffer and a value.  It must have either a vertexBuffer property defining per-vertex data or a value property defining data for all vertices.\"\n    );\n  }\n  if (\n    componentsPerAttribute !== 1 &&\n    componentsPerAttribute !== 2 &&\n    componentsPerAttribute !== 3 &&\n    componentsPerAttribute !== 4\n  ) {\n    if (hasValue) {\n      throw new DeveloperError(\n        \"attribute.value.length must be in the range [1, 4].\"\n      );\n    }\n\n    throw new DeveloperError(\n      \"attribute.componentsPerAttribute must be in the range [1, 4].\"\n    );\n  }\n  if (\n    defined(attribute.componentDatatype) &&\n    !ComponentDatatype.validate(attribute.componentDatatype)\n  ) {\n    throw new DeveloperError(\n      \"attribute must have a valid componentDatatype or not specify it.\"\n    );\n  }\n  if (defined(attribute.strideInBytes) && attribute.strideInBytes > 255) {\n    // WebGL limit.  Not in GL ES.\n    throw new DeveloperError(\n      \"attribute must have a strideInBytes less than or equal to 255 or not specify it.\"\n    );\n  }\n  if (\n    defined(attribute.instanceDivisor) &&\n    attribute.instanceDivisor > 0 &&\n    !context.instancedArrays\n  ) {\n    throw new DeveloperError(\"instanced arrays is not supported\");\n  }\n  if (defined(attribute.instanceDivisor) && attribute.instanceDivisor < 0) {\n    throw new DeveloperError(\n      \"attribute must have an instanceDivisor greater than or equal to zero\"\n    );\n  }\n  if (defined(attribute.instanceDivisor) && hasValue) {\n    throw new DeveloperError(\n      \"attribute cannot have have an instanceDivisor if it is not backed by a buffer\"\n    );\n  }\n  if (\n    defined(attribute.instanceDivisor) &&\n    attribute.instanceDivisor > 0 &&\n    attribute.index === 0\n  ) {\n    throw new DeveloperError(\n      \"attribute zero cannot have an instanceDivisor greater than 0\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  // Shallow copy the attribute; we do not want to copy the vertex buffer.\n  const attr = {\n    index: defaultValue(attribute.index, index),\n    enabled: defaultValue(attribute.enabled, true),\n    vertexBuffer: attribute.vertexBuffer,\n    value: hasValue ? attribute.value.slice(0) : undefined,\n    componentsPerAttribute: componentsPerAttribute,\n    componentDatatype: defaultValue(\n      attribute.componentDatatype,\n      ComponentDatatype.FLOAT\n    ),\n    normalize: defaultValue(attribute.normalize, false),\n    offsetInBytes: defaultValue(attribute.offsetInBytes, 0),\n    strideInBytes: defaultValue(attribute.strideInBytes, 0),\n    instanceDivisor: defaultValue(attribute.instanceDivisor, 0),\n  };\n\n  if (hasVertexBuffer) {\n    // Common case: vertex buffer for per-vertex data\n    attr.vertexAttrib = function (gl) {\n      const index = this.index;\n      gl.bindBuffer(gl.ARRAY_BUFFER, this.vertexBuffer._getBuffer());\n      gl.vertexAttribPointer(\n        index,\n        this.componentsPerAttribute,\n        this.componentDatatype,\n        this.normalize,\n        this.strideInBytes,\n        this.offsetInBytes\n      );\n      gl.enableVertexAttribArray(index);\n      if (this.instanceDivisor > 0) {\n        context.glVertexAttribDivisor(index, this.instanceDivisor);\n        context._vertexAttribDivisors[index] = this.instanceDivisor;\n        context._previousDrawInstanced = true;\n      }\n    };\n\n    attr.disableVertexAttribArray = function (gl) {\n      gl.disableVertexAttribArray(this.index);\n      if (this.instanceDivisor > 0) {\n        context.glVertexAttribDivisor(index, 0);\n      }\n    };\n  } else {\n    // Less common case: value array for the same data for each vertex\n    switch (attr.componentsPerAttribute) {\n      case 1:\n        attr.vertexAttrib = function (gl) {\n          gl.vertexAttrib1fv(this.index, this.value);\n        };\n        break;\n      case 2:\n        attr.vertexAttrib = function (gl) {\n          gl.vertexAttrib2fv(this.index, this.value);\n        };\n        break;\n      case 3:\n        attr.vertexAttrib = function (gl) {\n          gl.vertexAttrib3fv(this.index, this.value);\n        };\n        break;\n      case 4:\n        attr.vertexAttrib = function (gl) {\n          gl.vertexAttrib4fv(this.index, this.value);\n        };\n        break;\n    }\n\n    attr.disableVertexAttribArray = function (gl) {};\n  }\n\n  attributes.push(attr);\n}\n\nfunction bind(gl, attributes, indexBuffer) {\n  for (let i = 0; i < attributes.length; ++i) {\n    const attribute = attributes[i];\n    if (attribute.enabled) {\n      attribute.vertexAttrib(gl);\n    }\n  }\n\n  if (defined(indexBuffer)) {\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer._getBuffer());\n  }\n}\n\n/**\n * Creates a vertex array, which defines the attributes making up a vertex, and contains an optional index buffer\n * to select vertices for rendering.  Attributes are defined using object literals as shown in Example 1 below.\n *\n * @param {Object} options Object with the following properties:\n * @param {Context} options.context The context in which the VertexArray gets created.\n * @param {Object[]} options.attributes An array of attributes.\n * @param {IndexBuffer} [options.indexBuffer] An optional index buffer.\n *\n * @returns {VertexArray} The vertex array, ready for use with drawing.\n *\n * @exception {DeveloperError} Attribute must have a <code>vertexBuffer</code>.\n * @exception {DeveloperError} Attribute must have a <code>componentsPerAttribute</code>.\n * @exception {DeveloperError} Attribute must have a valid <code>componentDatatype</code> or not specify it.\n * @exception {DeveloperError} Attribute must have a <code>strideInBytes</code> less than or equal to 255 or not specify it.\n * @exception {DeveloperError} Index n is used by more than one attribute.\n *\n *\n * @example\n * // Example 1. Create a vertex array with vertices made up of three floating point\n * // values, e.g., a position, from a single vertex buffer.  No index buffer is used.\n * const positionBuffer = Buffer.createVertexBuffer({\n *     context : context,\n *     sizeInBytes : 12,\n *     usage : BufferUsage.STATIC_DRAW\n * });\n * const attributes = [\n *     {\n *         index                  : 0,\n *         enabled                : true,\n *         vertexBuffer           : positionBuffer,\n *         componentsPerAttribute : 3,\n *         componentDatatype      : ComponentDatatype.FLOAT,\n *         normalize              : false,\n *         offsetInBytes          : 0,\n *         strideInBytes          : 0 // tightly packed\n *         instanceDivisor        : 0 // not instanced\n *     }\n * ];\n * const va = new VertexArray({\n *     context : context,\n *     attributes : attributes\n * });\n *\n * @example\n * // Example 2. Create a vertex array with vertices from two different vertex buffers.\n * // Each vertex has a three-component position and three-component normal.\n * const positionBuffer = Buffer.createVertexBuffer({\n *     context : context,\n *     sizeInBytes : 12,\n *     usage : BufferUsage.STATIC_DRAW\n * });\n * const normalBuffer = Buffer.createVertexBuffer({\n *     context : context,\n *     sizeInBytes : 12,\n *     usage : BufferUsage.STATIC_DRAW\n * });\n * const attributes = [\n *     {\n *         index                  : 0,\n *         vertexBuffer           : positionBuffer,\n *         componentsPerAttribute : 3,\n *         componentDatatype      : ComponentDatatype.FLOAT\n *     },\n *     {\n *         index                  : 1,\n *         vertexBuffer           : normalBuffer,\n *         componentsPerAttribute : 3,\n *         componentDatatype      : ComponentDatatype.FLOAT\n *     }\n * ];\n * const va = new VertexArray({\n *     context : context,\n *     attributes : attributes\n * });\n *\n * @example\n * // Example 3. Creates the same vertex layout as Example 2 using a single\n * // vertex buffer, instead of two.\n * const buffer = Buffer.createVertexBuffer({\n *     context : context,\n *     sizeInBytes : 24,\n *     usage : BufferUsage.STATIC_DRAW\n * });\n * const attributes = [\n *     {\n *         vertexBuffer           : buffer,\n *         componentsPerAttribute : 3,\n *         componentDatatype      : ComponentDatatype.FLOAT,\n *         offsetInBytes          : 0,\n *         strideInBytes          : 24\n *     },\n *     {\n *         vertexBuffer           : buffer,\n *         componentsPerAttribute : 3,\n *         componentDatatype      : ComponentDatatype.FLOAT,\n *         normalize              : true,\n *         offsetInBytes          : 12,\n *         strideInBytes          : 24\n *     }\n * ];\n * const va = new VertexArray({\n *     context : context,\n *     attributes : attributes\n * });\n *\n * @see Buffer#createVertexBuffer\n * @see Buffer#createIndexBuffer\n * @see Context#draw\n *\n * @private\n */\nfunction VertexArray(options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"options.context\", options.context);\n  Check.defined(\"options.attributes\", options.attributes);\n  //>>includeEnd('debug');\n\n  const context = options.context;\n  const gl = context._gl;\n  const attributes = options.attributes;\n  const indexBuffer = options.indexBuffer;\n\n  let i;\n  const vaAttributes = [];\n  let numberOfVertices = 1; // if every attribute is backed by a single value\n  let hasInstancedAttributes = false;\n  let hasConstantAttributes = false;\n\n  let length = attributes.length;\n  for (i = 0; i < length; ++i) {\n    addAttribute(vaAttributes, attributes[i], i, context);\n  }\n\n  length = vaAttributes.length;\n  for (i = 0; i < length; ++i) {\n    const attribute = vaAttributes[i];\n\n    if (defined(attribute.vertexBuffer) && attribute.instanceDivisor === 0) {\n      // This assumes that each vertex buffer in the vertex array has the same number of vertices.\n      const bytes =\n        attribute.strideInBytes ||\n        attribute.componentsPerAttribute *\n          ComponentDatatype.getSizeInBytes(attribute.componentDatatype);\n      numberOfVertices = attribute.vertexBuffer.sizeInBytes / bytes;\n      break;\n    }\n  }\n\n  for (i = 0; i < length; ++i) {\n    if (vaAttributes[i].instanceDivisor > 0) {\n      hasInstancedAttributes = true;\n    }\n    if (defined(vaAttributes[i].value)) {\n      hasConstantAttributes = true;\n    }\n  }\n\n  //>>includeStart('debug', pragmas.debug);\n  // Verify all attribute names are unique\n  const uniqueIndices = {};\n  for (i = 0; i < length; ++i) {\n    const index = vaAttributes[i].index;\n    if (uniqueIndices[index]) {\n      throw new DeveloperError(\n        `Index ${index} is used by more than one attribute.`\n      );\n    }\n    uniqueIndices[index] = true;\n  }\n  //>>includeEnd('debug');\n\n  let vao;\n\n  // Setup VAO if supported\n  if (context.vertexArrayObject) {\n    vao = context.glCreateVertexArray();\n    context.glBindVertexArray(vao);\n    bind(gl, vaAttributes, indexBuffer);\n    context.glBindVertexArray(null);\n  }\n\n  this._numberOfVertices = numberOfVertices;\n  this._hasInstancedAttributes = hasInstancedAttributes;\n  this._hasConstantAttributes = hasConstantAttributes;\n  this._context = context;\n  this._gl = gl;\n  this._vao = vao;\n  this._attributes = vaAttributes;\n  this._indexBuffer = indexBuffer;\n}\n\nfunction computeNumberOfVertices(attribute) {\n  return attribute.values.length / attribute.componentsPerAttribute;\n}\n\nfunction computeAttributeSizeInBytes(attribute) {\n  return (\n    ComponentDatatype.getSizeInBytes(attribute.componentDatatype) *\n    attribute.componentsPerAttribute\n  );\n}\n\nfunction interleaveAttributes(attributes) {\n  let j;\n  let name;\n  let attribute;\n\n  // Extract attribute names.\n  const names = [];\n  for (name in attributes) {\n    // Attribute needs to have per-vertex values; not a constant value for all vertices.\n    if (\n      attributes.hasOwnProperty(name) &&\n      defined(attributes[name]) &&\n      defined(attributes[name].values)\n    ) {\n      names.push(name);\n\n      if (attributes[name].componentDatatype === ComponentDatatype.DOUBLE) {\n        attributes[name].componentDatatype = ComponentDatatype.FLOAT;\n        attributes[name].values = ComponentDatatype.createTypedArray(\n          ComponentDatatype.FLOAT,\n          attributes[name].values\n        );\n      }\n    }\n  }\n\n  // Validation.  Compute number of vertices.\n  let numberOfVertices;\n  const namesLength = names.length;\n\n  if (namesLength > 0) {\n    numberOfVertices = computeNumberOfVertices(attributes[names[0]]);\n\n    for (j = 1; j < namesLength; ++j) {\n      const currentNumberOfVertices = computeNumberOfVertices(\n        attributes[names[j]]\n      );\n\n      if (currentNumberOfVertices !== numberOfVertices) {\n        throw new RuntimeError(\n          `${\n            \"Each attribute list must have the same number of vertices.  \" +\n            \"Attribute \"\n          }${names[j]} has a different number of vertices ` +\n            `(${currentNumberOfVertices.toString()})` +\n            ` than attribute ${names[0]} (${numberOfVertices.toString()}).`\n        );\n      }\n    }\n  }\n\n  // Sort attributes by the size of their components.  From left to right, a vertex stores floats, shorts, and then bytes.\n  names.sort(function (left, right) {\n    return (\n      ComponentDatatype.getSizeInBytes(attributes[right].componentDatatype) -\n      ComponentDatatype.getSizeInBytes(attributes[left].componentDatatype)\n    );\n  });\n\n  // Compute sizes and strides.\n  let vertexSizeInBytes = 0;\n  const offsetsInBytes = {};\n\n  for (j = 0; j < namesLength; ++j) {\n    name = names[j];\n    attribute = attributes[name];\n\n    offsetsInBytes[name] = vertexSizeInBytes;\n    vertexSizeInBytes += computeAttributeSizeInBytes(attribute);\n  }\n\n  if (vertexSizeInBytes > 0) {\n    // Pad each vertex to be a multiple of the largest component datatype so each\n    // attribute can be addressed using typed arrays.\n    const maxComponentSizeInBytes = ComponentDatatype.getSizeInBytes(\n      attributes[names[0]].componentDatatype\n    ); // Sorted large to small\n    const remainder = vertexSizeInBytes % maxComponentSizeInBytes;\n    if (remainder !== 0) {\n      vertexSizeInBytes += maxComponentSizeInBytes - remainder;\n    }\n\n    // Total vertex buffer size in bytes, including per-vertex padding.\n    const vertexBufferSizeInBytes = numberOfVertices * vertexSizeInBytes;\n\n    // Create array for interleaved vertices.  Each attribute has a different view (pointer) into the array.\n    const buffer = new ArrayBuffer(vertexBufferSizeInBytes);\n    const views = {};\n\n    for (j = 0; j < namesLength; ++j) {\n      name = names[j];\n      const sizeInBytes = ComponentDatatype.getSizeInBytes(\n        attributes[name].componentDatatype\n      );\n\n      views[name] = {\n        pointer: ComponentDatatype.createTypedArray(\n          attributes[name].componentDatatype,\n          buffer\n        ),\n        index: offsetsInBytes[name] / sizeInBytes, // Offset in ComponentType\n        strideInComponentType: vertexSizeInBytes / sizeInBytes,\n      };\n    }\n\n    // Copy attributes into one interleaved array.\n    // PERFORMANCE_IDEA:  Can we optimize these loops?\n    for (j = 0; j < numberOfVertices; ++j) {\n      for (let n = 0; n < namesLength; ++n) {\n        name = names[n];\n        attribute = attributes[name];\n        const values = attribute.values;\n        const view = views[name];\n        const pointer = view.pointer;\n\n        const numberOfComponents = attribute.componentsPerAttribute;\n        for (let k = 0; k < numberOfComponents; ++k) {\n          pointer[view.index + k] = values[j * numberOfComponents + k];\n        }\n\n        view.index += view.strideInComponentType;\n      }\n    }\n\n    return {\n      buffer: buffer,\n      offsetsInBytes: offsetsInBytes,\n      vertexSizeInBytes: vertexSizeInBytes,\n    };\n  }\n\n  // No attributes to interleave.\n  return undefined;\n}\n\n/**\n * Creates a vertex array from a geometry.  A geometry contains vertex attributes and optional index data\n * in system memory, whereas a vertex array contains vertex buffers and an optional index buffer in WebGL\n * memory for use with rendering.\n * <br /><br />\n * The <code>geometry</code> argument should use the standard layout like the geometry returned by {@link BoxGeometry}.\n * <br /><br />\n * <code>options</code> can have four properties:\n * <ul>\n *   <li><code>geometry</code>:  The source geometry containing data used to create the vertex array.</li>\n *   <li><code>attributeLocations</code>:  An object that maps geometry attribute names to vertex shader attribute locations.</li>\n *   <li><code>bufferUsage</code>:  The expected usage pattern of the vertex array's buffers.  On some WebGL implementations, this can significantly affect performance.  See {@link BufferUsage}.  Default: <code>BufferUsage.DYNAMIC_DRAW</code>.</li>\n *   <li><code>interleave</code>:  Determines if all attributes are interleaved in a single vertex buffer or if each attribute is stored in a separate vertex buffer.  Default: <code>false</code>.</li>\n * </ul>\n * <br />\n * If <code>options</code> is not specified or the <code>geometry</code> contains no data, the returned vertex array is empty.\n *\n * @param {Object} options An object defining the geometry, attribute indices, buffer usage, and vertex layout used to create the vertex array.\n *\n * @exception {RuntimeError} Each attribute list must have the same number of vertices.\n * @exception {DeveloperError} The geometry must have zero or one index lists.\n * @exception {DeveloperError} Index n is used by more than one attribute.\n *\n *\n * @example\n * // Example 1. Creates a vertex array for rendering a box.  The default dynamic draw\n * // usage is used for the created vertex and index buffer.  The attributes are not\n * // interleaved by default.\n * const geometry = new BoxGeometry();\n * const va = VertexArray.fromGeometry({\n *     context            : context,\n *     geometry           : geometry,\n *     attributeLocations : GeometryPipeline.createAttributeLocations(geometry),\n * });\n *\n * @example\n * // Example 2. Creates a vertex array with interleaved attributes in a\n * // single vertex buffer.  The vertex and index buffer have static draw usage.\n * const va = VertexArray.fromGeometry({\n *     context            : context,\n *     geometry           : geometry,\n *     attributeLocations : GeometryPipeline.createAttributeLocations(geometry),\n *     bufferUsage        : BufferUsage.STATIC_DRAW,\n *     interleave         : true\n * });\n *\n * @example\n * // Example 3.  When the caller destroys the vertex array, it also destroys the\n * // attached vertex buffer(s) and index buffer.\n * va = va.destroy();\n *\n * @see Buffer#createVertexBuffer\n * @see Buffer#createIndexBuffer\n * @see GeometryPipeline.createAttributeLocations\n * @see ShaderProgram\n */\nVertexArray.fromGeometry = function (options) {\n  options = defaultValue(options, defaultValue.EMPTY_OBJECT);\n\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"options.context\", options.context);\n  //>>includeEnd('debug');\n\n  const context = options.context;\n  const geometry = defaultValue(options.geometry, defaultValue.EMPTY_OBJECT);\n\n  const bufferUsage = defaultValue(\n    options.bufferUsage,\n    BufferUsage.DYNAMIC_DRAW\n  );\n\n  const attributeLocations = defaultValue(\n    options.attributeLocations,\n    defaultValue.EMPTY_OBJECT\n  );\n  const interleave = defaultValue(options.interleave, false);\n  const createdVAAttributes = options.vertexArrayAttributes;\n\n  let name;\n  let attribute;\n  let vertexBuffer;\n  const vaAttributes = defined(createdVAAttributes) ? createdVAAttributes : [];\n  const attributes = geometry.attributes;\n\n  if (interleave) {\n    // Use a single vertex buffer with interleaved vertices.\n    const interleavedAttributes = interleaveAttributes(attributes);\n    if (defined(interleavedAttributes)) {\n      vertexBuffer = Buffer.createVertexBuffer({\n        context: context,\n        typedArray: interleavedAttributes.buffer,\n        usage: bufferUsage,\n      });\n      const offsetsInBytes = interleavedAttributes.offsetsInBytes;\n      const strideInBytes = interleavedAttributes.vertexSizeInBytes;\n\n      for (name in attributes) {\n        if (attributes.hasOwnProperty(name) && defined(attributes[name])) {\n          attribute = attributes[name];\n\n          if (defined(attribute.values)) {\n            // Common case: per-vertex attributes\n            vaAttributes.push({\n              index: attributeLocations[name],\n              vertexBuffer: vertexBuffer,\n              componentDatatype: attribute.componentDatatype,\n              componentsPerAttribute: attribute.componentsPerAttribute,\n              normalize: attribute.normalize,\n              offsetInBytes: offsetsInBytes[name],\n              strideInBytes: strideInBytes,\n            });\n          } else {\n            // Constant attribute for all vertices\n            vaAttributes.push({\n              index: attributeLocations[name],\n              value: attribute.value,\n              componentDatatype: attribute.componentDatatype,\n              normalize: attribute.normalize,\n            });\n          }\n        }\n      }\n    }\n  } else {\n    // One vertex buffer per attribute.\n    for (name in attributes) {\n      if (attributes.hasOwnProperty(name) && defined(attributes[name])) {\n        attribute = attributes[name];\n\n        let componentDatatype = attribute.componentDatatype;\n        if (componentDatatype === ComponentDatatype.DOUBLE) {\n          componentDatatype = ComponentDatatype.FLOAT;\n        }\n\n        vertexBuffer = undefined;\n        if (defined(attribute.values)) {\n          vertexBuffer = Buffer.createVertexBuffer({\n            context: context,\n            typedArray: ComponentDatatype.createTypedArray(\n              componentDatatype,\n              attribute.values\n            ),\n            usage: bufferUsage,\n          });\n        }\n\n        vaAttributes.push({\n          index: attributeLocations[name],\n          vertexBuffer: vertexBuffer,\n          value: attribute.value,\n          componentDatatype: componentDatatype,\n          componentsPerAttribute: attribute.componentsPerAttribute,\n          normalize: attribute.normalize,\n        });\n      }\n    }\n  }\n\n  let indexBuffer;\n  const indices = geometry.indices;\n  if (defined(indices)) {\n    if (\n      Geometry.computeNumberOfVertices(geometry) >=\n        CesiumMath.SIXTY_FOUR_KILOBYTES &&\n      context.elementIndexUint\n    ) {\n      indexBuffer = Buffer.createIndexBuffer({\n        context: context,\n        typedArray: new Uint32Array(indices),\n        usage: bufferUsage,\n        indexDatatype: IndexDatatype.UNSIGNED_INT,\n      });\n    } else {\n      indexBuffer = Buffer.createIndexBuffer({\n        context: context,\n        typedArray: new Uint16Array(indices),\n        usage: bufferUsage,\n        indexDatatype: IndexDatatype.UNSIGNED_SHORT,\n      });\n    }\n  }\n\n  return new VertexArray({\n    context: context,\n    attributes: vaAttributes,\n    indexBuffer: indexBuffer,\n  });\n};\n\nObject.defineProperties(VertexArray.prototype, {\n  numberOfAttributes: {\n    get: function () {\n      return this._attributes.length;\n    },\n  },\n  numberOfVertices: {\n    get: function () {\n      return this._numberOfVertices;\n    },\n  },\n  indexBuffer: {\n    get: function () {\n      return this._indexBuffer;\n    },\n  },\n});\n\n/**\n * index is the location in the array of attributes, not the index property of an attribute.\n */\nVertexArray.prototype.getAttribute = function (index) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"index\", index);\n  //>>includeEnd('debug');\n\n  return this._attributes[index];\n};\n\n// Workaround for ANGLE, where the attribute divisor seems to be part of the global state instead\n// of the VAO state. This function is called when the vao is bound, and should be removed\n// once the ANGLE issue is resolved. Setting the divisor should normally happen in vertexAttrib and\n// disableVertexAttribArray.\nfunction setVertexAttribDivisor(vertexArray) {\n  const context = vertexArray._context;\n  const hasInstancedAttributes = vertexArray._hasInstancedAttributes;\n  if (!hasInstancedAttributes && !context._previousDrawInstanced) {\n    return;\n  }\n  context._previousDrawInstanced = hasInstancedAttributes;\n\n  const divisors = context._vertexAttribDivisors;\n  const attributes = vertexArray._attributes;\n  const maxAttributes = ContextLimits.maximumVertexAttributes;\n  let i;\n\n  if (hasInstancedAttributes) {\n    const length = attributes.length;\n    for (i = 0; i < length; ++i) {\n      const attribute = attributes[i];\n      if (attribute.enabled) {\n        const divisor = attribute.instanceDivisor;\n        const index = attribute.index;\n        if (divisor !== divisors[index]) {\n          context.glVertexAttribDivisor(index, divisor);\n          divisors[index] = divisor;\n        }\n      }\n    }\n  } else {\n    for (i = 0; i < maxAttributes; ++i) {\n      if (divisors[i] > 0) {\n        context.glVertexAttribDivisor(i, 0);\n        divisors[i] = 0;\n      }\n    }\n  }\n}\n\n// Vertex attributes backed by a constant value go through vertexAttrib[1234]f[v]\n// which is part of context state rather than VAO state.\nfunction setConstantAttributes(vertexArray, gl) {\n  const attributes = vertexArray._attributes;\n  const length = attributes.length;\n  for (let i = 0; i < length; ++i) {\n    const attribute = attributes[i];\n    if (attribute.enabled && defined(attribute.value)) {\n      attribute.vertexAttrib(gl);\n    }\n  }\n}\n\nVertexArray.prototype._bind = function () {\n  if (defined(this._vao)) {\n    this._context.glBindVertexArray(this._vao);\n    if (this._context.instancedArrays) {\n      setVertexAttribDivisor(this);\n    }\n    if (this._hasConstantAttributes) {\n      setConstantAttributes(this, this._gl);\n    }\n  } else {\n    bind(this._gl, this._attributes, this._indexBuffer);\n  }\n};\n\nVertexArray.prototype._unBind = function () {\n  if (defined(this._vao)) {\n    this._context.glBindVertexArray(null);\n  } else {\n    const attributes = this._attributes;\n    const gl = this._gl;\n\n    for (let i = 0; i < attributes.length; ++i) {\n      const attribute = attributes[i];\n      if (attribute.enabled) {\n        attribute.disableVertexAttribArray(gl);\n      }\n    }\n    if (this._indexBuffer) {\n      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    }\n  }\n};\n\nVertexArray.prototype.isDestroyed = function () {\n  return false;\n};\n\nVertexArray.prototype.destroy = function () {\n  const attributes = this._attributes;\n  for (let i = 0; i < attributes.length; ++i) {\n    const vertexBuffer = attributes[i].vertexBuffer;\n    if (\n      defined(vertexBuffer) &&\n      !vertexBuffer.isDestroyed() &&\n      vertexBuffer.vertexArrayDestroyable\n    ) {\n      vertexBuffer.destroy();\n    }\n  }\n\n  const indexBuffer = this._indexBuffer;\n  if (\n    defined(indexBuffer) &&\n    !indexBuffer.isDestroyed() &&\n    indexBuffer.vertexArrayDestroyable\n  ) {\n    indexBuffer.destroy();\n  }\n\n  if (defined(this._vao)) {\n    this._context.glDeleteVertexArray(this._vao);\n  }\n\n  return destroyObject(this);\n};\nexport default VertexArray;\n","import Check from \"../Core/Check.js\";\nimport ComponentDatatype from \"../Core/ComponentDatatype.js\";\nimport defaultValue from \"../Core/defaultValue.js\";\nimport defined from \"../Core/defined.js\";\nimport destroyObject from \"../Core/destroyObject.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport CesiumMath from \"../Core/Math.js\";\nimport Buffer from \"./Buffer.js\";\nimport BufferUsage from \"./BufferUsage.js\";\nimport VertexArray from \"./VertexArray.js\";\n\n/**\n * @private\n */\nfunction VertexArrayFacade(context, attributes, sizeInVertices, instanced) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"context\", context);\n  if (!attributes || attributes.length === 0) {\n    throw new DeveloperError(\"At least one attribute is required.\");\n  }\n  //>>includeEnd('debug');\n\n  const attrs = VertexArrayFacade._verifyAttributes(attributes);\n  sizeInVertices = defaultValue(sizeInVertices, 0);\n  const precreatedAttributes = [];\n  const attributesByUsage = {};\n  let attributesForUsage;\n  let usage;\n\n  // Bucket the attributes by usage.\n  const length = attrs.length;\n  for (let i = 0; i < length; ++i) {\n    const attribute = attrs[i];\n\n    // If the attribute already has a vertex buffer, we do not need\n    // to manage a vertex buffer or typed array for it.\n    if (attribute.vertexBuffer) {\n      precreatedAttributes.push(attribute);\n      continue;\n    }\n\n    usage = attribute.usage;\n    attributesForUsage = attributesByUsage[usage];\n    if (!defined(attributesForUsage)) {\n      attributesForUsage = attributesByUsage[usage] = [];\n    }\n\n    attributesForUsage.push(attribute);\n  }\n\n  // A function to sort attributes by the size of their components.  From left to right, a vertex\n  // stores floats, shorts, and then bytes.\n  function compare(left, right) {\n    return (\n      ComponentDatatype.getSizeInBytes(right.componentDatatype) -\n      ComponentDatatype.getSizeInBytes(left.componentDatatype)\n    );\n  }\n\n  this._allBuffers = [];\n\n  for (usage in attributesByUsage) {\n    if (attributesByUsage.hasOwnProperty(usage)) {\n      attributesForUsage = attributesByUsage[usage];\n\n      attributesForUsage.sort(compare);\n      const vertexSizeInBytes = VertexArrayFacade._vertexSizeInBytes(\n        attributesForUsage\n      );\n\n      const bufferUsage = attributesForUsage[0].usage;\n\n      const buffer = {\n        vertexSizeInBytes: vertexSizeInBytes,\n        vertexBuffer: undefined,\n        usage: bufferUsage,\n        needsCommit: false,\n        arrayBuffer: undefined,\n        arrayViews: VertexArrayFacade._createArrayViews(\n          attributesForUsage,\n          vertexSizeInBytes\n        ),\n      };\n\n      this._allBuffers.push(buffer);\n    }\n  }\n\n  this._size = 0;\n  this._instanced = defaultValue(instanced, false);\n\n  this._precreated = precreatedAttributes;\n  this._context = context;\n\n  this.writers = undefined;\n  this.va = undefined;\n\n  this.resize(sizeInVertices);\n}\nVertexArrayFacade._verifyAttributes = function (attributes) {\n  const attrs = [];\n\n  for (let i = 0; i < attributes.length; ++i) {\n    const attribute = attributes[i];\n\n    const attr = {\n      index: defaultValue(attribute.index, i),\n      enabled: defaultValue(attribute.enabled, true),\n      componentsPerAttribute: attribute.componentsPerAttribute,\n      componentDatatype: defaultValue(\n        attribute.componentDatatype,\n        ComponentDatatype.FLOAT\n      ),\n      normalize: defaultValue(attribute.normalize, false),\n\n      // There will be either a vertexBuffer or an [optional] usage.\n      vertexBuffer: attribute.vertexBuffer,\n      usage: defaultValue(attribute.usage, BufferUsage.STATIC_DRAW),\n    };\n    attrs.push(attr);\n\n    //>>includeStart('debug', pragmas.debug);\n    if (\n      attr.componentsPerAttribute !== 1 &&\n      attr.componentsPerAttribute !== 2 &&\n      attr.componentsPerAttribute !== 3 &&\n      attr.componentsPerAttribute !== 4\n    ) {\n      throw new DeveloperError(\n        \"attribute.componentsPerAttribute must be in the range [1, 4].\"\n      );\n    }\n\n    const datatype = attr.componentDatatype;\n    if (!ComponentDatatype.validate(datatype)) {\n      throw new DeveloperError(\n        \"Attribute must have a valid componentDatatype or not specify it.\"\n      );\n    }\n\n    if (!BufferUsage.validate(attr.usage)) {\n      throw new DeveloperError(\n        \"Attribute must have a valid usage or not specify it.\"\n      );\n    }\n    //>>includeEnd('debug');\n  }\n\n  // Verify all attribute names are unique.\n  const uniqueIndices = new Array(attrs.length);\n  for (let j = 0; j < attrs.length; ++j) {\n    const currentAttr = attrs[j];\n    const index = currentAttr.index;\n    //>>includeStart('debug', pragmas.debug);\n    if (uniqueIndices[index]) {\n      throw new DeveloperError(\n        `Index ${index} is used by more than one attribute.`\n      );\n    }\n    //>>includeEnd('debug');\n    uniqueIndices[index] = true;\n  }\n\n  return attrs;\n};\n\nVertexArrayFacade._vertexSizeInBytes = function (attributes) {\n  let sizeInBytes = 0;\n\n  const length = attributes.length;\n  for (let i = 0; i < length; ++i) {\n    const attribute = attributes[i];\n    sizeInBytes +=\n      attribute.componentsPerAttribute *\n      ComponentDatatype.getSizeInBytes(attribute.componentDatatype);\n  }\n\n  const maxComponentSizeInBytes =\n    length > 0\n      ? ComponentDatatype.getSizeInBytes(attributes[0].componentDatatype)\n      : 0; // Sorted by size\n  const remainder =\n    maxComponentSizeInBytes > 0 ? sizeInBytes % maxComponentSizeInBytes : 0;\n  const padding = remainder === 0 ? 0 : maxComponentSizeInBytes - remainder;\n  sizeInBytes += padding;\n\n  return sizeInBytes;\n};\n\nVertexArrayFacade._createArrayViews = function (attributes, vertexSizeInBytes) {\n  const views = [];\n  let offsetInBytes = 0;\n\n  const length = attributes.length;\n  for (let i = 0; i < length; ++i) {\n    const attribute = attributes[i];\n    const componentDatatype = attribute.componentDatatype;\n\n    views.push({\n      index: attribute.index,\n      enabled: attribute.enabled,\n      componentsPerAttribute: attribute.componentsPerAttribute,\n      componentDatatype: componentDatatype,\n      normalize: attribute.normalize,\n\n      offsetInBytes: offsetInBytes,\n      vertexSizeInComponentType:\n        vertexSizeInBytes / ComponentDatatype.getSizeInBytes(componentDatatype),\n\n      view: undefined,\n    });\n\n    offsetInBytes +=\n      attribute.componentsPerAttribute *\n      ComponentDatatype.getSizeInBytes(componentDatatype);\n  }\n\n  return views;\n};\n\n/**\n * Invalidates writers.  Can't render again until commit is called.\n */\nVertexArrayFacade.prototype.resize = function (sizeInVertices) {\n  this._size = sizeInVertices;\n\n  const allBuffers = this._allBuffers;\n  this.writers = [];\n\n  for (let i = 0, len = allBuffers.length; i < len; ++i) {\n    const buffer = allBuffers[i];\n\n    VertexArrayFacade._resize(buffer, this._size);\n\n    // Reserving invalidates the writers, so if client's cache them, they need to invalidate their cache.\n    VertexArrayFacade._appendWriters(this.writers, buffer);\n  }\n\n  // VAs are recreated next time commit is called.\n  destroyVA(this);\n};\n\nVertexArrayFacade._resize = function (buffer, size) {\n  if (buffer.vertexSizeInBytes > 0) {\n    // Create larger array buffer\n    const arrayBuffer = new ArrayBuffer(size * buffer.vertexSizeInBytes);\n\n    // Copy contents from previous array buffer\n    if (defined(buffer.arrayBuffer)) {\n      const destView = new Uint8Array(arrayBuffer);\n      const sourceView = new Uint8Array(buffer.arrayBuffer);\n      const sourceLength = sourceView.length;\n      for (let j = 0; j < sourceLength; ++j) {\n        destView[j] = sourceView[j];\n      }\n    }\n\n    // Create typed views into the new array buffer\n    const views = buffer.arrayViews;\n    const length = views.length;\n    for (let i = 0; i < length; ++i) {\n      const view = views[i];\n      view.view = ComponentDatatype.createArrayBufferView(\n        view.componentDatatype,\n        arrayBuffer,\n        view.offsetInBytes\n      );\n    }\n\n    buffer.arrayBuffer = arrayBuffer;\n  }\n};\n\nconst createWriters = [\n  // 1 component per attribute\n  function (buffer, view, vertexSizeInComponentType) {\n    return function (index, attribute) {\n      view[index * vertexSizeInComponentType] = attribute;\n      buffer.needsCommit = true;\n    };\n  },\n\n  // 2 component per attribute\n  function (buffer, view, vertexSizeInComponentType) {\n    return function (index, component0, component1) {\n      const i = index * vertexSizeInComponentType;\n      view[i] = component0;\n      view[i + 1] = component1;\n      buffer.needsCommit = true;\n    };\n  },\n\n  // 3 component per attribute\n  function (buffer, view, vertexSizeInComponentType) {\n    return function (index, component0, component1, component2) {\n      const i = index * vertexSizeInComponentType;\n      view[i] = component0;\n      view[i + 1] = component1;\n      view[i + 2] = component2;\n      buffer.needsCommit = true;\n    };\n  },\n\n  // 4 component per attribute\n  function (buffer, view, vertexSizeInComponentType) {\n    return function (index, component0, component1, component2, component3) {\n      const i = index * vertexSizeInComponentType;\n      view[i] = component0;\n      view[i + 1] = component1;\n      view[i + 2] = component2;\n      view[i + 3] = component3;\n      buffer.needsCommit = true;\n    };\n  },\n];\n\nVertexArrayFacade._appendWriters = function (writers, buffer) {\n  const arrayViews = buffer.arrayViews;\n  const length = arrayViews.length;\n  for (let i = 0; i < length; ++i) {\n    const arrayView = arrayViews[i];\n    writers[arrayView.index] = createWriters[\n      arrayView.componentsPerAttribute - 1\n    ](buffer, arrayView.view, arrayView.vertexSizeInComponentType);\n  }\n};\n\nVertexArrayFacade.prototype.commit = function (indexBuffer) {\n  let recreateVA = false;\n\n  const allBuffers = this._allBuffers;\n  let buffer;\n  let i;\n  let length;\n\n  for (i = 0, length = allBuffers.length; i < length; ++i) {\n    buffer = allBuffers[i];\n    recreateVA = commit(this, buffer) || recreateVA;\n  }\n\n  ///////////////////////////////////////////////////////////////////////\n\n  if (recreateVA || !defined(this.va)) {\n    destroyVA(this);\n    const va = (this.va = []);\n\n    const chunkSize = CesiumMath.SIXTY_FOUR_KILOBYTES - 4; // The 65535 index is reserved for primitive restart. Reserve the last 4 indices so that billboard quads are not broken up.\n    const numberOfVertexArrays =\n      defined(indexBuffer) && !this._instanced\n        ? Math.ceil(this._size / chunkSize)\n        : 1;\n    for (let k = 0; k < numberOfVertexArrays; ++k) {\n      let attributes = [];\n      for (i = 0, length = allBuffers.length; i < length; ++i) {\n        buffer = allBuffers[i];\n        const offset = k * (buffer.vertexSizeInBytes * chunkSize);\n        VertexArrayFacade._appendAttributes(\n          attributes,\n          buffer,\n          offset,\n          this._instanced\n        );\n      }\n\n      attributes = attributes.concat(this._precreated);\n\n      va.push({\n        va: new VertexArray({\n          context: this._context,\n          attributes: attributes,\n          indexBuffer: indexBuffer,\n        }),\n        indicesCount:\n          1.5 *\n          (k !== numberOfVertexArrays - 1 ? chunkSize : this._size % chunkSize),\n        // TODO: not hardcode 1.5, this assumes 6 indices per 4 vertices (as for Billboard quads).\n      });\n    }\n  }\n};\n\nfunction commit(vertexArrayFacade, buffer) {\n  if (buffer.needsCommit && buffer.vertexSizeInBytes > 0) {\n    buffer.needsCommit = false;\n\n    const vertexBuffer = buffer.vertexBuffer;\n    const vertexBufferSizeInBytes =\n      vertexArrayFacade._size * buffer.vertexSizeInBytes;\n    const vertexBufferDefined = defined(vertexBuffer);\n    if (\n      !vertexBufferDefined ||\n      vertexBuffer.sizeInBytes < vertexBufferSizeInBytes\n    ) {\n      if (vertexBufferDefined) {\n        vertexBuffer.destroy();\n      }\n      buffer.vertexBuffer = Buffer.createVertexBuffer({\n        context: vertexArrayFacade._context,\n        typedArray: buffer.arrayBuffer,\n        usage: buffer.usage,\n      });\n      buffer.vertexBuffer.vertexArrayDestroyable = false;\n\n      return true; // Created new vertex buffer\n    }\n\n    buffer.vertexBuffer.copyFromArrayView(buffer.arrayBuffer);\n  }\n\n  return false; // Did not create new vertex buffer\n}\n\nVertexArrayFacade._appendAttributes = function (\n  attributes,\n  buffer,\n  vertexBufferOffset,\n  instanced\n) {\n  const arrayViews = buffer.arrayViews;\n  const length = arrayViews.length;\n  for (let i = 0; i < length; ++i) {\n    const view = arrayViews[i];\n\n    attributes.push({\n      index: view.index,\n      enabled: view.enabled,\n      componentsPerAttribute: view.componentsPerAttribute,\n      componentDatatype: view.componentDatatype,\n      normalize: view.normalize,\n      vertexBuffer: buffer.vertexBuffer,\n      offsetInBytes: vertexBufferOffset + view.offsetInBytes,\n      strideInBytes: buffer.vertexSizeInBytes,\n      instanceDivisor: instanced ? 1 : 0,\n    });\n  }\n};\n\nVertexArrayFacade.prototype.subCommit = function (\n  offsetInVertices,\n  lengthInVertices\n) {\n  //>>includeStart('debug', pragmas.debug);\n  if (offsetInVertices < 0 || offsetInVertices >= this._size) {\n    throw new DeveloperError(\n      \"offsetInVertices must be greater than or equal to zero and less than the vertex array size.\"\n    );\n  }\n  if (offsetInVertices + lengthInVertices > this._size) {\n    throw new DeveloperError(\n      \"offsetInVertices + lengthInVertices cannot exceed the vertex array size.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  const allBuffers = this._allBuffers;\n  for (let i = 0, len = allBuffers.length; i < len; ++i) {\n    subCommit(allBuffers[i], offsetInVertices, lengthInVertices);\n  }\n};\n\nfunction subCommit(buffer, offsetInVertices, lengthInVertices) {\n  if (buffer.needsCommit && buffer.vertexSizeInBytes > 0) {\n    const byteOffset = buffer.vertexSizeInBytes * offsetInVertices;\n    const byteLength = buffer.vertexSizeInBytes * lengthInVertices;\n\n    // PERFORMANCE_IDEA: If we want to get really crazy, we could consider updating\n    // individual attributes instead of the entire (sub-)vertex.\n    //\n    // PERFORMANCE_IDEA: Does creating the typed view add too much GC overhead?\n    buffer.vertexBuffer.copyFromArrayView(\n      new Uint8Array(buffer.arrayBuffer, byteOffset, byteLength),\n      byteOffset\n    );\n  }\n}\n\nVertexArrayFacade.prototype.endSubCommits = function () {\n  const allBuffers = this._allBuffers;\n\n  for (let i = 0, len = allBuffers.length; i < len; ++i) {\n    allBuffers[i].needsCommit = false;\n  }\n};\n\nfunction destroyVA(vertexArrayFacade) {\n  const va = vertexArrayFacade.va;\n  if (!defined(va)) {\n    return;\n  }\n\n  const length = va.length;\n  for (let i = 0; i < length; ++i) {\n    va[i].va.destroy();\n  }\n\n  vertexArrayFacade.va = undefined;\n}\n\nVertexArrayFacade.prototype.isDestroyed = function () {\n  return false;\n};\n\nVertexArrayFacade.prototype.destroy = function () {\n  const allBuffers = this._allBuffers;\n  for (let i = 0, len = allBuffers.length; i < len; ++i) {\n    const buffer = allBuffers[i];\n    buffer.vertexBuffer = buffer.vertexBuffer && buffer.vertexBuffer.destroy();\n  }\n\n  destroyVA(this);\n\n  return destroyObject(this);\n};\nexport default VertexArrayFacade;\n","import Cartesian2 from \"../Core/Cartesian2.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Cartesian4 from \"../Core/Cartesian4.js\";\nimport Color from \"../Core/Color.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Matrix2 from \"../Core/Matrix2.js\";\nimport Matrix3 from \"../Core/Matrix3.js\";\nimport Matrix4 from \"../Core/Matrix4.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\n\n/**\n * @private\n * @constructor\n */\nfunction createUniform(gl, activeUniform, uniformName, location) {\n  switch (activeUniform.type) {\n    case gl.FLOAT:\n      return new UniformFloat(gl, activeUniform, uniformName, location);\n    case gl.FLOAT_VEC2:\n      return new UniformFloatVec2(gl, activeUniform, uniformName, location);\n    case gl.FLOAT_VEC3:\n      return new UniformFloatVec3(gl, activeUniform, uniformName, location);\n    case gl.FLOAT_VEC4:\n      return new UniformFloatVec4(gl, activeUniform, uniformName, location);\n    case gl.SAMPLER_2D:\n    case gl.SAMPLER_CUBE:\n      return new UniformSampler(gl, activeUniform, uniformName, location);\n    case gl.INT:\n    case gl.BOOL:\n      return new UniformInt(gl, activeUniform, uniformName, location);\n    case gl.INT_VEC2:\n    case gl.BOOL_VEC2:\n      return new UniformIntVec2(gl, activeUniform, uniformName, location);\n    case gl.INT_VEC3:\n    case gl.BOOL_VEC3:\n      return new UniformIntVec3(gl, activeUniform, uniformName, location);\n    case gl.INT_VEC4:\n    case gl.BOOL_VEC4:\n      return new UniformIntVec4(gl, activeUniform, uniformName, location);\n    case gl.FLOAT_MAT2:\n      return new UniformMat2(gl, activeUniform, uniformName, location);\n    case gl.FLOAT_MAT3:\n      return new UniformMat3(gl, activeUniform, uniformName, location);\n    case gl.FLOAT_MAT4:\n      return new UniformMat4(gl, activeUniform, uniformName, location);\n    default:\n      throw new RuntimeError(\n        `Unrecognized uniform type: ${activeUniform.type} for uniform \"${uniformName}\".`\n      );\n  }\n}\n\n/**\n * @private\n * @constructor\n */\nfunction UniformFloat(gl, activeUniform, uniformName, location) {\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = undefined;\n  this._value = 0.0;\n\n  this._gl = gl;\n  this._location = location;\n}\n\nUniformFloat.prototype.set = function () {\n  if (this.value !== this._value) {\n    this._value = this.value;\n    this._gl.uniform1f(this._location, this.value);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformFloatVec2(gl, activeUniform, uniformName, location) {\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = undefined;\n  this._value = new Cartesian2();\n\n  this._gl = gl;\n  this._location = location;\n}\n\nUniformFloatVec2.prototype.set = function () {\n  const v = this.value;\n  if (!Cartesian2.equals(v, this._value)) {\n    Cartesian2.clone(v, this._value);\n    this._gl.uniform2f(this._location, v.x, v.y);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformFloatVec3(gl, activeUniform, uniformName, location) {\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = undefined;\n  this._value = undefined;\n\n  this._gl = gl;\n  this._location = location;\n}\n\nUniformFloatVec3.prototype.set = function () {\n  const v = this.value;\n\n  if (defined(v.red)) {\n    if (!Color.equals(v, this._value)) {\n      this._value = Color.clone(v, this._value);\n      this._gl.uniform3f(this._location, v.red, v.green, v.blue);\n    }\n  } else if (defined(v.x)) {\n    if (!Cartesian3.equals(v, this._value)) {\n      this._value = Cartesian3.clone(v, this._value);\n      this._gl.uniform3f(this._location, v.x, v.y, v.z);\n    }\n  } else {\n    //>>includeStart('debug', pragmas.debug);\n    throw new DeveloperError(`Invalid vec3 value for uniform \"${this.name}\".`);\n    //>>includeEnd('debug');\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformFloatVec4(gl, activeUniform, uniformName, location) {\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = undefined;\n  this._value = undefined;\n\n  this._gl = gl;\n  this._location = location;\n}\n\nUniformFloatVec4.prototype.set = function () {\n  const v = this.value;\n\n  if (defined(v.red)) {\n    if (!Color.equals(v, this._value)) {\n      this._value = Color.clone(v, this._value);\n      this._gl.uniform4f(this._location, v.red, v.green, v.blue, v.alpha);\n    }\n  } else if (defined(v.x)) {\n    if (!Cartesian4.equals(v, this._value)) {\n      this._value = Cartesian4.clone(v, this._value);\n      this._gl.uniform4f(this._location, v.x, v.y, v.z, v.w);\n    }\n  } else {\n    //>>includeStart('debug', pragmas.debug);\n    throw new DeveloperError(`Invalid vec4 value for uniform \"${this.name}\".`);\n    //>>includeEnd('debug');\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformSampler(gl, activeUniform, uniformName, location) {\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = undefined;\n\n  this._gl = gl;\n  this._location = location;\n\n  this.textureUnitIndex = undefined;\n}\n\nUniformSampler.prototype.set = function () {\n  const gl = this._gl;\n  gl.activeTexture(gl.TEXTURE0 + this.textureUnitIndex);\n\n  const v = this.value;\n  gl.bindTexture(v._target, v._texture);\n};\n\nUniformSampler.prototype._setSampler = function (textureUnitIndex) {\n  this.textureUnitIndex = textureUnitIndex;\n  this._gl.uniform1i(this._location, textureUnitIndex);\n  return textureUnitIndex + 1;\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformInt(gl, activeUniform, uniformName, location) {\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = undefined;\n  this._value = 0.0;\n\n  this._gl = gl;\n  this._location = location;\n}\n\nUniformInt.prototype.set = function () {\n  if (this.value !== this._value) {\n    this._value = this.value;\n    this._gl.uniform1i(this._location, this.value);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n/**\n * @private\n * @constructor\n */\nfunction UniformIntVec2(gl, activeUniform, uniformName, location) {\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = undefined;\n  this._value = new Cartesian2();\n\n  this._gl = gl;\n  this._location = location;\n}\n\nUniformIntVec2.prototype.set = function () {\n  const v = this.value;\n  if (!Cartesian2.equals(v, this._value)) {\n    Cartesian2.clone(v, this._value);\n    this._gl.uniform2i(this._location, v.x, v.y);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n/**\n * @private\n * @constructor\n */\nfunction UniformIntVec3(gl, activeUniform, uniformName, location) {\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = undefined;\n  this._value = new Cartesian3();\n\n  this._gl = gl;\n  this._location = location;\n}\n\nUniformIntVec3.prototype.set = function () {\n  const v = this.value;\n  if (!Cartesian3.equals(v, this._value)) {\n    Cartesian3.clone(v, this._value);\n    this._gl.uniform3i(this._location, v.x, v.y, v.z);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n/**\n * @private\n * @constructor\n */\nfunction UniformIntVec4(gl, activeUniform, uniformName, location) {\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = undefined;\n  this._value = new Cartesian4();\n\n  this._gl = gl;\n  this._location = location;\n}\n\nUniformIntVec4.prototype.set = function () {\n  const v = this.value;\n  if (!Cartesian4.equals(v, this._value)) {\n    Cartesian4.clone(v, this._value);\n    this._gl.uniform4i(this._location, v.x, v.y, v.z, v.w);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\nconst scratchUniformArray = new Float32Array(4);\n/**\n * @private\n * @constructor\n */\nfunction UniformMat2(gl, activeUniform, uniformName, location) {\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = undefined;\n  this._value = new Matrix2();\n\n  this._gl = gl;\n  this._location = location;\n}\n\nUniformMat2.prototype.set = function () {\n  if (!Matrix2.equalsArray(this.value, this._value, 0)) {\n    Matrix2.clone(this.value, this._value);\n\n    const array = Matrix2.toArray(this.value, scratchUniformArray);\n    this._gl.uniformMatrix2fv(this._location, false, array);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\nconst scratchMat3Array = new Float32Array(9);\n/**\n * @private\n * @constructor\n */\nfunction UniformMat3(gl, activeUniform, uniformName, location) {\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = undefined;\n  this._value = new Matrix3();\n\n  this._gl = gl;\n  this._location = location;\n}\n\nUniformMat3.prototype.set = function () {\n  if (!Matrix3.equalsArray(this.value, this._value, 0)) {\n    Matrix3.clone(this.value, this._value);\n\n    const array = Matrix3.toArray(this.value, scratchMat3Array);\n    this._gl.uniformMatrix3fv(this._location, false, array);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\nconst scratchMat4Array = new Float32Array(16);\n/**\n * @private\n * @constructor\n */\nfunction UniformMat4(gl, activeUniform, uniformName, location) {\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = undefined;\n  this._value = new Matrix4();\n\n  this._gl = gl;\n  this._location = location;\n}\n\nUniformMat4.prototype.set = function () {\n  if (!Matrix4.equalsArray(this.value, this._value, 0)) {\n    Matrix4.clone(this.value, this._value);\n\n    const array = Matrix4.toArray(this.value, scratchMat4Array);\n    this._gl.uniformMatrix4fv(this._location, false, array);\n  }\n};\nexport default createUniform;\n","import Cartesian2 from \"../Core/Cartesian2.js\";\nimport Cartesian3 from \"../Core/Cartesian3.js\";\nimport Cartesian4 from \"../Core/Cartesian4.js\";\nimport Color from \"../Core/Color.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Matrix2 from \"../Core/Matrix2.js\";\nimport Matrix3 from \"../Core/Matrix3.js\";\nimport Matrix4 from \"../Core/Matrix4.js\";\nimport RuntimeError from \"../Core/RuntimeError.js\";\n\n/**\n * @private\n * @constructor\n */\nfunction createUniformArray(gl, activeUniform, uniformName, locations) {\n  switch (activeUniform.type) {\n    case gl.FLOAT:\n      return new UniformArrayFloat(gl, activeUniform, uniformName, locations);\n    case gl.FLOAT_VEC2:\n      return new UniformArrayFloatVec2(\n        gl,\n        activeUniform,\n        uniformName,\n        locations\n      );\n    case gl.FLOAT_VEC3:\n      return new UniformArrayFloatVec3(\n        gl,\n        activeUniform,\n        uniformName,\n        locations\n      );\n    case gl.FLOAT_VEC4:\n      return new UniformArrayFloatVec4(\n        gl,\n        activeUniform,\n        uniformName,\n        locations\n      );\n    case gl.SAMPLER_2D:\n    case gl.SAMPLER_CUBE:\n      return new UniformArraySampler(gl, activeUniform, uniformName, locations);\n    case gl.INT:\n    case gl.BOOL:\n      return new UniformArrayInt(gl, activeUniform, uniformName, locations);\n    case gl.INT_VEC2:\n    case gl.BOOL_VEC2:\n      return new UniformArrayIntVec2(gl, activeUniform, uniformName, locations);\n    case gl.INT_VEC3:\n    case gl.BOOL_VEC3:\n      return new UniformArrayIntVec3(gl, activeUniform, uniformName, locations);\n    case gl.INT_VEC4:\n    case gl.BOOL_VEC4:\n      return new UniformArrayIntVec4(gl, activeUniform, uniformName, locations);\n    case gl.FLOAT_MAT2:\n      return new UniformArrayMat2(gl, activeUniform, uniformName, locations);\n    case gl.FLOAT_MAT3:\n      return new UniformArrayMat3(gl, activeUniform, uniformName, locations);\n    case gl.FLOAT_MAT4:\n      return new UniformArrayMat4(gl, activeUniform, uniformName, locations);\n    default:\n      throw new RuntimeError(\n        `Unrecognized uniform type: ${activeUniform.type} for uniform \"${uniformName}\".`\n      );\n  }\n}\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArrayFloat(gl, activeUniform, uniformName, locations) {\n  const length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Float32Array(length);\n\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayFloat.prototype.set = function () {\n  const value = this.value;\n  const length = value.length;\n  const arraybuffer = this._value;\n  let changed = false;\n\n  for (let i = 0; i < length; ++i) {\n    const v = value[i];\n\n    if (v !== arraybuffer[i]) {\n      arraybuffer[i] = v;\n      changed = true;\n    }\n  }\n\n  if (changed) {\n    this._gl.uniform1fv(this._location, arraybuffer);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArrayFloatVec2(gl, activeUniform, uniformName, locations) {\n  const length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Float32Array(length * 2);\n\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayFloatVec2.prototype.set = function () {\n  const value = this.value;\n  const length = value.length;\n  const arraybuffer = this._value;\n  let changed = false;\n  let j = 0;\n\n  for (let i = 0; i < length; ++i) {\n    const v = value[i];\n\n    if (!Cartesian2.equalsArray(v, arraybuffer, j)) {\n      Cartesian2.pack(v, arraybuffer, j);\n      changed = true;\n    }\n    j += 2;\n  }\n\n  if (changed) {\n    this._gl.uniform2fv(this._location, arraybuffer);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArrayFloatVec3(gl, activeUniform, uniformName, locations) {\n  const length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Float32Array(length * 3);\n\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayFloatVec3.prototype.set = function () {\n  const value = this.value;\n  const length = value.length;\n  const arraybuffer = this._value;\n  let changed = false;\n  let j = 0;\n\n  for (let i = 0; i < length; ++i) {\n    const v = value[i];\n\n    if (defined(v.red)) {\n      if (\n        v.red !== arraybuffer[j] ||\n        v.green !== arraybuffer[j + 1] ||\n        v.blue !== arraybuffer[j + 2]\n      ) {\n        arraybuffer[j] = v.red;\n        arraybuffer[j + 1] = v.green;\n        arraybuffer[j + 2] = v.blue;\n        changed = true;\n      }\n    } else if (defined(v.x)) {\n      if (!Cartesian3.equalsArray(v, arraybuffer, j)) {\n        Cartesian3.pack(v, arraybuffer, j);\n        changed = true;\n      }\n    } else {\n      //>>includeStart('debug', pragmas.debug);\n      throw new DeveloperError(\"Invalid vec3 value.\");\n      //>>includeEnd('debug');\n    }\n\n    j += 3;\n  }\n\n  if (changed) {\n    this._gl.uniform3fv(this._location, arraybuffer);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArrayFloatVec4(gl, activeUniform, uniformName, locations) {\n  const length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Float32Array(length * 4);\n\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayFloatVec4.prototype.set = function () {\n  // PERFORMANCE_IDEA: if it is a common case that only a few elements\n  // in a uniform array change, we could use heuristics to determine\n  // when it is better to call uniform4f for each element that changed\n  // vs. call uniform4fv once to set the entire array.  This applies\n  // to all uniform array types, not just vec4.  We might not care\n  // once we have uniform buffers since that will be the fast path.\n\n  // PERFORMANCE_IDEA: Micro-optimization (I bet it works though):\n  // As soon as changed is true, break into a separate loop that\n  // does the copy without the equals check.\n\n  const value = this.value;\n  const length = value.length;\n  const arraybuffer = this._value;\n  let changed = false;\n  let j = 0;\n\n  for (let i = 0; i < length; ++i) {\n    const v = value[i];\n\n    if (defined(v.red)) {\n      if (!Color.equalsArray(v, arraybuffer, j)) {\n        Color.pack(v, arraybuffer, j);\n        changed = true;\n      }\n    } else if (defined(v.x)) {\n      if (!Cartesian4.equalsArray(v, arraybuffer, j)) {\n        Cartesian4.pack(v, arraybuffer, j);\n        changed = true;\n      }\n    } else {\n      //>>includeStart('debug', pragmas.debug);\n      throw new DeveloperError(\"Invalid vec4 value.\");\n      //>>includeEnd('debug');\n    }\n\n    j += 4;\n  }\n\n  if (changed) {\n    this._gl.uniform4fv(this._location, arraybuffer);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArraySampler(gl, activeUniform, uniformName, locations) {\n  const length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Float32Array(length);\n\n  this._gl = gl;\n  this._locations = locations;\n\n  this.textureUnitIndex = undefined;\n}\n\nUniformArraySampler.prototype.set = function () {\n  const gl = this._gl;\n  const textureUnitIndex = gl.TEXTURE0 + this.textureUnitIndex;\n\n  const value = this.value;\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    const v = value[i];\n    gl.activeTexture(textureUnitIndex + i);\n    gl.bindTexture(v._target, v._texture);\n  }\n};\n\nUniformArraySampler.prototype._setSampler = function (textureUnitIndex) {\n  this.textureUnitIndex = textureUnitIndex;\n\n  const locations = this._locations;\n  const length = locations.length;\n  for (let i = 0; i < length; ++i) {\n    const index = textureUnitIndex + i;\n    this._gl.uniform1i(locations[i], index);\n  }\n\n  return textureUnitIndex + length;\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArrayInt(gl, activeUniform, uniformName, locations) {\n  const length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Int32Array(length);\n\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayInt.prototype.set = function () {\n  const value = this.value;\n  const length = value.length;\n  const arraybuffer = this._value;\n  let changed = false;\n\n  for (let i = 0; i < length; ++i) {\n    const v = value[i];\n\n    if (v !== arraybuffer[i]) {\n      arraybuffer[i] = v;\n      changed = true;\n    }\n  }\n\n  if (changed) {\n    this._gl.uniform1iv(this._location, arraybuffer);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArrayIntVec2(gl, activeUniform, uniformName, locations) {\n  const length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Int32Array(length * 2);\n\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayIntVec2.prototype.set = function () {\n  const value = this.value;\n  const length = value.length;\n  const arraybuffer = this._value;\n  let changed = false;\n  let j = 0;\n\n  for (let i = 0; i < length; ++i) {\n    const v = value[i];\n\n    if (!Cartesian2.equalsArray(v, arraybuffer, j)) {\n      Cartesian2.pack(v, arraybuffer, j);\n      changed = true;\n    }\n    j += 2;\n  }\n\n  if (changed) {\n    this._gl.uniform2iv(this._location, arraybuffer);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArrayIntVec3(gl, activeUniform, uniformName, locations) {\n  const length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Int32Array(length * 3);\n\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayIntVec3.prototype.set = function () {\n  const value = this.value;\n  const length = value.length;\n  const arraybuffer = this._value;\n  let changed = false;\n  let j = 0;\n\n  for (let i = 0; i < length; ++i) {\n    const v = value[i];\n\n    if (!Cartesian3.equalsArray(v, arraybuffer, j)) {\n      Cartesian3.pack(v, arraybuffer, j);\n      changed = true;\n    }\n    j += 3;\n  }\n\n  if (changed) {\n    this._gl.uniform3iv(this._location, arraybuffer);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArrayIntVec4(gl, activeUniform, uniformName, locations) {\n  const length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Int32Array(length * 4);\n\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayIntVec4.prototype.set = function () {\n  const value = this.value;\n  const length = value.length;\n  const arraybuffer = this._value;\n  let changed = false;\n  let j = 0;\n\n  for (let i = 0; i < length; ++i) {\n    const v = value[i];\n\n    if (!Cartesian4.equalsArray(v, arraybuffer, j)) {\n      Cartesian4.pack(v, arraybuffer, j);\n      changed = true;\n    }\n    j += 4;\n  }\n\n  if (changed) {\n    this._gl.uniform4iv(this._location, arraybuffer);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArrayMat2(gl, activeUniform, uniformName, locations) {\n  const length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Float32Array(length * 4);\n\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayMat2.prototype.set = function () {\n  const value = this.value;\n  const length = value.length;\n  const arraybuffer = this._value;\n  let changed = false;\n  let j = 0;\n\n  for (let i = 0; i < length; ++i) {\n    const v = value[i];\n\n    if (!Matrix2.equalsArray(v, arraybuffer, j)) {\n      Matrix2.pack(v, arraybuffer, j);\n      changed = true;\n    }\n    j += 4;\n  }\n\n  if (changed) {\n    this._gl.uniformMatrix2fv(this._location, false, arraybuffer);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArrayMat3(gl, activeUniform, uniformName, locations) {\n  const length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Float32Array(length * 9);\n\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayMat3.prototype.set = function () {\n  const value = this.value;\n  const length = value.length;\n  const arraybuffer = this._value;\n  let changed = false;\n  let j = 0;\n\n  for (let i = 0; i < length; ++i) {\n    const v = value[i];\n\n    if (!Matrix3.equalsArray(v, arraybuffer, j)) {\n      Matrix3.pack(v, arraybuffer, j);\n      changed = true;\n    }\n    j += 9;\n  }\n\n  if (changed) {\n    this._gl.uniformMatrix3fv(this._location, false, arraybuffer);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n * @constructor\n */\nfunction UniformArrayMat4(gl, activeUniform, uniformName, locations) {\n  const length = locations.length;\n\n  /**\n   * @type {String}\n   * @readonly\n   */\n  this.name = uniformName;\n\n  this.value = new Array(length);\n  this._value = new Float32Array(length * 16);\n\n  this._gl = gl;\n  this._location = locations[0];\n}\n\nUniformArrayMat4.prototype.set = function () {\n  const value = this.value;\n  const length = value.length;\n  const arraybuffer = this._value;\n  let changed = false;\n  let j = 0;\n\n  for (let i = 0; i < length; ++i) {\n    const v = value[i];\n\n    if (!Matrix4.equalsArray(v, arraybuffer, j)) {\n      Matrix4.pack(v, arraybuffer, j);\n      changed = true;\n    }\n    j += 16;\n  }\n\n  if (changed) {\n    this._gl.uniformMatrix4fv(this._location, false, arraybuffer);\n  }\n};\nexport default createUniformArray;\n","/**\n * Returns frozen renderState as well as all of the object literal properties. This function is deep object freeze\n * function ignoring properties named \"_applyFunctions\".\n *\n * @private\n *\n * @param {Object} renderState\n * @returns {Object} Returns frozen renderState.\n *\n */\nfunction freezeRenderState(renderState) {\n  if (typeof renderState !== \"object\" || renderState === null) {\n    return renderState;\n  }\n\n  let propName;\n  const propNames = Object.keys(renderState);\n\n  for (let i = 0; i < propNames.length; i++) {\n    propName = propNames[i];\n    if (\n      renderState.hasOwnProperty(propName) &&\n      propName !== \"_applyFunctions\"\n    ) {\n      renderState[propName] = freezeRenderState(renderState[propName]);\n    }\n  }\n  return Object.freeze(renderState);\n}\nexport default freezeRenderState;\n","import Check from \"../Core/Check.js\";\nimport defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\nimport Resource from \"../Core/Resource.js\";\nimport CubeMap from \"./CubeMap.js\";\n\n/**\n * Asynchronously loads six images and creates a cube map.  Returns a promise that\n * will resolve to a {@link CubeMap} once loaded, or reject if any image fails to load.\n *\n * @function loadCubeMap\n *\n * @param {Context} context The context to use to create the cube map.\n * @param {Object} urls The source URL of each image.  See the example below.\n * @param {Boolean} [skipColorSpaceConversion=false] If true, any custom gamma or color profiles in the images will be ignored.\n * @returns {Promise.<CubeMap>} a promise that will resolve to the requested {@link CubeMap} when loaded.\n *\n * @exception {DeveloperError} context is required.\n * @exception {DeveloperError} urls is required and must have positiveX, negativeX, positiveY, negativeY, positiveZ, and negativeZ properties.\n *\n *\n * @example\n * Cesium.loadCubeMap(context, {\n *     positiveX : 'skybox_px.png',\n *     negativeX : 'skybox_nx.png',\n *     positiveY : 'skybox_py.png',\n *     negativeY : 'skybox_ny.png',\n *     positiveZ : 'skybox_pz.png',\n *     negativeZ : 'skybox_nz.png'\n * }).then(function(cubeMap) {\n *     // use the cubemap\n * }).catch(function(error) {\n *     // an error occurred\n * });\n *\n * @see {@link http://www.w3.org/TR/cors/|Cross-Origin Resource Sharing}\n * @see {@link http://wiki.commonjs.org/wiki/Promises/A|CommonJS Promises/A}\n *\n * @private\n */\nfunction loadCubeMap(context, urls, skipColorSpaceConversion) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"context\", context);\n  if (\n    !defined(urls) ||\n    !defined(urls.positiveX) ||\n    !defined(urls.negativeX) ||\n    !defined(urls.positiveY) ||\n    !defined(urls.negativeY) ||\n    !defined(urls.positiveZ) ||\n    !defined(urls.negativeZ)\n  ) {\n    throw new DeveloperError(\n      \"urls is required and must have positiveX, negativeX, positiveY, negativeY, positiveZ, and negativeZ properties.\"\n    );\n  }\n  //>>includeEnd('debug');\n\n  // PERFORMANCE_IDEA: Given the size of some cube maps, we should consider tiling them, which\n  // would prevent hiccups when uploading, for example, six 4096x4096 textures to the GPU.\n  //\n  // Also, it is perhaps acceptable to use the context here in the callbacks, but\n  // ideally, we would do it in the primitive's update function.\n  const flipOptions = {\n    flipY: true,\n    skipColorSpaceConversion: skipColorSpaceConversion,\n    preferImageBitmap: true,\n  };\n\n  const facePromises = [\n    Resource.createIfNeeded(urls.positiveX).fetchImage(flipOptions),\n    Resource.createIfNeeded(urls.negativeX).fetchImage(flipOptions),\n    Resource.createIfNeeded(urls.positiveY).fetchImage(flipOptions),\n    Resource.createIfNeeded(urls.negativeY).fetchImage(flipOptions),\n    Resource.createIfNeeded(urls.positiveZ).fetchImage(flipOptions),\n    Resource.createIfNeeded(urls.negativeZ).fetchImage(flipOptions),\n  ];\n\n  return Promise.all(facePromises).then(function (images) {\n    return new CubeMap({\n      context: context,\n      source: {\n        positiveX: images[0],\n        negativeX: images[1],\n        positiveY: images[2],\n        negativeY: images[3],\n        positiveZ: images[4],\n        negativeZ: images[5],\n      },\n    });\n  });\n}\nexport default loadCubeMap;\n","import defined from \"../Core/defined.js\";\nimport DeveloperError from \"../Core/DeveloperError.js\";\n\n/**\n * A function to port GLSL shaders from GLSL ES 1.00 to GLSL ES 3.00\n *\n * This function is nowhere near comprehensive or complete. It just\n * handles some common cases.\n *\n * Note that this function requires the presence of the\n * \"#define OUTPUT_DECLARATION\" line that is appended\n * by ShaderSource.\n *\n * @private\n */\nfunction modernizeShader(source, isFragmentShader) {\n  const outputDeclarationRegex = /#define OUTPUT_DECLARATION/;\n  const splitSource = source.split(\"\\n\");\n\n  if (/#version 300 es/g.test(source)) {\n    return source;\n  }\n\n  let outputDeclarationLine = -1;\n  let i, line;\n  for (i = 0; i < splitSource.length; ++i) {\n    line = splitSource[i];\n    if (outputDeclarationRegex.test(line)) {\n      outputDeclarationLine = i;\n      break;\n    }\n  }\n\n  if (outputDeclarationLine === -1) {\n    throw new DeveloperError(\"Could not find a #define OUTPUT_DECLARATION!\");\n  }\n\n  const outputVariables = [];\n\n  for (i = 0; i < 10; i++) {\n    const fragDataString = `gl_FragData\\\\[${i}\\\\]`;\n    const newOutput = `czm_out${i}`;\n    const regex = new RegExp(fragDataString, \"g\");\n    if (regex.test(source)) {\n      setAdd(newOutput, outputVariables);\n      replaceInSourceString(fragDataString, newOutput, splitSource);\n      splitSource.splice(\n        outputDeclarationLine,\n        0,\n        `layout(location = ${i}) out vec4 ${newOutput};`\n      );\n      outputDeclarationLine += 1;\n    }\n  }\n\n  const czmFragColor = \"czm_fragColor\";\n  if (findInSource(\"gl_FragColor\", splitSource)) {\n    setAdd(czmFragColor, outputVariables);\n    replaceInSourceString(\"gl_FragColor\", czmFragColor, splitSource);\n    splitSource.splice(\n      outputDeclarationLine,\n      0,\n      \"layout(location = 0) out vec4 czm_fragColor;\"\n    );\n    outputDeclarationLine += 1;\n  }\n\n  const variableMap = getVariablePreprocessorBranch(\n    outputVariables,\n    splitSource\n  );\n  const lineAdds = {};\n  for (i = 0; i < splitSource.length; i++) {\n    line = splitSource[i];\n    for (const variable in variableMap) {\n      if (variableMap.hasOwnProperty(variable)) {\n        const matchVar = new RegExp(\n          `(layout)[^]+(out)[^]+(${variable})[^]+`,\n          \"g\"\n        );\n        if (matchVar.test(line)) {\n          lineAdds[line] = variable;\n        }\n      }\n    }\n  }\n\n  for (const layoutDeclaration in lineAdds) {\n    if (lineAdds.hasOwnProperty(layoutDeclaration)) {\n      const variableName = lineAdds[layoutDeclaration];\n      let lineNumber = splitSource.indexOf(layoutDeclaration);\n      const entry = variableMap[variableName];\n      const depth = entry.length;\n      for (let d = 0; d < depth; d++) {\n        splitSource.splice(lineNumber, 0, entry[d]);\n      }\n      lineNumber += depth + 1;\n      for (let d = depth - 1; d >= 0; d--) {\n        splitSource.splice(lineNumber, 0, `#endif //${entry[d]}`);\n      }\n    }\n  }\n\n  const webgl2UniqueID = \"WEBGL_2\";\n  const webgl2DefineMacro = `#define ${webgl2UniqueID}`;\n  const versionThree = \"#version 300 es\";\n  let foundVersion = false;\n  for (i = 0; i < splitSource.length; i++) {\n    if (/#version/.test(splitSource[i])) {\n      splitSource[i] = versionThree;\n      foundVersion = true;\n      break;\n    }\n  }\n\n  if (!foundVersion) {\n    splitSource.splice(0, 0, versionThree);\n  }\n\n  splitSource.splice(1, 0, webgl2DefineMacro);\n\n  removeExtension(\"EXT_draw_buffers\", webgl2UniqueID, splitSource);\n  removeExtension(\"EXT_frag_depth\", webgl2UniqueID, splitSource);\n  removeExtension(\"OES_standard_derivatives\", webgl2UniqueID, splitSource);\n\n  replaceInSourceString(\"texture2D\", \"texture\", splitSource);\n  replaceInSourceString(\"texture3D\", \"texture\", splitSource);\n  replaceInSourceString(\"textureCube\", \"texture\", splitSource);\n  replaceInSourceString(\"gl_FragDepthEXT\", \"gl_FragDepth\", splitSource);\n\n  if (isFragmentShader) {\n    replaceInSourceString(\"varying\", \"in\", splitSource);\n  } else {\n    replaceInSourceString(\"attribute\", \"in\", splitSource);\n    replaceInSourceString(\"varying\", \"out\", splitSource);\n  }\n\n  return compileSource(splitSource);\n}\n\n// Note that this fails if your string looks like\n// searchString[singleCharacter]searchString\nfunction replaceInSourceString(str, replacement, splitSource) {\n  const regexStr = `(^|[^\\\\w])(${str})($|[^\\\\w])`;\n  const regex = new RegExp(regexStr, \"g\");\n\n  const splitSourceLength = splitSource.length;\n  for (let i = 0; i < splitSourceLength; ++i) {\n    const line = splitSource[i];\n    splitSource[i] = line.replace(regex, `$1${replacement}$3`);\n  }\n}\n\nfunction replaceInSourceRegex(regex, replacement, splitSource) {\n  const splitSourceLength = splitSource.length;\n  for (let i = 0; i < splitSourceLength; ++i) {\n    const line = splitSource[i];\n    splitSource[i] = line.replace(regex, replacement);\n  }\n}\n\nfunction findInSource(str, splitSource) {\n  const regexStr = `(^|[^\\\\w])(${str})($|[^\\\\w])`;\n  const regex = new RegExp(regexStr, \"g\");\n\n  const splitSourceLength = splitSource.length;\n  for (let i = 0; i < splitSourceLength; ++i) {\n    const line = splitSource[i];\n    if (regex.test(line)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction compileSource(splitSource) {\n  let wholeSource = \"\";\n\n  const splitSourceLength = splitSource.length;\n  for (let i = 0; i < splitSourceLength; ++i) {\n    wholeSource += `${splitSource[i]}\\n`;\n  }\n  return wholeSource;\n}\n\nfunction setAdd(variable, set) {\n  if (set.indexOf(variable) === -1) {\n    set.push(variable);\n  }\n}\n\nfunction getVariablePreprocessorBranch(layoutVariables, splitSource) {\n  const variableMap = {};\n\n  const numLayoutVariables = layoutVariables.length;\n\n  const stack = [];\n  for (let i = 0; i < splitSource.length; ++i) {\n    const line = splitSource[i];\n    const hasIF = /(#ifdef|#if)/g.test(line);\n    const hasELSE = /#else/g.test(line);\n    const hasENDIF = /#endif/g.test(line);\n\n    if (hasIF) {\n      stack.push(line);\n    } else if (hasELSE) {\n      const top = stack[stack.length - 1];\n      let op = top.replace(\"ifdef\", \"ifndef\");\n      if (/if/g.test(op)) {\n        op = op.replace(/(#if\\s+)(\\S*)([^]*)/, \"$1!($2)$3\");\n      }\n      stack.pop();\n      stack.push(op);\n    } else if (hasENDIF) {\n      stack.pop();\n    } else if (!/layout/g.test(line)) {\n      for (let varIndex = 0; varIndex < numLayoutVariables; ++varIndex) {\n        const varName = layoutVariables[varIndex];\n        if (line.indexOf(varName) !== -1) {\n          if (!defined(variableMap[varName])) {\n            variableMap[varName] = stack.slice();\n          } else {\n            variableMap[varName] = variableMap[varName].filter(function (x) {\n              return stack.indexOf(x) >= 0;\n            });\n          }\n        }\n      }\n    }\n  }\n\n  return variableMap;\n}\n\nfunction removeExtension(name, webgl2UniqueID, splitSource) {\n  const regex = `#extension\\\\s+GL_${name}\\\\s+:\\\\s+[a-zA-Z0-9]+\\\\s*$`;\n  replaceInSourceRegex(new RegExp(regex, \"g\"), \"\", splitSource);\n\n  // replace any possible directive #ifdef (GL_EXT_extension) with WEBGL_2 unique directive\n  replaceInSourceString(`GL_${name}`, webgl2UniqueID, splitSource);\n}\nexport default modernizeShader;\n"],"names":["SampledPositionProperty","referenceFrame","numberOfDerivatives","derivativeTypes","Array","i","this","_numberOfDerivatives","_property","_definitionChanged","_referenceFrame","addEventListener","raiseEvent","Object","defineProperties","prototype","isConstant","get","definitionChanged","interpolationDegree","interpolationAlgorithm","forwardExtrapolationType","set","value","forwardExtrapolationDuration","backwardExtrapolationType","backwardExtrapolationDuration","getValue","time","result","getValueInReferenceFrame","setInterpolationOptions","options","addSample","position","derivatives","length","addSamples","times","positions","addSamplesPackedArray","packedSamples","epoch","removeSample","removeSamples","timeInterval","equals","other","PackableNumber","packedLength","pack","array","startingIndex","unpack","arrayInsert","startIndex","items","arrayLength","itemsLength","newLength","q","convertDate","date","timesSpliceArgs","valuesSpliceArgs","mergeNewSamples","values","newData","prevItem","timesInsertionPoint","valuesInsertionPoint","currentTime","nextTime","newDataIndex","timesSpliceArgsCount","valuesSpliceArgsCount","undefined","SampledProperty","type","innerType","Number","innerDerivativeTypes","packedInterpolationLength","inputOrder","derivativeType","derivativePackedLength","_type","_innerType","_interpolationDegree","_interpolationAlgorithm","_numberOfPoints","_times","_values","_xTable","_yTable","_packedLength","_packedInterpolationLength","_updateTableLength","_interpolationResult","_derivativeTypes","_innerDerivativeTypes","_inputOrder","_forwardExtrapolationType","_forwardExtrapolationDuration","_backwardExtrapolationType","_backwardExtrapolationDuration","property","numberToRemove","splice","timesLength","timeout","index","startTime","endTime","xTable","yTable","numberOfPoints","Math","min","getRequiredDataPoints","degree","firstIndex","lastIndex","computedFirstIndex","computedLastIndex","convertPackedArrayForInterpolation","destinationIndex","sourceIndex","stop","x","interpolationResult","interpolate","yStride","floor","interpolateOrderZero","unpackInterpolationResult","valuesChanged","hasDerivatives","data","push","derivativesLength","derivativeValues","start","isStartIncluded","stopIndex","isStopIncluded","otherDerivativeTypes","otherTimes","otherValues","_mergeNewSamples","ScaledPositionProperty","_value","_removeSubscription","setValue","_raiseDefinitionChanged","colorScratch","distanceDisplayConditionScratch","defaultDistanceDisplayCondition","defaultOffset","offsetScratch","Batch","primitives","translucent","appearanceType","depthFailAppearanceType","depthFailMaterialProperty","closed","shadows","removeMaterialSubscription","depthFailMaterial","createPrimitive","waitingOnCreate","primitive","oldPrimitive","geometry","updaters","updatersWithAttributes","attributes","subscriptions","showsUpdated","itemsToRemove","invalidated","onMaterialChanged","StaticGeometryColorBatch","_solidItems","_translucentItems","_primitives","_appearanceType","_depthFailAppearanceType","_closed","_shadows","removeItem","updater","item","remove","destroy","moveItems","batch","itemsMoved","itemsToMoveLength","add","updateItems","isUpdated","updatersLength","h","update","getBoundingSphere","contains","removeAllPrimitives","isMaterial","material","updaterMaterial","instance","id","hasConstantFill","fillMaterialProperty","distanceDisplayConditionProperty","terrainOffsetProperty","that","entity","propertyName","newValue","oldValue","unsubscribe","removedCount","geometries","depthFailAppearance","show","asynchronous","geometryInstances","slice","appearance","removeAll","ready","getGeometryInstanceAttributes","colorProperty","color","resultColor","_lastColor","depthFailColorProperty","depthColor","_lastDepthFailColor","depthFailColor","isShowing","isFilled","distanceDisplayCondition","_lastDistanceDisplayCondition","offsetProperty","offset","_lastOffset","updateShows","boundingSphere","clone","createFillGeometryInstance","solidsMoved","translucentsMoved","materialProperty","updaterDepthFailMaterial","StaticGeometryPerMaterialBatch","_items","isTranslucent","classificationType","zIndex","isDirty","rectangleCollisionCheck","StaticGroundGeometryColorBatch","_batches","_classificationType","overlapping","rectangle","collides","insert","geometryInstance","fillColor","bs","batches","count","batchCount","oldBatch","j","newBatch","usingSphericalTextureCoordinates","StaticGroundGeometryPerMaterialBatch","scratchColor","orderedGroundPrimitives","_asynchronous","StaticGroundPolylinePerMaterialBatch","_orderedGroundPrimitives","width","StaticOutlineGeometryBatch","scene","_scene","_solidBatches","_translucentBatches","hasConstantOutline","outlineColorProperty","flat","renderState","lineWidth","outlineColor","isOutlineVisible","createOutlineGeometryInstance","clampLineWidth","outlineWidth","solidBatches","solidBatchesLength","translucentBatches","translucentBatchesLength","needUpdate","solidsToMoveLength","translucentToMoveLength","solidBatch","translucentBatch","defaultOrientation","defaultEvenColor","defaultOddColor","StripeMaterialProperty","_orientation","_orientationSubscription","_evenColor","_evenColorSubscription","_oddColor","_oddColorSubscription","_offset","_offsetSubscription","_repeat","_repeatSubscription","orientation","evenColor","oddColor","repeat","getType","horizontal","freeze","HORIZONTAL","VERTICAL","scratchPosition","scratchCarto","TerrainOffsetProperty","positionProperty","heightReferenceProperty","extrudedHeightReferenceProperty","_heightReference","_extrudedHeightReference","_positionProperty","_position","_cartographicPosition","_normal","_terrainHeight","_removeCallbackFunc","_removeEventListener","_removeModeListener","globe","terrainProviderChanged","_updateClamping","morphComplete","ellipsoid","geodeticSurfaceNormal","surface","_surface","cartographicPosition","cartesianToCartographic","height","getHeight","updateHeight","clampedPosition","mode","carto","heightReference","extrudedHeightReference","normal","isDestroyed","TimeIntervalCollectionPositionProperty","_intervals","changedEvent","_intervalsChanged","isEmpty","intervals","findDataForIntervalContainingDate","TimeIntervalCollectionProperty","VelocityOrientationProperty","_velocityVectorProperty","_subscription","_ellipsoid","positionScratch","velocityScratch","rotationScratch","velocity","_getValue","VelocityVectorProperty","normalize","_normalize","position1Scratch","position2Scratch","timeScratch","step","velocityResult","positionResult","position1","position2","Visualizer","WallGeometryOptions","vertexFormat","minimumHeights","maximumHeights","granularity","WallGeometryUpdater","geometryOptions","geometryPropertyName","observedPropertyNames","_onEntityPropertyChanged","wall","DynamicWallGeometryUpdater","geometryUpdater","groundPrimitives","create","constructor","_fillEnabled","_entity","isAvailable","_showProperty","_fillProperty","_distanceDisplayConditionProperty","distanceDisplayConditionAttribute","_materialProperty","currentColor","_options","_outlineEnabled","_outlineColorProperty","_showOutlineProperty","_isHidden","_getIsClosed","_isDynamic","_setStaticOptions","isColorMaterial","DynamicGeometryUpdater","_setOptions","WallGraphics","_show","_showSubscription","_positions","_positionsSubscription","_minimumHeights","_minimumHeightsSubscription","_maximumHeights","_maximumHeightsSubscription","_granularity","_granularitySubscription","_fill","_fillSubscription","_material","_materialSubscription","_outline","_outlineSubscription","_outlineColor","_outlineColorSubscription","_outlineWidth","_outlineWidthSubscription","_shadowsSubscription","_distanceDisplayCondition","_distanceDisplayConditionSubscription","merge","fill","outline","source","createMaterialProperty","HTMLCanvasElement","HTMLVideoElement","image","name","configurable","createConstantProperty","createPropertyCallback","privateName","subscriptionName","subscription","createProperty","toString","createRawProperty","gxNamespace","ExternalFileHandler","modelCallback","_files","_promises","_count","_modelCallback","imageTypeRegex","getModelBlobHander","filename","blob","ValueGetter","_time","StyleCache","_ids","_styles","IdManager","exportKml","entities","kmz","state","_createState","rootEntities","filter","parent","kmlDoc","kmlElement","documentElement","setAttributeNS","kmlDocumentElement","createElement","appendChild","recurseEntities","styleCache","save","externalFileHandler","promise","then","kmlString","XMLSerializer","serializeToString","externalFiles","zWorkerUrl","workerScripts","deflate","inflate","blobWriter","writer","keys","addExternalFilesToZip","close","createKmz","files","kml","parentNode","valueGetter","idManager","overlays","styles","timeSpan","createPoint","createLineString","polyline","createPolygon","polygon","createModel","model","availability","createBasicElementWithText","overlayIndex","overlay","setAttribute","description","geometryCount","placemark","labelGraphics","label","labelStyle","text","getColor","scale","styleCount","style","styleIndex","multigeometry","geometryIndex","children","_children","folderNode","texture","isDataUri","url","regexResult","match","fetchBlob","deferred","toBlob","resolve","hasOwnProperty","Promise","all","defaultVal","colorToString","getMaterialType","element","ids","key","innerHTML","styleId","parentElement","firstElement","childNodes","insertBefore","entityAvailability","computeAvailability","defaultAvailability","sampleDuration","document","implementation","createDocument","scratchCartesian3","scratchCartographic","scratchJulianDate","pointGraphics","billboard","point","path","entityPositionProperty","createTracks","coordinates","getCoordinates","pointGeometry","altitudeMode","getAltitudeMode","iconStyle","createIconStyleFromBillboard","createIconStyleFromPoint","useEntityPositionProperty","isModel","tracks","interval","trackAltitudeMode","positionTimes","positionValues","constCoordinates","duration","stopDate","trackGeometry","createElementNS","k","when","coord","createModelGeometry","multiTrackGeometry","lineStyle","processMaterial","pixelSize","billboardGraphics","icon","imageSubRegion","y","pixelOffset","horizontalOrigin","verticalOrigin","hotSpot","rotation","alignedAxis","polylineGraphics","lineStringGeometry","clampToGround","altitudeModeText","createTextNode","positionsProperty","getLinearRing","perPositionHeight","coordinateStrings","positionCount","longitude","latitude","join","linearRing","isRectangle","rectangleGraphics","groundOverlay","latLonBox","north","south","east","west","href","createGroundOverlay","polygonGeometry","extrudedHeight","boundaries","coordinatesProperty","cornerFunction","outerBoundaryIs","getRectangleBoundaries","polygonGraphics","hierarchyProperty","hierarchy","isArray","holes","holeCount","innerBoundaryIs","getPolygonBoundaries","boundaryCount","polyStyle","modelGraphics","modelGeometry","scaleElement","link","uri","location","elementName","elementValue","namespace","indexOf","createCDATASection","bytes","toBytes","_observedPropertyNames","_geometryPropertyName","_terrainOffsetProperty","centerPosition","_computeCenter","bind","_dynamic","viewerPositionWCScratch","AutomaticUniform","_size","size","_datatype","datatype","datatypeToGlsl","getDeclaration","declaration","czm_viewport","uniformState","viewportCartesian4","czm_viewportOrthographic","viewportOrthographic","czm_viewportTransformation","viewportTransformation","czm_globeDepthTexture","globeDepthTexture","czm_model","czm_inverseModel","inverseModel","czm_view","view","czm_view3D","view3D","czm_viewRotation","viewRotation","czm_viewRotation3D","viewRotation3D","czm_inverseView","inverseView","czm_inverseView3D","inverseView3D","czm_inverseViewRotation","inverseViewRotation","czm_inverseViewRotation3D","inverseViewRotation3D","czm_projection","projection","czm_inverseProjection","inverseProjection","czm_infiniteProjection","infiniteProjection","czm_modelView","modelView","czm_modelView3D","modelView3D","czm_modelViewRelativeToEye","modelViewRelativeToEye","czm_inverseModelView","inverseModelView","czm_inverseModelView3D","inverseModelView3D","czm_viewProjection","viewProjection","czm_inverseViewProjection","inverseViewProjection","czm_modelViewProjection","modelViewProjection","czm_inverseModelViewProjection","inverseModelViewProjection","czm_modelViewProjectionRelativeToEye","modelViewProjectionRelativeToEye","czm_modelViewInfiniteProjection","modelViewInfiniteProjection","czm_orthographicIn3D","orthographicIn3D","czm_normal","czm_normal3D","normal3D","czm_inverseNormal","inverseNormal","czm_inverseNormal3D","inverseNormal3D","czm_eyeHeight","eyeHeight","czm_eyeHeight2D","eyeHeight2D","czm_entireFrustum","entireFrustum","czm_currentFrustum","currentFrustum","czm_frustumPlanes","frustumPlanes","czm_farDepthFromNearPlusOne","farDepthFromNearPlusOne","czm_log2FarDepthFromNearPlusOne","log2FarDepthFromNearPlusOne","czm_oneOverLog2FarDepthFromNearPlusOne","oneOverLog2FarDepthFromNearPlusOne","czm_sunPositionWC","sunPositionWC","czm_sunPositionColumbusView","sunPositionColumbusView","czm_sunDirectionEC","sunDirectionEC","czm_sunDirectionWC","sunDirectionWC","czm_moonDirectionEC","moonDirectionEC","czm_lightDirectionEC","lightDirectionEC","czm_lightDirectionWC","lightDirectionWC","czm_lightColor","lightColor","czm_lightColorHdr","lightColorHdr","czm_encodedCameraPositionMCHigh","encodedCameraPositionMCHigh","czm_encodedCameraPositionMCLow","encodedCameraPositionMCLow","czm_viewerPositionWC","czm_frameNumber","frameState","frameNumber","czm_morphTime","morphTime","czm_sceneMode","czm_pass","pass","czm_backgroundColor","backgroundColor","czm_brdfLut","brdfLut","czm_environmentMap","environmentMap","czm_specularEnvironmentMaps","specularEnvironmentMaps","czm_specularEnvironmentMapSize","specularEnvironmentMapsDimensions","czm_specularEnvironmentMapsMaximumLOD","specularEnvironmentMapsMaximumLOD","czm_sphericalHarmonicCoefficients","sphericalHarmonicCoefficients","czm_temeToPseudoFixed","temeToPseudoFixedMatrix","czm_pixelRatio","pixelRatio","czm_fogDensity","fogDensity","czm_splitPosition","splitPosition","czm_geometricToleranceOverMeter","geometricToleranceOverMeter","czm_minimumDisableDepthTestDistance","minimumDisableDepthTestDistance","czm_invertClassificationColor","invertClassificationColor","czm_gamma","gamma","czm_ellipsoidRadii","radii","czm_ellipsoidInverseRadii","oneOverRadii","Buffer","context","typedArray","sizeInBytes","byteLength","usage","gl","_gl","bufferTarget","hasArray","buffer","createBuffer","bindBuffer","bufferData","_webgl2","_bufferTarget","_sizeInBytes","_usage","_buffer","vertexArrayDestroyable","createVertexBuffer","createIndexBuffer","indexDatatype","elementIndexUint","bytesPerIndex","numberOfIndices","_getBuffer","copyFromArrayView","arrayView","offsetInBytes","target","bufferSubData","copyFromBuffer","readBuffer","readOffset","writeOffset","readTarget","writeTarget","copyBufferSubData","getBufferData","sourceOffset","destinationOffset","copyLength","elementSize","BYTES_PER_ELEMENT","getBufferSubData","deleteBuffer","BufferUsage","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","validate","bufferUsage","ClearCommand","depth","stencil","framebuffer","owner","ALL","execute","passState","clear","ComputeCommand","vertexArray","fragmentShaderSource","shaderProgram","uniformMap","outputTexture","preExecute","postExecute","canceled","persists","computeEngine","ComputeEngine","_context","renderStateScratch","drawCommandScratch","primitiveType","clearCommandScratch","computeCommand","getViewportQuadVertexArray","vertexShaderSource","attributeLocations","textureCoordinates","createViewportQuadShader","colorTextures","destroyAttachments","createFramebuffer","viewport","createRenderState","clearCommand","drawCommand","throwOnError","glFunc","glFuncArguments","error","getError","NO_ERROR","message","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","OUT_OF_MEMORY","CONTEXT_LOST_WEBGL","errorToString","createErrorMessage","makeGetterSetter","logFunction","getExtension","names","extension","Context","canvas","WebGLRenderingContext","_canvas","allowTextureFilterAnisotropic","webglOptions","webgl","alpha","requestWebgl2","WebGL2RenderingContext","glContext","webgl2","getWebGLStub","getContext","_originalGLContext","_id","validateFramebuffer","validateShaderProgram","logShaderCompilation","_throwOnWebGLError","_shaderCache","_textureCache","_stencilBits","getParameter","STENCIL_BITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_CUBE_MAP_TEXTURE_SIZE","MAX_FRAGMENT_UNIFORM_VECTORS","MAX_TEXTURE_IMAGE_UNITS","MAX_RENDERBUFFER_SIZE","MAX_TEXTURE_SIZE","MAX_VARYING_VECTORS","MAX_VERTEX_ATTRIBS","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_VERTEX_UNIFORM_VECTORS","MAX_SAMPLES","aliasedLineWidthRange","ALIASED_LINE_WIDTH_RANGE","aliasedPointSizeRange","ALIASED_POINT_SIZE_RANGE","maximumViewportDimensions","MAX_VIEWPORT_DIMS","highpFloat","getShaderPrecisionFormat","FRAGMENT_SHADER","HIGH_FLOAT","precision","highpInt","HIGH_INT","rangeMax","_antialias","getContextAttributes","antialias","_standardDerivatives","_blendMinmax","_elementIndexUint","_depthTexture","_fragDepth","_debugShaders","_textureFloat","_textureHalfFloat","_textureFloatLinear","_textureHalfFloatLinear","_colorBufferFloat","_floatBlend","_colorBufferHalfFloat","_s3tc","_pvrtc","_astc","_etc","_etc1","_bc7","textureFilterAnisotropic","glCreateVertexArray","glBindVertexArray","glDeleteVertexArray","glDrawElementsInstanced","glDrawArraysInstanced","glVertexAttribDivisor","glDrawBuffers","vertexArrayObject","instancedArrays","drawBuffers","_textureFilterAnisotropic","MAX_TEXTURE_MAX_ANISOTROPY_EXT","createVertexArray","vao","bindVertexArray","deleteVertexArray","instanceCount","drawElementsInstanced","first","drawArraysInstanced","divisor","vertexAttribDivisor","buffers","createVertexArrayOES","bindVertexArrayOES","deleteVertexArrayOES","drawElementsInstancedANGLE","drawArraysInstancedANGLE","vertexAttribDivisorANGLE","drawBuffersWEBGL","_vertexArrayObject","_instancedArrays","_drawBuffers","_clearColor","_clearDepth","_clearStencil","us","ps","rs","_defaultPassState","_defaultRenderState","_defaultTexture","_defaultEmissiveTexture","_defaultNormalTexture","_defaultCubeMap","_us","_currentRenderState","_currentPassState","_currentFramebuffer","_maxFrameTextureUnitIndex","_vertexAttribDivisors","_previousDrawInstanced","_pickObjects","_nextPickColor","Uint32Array","cache","defaultFramebufferMarker","applyRenderState","previousRenderState","previousPassState","scratchBackBufferArray","bindFramebuffer","_bind","status","checkFramebufferStatus","FRAMEBUFFER","FRAMEBUFFER_COMPLETE","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_UNSUPPORTED","_getActiveColorAttachments","shaderCache","textureCache","stencilBits","stencilBuffer","msaa","standardDerivatives","floatBlend","blendMinmax","depthTexture","floatingPointTexture","halfFloatingPointTexture","textureFloatLinear","textureHalfFloatLinear","s3tc","pvrtc","astc","etc","etc1","bc7","supportsBasis","fragmentDepth","colorBufferFloat","colorBufferHalfFloat","debugShaders","throwOnWebGLError","wrapFunction","apply","arguments","glWrapper","Function","defineProperty","wrapGL","defaultTexture","arrayBufferView","Uint8Array","flipY","defaultEmissiveTexture","pixelFormat","defaultNormalTexture","defaultCubeMap","face","positiveX","negativeX","positiveY","negativeY","positiveZ","negativeZ","drawingBufferHeight","drawingBufferWidth","defaultFramebuffer","defaultClearCommand","bitmask","c","d","s","clearColor","red","green","blue","COLOR_BUFFER_BIT","clearDepth","DEPTH_BUFFER_BIT","clearStencil","STENCIL_BUFFER_BIT","draw","_shaderProgram","_framebuffer","_renderState","_uniformMap","depthTest","enabled","hasDepthAttachment","max","maximumTextureUnitIndex","beginDraw","_primitiveType","va","_vertexArray","_modelMatrix","_setUniforms","indexBuffer","drawElements","numberOfVertices","drawArrays","_unBind","continueDraw","endFrame","useProgram","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","TEXTURE_CUBE_MAP","readPixels","readState","pixelDatatype","numberOfColorAttachments","getColorTexture","pixels","viewportQuadAttributeLocations","PickId","pickObjects","viewportQuad_vertexArray","componentDatatype","componentsPerAttribute","indices","Uint16Array","interleave","createViewportQuadCommand","overrides","getObjectByPickColor","pickColor","toRgba","object","createPickId","propertyValue","ContextLimits","_maximumCombinedTextureImageUnits","_maximumCubeMapSize","_maximumFragmentUniformVectors","_maximumTextureImageUnits","_maximumRenderbufferSize","_maximumTextureSize","_maximumVaryingVectors","_maximumVertexAttributes","_maximumVertexTextureImageUnits","_maximumVertexUniformVectors","_minimumAliasedLineWidth","_maximumAliasedLineWidth","_minimumAliasedPointSize","_maximumAliasedPointSize","_maximumViewportWidth","_maximumViewportHeight","_maximumTextureFilterAnisotropy","_maximumDrawBuffers","_maximumColorAttachments","_maximumSamples","_highpFloatSupported","_highpIntSupported","maximumCombinedTextureImageUnits","maximumCubeMapSize","maximumFragmentUniformVectors","maximumTextureImageUnits","maximumRenderbufferSize","maximumTextureSize","maximumVaryingVectors","maximumVertexAttributes","maximumVertexTextureImageUnits","maximumVertexUniformVectors","minimumAliasedLineWidth","maximumAliasedLineWidth","minimumAliasedPointSize","maximumAliasedPointSize","maximumViewportWidth","maximumViewportHeight","maximumTextureFilterAnisotropy","maximumDrawBuffers","maximumColorAttachments","maximumSamples","highpFloatSupported","highpIntSupported","CubeMap","faces","internalFormat","preMultiplyAlpha","skipColorSpaceConversion","textureTarget","createTexture","createFace","sourceFace","bufferView","unpackAlignment","pixelStorei","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","NONE","BROWSER_DEFAULT_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_FLIP_Y_WEBGL","texImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","TEXTURE_CUBE_MAP_NEGATIVE_X","TEXTURE_CUBE_MAP_POSITIVE_Y","TEXTURE_CUBE_MAP_NEGATIVE_Y","TEXTURE_CUBE_MAP_POSITIVE_Z","TEXTURE_CUBE_MAP_NEGATIVE_Z","_textureTarget","_texture","_pixelFormat","_pixelDatatype","_hasMipmap","_preMultiplyAlpha","_flipY","_sampler","initialized","_positiveX","_negativeX","_positiveY","_negativeY","_positiveZ","_negativeZ","sampler","minificationFilter","magnificationFilter","mipmap","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","wrapS","TEXTURE_WRAP_T","wrapT","TEXTURE_MAX_ANISOTROPY_EXT","maximumAnisotropy","_target","generateMipmap","hint","GENERATE_MIPMAP_HINT","deleteTexture","CubeMapFace","targetFace","_targetFace","_internalFormat","_initialized","copyFrom","xOffset","yOffset","uploaded","texSubImage2D","copyFromFramebuffer","framebufferXOffset","framebufferYOffset","copyTexSubImage2D","Flags","DrawCommand","_boundingVolume","boundingVolume","_orientedBoundingBox","orientedBoundingBox","modelMatrix","_instanceCount","_pass","_owner","_debugOverlappingFrustums","_pickId","pickId","_flags","cull","occlude","executeInClosestFrustum","debugShowBoundingVolume","castShadows","receiveShadows","pickOnly","depthForTranslucentClassification","dirty","lastDirtyTime","derivedCommands","hasFlag","command","flag","setFlag","debugOverlappingFrustums","shallowClone","attachTexture","attachment","framebufferTexture2D","attachRenderbuffer","renderbuffer","framebufferRenderbuffer","RENDERBUFFER","_getRenderbuffer","Framebuffer","_colorTextures","_colorRenderbuffers","_activeColorAttachments","_depthRenderbuffer","_stencilRenderbuffer","_depthStencilTexture","_depthStencilRenderbuffer","colorRenderbuffers","depthRenderbuffer","depthStencilTexture","depthStencilRenderbuffer","depthAttachment","depthStencilAttachment","stencilRenderbuffer","attachmentEnum","textures","COLOR_ATTACHMENT0","renderbuffers","DEPTH_ATTACHMENT","STENCIL_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","bindDraw","DRAW_FRAMEBUFFER","bindRead","READ_FRAMEBUFFER","getColorRenderbuffer","deleteFramebuffer","FramebufferManager","_numSamples","numSamples","_colorAttachmentsLength","colorAttachmentsLength","_color","_depth","_depthStencil","depthStencil","_supportsDepthTexture","supportsDepthTexture","_createColorAttachments","createColorAttachments","_createDepthAttachments","createDepthAttachments","_width","_height","_multisampleFramebuffer","_colorRenderbuffer","_attachmentsDirty","getRenderFramebuffer","dimensionChanged","samplesChanged","pixelChanged","framebufferDefined","format","setColorTexture","setColorRenderbuffer","getDepthRenderbuffer","setDepthRenderbuffer","getDepthTexture","setDepthTexture","getDepthStencilRenderbuffer","setDepthStencilRenderbuffer","getDepthStencilTexture","setDepthStencilTexture","prepareTextures","blitStencil","blitFramebuffers","destroyFramebuffer","MipmapHint","DONT_CARE","FASTEST","NICEST","mipmapHint","MultisampleFramebuffer","_renderFramebuffer","_colorFramebuffer","getColorFramebuffer","mask","blitFramebuffer","NEAREST","ENVIRONMENT","COMPUTE","GLOBE","TERRAIN_CLASSIFICATION","CESIUM_3D_TILE","CESIUM_3D_TILE_CLASSIFICATION","CESIUM_3D_TILE_CLASSIFICATION_IGNORE_SHOW","OPAQUE","TRANSLUCENT","OVERLAY","NUMBER_OF_PASSES","blendingEnabled","scissorTest","PixelDatatype","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","HALF_FLOAT","UNSIGNED_INT_24_8","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","validateBlendEquation","blendEquation","validateBlendFunction","blendFunction","validateStencilFunction","stencilFunction","validateStencilOperation","stencilOperation","RenderState","polygonOffset","scissorTestRectangle","depthRange","colorMask","blending","blendingColor","stencilTest","stencilTestFrontOperation","frontOperation","stencilTestBackOperation","backOperation","sampleCoverage","frontFace","factor","units","near","far","func","depthMask","stencilMask","equationRgb","equationAlpha","functionSourceRgb","functionSourceAlpha","functionDestinationRgb","functionDestinationAlpha","frontFunction","backFunction","reference","fail","zFail","zPass","invert","cullFace","depthFunction","_applyFunctions","nextRenderStateId","renderStateCache","enableOrDisable","glEnum","enable","disable","applyFrontFace","applyCull","CULL_FACE","applyLineWidth","applyPolygonOffset","POLYGON_OFFSET_FILL","applyScissorTest","SCISSOR_TEST","scissor","applyDepthRange","applyDepthTest","DEPTH_TEST","depthFunc","applyColorMask","applyDepthMask","applyStencilMask","applyBlending","BLEND","blendColor","applyBlendingColor","blendEquationSeparate","blendFuncSeparate","applyStencilTest","STENCIL_TEST","stencilFunc","stencilFuncSeparate","BACK","FRONT","frontOperationFail","frontOperationZFail","frontOperationZPass","stencilOpSeparate","backOperationFail","backOperationZFail","backOperationZPass","applySampleCoverage","SAMPLE_COVERAGE","fromCache","partialKey","JSON","stringify","cachedState","referenceCount","states","fullKey","removeFromCache","fullCachedState","getCache","clearCache","scratchViewport","applyViewport","partialApply","funcs","previousState","nextState","createFuncs","len","previousBlendingEnabled","getState","Renderbuffer","_format","_renderbuffer","createRenderbuffer","bindRenderbuffer","renderbufferStorageMultisample","renderbufferStorage","deleteRenderbuffer","RenderbufferFormat","RGBA4","RGBA8","RGBA16F","RGBA32F","RGB5_A1","RGB565","DEPTH_COMPONENT16","STENCIL_INDEX8","DEPTH_STENCIL","DEPTH24_STENCIL8","renderbufferFormat","getColorFormat","Sampler","_wrapS","_wrapT","_minificationFilter","_magnificationFilter","_maximumAnisotropy","left","right","ShaderBuilder","_positionAttributeLine","_nextAttributeLocation","_attributeLocations","_attributeLines","_structs","_functions","_vertexShaderParts","defineLines","uniformLines","shaderLines","varyingLines","structIds","functionIds","_fragmentShaderParts","addDefine","identifier","destination","line","addStruct","structId","structName","addStructField","addField","addFunction","functionName","signature","addFunctionLines","lines","addLines","addUniform","setPositionAttribute","addAttribute","glslType","getAttributeLocationCount","addVarying","addVertexLines","addFragmentLines","buildShaderProgram","positionAttribute","structLines","shaderBuilder","vertexLines","fragmentLines","struct","generateGlslLines","generateStructLines","functionLines","functionId","generateFunctionLines","concat","defines","sources","ShaderCache","_shaders","_numberOfShaders","_shadersToRelease","destroyShader","cachedShader","derivedKeywords","keyword","finalDestroy","numberOfShaders","replaceShaderProgram","getShaderProgram","vertexShaderText","createCombinedVertexShader","fragmentShaderText","createCombinedFragmentShader","_cachedShader","replaceDerivedShaderProgram","derivedKeyword","cachedDerivedShader","createDerivedShaderProgram","getDerivedShaderProgram","derivedShaderProgram","derivedCachedShader","destroyReleasedShaderPrograms","shadersToRelease","releaseShaderProgram","shaders","ShaderDestination","VERTEX","FRAGMENT","BOTH","ShaderFunction","body","paddedLines","map","nextShaderProgramId","ShaderProgram","spector","replace","modifiedFS","duplicateUniformNames","uniformName","duplicateName","vertexShaderUniforms","extractUniforms","fragmentShaderUniforms","vertexUniformsCount","fragmentUniformsCount","re","RegExp","handleUniformPrecisionMismatches","_logShaderCompilation","_program","_numberOfVertexAttributes","_vertexAttributes","_uniformsByName","_uniforms","_automaticUniforms","_manualUniforms","_duplicateUniformNames","_vertexShaderSource","_vertexShaderText","_fragmentShaderSource","_fragmentShaderText","shaderText","uniformNames","trim","lastIndexOf","replaceCache","vertexAttributes","initialize","numberOfVertexAttributes","allUniforms","shader","reinitialize","oldProgram","program","vsSource","fsSource","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","fragmentShader","createProgram","attachShader","deleteShader","attribute","bindAttribLocation","log","linkProgram","getProgramParameter","LINK_STATUS","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getTranslatedShaderSource","deleteProgram","getProgramInfoLog","createAndLinkProgram","ACTIVE_ATTRIBUTES","uniforms","uniformsByName","samplerUniforms","numberOfUniforms","ACTIVE_UNIFORMS","activeUniform","getActiveUniform","suffix","getUniformLocation","uniform","_setSampler","uniformArray","locations","loc","indexOfBracket","_locations","getUniform","findUniforms","partitionedUniforms","automaticUniforms","manualUniforms","uniformObject","duplicateUniform","automaticUniform","partitionUniforms","numberOfAttributes","attr","getActiveAttrib","getAttribLocation","findVertexAttributes","textureUnitIndex","setSamplerUniforms","__SPECTOR_rebuildProgram","vertexSourceCode","fragmentSourceCode","onCompiled","onError","originalVS","originalFS","regex","e","exec","mu","au","validateProgram","VALIDATE_STATUS","removeComments","numberOfLines","replacement","lineNumber","getDependencyNode","glslSource","nodes","dependencyNode","dependsOn","requiredBy","evaluated","generateDependencies","currentNode","dependencyNodes","czmMatches","elem","pos","forEach","ShaderSource","_czmBuiltinsAndUniforms","referencedNode","getBuiltinsAndAutomaticUniforms","root","nodesWithoutIncomingEdges","allNodes","node","pop","shift","badNodes","sortDependencies","builtinsSource","combineShader","isFragmentShader","combinedSources","version","group1","extensions","pickColorQualifier","createPickFragmentShaderSource","extensionsLength","define","includeBuiltIns","replaceMain","renamedMain","builtinName","containsString","string","sourcesLength","findFirstString","strings","stringsLength","createPickVertexShaderSource","normalVaryingNames","findNormalVarying","positionVaryingNames","findPositionVarying","ShaderStruct","fields","field","Texture","videoWidth","videoHeight","isCompressed","mipWidth","mipHeight","compressedTexImage2D","mipLevels","copyTexImage2D","_dimensions","fromFramebuffer","dimensions","textureWidth","textureHeight","TextureCache","_textures","_numberOfTextures","_texturesToRelease","numberOfTextures","getTexture","cachedTexture","addTexture","destroyReleasedTextures","texturesToRelease","TextureMagnificationFilter","LINEAR","textureMagnificationFilter","TextureMinificationFilter","NEAREST_MIPMAP_NEAREST","LINEAR_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_LINEAR","textureMinificationFilter","TextureWrap","CLAMP_TO_EDGE","REPEAT","MIRRORED_REPEAT","textureWrap","UniformState","_viewport","_viewportCartesian4","_viewportDirty","_viewportOrthographicMatrix","_viewportTransformation","_model","_view","_inverseView","_projection","_infiniteProjection","_entireFrustum","_currentFrustum","_frustumPlanes","_farDepthFromNearPlusOne","_log2FarDepthFromNearPlusOne","_oneOverLog2FarDepthFromNearPlusOne","_frameState","_temeToPseudoFixed","_view3DDirty","_view3D","_inverseView3DDirty","_inverseView3D","_inverseModelDirty","_inverseModel","_inverseTransposeModelDirty","_inverseTransposeModel","_viewRotation","_inverseViewRotation","_viewRotation3D","_inverseViewRotation3D","_inverseProjectionDirty","_inverseProjection","_modelViewDirty","_modelView","_modelView3DDirty","_modelView3D","_modelViewRelativeToEyeDirty","_modelViewRelativeToEye","_inverseModelViewDirty","_inverseModelView","_inverseModelView3DDirty","_inverseModelView3D","_viewProjectionDirty","_viewProjection","_inverseViewProjectionDirty","_inverseViewProjection","_modelViewProjectionDirty","_modelViewProjection","_inverseModelViewProjectionDirty","_inverseModelViewProjection","_modelViewProjectionRelativeToEyeDirty","_modelViewProjectionRelativeToEye","_modelViewInfiniteProjectionDirty","_modelViewInfiniteProjection","_normalDirty","_normal3DDirty","_normal3D","_inverseNormalDirty","_inverseNormal","_inverseNormal3DDirty","_inverseNormal3D","_encodedCameraPositionMCDirty","_encodedCameraPositionMC","_cameraPosition","_sunPositionWC","_sunPositionColumbusView","_sunDirectionWC","_sunDirectionEC","_moonDirectionEC","_lightDirectionWC","_lightDirectionEC","_lightColor","_lightColorHdr","_mode","_mapProjection","_cameraDirection","_cameraRight","_cameraUp","_frustum2DWidth","_eyeHeight","_eyeHeight2D","_pixelRatio","_orthographicIn3D","_backgroundColor","_brdfLut","_environmentMap","_sphericalHarmonicCoefficients","_specularEnvironmentMaps","_specularEnvironmentMapsDimensions","_specularEnvironmentMapsMaximumLOD","_fogDensity","_invertClassificationColor","_splitPosition","_pixelSizePerMeter","_geometricToleranceOverMeter","_minimumDisableDepthTestDistance","v","vc","z","w","cleanViewport","matrix","inverseTransposeModel","m","updateView3D","updateInverseView3D","mv","mvRte","cleanModelViewRelativeToEye","cleanNormal","cleanNormal3D","cleanEncodedCameraPositionMC","high","low","transformMatrix","sunCartographicScratch","updateCamera","camera","viewMatrix","setInverseView","inverseViewMatrix","positionWC","directionWC","rightWC","upWC","positionCartographic","maximumRadius","setCamera","frustum","updateFrustum","projectionMatrix","infiniteProjectionMatrix","setInfiniteProjection","_offCenterFrustum","top","bottom","updatePass","EMPTY_ARRAY","defaultLight","mapProjection","sunCartographic","project","setSunAndMoonDirections","light","direction","intensity","maximumComponent","brdfLutGenerator","colorTexture","fog","density","fov","pixelSizePerMeter","tan","maximumScreenSpaceError","POSITIVE_INFINITY","cameraPositionMC","view2Dto3DPScratch","view2Dto3DRScratch","view2Dto3DUScratch","view2Dto3DDScratch","view2Dto3DCartographicScratch","view2Dto3DCartesian3Scratch","view2Dto3DMatrix4Scratch","position2D","direction2D","right2D","up2D","frustum2DWidth","p","r","u","cartographic","unproject","PI","position3D","cartographicToCartesian","enuToFixed","view2Dto3D","hasVertexBuffer","vertexBuffer","hasValue","strideInBytes","instanceDivisor","vertexAttrib","ARRAY_BUFFER","vertexAttribPointer","enableVertexAttribArray","disableVertexAttribArray","vertexAttrib1fv","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","ELEMENT_ARRAY_BUFFER","VertexArray","vaAttributes","hasInstancedAttributes","hasConstantAttributes","uniqueIndices","_numberOfVertices","_hasInstancedAttributes","_hasConstantAttributes","_vao","_attributes","_indexBuffer","computeNumberOfVertices","computeAttributeSizeInBytes","fromGeometry","createdVAAttributes","vertexArrayAttributes","interleavedAttributes","namesLength","currentNumberOfVertices","sort","vertexSizeInBytes","offsetsInBytes","maxComponentSizeInBytes","remainder","ArrayBuffer","views","pointer","strideInComponentType","n","numberOfComponents","interleaveAttributes","getAttribute","divisors","maxAttributes","setVertexAttribDivisor","setConstantAttributes","VertexArrayFacade","sizeInVertices","instanced","attrs","_verifyAttributes","precreatedAttributes","attributesByUsage","attributesForUsage","compare","_allBuffers","_vertexSizeInBytes","needsCommit","arrayBuffer","arrayViews","_createArrayViews","_instanced","_precreated","writers","resize","vertexSizeInComponentType","allBuffers","_resize","_appendWriters","destroyVA","destView","sourceView","sourceLength","createWriters","component0","component1","component2","component3","commit","vertexArrayFacade","vertexBufferSizeInBytes","vertexBufferDefined","subCommit","offsetInVertices","lengthInVertices","byteOffset","recreateVA","chunkSize","numberOfVertexArrays","ceil","_appendAttributes","indicesCount","vertexBufferOffset","endSubCommits","UniformFloat","_location","UniformFloatVec2","UniformFloatVec3","UniformFloatVec4","UniformSampler","UniformInt","UniformIntVec2","UniformIntVec3","UniformIntVec4","uniform1f","uniform2f","uniform3f","uniform4f","uniform1i","uniform2i","uniform3i","uniform4i","scratchUniformArray","Float32Array","UniformMat2","uniformMatrix2fv","scratchMat3Array","UniformMat3","uniformMatrix3fv","scratchMat4Array","UniformMat4","uniformMatrix4fv","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","SAMPLER_2D","SAMPLER_CUBE","INT","BOOL","INT_VEC2","BOOL_VEC2","INT_VEC3","BOOL_VEC3","INT_VEC4","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","UniformArrayFloat","UniformArrayFloatVec2","UniformArrayFloatVec3","UniformArrayFloatVec4","UniformArraySampler","UniformArrayInt","Int32Array","UniformArrayIntVec2","UniformArrayIntVec3","UniformArrayIntVec4","UniformArrayMat2","UniformArrayMat3","UniformArrayMat4","arraybuffer","changed","uniform1fv","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform2iv","uniform3iv","uniform4iv","freezeRenderState","propName","propNames","urls","flipOptions","preferImageBitmap","facePromises","fetchImage","images","replaceInSourceString","str","splitSource","splitSourceLength","setAdd","variable","removeExtension","webgl2UniqueID","replaceInSourceRegex","outputDeclarationRegex","split","test","outputDeclarationLine","outputVariables","fragDataString","newOutput","czmFragColor","findInSource","variableMap","layoutVariables","numLayoutVariables","stack","hasIF","hasELSE","hasENDIF","op","varIndex","varName","getVariablePreprocessorBranch","lineAdds","layoutDeclaration","variableName","entry","versionThree","foundVersion","wholeSource","compileSource"],"sourceRoot":""}